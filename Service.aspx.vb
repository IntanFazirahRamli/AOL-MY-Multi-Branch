Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Drawing
Imports System.IO
Imports System.Net
Imports System.Text
Imports CrystalDecisions.Web
Imports CrystalDecisions.CrystalReports.Engine
Imports System.Data.Odbc
Imports CrystalDecisions.Shared
Imports System.Drawing.Drawing2D
Imports Ionic.Zip
Imports System.Globalization
Imports EASendMail



Imports NPOI.SS.UserModel
Imports NPOI.XSSF.UserModel
Imports NPOI.HSSF.UserModel

Partial Class Service
    Inherits System.Web.UI.Page

    Public isInPage As Boolean = False

    Private Shared gddlvalue As String
    'Private IDLETIMEOUT As String = ConfigurationManager.AppSettings("IDLETIMEOUT")
    Public Message As String = String.Empty
    ' To store the Error or Message
    Private Word As Microsoft.Office.Interop.Word.ApplicationClass
    ' The Interop Object for Word
    Private Excel As Microsoft.Office.Interop.Excel.ApplicationClass
    ' The Interop Object for Excel
    Private Unknown As Object = Type.Missing
    ' For passing Empty values
    Public Enum StatusType
        SUCCESS
        FAILED
    End Enum
    ' To Specify Success or Failure Types
    Public Status As StatusType

    Dim rcno As String
    Dim tot As Decimal

    Public ButtonPressed As Char
    Dim SearchCustRequest As Boolean = False
    Dim SearchCustRequestText As String = ""

    Private Property PostedFile() As HttpPostedFile
        Get
            If Page.Session("postedFile") IsNot Nothing Then
                Return Page.Session("postedFile")
            End If
            Return Nothing
        End Get
        Set(ByVal value As HttpPostedFile)
            Page.Session("postedFile") = value
        End Set
    End Property


    Protected Sub btnPopUpSchedulerSearch_Click(sender As Object, e As EventArgs)
      
    End Sub

    'Private Sub GenerateSchedulerAlphabets()
    '    Dim alphabets As New List(Of ListItem)()
    '    Dim alphabet As New ListItem()
    '    alphabet.Value = "A"
    '    alphabet.Selected = alphabet.Value.Equals(ViewState("SchedulerCurrentAlphabet"))
    '    alphabets.Add(alphabet)
    '    For i As Integer = 66 To 90
    '        alphabet = New ListItem()
    '        alphabet.Value = [Char].ConvertFromUtf32(i)
    '        alphabet.Selected = alphabet.Value.Equals(ViewState("SchedulerCurrentAlphabet"))
    '        alphabets.Add(alphabet)
    '    Next
    '    rptSchedulerAlphabets.DataSource = alphabets
    '    rptSchedulerAlphabets.DataBind()
    'End Sub

    'Protected Sub SchedulerAlphabet_Click(sender As Object, e As EventArgs)
    '    'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
    '    'select another alphabet ---records are not selected

    '    Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
    '    ViewState("SchedulerCurrentAlphabet") = lnkAlphabet.Text
    '    Me.GenerateSchedulerAlphabets()
    '    gvScheduler.PageIndex = 0

    '    SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + lnkAlphabet.Text + "%'"

    '    'If txtPopUpScheduler.Text.Trim = "" Then
    '    '    SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + lnkAlphabet.Text + "%'"
    '    'Else
    '    '    SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpScheduler.Text.Trim.ToUpper + "%'"
    '    'End If

    '    SqlDSScheduler.DataBind()
    '    gvScheduler.DataBind()
    '    mdlPopUpScheduler.Show()
    'End Sub

    Protected Sub gvScheduler_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvScheduler.SelectedIndexChanged
        Try
            If (gvScheduler.SelectedRow.Cells(1).Text = "&nbsp;") Then
                txtScheduler.Text = " "
            Else
                txtScheduler.Text = gvScheduler.SelectedRow.Cells(1).Text
            End If

            mdlPopUpScheduler.Hide()
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvScheduler_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvScheduler.PageIndexChanging
        gvScheduler.PageIndex = e.NewPageIndex
        If txtPopUpScheduler.Text.Trim = "" Then
            SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0"
        Else
            ' SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("SchedulerCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpScheduler.Text.Trim.ToUpper + "%'"
            SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and upper(Name) Like '%" + txtPopupSchedulerSearch.Text.Trim.ToUpper + "%'"
        End If

        SqlDSScheduler.DataBind()
        gvScheduler.DataBind()
        mdlPopUpScheduler.Show()
    End Sub

    Protected Sub txtPopUpScheduler_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpScheduler.TextChanged
        If txtPopUpScheduler.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter Scheduler", "str")
        Else
            txtPopupSchedulerSearch.Text = txtPopUpScheduler.Text

            '  SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("SchedulerCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpScheduler.Text.Trim.ToUpper + "%'"
            SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O' and upper(Name) Like '%" + txtPopupSchedulerSearch.Text.Trim.ToUpper + "%'"
            SqlDSScheduler.DataBind()
            gvScheduler.DataBind()
            mdlPopUpScheduler.Show()
            txtIsPopUp.Text = "Scheduler"
        End If
        txtPopUpScheduler.Text = "Search Scheduler Here"
    End Sub

    Protected Sub btnSchedule_Click(sender As Object, e As ImageClickEventArgs) Handles btnSchedule.Click
        Try
            If String.IsNullOrEmpty(txtScheduler.Text.Trim) = False Then
                txtPopUpScheduler.Text = txtScheduler.Text.Trim
                txtPopupSchedulerSearch.Text = txtPopUpScheduler.Text

                '  SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("SchedulerCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpScheduler.Text.Trim.ToUpper + "%'"
                SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O' and upper(Name) Like '%" + txtPopupSchedulerSearch.Text.Trim.ToUpper + "%'"
                SqlDSScheduler.DataBind()
                gvScheduler.DataBind()
            Else
                'txtPopUpScheduler.Text = ""
                'txtPopupSchedulerSearch.Text = ""
                SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O'"
                SqlDSScheduler.DataBind()
                gvScheduler.DataBind()
            End If

            mdlPopUpScheduler.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSchedule_Click", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub
    'Private Sub GenerateTeamAlphabets()
    '    Dim alphabets As New List(Of ListItem)()
    '    Dim alphabet As New ListItem()
    '    alphabet.Value = "A"
    '    alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
    '    alphabets.Add(alphabet)
    '    For i As Integer = 66 To 90
    '        alphabet = New ListItem()
    '        alphabet.Value = [Char].ConvertFromUtf32(i)
    '        alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
    '        alphabets.Add(alphabet)
    '    Next
    '    rptrTeam.DataSource = alphabets
    '    rptrTeam.DataBind()
    'End Sub

    'Protected Sub TeamAlphabet_Click(sender As Object, e As EventArgs)

    '    Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
    '    ViewState("TeamCurrentAlphabet") = lnkAlphabet.Text
    '    Me.GenerateTeamAlphabets()
    '    gvTeam.PageIndex = 0

    '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and status<> 'N' and TeamName like '" + lnkAlphabet.Text + "%'"

    '    'If txtPopUpTeam.Text.Trim = "" Then
    '    '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + lnkAlphabet.Text + "%'"
    '    'Else
    '    '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + lnkAlphabet.Text + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
    '    'End If

    '    SqlDSTeam.DataBind()
    '    gvTeam.DataBind()
    '    mdlPopUpTeam.Show()
    'End Sub

    Protected Sub gvTeam_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvTeam.SelectedIndexChanged
        Try
            If txtModal.Text = "Team" Then
                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtTeam.Text = " "
                Else
                    txtTeam.Text = gvTeam.SelectedRow.Cells(1).Text
                End If
                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtServiceBy.Text = " "
                Else
                    txtServiceBy.Text = gvTeam.SelectedRow.Cells(3).Text
                End If

                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtIncharge.Text = " "
                Else
                    txtIncharge.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtSupervisor.Text = " "
                Else
                    txtSupervisor.Text = gvTeam.SelectedRow.Cells(4).Text
                End If
                If gvTeam.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtVehNo.Text = " "
                Else
                    txtVehNo.Text = gvTeam.SelectedRow.Cells(5).Text
                End If
            End If
            If txtModal.Text = "TeamSearch" Then
                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtSearch1Team.Text = " "
                Else
                    txtSearch1Team.Text = gvTeam.SelectedRow.Cells(1).Text
                End If
            End If
            'If txtModal.Text = "SvcBySearch" Then
            '    If gvTeam.SelectedRow.Cells(2).Text = "&nbsp;" Then
            '        txtSearch1SvcBy.Text = " "
            '    Else
            '        txtSearch1SvcBy.Text = gvTeam.SelectedRow.Cells(2).Text
            '    End If
            'End If
            'If txtModal.Text = "InchargeSearch" Then
            '    If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtSearch1Incharge.Text = " "
            '    Else
            '        txtSearch1Incharge.Text = gvTeam.SelectedRow.Cells(3).Text
            '    End If
            'End If
            If txtModal.Text = "TeamID" Then
                If gvTeam.SelectedRow.Cells(2).Text = "&nbsp;" Then
                    txtSearchSvcBy.Text = " "
                Else
                    txtSearchSvcBy.Text = gvTeam.SelectedRow.Cells(2).Text
                End If
                ModalPopupExtender1.Show()

            End If
            If txtModal.Text = "ImgEditTeam" Then
                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtEditTeam.Text = " "
                Else
                    txtEditTeam.Text = gvTeam.SelectedRow.Cells(1).Text
                End If
                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditIncharge.Text = " "
                Else
                    txtEditIncharge.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditSvcBy.Text = " "
                Else
                    txtEditSvcBy.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtEditSupervisor.Text = " "
                Else
                    txtEditSupervisor.Text = gvTeam.SelectedRow.Cells(4).Text
                End If
                If gvTeam.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtEditVehNo.Text = " "
                Else
                    txtEditVehNo.Text = gvTeam.SelectedRow.Cells(5).Text
                End If
                mdlPopupEditTeam.Show()

            End If
            If txtModal.Text = "ImgEditTeam1" Then
                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtEditTeam1.Text = " "
                Else
                    txtEditTeam1.Text = gvTeam.SelectedRow.Cells(1).Text
                End If
                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditIncharge1.Text = " "
                Else
                    txtEditIncharge1.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditSvcBy1.Text = " "
                Else
                    txtEditSvcBy1.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtEditSupervisor1.Text = " "
                Else
                    txtEditSupervisor1.Text = gvTeam.SelectedRow.Cells(4).Text
                End If
                If gvTeam.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtEditVehNo1.Text = " "
                Else
                    txtEditVehNo1.Text = gvTeam.SelectedRow.Cells(5).Text
                End If
                '   mdlPopupEditTeam.Show()
                mdlPopupSchDate.Show()

            End If
            'If txtModal.Text = "EditIncharge" Then
            '    If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtEditIncharge.Text = " "
            '    Else
            '        txtEditIncharge.Text = gvTeam.SelectedRow.Cells(3).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "EditSvcBy" Then
            '    If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtEditSvcBy.Text = " "
            '    Else
            '        txtEditSvcBy.Text = gvTeam.SelectedRow.Cells(3).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "EditVehNo" Then
            '    If gvTeam.SelectedRow.Cells(5).Text = "&nbsp;" Then
            '        txtEditVehNo.Text = " "
            '    Else
            '        txtEditVehNo.Text = gvTeam.SelectedRow.Cells(5).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            mdlPopUpTeam.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GVTEAM_SELECTEDINDEXCHANGED", ex.Message.ToString, txtModal.Text + " " + gvTeam.SelectedRow.Cells(1).Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvTeamNew_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvTeamNew.SelectedIndexChanged
        Try
            If txtModal.Text = "Team" Then
                If gvTeamNew.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtTeam.Text = " "
                Else
                    txtTeam.Text = gvTeamNew.SelectedRow.Cells(1).Text
                End If
                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtServiceBy.Text = " "
                Else
                    txtServiceBy.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If

                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtIncharge.Text = " "
                Else
                    txtIncharge.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If
                If gvTeamNew.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtSupervisor.Text = " "
                Else
                    txtSupervisor.Text = gvTeamNew.SelectedRow.Cells(4).Text
                End If
                If gvTeamNew.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtVehNo.Text = " "
                Else
                    txtVehNo.Text = gvTeamNew.SelectedRow.Cells(5).Text
                End If
            End If
            If txtModal.Text = "TeamSearch" Then
                If gvTeamNew.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtSearch1Team.Text = " "
                Else
                    txtSearch1Team.Text = gvTeamNew.SelectedRow.Cells(1).Text
                End If
            End If
            'If txtModal.Text = "SvcBySearch" Then
            '    If gvTeam.SelectedRow.Cells(2).Text = "&nbsp;" Then
            '        txtSearch1SvcBy.Text = " "
            '    Else
            '        txtSearch1SvcBy.Text = gvTeam.SelectedRow.Cells(2).Text
            '    End If
            'End If
            'If txtModal.Text = "InchargeSearch" Then
            '    If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtSearch1Incharge.Text = " "
            '    Else
            '        txtSearch1Incharge.Text = gvTeam.SelectedRow.Cells(3).Text
            '    End If
            'End If
            If txtModal.Text = "TeamID" Then
                If gvTeamNew.SelectedRow.Cells(2).Text = "&nbsp;" Then
                    txtSearchSvcBy.Text = " "
                Else
                    txtSearchSvcBy.Text = gvTeamNew.SelectedRow.Cells(2).Text
                End If
                ModalPopupExtender1.Show()

            End If
            If txtModal.Text = "ImgEditTeam" Then
                If gvTeamNew.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtEditTeam.Text = " "
                Else
                    txtEditTeam.Text = gvTeamNew.SelectedRow.Cells(1).Text
                End If
                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditIncharge.Text = " "
                Else
                    txtEditIncharge.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If
                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditSvcBy.Text = " "
                Else
                    txtEditSvcBy.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If
                If gvTeamNew.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtEditSupervisor.Text = " "
                Else
                    txtEditSupervisor.Text = gvTeamNew.SelectedRow.Cells(4).Text
                End If
                If gvTeamNew.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtEditVehNo.Text = " "
                Else
                    txtEditVehNo.Text = gvTeamNew.SelectedRow.Cells(5).Text
                End If
                mdlPopupEditTeam.Show()

            End If
            If txtModal.Text = "ImgEditTeam1" Then
                If gvTeamNew.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtEditTeam1.Text = " "
                Else
                    txtEditTeam1.Text = gvTeamNew.SelectedRow.Cells(1).Text
                End If
                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditIncharge1.Text = " "
                Else
                    txtEditIncharge1.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If
                If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtEditSvcBy1.Text = " "
                Else
                    txtEditSvcBy1.Text = gvTeamNew.SelectedRow.Cells(3).Text
                End If
                If gvTeamNew.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtEditSupervisor1.Text = " "
                Else
                    txtEditSupervisor1.Text = gvTeamNew.SelectedRow.Cells(4).Text
                End If
                If gvTeamNew.SelectedRow.Cells(5).Text = "&nbsp;" Then
                    txtEditVehNo1.Text = " "
                Else
                    txtEditVehNo1.Text = gvTeamNew.SelectedRow.Cells(5).Text
                End If
                '   mdlPopupEditTeam.Show()
                mdlPopupSchDate.Show()

            End If
            'If txtModal.Text = "EditIncharge" Then
            '    If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtEditIncharge.Text = " "
            '    Else
            '        txtEditIncharge.Text = gvTeamNew.SelectedRow.Cells(3).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "EditSvcBy" Then
            '    If gvTeamNew.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '        txtEditSvcBy.Text = " "
            '    Else
            '        txtEditSvcBy.Text = gvTeamNew.SelectedRow.Cells(3).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "EditVehNo" Then
            '    If gvTeamNew.SelectedRow.Cells(5).Text = "&nbsp;" Then
            '        txtEditVehNo.Text = " "
            '    Else
            '        txtEditVehNo.Text = gvTeamNew.SelectedRow.Cells(5).Text
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            mdlPopUpTeamNew.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GVTEAM_SELECTEDINDEXCHANGED", ex.Message.ToString, txtModal.Text + " " + gvTeamNew.SelectedRow.Cells(1).Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub




    Protected Sub gvTeam_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvTeam.PageIndexChanging
        Try
            gvTeam.PageIndex = e.NewPageIndex

            If txtPopUpTeam.Text.Trim = "" Then
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and Status<>'N' order by TeamName"
            Else
                ' SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                '  SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' and Status <> 'N'"
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

            End If

            SqlDSTeam.DataBind()
            gvTeam.DataBind()
            mdlPopUpTeam.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvTeam_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvTeamNew_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvTeamNew.PageIndexChanging
        Try
            gvTeamNew.PageIndex = e.NewPageIndex

            If txtPopUpTeamNew.Text.Trim = "" Then
                SqlDSTeamNew.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and Status<>'N' order by TeamName"
            Else
                ' SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                '  SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' and Status <> 'N'"
                SqlDSTeamNew.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

            End If

            SqlDSTeamNew.DataBind()
            gvTeamNew.DataBind()
            mdlPopUpTeamNew.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvTeam_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub



    Protected Sub btnPopUpTeamSearch_Click(sender As Object, e As EventArgs)
       
    End Sub

    

    Protected Sub txtPopUpTeamNew_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpTeamNew.TextChanged
        Try
            If txtPopUpTeamNew.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                Dim strsql As String
                strsql = ""
                'To assisgn the Team IDs with single quotes to the hidden value that are entered via Team Search Text Box inside the Team magnifier popup.
                If txtPopUpTeamNew.Text.Contains(",") Or txtPopUpTeamNew.Text <> "" Then
                    Dim team As List(Of String) = txtPopUpTeamNew.Text.Split(",").ToList()
                    hdnTeamIDList.Value = ""
                    For Each str As String In team
                        hdnTeamIDList.Value = hdnTeamIDList.Value & "'" & str & "',"
                    Next
                    hdnTeamIDList.Value = hdnTeamIDList.Value.TrimEnd(",")
                End If

                txtPopupTeamSearchNew.Text = txtPopUpTeamNew.Text

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

                If Not String.IsNullOrEmpty(hdnTeamIDList.Value) And hdnTeamIDList.Value.Contains(",") Then
                    strsql = "SELECT TeamID, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where (upper(TeamName) IN (" + hdnTeamIDList.Value.Trim.ToUpper + ") or upper(Inchargeid) IN (" + hdnTeamIDList.Value.Trim.ToUpper + ") or upper(TeamID) IN (" + hdnTeamIDList.Value.Trim.ToUpper + ")) and Status <> 'N'"
                Else
                    strsql = "SELECT TeamID, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearchNew.Text.Trim.ToUpper + "%') and Status <> 'N' "
                End If


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeamNew.SelectCommand = strsql


                gvTeamNew.DataSource = Nothing
                SqlDSTeamNew.DataBind()
                gvTeamNew.DataBind()

                ' Checked the values which is entered in Team TextBox Start
                If String.IsNullOrEmpty(txtPopUpTeamNew.Text.Trim) = False Then
                    Dim team As List(Of String) = txtPopUpTeamNew.Text.Split(",").ToList()
                    For Each str As String In team
                        For Each item As GridViewRow In gvTeamNew.Rows
                            If (item.Cells(2).Text.Trim.ToUpper()).Contains(str.ToUpper()) Then
                                DirectCast(item.FindControl("cbmultiTeam"), CheckBox).Checked = True
                            End If
                        Next
                    Next
                End If
                ' Checked the values which is entered in Team TextBox End


                mdlPopUpTeamNew.Show()
                txtIsPopUp.Text = "TeamNew"
            End If
            'txtPopUpTeam.Text = "Search Here for Team, Incharge or ServiceBy"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopUpTeam_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnTeam_Click(sender As Object, e As ImageClickEventArgs) Handles btnTeam.Click
        Try
            'SqlDSTeam = SELECT distinct * from tblTeam where status <> 'N' order by TeamID - 16.12.17
            mdlPopUpTeam.TargetControlID = "btnTeam"
            txtModal.Text = "Team"

            Dim strsql As String
            strsql = ""


            If String.IsNullOrEmpty(txtTeam.Text.Trim) = False Then
                txtPopupTeamSearch.Text = txtTeam.Text.Trim
                txtPopUpTeam.Text = txtPopupTeamSearch.Text

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamID, TeamName, InChargeID, Supervisor, Status, VehNos, Location From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql


                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            Else
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamID, TeamName, InChargeID, Supervisor, Status, VehNos, Location From tblTeam where Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql


                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            End If
            mdlPopUpTeam.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTeam_Click", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    'Private Sub GenerateClientAlphabets()
    '    Dim alphabets As New List(Of ListItem)()
    '    Dim alphabet As New ListItem()
    '    alphabet.Value = "A"
    '    alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
    '    alphabets.Add(alphabet)
    '    For i As Integer = 66 To 90
    '        alphabet = New ListItem()
    '        alphabet.Value = [Char].ConvertFromUtf32(i)
    '        alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
    '        alphabets.Add(alphabet)
    '    Next
    '    rptClientAlphabets.DataSource = alphabets
    '    rptClientAlphabets.DataBind()
    'End Sub

    'Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
    '    'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
    '    'select another alphabet ---records are not selected

    '    Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
    '    ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
    '    Me.GenerateClientAlphabets()
    '    gvClient.PageIndex = 0

    '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"

    '    'If txtPopUpClient.Text.Trim = "" Then
    '    '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
    '    'Else
    '    '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
    '    'End If

    '    SqlDSClient.DataBind()
    '    gvClient.DataBind()
    '    mdlPopUpClient.Show()
    'End Sub



    Protected Sub gvClient_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        Try
            If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                txtAccountID.Text = ""
            Else
                txtAccountID.Text = gvClient.SelectedRow.Cells(2).Text.Trim
            End If

            If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                txtCustName.Text = ""
            Else
                txtCustName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim).ToString
            End If
            'If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
            '    txtCustContact.Text = ""
            'Else
            '    txtCustContact.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(4).Text.Trim).ToString
            'End If

            'If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
            '    txtCustAddress.Text = ""
            'Else
            '    txtCustAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then

            '    txtCustTel2.Text = ""
            'Else
            '    txtCustTel2.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim).ToString
            'End If


            'If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
            '    txtCustStreet.Text = ""
            'Else
            '    txtCustStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
            '    txtCustBuilding.Text = ""
            'Else
            '    txtCustBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
            '    txtCustCity.Text = ""
            'Else
            '    txtCustCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
            '    txtCustState.Text = ""
            'Else
            '    txtCustState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(17).Text = "&nbsp;") Then
            '    txtCustCountry.Text = ""
            'Else
            '    If Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.Trim).ToString = "S'pore" Or Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.Trim).ToString = "S'PORE" Then
            '        txtCustCountry.Text = "SINGAPORE"
            '    Else
            '        txtCustCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.ToUpper).ToString
            '    End If

            'End If
            'If (gvClient.SelectedRow.Cells(18).Text = "&nbsp;") Then
            '    txtCustPostal.Text = ""
            'Else
            '    txtCustPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(18).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(19).Text = "&nbsp;") Then
            '    txtCustFax.Text = ""
            'Else
            '    txtCustFax.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(19).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(20).Text = "&nbsp;") Then
            '    txtCustMobile.Text = ""
            'Else
            '    txtCustMobile.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(20).Text.Trim).ToString
            'End If
            'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
            '    txtCustTelephone.Text = ""
            'Else
            '    txtCustTelephone.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim).ToString
            'End If


            'retrieve office address and billing address

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT accountid,Address1, AddStreet, AddBuilding, AddCity, AddCountry,AddState,AddPostal,BillingAddress, BillingName, BillAddress1, BillStreet, BillBuilding, BillCity, BillCountry, BillState, BillPostal,telephone2,telephone,mobile,fax,contactperson  FROM tblcompany where accountid='" & txtAccountID.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtOffAddress1.Text = dt.Rows(0)("Address1").ToString
                txtCustAddress.Text = dt.Rows(0)("Address1").ToString

                txtCustTel2.Text = dt.Rows(0)("Telephone2").ToString

                txtOffStreet.Text = dt.Rows(0)("AddStreet").ToString
                txtCustStreet.Text = dt.Rows(0)("AddStreet").ToString

                txtOffBuilding.Text = dt.Rows(0)("AddBuilding").ToString
                txtCustBuilding.Text = dt.Rows(0)("AddBuilding").ToString

                If dt.Rows(0)("AddCity").ToString <> "" Then
                    ddlOffCity.Text = dt.Rows(0)("AddCity").ToString
                    txtCustCity.Text = dt.Rows(0)("AddCity").ToString
                End If

                If dt.Rows(0)("AddCountry").ToString <> "" Then
                    If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
                        ddlOffCountry.Text = "SINGAPORE"
                    Else
                        ddlOffCountry.Text = dt.Rows(0)("AddCountry").ToString
                        txtCustCountry.Text = dt.Rows(0)("AddCountry").ToString
                    End If
                End If
                If dt.Rows(0)("AddState").ToString <> "" Then
                    ddlOffState.Text = dt.Rows(0)("AddState").ToString
                    txtCustState.Text = dt.Rows(0)("AddState").ToString
                End If

                txtOffPostal.Text = dt.Rows(0)("AddPostal").ToString
                txtCustPostal.Text = dt.Rows(0)("AddPostal").ToString

                txtCustMobile.Text = dt.Rows(0)("Mobile").ToString

                txtCustTelephone.Text = dt.Rows(0)("Telephone").ToString
                txtCustFax.Text = dt.Rows(0)("Fax").ToString

                txtCustContact.Text = dt.Rows(0)("ContactPerson").ToString
                'txtOffContactPerson.Text = dt.Rows(0)("ContactPerson").ToString
                'txtOffPosition.Text = dt.Rows(0)("OffContactPosition").ToString
                'txtOffMobile.Text = dt.Rows(0)("Mobile").ToString

                'txtOffContactNo.Text = dt.Rows(0)("Telephone").ToString
                'txtOffFax.Text = dt.Rows(0)("Fax").ToString
                'txtOffContact2.Text = dt.Rows(0)("Telephone2").ToString
                'txtOffEmail.Text = dt.Rows(0)("Email").ToString

                'txtOffCont1Name.Text = dt.Rows(0)("OffContact1").ToString
                'txtOffCont1Position.Text = dt.Rows(0)("OffContact1Position").ToString
                'txtOffCont1Tel.Text = dt.Rows(0)("OffContact1Tel").ToString
                'txtOffCont1Fax.Text = dt.Rows(0)("OffContact1Fax").ToString
                'txtOffCont1Tel2.Text = dt.Rows(0)("OffContact1Tel2").ToString
                'txtOffCont1Mobile.Text = dt.Rows(0)("OffContact1Mobile").ToString
                'txtOffCont1Email.Text = dt.Rows(0)("ContactPersonEmail").ToString

                If dt.Rows(0)("BillingAddress").ToString = "1" Then
                    chkOffAddr.Checked = True
                Else
                    chkOffAddr.Checked = False
                End If

                txtBillingName.Text = dt.Rows(0)("BillingName").ToString

                txtBillAddress.Text = dt.Rows(0)("BillAddress1").ToString
                txtBillStreet.Text = dt.Rows(0)("BillStreet").ToString
                txtBillBuilding.Text = dt.Rows(0)("BillBuilding").ToString
                If dt.Rows(0)("BillCity").ToString <> "" Then
                    ddlBillCity.Text = dt.Rows(0)("BillCity").ToString
                End If

                If dt.Rows(0)("BillCountry").ToString <> "" Then
                    If Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
                        ddlBillCountry.Text = "SINGAPORE"
                    Else
                        ddlBillCountry.Text = dt.Rows(0)("BillCountry").ToString
                    End If
                End If

                If dt.Rows(0)("BillState").ToString <> "" Then
                    ddlBillState.Text = dt.Rows(0)("BillState").ToString
                End If
                txtBillPostal.Text = dt.Rows(0)("BillPostal").ToString

                'txtBillCP1Contact.Text = dt.Rows(0)("BillContactPerson").ToString
                'txtBillCP1Position.Text = dt.Rows(0)("BillContact1Position").ToString
                'txtBillCP1Tel.Text = dt.Rows(0)("BillTelephone").ToString
                'txtBillCP1Fax.Text = dt.Rows(0)("BillFax").ToString
                'txtBillCP1Tel2.Text = dt.Rows(0)("BillTelephone2").ToString
                'txtBillCP1Mobile.Text = dt.Rows(0)("BillMobile").ToString
                'txtBillCP1Email.Text = dt.Rows(0)("BillContact1Email").ToString

                'txtBillCP2Contact.Text = dt.Rows(0)("BillContact2").ToString
                'txtBillCP2Position.Text = dt.Rows(0)("BillContact2Position").ToString
                'txtBillCP2Tel.Text = dt.Rows(0)("BillContact2Tel").ToString
                'txtBillCP2Fax.Text = dt.Rows(0)("BillContact2Fax").ToString
                'txtBillCP2Tel2.Text = dt.Rows(0)("BillContact2Tel2").ToString
                'txtBillCP2Mobile.Text = dt.Rows(0)("BillContact2Mobile").ToString
                'txtBillCP2Email.Text = dt.Rows(0)("BillContact2Email").ToString
            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            mdlPopUpClient.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GVCLIENT_SELECTEDINDEXCHANGED", ex.Message.ToString, txtAccountID.Text)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging
        Try
            If String.IsNullOrEmpty(txtPopupClientSearch.Text.Trim) Then
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId"

                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId "

                End If


            Else
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"

                End If
            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            gvClient.PageIndex = e.NewPageIndex

            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvClient_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As EventArgs)
        mdlPopUpClient.Show()
    End Sub


    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        Try
            If txtPopUpClient.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                txtPopupClientSearch.Text = txtPopUpClient.Text
                'If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                '    SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "

                'ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                '    SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "

                'End If
                'in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "

                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "
                    End If
                Else
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "

                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False order by A.Accountid, b.LocationId "
                    End If
                End If



                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopUp.Text = "Client"
            End If

            txtPopUpClient.Text = "Search Here for AccountID or Client details"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopUpClient_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        Try
            If String.IsNullOrEmpty(ddlAccountType.Text) Then
                '  MessageBox.Message.Alert(Page, "Select Contact Type to proceed!!!", "str")
                lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If
            If ddlAccountType.Text = txtDDLText.Text Then
                '  MessageBox.Message.Alert(Page, "Select Contact Type to proceed!!!", "str")
                lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            'If String.IsNullOrEmpty(txtAccountID.Text.Trim) = False Then
            '    txtPopUpClient.Text = txtAccountID.Text
            '    txtPopupClientSearch.Text = txtPopUpClient.Text
            '    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
            '        SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
            '    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
            '        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"

            '    End If
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            'Else
            '    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
            '        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId"

            '    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
            '        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,  B.PersonGroupD as CompanyGroupD  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId "

            '    End If
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            'End If


            If String.IsNullOrEmpty(txtAccountID.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountID.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD, A.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
                    End If
                Else
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT  a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.PersonGroupD as CompanyGroupD, A.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%')  and  A.Inactive =False order by A.Accountid"
                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,  B.PersonGroupD as CompanyGroupD, A.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId "
                    End If
                Else
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.companygroupD='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSClient.SelectCommand = "SELECT   a.id,a.accountid,a.name, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,  B.PersonGroupD as CompanyGroupD, A.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and B.persongroupD='" + ddlCompanyGrp.Text + "' and  A.Inactive =False order by A.Accountid, b.LocationId "
                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnClient_Click", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub btnImgLoc_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgLoc.Click
        Dim qry As String
        txtPopupLocation.Text = ""
        txtPopupLocationSearch.Text = ""

        Try
            If String.IsNullOrEmpty(txtAccountID.Text) Then
                lblAlert.Text = "SELECT ACCOUNT ID TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If


            If String.IsNullOrEmpty(txtLocationID.Text.Trim) = False Then
                txtPopupLocation.Text = txtLocationID.Text.Trim
                txtPopupLocationSearch.Text = txtPopupLocation.Text

                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblcompanylocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblpersonlocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                Else
                    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                    Return
                End If

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    qry = qry + " and  location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                SqlDSLocation.SelectCommand = qry
                SqlDSLocation.DataBind()
                gvLocation.DataBind()
            Else
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblCompanylocation where  location = '" & txtLocation.Text & "' and accountid = '" + txtAccountID.Text + "' order by locationid"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblPersonlocation where  location = '" & txtLocation.Text & "' and accountid = '" + txtAccountID.Text + "' order by locationid"
                    Else
                        lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                        Return
                    End If
                Else
                    If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                        SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblCompanylocation where  accountid = '" + txtAccountID.Text + "' order by locationid"
                    ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                        SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblPersonlocation where  accountid = '" + txtAccountID.Text + "' order by locationid"
                    Else
                        lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                        Return
                    End If

                End If
              

                SqlDSLocation.DataBind()

                gvLocation.DataBind()
            End If
            mdlPopupLocation.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgLoc_click", ex.Message.ToString, qry)
        End Try

    End Sub


    Protected Sub txtPopupLocation_TextChanged(sender As Object, e As EventArgs) Handles txtPopupLocation.TextChanged

        Dim qry As String
        Try
            If txtPopupLocation.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                txtPopupLocationSearch.Text = txtPopupLocation.Text
               If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblcompanylocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblpersonlocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                Else
                    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                    Return
                End If

                SqlDSLocation.SelectCommand = qry
                SqlDSLocation.DataBind()
                gvLocation.DataBind()
                mdlPopupLocation.Show()
                txtIsPopUp.Text = "Location"
            End If

            txtPopupLocation.Text = "Search Here for Location Address, Postal Code or Description"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopupLocation_TextChanged", ex.Message.ToString, qry)
        End Try
    End Sub

    Protected Sub btnPopupLocationReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopupLocationReset.Click
        Try
            txtPopupLocation.Text = ""
            txtPopupLocationSearch.Text = ""
            If ddlAccountType.SelectedItem.Text = "CORPORATE" Then

                SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblCompanylocation where  accountid = '" + txtAccountID.Text + "' order by locationid"
            ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblPersonlocation where  accountid = '" + txtAccountID.Text + "' order by locationid"

            End If

            SqlDSLocation.DataBind()

            gvLocation.DataBind()
            mdlPopupLocation.Show()
            txtIsPopUp.Text = "Location"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopupLocationReset_Click", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvLocation_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvLocation.PageIndexChanging
        Dim qry As String
        Try

       
        gvLocation.PageIndex = e.NewPageIndex

        If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
            If txtPopupLocationSearch.Text.Trim = "" Then
                    SqlDSLocation.SelectCommand = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblCompanylocation where  accountid = '" + txtAccountID.Text + "' order by locationid"
            Else
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblcompanylocation where accountid='" & txtAccountID.Text & "'"

                If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                    qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                    ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                    qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                End If
                SqlDSLocation.SelectCommand = qry
            End If

        ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
            If txtPopupLocationSearch.Text.Trim = "" Then
                    SqlDSLocation.SelectCommand = "SELECT distinct accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup From tblpersonlocation where rcno <>0 and accountid = '" + txtAccountID.Text + "' order by locationid"
            Else
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup,ContractGroup FROM tblpersonlocation where accountid='" & txtAccountID.Text & "'"

                If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                    qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                    ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                    qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                    qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                End If
                SqlDSLocation.SelectCommand = qry
            End If
        Else
            lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            Return
        End If


        SqlDSLocation.DataBind()
        gvLocation.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvLocation_PageIndexChanging", ex.Message.ToString, qry)
        End Try
        mdlPopupLocation.Show()

    End Sub

    Protected Sub gvLocation_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        Try
            Dim svcrcno As String

            Dim editindex As Integer = gvLocation.SelectedIndex
            svcrcno = DirectCast(gvLocation.Rows(editindex).FindControl("Label1"), Label).Text
            txtSvcRcNo.Text = svcrcno.ToString()

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC FROM tblcompanylocation where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)
            ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC FROM tblpersonlocation where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)
            Else
                lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            End If
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                '  txtAccountID.Text = dt.Rows(0)("AccountID").ToString
                txtLocationID.Text = dt.Rows(0)("locationID").ToString
                txtServiceName.Text = dt.Rows(0)("ServiceName").ToString
                'txtDescription.Text = dt.Rows(0)("Description").ToString
                txtAddress.Text = dt.Rows(0)("Address1").ToString
                txtStreet.Text = dt.Rows(0)("AddStreet").ToString
                txtBuilding.Text = dt.Rows(0)("AddBuilding").ToString

                If dt.Rows(0)("AddCity").ToString <> "" Then
                    ddlCity.Text = dt.Rows(0)("AddCity").ToString
                End If

                If dt.Rows(0)("AddCountry").ToString <> "" Then
                    If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
                        ddlCountry.Text = "SINGAPORE"
                    Else
                        ddlCountry.Text = dt.Rows(0)("AddCountry").ToString
                    End If
                End If
                If dt.Rows(0)("AddState").ToString <> "" Then
                    ddlState.Text = dt.Rows(0)("AddState").ToString
                End If
                txtPostal.Text = dt.Rows(0)("AddPostal").ToString
                If dt.Rows(0)("LocateGrp").ToString <> "" Then
                    ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString
                End If


                txtSvcCP1Contact.Text = dt.Rows(0)("ContactPerson").ToString
                txtSvcCP1Position.Text = dt.Rows(0)("Contact1Position").ToString
                txtSvcCP1Telephone.Text = dt.Rows(0)("Telephone").ToString
                txtSvcCP1Fax.Text = dt.Rows(0)("Fax").ToString
                txtSvcCP1Telephone2.Text = dt.Rows(0)("Telephone2").ToString
                txtSvcCP1Mobile.Text = dt.Rows(0)("Mobile").ToString
                txtSvcCP1Email.Text = dt.Rows(0)("Email").ToString

                txtSvcCP2Contact.Text = dt.Rows(0)("ContactPerson2").ToString
                txtSvcCP2Position.Text = dt.Rows(0)("Contact2Position").ToString
                txtSvcCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
                txtSvcCP2Fax.Text = dt.Rows(0)("Contact2Fax").ToString
                txtSvcCP2Tel2.Text = dt.Rows(0)("Contact2Tel2").ToString
                txtSvcCP2Mobile.Text = dt.Rows(0)("Contact2Mobile").ToString
                txtSvcCP2Email.Text = dt.Rows(0)("Contact2Email").ToString

                ''''''''''''''''''''

                Dim lOtherEmail As String
                lOtherEmail = ""

                'If lSendServiceReportTo1Loc = "Y" Then
                lOtherEmail = dt.Rows(0)("BillEmail1Svc").ToString.Trim
                'End If


                'If String.IsNullOrEmpty(lOtherEmail.Trim) = False Then
                '    lOtherEmail = lOtherEmail.Trim() & ";" & dt.Rows(0)("BillEmail2svc").ToString.Trim()
                'Else
                '    lOtherEmail = dt.Rows(0)("BillEmail2svc").ToString.Trim()
                'End If


                If String.IsNullOrEmpty(dt.Rows(0)("BillEmail2svc").ToString.Trim()) = False Then
                    If String.IsNullOrEmpty(lOtherEmail) = True Then
                        lOtherEmail = dt.Rows(0)("BillEmail2svc").ToString.ToUpper.Trim()
                    Else
                        lOtherEmail = lOtherEmail.Trim() & ";" & dt.Rows(0)("BillEmail2svc").ToString.ToUpper.Trim()
                    End If
                End If


                If String.IsNullOrEmpty(dt.Rows(0)("ServiceEmailCC").ToString.Trim()) = False Then
                    If String.IsNullOrEmpty(lOtherEmail) = True Then
                        lOtherEmail = dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
                    Else
                        lOtherEmail = lOtherEmail.Trim() & ";" & dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
                    End If
                End If

                txtOtherEmail.Text = lOtherEmail.Trim
                '''''''''''''''''''''
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()

            mdlPopupLocation.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvLocation_SelectedIndexChanged", ex.Message.ToString, txtSvcRcNo.Text)
        End Try
    End Sub

    Public Sub MakeMeNull()
        Try
            txtMode.Text = ""
            lblAlert.Text = ""
            lblMessage.Text = ""
            txtCopy.Text = ""
            txtCopyRecordNo.Text = ""

            ddlStatus.SelectedIndex = 0
            txtSvcRecord.Text = ""
            txtSequence.Text = ""

            txtIsRequireFollowup.Text = "N"

            If String.IsNullOrEmpty(lblContract1.Text) = True Then
                'txtContractNo.Text = ""
                ddlCompanyGrp.SelectedIndex = 0
                txtAccountID.Text = ""
                txtCustName.Text = ""
                ddlAccountType.SelectedIndex = 0
                txtContractNo.Text = ""
            End If

            'ddlCompanyGrp.SelectedIndex = 0
            'txtAccountID.Text = ""
            'txtCustName.Text = ""
            'ddlAccountType.SelectedIndex = 0
            txtScheduler.Text = ""
            txtOurRef.Text = ""
            txtYourRef.Text = ""
            txtPoNo.Text = ""
            txtWorkOrderNo.Text = ""

            txtAccountType.Text = ""

            txtContractGroup.Text = ""

            txtAccountID1.Text = ""

            txtOffAddress1.Text = ""
            txtOffStreet.Text = ""
            txtOffBuilding.Text = ""
            ddlOffCity.SelectedIndex = 0
            ddlOffCountry.SelectedIndex = 0
            ddlOffState.SelectedIndex = 0
            txtOffPostal.Text = ""

            'txtOffContactPerson.Text = ""
            'txtOffPosition.Text = ""
            'txtOffContactNo.Text = ""
            'txtOffFax.Text = ""
            'txtOffContact2.Text = ""
            'txtOffEmail.Text = ""
            'txtOffMobile.Text = ""

            'txtOffCont1Name.Text = ""
            'txtOffCont1Position.Text = ""
            'txtOffCont1Tel.Text = ""
            'txtOffCont1Fax.Text = ""
            'txtOffCont1Tel2.Text = ""
            'txtOffCont1Mobile.Text = ""
            'txtOffCont1Email.Text = ""

            txtBillingName.Text = ""
            txtBillAddress.Text = ""
            txtBillStreet.Text = ""
            txtBillBuilding.Text = ""
            ddlBillCity.SelectedIndex = 0
            ddlBillState.SelectedIndex = 0
            ddlBillCountry.SelectedIndex = 0
            txtBillPostal.Text = ""

            'txtBillCP1Contact.Text = ""
            'txtBillCP1Position.Text = ""
            'txtBillCP1Tel.Text = ""
            'txtBillCP1Fax.Text = ""
            'txtBillCP1Tel2.Text = ""
            'txtBillCP1Mobile.Text = ""
            'txtBillCP1Fax.Text = ""
            'txtBillCP1Email.Text = ""

            'txtBillCP2Contact.Text = ""
            'txtBillCP2Position.Text = ""
            'txtBillCP2Tel.Text = ""
            'txtBillCP2Fax.Text = ""
            'txtBillCP2Tel2.Text = ""
            'txtBillCP2Mobile.Text = ""
            'txtBillCP2Fax.Text = ""
            'txtBillCP2Email.Text = ""

            chkOffAddr.Checked = False


            txtLocationID.Text = ""
            txtServiceName.Text = ""
            txtServiceDescription.Text = ""
            txtAddress.Text = ""
            txtStreet.Text = ""
            txtBuilding.Text = ""
            ddlCity.SelectedIndex = 0
            ddlState.SelectedIndex = 0
            ddlCountry.SelectedIndex = 0
            txtPostal.Text = ""
            ddlLocateGrp.SelectedIndex = 0

            txtSvcCP1Contact.Text = ""
            txtSvcCP1Position.Text = ""
            txtSvcCP1Telephone.Text = ""
            txtSvcCP1Fax.Text = ""
            txtSvcCP1Telephone2.Text = ""
            txtSvcCP1Mobile.Text = ""
            txtSvcCP1Email.Text = ""

            txtSvcCP2Contact.Text = ""
            txtSvcCP2Position.Text = ""
            txtSvcCP2Telephone.Text = ""
            txtSvcCP2Tel2.Text = ""
            txtSvcCP2Fax.Text = ""
            txtSvcCP2Mobile.Text = ""
            txtSvcCP2Email.Text = ""

            txtSvcRcNo.Text = ""

            chkUrgent.Checked = False
            ddlScheduleType.SelectedIndex = 0
            txtScheduleDate.Text = ""
            txtScheduleTimeIn.Text = ""
            txtScheduleTimeOut.Text = ""
            txtAllocatedTime.Text = ""
            txtTeam.Text = ""
            txtIncharge.Text = ""
            txtServiceBy.Text = ""

            txtSupervisor.Text = ""

            txtVehNo.Text = ""
            txtDescription.Text = ""
            txtRemarks.Text = ""
            txtBillingDescription.Text = ""
            txtInstruction.Text = ""

            txtActSvcDate.Text = ""

            txtActSvcEndDate.Text = ""

            txtActSvcTimeFrom.Text = ""
            txtActSvcTimeTo.Text = ""
            txtServiceTime.Text = ""
            txtTotActualDuration.Text = ""
            txtServiceRating.Text = ""

            txtAmtBill.Text = ""
            txtInvoiceNo.Text = ""
            txtInvoicedAmt.Text = ""

            chkPayment.Checked = False
            txtCollectAmt.Text = ""
            txtAmountRecvd.Text = ""
            txtPaymentType.Text = ""
            txtRefNo.Text = ""

            txtZeroAmountToBillYesNo.Text = ""

            txtReportServiceStart.Text = ""
            txtReportServiceEnd.Text = ""
            txtReportServiceStartTime.Text = ""
            txtReportServiceEndTime.Text = ""

            Image1.ImageUrl = Server.MapPath("~/Images/blank.png")
            Image2.ImageUrl = Server.MapPath("~/Images/blank.png")

            lblCustomerSignName.Text = ""
            lblCustomerSignDate.Text = ""

            chkReqCustSign.Checked = False
            txtOtherEmail.Text = ""

            txtRcno.Text = ""
            'txtCreatedBy.Text = ""
            txtCreatedOn.Text = ""
            ' txtLastModifiedBy.Text = ""
            txtLastModifiedOn.Text = ""
            txtSpecificLocation.Text = ""
            'lblServiceDetailMessage.Text = ""

            chkCustomerServiceLocation.Checked = False
            chkOldServiceRecord.Checked = False
            lblFileUploadCount.Text = "File Upload"
            lblServicePhotosCount.Text = "Service Photos"
        Catch ex As Exception
            InsertIntoTblWebEventLog("MaeMeNull", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub EnableControls()
        Try
            btnSave.Enabled = False
            btnSave.ForeColor = System.Drawing.Color.Gray
            btnCancel.Enabled = False
            btnCancel.ForeColor = System.Drawing.Color.Gray

            btnADD.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black


            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray
            btnUpdate.Enabled = False
            btnUpdate.ForeColor = System.Drawing.Color.Gray
            btnStatus.Enabled = False
            btnStatus.ForeColor = System.Drawing.Color.Gray

            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = True
            btnFilter.ForeColor = System.Drawing.Color.Black

            btnQuit.Enabled = True
            btnQuit.ForeColor = System.Drawing.Color.Black

            btnReCalculate.Enabled = False
            btnReCalculate.ForeColor = System.Drawing.Color.Gray


            btnUpdateWorkLoad.Enabled = True
            btnUpdateWorkLoad.ForeColor = System.Drawing.Color.Black

            ddlStatus.Enabled = False
            txtSvcRecord.Enabled = False
            txtSequence.Enabled = False
            txtContractNo.Enabled = False
            ddlCompanyGrp.Enabled = False
            txtScheduler.Enabled = False
            txtOurRef.Enabled = False
            txtYourRef.Enabled = False
            txtPoNo.Enabled = False
            txtWorkOrderNo.Enabled = False
            ddlAccountType.Enabled = False
            txtAccountID.Enabled = False
            txtCustName.Enabled = False

            txtOffAddress1.Enabled = False
            txtOffStreet.Enabled = False
            txtOffBuilding.Enabled = False
            ddlOffCity.Enabled = False
            ddlOffCountry.Enabled = False
            ddlOffState.Enabled = False
            txtOffPostal.Enabled = False

            'txtOffContactPerson.Enabled = False
            'txtOffPosition.Enabled = False
            'txtOffMobile.Enabled = False
            'txtOffContactNo.Enabled = False
            'txtOffFax.Enabled = False
            'txtOffContact2.Enabled = False
            'txtOffEmail.Enabled = False
            'txtOffMobile.Enabled = False

            'txtOffCont1Name.Enabled = False
            'txtOffCont1Position.Enabled = False
            'txtOffCont1Tel.Enabled = False
            'txtOffCont1Fax.Enabled = False
            'txtOffCont1Tel2.Enabled = False
            'txtOffCont1Mobile.Enabled = False
            'txtOffCont1Email.Enabled = False

            txtBillingName.Enabled = False
            txtBillAddress.Enabled = False
            txtBillStreet.Enabled = False
            txtBillBuilding.Enabled = False
            ddlBillCity.Enabled = False
            ddlBillState.Enabled = False
            ddlBillCountry.Enabled = False
            txtBillPostal.Enabled = False

            'txtBillCP1Contact.Enabled = False
            'txtBillCP1Position.Enabled = False
            'txtBillCP1Tel.Enabled = False
            'txtBillCP1Fax.Enabled = False
            'txtBillCP1Tel2.Enabled = False
            'txtBillCP1Mobile.Enabled = False
            'txtBillCP1Fax.Enabled = False
            'txtBillCP1Email.Enabled = False

            'txtBillCP2Contact.Enabled = False
            'txtBillCP2Position.Enabled = False
            'txtBillCP2Tel.Enabled = False
            'txtBillCP2Fax.Enabled = False
            'txtBillCP2Tel2.Enabled = False
            'txtBillCP2Mobile.Enabled = False
            'txtBillCP2Fax.Enabled = False
            'txtBillCP2Email.Enabled = False

            chkOffAddr.Enabled = False

            txtLocationID.Enabled = False
            txtServiceName.Enabled = False
            txtServiceDescription.Enabled = False
            txtAddress.Enabled = False
            txtStreet.Enabled = False
            txtBuilding.Enabled = False
            ddlCity.Enabled = False
            ddlState.Enabled = False
            ddlCountry.Enabled = False
            txtPostal.Enabled = False
            ddlLocateGrp.Enabled = False

            txtSvcCP1Contact.Enabled = False
            txtSvcCP1Position.Enabled = False
            txtSvcCP1Telephone.Enabled = False
            txtSvcCP1Fax.Enabled = False
            txtSvcCP1Telephone2.Enabled = False
            txtSvcCP1Mobile.Enabled = False
            txtSvcCP1Email.Enabled = False

            txtSvcCP2Contact.Enabled = False
            txtSvcCP2Position.Enabled = False
            txtSvcCP2Telephone.Enabled = False
            txtSvcCP2Tel2.Enabled = False
            txtSvcCP2Fax.Enabled = False
            txtSvcCP2Mobile.Enabled = False
            txtSvcCP2Email.Enabled = False


            chkUrgent.Enabled = False
            ddlScheduleType.Enabled = False
            txtScheduleDate.Enabled = False
            txtScheduleTimeIn.Enabled = False
            txtScheduleTimeOut.Enabled = False
            txtAllocatedTime.Enabled = False
            txtTeam.Enabled = False
            txtIncharge.Enabled = False
            txtServiceBy.Enabled = False
            txtSupervisor.Enabled = False
            txtVehNo.Enabled = False
            txtDescription.Enabled = False
            txtRemarks.Enabled = False
            txtBillingDescription.Enabled = False
            txtInstruction.Enabled = False

            txtActSvcDate.Enabled = False
            txtActSvcEndDate.Enabled = False
            txtActSvcTimeFrom.Enabled = False
            txtActSvcTimeTo.Enabled = False


            txtServiceTime.Enabled = False
            txtServiceRating.Enabled = False

            txtAmtBill.Enabled = False
            txtInvoiceNo.Enabled = False
            txtInvoicedAmt.Enabled = False

            chkPayment.Enabled = False
            txtCollectAmt.Enabled = False
            txtAmountRecvd.Enabled = False
            txtPaymentType.Enabled = False
            txtRefNo.Enabled = False

            btnTeam.Visible = False
            btnSchedule.Visible = False
            btnClient.Visible = False
            btnImgLoc.Visible = False



            '   btnEditSchDate.Visible = False

            'TimePicker1.CssClass = "visiblebutton"
            'TimePicker2.CssClass = "visiblebutton"
            'TimePicker3.CssClass = "visiblebutton"
            'TimePicker4.CssClass = "visiblebutton"

            txtServiceLocationGroup.Enabled = False

            chkReqCustSign.Enabled = False
            txtOtherEmail.Enabled = False
            txtLocation.Enabled = False
            txtSpecificLocation.Enabled = False

            txtCharCountServiceDescription.Visible = False
            txtCharCountSI.Visible = False
            txtCharCountRemarks.Visible = False
            txtCharCountBillingDescription.Visible = False
            txtCharCountEditRemarks.Visible = False
            txtCharCountEditSI.Visible = False

            txtReportServiceStart.Enabled = False
            txtReportServiceEnd.Enabled = False
            txtReportServiceStartTime.Enabled = False
            txtReportServiceEndTime.Enabled = False

            'btnEditSchDate.Visible = False
            'btnEditTeam.Visible = False
            AccessControl()
        Catch ex As Exception
            InsertIntoTblWebEventLog("EnableControls", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub DisableControls()
        Try
            btnSave.Enabled = True
            btnSave.ForeColor = System.Drawing.Color.Black
            btnCancel.Enabled = True
            btnCancel.ForeColor = System.Drawing.Color.Black

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray
            btnUpdate.Enabled = False
            btnUpdate.ForeColor = System.Drawing.Color.Gray
            btnStatus.Enabled = False
            btnStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = False
            btnFilter.ForeColor = System.Drawing.Color.Gray

            btnQuit.Enabled = False
            btnQuit.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

            btnReCalculate.Enabled = False
            btnReCalculate.ForeColor = System.Drawing.Color.Gray

            btnUpdateWorkLoad.Enabled = False
            btnUpdateWorkLoad.ForeColor = System.Drawing.Color.Gray

            ddlStatus.Enabled = True
            txtSvcRecord.Enabled = True
            txtSequence.Enabled = True
            txtContractNo.Enabled = True
            ddlCompanyGrp.Enabled = True
            txtScheduler.Enabled = True
            txtOurRef.Enabled = True
            txtYourRef.Enabled = True
            txtPoNo.Enabled = True
            txtWorkOrderNo.Enabled = True
            ddlAccountType.Enabled = True
            txtAccountID.Enabled = True
            txtCustName.Enabled = True

            txtOffAddress1.Enabled = True
            txtOffStreet.Enabled = True
            txtOffBuilding.Enabled = True
            ddlOffCity.Enabled = True
            ddlOffCountry.Enabled = True
            ddlOffState.Enabled = True
            txtOffPostal.Enabled = True

            ''txtOffContactPerson.Enabled = True
            ''txtOffPosition.Enabled = True
            ''txtOffMobile.Enabled = True
            ''txtOffContactNo.Enabled = True
            ''txtOffFax.Enabled = True
            ''txtOffContact2.Enabled = True
            ''txtOffEmail.Enabled = True
            ''txtOffMobile.Enabled = True

            ''txtOffCont1Name.Enabled = True
            ''txtOffCont1Position.Enabled = True
            ''txtOffCont1Tel.Enabled = True
            ''txtOffCont1Fax.Enabled = True
            ''txtOffCont1Tel2.Enabled = True
            ''txtOffCont1Mobile.Enabled = True
            ''txtOffCont1Email.Enabled = True

            txtBillingName.Enabled = True
            txtBillAddress.Enabled = True
            txtBillStreet.Enabled = True
            txtBillBuilding.Enabled = True
            ddlBillCity.Enabled = True
            ddlBillState.Enabled = True
            ddlBillCountry.Enabled = True
            txtBillPostal.Enabled = True

            'txtBillCP1Contact.Enabled = True
            'txtBillCP1Position.Enabled = True
            'txtBillCP1Tel.Enabled = True
            'txtBillCP1Fax.Enabled = True
            'txtBillCP1Tel2.Enabled = True
            'txtBillCP1Mobile.Enabled = True
            'txtBillCP1Fax.Enabled = True
            'txtBillCP1Email.Enabled = True

            'txtBillCP2Contact.Enabled = True
            'txtBillCP2Position.Enabled = True
            'txtBillCP2Tel.Enabled = True
            'txtBillCP2Fax.Enabled = True
            'txtBillCP2Tel2.Enabled = True
            'txtBillCP2Mobile.Enabled = True
            'txtBillCP2Fax.Enabled = True
            'txtBillCP2Email.Enabled = True

            chkOffAddr.Enabled = True

            txtLocationID.Enabled = True
            txtServiceName.Enabled = True
            txtServiceDescription.Enabled = True
            txtAddress.Enabled = True
            txtStreet.Enabled = True
            txtBuilding.Enabled = True
            ddlCity.Enabled = True
            ddlState.Enabled = True
            ddlCountry.Enabled = True
            txtPostal.Enabled = True
            ddlLocateGrp.Enabled = True

            txtSvcCP1Contact.Enabled = True
            txtSvcCP1Position.Enabled = True
            txtSvcCP1Telephone.Enabled = True
            txtSvcCP1Fax.Enabled = True
            txtSvcCP1Telephone2.Enabled = True
            txtSvcCP1Mobile.Enabled = True
            txtSvcCP1Email.Enabled = True

            txtSvcCP2Contact.Enabled = True
            txtSvcCP2Position.Enabled = True
            txtSvcCP2Telephone.Enabled = True
            txtSvcCP2Tel2.Enabled = True
            txtSvcCP2Fax.Enabled = True
            txtSvcCP2Mobile.Enabled = True
            txtSvcCP2Email.Enabled = True


            chkUrgent.Enabled = True
            ddlScheduleType.Enabled = True
            txtScheduleDate.Enabled = True
            txtScheduleTimeIn.Enabled = True
            txtScheduleTimeOut.Enabled = True
            txtAllocatedTime.Enabled = True
            txtTeam.Enabled = True
            txtIncharge.Enabled = True
            txtServiceBy.Enabled = True
            txtSupervisor.Enabled = True
            txtVehNo.Enabled = True
            txtDescription.Enabled = True
            txtRemarks.Enabled = True
            txtBillingDescription.Enabled = True
            txtInstruction.Enabled = True

            '11.07.21
            txtActSvcDate.Enabled = True
            txtActSvcEndDate.Enabled = True
            txtActSvcTimeFrom.Enabled = True
            txtActSvcTimeTo.Enabled = True
            '    txtServiceTime.Enabled = True
            '11.07.21

            txtServiceRating.Enabled = True

            txtAmtBill.Enabled = True
            '      txtInvoiceNo.Enabled = True
            '     txtInvoicedAmt.Enabled = True

            chkPayment.Enabled = True
            txtCollectAmt.Enabled = True
            txtAmountRecvd.Enabled = True
            txtPaymentType.Enabled = True
            txtRefNo.Enabled = True

            chkReqCustSign.Enabled = True
            txtOtherEmail.Enabled = True
            txtSpecificLocation.Enabled = True


          

            'txtLocation.Enabled = True


            btnTeam.Visible = True
            btnSchedule.Visible = True
            btnClient.Visible = True
            btnImgLoc.Visible = True


            txtCharCountServiceDescription.Visible = True
            txtCharCountSI.Visible = True
            txtCharCountRemarks.Visible = True
            txtCharCountBillingDescription.Visible = True
            txtCharCountEditRemarks.Visible = True
            txtCharCountEditSI.Visible = True


            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsDescription(this); </Script>", False)


            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsDescription(this); CalculateCharsInstruction(this); CalculateCharsRemarks(this); CalculateCharsBillingDescription(this); CalculateCharsEditRemarks(this); CalculateCharsEditSI(this); </Script>", False)

            ''ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsInstruction(this); </Script>", False)
            ''ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsRemarks(this); </Script>", False)
            ''ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsBillingDescription(this); </Script>", False)
            ''ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this); </Script>", False)
            ''ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this); </Script>", False)

            '    btnEditSchDate.Visible = True

            'TimePicker1.CssClass = "dummybutton"
            'TimePicker2.CssClass = "dummybutton"
            'TimePicker3.CssClass = "dummybutton"
            'TimePicker4.CssClass = "dummybutton"
        Catch ex As Exception
            InsertIntoTblWebEventLog("DisableControls", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub
    Private Sub AccessControl()
        '''''''''''''''''''Access Control 
        'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = "SELECT x2413, x2413Add, x2413Copy, x2413Edit, x2413Delete, x2413Print, x2413ChSt, x2413Update, x2413Reverse, x2413Recalculate, x2413ExportToExcel, x2413FileAccess,x2413FileUpload, x2413FileDelete, x2413PestCount, x2413ManualContractPOWONo, x2413EditBilledAmtBillNo FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)



            If dt.Rows.Count > 0 Then
                If Not IsDBNull(dt.Rows(0)("x2413FileAccess")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413FileAccess")) = False Then
                        txtFileAccess.Text = dt.Rows(0)("x2413FileAccess").ToString()
                        If Convert.ToBoolean(dt.Rows(0)("x2413FileAccess")) = False Then
                            tb1.Tabs(6).Visible = False
                        End If

                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413FileUpload")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413FileUpload")) = False Then
                        txtFileUpload.Text = dt.Rows(0)("x2413FileUpload").ToString()
                        btnUpload.Enabled = dt.Rows(0)("x2413FileUpload").ToString()
                        FileUpload1.Enabled = dt.Rows(0)("x2413FileUpload").ToString()
                    End If

                End If

                If Not IsDBNull(dt.Rows(0)("x2413FileDelete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413FileDelete")) = False Then
                        txtFileDelete.Text = dt.Rows(0)("x2413FileDelete").ToString()
                    End If

                End If

                If Not IsDBNull(dt.Rows(0)("x2413")) Then
                    If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("x2413"))) = False Then
                        If Convert.ToBoolean(dt.Rows(0)("x2413")) = False Then
                            Response.Redirect("Home.aspx")
                        End If
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2413Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Add")) = False Then
                        Me.btnADD.Enabled = dt.Rows(0)("x2413Add").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2413Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Add")) = False Then
                        Me.btnSvcAdd.Enabled = dt.Rows(0)("x2413Add").ToString()
                        btnClientImport.Enabled = dt.Rows(0)("x2413Add").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Add")) = False Then
                        Me.btnTechAdd.Enabled = dt.Rows(0)("x2413Add").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2413Copy")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Copy")) = False Then
                        Me.btnCopy.Enabled = dt.Rows(0)("x2413Copy").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2413Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Edit")) = False Then
                        Me.btnEdit.Enabled = dt.Rows(0)("x2413Edit").ToString()
                        chkAccessEdit.Checked = dt.Rows(0)("x2413Edit").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Edit")) = False Then
                        Me.btnSvcEdit.Enabled = dt.Rows(0)("x2413Edit").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Edit")) = False Then
                        Me.btnTechEdit.Enabled = dt.Rows(0)("x2413Edit").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2413Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Delete")) = False Then
                        Me.btnDelete.Enabled = dt.Rows(0)("x2413Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Delete")) = False Then
                        Me.btnSvcDelete.Enabled = dt.Rows(0)("x2413Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Delete")) = False Then
                        Me.btnTechDelete.Enabled = dt.Rows(0)("x2413Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413ChSt")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413ChSt")) = False Then
                        Me.btnStatus.Enabled = dt.Rows(0)("x2413ChSt").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Update")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Update")) = False Then
                        Me.btnUpdate.Enabled = dt.Rows(0)("x2413Update").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Print")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Print")) = False Then
                        Me.btnPrint.Enabled = dt.Rows(0)("x2413Print").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413Recalculate")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413Recalculate")) = False Then
                        Me.btnReCalculate.Enabled = dt.Rows(0)("x2413Recalculate").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413ExportToExcel")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413ExportToExcel")) = False Then
                        Me.btnExportToExcel.Visible = dt.Rows(0)("x2413ExportToExcel").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413PestCount")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413PestCount")) = False Then
                        tb1.Tabs(2).Visible = False
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2413ManualContractPOWONo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413ManualContractPOWONo")) = False Then
                        Me.btnEditOurRef.Visible = dt.Rows(0)("x2413ManualContractPOWONo").ToString()
                        Me.btnEditManualContractNo.Visible = dt.Rows(0)("x2413ManualContractPOWONo").ToString()
                        Me.btnEditPONo.Visible = dt.Rows(0)("x2413ManualContractPOWONo").ToString()
                        Me.btnEditWorkOrderNo.Visible = dt.Rows(0)("x2413ManualContractPOWONo").ToString()
                    End If
                End If



                If Not IsDBNull(dt.Rows(0)("x2413EditBilledAmtBillNo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413EditBilledAmtBillNo")) = False Then
                        txtEditBilledAmtBillNo.Text = dt.Rows(0)("x2413EditBilledAmtBillNo").ToString()
                    End If
                End If


                'btnADD.Enabled = dt.Rows(0)("x2413Add").ToString()
                'btnCopy.Enabled = dt.Rows(0)("x2413Add").ToString()
                'btnEdit.Enabled = dt.Rows(0)("x2413Edit").ToString()
                'btnDelete.Enabled = dt.Rows(0)("x2413Delete").ToString()
                'btnStatus.Enabled = dt.Rows(0)("x2413ChSt").ToString()
                'btnUpdate.Enabled = dt.Rows(0)("x2413Update").ToString()
                'btnReverse.Enabled = vpSec2413Reverse
                'btnPrint.Enabled = dt.Rows(0)("x2413Print").ToString()

                If btnADD.Enabled = True Then
                    btnADD.ForeColor = System.Drawing.Color.Black
                Else
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If btnCopy.Enabled = True Then
                    btnCopy.ForeColor = System.Drawing.Color.Black
                Else
                    btnCopy.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEdit.Enabled = True Then
                    btnEdit.ForeColor = System.Drawing.Color.Black
                Else
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDelete.Enabled = True Then
                    btnDelete.ForeColor = System.Drawing.Color.Black
                Else
                    btnDelete.ForeColor = System.Drawing.Color.Gray
                End If

                If btnStatus.Enabled = True Then
                    btnStatus.ForeColor = System.Drawing.Color.Black
                Else
                    btnStatus.ForeColor = System.Drawing.Color.Gray
                End If

                If btnUpdate.Enabled = True Then
                    btnUpdate.ForeColor = System.Drawing.Color.Black
                Else
                    btnUpdate.ForeColor = System.Drawing.Color.Gray
                End If

                If btnPrint.Enabled = True Then
                    btnPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnPrint.ForeColor = System.Drawing.Color.Gray
                End If

                If btnReCalculate.Enabled = True Then
                    btnReCalculate.ForeColor = System.Drawing.Color.Black
                Else
                    btnReCalculate.ForeColor = System.Drawing.Color.Gray
                End If
                'btnApprModeOnOff.Visible = vpSec2413ApprMode
            End If

            conn.Close()
            conn.Dispose()

            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("ACCESS CONTROL", ex.Message.ToString, Session("SecGroupAuthority"))
        End Try
        'Else
        'chkAccessEdit.Checked = True
        'End If



        '''''''''''''''''''Access Control 
    End Sub

    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                cmd.CommandTimeout = 0
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
                con.Dispose()
                cmd.Dispose()
            End Using
            'End Using


        Catch ex As Exception
            InsertIntoTblWebEventLog("PopulateDropDownList", ex.Message.ToString, query + " , " + TryCast(ddl, DropDownList).Text + " , " + " , " + textField + " , " + valueField)
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As Saplin.Controls.DropDownCheckBoxes)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            cmd.CommandTimeout = 0
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub
    Private Sub timer_Tick(ByVal sender As Object, ByVal e As EventArgs)
        Me.grdWorkLoad.DataBind()
        Me.grdAvailableTechnician.DataBind()

        grdCustRequest.DataBind()

    End Sub


    Public Function GridviewCount(conn As MySqlConnection, qry As String) As Integer
        qry = "SELECT count(*) " + qry
        Dim rowcount As Int16
        Dim cmd As MySqlCommand = New MySqlCommand
        cmd.CommandType = CommandType.Text
        cmd.CommandText = qry
        cmd.Connection = conn
        rowcount = CInt(cmd.ExecuteScalar())
        cmd.Dispose()

        Return rowcount
    End Function

    Private Sub FindTotOsServices()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            'Contract
            Dim commandContract As MySqlCommand = New MySqlCommand
            commandContract.CommandType = CommandType.Text
            commandContract.CommandText = "SELECT StartDate, ifnull(EndDate,'1990-01-01') as EndDate, ifnull(ActualEnd,'1990-01-01') as ActualEnd, ifnull(WarrantyStart,'1990-01-01') as WarrantyStartDate, ifnull(WarrantyEnd,'1990-01-01') as WarrantyEndDate FROM tblContract where ContractNo = '" & txtContractNo.Text & "'"

            commandContract.Connection = conn

            Dim drContract As MySqlDataReader = commandContract.ExecuteReader()
            Dim dtContract As New DataTable
            dtContract.Load(drContract)


            lblContractStartDate.Text = "StartDate : " + Convert.ToDateTime(dtContract.Rows(0)("StartDate")).ToString("dd/MM/yyyy")

            Dim lEndDate, lActualEnd, lwarrantyStart, lWarrantyEnd As Date

            lEndDate = Convert.ToDateTime(dtContract.Rows(0)("EndDate")).ToString("dd/MM/yyyy")
          

            If lEndDate = "01/01/1990" Then
                lblContractEndDate.Text = "End Date : "
            Else
                lblContractEndDate.Text = "EndDate : " + Convert.ToDateTime(dtContract.Rows(0)("EndDate")).ToString("dd/MM/yyyy")
            End If


            lActualEnd = Convert.ToDateTime(dtContract.Rows(0)("ActualEnd")).ToString("dd/MM/yyyy")

            If lActualEnd = "01/01/1990" Then
                lblActualEnd.Text = "Actual End : "
            Else
                lblActualEnd.Text = "Actual End : " + Convert.ToDateTime(lActualEnd).ToString("dd/MM/yyyy")
            End If


            lwarrantyStart = Convert.ToDateTime(dtContract.Rows(0)("WarrantyStartDate")).ToString("dd/MM/yyyy")

            If lwarrantyStart = "01/01/1990" Then
                lblWarrantyStartDate.Text = "Warranty Start : "
            Else
                lblWarrantyStartDate.Text = "Warranty Start : " + Convert.ToDateTime(dtContract.Rows(0)("WarrantyStartDate")).ToString("dd/MM/yyyy")
            End If

            lWarrantyEnd = Convert.ToDateTime(dtContract.Rows(0)("WarrantyEndDate")).ToString("dd/MM/yyyy")
            If lWarrantyEnd = "01/01/1990" Then
                lblWarrantyEndDate.Text = "Warranty End : "
            Else
                lblWarrantyEndDate.Text = "Warranty End : " + Convert.ToDateTime(dtContract.Rows(0)("WarrantyEndDate")).ToString("dd/MM/yyyy")
            End If
            'lblActualEnd.Text = "Actual End : " + Convert.ToDateTime(dtContract.Rows(0)("ActualEnd")).ToString("dd/MM/yyyy")
            commandContract.Dispose()


            'Contract



            command.CommandType = CommandType.Text
            command.CommandText = "SELECT ifnull(count(RecordNo),0) as TotServices FROM tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ((Status='O') or (Status='H') or (Status='P'))"

            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            'lblTotalServices.Text = "Total Services : " + dt.Rows(0)("TotServices").ToString
            lblTotalServices.Text = dt.Rows(0)("TotServices").ToString

            'If (dt.Rows(0)("TotServices") = 0) Then
            '    lblAlert.Text = "PLEASE ENTER TARGET DETAILS"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    conn.Close()
            '    conn.Dispose()
            '    command.Dispose()
            '    Exit Sub
            'End If

            'conn.Close()
            'conn.Dispose()
            command.Dispose()


            Dim command1 As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            command1.CommandType = CommandType.Text
            'command1.CommandText = "SELECT ifnull(count(RecordNo),0) as TotCompletedServices FROM tblServiceRecord where ContractNo = '" & lblContract1.Text & "' and ((Status='P'))"
            command1.CommandText = "SELECT ifnull(count(RecordNo),0) as TotCompletedServices FROM tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ((Status='P'))"

            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            'lblCompletedServices.Text = "Completed Services : " + dt1.Rows(0)("TotCompletedServices").ToString
            lblCompletedServices.Text = dt1.Rows(0)("TotCompletedServices").ToString

            'If (dt.Rows(0)("TotServices") = 0) Then
            '    lblAlert.Text = "PLEASE ENTER TARGET DETAILS"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    conn.Close()
            '    conn.Dispose()
            '    command.Dispose()
            '    Exit Sub
            'End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()


            lblOutstandingServices.Text = "Balance : " & (Convert.ToInt64(lblTotalServices.Text) - Convert.ToInt64(lblCompletedServices.Text))

            lblTotalServices.Text = "Total Services : " + lblTotalServices.Text
            lblCompletedServices.Text = "Completed : " + lblCompletedServices.Text
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("RetrieveData", ex.Message.ToString, txtRcno.Text)
        End Try

    End Sub
    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        ' Try

        Dim timer As New Timer()

        timer.Interval = 30
        '5 seconds
        AddHandler timer.Tick, AddressOf timer_Tick
        'timer.Start()

        If Not IsPostBack Then

                ChangedDisplayRadioButton()

                'SELECT UPPER(industry) FROM tblindustry ORDER BY industry
                '   tb1.Tabs(4).Visible = False
            AccessControl()
            Dim qry As String = ""
            qry = "SELECT distinct inchargeId FROM tblteam ORDER BY inchargeID"
            PopulateDropDownList(qry, "inchargeId", "inchargeId", ddlSearchIncharge)

            'Dim qry As String = ""
            'qry = "SELECT distinct targetid,descrip1,CONCAT(TargetID, ' - ', Descrip1) AS TargetIDDesc from tblTarget order by TargetID"
            'PopulateDropDownList(qry, "inchargeId", "inchargeId", ddlSearchIncharge)  'sqldstarget


            qry = " SELECT ScheduleType FROM tblscheduletype ORDER BY Scheduletype"
            PopulateDropDownList(qry, "ScheduleType", "ScheduleType", ddlEditScheduleType)  'sqldstarget

            qry = " SELECT ScheduleType FROM tblscheduletype ORDER BY Scheduletype"
            PopulateDropDownList(qry, "ScheduleType", "ScheduleType", ddlScheduleType)

            qry = " SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff  ORDER BY StaffId"
            PopulateDropDownList(qry, "IDNAME", "StaffId", ddlTechID)

            qry = " SELECT ItemID, ItemName, CONCAT(ItemID, ' [', ItemName, ']') AS ItemIssuedNAME FROM tblstockitem  ORDER BY ItemID"
            PopulateDropDownList(qry, "ItemIssuedNAME", "ItemID", ddlItemIDItemsIssued)

            '''''
            qry = " SELECT PestID, Description, CONCAT(PestID, ' [', Description, ']') AS IDNAME FROM tblPest ORDER BY PestID"
            PopulateDropDownList(qry, "IDNAME", "PestID", ddlPestID)


            qry = " SELECT LevelOfInfestation FROM tblPestLevelOfInfestation  ORDER BY SortOrder"
            PopulateDropDownList(qry, "LevelOfInfestation", "LevelOfInfestation", ddlInfestationLevel)

            qry = " SELECT TrapType FROM tblTrapType ORDER BY TrapType"
            PopulateDropDownList(qry, "TrapType", "TrapType", ddlTrapType)

            '''''

            'qry = " SELECT UnitMS FROM tblUnitMS ORDER BY UnitMS"
            'PopulateDropDownList(qry, "UnitMS", "UnitMS", txtUnitItemsIssued)

            qry = "SELECT Frequency FROM tblservicefrequency order by frequency"
            PopulateDropDownList(qry, "Frequency", "Frequency", txtFrequencyadd)
            PopulateDropDownList(qry, "Frequency", "Frequency", txtFrequencyedit)


            qry = "SELECT City FROM tblcity ORDER BY City"
            PopulateDropDownList(qry, "City", "City", ddlCity)
            PopulateDropDownList(qry, "City", "City", ddlOffCity)
            PopulateDropDownList(qry, "City", "City", ddlBillCity)

            qry = "SELECT Country FROM tblcountry ORDER BY Country"
            PopulateDropDownList(qry, "Country", "Country", ddlCountry)
            PopulateDropDownList(qry, "Country", "Country", ddlOffCountry)
            PopulateDropDownList(qry, "Country", "Country", ddlBillCountry)

            qry = " SELECT State FROM tblstate ORDER BY State"
            PopulateDropDownList(qry, "State", "State", ddlState)
            PopulateDropDownList(qry, "State", "State", ddlOffState)
            PopulateDropDownList(qry, "State", "State", ddlBillState)


            qry = "SELECT companygroup FROM tblcompanygroup order by companygroup"
            PopulateDropDownList(qry, "companygroup", "companygroup", ddlCompanyGrp)
            PopulateDropDownList(qry, "companygroup", "companygroup", ddlCompanyGrpSearch)


            qry = "SELECT contractgroup FROM tblcontractgroup order by contractgroup"
            PopulateDropDownList(qry, "contractgroup", "contractgroup", ddlContractGrpSearch)
        

            'qry = "SELECT companygroup FROM tblcompanygroup order by companygroup"
            'PopulateDropDownList(qry, "companygroup", "companygroup", ddlServices)
            'PopulateDropDownList(qry, "companygroup", "companygroup", ddlServiceID)
            'PopulateDropDownList(qry, "companygroup", "companygroup", txtServiceIDadd)
            'PopulateDropDownList(qry, "companygroup", "companygroup", txtServiceDescadd)

            qry = "SELECT locationgroup FROM tbllocationgroup order by locationgroup"
            PopulateDropDownList(qry, "locationgroup", "locationgroup", ddlLocateGrp)

            'qry = "SELECT salesgroup FROM tblsalesgroup order by salesgroup"


            'SqlDSService.SelectCommand = "SELECT ProductID, ProductDesc from tblProduct order by ProductID"
            'SqlDSService.DataBind()

            'ddlServiceID.Items.Clear()
            'SqlDSService.SelectCommand = "SELECT ProductID, ProductDesc from tblProduct order by ProductID"
            'SqlDSService.DataBind()
            'ddlServiceID.AppendDataBoundItems = True
            'ddlServiceID.Items.Add("Select")

            'ddlServiceID.DataSourceID = "SqlDSService"

            'ddlServiceID.DataBind()

            qry = "SELECT ProductID FROM tblProduct order by ProductID"
            PopulateDropDownList(qry, "ProductID", "ProductID", ddlServiceID)

            qry = "Select Frequency from tblFrequency"
            PopulateDropDownList(qry, "Frequency", "Frequency", ddlSearchBillingFrequency)


            qry = " SELECT ScheduleType FROM tblScheduleType ORDER BY ScheduleType"
            PopulateDropDownList(qry, "ScheduleType", "ScheduleType", ddlSearchScheduleType)


            SqlDSTarget.SelectCommand = "SELECT distinct targetid,descrip1,CONCAT(TargetID, ' - ', Descrip1) AS TargetIDDesc from tblTarget order by TargetID"
            SqlDSTarget.DataBind()

            'qry = "SELECT distinct targetid,descrip1,CONCAT(TargetID, ' - ', Descrip1) AS TargetIDDesc from tblTarget order by TargetID"
            'PopulateDropDownList(qry, "Country", "Country", ddlchktarget)
            'PopulateDropDownList(qry, "Country", "Country", ddlchkTargetAdd)
            'PopulateDropDownList(qry, "Country", "Country", ddlchkTargetEdit)

            'If txtTechMode.Text = "Add" Then
            '    SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status ='O' ORDER BY StaffId"
            '    SqlDSStaff.DataBind()
            'Else
            '    SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff  ORDER BY StaffId"
            '    SqlDSStaff.DataBind()

            'End If

            txtGroupAuthority.Text = Session("SecGroupAuthority")

            Dim query As String
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                ''''''''''''''''''''''''''''''''''''''''''''''''
                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                commandServiceRecordMasterSetup.CommandText = "SELECT showSROnScreenLoad, ServiceRecordMaxRec,DisplayRecordsLocationWise, PrefixDocNoService, AllowToEditBilledAmtBillNo FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceRecordMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString
                txtPrefixDocNoService.Text = dtServiceRecordMasterSetup.Rows(0)("PrefixDocNoService").ToString
                txtAllowToEditBilledAmtBillNo.Text = dtServiceRecordMasterSetup.Rows(0)("AllowToEditBilledAmtBillNo").ToString

                '19.07
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    query = "select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "'"
                    'PopulateDropDownList(query, "locationID", "locationID", txtLocation)
                    PopulateComboBox(query, "locationID", "locationID", ddlLocationSearch)

                    lblBranch1.Visible = True
                    lblBranch2.Visible = True
                    ddlLocationSearch.Visible = True
                    txtLocation.Visible = True
                Else
                    lblBranch1.Visible = False
                    lblBranch2.Visible = False
                    ddlLocationSearch.Visible = False
                    txtLocation.Visible = False

                End If

                '19.07


                ''''''''''''''''''''''''''''''''''''''''''
                'Me.btnUpload.Attributes("onclick") = String.Format("document.getElementById('{0}').value= document.getElementById('{1}').value;", Me.HiddenField1.ClientID, Me.FileUpload1.ClientID)
                txtCreatedOn.Attributes.Add("readonly", "readonly")
                txtServiceLocationGroup.Attributes.Add("readonly", "readonly")
                txtUnitItemsIssued.Attributes.Add("readonly", "readonly")

                '     txtContractNo.Attributes.Add("readonly", "readonly")

                ' chkStatusSearch.Attributes.Add("onchange", "javascript: CheckBoxListSelect ('" & chkStatusSearch.ClientID & "');")

                btnTop.Attributes.Add("onclick", "javascript:scroll(0,0);return false;")

                Dim UserID As String = Convert.ToString(Session("UserID"))
                lblUserID.Text = UserID
                Dim sysdate As String = Convert.ToString(Session("SysDate"))

                txtCreatedBy.Text = UserID
                txtLastModifiedBy.Text = UserID
                lblNotesStaffID.Text = UserID

                FindLocation()

                ddlStatus.Attributes.Add("disabled", "true")
                tableaddHeader.Visible = False
                tableadd.Visible = False
                tableedit.CssClass = "dummybutton"


                query = "Select StaffId from tblStaff where SecGroupAuthority <> 'GUEST' and Status = 'O'"
                PopulateDropDownList(query, "StaffId", "StaffId", ddlSearchScheduler)

                'Dim dt As DateTime = DateTime.Parse("00:00 AM")
                'Dim am_pm As MKB.TimePicker.TimeSelector.AmPmSpec
                'If dt.ToString("tt") = "AM" Then
                '    am_pm = MKB.TimePicker.TimeSelector.AmPmSpec.AM
                'Else
                '    am_pm = MKB.TimePicker.TimeSelector.AmPmSpec.PM
                'End If
                'TimeSelector1.SetTime(dt.Hour, dt.Minute, am_pm)

                'If String.IsNullOrEmpty(Session("locationid")) = False Then
                '    lblAccountIdContactLocation.Visible = True
                '    lblAccountIdContactLocation1.Text = Session("locationid")
                'End If


                If Session("servicefrom") = "contract" Then

                    txtAccountID.Text = Session("AccountId")
                    txtCustName.Text = Session("CustName")
                    ddlAccountType.Text = Session("ContactType")
                    ddlCompanyGrp.Text = Session("CompanyGroup")

                    ''''''''''''''''
                    txtSearch1AccountID.Text = txtAccountID.Text
                    txtSearch1AccountID.Attributes.Add("readonly", "readonly")
                    btnAccountIDSearch.Visible = False
                    btnAccountNameSearch.Visible = False
                    '''''''''''''''''' txtAccountID.Text = Session("AccountId")
                    txtCustName.Text = Session("CustName")
                    ddlAccountType.Text = Session("ContactType")
                    ddlCompanyGrp.Text = Session("CompanyGroup")

                    '23.08.21

                    txtIndustrySession.Text = Session("industry")
                    txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                    txtContractGroupSession.Text = Session("contractgroup")
                    txtCompanyGroupSession.Text = Session("companygroup")
                    txtSalesmanSession.Text = Session("salesman")

                    txtbilladdress1session.Text = Session("billaddress1")
                    txtbillstreetsession.Text = Session("billstreet")
                    txtbillbuildingsession.Text = Session("billbuilding")
                    txtbillcountrysession.Text = Session("billcountry")
                    txtbillpostalsession.Text = Session("billpostal")

                    If String.IsNullOrEmpty(Session("ServiceSearchFromDate")) = False Then
                        txtSearch1SvcDate.Text = Session("ServiceSearchFromDate")
                    End If

                    If String.IsNullOrEmpty(Session("ServiceSearchToDate")) = False Then
                        txtSearch2SvcDate.Text = Session("ServiceSearchToDate")
                    End If

                    'txtCustName.Text = Session("custname")
                    Session("contactperson") = txtContactPersonsession.Text
                    Session("conpermobile") = txtConPerMobilesession.Text
                    Session("acctcode") = txtAccCodesession.Text
                    Session("telephone") = txtTelephonesession.Text
                    Session("fax") = txtFaxsession.Text
                    Session("offpostal") = txtPostalsession.Text
                    Session("sevaddress") = txtOfficeAddresssession.Text
                    Session("locategrp") = ddlLocateGrpsession.Text
                    Session("salesman") = ddlSalesmansession.Text
                    Session("location") = txtLocationSession.Text


                    Session.Remove("industry")
                    Session.Remove("marketsegmentidsvc")
                    Session.Remove("contractgroup")
                    Session.Remove("companygroup")
                    Session.Remove("salesman")
                    Session.Remove("billaddress1")
                    Session.Remove("billstreet")
                    Session.Remove("billbuilding")
                    Session.Remove("billcountry")
                    Session.Remove("billpostal")

                    Session.Remove("contactperson")
                    Session.Remove("conpermobile")
                    Session.Remove("acctcode")
                    Session.Remove("telephone")
                    Session.Remove("fax")
                    Session.Remove("offpostal")
                    Session.Remove("sevaddress")
                    Session.Remove("locategrp")
                    Session.Remove("salesman")
                    Session.Remove("location")

                    Session.Remove("ServiceSearchFromDate")
                    Session.Remove("ServiceSearchToDate")

                    '23.08.21

                    ''''''''''''''''
                    txtSearch1AccountID.Text = txtAccountID.Text
                    txtSearch1AccountID.Attributes.Add("readonly", "readonly")
                    btnAccountIDSearch.Visible = False
                    btnAccountNameSearch.Visible = False
                    ''''''''''''''''''

                    'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno "
                    'txt.Text = txt.Text + "  FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null) and A.ContractNo = '" & Session("contractno") & "'and A.status in ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

                    'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno "
                    'txt.Text = txt.Text + "  FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and A.ContractNo = '" & Session("contractno") & "'and A.status in ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

                    txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup, ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo  "
                    txt.Text = txt.Text + "  FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo, tblcontract as B  "
                    txt.Text = txt.Text + "   where a.contractno=b.contractno  and A.AccountId = '" & txtSearch1AccountID.Text & "' and  A.ContractNo = '" & Session("contractno") & "' and A.status in ('O','P','H')   "



                    Dim gridqry As String = " FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo, tblcontract as B where a.contractno=b.contractno  and A.AccountId = '" & txtSearch1AccountID.Text & "' and  A.ContractNo = '" & Session("contractno") & "' and A.status in ('O','P','H')  order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

                    'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency,	BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef,	a.yourRef,	a.LocateGrp,	A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

                    'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName, ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
                    txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,	a.AddBuilding,a.AddStreet,a.AddCountry,A.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType,A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

                    txtGrid.Text = txtGrid.Text + " FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo, tblcontract as B  "
                    txtGrid.Text = txtGrid.Text + " where a.contractno=b.contractno  and A.AccountId = '" & txtSearch1AccountID.Text & "' and  A.ContractNo = '" & Session("contractno") & "' and A.status in ('O','P','H') "


                    If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                        If txtSearch1SvcDate.Text = "__/__/____" Then
                        Else
                            txtGrid.Text = txtGrid.Text + " and A.ServiceDate >= '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                            txt.Text = txt.Text + " and A.ServiceDate >= '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"

                        End If
                    End If

                    If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                        If txtSearch2SvcDate.Text = "__/__/____" Then
                        Else
                            txtGrid.Text = txtGrid.Text + " and A.ServiceDate <= '" + Convert.ToDateTime(txtSearch2SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                            txt.Text = txt.Text + " and A.ServiceDate <= '" + Convert.ToDateTime(txtSearch2SvcDate.Text).ToString("yyyy-MM-dd") + "'"

                        End If
                    End If


                    txtGrid.Text = txtGrid.Text + " Order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC"
                    txt.Text = txt.Text + "   order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

                    btnBack.Visible = True
                    btnQuit.Visible = False
                    txtFrom.Text = Session("servicefrom")
                    Session.Remove("servicefrom")
                    lblContract.Visible = True
                    lblContract1.Text = Session("contractno")
                    txtContractNo.Text = lblContract1.Text
                    lblContractStartDate.Visible = True
                    lblContractEndDate.Visible = True
                    lblActualEnd.Visible = True
                    lblTotalServices.Visible = True
                    lblCompletedServices.Visible = True
                    lblOutstandingServices.Visible = True

                    FindTotOsServices()

                    'lblContractStartDate.Text = "StartDate : " + Session("ContractStartDate")
                    'lblContractEndDate.Text = "EndDate : " + Session("ContractEndDate")
                    'lblActualEnd.Text = "Actual End : " + Session("ActualEnd")


                    '05.05.21

                    FindTotOSServices()
                  
                    '05.05.21

                    txtScheduler.Text = Session("Scheduler")
                    txtTeam.Text = Session("Team")
                    txtIncharge.Text = Session("InCharge")
                    txtServiceBy.Text = Session("ServiceBy")
                    txtSupervisor.Text = Session("Supervisor")
                    If String.IsNullOrEmpty(Session("ScheduleType")) = False Then
                        If ddlScheduleType.Items.FindByValue(Session("ScheduleType")) Is Nothing Then
                            ddlScheduleType.Items.Add(Session("ScheduleType"))
                            ddlScheduleType.Text = Session("ScheduleType")
                        Else
                            ddlScheduleType.Text = Session("ScheduleType")

                        End If
                    End If

                    Dim gridcount As Int16 = GridviewCount(conn, gridqry)

                    ' InsertIntoTblWebEventLog("PageLoad", gridcount.ToString, txtLimit.Text)

                    If gridcount > Convert.ToInt16(txtLimit.Text) Then
                        txt.Text = ""
                        SqlDataSource1.SelectCommand = ""
                        GridView1.DataSourceID = "SqlDataSource1"
                        GridView1.DataBind()
                        lblpnlConfirmMsg1.Text = "The total number of service records (" + gridcount.ToString + ") to be displayed exceeds the display limit.<br/><br/>Please key-in the Start Date and End Date to display fewer records."
                        '   MessageBox.Message.Alert(Page, "The total number of records to be displayed exceeds the display limit. Please key-in the Start Date and End Date to display fewer records.", "str")
                        mdlPopupMsg.Show()

                    Else
                        SqlDataSource1.SelectCommand = txt.Text
                        SqlDataSource1.DataBind()
                        GridView1.DataBind()
                    End If

                    'Session.Remove("AccountId")
                    Session.Remove("CustName")
                    Session.Remove("ContactType")
                    Session.Remove("CompanyGroup")
                    Session.Remove("Scheduler")
                    Session.Remove("Team")
                    Session.Remove("InCharge")
                    Session.Remove("ServiceBy")
                    Session.Remove("Supervisor")
                    Session.Remove("ScheduleType")
                    Session.Remove("ContractStartDate")
                    Session.Remove("ContractEndDate")
                ElseIf Session("servicefrom") = "serviceprint" Then
                    txt.Text = Session("gridsqlserviceprint")
                    SqlDataSource1.SelectCommand = Session("gridsqlserviceprint")
                    'GridView1.DataSourceID = "SqlDSContract"
                    GridView1.DataBind()

                    Session.Remove("servicefrom")
                    'Dim Query As String = Convert.ToString(Session("Query"))
                    'txt.Text = Query
                    'Dim SvcRcNo As String = Convert.ToString(Session("SvcRcNo"))
                    'txtRcno.Text = SvcRcNo

                    'RetrieveData()
                ElseIf Session("servicefrom") = "contactC" Or Session("servicefrom") = "contactP" Then

                    If String.IsNullOrEmpty(Session("locationid")) = False Then
                        lblAccountIdContactLocation.Visible = True
                        lblAccountIdContactLocation1.Text = Session("locationid")
                        'txtSearch1AccountID.Text = lblAccountIdContactLocation1.Text.Trim
                    End If


                    Dim YrStr As [String]

                    If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                        Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                        Dim YrStrList As List(Of [String]) = New List(Of String)()

                        For Each str As String In stringList
                            str = "'" + str + "'"
                            YrStrList.Add(str)
                        Next

                        YrStr = [String].Join(",", YrStrList.ToArray())
                        'qry1 = qry1 + " and status in (" + YrStr + ")"

                    End If

                    'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency"
                    'txt.Text = txt.Text + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null) and A.AccountId = '" & Session("accountid") & "' and A.LocationId = '" & Session("locationid") & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC"

                    'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, "
                    'txt.Text = txt.Text + " b.contractno FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno where   A.LocationID = '" & lblAccountIdContactLocation1.Text & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) "

                    txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo"
                    txt.Text = txt.Text + "  FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where  A.LocationID = '" & lblAccountIdContactLocation1.Text & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) "

                    'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
                    txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,A.AddStreet,a.AddCountry,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
                    txtGrid.Text = txtGrid.Text + "  FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where  A.LocationID = '" & lblAccountIdContactLocation1.Text & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) "


                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        'qry = qry + " and Location = '" & txtLocation.Text & "'"
                        qry = qry & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & Session("SecGroupAuthority") & "')"

                    End If
                    'txt.Text = txt.Text + " b.contractno FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno where  A.AccountId = '" & Session("accountid") & "' and A.LocationId = '" & Session("locationid") & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) "

                    txt.Text = txt.Text + "  order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC"

                    txtGrid.Text = txtGrid.Text + "  order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

                    Dim gridqry As String = " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where  A.LocationID = '" & lblAccountIdContactLocation1.Text & "' and ((A.status = 'O') or (A.Status ='P') or (A.Status ='H')) "

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        'qry = qry + " and Location = '" & txtLocation.Text & "'"
                        gridqry = gridqry & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & Session("SecGroupAuthority") & "')"

                    End If

                    btnBack.Visible = True
                    btnQuit.Visible = False


                    txtFrom.Text = Session("servicefrom")
                    txtRcnoContact.Text = Session("rcno")


                    'lblContract.Visible = False
                    'lblContract1.Text = Session("contractno")
                    'txtContractNo.Text = lblContract1.Text


                    'If String.IsNullOrEmpty(Session("locationid")) = False Then
                    '    lblAccountIdContactLocation.Visible = True
                    '    lblAccountIdContactLocation1.Text = Session("locationid")
                    'End If

                    txtAccountID.Text = Session("AccountId")
                    txtCustName.Text = Session("CustName")
                    ddlAccountType.Text = Session("ContactType")
                    ddlCompanyGrp.Text = Session("CompanyGroup")
                    txtLocationID.Text = Session("locationid")

                    txtScheduler.Text = Session("Scheduler")

                    chkInactive.Checked = Session("inactive")

                    If chkInactive.Checked = True Then
                        btnADD.Enabled = False
                        btnADD.ForeColor = System.Drawing.Color.Gray
                    End If
                    btnQuit.Text = "BACK"

                    txtSearch1AccountID.Text = Session("locationid")
                    txtSearch1AccountID.Attributes.Add("readonly", "readonly")
                    btnAccountIDSearch.Visible = False
                    btnAccountNameSearch.Visible = False

                    'txtTeam.Text = Session("Team")
                    'txtIncharge.Text = Session("InCharge")
                    'txtServiceBy.Text = Session("ServiceBy")
                    'ddlScheduleType.Text = Session("ScheduleType")

                    Dim gridcount As Int16 = GridviewCount(conn, gridqry)

                    If gridcount > Convert.ToInt16(txtLimit.Text) Then
                        txt.Text = ""
                        SqlDataSource1.SelectCommand = ""
                        GridView1.DataSourceID = "SqlDataSource1"
                        GridView1.DataBind()
                        '  MessageBox.Message.Alert(Page, "The total number of records to be displayed exceeds the display limit. Please key-in the Start Date and End Date to display fewer records.", "str")
                        lblpnlConfirmMsg1.Text = "The total number of service records (" + gridcount.ToString + ") to be displayed exceeds the display limit.<br/><br/>Please key-in the Start Date and End Date to display fewer records."

                        mdlPopupMsg.Show()

                    Else
                        SqlDataSource1.SelectCommand = txt.Text
                        SqlDataSource1.DataBind()
                        GridView1.DataBind()
                    End If

                    'Session.Remove("AccountId")
                    Session.Remove("CustName")
                    Session.Remove("ContactType")
                    Session.Remove("CompanyGroup")
                    Session.Remove("Scheduler")
                    Session.Remove("servicefrom")
                    Session.Remove("locationid")
                Else
                    '   txtSearch1SvcDate.Text = Format(Now(), "dd/MM/yyyy")
                    txtSearch1SvcDate.Text = sysdate
                    txtSearch2SvcDate.Text = sysdate
                    'txtCalendarDisplay.Text = sysdate

                    'ServiceDate = '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                    '   txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno FROM tblservicerecord WHERE Status = 'O' order by ServiceDate desc, ContactType, AccountId limit 100"
                    '  

                    ''''''''''''''''''''''''''''''''''''


                    'Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand

                    'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'conn.Open()

                    'Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                    'commandServiceRecordMasterSetup.CommandType = CommandType.Text
                    'commandServiceRecordMasterSetup.CommandText = "SELECT showSROnScreenLoad, ServiceRecordMaxRec FROM tblservicerecordmastersetup"
                    'commandServiceRecordMasterSetup.Connection = conn

                    'Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                    'Dim dtServiceRecordMasterSetup As New DataTable
                    'dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                    'txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceRecordMaxRec")

                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("showSROnScreenLoad")) = False Then
                        txt.Text = ""
                        SqlDataSource1.SelectCommand = ""
                        GridView1.DataSourceID = "SqlDataSource1"
                        GridView1.DataBind()
                    Else
                        'Dim lLimit As Long

                        '  txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno, Notes, Address1, AddPostal, Scheduler, ContactPersonID, BillAmount, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn  FROM tblservicerecord WHERE ServiceDate = '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "' and (Status = 'O' or Status = 'P' or Status = 'H') order by ServiceDate desc, ContactType, AccountId limit " & txtLimit.Text
                        'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency,b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null) and A.Status IN ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC desc limit " & txtLimit.Text
                        'txt.Text = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency,b.contractno, a.Location FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno where A.Status IN ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC desc limit " & txtLimit.Text

                        qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.Emailsent, A.TabletDownloaded, , A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency,b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,a.Location,  ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo"
                        qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo D where  A.Status IN ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC desc limit " & txtLimit.Text
                        Dim gridqry As String = " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo D where  A.Status IN ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC desc "

                        Dim gridcount As Int16 = GridviewCount(conn, gridqry)
                        If gridcount > Convert.ToInt16(txtLimit.Text) Then
                            lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

                            mdlPopupMsg.Show()
                        End If

                        SqlDataSource1.SelectCommand = txt.Text
                        SqlDataSource1.DataBind()
                        GridView1.DataBind()
                    End If

                    '''''''''''''''''''''''''''''''''''''
                    DisableControls()

                End If


                'SQLDSContract.SelectCommand = Session("gridsql")
                'GridView1.DataSourceID = "SqlDSContract"
                'GridView1.DataBind()

                'SqlDataSource1.SelectCommand = txt.Text
                'SqlDataSource1.DataBind()
                'GridView1.DataBind()


                'SqlDataSource2.SelectCommand = "SELECT * FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
                'SqlDataSource2.DataBind()
                'GridView2.DataBind()

                'SqlDSServiceStaff.SelectCommand = "SELECT * FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "'"
                'SqlDSServiceStaff.DataBind()
                'GridView3.DataBind()

                'SqlDSServiceArea.SelectCommand = "SELECT * FROM tblservicerecordservicearea where recordno = '" + txtSvcRecord.Text + "'"
                'SqlDSServiceArea.DataBind()
                'GridView4.DataBind()

                '   MakeMeNull()


                EnableControls()


                txtDDLText.Text = "-1"

                tb1.ActiveTabIndex = 0
                txtSearch1Status.Text = "O,P,H"

                txtEditRecordNo.Attributes.Add("readonly", "readonly")
                txtEditClientName.Attributes.Add("readonly", "readonly")
                txtEditServiceAddress.Attributes.Add("readonly", "readonly")

                txtRecordNoTS.Attributes.Add("readonly", "readonly")
                txtClientNameTS.Attributes.Add("readonly", "readonly")
                txtStaffIDsTS.Attributes.Add("readonly", "readonly")
                txtDurationTS.Attributes.Add("readonly", "readonly")
                AccessControl()

                conn.Close()
                conn.Dispose()
                commandServiceRecordMasterSetup.Dispose()
                dtServiceRecordMasterSetup.Dispose()

                Label14.Text = sysdate
                btnUpdateWorkLoad_Click(sender, e)
                btnWorkLoadDateL.Visible = False

                BindGridEmpty()
                ' InsertIntoTblWebEventLog("Service 1", txtSearchCustRequest1.Text, SearchCustRequest)

                'If SearchCustRequest = True Then

                '    SearchCustRequest = False
                'Else

                RetrieveGrdCustRequest()

                'End If

                '   InsertIntoTblWebEventLog("service 2", txtSearchCustRequest1.Text, SearchCustRequest)

                'IsServiceAdded()

            Catch ex As MySql.Data.MySqlClient.MySqlException
                lblAlert.Text = ex.Message.ToString
                InsertIntoTblWebEventLog("Page_Load", ex.Message.ToString, Session("servicefrom"))
            End Try

            hdnCalDisplayView.Value = "agendaDay"
        Else
            If txtIsPopUp.Text = "Team" Then
                txtIsPopUp.Text = "N"
                mdlPopUpTeam.Show()
            ElseIf txtIsPopUp.Text = "Staff" Then
                txtIsPopUp.Text = "N"
                mdlPopupStaff.Show()
            ElseIf txtIsPopUp.Text = "Asset" Then
                txtIsPopUp.Text = "N"
                mdlPopUpAsset.Show()
            ElseIf txtIsPopUp.Text = "Client" Then
                txtIsPopUp.Text = "N"
                mdlPopUpClient.Show()
            ElseIf txtIsPopUp.Text = "Scheduler" Then
                txtIsPopUp.Text = "N"
                mdlPopUpScheduler.Show()
            ElseIf txtIsPopUp.Text = "Location" Then
                txtIsPopUp.Text = "N"
                mdlPopupLocation.Show()
            ElseIf txtIsPopUp.Text = "ClientSearch" Then
                txtIsPopUp.Text = "N"
                mdlPpClientSearch.Show()
            ElseIf txtIsPopUp.Text = "TeamNew" Then
                txtIsPopUp.Text = "N"
                mdlPopUpTeamNew.Show()
            End If

            '   RetrieveGrdCustRequest()


        End If
        CheckTab()
        '  If Me.FileUpload1.PostedFile IsNot Nothing _
        'AndAlso Me.FileUpload1.PostedFile.ContentLength > 0 Then
        '      Me.PostedFile = Me.FileUpload1.PostedFile
        '  End If

        '  If Me.HiddenField1.Value <> "" Then
        '      Me.lblCurrentFile.Text = Me.HiddenField1.Value
        '  End If

        'txtRcno.Text = "483"
        'RetrieveData()
        'btnEditSchDate.Visible = False
        'btnEditTeam.Visible = False
        ScriptManager.RegisterStartupScript(Page, Me.[GetType](), "Key", "<script>MakeStaticHeader('" + GridView1.ClientID + "', 500, 1950 , 50 ,false); </script>", False)

        ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("Pge_Load", ex.Message.ToString, txtTechRcNo.Text)
        '    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        'End Try
    End Sub

    Private Sub CheckTab()
        'If tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Then
        '    GridView1.CssClass = "dummybutton"
        '    btnADD.CssClass = "dummybutton"
        '    btnCopy.CssClass = "dummybutton"
        '    btnEdit.CssClass = "dummybutton"
        '    btnDelete.CssClass = "dummybutton"
        '    btnStatus.CssClass = "dummybutton"
        '    btnQuit.CssClass = "dummybutton"
        '    btnFilter.CssClass = "dummybutton"
        '    btnResSearch.CssClass = "dummybutton"
        '    btnQuickSearch.CssClass = "dummybutton"
        '    btnUpdate.CssClass = "dummybutton"
        '    txtSearchSvc.CssClass = "dummybutton"
        '    btnPrint.CssClass = "dummybutton"
        '    tablesearch.Visible = False
        '    '   btnUpdateContract.CssClass = "dummybutton"

        'ElseIf tb1.ActiveTabIndex = 0 Then

        '    GridView1.CssClass = "visiblebutton"
        '    btnADD.CssClass = "visiblebutton"
        '    btnCopy.CssClass = "visiblebutton"
        '    btnEdit.CssClass = "visiblebutton"
        '    btnDelete.CssClass = "visiblebutton"
        '    btnStatus.CssClass = "visiblebutton"
        '    btnQuit.CssClass = "visiblebutton"
        '    btnFilter.CssClass = "visiblebutton"
        '    btnResSearch.CssClass = "visiblebutton"
        '    btnQuickSearch.CssClass = "visiblebutton"
        '    btnUpdate.CssClass = "visiblebutton"
        '    txtSearchSvc.CssClass = "visiblebutton"
        '    btnPrint.CssClass = "visiblebutton"
        '    tablesearch.Visible = True
        '    '   btnUpdateContract.CssClass = "visiblebutton"


        'End If
    End Sub

   
    Private Sub RetrieveData()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            tot = 0
            '''''''''''''''''''''''
            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            BindGridEmpty()

            'gvImages.DataSource = ""
            'gvImages.DataBind()

            txtPhotoDescription.Text = ""

            '''''''''''''''''''''''
            Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text
            ''command1.CommandText = "SELECT *,upper(scheduletype) FROM tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)

            'command1.CommandText = "Select A.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.Status, A.RecordNo, A.TotalServiceArea, A.TotalAreaCompleted, A.TotalPriceOfAreaCompleted, A.Seq, A.ContractNo, A.Companygroup, A.Scheduler, A.OurRef, A.YourRef, A.PoNo, A.Filling, A.ContactType, A.AccountID, A.CustName, A.CustCode, A.OffAddress, A.OffStreet, A.OffBuilding, A.OffCity, A.OffCountry, A.OffState, A.OffPostal, A.SameBillingAddress, A.BillingName, A.BillAddress, A.BillStreet, A.BillBuilding, A.BillCity, A.BillCountry, A.BillState, A.BillPostal, A.locationID, A.ServiceName, A.Description, A.Address1, A.AddStreet, A.AddBuilding, A.AddCity, A.AddCountry, A.AddState, A.AddPostal, A.LocateGrp, A.ContactPersonID, A.Contact1Position, A.Contact1Tel, A.Contact1Fax, A.Contact1Tel2, A.ContactPersonMobile, A.Email, A.ContactPerson2,            A.Contact2Position,   A.Contact2Tel,   A.Contact2Fax,  A.Contact2Tel2,   A.Contact2Mobile,     A.Contact2Email, A.chkUrgent, A.ScheduleType, A.SchServiceDate, A.SchServiceTime, A.SchServiceTimeOut, A.AllocatedSvcTime, A.TeamID, A.InchargeID, A.ServiceBy, A.Supervisor, A.VehNo, A.Notes, A.Comments, A.Remarks, A.Reason, A.ServiceDate, A.TimeIn, A.TimeOut, A.Duration, A.TotalActualDuration, A.ServiceRating, A.BillAmount, A.BillNo, A.BilledAmt, A.CollectPayment, A.AmtToCollect, A.CollectAmt,  A.Settle,  A.RefNo,  A.CustAddress1, A.CustAddBuilding, A.CustAddStreet, A.CustAddCity, A.CustAddState, A.CustAddCountry, A.CustAddPostal, A.CustTelephone, A.CustFax, A.CustMobile,  A.CustTelephone2, A.Contact, A.ContactPersonID, A.OffAddress, A.OffStreet, A.OffBuilding, A.OffCity, A.OffCountry, A.OffState, A.OffPostal, A.SameBillingAddress, A.BillingName, A.BillAddress, A.BillStreet, A.BillBuilding, A.BillCity, A.BillCountry, A.BillState, A.BillPostal, A.ServiceLocationGroup, A.RequireClientSignature, A.OtherEmail, A.CustomerSignName, A.CustomerSignDate, A.ServiceBySignName, A.ServiceBySignDate, A.CustomerSign, A.ServiceBySign, A.Location "
            'command1.CommandText = command1.CommandText + " FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo where A.rcno=" & Convert.ToInt32(txtRcno.Text)


            ''command1.CommandType = CommandType.StoredProcedure
            ''command1.CommandText = "SelectServiceRecord"


            command1.CommandType = CommandType.StoredProcedure
            command1.CommandText = "SelectServiceRecord"

            command1.Connection = conn
            command1.CommandTimeout = 0

            command1.Parameters.Clear()
            command1.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))

            command1.Parameters.Add(New MySqlParameter("pr_AccountID", MySqlDbType.String))
            command1.Parameters("pr_AccountID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddBuilding", MySqlDbType.String))
            command1.Parameters("pr_AddBuilding").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddCity", MySqlDbType.String))
            command1.Parameters("pr_AddCity").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddCountry", MySqlDbType.String))
            command1.Parameters("pr_AddCountry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddPostal", MySqlDbType.String))
            command1.Parameters("pr_AddPostal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Address1", MySqlDbType.String))
            command1.Parameters("pr_Address1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddState", MySqlDbType.String))
            command1.Parameters("pr_AddState").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AddStreet", MySqlDbType.String))
            command1.Parameters("pr_AddStreet").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AllocatedSvcTime", MySqlDbType.String))
            command1.Parameters("pr_AllocatedSvcTime").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AmtToCollect", MySqlDbType.Decimal))
            command1.Parameters("pr_AmtToCollect").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillAddress", MySqlDbType.String))
            command1.Parameters("pr_BillAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillAmount", MySqlDbType.Decimal))
            command1.Parameters("pr_BillAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillBuilding", MySqlDbType.String))
            command1.Parameters("pr_BillBuilding").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillCity", MySqlDbType.String))
            command1.Parameters("pr_BillCity").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillCountry", MySqlDbType.String))
            command1.Parameters("pr_BillCountry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BilledAmt", MySqlDbType.String))
            command1.Parameters("pr_BilledAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillingName", MySqlDbType.String))
            command1.Parameters("pr_BillingName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillNo", MySqlDbType.String))
            command1.Parameters("pr_BillNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillPostal", MySqlDbType.String))
            command1.Parameters("pr_BillPostal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillState", MySqlDbType.String))
            command1.Parameters("pr_BillState").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillStreet", MySqlDbType.String))
            command1.Parameters("pr_BillStreet").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_chkUrgent", MySqlDbType.Bit))
            command1.Parameters("pr_chkUrgent").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CollectAmt", MySqlDbType.Decimal))
            command1.Parameters("pr_CollectAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CollectPayment", MySqlDbType.Bit))
            command1.Parameters("pr_CollectPayment").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Comments", MySqlDbType.Text))
            command1.Parameters("pr_Comments").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Companygroup", MySqlDbType.String))
            command1.Parameters("pr_Companygroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact", MySqlDbType.String))
            command1.Parameters("pr_Contact").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact1Fax", MySqlDbType.String))
            command1.Parameters("pr_Contact1Fax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact1Position", MySqlDbType.String))
            command1.Parameters("pr_Contact1Position").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact1Tel", MySqlDbType.String))
            command1.Parameters("pr_Contact1Tel").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact1Tel2", MySqlDbType.String))
            command1.Parameters("pr_Contact1Tel2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Email", MySqlDbType.String))
            command1.Parameters("pr_Contact2Email").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Fax", MySqlDbType.String))
            command1.Parameters("pr_Contact2Fax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Mobile", MySqlDbType.String))
            command1.Parameters("pr_Contact2Mobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Position", MySqlDbType.String))
            command1.Parameters("pr_Contact2Position").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Tel", MySqlDbType.String))
            command1.Parameters("pr_Contact2Tel").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact2Tel2", MySqlDbType.String))
            command1.Parameters("pr_Contact2Tel2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactPerson2", MySqlDbType.String))
            command1.Parameters("pr_ContactPerson2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactPersonID", MySqlDbType.String))
            command1.Parameters("pr_ContactPersonID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactPersonMobile", MySqlDbType.String))
            command1.Parameters("pr_ContactPersonMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactType", MySqlDbType.String))
            command1.Parameters("pr_ContactType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractNo", MySqlDbType.String))
            command1.Parameters("pr_ContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddBuilding", MySqlDbType.String))
            command1.Parameters("pr_CustAddBuilding").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddCity", MySqlDbType.String))
            command1.Parameters("pr_CustAddCity").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddCountry", MySqlDbType.String))
            command1.Parameters("pr_CustAddCountry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddPostal", MySqlDbType.String))
            command1.Parameters("pr_CustAddPostal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddress1", MySqlDbType.String))
            command1.Parameters("pr_CustAddress1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddState", MySqlDbType.String))
            command1.Parameters("pr_CustAddState").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddStreet", MySqlDbType.String))
            command1.Parameters("pr_CustAddStreet").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustCode", MySqlDbType.String))
            command1.Parameters("pr_CustCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustFax", MySqlDbType.String))
            command1.Parameters("pr_CustFax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustMobile", MySqlDbType.String))
            command1.Parameters("pr_CustMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustName", MySqlDbType.String))
            command1.Parameters("pr_CustName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustomerSign", MySqlDbType.LongBlob))
            command1.Parameters("pr_CustomerSign").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustomerSignDate", MySqlDbType.DateTime))
            command1.Parameters("pr_CustomerSignDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustomerSignName", MySqlDbType.String))
            command1.Parameters("pr_CustomerSignName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustTelephone", MySqlDbType.String))
            command1.Parameters("pr_CustTelephone").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustTelephone2", MySqlDbType.String))
            command1.Parameters("pr_CustTelephone2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Description", MySqlDbType.String))
            command1.Parameters("pr_Description").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Duration", MySqlDbType.String))
            command1.Parameters("pr_Duration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Email", MySqlDbType.String))
            command1.Parameters("pr_Email").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Filling", MySqlDbType.Bit))
            command1.Parameters("pr_Filling").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InchargeID", MySqlDbType.String))
            command1.Parameters("pr_InchargeID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LocateGrp", MySqlDbType.String))
            command1.Parameters("pr_LocateGrp").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Location", MySqlDbType.String))
            command1.Parameters("pr_Location").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_locationID", MySqlDbType.String))
            command1.Parameters("pr_locationID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Notes", MySqlDbType.String))
            command1.Parameters("pr_Notes").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffAddress", MySqlDbType.String))
            command1.Parameters("pr_OffAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffBuilding", MySqlDbType.String))
            command1.Parameters("pr_OffBuilding").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffCity", MySqlDbType.String))
            command1.Parameters("pr_OffCity").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffCountry", MySqlDbType.String))
            command1.Parameters("pr_OffCountry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffPostal", MySqlDbType.String))
            command1.Parameters("pr_OffPostal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffState", MySqlDbType.String))
            command1.Parameters("pr_OffState").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OffStreet", MySqlDbType.String))
            command1.Parameters("pr_OffStreet").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OtherEmail", MySqlDbType.String))
            command1.Parameters("pr_OtherEmail").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OurRef", MySqlDbType.String))
            command1.Parameters("pr_OurRef").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PoNo", MySqlDbType.String))
            command1.Parameters("pr_PoNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Reason", MySqlDbType.String))
            command1.Parameters("pr_Reason").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RecordNo", MySqlDbType.String))
            command1.Parameters("pr_RecordNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RefNo", MySqlDbType.String))
            command1.Parameters("pr_RefNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Remarks", MySqlDbType.String))
            command1.Parameters("pr_Remarks").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RequireClientSignature", MySqlDbType.String))
            command1.Parameters("pr_RequireClientSignature").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SameBillingAddress", MySqlDbType.Bit))
            command1.Parameters("pr_SameBillingAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Scheduler", MySqlDbType.String))
            command1.Parameters("pr_Scheduler").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ScheduleType", MySqlDbType.String))
            command1.Parameters("pr_ScheduleType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SchServiceDate", MySqlDbType.DateTime))
            command1.Parameters("pr_SchServiceDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SchServiceTime", MySqlDbType.String))
            command1.Parameters("pr_SchServiceTime").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SchServiceTimeOut", MySqlDbType.String))
            command1.Parameters("pr_SchServiceTimeOut").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Seq", MySqlDbType.String))
            command1.Parameters("pr_Seq").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBy", MySqlDbType.String))
            command1.Parameters("pr_ServiceBy").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBySign", MySqlDbType.LongBlob))
            command1.Parameters("pr_ServiceBySign").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBySignDate", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceBySignDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBySignName", MySqlDbType.String))
            command1.Parameters("pr_ServiceBySignName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceDate", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceLocationGroup", MySqlDbType.String))
            command1.Parameters("pr_ServiceLocationGroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceName", MySqlDbType.String))
            command1.Parameters("pr_ServiceName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceRating", MySqlDbType.String))
            command1.Parameters("pr_ServiceRating").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Settle", MySqlDbType.String))
            command1.Parameters("pr_Settle").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Status", MySqlDbType.String))
            command1.Parameters("pr_Status").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Supervisor", MySqlDbType.String))
            command1.Parameters("pr_Supervisor").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TeamID", MySqlDbType.String))
            command1.Parameters("pr_TeamID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeIn", MySqlDbType.String))
            command1.Parameters("pr_TimeIn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeOut", MySqlDbType.String))
            command1.Parameters("pr_TimeOut").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalActualDuration", MySqlDbType.Decimal))
            command1.Parameters("pr_TotalActualDuration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalAreaCompleted", MySqlDbType.Decimal))
            command1.Parameters("pr_TotalAreaCompleted").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalPriceOfAreaCompleted", MySqlDbType.Decimal))
            command1.Parameters("pr_TotalPriceOfAreaCompleted").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalServiceArea", MySqlDbType.Decimal))
            command1.Parameters("pr_TotalServiceArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_VehNo", MySqlDbType.String))
            command1.Parameters("pr_VehNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_YourRef", MySqlDbType.String))
            command1.Parameters("pr_YourRef").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LockSt", MySqlDbType.String))
            command1.Parameters("pr_LockSt").Direction = ParameterDirection.Output

            command1.ExecuteScalar()

            Dim lst As String

            lst = command1.Parameters("@pr_status").Value.ToString
            If String.IsNullOrEmpty(command1.Parameters("@pr_status").Value.ToString) = False Then
                ddlStatus.SelectedValue = command1.Parameters("@pr_status").Value.ToString
            End If

            txtLockSt.Text = command1.Parameters("@pr_LockSt").Value.ToString

            If command1.Parameters("@pr_status").Value.ToString = "P" Then
                btnUpdate.Text = "REVERSE"
            ElseIf command1.Parameters("@pr_status").Value.ToString = "O" Then
                btnUpdate.Text = "UPDATE"
            End If


            txtSvcRecord.Text = command1.Parameters("@pr_RecordNo").Value.ToString
            txtServiceRecord.Text = txtSvcRecord.Text

            lblBlankDetailRecordNo.Text = txtServiceRecord.Text

            lblRecordNo.Text = txtSvcRecord.Text
            lblRecordNo1.Text = txtSvcRecord.Text
            lblRecordNo2.Text = txtSvcRecord.Text
            lblRecordNo3.Text = txtSvcRecord.Text
            lblRecordNo5.Text = txtSvcRecord.Text
            lblRecordNo6.Text = txtSvcRecord.Text
            lblNotesKeyField.Text = txtSvcRecord.Text

            lblRecordNoItemsIssued.Text = txtSvcRecord.Text

            lblTotalServiceArea.Text = command1.Parameters("@pr_TotalServiceArea").Value.ToString
            lblTotalAreaCompleted.Text = command1.Parameters("@pr_TotalAreaCompleted").Value.ToString
            lblTotalPrice.Text = command1.Parameters("@pr_TotalPriceOfAreaCompleted").Value.ToString

            txtSequence.Text = command1.Parameters("@pr_Seq").Value.ToString
            txtContractNo.Text = command1.Parameters("@pr_ContractNo").Value.ToString
            lblContractNo.Text = txtContractNo.Text
            RetrieveContractGroup()


            If String.IsNullOrEmpty(command1.Parameters("@pr_Companygroup").Value.ToString) = False Then
                ddlCompanyGrp.Text = command1.Parameters("@pr_Companygroup").Value.ToString
            End If
            txtScheduler.Text = command1.Parameters("@pr_Scheduler").Value.ToString
            txtOurRef.Text = command1.Parameters("@pr_OurRef").Value.ToString
            txtEditOurRef.Text = command1.Parameters("@pr_OurRef").Value.ToString

            txtYourRef.Text = command1.Parameters("@pr_YourRef").Value.ToString
            txtPoNo.Text = command1.Parameters("@pr_PoNo").Value.ToString

            txtFilling.Text = command1.Parameters("@pr_Filling").Value.ToString


            If String.IsNullOrEmpty(command1.Parameters("@pr_ContactType").Value.ToString) = False Then
                ddlAccountType.Text = command1.Parameters("@pr_ContactType").Value.ToString
                txtAccountType.Text = command1.Parameters("@pr_ContactType").Value.ToString
            End If
            txtAccountID.Text = command1.Parameters("@pr_AccountID").Value.ToString
            txtAccountID1.Text = command1.Parameters("@pr_AccountID").Value.ToString


            txtCustName.Text = command1.Parameters("@pr_CustName").Value.ToString
            txtClientID.Text = command1.Parameters("@pr_CustCode").Value.ToString
            txtCustContact.Text = command1.Parameters("@pr_Contact").Value.ToString


            txtOffAddress1.Text = command1.Parameters("@pr_OffAddress").Value.ToString
            txtOffStreet.Text = command1.Parameters("@pr_OffStreet").Value.ToString
            txtOffBuilding.Text = command1.Parameters("@pr_OffBuilding").Value.ToString

            If String.IsNullOrEmpty(command1.Parameters("@pr_OffCity").Value.ToString) = False Then
                If command1.Parameters("@pr_OffCity").Value.ToString = "S'pore" Or command1.Parameters("@pr_OffCity").Value.ToString = "S'PORE" Then
                    ddlOffCity.Text = "SINGAPORE"
                Else
                    ddlOffCity.Text = command1.Parameters("@pr_OffCity").Value.ToString
                End If
                'ddlOffCity.Text = command1.Parameters("@pr_OffCity").Value
            End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_OffCountry").Value.ToString) = False Then
                If command1.Parameters("@pr_OffCountry").Value.ToString = "S'pore" Or command1.Parameters("@pr_OffCountry").Value.ToString = "S'PORE" Then
                    ddlOffCountry.Text = "SINGAPORE"
                Else
                    ddlOffCountry.Text = command1.Parameters("@pr_OffCountry").Value.ToString
                End If
            End If
            If String.IsNullOrEmpty(command1.Parameters("@pr_OffState").Value.ToString) = False Then
                If command1.Parameters("@pr_OffState").Value.ToString = "S'pore" Or command1.Parameters("@pr_OffState").Value.ToString = "S'PORE" Then
                    ddlOffState.Text = "SINGAPORE"
                Else
                    ddlOffState.Text = command1.Parameters("@pr_OffState").Value.ToString
                End If

            End If

            txtOffPostal.Text = command1.Parameters("@pr_OffPostal").Value.ToString

            'txtOffContactPerson.Text = dt.Rows(0)("OffContact1").ToString
            'txtOffPosition.Text = dt.Rows(0)("OffCont1Position").ToString
            'txtOffMobile.Text = dt.Rows(0)("OffCont1Mobile").ToString

            'txtOffContactNo.Text = dt.Rows(0)("OffCont1Tel").ToString
            'txtOffFax.Text = dt.Rows(0)("OffCont1Fax").ToString
            'txtOffContact2.Text = dt.Rows(0)("OffCont1Tel2").ToString
            'txtOffEmail.Text = dt.Rows(0)("OffCont1Email").ToString

            'txtOffCont1Name.Text = dt.Rows(0)("OffContact2").ToString
            'txtOffCont1Position.Text = dt.Rows(0)("OffCont2Position").ToString
            'txtOffCont1Tel.Text = dt.Rows(0)("OffCont2Tel").ToString
            'txtOffCont1Fax.Text = dt.Rows(0)("OffCont2Fax").ToString
            'txtOffCont1Tel2.Text = dt.Rows(0)("OffCont2Tel2").ToString
            'txtOffCont1Mobile.Text = dt.Rows(0)("OffCont2Mobile").ToString
            'txtOffCont1Email.Text = dt.Rows(0)("OffCont2Email").ToString

            If command1.Parameters("@pr_SameBillingAddress").Value.ToString = "1" Then
                chkOffAddr.Checked = True
            Else
                chkOffAddr.Checked = False
            End If

            txtBillingName.Text = command1.Parameters("@pr_BillingName").Value.ToString

            txtBillAddress.Text = command1.Parameters("@pr_BillAddress").Value.ToString
            txtBillStreet.Text = command1.Parameters("@pr_BillStreet").Value.ToString
            txtBillBuilding.Text = command1.Parameters("@pr_BillBuilding").Value.ToString


            If String.IsNullOrEmpty(command1.Parameters("@pr_BillCity").Value.ToString) = False Then
                If command1.Parameters("@pr_BillCity").Value.ToString = "S'pore" Or command1.Parameters("@pr_BillCity").Value.ToString = "S'PORE" Then
                    ddlBillCity.Text = "SINGAPORE"
                Else
                    ddlBillCity.Text = command1.Parameters("@pr_BillCity").Value.ToString
                End If

            End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_BillCountry").Value.ToString) = False Then
                If command1.Parameters("@pr_BillCountry").Value.ToString = "S'pore" Or command1.Parameters("@pr_BillCountry").Value.ToString = "S'PORE" Then
                    ddlBillCountry.Text = "SINGAPORE"
                Else
                    ddlBillCountry.Text = command1.Parameters("@pr_BillCountry").Value.ToString
                End If
            End If


            If String.IsNullOrEmpty(command1.Parameters("@pr_BillState").Value.ToString) = False Then
                If command1.Parameters("@pr_BillState").Value.ToString = "S'pore" Or command1.Parameters("@pr_BillState").Value.ToString = "S'PORE" Then
                    ddlBillState.Text = "SINGAPORE"
                Else
                    ddlBillState.Text = command1.Parameters("@pr_BillState").Value.ToString
                End If
            End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillState").ToString) = False Then

            'End If

            txtBillPostal.Text = command1.Parameters("@pr_BillPostal").Value.ToString

            'txtBillCP1Contact.Text = dt.Rows(0)("BillContact1").ToString
            'txtBillCP1Position.Text = dt.Rows(0)("BillCont1Position").ToString
            'txtBillCP1Tel.Text = dt.Rows(0)("BillCont1Tel").ToString
            'txtBillCP1Fax.Text = dt.Rows(0)("BillCont1Fax").ToString
            'txtBillCP1Tel2.Text = dt.Rows(0)("BillCont1Tel2").ToString
            'txtBillCP1Mobile.Text = dt.Rows(0)("BillCont1Mobile").ToString
            'txtBillCP1Email.Text = dt.Rows(0)("BillCont1Email").ToString

            'txtBillCP2Contact.Text = dt.Rows(0)("BillContact2").ToString
            'txtBillCP2Position.Text = dt.Rows(0)("BillCont2Position").ToString
            'txtBillCP2Tel.Text = dt.Rows(0)("BillCont2Tel").ToString
            'txtBillCP2Fax.Text = dt.Rows(0)("BillCont2Fax").ToString
            'txtBillCP2Tel2.Text = dt.Rows(0)("BillCont2Tel2").ToString
            'txtBillCP2Mobile.Text = dt.Rows(0)("BillCont2Mobile").ToString
            'txtBillCP2Email.Text = dt.Rows(0)("BillCont2Email").ToString

            txtLocationID.Text = command1.Parameters("@pr_locationID").Value.ToString
            txtServiceName.Text = command1.Parameters("@pr_ServiceName").Value.ToString
            txtServiceDescription.Text = command1.Parameters("@pr_Description").Value.ToString

            txtAddress.Text = command1.Parameters("@pr_Address1").Value.ToString
            txtStreet.Text = command1.Parameters("@pr_AddStreet").Value.ToString
            txtBuilding.Text = command1.Parameters("@pr_AddBuilding").Value.ToString

            If String.IsNullOrEmpty(command1.Parameters("@pr_AddCity").Value.ToString) = False Then
                ddlCity.Text = command1.Parameters("@pr_AddCity").Value.ToString
            End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_AddCountry").Value.ToString) = False Then
                If command1.Parameters("@pr_AddCountry").Value.ToString = "S'pore" Or command1.Parameters("@pr_AddCountry").Value.ToString = "S'PORE" Then
                    ddlCountry.Text = "SINGAPORE"
                Else
                    ddlCountry.Text = command1.Parameters("@pr_AddCountry").Value.ToString
                End If
            End If


            If String.IsNullOrEmpty(command1.Parameters("@pr_AddState").Value.ToString) = False Then
                Dim gstate As String
                gstate = command1.Parameters("@pr_AddState").Value.ToString.ToUpper()

                If ddlState.Items.FindByValue(gstate) Is Nothing Then
                    ddlState.Items.Add(gstate)
                    ddlState.Text = gstate
                Else
                    ddlState.Text = command1.Parameters("@pr_AddState").Value.ToString
                End If

                'ddlState.Text = dt.Rows(0)("AddState").ToString
            End If


            txtPostal.Text = command1.Parameters("@pr_AddPostal").Value.ToString


            If String.IsNullOrEmpty(command1.Parameters("@pr_LocateGrp").Value.ToString) = False Then
                ddlLocateGrp.Text = command1.Parameters("@pr_LocateGrp").Value.ToString
            End If

            txtSvcCP1Contact.Text = command1.Parameters("@pr_ContactPersonID").Value.ToString
            'txtSvcCP1Contact.Text = dt.Rows(0)("ContactPersonID").ToString
            txtSvcCP1Position.Text = command1.Parameters("@pr_Contact1Position").Value.ToString
            txtSvcCP1Telephone.Text = command1.Parameters("@pr_Contact1Tel").Value.ToString
            txtSvcCP1Fax.Text = command1.Parameters("@pr_Contact1Fax").Value.ToString
            txtSvcCP1Telephone2.Text = command1.Parameters("@pr_Contact1Tel2").Value.ToString
            txtSvcCP1Mobile.Text = command1.Parameters("@pr_ContactPersonMobile").Value.ToString
            txtSvcCP1Email.Text = command1.Parameters("@pr_Email").Value.ToString

            txtSvcCP2Contact.Text = command1.Parameters("@pr_ContactPerson2").Value.ToString
            txtSvcCP2Position.Text = command1.Parameters("@pr_Contact2Position").Value.ToString
            txtSvcCP2Telephone.Text = command1.Parameters("@pr_Contact2Tel").Value.ToString
            txtSvcCP2Fax.Text = command1.Parameters("@pr_Contact2Fax").Value.ToString
            txtSvcCP2Tel2.Text = command1.Parameters("@pr_Contact2Tel2").Value.ToString
            txtSvcCP2Mobile.Text = command1.Parameters("@pr_Contact2Mobile").Value.ToString
            txtSvcCP2Email.Text = command1.Parameters("@pr_Contact2Email").Value.ToString

            If command1.Parameters("@pr_chkUrgent").Value.ToString Then
                chkUrgent.Checked = True
            Else
                chkUrgent.Checked = False
            End If

            'If dt.Rows(0)("upper(ScheduleType)").ToString <> "" Then
            '    ddlScheduleType.Text = dt.Rows(0)("upper(ScheduleType)").ToString
            'End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_ScheduleType").Value.ToString) = False Then
                Dim gschtype As String
                gschtype = command1.Parameters("@pr_ScheduleType").Value.ToString.ToUpper()

                If ddlScheduleType.Items.FindByValue(gschtype) Is Nothing Then
                    ddlScheduleType.Items.Add(gschtype)
                    ddlScheduleType.Text = gschtype
                Else
                    ddlScheduleType.Text = command1.Parameters("@pr_ScheduleType").Value.ToString
                End If
            End If

            If IsDBNull(command1.Parameters("@pr_SchServiceDate").Value) = True Then
            Else
                txtScheduleDate.Text = Convert.ToDateTime(command1.Parameters("@pr_SchServiceDate").Value).ToString("dd/MM/yyyy")
            End If
            txtScheduleTimeIn.Text = command1.Parameters("@pr_SchServiceTime").Value.ToString
            txtScheduleTimeOut.Text = command1.Parameters("@pr_SchServiceTimeOut").Value.ToString
            txtAllocatedTime.Text = command1.Parameters("@pr_AllocatedSvcTime").Value.ToString
            txtTeam.Text = command1.Parameters("@pr_TeamID").Value.ToString
            txtIncharge.Text = command1.Parameters("@pr_InchargeID").Value.ToString
            txtServiceBy.Text = command1.Parameters("@pr_ServiceBy").Value.ToString
            txtServiceBy2.Text = command1.Parameters("@pr_ServiceBy").Value.ToString
            txtSupervisor.Text = command1.Parameters("@pr_Supervisor").Value.ToString
            txtVehNo.Text = command1.Parameters("@pr_VehNo").Value.ToString
            txtDescription.Text = command1.Parameters("@pr_Notes").Value.ToString
            txtInstruction.Text = Server.HtmlDecode(command1.Parameters("@pr_Comments").Value.ToString)
            txtRemarks.Text = command1.Parameters("@pr_Remarks").Value.ToString
            txtBillingDescription.Text = command1.Parameters("@pr_Reason").Value.ToString


            If IsDBNull(command1.Parameters("@pr_ServiceDate").Value) = True Then
                'If command1.Parameters("@pr_ServiceDate").Value.ToString = DBNull.Value.ToString Then
            Else
                txtActSvcDate.Text = Convert.ToDateTime(command1.Parameters("@pr_ServiceDate").Value).ToString("dd/MM/yyyy")
            End If
            txtActSvcTimeFrom.Text = command1.Parameters("@pr_TimeIn").Value.ToString
            txtActSvcTimeTo.Text = command1.Parameters("@pr_TimeOut").Value.ToString
            txtServiceTime.Text = command1.Parameters("@pr_Duration").Value.ToString
            txtTotActualDuration.Text = command1.Parameters("@pr_TotalActualDuration").Value.ToString

            txtServiceRating.Text = command1.Parameters("@pr_ServiceRating").Value.ToString

            txtAmtBill.Text = command1.Parameters("@pr_BillAmount").Value.ToString
            txtInvoiceNo.Text = command1.Parameters("@pr_BillNo").Value.ToString
            txtInvoicedAmt.Text = command1.Parameters("@pr_BilledAmt").Value.ToString

            If command1.Parameters("@pr_CollectPayment").Value.ToString = "1" Then
                chkPayment.Checked = True
            Else
                chkPayment.Checked = False
            End If

            'txtCollectAmt.Text = dt.Rows(0)("CollectAmt").ToString
            'txtAmountRecvd.Text = dt.Rows(0)("AmountReceived").ToString

            txtCollectAmt.Text = command1.Parameters("@pr_AmtToCollect").Value.ToString
            txtAmountRecvd.Text = command1.Parameters("@pr_CollectAmt").Value.ToString
            txtEditAmountReceived.Text = command1.Parameters("@pr_CollectAmt").Value.ToString

            txtPaymentType.Text = command1.Parameters("@pr_Settle").Value.ToString
            txtRefNo.Text = command1.Parameters("@pr_RefNo").Value.ToString

            '''''''''''''''''''''''''''
            txtEditPaymentType.Text = command1.Parameters("@pr_Settle").Value.ToString
            txtEditRefNo.Text = command1.Parameters("@pr_RefNo").Value.ToString

            '''''''''''''''''''''
            txtCustAddress.Text = command1.Parameters("@pr_CustAddress1").Value.ToString
            txtCustBuilding.Text = command1.Parameters("@pr_CustAddBuilding").Value.ToString
            txtCustStreet.Text = command1.Parameters("@pr_CustAddStreet").Value.ToString
            txtCustCity.Text = command1.Parameters("@pr_CustAddCity").Value.ToString

            txtCustState.Text = command1.Parameters("@pr_CustAddState").Value.ToString
            txtCustCountry.Text = command1.Parameters("@pr_CustAddCountry").Value.ToString
            txtCustPostal.Text = command1.Parameters("@pr_CustAddPostal").Value.ToString

            txtCustTelephone.Text = command1.Parameters("@pr_CustTelephone").Value.ToString
            txtCustFax.Text = command1.Parameters("@pr_CustFax").Value.ToString
            txtCustMobile.Text = command1.Parameters("@pr_CustMobile").Value.ToString
            txtCustTel2.Text = command1.Parameters("@pr_CustTelephone2").Value.ToString


            'Already Done

            'txtOffAddress1.Text = dt.Rows(0)("OffAddress").ToString
            'txtOffStreet.Text = dt.Rows(0)("OffStreet").ToString
            'txtOffBuilding.Text = dt.Rows(0)("OffBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("OffCity").ToString) = False Then
            '    ddlOffCity.Text = dt.Rows(0)("OffCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("OffCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'PORE" Then
            '        ddlOffCountry.Text = "SINGAPORE"
            '    Else
            '        ddlOffCountry.Text = dt.Rows(0)("OffCountry").ToString
            '    End If
            'End If
            'If String.IsNullOrEmpty(dt.Rows(0)("OffState").ToString) = False Then
            '    ddlOffState.Text = dt.Rows(0)("OffState").ToString
            'End If

            'txtOffPostal.Text = dt.Rows(0)("OffPostal").ToString

            'Already Done



            'txtOffContactPerson.Text = dt.Rows(0)("OffContact1").ToString
            'txtOffPosition.Text = dt.Rows(0)("OffCont1Position").ToString
            'txtOffMobile.Text = dt.Rows(0)("OffCont1Mobile").ToString

            'txtOffContactNo.Text = dt.Rows(0)("OffCont1Tel").ToString
            'txtOffFax.Text = dt.Rows(0)("OffCont1Fax").ToString
            'txtOffContact2.Text = dt.Rows(0)("OffCont1Tel2").ToString
            'txtOffEmail.Text = dt.Rows(0)("OffCont1Email").ToString

            'txtOffCont1Name.Text = dt.Rows(0)("OffContact2").ToString
            'txtOffCont1Position.Text = dt.Rows(0)("OffCont2Position").ToString
            'txtOffCont1Tel.Text = dt.Rows(0)("OffCont2Tel").ToString
            'txtOffCont1Fax.Text = dt.Rows(0)("OffCont2Fax").ToString
            'txtOffCont1Tel2.Text = dt.Rows(0)("OffCont2Tel2").ToString
            'txtOffCont1Mobile.Text = dt.Rows(0)("OffCont2Mobile").ToString
            'txtOffCont1Email.Text = dt.Rows(0)("OffCont2Email").ToString

            'Already Done

            'If dt.Rows(0)("SameBillingAddress").ToString = "1" Then
            '    chkOffAddr.Checked = True
            'Else
            '    chkOffAddr.Checked = False
            'End If

            'txtBillingName.Text = dt.Rows(0)("BillingName").ToString

            'txtBillAddress.Text = dt.Rows(0)("BillAddress").ToString
            'txtBillStreet.Text = dt.Rows(0)("BillStreet").ToString
            'txtBillBuilding.Text = dt.Rows(0)("BillBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("BillCity").ToString) = False Then
            '    ddlBillCity.Text = dt.Rows(0)("BillCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'PORE" Then
            '        ddlBillCountry.Text = "SINGAPORE"
            '    Else
            '        ddlBillCountry.Text = dt.Rows(0)("BillCountry").ToString
            '    End If
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillState").ToString) = False Then
            '    ddlBillState.Text = dt.Rows(0)("BillState").ToString
            'End If
            'txtBillPostal.Text = dt.Rows(0)("BillPostal").ToString

            'Already Done


            If command1.Parameters("@pr_ServiceLocationGroup").Value.ToString <> "" Then
                txtServiceLocationGroup.Text = command1.Parameters("@pr_ServiceLocationGroup").Value.ToString
            End If

            If command1.Parameters("@pr_RequireClientSignature").Value.ToString = "1" Then
                chkReqCustSign.Checked = True
            Else
                chkReqCustSign.Checked = False
            End If

            txtOtherEmail.Text = command1.Parameters("@pr_OtherEmail").Value.ToString

            'txtBillCP1Contact.Text = dt.Rows(0)("BillContact1").ToString
            'txtBillCP1Position.Text = dt.Rows(0)("BillCont1Position").ToString
            'txtBillCP1Tel.Text = dt.Rows(0)("BillCont1Tel").ToString
            'txtBillCP1Fax.Text = dt.Rows(0)("BillCont1Fax").ToString
            'txtBillCP1Tel2.Text = dt.Rows(0)("BillCont1Tel2").ToString
            'txtBillCP1Mobile.Text = dt.Rows(0)("BillCont1Mobile").ToString
            'txtBillCP1Email.Text = dt.Rows(0)("BillCont1Email").ToString

            'txtBillCP2Contact.Text = dt.Rows(0)("BillContact2").ToString
            'txtBillCP2Position.Text = dt.Rows(0)("BillCont2Position").ToString
            'txtBillCP2Tel.Text = dt.Rows(0)("BillCont2Tel").ToString
            'txtBillCP2Fax.Text = dt.Rows(0)("BillCont2Fax").ToString
            'txtBillCP2Tel2.Text = dt.Rows(0)("BillCont2Tel2").ToString
            'txtBillCP2Mobile.Text = dt.Rows(0)("BillCont2Mobile").ToString
            'txtBillCP2Email.Text = dt.Rows(0)("BillCont2Email").ToString

            lblCustomerSignName.Text = command1.Parameters("@pr_CustomerSignName").Value.ToString
            lblCustomerSignDate.Text = command1.Parameters("@pr_CustomerSignDate").Value.ToString
            lblSvcStaffSignName.Text = command1.Parameters("@pr_ServiceBySignName").Value.ToString
            lblSvcStaffSignDate.Text = command1.Parameters("@pr_ServiceBySignDate").Value.ToString


            If IsDBNull(command1.Parameters("@pr_CustomerSign").Value) = False Then
                Dim custbytes As Byte() = DirectCast(command1.Parameters("@pr_CustomerSign").Value, Byte())
                Image1.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(custbytes)
            Else
                Image1.ImageUrl = ""
            End If

            If IsDBNull(command1.Parameters("@pr_ServiceBySign").Value) = False Then
                Dim svcbytes As Byte() = DirectCast(command1.Parameters("@pr_ServiceBySign").Value, Byte())
                Image2.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(svcbytes)
            Else
                Image2.ImageUrl = ""

            End If

            txtLocation.Text = command1.Parameters("@pr_Location").Value.ToString

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then

            'If String.IsNullOrEmpty(dt.Rows(0)("Status").ToString) = False Then
            '    ddlStatus.SelectedValue = dt.Rows(0)("Status").ToString
            'End If

            'txtLockSt.Text = dt.Rows(0)("LockSt").ToString

            'If dt.Rows(0)("Status").ToString = "P" Then
            '    btnUpdate.Text = "REVERSE"
            'ElseIf dt.Rows(0)("Status").ToString = "O" Then
            '    btnUpdate.Text = "UPDATE"
            'End If
            'txtSvcRecord.Text = dt.Rows(0)("RecordNo").ToString
            'txtServiceRecord.Text = txtSvcRecord.Text

            'lblRecordNo.Text = txtSvcRecord.Text
            'lblRecordNo1.Text = txtSvcRecord.Text
            'lblRecordNo2.Text = txtSvcRecord.Text
            'lblRecordNo3.Text = txtSvcRecord.Text
            'lblRecordNo5.Text = txtSvcRecord.Text
            'lblRecordNo6.Text = txtSvcRecord.Text
            'lblNotesKeyField.Text = txtSvcRecord.Text

            'lblTotalServiceArea.Text = dt.Rows(0)("TotalServiceArea").ToString
            'lblTotalAreaCompleted.Text = dt.Rows(0)("TotalAreaCompleted").ToString
            'lblTotalPrice.Text = dt.Rows(0)("TotalPriceOfAreaCompleted").ToString

            'txtSequence.Text = dt.Rows(0)("Seq").ToString
            'txtContractNo.Text = dt.Rows(0)("ContractNo").ToString
            'lblContractNo.Text = txtContractNo.Text

            'If String.IsNullOrEmpty(dt.Rows(0)("Companygroup").ToString) = False Then
            '    ddlCompanyGrp.Text = dt.Rows(0)("Companygroup").ToString
            'End If
            'txtScheduler.Text = dt.Rows(0)("Scheduler").ToString
            'txtOurRef.Text = dt.Rows(0)("OurRef").ToString
            'txtEditOurRef.Text = dt.Rows(0)("OurRef").ToString

            'txtYourRef.Text = dt.Rows(0)("YourRef").ToString
            'txtPoNo.Text = dt.Rows(0)("PoNo").ToString

            'txtFilling.Text = dt.Rows(0)("Filling").ToString


            'If String.IsNullOrEmpty(dt.Rows(0)("ContactType").ToString) = False Then
            '    ddlAccountType.Text = dt.Rows(0)("ContactType").ToString
            '    txtAccountType.Text = dt.Rows(0)("ContactType").ToString
            'End If
            'txtAccountID.Text = dt.Rows(0)("AccountID").ToString
            'txtAccountID1.Text = dt.Rows(0)("AccountID").ToString
            'txtCustName.Text = dt.Rows(0)("CustName").ToString
            'txtClientID.Text = dt.Rows(0)("CustCode").ToString
            'txtOffAddress1.Text = dt.Rows(0)("OffAddress").ToString
            'txtOffStreet.Text = dt.Rows(0)("OffStreet").ToString
            'txtOffBuilding.Text = dt.Rows(0)("OffBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("OffCity").ToString) = False Then
            '    ddlOffCity.Text = dt.Rows(0)("OffCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("OffCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'PORE" Then
            '        ddlOffCountry.Text = "SINGAPORE"
            '    Else
            '        ddlOffCountry.Text = dt.Rows(0)("OffCountry").ToString
            '    End If
            'End If
            'If String.IsNullOrEmpty(dt.Rows(0)("OffState").ToString) = False Then
            '    ddlOffState.Text = dt.Rows(0)("OffState").ToString
            'End If

            'txtOffPostal.Text = dt.Rows(0)("OffPostal").ToString

            ''txtOffContactPerson.Text = dt.Rows(0)("OffContact1").ToString
            ''txtOffPosition.Text = dt.Rows(0)("OffCont1Position").ToString
            ''txtOffMobile.Text = dt.Rows(0)("OffCont1Mobile").ToString

            ''txtOffContactNo.Text = dt.Rows(0)("OffCont1Tel").ToString
            ''txtOffFax.Text = dt.Rows(0)("OffCont1Fax").ToString
            ''txtOffContact2.Text = dt.Rows(0)("OffCont1Tel2").ToString
            ''txtOffEmail.Text = dt.Rows(0)("OffCont1Email").ToString

            ''txtOffCont1Name.Text = dt.Rows(0)("OffContact2").ToString
            ''txtOffCont1Position.Text = dt.Rows(0)("OffCont2Position").ToString
            ''txtOffCont1Tel.Text = dt.Rows(0)("OffCont2Tel").ToString
            ''txtOffCont1Fax.Text = dt.Rows(0)("OffCont2Fax").ToString
            ''txtOffCont1Tel2.Text = dt.Rows(0)("OffCont2Tel2").ToString
            ''txtOffCont1Mobile.Text = dt.Rows(0)("OffCont2Mobile").ToString
            ''txtOffCont1Email.Text = dt.Rows(0)("OffCont2Email").ToString

            'If dt.Rows(0)("SameBillingAddress").ToString = "1" Then
            '    chkOffAddr.Checked = True
            'Else
            '    chkOffAddr.Checked = False
            'End If

            'txtBillingName.Text = dt.Rows(0)("BillingName").ToString

            'txtBillAddress.Text = dt.Rows(0)("BillAddress").ToString
            'txtBillStreet.Text = dt.Rows(0)("BillStreet").ToString
            'txtBillBuilding.Text = dt.Rows(0)("BillBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("BillCity").ToString) = False Then
            '    ddlBillCity.Text = dt.Rows(0)("BillCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'PORE" Then
            '        ddlBillCountry.Text = "SINGAPORE"
            '    Else
            '        ddlBillCountry.Text = dt.Rows(0)("BillCountry").ToString
            '    End If
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillState").ToString) = False Then
            '    ddlBillState.Text = dt.Rows(0)("BillState").ToString
            'End If
            'txtBillPostal.Text = dt.Rows(0)("BillPostal").ToString

            ''txtBillCP1Contact.Text = dt.Rows(0)("BillContact1").ToString
            ''txtBillCP1Position.Text = dt.Rows(0)("BillCont1Position").ToString
            ''txtBillCP1Tel.Text = dt.Rows(0)("BillCont1Tel").ToString
            ''txtBillCP1Fax.Text = dt.Rows(0)("BillCont1Fax").ToString
            ''txtBillCP1Tel2.Text = dt.Rows(0)("BillCont1Tel2").ToString
            ''txtBillCP1Mobile.Text = dt.Rows(0)("BillCont1Mobile").ToString
            ''txtBillCP1Email.Text = dt.Rows(0)("BillCont1Email").ToString

            ''txtBillCP2Contact.Text = dt.Rows(0)("BillContact2").ToString
            ''txtBillCP2Position.Text = dt.Rows(0)("BillCont2Position").ToString
            ''txtBillCP2Tel.Text = dt.Rows(0)("BillCont2Tel").ToString
            ''txtBillCP2Fax.Text = dt.Rows(0)("BillCont2Fax").ToString
            ''txtBillCP2Tel2.Text = dt.Rows(0)("BillCont2Tel2").ToString
            ''txtBillCP2Mobile.Text = dt.Rows(0)("BillCont2Mobile").ToString
            ''txtBillCP2Email.Text = dt.Rows(0)("BillCont2Email").ToString


            'txtLocationID.Text = dt.Rows(0)("locationID").ToString
            'txtServiceName.Text = dt.Rows(0)("ServiceName").ToString
            'txtServiceDescription.Text = dt.Rows(0)("Description").ToString
            'txtAddress.Text = dt.Rows(0)("Address1").ToString
            'txtStreet.Text = dt.Rows(0)("AddStreet").ToString
            'txtBuilding.Text = dt.Rows(0)("AddBuilding").ToString

            'If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString) = False Then
            '    ddlCity.Text = dt.Rows(0)("AddCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("AddCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
            '        ddlCountry.Text = "SINGAPORE"
            '    Else
            '        ddlCountry.Text = dt.Rows(0)("AddCountry").ToString
            '    End If
            'End If


            'If String.IsNullOrEmpty(dt.Rows(0)("AddState").ToString) = False Then
            '    Dim gstate As String
            '    gstate = dt.Rows(0)("AddState").ToString.ToUpper()

            '    If ddlState.Items.FindByValue(gstate) Is Nothing Then
            '        ddlState.Items.Add(gstate)
            '        ddlState.Text = gstate
            '    Else
            '        ddlState.Text = dt.Rows(0)("AddState").ToString.Trim().ToUpper()
            '    End If

            '    'ddlState.Text = dt.Rows(0)("AddState").ToString
            'End If


            'txtPostal.Text = dt.Rows(0)("AddPostal").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("LocateGrp").ToString) = False Then
            '    ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString.ToUpper

            'End If

            'txtSvcCP1Contact.Text = dt.Rows(0)("ContactPersonID").ToString
            'txtSvcCP1Position.Text = dt.Rows(0)("Contact1Position").ToString
            'txtSvcCP1Telephone.Text = dt.Rows(0)("Contact1Tel").ToString
            'txtSvcCP1Fax.Text = dt.Rows(0)("Contact1Fax").ToString
            'txtSvcCP1Telephone2.Text = dt.Rows(0)("Contact1Tel2").ToString
            'txtSvcCP1Mobile.Text = dt.Rows(0)("ContactPersonMobile").ToString
            'txtSvcCP1Email.Text = dt.Rows(0)("Email").ToString

            'txtSvcCP2Contact.Text = dt.Rows(0)("ContactPerson2").ToString
            'txtSvcCP2Position.Text = dt.Rows(0)("Contact2Position").ToString
            'txtSvcCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
            'txtSvcCP2Fax.Text = dt.Rows(0)("Contact2Fax").ToString
            'txtSvcCP2Tel2.Text = dt.Rows(0)("Contact2Tel2").ToString
            'txtSvcCP2Mobile.Text = dt.Rows(0)("Contact2Mobile").ToString
            'txtSvcCP2Email.Text = dt.Rows(0)("Contact2Email").ToString

            'If dt.Rows(0)("chkUrgent").ToString = "1" Then
            '    chkUrgent.Checked = True
            'Else
            '    chkUrgent.Checked = False
            'End If
            ''If dt.Rows(0)("upper(ScheduleType)").ToString <> "" Then
            ''    ddlScheduleType.Text = dt.Rows(0)("upper(ScheduleType)").ToString
            ''End If

            'If String.IsNullOrEmpty(dt.Rows(0)("ScheduleType").ToString) = False Then
            '    Dim gschtype As String
            '    gschtype = dt.Rows(0)("ScheduleType").ToString.ToUpper()

            '    If ddlScheduleType.Items.FindByValue(gschtype) Is Nothing Then
            '        ddlScheduleType.Items.Add(gschtype)
            '        ddlScheduleType.Text = gschtype
            '    Else
            '        ddlScheduleType.Text = dt.Rows(0)("ScheduleType").ToString.Trim().ToUpper()
            '    End If
            'End If

            'If dt.Rows(0)("SchServiceDate").ToString = DBNull.Value.ToString Then
            'Else
            'txtScheduleDate.Text = Convert.ToDateTime(dt.Rows(0)("SchServiceDate")).ToString("dd/MM/yyyy")
            'End If
            'txtScheduleTimeIn.Text = dt.Rows(0)("SchServiceTime").ToString
            'txtScheduleTimeOut.Text = dt.Rows(0)("SchServiceTimeOut").ToString
            'txtAllocatedTime.Text = dt.Rows(0)("AllocatedSvcTime").ToString
            'txtTeam.Text = dt.Rows(0)("TeamID").ToString
            'txtIncharge.Text = dt.Rows(0)("InchargeID").ToString
            'txtServiceBy.Text = dt.Rows(0)("ServiceBy").ToString
            'txtSupervisor.Text = dt.Rows(0)("Supervisor").ToString
            'txtVehNo.Text = dt.Rows(0)("VehNo").ToString
            'txtDescription.Text = dt.Rows(0)("Notes").ToString
            'txtInstruction.Text = dt.Rows(0)("Comments").ToString
            'txtRemarks.Text = dt.Rows(0)("Remarks").ToString
            'txtBillingDescription.Text = dt.Rows(0)("Reason").ToString

            'If dt.Rows(0)("ServiceDate").ToString = DBNull.Value.ToString Then
            'Else
            '    txtActSvcDate.Text = Convert.ToDateTime(dt.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
            'End If
            'txtActSvcTimeFrom.Text = dt.Rows(0)("TimeIn").ToString
            'txtActSvcTimeTo.Text = dt.Rows(0)("TimeOut").ToString
            'txtServiceTime.Text = dt.Rows(0)("Duration").ToString
            'txtTotActualDuration.Text = dt.Rows(0)("TotalActualDuration").ToString

            'txtServiceRating.Text = dt.Rows(0)("ServiceRating").ToString

            'txtAmtBill.Text = dt.Rows(0)("BillAmount").ToString
            'txtInvoiceNo.Text = dt.Rows(0)("BillNo").ToString
            'txtInvoicedAmt.Text = dt.Rows(0)("BilledAmt").ToString

            'If dt.Rows(0)("CollectPayment").ToString = "1" Then
            '    chkPayment.Checked = True
            'Else
            '    chkPayment.Checked = False
            'End If

            ''txtCollectAmt.Text = dt.Rows(0)("CollectAmt").ToString
            ''txtAmountRecvd.Text = dt.Rows(0)("AmountReceived").ToString

            'txtCollectAmt.Text = dt.Rows(0)("AmtToCollect").ToString
            'txtAmountRecvd.Text = dt.Rows(0)("CollectAmt").ToString

            'txtPaymentType.Text = dt.Rows(0)("Settle").ToString
            'txtRefNo.Text = dt.Rows(0)("RefNo").ToString


            ' '''''''''''''''''''''''''''

            'txtEditAmountReceived.Text = dt.Rows(0)("CollectAmt").ToString
            'txtEditPaymentType.Text = dt.Rows(0)("Settle").ToString
            'txtEditRefNo.Text = dt.Rows(0)("RefNo").ToString

            ' '''''''''''''''''''''

            'txtCustAddress.Text = dt.Rows(0)("CustAddress1").ToString
            'txtCustBuilding.Text = dt.Rows(0)("CustAddBuilding").ToString
            'txtCustStreet.Text = dt.Rows(0)("CustAddStreet").ToString
            'txtCustCity.Text = dt.Rows(0)("CustAddCity").ToString

            'txtCustState.Text = dt.Rows(0)("CustAddState").ToString
            'txtCustCountry.Text = dt.Rows(0)("CustAddCountry").ToString
            'txtCustPostal.Text = dt.Rows(0)("CustAddPostal").ToString

            'txtCustTelephone.Text = dt.Rows(0)("CustTelephone").ToString
            'txtCustFax.Text = dt.Rows(0)("CustFax").ToString
            'txtCustMobile.Text = dt.Rows(0)("CustMobile").ToString
            'txtCustTel2.Text = dt.Rows(0)("CustTelephone2").ToString
            'txtCustContact.Text = dt.Rows(0)("Contact").ToString
            'txtSvcCP1Contact.Text = dt.Rows(0)("ContactPersonID").ToString

            'txtOffAddress1.Text = dt.Rows(0)("OffAddress").ToString
            'txtOffStreet.Text = dt.Rows(0)("OffStreet").ToString
            'txtOffBuilding.Text = dt.Rows(0)("OffBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("OffCity").ToString) = False Then
            '    ddlOffCity.Text = dt.Rows(0)("OffCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("OffCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("OffCountry")).ToString = "S'PORE" Then
            '        ddlOffCountry.Text = "SINGAPORE"
            '    Else
            '        ddlOffCountry.Text = dt.Rows(0)("OffCountry").ToString
            '    End If
            'End If
            'If String.IsNullOrEmpty(dt.Rows(0)("OffState").ToString) = False Then
            '    ddlOffState.Text = dt.Rows(0)("OffState").ToString
            'End If

            'txtOffPostal.Text = dt.Rows(0)("OffPostal").ToString

            ''txtOffContactPerson.Text = dt.Rows(0)("OffContact1").ToString
            ''txtOffPosition.Text = dt.Rows(0)("OffCont1Position").ToString
            ''txtOffMobile.Text = dt.Rows(0)("OffCont1Mobile").ToString

            ''txtOffContactNo.Text = dt.Rows(0)("OffCont1Tel").ToString
            ''txtOffFax.Text = dt.Rows(0)("OffCont1Fax").ToString
            ''txtOffContact2.Text = dt.Rows(0)("OffCont1Tel2").ToString
            ''txtOffEmail.Text = dt.Rows(0)("OffCont1Email").ToString

            ''txtOffCont1Name.Text = dt.Rows(0)("OffContact2").ToString
            ''txtOffCont1Position.Text = dt.Rows(0)("OffCont2Position").ToString
            ''txtOffCont1Tel.Text = dt.Rows(0)("OffCont2Tel").ToString
            ''txtOffCont1Fax.Text = dt.Rows(0)("OffCont2Fax").ToString
            ''txtOffCont1Tel2.Text = dt.Rows(0)("OffCont2Tel2").ToString
            ''txtOffCont1Mobile.Text = dt.Rows(0)("OffCont2Mobile").ToString
            ''txtOffCont1Email.Text = dt.Rows(0)("OffCont2Email").ToString

            'If dt.Rows(0)("SameBillingAddress").ToString = "1" Then
            '    chkOffAddr.Checked = True
            'Else
            '    chkOffAddr.Checked = False
            'End If

            'txtBillingName.Text = dt.Rows(0)("BillingName").ToString

            'txtBillAddress.Text = dt.Rows(0)("BillAddress").ToString
            'txtBillStreet.Text = dt.Rows(0)("BillStreet").ToString
            'txtBillBuilding.Text = dt.Rows(0)("BillBuilding").ToString
            'If String.IsNullOrEmpty(dt.Rows(0)("BillCity").ToString) = False Then
            '    ddlBillCity.Text = dt.Rows(0)("BillCity").ToString
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillCountry").ToString) = False Then
            '    If Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("BillCountry")).ToString = "S'PORE" Then
            '        ddlBillCountry.Text = "SINGAPORE"
            '    Else
            '        ddlBillCountry.Text = dt.Rows(0)("BillCountry").ToString
            '    End If
            'End If

            'If String.IsNullOrEmpty(dt.Rows(0)("BillState").ToString) = False Then
            '    ddlBillState.Text = dt.Rows(0)("BillState").ToString
            'End If
            'txtBillPostal.Text = dt.Rows(0)("BillPostal").ToString

            'If dt.Rows(0)("ServiceLocationGroup").ToString <> "" Then
            '    txtServiceLocationGroup.Text = dt.Rows(0)("ServiceLocationGroup").ToString
            'End If

            'If dt.Rows(0)("RequireClientSignature").ToString = "1" Then
            '    chkReqCustSign.Checked = True
            'Else
            '    chkReqCustSign.Checked = False
            'End If

            'txtOtherEmail.Text = dt.Rows(0)("OtherEmail").ToString

            ''txtBillCP1Contact.Text = dt.Rows(0)("BillContact1").ToString
            ''txtBillCP1Position.Text = dt.Rows(0)("BillCont1Position").ToString
            ''txtBillCP1Tel.Text = dt.Rows(0)("BillCont1Tel").ToString
            ''txtBillCP1Fax.Text = dt.Rows(0)("BillCont1Fax").ToString
            ''txtBillCP1Tel2.Text = dt.Rows(0)("BillCont1Tel2").ToString
            ''txtBillCP1Mobile.Text = dt.Rows(0)("BillCont1Mobile").ToString
            ''txtBillCP1Email.Text = dt.Rows(0)("BillCont1Email").ToString

            ''txtBillCP2Contact.Text = dt.Rows(0)("BillContact2").ToString
            ''txtBillCP2Position.Text = dt.Rows(0)("BillCont2Position").ToString
            ''txtBillCP2Tel.Text = dt.Rows(0)("BillCont2Tel").ToString
            ''txtBillCP2Fax.Text = dt.Rows(0)("BillCont2Fax").ToString
            ''txtBillCP2Tel2.Text = dt.Rows(0)("BillCont2Tel2").ToString
            ''txtBillCP2Mobile.Text = dt.Rows(0)("BillCont2Mobile").ToString
            ''txtBillCP2Email.Text = dt.Rows(0)("BillCont2Email").ToString

            'lblCustomerSignName.Text = dt.Rows(0)("CustomerSignName").ToString
            'lblCustomerSignDate.Text = dt.Rows(0)("CustomerSignDate").ToString
            'lblSvcStaffSignName.Text = dt.Rows(0)("ServiceBySignName").ToString
            'lblSvcStaffSignDate.Text = dt.Rows(0)("ServiceBySignDate").ToString


            'If IsDBNull(dt.Rows(0)("CustomerSign")) = False Then
            '    Dim custbytes As Byte() = DirectCast(dt.Rows(0)("CustomerSign"), Byte())
            '    Image1.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(custbytes)
            'Else
            '    Image1.ImageUrl = ""
            'End If

            'If IsDBNull(dt.Rows(0)("ServiceBySign")) = False Then
            '    Dim svcbytes As Byte() = DirectCast(dt.Rows(0)("ServiceBySign"), Byte())
            '    Image2.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(svcbytes)
            'Else
            '    Image2.ImageUrl = ""

            'End If

            'txtLocation.Text = dt.Rows(0)("Location").ToString



            RetrieveLastServiceDetails()


            '''''''''''''''''''''''''''''''''''''''''''

            'Dim lserviceBy1, lserviceBy2, lserviceBy3, lserviceBy4, lserviceBy5 As String
            'Dim lserviceDate1, lserviceDate2, lserviceDate3, lserviceDate4, lserviceDate5 As Date
            'Dim lTimeIn1, lTimeIn2, lTimeIn3, lTimeIn4, lTimeIn5 As String
            'Dim lTimeOut1, lTimeOut2, lTimeOut3, lTimeOut4, lTimeOut5 As String
            'Dim lDuration1, lDuration2, lDuration3, lDuration4, lDuration5 As String
            'Dim lScheduleType1, lScheduleType2, lScheduleType3, lScheduleType4, lScheduleType5 As String

            'Dim commandLastServiceDetails As MySqlCommand = New MySqlCommand

            'commandLastServiceDetails.CommandType = CommandType.StoredProcedure
            'commandLastServiceDetails.CommandText = "FindLastServiceDetails"
            ''commandIsExists.Connection = conn
            'commandLastServiceDetails.Parameters.Clear()

            'commandLastServiceDetails.Parameters.AddWithValue("@pr_RecordNo", txtRecordNoSelected.Text.Trim)
            'commandLastServiceDetails.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceBy1", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ServiceBy1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceDate1", MySqlDbType.Date))
            'commandLastServiceDetails.Parameters("@pr_ServiceDate1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeIn1", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeIn1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeOut1", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeOut1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceBy2", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ServiceBy2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceDate2", MySqlDbType.Date))
            'commandLastServiceDetails.Parameters("@pr_ServiceDate2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeIn2", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeIn2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeOut2", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeOut2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceBy3", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ServiceBy3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceDate3", MySqlDbType.Date))
            'commandLastServiceDetails.Parameters("@pr_ServiceDate3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeIn3", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeIn3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeOut3", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeOut3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceBy4", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ServiceBy4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceDate4", MySqlDbType.Date))
            'commandLastServiceDetails.Parameters("@pr_ServiceDate4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeIn4", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeIn4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeOut4", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeOut4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceBy5", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ServiceBy5").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ServiceDate5", MySqlDbType.Date))
            'commandLastServiceDetails.Parameters("@pr_ServiceDate5").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeIn5", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeIn5").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_TimeOut5", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_TimeOut5").Direction = ParameterDirection.Output


            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_Duration1", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_Duration1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_Duration2", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_Duration2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_Duration3", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_Duration3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_Duration4", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_Duration4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_Duration5", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_Duration5").Direction = ParameterDirection.Output


            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ScheduleType1", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ScheduleType1").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ScheduleType2", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ScheduleType2").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ScheduleType3", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ScheduleType3").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ScheduleType4", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ScheduleType4").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Parameters.Add(New MySqlParameter("@pr_ScheduleType5", MySqlDbType.String))
            'commandLastServiceDetails.Parameters("@pr_ScheduleType5").Direction = ParameterDirection.Output

            'commandLastServiceDetails.Connection = conn
            'commandLastServiceDetails.ExecuteScalar()




            'txtCharCountServiceDescription.Visible = True
            'txtCharCountSI.Visible = True
            'txtCharCountRemarks.Visible = True
            'txtCharCountBillingDescription.Visible = True

            txtCharCountEditRemarks.Visible = True
            txtCharCountEditSI.Visible = True


            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsDescription(this);</Script>", False)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsInstruction(this);</Script>", False)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsRemarks(this);</Script>", False)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsBillingDescription(this);</Script>", False)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this); CalculateCharsEditSI(this); </Script>", False)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this); </Script>", True)



            'lserviceBy1 = commandLastServiceDetails.Parameters("@pr_ServiceBy1").Value.ToString

            'If String.IsNullOrEmpty(lserviceBy1) = False Then
            '    LabelServDet1.Text = "" & lserviceBy1
            'Else
            '    LabelServDet1.Text = ""
            'End If

            'If Not IsDBNull(commandLastServiceDetails.Parameters("@pr_ServiceDate1").Value.ToString) Then
            '    If String.IsNullOrEmpty(commandLastServiceDetails.Parameters("@pr_ServiceDate1").Value.ToString) = False Then
            '        lserviceDate1 = commandLastServiceDetails.Parameters("@pr_ServiceDate1").Value.ToString
            '    End If
            'End If


            'If (lserviceDate1) = "00:00:00" Or String.IsNullOrEmpty(lserviceDate1) = True Then
            '    LabelLastServiceDate1.Text = ""
            '    LabelLastServiceDay1.Text = ""
            'Else
            '    LabelLastServiceDate1.Text = "" & lserviceDate1
            '    LabelLastServiceDay1.Text = "" & DateTime.Parse(lserviceDate1).DayOfWeek.ToString().ToUpper
            'End If


            'lTimeIn1 = commandLastServiceDetails.Parameters("@pr_TimeIn1").Value.ToString
            'lTimeOut1 = commandLastServiceDetails.Parameters("@pr_TimeOut1").Value.ToString


            'If String.IsNullOrEmpty(lTimeIn1) = False Then
            '    LabelActualTime1.Text = "" & lTimeIn1 & " to " & lTimeOut1
            'Else
            '    LabelActualTime1.Text = ""
            'End If


            'lDuration1 = commandLastServiceDetails.Parameters("@pr_Duration1").Value.ToString

            'If String.IsNullOrEmpty(lDuration1) = False Then
            '    LabelDuration1.Text = "" & lDuration1
            'Else
            '    LabelDuration1.Text = ""
            'End If

            'lScheduleType1 = commandLastServiceDetails.Parameters("@pr_ScheduleType1").Value.ToString

            'If String.IsNullOrEmpty(lScheduleType1) = False Then
            '    LabelScheduleType1.Text = "" & lScheduleType1
            'Else
            '    LabelScheduleType1.Text = ""
            'End If
            ' '''''2

            'lserviceBy2 = commandLastServiceDetails.Parameters("@pr_ServiceBy2").Value.ToString

            'If String.IsNullOrEmpty(lserviceBy2) = False Then
            '    LabelServDet2.Text = "" & lserviceBy2
            'Else
            '    LabelServDet2.Text = ""
            'End If

            'If Not IsDBNull(commandLastServiceDetails.Parameters("@pr_ServiceDate2").Value.ToString) Then
            '    If String.IsNullOrEmpty(commandLastServiceDetails.Parameters("@pr_ServiceDate2").Value.ToString) = False Then
            '        lserviceDate2 = commandLastServiceDetails.Parameters("@pr_ServiceDate2").Value.ToString

            '    End If
            'End If


            'If (lserviceDate2) = "00:00:00" Or String.IsNullOrEmpty(lserviceDate2) = True Then
            '    LabelLastServiceDate2.Text = ""
            '    LabelLastServiceDay2.Text = ""
            'Else
            '    LabelLastServiceDate2.Text = "" & lserviceDate2
            '    LabelLastServiceDay2.Text = "" & DateTime.Parse(lserviceDate2).DayOfWeek.ToString().ToUpper
            'End If


            'lTimeIn2 = commandLastServiceDetails.Parameters("@pr_TimeIn2").Value.ToString
            'lTimeOut2 = commandLastServiceDetails.Parameters("@pr_TimeOut2").Value.ToString

            'If String.IsNullOrEmpty(lTimeIn2) = False Then
            '    LabelActualTime2.Text = "" & lTimeIn2 & " to " & lTimeOut2
            'Else
            '    LabelActualTime2.Text = ""
            'End If

            'lDuration2 = commandLastServiceDetails.Parameters("@pr_Duration2").Value.ToString

            'If String.IsNullOrEmpty(lDuration2) = False Then
            '    LabelDuration2.Text = "" & lDuration2
            'Else
            '    LabelDuration2.Text = ""
            'End If

            'lScheduleType2 = commandLastServiceDetails.Parameters("@pr_ScheduleType2").Value.ToString

            'If String.IsNullOrEmpty(lScheduleType2) = False Then
            '    LabelScheduleType2.Text = "" & lScheduleType2
            'Else
            '    LabelScheduleType2.Text = ""
            'End If

            ' '''''2


            ' '''''3

            'lserviceBy3 = commandLastServiceDetails.Parameters("@pr_ServiceBy3").Value.ToString

            'If String.IsNullOrEmpty(lserviceBy3) = False Then
            '    LabelServDet3.Text = "" & lserviceBy3
            'Else
            '    LabelServDet3.Text = ""
            'End If

            'If Not IsDBNull(commandLastServiceDetails.Parameters("@pr_ServiceDate3").Value.ToString) Then
            '    If String.IsNullOrEmpty(commandLastServiceDetails.Parameters("@pr_ServiceDate3").Value.ToString) = False Then
            '        lserviceDate3 = commandLastServiceDetails.Parameters("@pr_ServiceDate3").Value.ToString
            '    End If
            'End If


            'If (lserviceDate3) = "00:00:00" Or String.IsNullOrEmpty(lserviceDate3) = True Then
            '    LabelLastServiceDate3.Text = ""
            '    LabelLastServiceDay3.Text = ""
            'Else
            '    LabelLastServiceDate3.Text = "" & lserviceDate3
            '    LabelLastServiceDay3.Text = "" & DateTime.Parse(lserviceDate3).DayOfWeek.ToString().ToUpper
            'End If


            'lTimeIn3 = commandLastServiceDetails.Parameters("@pr_TimeIn3").Value.ToString
            'lTimeOut3 = commandLastServiceDetails.Parameters("@pr_TimeOut3").Value.ToString

            'If String.IsNullOrEmpty(lTimeIn3) = False Then
            '    LabelActualTime3.Text = "" & lTimeIn3 & " to " & lTimeOut3
            'Else
            '    LabelActualTime3.Text = ""
            'End If

            'lDuration3 = commandLastServiceDetails.Parameters("@pr_Duration3").Value.ToString

            'If String.IsNullOrEmpty(lDuration3) = False Then
            '    LabelDuration3.Text = "" & lDuration3
            'Else
            '    LabelDuration3.Text = ""
            'End If

            'lScheduleType3 = commandLastServiceDetails.Parameters("@pr_ScheduleType3").Value.ToString

            'If String.IsNullOrEmpty(lScheduleType3) = False Then
            '    LabelScheduleType3.Text = "" & lScheduleType3
            'Else
            '    LabelScheduleType3.Text = ""
            'End If

            ' '''''3


            ' '''''4

            'lserviceBy4 = commandLastServiceDetails.Parameters("@pr_ServiceBy4").Value.ToString

            'If String.IsNullOrEmpty(lserviceBy4) = False Then
            '    LabelServDet4.Text = "" & lserviceBy4
            'Else
            '    LabelServDet4.Text = ""
            'End If

            'If Not IsDBNull(commandLastServiceDetails.Parameters("@pr_ServiceDate4").Value.ToString) Then
            '    If String.IsNullOrEmpty(commandLastServiceDetails.Parameters("@pr_ServiceDate4").Value.ToString) = False Then
            '        lserviceDate4 = commandLastServiceDetails.Parameters("@pr_ServiceDate4").Value.ToString
            '    End If
            'End If


            'If (lserviceDate4) = "00:00:00" Or String.IsNullOrEmpty(lserviceDate4) = True Then
            '    LabelLastServiceDate4.Text = ""
            '    LabelLastServiceDay4.Text = ""
            'Else
            '    LabelLastServiceDate4.Text = "" & lserviceDate4
            '    LabelLastServiceDay4.Text = "" & DateTime.Parse(lserviceDate4).DayOfWeek.ToString().ToUpper
            'End If


            'lTimeIn4 = commandLastServiceDetails.Parameters("@pr_TimeIn4").Value.ToString
            'lTimeOut4 = commandLastServiceDetails.Parameters("@pr_TimeOut4").Value.ToString

            'If String.IsNullOrEmpty(lTimeIn4) = False Then
            '    LabelActualTime4.Text = "" & lTimeIn4 & " to " & lTimeOut4
            'Else
            '    LabelActualTime4.Text = ""
            'End If

            'lDuration4 = commandLastServiceDetails.Parameters("@pr_Duration4").Value.ToString

            'If String.IsNullOrEmpty(lDuration4) = False Then
            '    LabelDuration4.Text = "" & lDuration4
            'Else
            '    LabelDuration4.Text = ""
            'End If

            'lScheduleType4 = commandLastServiceDetails.Parameters("@pr_ScheduleType4").Value.ToString

            'If String.IsNullOrEmpty(lScheduleType4) = False Then
            '    LabelScheduleType4.Text = "" & lScheduleType4
            'Else
            '    LabelScheduleType4.Text = ""
            'End If

            ' '''''4

            ' '''''5

            'lserviceBy5 = commandLastServiceDetails.Parameters("@pr_ServiceBy5").Value.ToString

            'If String.IsNullOrEmpty(lserviceBy4) = False Then
            '    LabelServDet5.Text = "" & lserviceBy5
            'Else
            '    LabelServDet5.Text = ""
            'End If

            'If Not IsDBNull(commandLastServiceDetails.Parameters("@pr_ServiceDate5").Value.ToString) Then
            '    If String.IsNullOrEmpty(commandLastServiceDetails.Parameters("@pr_ServiceDate5").Value.ToString) = False Then
            '        lserviceDate5 = commandLastServiceDetails.Parameters("@pr_ServiceDate5").Value.ToString
            '    End If
            'End If


            'If (lserviceDate5) = "00:00:00" Or String.IsNullOrEmpty(lserviceDate5) = True Then
            '    LabelLastServiceDate5.Text = ""
            '    LabelLastServiceDay5.Text = ""
            'Else
            '    LabelLastServiceDate5.Text = "" & lserviceDate5
            '    LabelLastServiceDay5.Text = "" & DateTime.Parse(lserviceDate5).DayOfWeek.ToString().ToUpper
            'End If


            'lTimeIn5 = commandLastServiceDetails.Parameters("@pr_TimeIn5").Value.ToString
            'lTimeOut5 = commandLastServiceDetails.Parameters("@pr_TimeOut5").Value.ToString

            'If String.IsNullOrEmpty(lTimeIn5) = False Then
            '    LabelActualTime5.Text = "" & lTimeIn5 & " to " & lTimeOut5
            'Else
            '    LabelActualTime5.Text = ""
            'End If

            'lDuration5 = commandLastServiceDetails.Parameters("@pr_Duration5").Value.ToString

            'If String.IsNullOrEmpty(lDuration5) = False Then
            '    LabelDuration5.Text = "" & lDuration5
            'Else
            '    LabelDuration5.Text = ""
            'End If


            'lScheduleType5 = commandLastServiceDetails.Parameters("@pr_ScheduleType5").Value.ToString

            'If String.IsNullOrEmpty(lScheduleType5) = False Then
            '    LabelScheduleType5.Text = "" & lScheduleType5
            'Else
            '    LabelScheduleType5.Text = ""
            'End If
            ' '''''5

            'commandLastServiceDetails.Dispose()

            ''''''''''''''''''''''''''''''''''''''''''


            '''''''''''''''''''''''''''''

            txtIsRequireFollowup.Text = "N"

            'If Left(ddlStatus.Text, 1) = "P" Then

            Dim commandSpecificLocationName As MySqlCommand = New MySqlCommand
            commandSpecificLocationName.CommandType = CommandType.Text
            commandSpecificLocationName.CommandText = "Select SpecificLocationName, RequireFollowUp, EndServiceDate, FollowUpRecordNo, ReportServiceStart, ReportServiceEnd, WorkOrderNo FROM tblservicerecord2 where RecordNo ='" & txtServiceRecord.Text & "'"

            commandSpecificLocationName.Connection = conn

            Dim drSpecificLocationName As MySqlDataReader = commandSpecificLocationName.ExecuteReader()
            Dim dtSpecificLocationName As New System.Data.DataTable
            dtSpecificLocationName.Load(drSpecificLocationName)


            If dtSpecificLocationName.Rows.Count > 0 Then

                txtSpecificLocation.Text = dtSpecificLocationName.Rows(0)("SpecificLocationName").ToString


                If Convert.ToBoolean(dtSpecificLocationName.Rows(0)("RequireFollowup")) = True And String.IsNullOrEmpty(dtSpecificLocationName.Rows(0)("FollowUpRecordNo").ToString) = True Then
                    lblFollowUpRecordNo.Text = txtSvcRecord.Text
                    mdlRequireFollowUp.Show()
                End If
           

            If IsDBNull(dtSpecificLocationName.Rows(0)("ReportServiceStart")) = False Then
                txtReportServiceStart.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("ReportServiceStart")).ToString("dd/MM/yyyy")
                txtReportServiceStartTime.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("ReportServiceStart")).ToString("HH:mm")
            Else
                '  txtReportServiceStart.Text = txtActSvcDate.Text
                '  txtReportServiceStartTime.Text = txtActSvcTimeFrom.Text
            End If

            If IsDBNull(dtSpecificLocationName.Rows(0)("ReportServiceEnd")) = False Then
                txtReportServiceEnd.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("ReportServiceEnd")).ToString("dd/MM/yyyy")
                txtReportServiceEndTime.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("ReportServiceEnd")).ToString("HH:mm")
            Else
                '   txtReportServiceEnd.Text = txtActSvcDate.Text
                '  txtReportServiceEndTime.Text = txtActSvcTimeTo.Text
            End If

            If IsDBNull(dtSpecificLocationName.Rows(0)("EndServiceDate")) = False Then
                txtActSvcEndDate.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("EndServiceDate")).ToString("dd/MM/yyyy")
            Else

                txtActSvcEndDate.Text = txtReportServiceEnd.Text
                End If

                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
                    txtActSvcTimeFrom.Text = txtReportServiceStartTime.Text
                End If

                If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
                    txtActSvcTimeTo.Text = txtReportServiceEndTime.Text
                End If
            End If

            txtWorkOrderNo.Text = dtSpecificLocationName.Rows(0)("WorkOrderNo").ToString

            'If IsDBNull(dtSpecificLocationName.Rows(0)("EndServiceDate")) = False Then
            '    txtActSvcEndDate.Text = Convert.ToDateTime(dtSpecificLocationName.Rows(0)("EndServiceDate")).ToString("dd/MM/yyyy")
            'End If
            'Convert.ToDateTime(dt.Rows(0)("SalesDate")).ToString("dd/MM/yyyy")

            'Convert.ToDateTime(command1.Parameters("@pr_ServiceDate").Value).ToString("dd/MM/yyyy")



            'If Convert.ToBoolean(dtSpecificLocationName.Rows(0)("RequireFollowup")) = True And String.IsNullOrEmpty(dtSpecificLocationName.Rows(0)("FollowUpRecordNo").ToString) = True Then

            '    mdlRequireFollowUp.Show()
            'End If
            commandSpecificLocationName.Dispose()
            drSpecificLocationName.Close()
            'End If

            ''''''''''''''''''''''''''''''''


            '''''''''Transaction

            CalculateTransaction()
            'Dim commandTrans As MySqlCommand = New MySqlCommand

            'commandTrans.CommandType = CommandType.Text
            'commandTrans.CommandText = "SELECT count(tblsalesdetail.InvoiceNumber) as VoucherNumber FROM tblsales, tblsalesdetail where tblsales.InvoiceNumber = tblsalesdetail.InvoiceNumber and  tblsales.PostStatus = 'P' and tblsalesdetail.subcode='service' and tblsalesdetail.reftype= '" & txtServiceRecord.Text & "'"
            'commandTrans.Connection = conn

            'Dim drTrans As MySqlDataReader = commandTrans.ExecuteReader()
            'Dim dtTrans As New DataTable
            'dtTrans.Load(drTrans)

            'If dtTrans.Rows.Count > 0 Then
            '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
            '    btnTransactions.Text = "TRANSACTIONS [" & Val(dtTrans.Rows(0)("VoucherNumber").ToString).ToString & "]"
            '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If


            ' '''' Start :Contract is expired?


            'If String.IsNullOrEmpty(lblContract1.Text) = False Then
            '    Dim connIsContractExpired As MySqlConnection = New MySqlConnection()

            '    connIsContractExpired.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsContractExpired.Open()

            '    Dim commandIsContractExpired As MySqlCommand = New MySqlCommand

            '    commandIsContractExpired.CommandType = CommandType.Text
            '    commandIsContractExpired.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
            '    commandIsContractExpired.Connection = connIsContractExpired

            '    Dim drIsContractExpired As MySqlDataReader = commandIsContractExpired.ExecuteReader()
            '    Dim dtIsContractExpired As New DataTable
            '    dtIsContractExpired.Load(drIsContractExpired)

            '    If dtIsContractExpired.Rows.Count > 0 Then

            '        If String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("ActualEnd").ToString) = False Then
            '            If Convert.ToDateTime(dtIsContractExpired.Rows(0)("ActualEnd").ToString) < DateTime.Today Then
            '                btnADD.Enabled = False
            '                btnCopy.Enabled = False

            '                btnADD.ForeColor = System.Drawing.Color.Gray
            '                btnCopy.ForeColor = System.Drawing.Color.Gray
            '            End If
            '        ElseIf String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("EndDate").ToString) = False Then
            '            If Convert.ToDateTime(dtIsContractExpired.Rows(0)("EndDate").ToString) < DateTime.Today Then
            '                btnADD.Enabled = False
            '                btnCopy.Enabled = False

            '                btnADD.ForeColor = System.Drawing.Color.Gray
            '                btnCopy.ForeColor = System.Drawing.Color.Gray
            '            End If

            '        End If
            '        'If dtIsContractExpired.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

            '        'Else
            '        '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
            '        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        '    Exit Sub
            '        'End If
            '    End If

            '    connIsContractExpired.Close()
            '    connIsContractExpired.Dispose()
            '    commandIsContractExpired.Dispose()
            '    dtIsContractExpired.Dispose()
            '    drIsContractExpired.Close()
            'End If

            ' '''' End :Contract is expired?

            'txtRecordNoSelected.Text = lblRecordNo.Text

            'SqlDSInvoiceDetails.SelectCommand = "SELECT count(InvoiceNumber) as VoucherNumber FROM tblsalesdetail where PostStatus <> 'V' and subcode='service' and reftype= '" & txtRecordNoSelected.Text & "'"

            ''SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.appliedbase as Amount,if(doctype ='ARIN','INVOICE' ,'CN') as Type FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and subcode='service' and reftype=@RecordNo ORDER BY VoucherNumber

            'SqlDSInvoiceDetails.DataBind()
            'grdViewInvoiceDetails.DataBind()

            'Session.Add("customerfrom", "Service")

            'If grdViewInvoiceDetails.Rows.Count = 0 Then
            '    'lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS SERVICE"
            '    btnTransactions.Text = "TRANSACTION [" & Val(dtJournal.Rows(0)("VoucherNumber").ToString).ToString & "]"
            'Else
            '    lblAlertTransactions.Text = ""
            'End If

            '''''''''' Transaction

            'End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            'dt.Dispose()
            'dr.Close()


            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()
            If gvUpload.Rows.Count >= 0 Then
                lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
            Else
                lblFileUploadCount.Text = "File Upload"

            End If

            'BindGrid()
            'lblServicePhotosCount.Text = "Service Photos [" & gvImages.Rows.Count & "]"

            FindTotOsServices()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("RetrieveData", ex.Message.ToString, txtRcno.Text)
        End Try

        'quoted by Sen
        'txtMode.Text = "Edit"
        'quoted by Sen
        EnableControls()


        btnDelete.Enabled = True
        btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black
        btnCopy.Enabled = True
        btnCopy.ForeColor = System.Drawing.Color.Black
        btnEdit.Enabled = True
        btnEdit.ForeColor = System.Drawing.Color.Black
        btnPrint.Enabled = True
        btnPrint.ForeColor = System.Drawing.Color.Black
        btnUpdate.Enabled = True
        btnUpdate.ForeColor = System.Drawing.Color.Black
        btnStatus.Enabled = True
        btnStatus.ForeColor = System.Drawing.Color.Black
        btnTransactions.Enabled = True
        btnTransactions.ForeColor = System.Drawing.Color.Black

        btnReCalculate.Enabled = True
        btnReCalculate.ForeColor = System.Drawing.Color.Black
     
        If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then
            btnSvcAdd.Enabled = False
            btnSvcAdd.ForeColor = System.Drawing.Color.Gray
            btnClientImport.Enabled = False
            btnClientImport.ForeColor = System.Drawing.Color.Gray
            btnTechAdd.Enabled = False
            btnTechAdd.ForeColor = System.Drawing.Color.Gray
        End If


        EnableSvcControls()
        EnableTechControls()

        btnTechEdit.Enabled = False
        btnTechDelete.Enabled = False

        btnTechEdit.ForeColor = System.Drawing.Color.Gray
        btnTechDelete.ForeColor = System.Drawing.Color.Gray

        EnableNotesControls()
        EnableItemsIssuedControls()
        EnablePestCountControls()
        EnableControlsTS()

        'btnEditNotesMaster.Enabled = False
        'btnDeleteNotesMaster.Enabled = False

        'btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
        'btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        EnableAreaControls()



        btnAreaEdit.Enabled = False
        btnAreaDelete.Enabled = False

        btnAreaEdit.ForeColor = System.Drawing.Color.Gray
        btnAreaDelete.ForeColor = System.Drawing.Color.Gray

        SqlDataSource2.SelectCommand = "SELECT rcno,RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastmodifiedBy, LastModifiedon FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
        SqlDataSource2.DataBind()
        GridView2.DataBind()
        GridView2.SelectedIndex = 0


        If rdoListView.Checked Then
            If GridView2.Rows.Count = 0 Then
                mdlBlankServiceDetail.Show()
            Else
                mdlBlankServiceDetail.Hide()
            End If
        End If
        SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
        SqlDSServiceStaff.DataBind()
        GridView3.DataBind()

        SqlDSServiceArea.SelectCommand = "SELECT Description, PricePerSquareMeter, AreaCompleted, TotalPriceOfCompletedArea, RecordNo,rcno, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn FROM tblservicerecordservicearea where recordno = '" + txtSvcRecord.Text + "'"
        SqlDSServiceArea.DataBind()
        GridView4.DataBind()

        sqlDSItemsIssued.SelectCommand = "SELECT Rcno, RecordNo, ItemID, ItemName, Qty, UnitMS, Remarks FROM tblservicerecordissueditem where recordno = '" + txtSvcRecord.Text + "' order by ItemID"
        sqlDSItemsIssued.DataBind()

        grdViewItemsIssued.DataSourceID = "sqlDSItemsIssued"
        grdViewItemsIssued.DataBind()

        SqlDSPestCount.SelectCommand = "SELECT Rcno, RecordNo, PestID, Qty, Location, TrapType, TrapSerialNo, Gender, LifeStage, Species, Remarks, LevelofInfestation FROM tblservicerecordpest where recordno = '" + txtSvcRecord.Text + "' order by PestID"
        SqlDSPestCount.DataBind()

        GrdViewPestCount.DataSourceID = "SqlDSPestCount"
        GrdViewPestCount.DataBind()

        SqlDSNotesMaster.SelectCommand = "select Rcno, KeyModule, KeyField, StaffID, Notes, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn from tblnotes where keyfield = '" + txtSvcRecord.Text + "'"
        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataSourceID = "SqlDSNotesMaster"
        gvNotesMaster.DataBind()


        SqlDSTS1.SelectCommand = "SELECT Rcno, RecordNo, StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut, Duration, Comments FROM tblServiceRecordStaffTimeSheet where recordno = '" + txtSvcRecord.Text + "' order by StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut"
        SqlDSTS1.DataBind()
        GridViewTS1.DataSourceID = "SqlDSTS1"
        GridViewTS1.DataBind()

        CalculateTotalDurationTS()

      

        'View Uploaded files
        iframeid.Attributes.Add("src", "about:blank")


        If String.IsNullOrEmpty(txtAccountID.Text.Trim) = False Then
            FindIsInActiveCustomer()
        End If
        DisplayNoOfPhoto()
    End Sub

    Private Sub CalculateTransaction()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandTrans As MySqlCommand = New MySqlCommand

            commandTrans.CommandType = CommandType.Text
            commandTrans.CommandText = "SELECT count(tblsalesdetail.InvoiceNumber) as VoucherNumber FROM tblsales, tblsalesdetail where tblsales.InvoiceNumber = tblsalesdetail.InvoiceNumber and  tblsales.PostStatus = 'P' and tblsalesdetail.subcode='service' and tblsalesdetail.reftype= '" & txtServiceRecord.Text & "'"
            commandTrans.Connection = conn

            Dim drTrans As MySqlDataReader = commandTrans.ExecuteReader()
            Dim dtTrans As New DataTable
            dtTrans.Load(drTrans)

            If dtTrans.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnTransactions.Text = "TRANSACTIONS [" & Val(dtTrans.Rows(0)("VoucherNumber").ToString).ToString & "]"
               
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CalculateTransaction", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub FindIsInActiveCustomer()

        If ddlAccountType.Text <> "-1" Then
            Dim sqlstr As String
            sqlstr = ""

        If ddlAccountType.Text = "CORPORTE" Or ddlAccountType.Text = "COMPANY" Then
            sqlstr = "SELECT InActive FROM tblCompany where AccountId = '" & txtAccountID.Text & "'"
        ElseIf ddlAccountType.Text = "RESIDENTIAL" Or ddlAccountType.Text = "PERSON" Then
            sqlstr = "SELECT InActive FROM tblPerson where AccountId = '" & txtAccountID.Text & "'"
        End If
        Try
            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Inactive").ToString = "1" Then
                    chkInactive.Checked = True
                        'btnEdit.Enabled = False
                        'btnEdit.ForeColor = System.Drawing.Color.Gray


                        btnADD.Enabled = False
                        btnADD.ForeColor = System.Drawing.Color.Gray

                        btnCopy.Enabled = False
                        btnCopy.ForeColor = System.Drawing.Color.Gray
                        '13.05



                        sqlstr = "SELECT StaffID, Logdate, Comments FROM tbleventlog where Docref = '" & txtAccountID.Text & "' and Module ='CHST' and Action='CHST'"


                        Dim commandComments As MySqlCommand = New MySqlCommand

                        Dim connComments As MySqlConnection = New MySqlConnection()
                        connComments.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        connComments.Open()

                        commandComments.CommandType = CommandType.Text
                        commandComments.CommandText = sqlstr
                        commandComments.Connection = connComments

                        Dim drComments As MySqlDataReader = commandComments.ExecuteReader()
                        Dim dtComments As New DataTable
                        dtComments.Load(drComments)

                        If dtComments.Rows.Count > 0 Then
                            'lblIsInActiveAccountId.Text = txtAccountID.Text & " - " & txtCustName.Text & " is an InActive Account (" & dtComments.Rows(0)("Comments").ToString & ")"

                            lblInactiveAccount1.Text = "This account is made INACTIVE by " & dtComments.Rows(0)("StaffID").ToString & " on " & Convert.ToDateTime(dtComments.Rows(0)("LogDate")).ToString("dd/MM/yyyy")
                            lblInactiveAccount2.Text = txtAccountID.Text
                            lblInactiveAccount3.Text = txtCustName.Text
                            lblInactiveAccount4.Text = dtComments.Rows(0)("Comments").ToString

                        End If

                        connComments.Close()
                        commandComments.Dispose()
                        dtComments.Dispose()
                        drComments.Close()

                        mdlInActiveAccount.Show()
                        '13.05
                Else
                    chkInactive.Checked = False
                End If

            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()

            ' '''' Start :Contract is expired?


            'If String.IsNullOrEmpty(lblContract1.Text) = False Then
            '    Dim connIsContractExpired As MySqlConnection = New MySqlConnection()

            '    connIsContractExpired.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsContractExpired.Open()

            '    Dim commandIsContractExpired As MySqlCommand = New MySqlCommand

            '    commandIsContractExpired.CommandType = CommandType.Text
            '    commandIsContractExpired.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
            '    commandIsContractExpired.Connection = connIsContractExpired

            '    Dim drIsContractExpired As MySqlDataReader = commandIsContractExpired.ExecuteReader()
            '    Dim dtIsContractExpired As New DataTable
            '    dtIsContractExpired.Load(drIsContractExpired)

            '    If dtIsContractExpired.Rows.Count > 0 Then

            '        If String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("ActualEnd").ToString) = False Then
            '            If Convert.ToDateTime(dtIsContractExpired.Rows(0)("ActualEnd").ToString) < DateTime.Today Then
            '                btnADD.Enabled = False
            '                btnCopy.Enabled = False

            '                btnADD.ForeColor = System.Drawing.Color.Gray
            '                btnCopy.ForeColor = System.Drawing.Color.Gray
            '            End If
            '        ElseIf String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("EndDate").ToString) = False Then
            '            If Convert.ToDateTime(dtIsContractExpired.Rows(0)("EndDate").ToString) < DateTime.Today Then
            '                btnADD.Enabled = False
            '                btnCopy.Enabled = False

            '                btnADD.ForeColor = System.Drawing.Color.Gray
            '                btnCopy.ForeColor = System.Drawing.Color.Gray
            '            End If

            '        End If
            '        'If dtIsContractExpired.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

            '        'Else
            '        '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
            '        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        '    Exit Sub
            '        'End If
            '    End If

            '    connIsContractExpired.Close()
            '    connIsContractExpired.Dispose()
            '    commandIsContractExpired.Dispose()
            '    dtIsContractExpired.Dispose()
            '    drIsContractExpired.Close()
            'End If

            ' '''' End :Contract is expired?

            Catch ex As Exception
                InsertIntoTblWebEventLog("FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            End Try
        End If
    End Sub


    Private Sub IsServiceAdded()
        Dim sqlstr As String
        sqlstr = ""

        'If ddlAccountType.Text = "CORPORTE" Or ddlAccountType.Text = "COMPANY" Then
        '    sqlstr = "SELECT InActive FROM tblCompany where AccountId = '" & txtAccountID.Text & "'"
        'ElseIf ddlAccountType.Text = "RESIDENTIAL" Or ddlAccountType.Text = "PERSON" Then
        '    sqlstr = "SELECT InActive FROM tblPerson where AccountId = '" & txtAccountID.Text & "'"
        'End If
        Try
            'Dim command As MySqlCommand = New MySqlCommand

            'Dim conn As MySqlConnection = New MySqlConnection()
            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = sqlstr
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    If dt.Rows(0)("Inactive").ToString = "1" Then
            '        chkInactive.Checked = True
            '        btnEdit.Enabled = False
            '        btnEdit.ForeColor = System.Drawing.Color.Gray

            '    Else
            '        chkInactive.Checked = False
            '    End If

            'End If

            'conn.Close()
            'conn.Dispose()
            'command.Dispose()
            'dt.Dispose()
            'dr.Close()

            '''' Start :Contract is expired?


            If String.IsNullOrEmpty(lblContract1.Text) = False Then
                Dim connIsContractExpired As MySqlConnection = New MySqlConnection()

                connIsContractExpired.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsContractExpired.Open()

                Dim commandIsContractExpired As MySqlCommand = New MySqlCommand

                commandIsContractExpired.CommandType = CommandType.Text
                commandIsContractExpired.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
                commandIsContractExpired.Connection = connIsContractExpired

                Dim drIsContractExpired As MySqlDataReader = commandIsContractExpired.ExecuteReader()
                Dim dtIsContractExpired As New DataTable
                dtIsContractExpired.Load(drIsContractExpired)

                If dtIsContractExpired.Rows.Count > 0 Then

                    If String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("ActualEnd").ToString) = False Then
                        If Convert.ToDateTime(dtIsContractExpired.Rows(0)("ActualEnd").ToString) < Convert.ToDateTime(txtActSvcDate.Text) Then
                            lblAlert.Text = "Service Date cannot be less than or equal to the Contract Actual End date"
                            'btnADD.Enabled = False
                            'btnCopy.Enabled = False

                            'btnADD.ForeColor = System.Drawing.Color.Gray
                            'btnCopy.ForeColor = System.Drawing.Color.Gray
                        End If
                    ElseIf String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("EndDate").ToString) = False Then
                        If Convert.ToDateTime(dtIsContractExpired.Rows(0)("EndDate").ToString) < Convert.ToDateTime(txtActSvcDate.Text) Then
                            lblAlert.Text = "Service Date cannot be less than or equal to the Contract End date"
                            'btnADD.Enabled = False
                            'btnCopy.Enabled = False

                            'btnADD.ForeColor = System.Drawing.Color.Gray
                            'btnCopy.ForeColor = System.Drawing.Color.Gray
                        End If

                    End If
                    'If dtIsContractExpired.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

                    'Else
                    '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    'End If
                End If

                connIsContractExpired.Close()
                connIsContractExpired.Dispose()
                commandIsContractExpired.Dispose()
                dtIsContractExpired.Dispose()
                drIsContractExpired.Close()
            End If

            '''' End :Contract is expired?


        Catch ex As Exception
            InsertIntoTblWebEventLog("IsServiceAdded", ex.Message.ToString, sqlstr)
        End Try

    End Sub
    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        Try
            GridView1.PageIndex = e.NewPageIndex
            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GridView1_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        Try
         
            MakeMeNull()
            MakeTechNull()
            MakeItemsIssuedNull()
            MakePestCountNull()
            MakeMeNullTS()

            Dim editindex As Integer = GridView1.SelectedIndex
            rcno = DirectCast(GridView1.Rows(editindex).FindControl("Label1"), Label).Text
            txtRcno.Text = rcno.ToString()

            txtGridIndex.Text = editindex

            RetrieveData()
            btnEditSchDate.Visible = True
            btnEditTeam.Visible = True
            btnEditServInst.Visible = True
            btnEditRemarks.Visible = True
            btnEditClientSign.Visible = True
            btnEditCollectedAmount.Visible = True
            btnEditOurRef.Visible = True

            btnEditManualContractNo.Visible = True
            btnEditPONo.Visible = True
            btnEditWorkOrderNo.Visible = True



            tableadd.Visible = False
            tableaddHeader.Visible = False
            tableedit.CssClass = "dummybutton"

            CheckTab()
            tb1.ActiveTabIndex = 0
            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            AccessControl()
            'End If

            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                btnEditSchType.Enabled = False
                btnEditSchDate.Enabled = False
                btnEditTeam.Enabled = False
                btnEditServInst.Enabled = False
                btnEditRemarks.Enabled = False
                btnEditCollectedAmount.Enabled = False
                Return
            End If

            btnReCalculate_Click(sender, e)
        Catch ex As Exception
            InsertIntoTblWebEventLog("GridView1_SelectedIndexChanged", ex.Message.ToString, txtRcno.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try

            ''''''''''''''''
            '  InsertIntoTblWebEventLog("SERVICE ADD1", lblContract1.Text, txtCreatedBy.Text)
            If String.IsNullOrEmpty(lblContract1.Text) = False Then
                Dim connLocation As MySqlConnection = New MySqlConnection()

                connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connLocation.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
                command1.Connection = connLocation

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                '  InsertIntoTblWebEventLog("SERVICE ADD1", txtContractNo.Text, dt.Rows.Count.ToString)

                If dt.Rows.Count > 0 Then

                    If dt.Rows(0)("Status").ToString <> "O" Then
                        mdlContractNotOpenAdd.Show()
                        'Else
                        '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
                        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        '    Exit Sub
                    Else
                        EventsForAdd()
                    End If



                    'If dt.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

                    'Else
                    '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    'End If
                End If

                connLocation.Close()
                connLocation.Dispose()
                command1.Dispose()
                dt.Dispose()
            Else
                EventsForAdd()
            End If

            '''''''''''''''''

            'EventsforAdd()
            'MakeMeNull()

            'DisableControls()

            'txtMode.Text = "Add"
            'ddlStatus.Text = "O"
            'ddlStatus.Enabled = False
            'txtScheduler.Text = lblUserID.Text

            'txtSvcRecord.BackColor = Drawing.Color.LightGray
            ''txtSvcRecord.Focus()
            'lblMessage.Text = "ACTION: ADD RECORD"

            'btnADD.Enabled = False
            'txtContractNo.ReadOnly = True
            'txtContractNo.Enabled = False
            'btnEditSchType.Visible = False
            'btnEditSchDate.Visible = False
            'btnEditTeam.Visible = False
            'btnEditServInst.Visible = False
            'btnEditRemarks.Visible = False
            'btnEditClientSign.Visible = False
            'btnEditCollectedAmount.Visible = False
            'btnEditOurRef.Visible = False
            'chkReqCustSign.Checked = True

            'btnQuickSearch.Enabled = False
            'btnResSearch.Enabled = False
            'btnUpdateWorkLoad.Enabled = False

            'btnTransactions.Text = "TRANSACTIONS"
            'tb1.ActiveTabIndex = 0

            'SqlDataSource1.SelectCommand = txt.Text
            'SqlDataSource1.DataBind()
            'GridView1.DataBind()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnADD_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub EventsForAdd()
        MakeMeNull()

        DisableControls()

        If String.IsNullOrEmpty(lblContract1.Text) = False Then
            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim commandLoc As MySqlCommand = New MySqlCommand

                commandLoc.CommandType = CommandType.Text
                commandLoc.CommandText = "SELECT LocationID FROM tblContractdet where ContractNo='" & txtContractNo.Text.ToUpper & "'"
                commandLoc.Connection = connLocation

                Dim drLoc As MySqlDataReader = commandLoc.ExecuteReader()
                Dim dtLoc As New DataTable
                dtLoc.Load(drLoc)
                '    InsertIntoTblWebEventLog("SERVICE ADD2", txtContractNo.Text, dtLoc.Rows.Count.ToString)

                If dtLoc.Rows.Count = 1 Then
                    txtLocationID.Text = dtLoc.Rows(0)("LocationID").ToString
               
                End If

                dtLoc.Clear()
                drLoc.Close()
            commandLoc.Dispose()

            connLocation.Close()
            connLocation.Dispose()

        End If

        txtMode.Text = "Add"
        ddlStatus.Text = "O"
        ddlStatus.Enabled = False
        txtScheduler.Text = lblUserID.Text

        txtSvcRecord.BackColor = Drawing.Color.LightGray
        'txtSvcRecord.Focus()
        lblMessage.Text = "ACTION: ADD RECORD"

        btnADD.Enabled = False
        txtContractNo.ReadOnly = True
        txtContractNo.Enabled = False
        btnEditSchType.Visible = False
        btnEditSchDate.Visible = False
        btnEditTeam.Visible = False
        btnEditServInst.Visible = False
        btnEditRemarks.Visible = False
        btnEditClientSign.Visible = False
        btnEditCollectedAmount.Visible = False
        btnEditOurRef.Visible = False

        chkReqCustSign.Checked = True

        btnEditManualContractNo.Visible = False
        btnEditPONo.Visible = False
        btnEditWorkOrderNo.Visible = False

        btnQuickSearch.Enabled = False
        btnResSearch.Enabled = False
        btnUpdateWorkLoad.Enabled = False

        btnTransactions.Text = "TRANSACTIONS"
        tb1.ActiveTabIndex = 0

        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()
    End Sub
    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If txtRcno.Text = "" Then
                '  MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"
                Return

            End If
            'UPDATE/REVERESE - LOCKED FOR EDITING
            If txtFilling.Text = "1" Then
                lblAlert.Text = "RECORD IS POSTED, CANNOT BE EDITED"
                Return
            End If

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If




            'ONLY IF STATUS IS 'O' THEN SERVICE RECORD CAN BE EDITED
            If Left(ddlStatus.Text, 1) = "O" Then
                DisableControls()
                txtMode.Text = "Edit"
                lblMessage.Text = "ACTION: EDIT RECORD"
                txtContractNo.ReadOnly = False
                txtContractNo.Enabled = True
                txtContractNo.BackColor = Color.White

                'IF SERVICE IS ASSOCIATED WITH CONTRACT THEN CONTRACT NO, ACCOUNT ID AND COMPANY GROUP CANNOT BE EDITED

                txtEditSchDate.Text = txtScheduleDate.Text

                btnEditSchType.Visible = False
                btnEditSchDate.Visible = False
                btnEditTeam.Visible = False
                btnEditServInst.Visible = False
                btnEditRemarks.Visible = False
                btnEditClientSign.Visible = False
                btnEditCollectedAmount.Visible = False
                btnEditOurRef.Visible = False

                btnEditManualContractNo.Visible = False
                btnEditPONo.Visible = False
                btnEditWorkOrderNo.Visible = False

                btnQuickSearch.Enabled = False
                btnResSearch.Enabled = False
                btnUpdateWorkLoad.Enabled = False

                txtReportServiceStart.Enabled = True
                txtReportServiceEnd.Enabled = True
                txtReportServiceStartTime.Enabled = True
                txtReportServiceEndTime.Enabled = True

                If String.IsNullOrEmpty(txtContractNo.Text) Then
                    ddlCompanyGrp.Enabled = True
                    txtAccountID.Enabled = True
                    txtCustName.Enabled = True
                    ddlAccountType.Enabled = True
                    btnUpdateContract.Enabled = False
                Else
                    ddlCompanyGrp.Enabled = False
                    txtAccountID.Enabled = False
                    txtCustName.Enabled = False
                    ddlAccountType.Enabled = False
                    btnUpdateContract.Enabled = True
                End If
                'ElseIf Left(ddlStatus.Text, 1) = "P" Then
                '    txtReportServiceStart.Enabled = True
                '    txtReportServiceStartTime.Enabled = True
                '    txtReportServiceEnd.Enabled = True
                '    txtReportServiceEndTime.Enabled = True
            Else

                lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If



            'btnEditSchDate.Visible = False
            'btnEditTeam.Visible = False

            'If ddlStatus.Text = "O" Then
            '    btnEditSchDate.Visible = True
            '    btnEditTeam.Visible = True
            'End If
            tb1.ActiveTabIndex = 0
            txtOldSvcBy.Text = txtServiceBy.Text

            txtOldScheduleDate.Text = txtScheduleDate.Text
            txtOldScheduleTimeIn.Text = txtScheduleTimeIn.Text
            txtOldScheduleTimeOut.Text = txtScheduleTimeOut.Text

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEdit_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click
        Try

            ''''''''''''''''
            
            If String.IsNullOrEmpty(lblContract1.Text) = False Then
                Dim connLocation As MySqlConnection = New MySqlConnection()

                connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connLocation.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
                command1.Connection = connLocation

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("Status").ToString <> "O" Then
                        mdlContractNotOpenCopy.Show()
                        'Else
                        '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
                        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        '    Exit Sub
                    Else
                        chkCustomerServiceLocation.Checked = True
                        mdlPopupCopyAddress.Show()
                    End If

                    'If dt.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

                    'Else
                    '    lblAlert.Text = "A Service Record can only be COPIED if the Contract is Open."
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    'End If
                End If

                connLocation.Close()
                connLocation.Dispose()
                command1.Dispose()
                dt.Dispose()
            Else
                chkCustomerServiceLocation.Checked = True
                mdlPopupCopyAddress.Show()
            End If



            '''''''''''''''''
           

            'txtCopy.Text = "Yes"
            'txtCopyRecordNo.Text = txtSvcRecord.Text
            'txtScheduler.Text = lblUserID.Text

            'txtRcno.Text = ""
            'txtSvcRecord.Text = ""
            'txtOurRef.Text = ""

            'DisableControls()
            'ddlStatus.Text = "O"
            'ddlStatus.Enabled = False
            ''txtMode.Text = "Add"
            'txtMode.Text = "Add"
            'lblMessage.Text = "ACTION: COPY - ADD RECORD"

            'txtActSvcDate.Text = ""
            'txtActSvcTimeFrom.Text = ""
            'txtActSvcTimeTo.Text = ""
            'txtServiceTime.Text = ""
            'txtTotActualDuration.Text = ""
            'txtServiceRating.Text = ""
            'txtAmtBill.Text = "0.00"
            'txtInvoiceNo.Text = ""
            'txtInvoicedAmt.Text = "0.00"
            'txtCollectAmt.Text = "0.00"
            'txtAmountRecvd.Text = "0.00"
            'txtPaymentType.Text = ""
            'txtRefNo.Text = ""
            'txtSpecificLocation.Text = ""

            'chkManualReport.Checked = False
            'Image1.ImageUrl = ""
            'Image2.ImageUrl = ""

            'btnEditSchType.Visible = False
            'btnEditSchDate.Visible = False
            'btnEditTeam.Visible = False
            'btnEditServInst.Visible = False
            'btnEditRemarks.Visible = False
            'btnEditClientSign.Visible = False
            'btnEditCollectedAmount.Visible = False
            'btnEditOurRef.Visible = False

            '' txtSvcRecord.Focus()

            'btnQuickSearch.Enabled = False
            'btnResSearch.Enabled = False
            'SqlDataSource1.SelectCommand = txt.Text
            'SqlDataSource1.DataBind()
            'GridView1.DataBind()


            ' '''''Start: Retrive from Customer Service Location


            ''Dim svcrcno As String

            ''Dim editindex As Integer = gvLocation.SelectedIndex
            ''svcrcno = DirectCast(gvLocation.Rows(editindex).FindControl("Label1"), Label).Text
            ''txtSvcRcNo.Text = svcrcno.ToString()

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text
            'If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
            '    command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC FROM tblcompanylocation where AccountId ='" & txtAccountID.Text & "' and LocationID = '" & txtLocationID.Text & "'"
            'ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
            '    command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC FROM tblpersonlocation where AccountId ='" & txtAccountID.Text & "' and LocationID = '" & txtLocationID.Text & "'"
            'Else
            '    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            'End If
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then

            '    'txtLocationID.Text = dt.Rows(0)("locationID").ToString
            '    txtServiceName.Text = dt.Rows(0)("ServiceName").ToString

            '    txtAddress.Text = dt.Rows(0)("Address1").ToString
            '    txtStreet.Text = dt.Rows(0)("AddStreet").ToString
            '    txtBuilding.Text = dt.Rows(0)("AddBuilding").ToString

            '    If dt.Rows(0)("AddCity").ToString <> "" Then
            '        ddlCity.Text = dt.Rows(0)("AddCity").ToString
            '    End If

            '    If dt.Rows(0)("AddCountry").ToString <> "" Then
            '        If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
            '            ddlCountry.Text = "SINGAPORE"
            '        Else
            '            ddlCountry.Text = dt.Rows(0)("AddCountry").ToString
            '        End If
            '    End If
            '    If dt.Rows(0)("AddState").ToString <> "" Then
            '        ddlState.Text = dt.Rows(0)("AddState").ToString
            '    End If
            '    txtPostal.Text = dt.Rows(0)("AddPostal").ToString
            '    If dt.Rows(0)("LocateGrp").ToString <> "" Then
            '        ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString
            '    End If


            '    txtSvcCP1Contact.Text = dt.Rows(0)("ContactPerson").ToString
            '    txtSvcCP1Position.Text = dt.Rows(0)("Contact1Position").ToString
            '    txtSvcCP1Telephone.Text = dt.Rows(0)("Telephone").ToString
            '    txtSvcCP1Fax.Text = dt.Rows(0)("Fax").ToString
            '    txtSvcCP1Telephone2.Text = dt.Rows(0)("Telephone2").ToString
            '    txtSvcCP1Mobile.Text = dt.Rows(0)("Mobile").ToString
            '    txtSvcCP1Email.Text = dt.Rows(0)("Email").ToString

            '    txtSvcCP2Contact.Text = dt.Rows(0)("ContactPerson2").ToString
            '    txtSvcCP2Position.Text = dt.Rows(0)("Contact2Position").ToString
            '    txtSvcCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
            '    txtSvcCP2Fax.Text = dt.Rows(0)("Contact2Fax").ToString
            '    txtSvcCP2Tel2.Text = dt.Rows(0)("Contact2Tel2").ToString
            '    txtSvcCP2Mobile.Text = dt.Rows(0)("Contact2Mobile").ToString
            '    txtSvcCP2Email.Text = dt.Rows(0)("Contact2Email").ToString

            '    ''''''''''''''''''''

            '    Dim lOtherEmail As String
            '    lOtherEmail = ""

            '    'If lSendServiceReportTo1Loc = "Y" Then
            '    lOtherEmail = dt.Rows(0)("BillEmail1Svc").ToString.Trim
            '    'End If

            '    'If lSendServiceReportTo2Loc = "Y" Then
            '    If String.IsNullOrEmpty(lOtherEmail.Trim) = False Then
            '        lOtherEmail = lOtherEmail.Trim() & "; " & dt.Rows(0)("BillEmail2svc").ToString.Trim()
            '    Else
            '        lOtherEmail = dt.Rows(0)("BillEmail2svc").ToString.Trim()
            '    End If

            '    If String.IsNullOrEmpty(dt.Rows(0)("ServiceEmailCC").ToString.Trim()) = False Then
            '        If String.IsNullOrEmpty(lOtherEmail) = True Then
            '            lOtherEmail = dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
            '        Else
            '            lOtherEmail = lOtherEmail.Trim() & "; " & dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
            '        End If
            '    End If

            '    txtOtherEmail.Text = lOtherEmail.Trim
            '    '''''''''''''''''''''
            'End If

            'conn.Close()
            'conn.Dispose()
            'command1.Dispose()
            'dt.Dispose()
            'dr.Close()

            ' ''''End: Retrive from Customer Service Location
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnCopy_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnQuit_Click(sender As Object, e As EventArgs) Handles btnQuit.Click
        Response.Redirect("Home.aspx")

    End Sub

    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        MakeMeNull()
        EnableControls()

        '   txt.Text = "select * from tblasset where rcno<>0;"
        'SqlDataSource1.SelectCommand = "SELECT * FROM tblcompany WHERE  Inactive=0 order by AccountId desc limit 100;"

        'If String.IsNullOrEmpty(lblContract1.Text) = True Then
        '    SqlDataSource1.DataBind()
        'Else
        '    txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno FROM tblservicerecord WHERE ContractNo = '" & lblContract1.Text & "' order by servicedate"
        '    SqlDataSource1.SelectCommand = txt.Text
        '    SqlDataSource1.DataBind()

        'End If


        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()
        'GridView1.DataBind()

        btnQuickSearch.Enabled = True
        btnResSearch.Enabled = True
        txtContractNo.ReadOnly = True
        txtContractNo.Enabled = False
    End Sub

    Private Function Validation() As Boolean
        Dim t As DateTime
        Dim d As Double
        Dim dt As Date
        Try
            If String.IsNullOrEmpty(txtScheduleDate.Text) = False Then
                If Date.TryParseExact(txtScheduleDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtScheduleDate.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                    lblAlert.Text = "SCHEDULE DATE IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If Date.TryParseExact(txtActSvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtActSvcDate.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE DATE IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                If Date.TryParseExact(txtActSvcEndDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtActSvcEndDate.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE END DATE IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                If (DateTime.TryParse(txtActSvcTimeFrom.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE TIME IN IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
                If (DateTime.TryParse(txtActSvcTimeTo.Text, t) = True) Then
                Else
                    'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE TIME OUT IS INVALID"
                    Return False
                    Exit Function
                End If
            End If

            If String.IsNullOrEmpty(txtScheduleTimeIn.Text) = False Then
                If txtScheduleTimeIn.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtScheduleTimeIn.Text, t) = True) Then
                    Else
                        '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                        lblAlert.Text = "SCHEDULE TIME IN IS INVALID"
                        Return False
                        Exit Function
                    End If
                End If


            End If
            If String.IsNullOrEmpty(txtScheduleTimeOut.Text) = False Then
                If txtScheduleTimeOut.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtScheduleTimeOut.Text, t) = True) Then
                    Else
                        ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                        lblAlert.Text = "SCHEDULE TIME OUT IS INVALID"
                        Return False
                        Exit Function
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtAllocatedTime.Text) = False Then
                If Double.TryParse(txtAllocatedTime.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Allocated time is invalid!!! Enter time in mins!!", "str")
                    lblAlert.Text = "ALLOCATED TIME IS INVALID, ENTER TIME IN MINUTES"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
                If Double.TryParse(txtServiceTime.Text, d) = False Then
                    '  MessageBox.Message.Alert(Page, "Service time is invalid!!! Enter time in mins!!", "str")
                    lblAlert.Text = "SERVICE TIME IS INVALID, ENTER TIME IN MINUTES"
                    Return False
                    Exit Function
                End If
            End If

            If String.IsNullOrEmpty(txtAmtBill.Text) = False Then
                If Double.TryParse(txtAmtBill.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Amount is invalid!!!", "str")
                    lblAlert.Text = "AMOUNT TO BILL IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtInvoicedAmt.Text) = False Then
                If Double.TryParse(txtInvoicedAmt.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Billed Amount is invalid!!!", "str")
                    lblAlert.Text = "INVOICE AMOUNT IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtCollectAmt.Text) = False Then
                If Double.TryParse(txtCollectAmt.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Amount is invalid!!!", "str")
                    lblAlert.Text = "AMOUNT TO COLLECT IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtAmountRecvd.Text) = False Then
                If Double.TryParse(txtAmountRecvd.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Billed Amount is invalid!!!", "str")
                    lblAlert.Text = "AMOUNT RECEIVED IS INVALID"
                    Return False
                    Exit Function
                End If
            End If




            '20.05
            If txtMode.Text = "Edit" Then
                If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                    If Date.TryParseExact(txtReportServiceStart.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtReportServiceStart.Text = dt.ToShortDateString

                    Else
                        ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                        lblAlert.Text = "REPORT START DATE IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Return False
                        Exit Function
                    End If
                End If
                If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                    If Date.TryParseExact(txtReportServiceEnd.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtReportServiceEnd.Text = dt.ToShortDateString

                    Else
                        ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                        lblAlert.Text = "REPORT END DATE IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Return False
                        Exit Function
                    End If
                End If


                'If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = False Then
                '    If txtReportServiceStartTime.Text <> "__:__" Then
                '        If (DateTime.TryParse(txtReportServiceStartTime.Text, t) = True) Then
                '        Else
                '            '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                '            lblAlert.Text = "REPORT START TIME IS INVALID"
                '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '            Return False
                '            Exit Function
                '        End If
                '    End If
                'End If

                'If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = False Then
                '    If txtReportServiceEndTime.Text <> "__:__" Then
                '        If (DateTime.TryParse(txtReportServiceEndTime.Text, t) = True) Then
                '        Else
                '            'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                '            lblAlert.Text = "REPORT END TIME IS INVALID"
                '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '            Return False
                '            Exit Function
                '        End If
                '    End If
                'End If

                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = False Then
                    If txtReportServiceStartTime.Text = "__:__" Then

                    Else
                        If (DateTime.TryParse(txtReportServiceStartTime.Text, t) = True) Then
                        Else
                            '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                            lblAlert.Text = "REPORT START TIME IS INVALID"
                            Return False
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Function
                        End If
                    End If
                End If

                If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = False Then
                    If txtReportServiceEndTime.Text = "__:__" Then

                    Else
                        If (DateTime.TryParse(txtReportServiceEndTime.Text, t) = True) Then
                        Else
                            ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                            lblAlert.Text = "REPORT END TIME IS INVALID"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Return False
                            Exit Function
                        End If
                    End If
                End If


                'If String.IsNullOrEmpty(txtReportServiceStart.Text) = True Or String.IsNullOrEmpty(txtReportServiceStartTime.Text) = True Or String.IsNullOrEmpty(txtReportServiceEnd.Text) = True Or String.IsNullOrEmpty(txtReportServiceEndTime.Text) = True Then

                'Else

                '    If Convert.ToDateTime(txtReportServiceStart.Text & " " & txtReportServiceStartTime.Text) > Convert.ToDateTime(txtReportServiceEnd.Text & " " & txtReportServiceEndTime.Text) Then
                '        lblAlert.Text = "REPORT START CANNOT BE LATER THAN REPORT END"
                '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '        Return False
                '        Exit Function
                '    End If
                'End If

            End If

            If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = False Then
                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = False Then
                            If Convert.ToDateTime(txtReportServiceStart.Text & " " & txtReportServiceStartTime.Text) > Convert.ToDateTime(txtReportServiceEnd.Text & " " & txtReportServiceEndTime.Text) Then
                                lblAlert.Text = "REPORT START CANNOT BE LATER THAN REPORT END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = True Then
                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = True Then
                            If Convert.ToDateTime(txtReportServiceStart.Text) > Convert.ToDateTime(txtReportServiceEnd.Text) Then
                                lblAlert.Text = "REPORT START CANNOT BE LATER THAN REPORT END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            'SASI - 26/07/2021
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
                            If Convert.ToDateTime(txtActSvcDate.Text & " " & txtActSvcTimeFrom.Text) > Convert.ToDateTime(txtActSvcEndDate.Text & " " & txtActSvcTimeTo.Text) Then
                                lblAlert.Text = "SERVICE START CANNOT BE LATER THAN SERVICE END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = True Then
                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = True Then
                            If Convert.ToDateTime(txtActSvcDate.Text) > Convert.ToDateTime(txtActSvcEndDate.Text) Then
                                lblAlert.Text = "SERVICE START CANNOT BE LATER THAN SERVICE END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

          
            '20.05
            Return True
        Catch ex As Exception
            InsertIntoTblWebEventLog("Validation", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function

    Private Function ValidationDuringUpdate() As Boolean
        Dim t As DateTime
        Dim d As Double
        Dim dt As Date
        Try
            
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If Date.TryParseExact(txtActSvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtActSvcDate.Text = dt.ToShortDateString

                Else
                    txtActSvcDate.Enabled = True
                    txtActSvcDate.Focus()

                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE DATE IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    Return False
                    Exit Function
                End If
            Else
                txtActSvcDate.Enabled = True
                txtActSvcDate.Focus()
                ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                lblAlert.Text = "PLEASE ENTER ACTUAL SERVICE DATE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return False
                Exit Function
            End If
            If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                If Date.TryParseExact(txtActSvcEndDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtActSvcEndDate.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    txtActSvcEndDate.Enabled = True
                    txtActSvcEndDate.Focus()

                    lblAlert.Text = "ACTUAL SERVICE END DATE IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    Return False
                    Exit Function

                End If
            Else
                txtActSvcEndDate.Enabled = True
                txtActSvcEndDate.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                lblAlert.Text = "PLEASE ENTER ACTUAL SERVICE END DATE"
                Return False
                Exit Function
            End If
            If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                If (DateTime.TryParse(txtActSvcTimeFrom.Text, t) = True) Then
                Else
                    txtActSvcTimeFrom.Enabled = True
                    txtActSvcTimeFrom.Focus()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE TIME IN IS INVALID"
                    Return False
                    Exit Function
                End If
            Else
                txtActSvcTimeFrom.Enabled = True
                txtActSvcTimeFrom.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                lblAlert.Text = "PLEASE ENTER ACTUAL SERVICE TIME IN"
                Return False
                Exit Function
            End If
            If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
                If (DateTime.TryParse(txtActSvcTimeTo.Text, t) = True) Then
                Else
                    txtActSvcTimeTo.Enabled = True
                    txtActSvcTimeTo.Focus()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                    lblAlert.Text = "ACTUAL SERVICE TIME OUT IS INVALID"
                    Return False
                    Exit Function
                End If
            Else
                txtActSvcTimeTo.Enabled = True
                txtActSvcTimeTo.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                lblAlert.Text = "PLEASE ENTER ACTUAL SERVICE TIME OUT"
                Return False
                Exit Function
            End If

           
                If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                    If Date.TryParseExact(txtReportServiceStart.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtReportServiceStart.Text = dt.ToShortDateString

                Else
                    txtReportServiceStart.Enabled = True
                    txtReportServiceStart.Focus()
                
                    ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                    lblAlert.Text = "REPORT START DATE IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Return False
                    Exit Function
                End If
            Else
                txtReportServiceStart.Enabled = True
                txtReportServiceStart.Focus()
            
                ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                lblAlert.Text = "PLEASE ENTER REPORT START DATE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return False
                Exit Function
            End If

                If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                    If Date.TryParseExact(txtReportServiceEnd.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtReportServiceEnd.Text = dt.ToShortDateString

                Else
                    txtReportServiceEnd.Enabled = True
                    txtReportServiceEnd.Focus()
                  
                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    lblAlert.Text = "REPORT END DATE IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Return False
                    Exit Function
                End If
            Else
                txtReportServiceEnd.Enabled = True
                txtReportServiceEnd.Focus()
          
                lblAlert.Text = "PLEASE ENTER REPORT END DATE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return False
                Exit Function
            End If


        

                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = False Then
                    If txtReportServiceStartTime.Text = "__:__" Then

                    Else
                        If (DateTime.TryParse(txtReportServiceStartTime.Text, t) = True) Then
                    Else
                        txtReportServiceStartTime.Enabled = True
                        txtReportServiceStartTime.Focus()
                  
                        '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                        lblAlert.Text = "REPORT START TIME IS INVALID"
                        Return False
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Function
                        End If
                End If
            Else
                txtReportServiceStartTime.Enabled = True
                txtReportServiceStartTime.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                lblAlert.Text = "PLEASE ENTER REPORT START TIME"
                Return False
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Function
            End If

                If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = False Then
                    If txtReportServiceEndTime.Text = "__:__" Then

                    Else
                        If (DateTime.TryParse(txtReportServiceEndTime.Text, t) = True) Then
                    Else
                        txtReportServiceEndTime.Enabled = True
                        txtReportServiceEndTime.Focus()
                       
                        ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                        lblAlert.Text = "REPORT END TIME IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Return False
                        Exit Function
                        End If
                End If
            Else
                txtReportServiceEndTime.Enabled = True
                txtReportServiceEndTime.Focus()
            
                lblAlert.Text = "PLEASE ENTER REPORT END TIME"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return False
                Exit Function
            End If


            If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = False Then
                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = False Then
                            If Convert.ToDateTime(txtReportServiceStart.Text & " " & txtReportServiceStartTime.Text) > Convert.ToDateTime(txtReportServiceEnd.Text & " " & txtReportServiceEndTime.Text) Then
                                lblAlert.Text = "REPORT START CANNOT BE LATER THAN REPORT END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                If String.IsNullOrEmpty(txtReportServiceStartTime.Text) = True Then
                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        If String.IsNullOrEmpty(txtReportServiceEndTime.Text) = True Then
                            If Convert.ToDateTime(txtReportServiceStart.Text) > Convert.ToDateTime(txtReportServiceEnd.Text) Then
                                lblAlert.Text = "REPORT START CANNOT BE LATER THAN REPORT END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            'SASI - 26/07/2021
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
                            If Convert.ToDateTime(txtActSvcDate.Text & " " & txtActSvcTimeFrom.Text) > Convert.ToDateTime(txtActSvcEndDate.Text & " " & txtActSvcTimeTo.Text) Then
                                lblAlert.Text = "SERVICE START CANNOT BE LATER THAN SERVICE END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = True Then
                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = True Then
                            If Convert.ToDateTime(txtActSvcDate.Text) > Convert.ToDateTime(txtActSvcEndDate.Text) Then
                                lblAlert.Text = "SERVICE START CANNOT BE LATER THAN SERVICE END"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Return False
                                Exit Function
                            End If
                        End If
                    End If
                End If
            End If


            '20.05
            Return True
        Catch ex As Exception
            InsertIntoTblWebEventLog("Validation", ex.Message.ToString, txtSvcRecord.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function

    Private Function FindAccountId() As Boolean
        Dim IsAccountId As Boolean
        IsAccountId = False
        Try
            Dim connIsAccountId As MySqlConnection = New MySqlConnection()

            connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsAccountId.Open()

            Dim commandIsAccountId As MySqlCommand = New MySqlCommand
            commandIsAccountId.CommandType = CommandType.Text

            If ddlAccountType.Text = "COMPANY" Then
                commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblCompany where AccountId ='" & txtAccountID.Text & "'"
            ElseIf ddlAccountType.Text = "PERSON" Then
                commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblPerson where AccountId ='" & txtAccountID.Text & "'"
            End If

            commandIsAccountId.Connection = connIsAccountId

            Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
            Dim dtIsAccountId As New DataTable
            dtIsAccountId.Load(drIsAccountId)

            If dtIsAccountId.Rows.Count > 0 Then
                If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                    IsAccountId = True
                End If
            End If


            connIsAccountId.Close()
            connIsAccountId.Dispose()
            commandIsAccountId.Dispose()
            dtIsAccountId.Dispose()
            drIsAccountId.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("FindAccountId", ex.Message.ToString, IsAccountId)
        End Try
        Return IsAccountId
    End Function

    Private Sub CopySvcDetailsTechnician(newrecordno As String, oldrecordno As String, serviceby As String)
        '  MessageBox.Message.Alert(Page, oldrecordno + " " + newrecordno, "str")
        '  Return


        'Update All Service Details from the record copied to the new service record
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT contractno,warranty,reason,serviceid,productservices,frequency,targetid,action,remarkoffice,remarkclient,material,servicearea,priceperservicearea,areacompleted,priceofareacompleted,baitstationinstalled,priceperbaitstation,TotalPriceForBaitStation, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn FROM tblservicerecorddet where recordno='" + oldrecordno + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                For i As Int16 = 0 To dt.Rows.Count - 1
                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text

                    command.Connection = conn
                    command.CommandText = "INSERT INTO tblservicerecorddet(contractno,WARRANTY,Reason,status,ServiceID,ProductServices,frequency, TargetID,RecordNo,Action,RemarkOffice,RemarkClient,ServiceArea,PricePerServiceArea,AreaCompleted,PriceOfAreaCompleted,BaitStationInstalled,PricePerBaitStation,TotalPriceForBaitStation,Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn) VALUES(@contractno,@WARRANTY,@Reason,@status,@ServiceID, @ProductServices,@Frequency,@TargetID,@RecordNo,@Action,@RemarkOffice,@RemarkClient,@ServiceArea,@PricePerServiceArea,@AreaCompleted,@PriceOfAreaCompleted,@BaitStationInstalled,@PricePerBaitStation,@TotalPriceForBaitStation,@Material, @CreatedBy, @CreatedOn, @lastModifiedBy, @lastModifiedOn)"
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@contractno", dt.Rows(i)("contractno").ToString)
                    command.Parameters.AddWithValue("@WARRANTY", dt.Rows(i)("WARRANTY").ToString)
                    command.Parameters.AddWithValue("@status", "O")
                    command.Parameters.AddWithValue("@Reason", dt.Rows(i)("Reason").ToString)


                    command.Parameters.AddWithValue("@ServiceID", dt.Rows(i)("ServiceID").ToString)

                    command.Parameters.AddWithValue("@ProductServices", dt.Rows(i)("ProductServices").ToString)
                    command.Parameters.AddWithValue("@Frequency", dt.Rows(i)("Frequency").ToString)

                    command.Parameters.AddWithValue("@TargetID", dt.Rows(i)("TargetID").ToString)

                    'command.Parameters.AddWithValue("@Action", dt.Rows(i)("Action").ToString)
                    command.Parameters.AddWithValue("@Action", "")
                    'command.Parameters.AddWithValue("@RemarkOffice", dt.Rows(i)("RemarkOffice").ToString)
                    'command.Parameters.AddWithValue("@RemarkClient", dt.Rows(i)("RemarkClient").ToString)
                    'command.Parameters.AddWithValue("@Material", dt.Rows(i)("Material").ToString)
                    command.Parameters.AddWithValue("@RemarkOffice", "")
                    command.Parameters.AddWithValue("@RemarkClient", "")
                    command.Parameters.AddWithValue("@Material", "")


                    command.Parameters.AddWithValue("@RecordNo", newrecordno)

                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command.Parameters.AddWithValue("@ServiceArea", dt.Rows(i)("ServiceArea"))
                    command.Parameters.AddWithValue("@PricePerServiceArea", dt.Rows(i)("PricePerServiceArea"))
                    command.Parameters.AddWithValue("@AreaCompleted", dt.Rows(i)("AreaCompleted"))
                    command.Parameters.AddWithValue("@PriceOfAreaCompleted", dt.Rows(i)("PriceOfAreaCompleted"))
                    command.Parameters.AddWithValue("@BaitStationInstalled", dt.Rows(i)("BaitStationInstalled"))
                    command.Parameters.AddWithValue("@PricePerBaitStation", dt.Rows(i)("PricePerBaitStation"))
                    command.Parameters.AddWithValue("@TotalPriceForBaitStation", dt.Rows(i)("TotalPriceForBaitStation"))

                    command.ExecuteNonQuery()
                Next

            End If

            'Update All Service Area and Bait station details in tblservicerecord

            'Update tblservicerecord 


            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text

            command2.CommandText = "SELECT sum(servicearea) as totalservicearea,sum(AreaCompleted) as totalareacompleted,sum(PriceOfAreaCompleted) as totalPrice, sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where recordno=@recordno "
            command2.Parameters.AddWithValue("@recordno", newrecordno)
            'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            command2.Connection = conn

            Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            If dt2.Rows.Count > 0 Then
                Dim totalprice As Decimal = 0
                Dim totalbaitprice As Decimal = 0
                Dim totalservicearea As Decimal = 0
                Dim totalareacompleted As Decimal = 0

                If dt2.Rows(0)("totalprice").ToString <> DBNull.Value.ToString Then
                    totalprice = dt2.Rows(0)("totalprice").ToString
                Else
                    totalprice = 0
                End If
                If dt2.Rows(0)("totalbaitprice").ToString <> DBNull.Value.ToString Then
                    totalbaitprice = dt2.Rows(0)("totalbaitprice").ToString
                Else
                    totalbaitprice = 0
                End If
                If dt2.Rows(0)("totalservicearea").ToString <> DBNull.Value.ToString Then
                    totalservicearea = dt2.Rows(0)("totalservicearea").ToString
                Else
                    totalservicearea = 0
                End If
                If dt2.Rows(0)("totalareacompleted").ToString <> DBNull.Value.ToString Then
                    totalareacompleted = dt2.Rows(0)("totalareacompleted").ToString
                Else
                    totalareacompleted = 0
                End If

                If totalprice + totalbaitprice = 0 Then
                Else
                    txtAmtBill.Text = totalprice + totalbaitprice

                End If
                lblTotalServiceArea.Text = totalservicearea
                lblTotalAreaCompleted.Text = totalareacompleted
                lblTotalPrice.Text = totalprice
            End If

            Dim command4 As MySqlCommand = New MySqlCommand

            command4.CommandType = CommandType.Text

            command4.CommandText = "SELECT warranty FROM tblservicerecorddet where recordno=@recordno "
            command4.Parameters.AddWithValue("@recordno", newrecordno)

            'command4.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            command4.Connection = conn

            Dim dr4 As MySqlDataReader = command4.ExecuteReader()
            Dim dt4 As New DataTable
            dt4.Load(dr4)

            Dim notes As String = ""
            If dt4.Rows.Count > 0 Then
                For i As Int32 = 0 To dt4.Rows.Count - 1
                    If i = 0 Then
                        notes = dt4.Rows(i)("warranty").ToString
                    Else
                        notes = notes & vbCrLf & dt4.Rows(i)("warranty").ToString
                    End If

                Next

            End If

            If String.IsNullOrEmpty(txtAmtBill.Text) = True Then
                txtAmtBill.Text = "0.00"
            End If

            txtDescription.Text = notes
            updPanelService1.Update()

            Dim command3 As MySqlCommand = New MySqlCommand

            command3.CommandType = CommandType.Text

            command3.CommandText = "Update tblServiceRecord set Notes = '" & notes & "',BillAmount = " & txtAmtBill.Text & ",TotalServiceArea = " & lblTotalServiceArea.Text & ",TotalAreaCompleted=" & lblTotalAreaCompleted.Text & ",TotalPriceOfAreaCompleted=" & lblTotalPrice.Text & " where recordno=@recordno "
            command3.Parameters.AddWithValue("@recordno", newrecordno)
            command3.Parameters.AddWithValue("@notes", notes)
            command3.Connection = conn

            command3.ExecuteNonQuery()


            'End - Update tblservicerecord


            'Update tblservicerecord 

            'Update All Service Technician Details from the record copied to the new service record

            Dim command5 As MySqlCommand = New MySqlCommand

            command5.CommandType = CommandType.Text

            command5.CommandText = "SELECT StaffID,StaffName,CostValue FROM tblservicerecordstaff where recordno=@recordno and staffid=@serviceby"
            command5.Parameters.AddWithValue("@recordno", oldrecordno)
            command5.Parameters.AddWithValue("@serviceby", serviceby)
            command5.Connection = conn

            Dim dr5 As MySqlDataReader = command5.ExecuteReader()
            Dim dt5 As New DataTable
            dt5.Load(dr5)

            If dt5.Rows.Count > 0 Then
                For i As Int16 = 0 To dt5.Rows.Count - 1

                    Dim command6 As MySqlCommand = New MySqlCommand

                    command6.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblservicerecordstaff(StaffID,StaffName,CostValue,RecordNo,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn,CreateDeviceID,CreateSource,FlowFrom,FlowTo,EditSource,DeleteStatus,LastEditDevice)VALUES(@StaffID,@StaffName,@CostValue,@RecordNo,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn,@CreateDeviceID,@CreateSource,@FlowFrom,@FlowTo,@EditSource,@DeleteStatus,@LastEditDevice);"
                    command6.CommandText = qry
                    command6.Parameters.Clear()

                    command6.Parameters.AddWithValue("@StaffID", dt5.Rows(i)("StaffID").ToString)
                    command6.Parameters.AddWithValue("@StaffName", dt5.Rows(i)("StaffName").ToString)
                    command6.Parameters.AddWithValue("@CostValue", dt5.Rows(i)("CostValue"))
                    command6.Parameters.AddWithValue("@RecordNo", newrecordno)
                    command6.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command6.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command6.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command6.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command6.Parameters.AddWithValue("@CreateDeviceID", "")
                    command6.Parameters.AddWithValue("@CreateSource", "")
                    command6.Parameters.AddWithValue("@FlowFrom", "")
                    command6.Parameters.AddWithValue("@FlowTo", "")
                    command6.Parameters.AddWithValue("@EditSource", "")
                    command6.Parameters.AddWithValue("@DeleteStatus", "")
                    command6.Parameters.AddWithValue("@LastEditDevice", "")

                    command6.Connection = conn

                    command6.ExecuteNonQuery()

                Next
            End If

            conn.Close()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CopySvcDetailsTechnician", ex.Message.ToString, oldrecordno + "' " + newrecordno)
        End Try

    End Sub


    Private Function CheckIfExistsManualReportNo(lOurRef As String) As Boolean
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            If txtMode.Text = "Add" Then
                command1.CommandText = "SELECT OurRef FROM tblServiceRecord where OurRef= '" & lOurRef.Trim & "'"
            Else
                command1.CommandText = "SELECT OurRef FROM tblServiceRecord where OurRef = '" & lOurRef.Trim & "' and Recordno <> '" & txtSvcRecord.Text & "'"
            End If

            'command1.Parameters.AddWithValue("@data", txtTerms.Text)
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                Return True
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt1.Dispose()

            'conn.Close()

            Return False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CheckIfExistsManualReportNo", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function

    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click

        'If txtSvcRecord.Text = "" Then
        '    MessageBox.Message.Alert(Page, "ID cannot be blank!!!", "str")
        '    Return

        'End If
        lblAlert.Text = ""

        If ddlStatus.Text <> "O" Then

            Dim index As Integer = ddlStatus.SelectedItem.Text.IndexOf("-")
            Dim st As String = ddlStatus.SelectedItem.Text.Substring(index + 2)
            lblAlert.Text = st + "JOBS CANNOT BE MODIFIED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '  MessageBox.Message.Alert(Page, st + " Jobs cannot be modified!!!", "str")
            Return
        End If


        If String.IsNullOrEmpty(txtContractNo.Text.Trim) = True Then
            lblAlert.Text = "CONTRACT NUMBER CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        If String.IsNullOrEmpty(txtOurRef.Text) = False Then
            If CheckIfExistsManualReportNo(txtOurRef.Text) = True Then
                lblAlert.Text = "MANUAL REPORT NO. ALREADY EXISTS"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If
        End If

        If ddlCompanyGrp.Text = txtDDLText.Text Then
            lblAlert.Text = "SELECT COMPANY GROUP"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If String.IsNullOrEmpty(txtScheduleDate.Text) Then
            '  MessageBox.Message.Alert(Page, "Service Date cannot be blank!!!", "str")
            lblAlert.Text = "SCHEDULE DATE CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If ddlAccountType.Text = txtDDLText.Text Then
            lblAlert.Text = "SELECT ACCOUNT TYPE"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If String.IsNullOrEmpty(txtAccountID.Text.Trim) = True Then
            ' MessageBox.Message.Alert(Page, "Client Code cannot be blank!!!", "str")
            lblAlert.Text = "ACCOUNT ID CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        '''''''''''''''''''''

        Dim IsAccountIdExist As Boolean = FindAccountId()

        If IsAccountIdExist = False Then
            lblAlert.Text = "INVALID ACCOUNT ID"
            'updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If
        '''''''''''''''''''''

        If String.IsNullOrEmpty(txtCustName.Text.Trim) = True Then
            txtCustName.BorderColor = Drawing.Color.Red
            lblAlert.Text = "ACCOUNT NAME CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '  MessageBox.Message.Alert(Page, "Cust Name cannot be blank!!!", "str")
            Return
        End If
        If String.IsNullOrEmpty(txtLocationID.Text.Trim) = True Then
            lblAlert.Text = "SELECT SERVICE LOCATION"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If String.IsNullOrEmpty(txtServiceName.Text.Trim) = True Then
            lblAlert.Text = "SERVICE NAME CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If String.IsNullOrEmpty(txtAddress.Text.Trim) = True Then
            lblAlert.Text = "SERVICE ADDRESS CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If String.IsNullOrEmpty(txtAllocatedTime.Text.Trim) = True Then
            lblAlert.Text = "ALLOCATED TIME CANNOT BE BLANK"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If String.IsNullOrEmpty(txtAmtBill.Text) = True Then
            txtAmtBill.Text = 0.0
        End If


        'Check for Lock


        Dim sqlstr As String
        sqlstr = ""

        sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

        Dim commandLocked As MySqlCommand = New MySqlCommand

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        commandLocked.CommandType = CommandType.Text
        commandLocked.CommandText = sqlstr
        commandLocked.Connection = conn

        Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("svcLock").ToString = "Y" Then
                lblAlert.Text = "SCHEDULED SERVICE START PERIOD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If
            'Else
            '    'If dt.Rows(0)("svcLock").ToString = "Y" Then
            '    lblAlert.Text = "SCHEDULED SERVICE START PERIOD IS LOCKED"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            '    'End If
        End If


      


        'Actual Service
        If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtReportServiceStart.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLockedAct As MySqlCommand = New MySqlCommand

            'Dim conn As MySqlConnection = New MySqlConnection()
            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            commandLockedAct.CommandType = CommandType.Text
            commandLockedAct.CommandText = sqlstr
            commandLockedAct.Connection = conn

            Dim drAct As MySqlDataReader = commandLockedAct.ExecuteReader()
            Dim dtAct As New DataTable
            dtAct.Load(drAct)


            If dtAct.Rows.Count > 0 Then
                If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "REPORT SERVICE START PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
                'Else
                '    'If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                '    lblAlert.Text = "ACTUAL SERVICE START PERIOD IS LOCKED"
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '    Exit Sub
                '    'End If
            End If

            'Actual Service

            'conn.Close()
            'conn.Dispose()
            commandLocked.Dispose()
            commandLockedAct.Dispose()
            dr.Close()
            drAct.Close()
        End If

        'Actual Service
        If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtReportServiceEnd.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLockedAct As MySqlCommand = New MySqlCommand

            'Dim conn As MySqlConnection = New MySqlConnection()
            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            commandLockedAct.CommandType = CommandType.Text
            commandLockedAct.CommandText = sqlstr
            commandLockedAct.Connection = conn

            Dim drAct As MySqlDataReader = commandLockedAct.ExecuteReader()
            Dim dtAct As New DataTable
            dtAct.Load(drAct)


            If dtAct.Rows.Count > 0 Then
                If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "REPORT SERVICE END PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
                'Else
                '    'If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                '    lblAlert.Text = "ACTUAL SERVICE START PERIOD IS LOCKED"
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '    Exit Sub
                '    'End If
            End If

            'Actual Service

            'conn.Close()
            'conn.Dispose()
            commandLocked.Dispose()
            commandLockedAct.Dispose()
            dr.Close()
            drAct.Close()
        End If


        'Actual Service
        If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLockedAct As MySqlCommand = New MySqlCommand

            'Dim conn As MySqlConnection = New MySqlConnection()
            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            commandLockedAct.CommandType = CommandType.Text
            commandLockedAct.CommandText = sqlstr
            commandLockedAct.Connection = conn

            Dim drAct As MySqlDataReader = commandLockedAct.ExecuteReader()
            Dim dtAct As New DataTable
            dtAct.Load(drAct)


            If dtAct.Rows.Count > 0 Then
                If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "ACTUAL SERVICE START PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
                'Else
                '    'If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                '    lblAlert.Text = "ACTUAL SERVICE START PERIOD IS LOCKED"
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '    Exit Sub
                '    'End If
            End If

            'Actual Service

            'conn.Close()
            'conn.Dispose()
            commandLocked.Dispose()
            commandLockedAct.Dispose()
            dr.Close()
            drAct.Close()
        End If

        'Actual Service
        If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActSvcEndDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLockedAct As MySqlCommand = New MySqlCommand

            'Dim conn As MySqlConnection = New MySqlConnection()
            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            commandLockedAct.CommandType = CommandType.Text
            commandLockedAct.CommandText = sqlstr
            commandLockedAct.Connection = conn

            Dim drAct As MySqlDataReader = commandLockedAct.ExecuteReader()
            Dim dtAct As New DataTable
            dtAct.Load(drAct)


            If dtAct.Rows.Count > 0 Then
                If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "ACTUAL SERVICE END PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
                'Else
                '    'If dtAct.Rows(0)("svcLock").ToString = "Y" Then
                '    lblAlert.Text = "ACTUAL SERVICE START PERIOD IS LOCKED"
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '    Exit Sub
                '    'End If
            End If

            'Actual Service

            conn.Close()
            conn.Dispose()
            commandLocked.Dispose()
            commandLockedAct.Dispose()
            dr.Close()
            drAct.Close()
        End If

     


        'Check for Lock

        ''start 11.04.19

        Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date

        If String.IsNullOrEmpty(txtScheduleTimeIn.Text.Trim) = False Then
            If txtScheduleTimeIn.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtScheduleTimeIn.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                    lblAlert.Text = "SCHEDULE TIME-IN IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Return
                End If
            End If
        End If




        If String.IsNullOrEmpty(txtScheduleTimeOut.Text) = False Then
            If txtScheduleTimeOut.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtScheduleTimeOut.Text, t) = True) Then
                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                    lblAlert.Text = "SCHEDULE TIME-OUT IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    Return
                End If
            End If
        End If



        '''


        If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
            If txtEditSchTimeIn.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtActSvcTimeFrom.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                    lblAlert.Text = "ACTUAL TIME-IN IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Return
                End If
            End If
        End If




        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
            If txtEditSchTimeOut.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtActSvcTimeTo.Text, t) = True) Then
                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                    lblAlert.Text = "ACTUAL TIME-OUT IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    Return
                End If
            End If
        End If
        ''end 11.04.19

        If String.IsNullOrEmpty(txtReportServiceStart.Text) = False And String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then

        End If


        ' '''''''''''''''''

        'Dim regTime As New System.Text.RegularExpressions.Regex("^([0-1][0-9]|[2][0-3]):([0-5][0-9])$")
        'Dim IsValidTime As Boolean


        'IsValidTime = True

        'If regTime.IsMatch(txtScheduleTimeIn.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID SCHEDULED TIME IN"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If


        'IsValidTime = True

        'If regTime.IsMatch(txtScheduleTimeOut.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID SCHEDULED TIME OUT"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If

        ' '''''''''


        'IsValidTime = True

        'If regTime.IsMatch(txtActSvcTimeFrom.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID ACTUAL TIME IN"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If


        'IsValidTime = True

        'If regTime.IsMatch(txtActSvcTimeTo.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID ACTUAL TIME OUT"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If
        ''Exit Sub

        ' '''''''''''''''


        If Validation() = False Then
            Return
        End If
        CalculateServiceTime()
        txtActSvcDate.Text = txtScheduleDate.Text

        ''IsServiceAdded()


        '''' Start :Contract is expired?


        If String.IsNullOrEmpty(lblContract1.Text) = False Then
            Dim connIsContractExpired As MySqlConnection = New MySqlConnection()

            connIsContractExpired.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsContractExpired.Open()

            Dim commandIsContractExpired As MySqlCommand = New MySqlCommand

            commandIsContractExpired.CommandType = CommandType.Text
            commandIsContractExpired.CommandText = "SELECT Status, EndDate,ActualEnd FROM tblContract where ContractNo='" & txtContractNo.Text.ToUpper & "'"
            commandIsContractExpired.Connection = connIsContractExpired

            Dim drIsContractExpired As MySqlDataReader = commandIsContractExpired.ExecuteReader()
            Dim dtIsContractExpired As New DataTable
            dtIsContractExpired.Load(drIsContractExpired)

            If dtIsContractExpired.Rows.Count > 0 Then

                If String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("ActualEnd").ToString) = False Then
                    If Convert.ToDateTime(dtIsContractExpired.Rows(0)("ActualEnd").ToString) < Convert.ToDateTime(txtActSvcDate.Text) Then
                        lblAlert.Text = "Service Date cannot be after the Contract Actual End Date " & Convert.ToDateTime(dtIsContractExpired.Rows(0)("ActualEnd")).ToString("dd/MM/yyyy")
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                        'btnADD.Enabled = False
                        'btnCopy.Enabled = False

                        'btnADD.ForeColor = System.Drawing.Color.Gray
                        'btnCopy.ForeColor = System.Drawing.Color.Gray
                    End If
                ElseIf String.IsNullOrEmpty(dtIsContractExpired.Rows(0)("EndDate").ToString) = False Then
                    'If Convert.ToDateTime(dtIsContractExpired.Rows(0)("EndDate").ToString) < Convert.ToDateTime(txtActSvcDate.Text) Then
                    '    lblAlert.Text = "Service Date cannot be more than Contract End Date " & Convert.ToDateTime(dtIsContractExpired.Rows(0)("EndDate")).ToString("dd/MM/yyyy")
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    '    'btnADD.Enabled = False
                    '    'btnCopy.Enabled = False

                    '    'btnADD.ForeColor = System.Drawing.Color.Gray
                    '    'btnCopy.ForeColor = System.Drawing.Color.Gray
                    'End If

                End If
                'If dtIsContractExpired.Rows(0)("Status").ToString = "O" Or dt.Rows(0)("Status").ToString = "P" Then

                'Else
                '    lblAlert.Text = "A Service Record can only be ADDED if the Contract is Open."
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                '    Exit Sub
                'End If
            End If

            connIsContractExpired.Close()
            connIsContractExpired.Dispose()
            commandIsContractExpired.Dispose()
            dtIsContractExpired.Dispose()
            drIsContractExpired.Close()
        End If

        '''' End :Contract is expired?

        If String.IsNullOrEmpty(txtAmtBill.Text) = True Or Convert.ToDecimal(txtAmtBill.Text) = 0.0 Then
            'txtZeroAmountToBillYesNo.Text = "NO"
            Me.MaintainScrollPositionOnPostBack = True
            mdlPopupZeroAmountToBill.Show()
            Me.MaintainScrollPositionOnPostBack = False
        Else
            SaveService()
        End If


        'If txtZeroAmountToBillYesNo.Text = "NO" Then
        '    txtZeroAmountToBillYesNo.Text = ""
        '    Exit Sub
        'End If


        'If txtMode.Text = "Add" Then
        '    Try
        '        Dim conn As MySqlConnection = New MySqlConnection()

        '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '        conn.Open()

        '        'Dim command1 As MySqlCommand = New MySqlCommand

        '        'command1.CommandType = CommandType.Text

        '        'command1.CommandText = "SELECT * FROM tblservicerecord where recordno=@recordno"
        '        'command1.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
        '        'command1.Connection = conn

        '        'Dim dr As MySqlDataReader = command1.ExecuteReader()
        '        'Dim dt As New DataTable
        '        'dt.Load(dr)

        '        'If dt.Rows.Count > 0 Then

        '        '    MessageBox.Message.Alert(Page, "Service Record No already exists!!!", "str")

        '        'Else

        '        Dim command As MySqlCommand = New MySqlCommand
        '        command.CommandType = CommandType.Text



        '        Dim qry As String = "INSERT INTO tblservicerecord(RecordNo,CreatedOn,CreatedBy,Status,ContactType,CustCode,Contact,CustName,CustAddress1,CustAddBlock,CustAddNos,CustAddFloor,CustAddUnit,CustAddBuilding,CustAddStreet,"
        '        qry = qry + "CustAddPostal,CustAddCity,CustAddState,CustAddCountry,CustTelephone,CustFax,ServiceBy,ServiceDate,TimeIn,TimeOut,Notes,Duration,BillYN,BillAmount,SerialNo,ManualYN,"
        '        qry = qry + "SignatureYN,ServiceTime,ProgTime,ContactTime,LastModifiedBy,LastModifiedOn,MainJobOrder,chkUrgent,ChkOnSite,AllocatedSvcTime,CustomerSign,ServiceBySign,InChargeSign,"
        '        qry = qry + "CustomerSignName,ServiceBySignName,InChargeSignName,CustomerSignDate,ServiceBySignDate,InChargeSignDate,TabletSource,ApprStatus,ApproveBy,ApproveDt,SubmitStatus,"
        '        qry = qry + "Filling,Fax,FaxnReturn,ApproveStaff,WebCode,MobileCode,TabletID,PhaseNo,SchServiceDate,SchServiceTime,UploadDate,ScheduleType,BranchCode,Settle,BillNo,BilledAmt,"
        '        qry = qry + "Location,AddBlock,AddNos,AddFloor,AddUnit,Address1,AddBuilding,AddStreet,AddCity,AddState,AddCountry,AddPostal,ContactPersonID,ContractDetSQLID,ContractDetFHzSQLID,"
        '        qry = qry + "TeamID,VehNo,CSt,Reason,FS,Comments,CreateDeviceID,CreateSource,FlowFrom,FlowTo,EditSource,DeleteStatus,LastEditDevice,SchServiceTimeOut,CollectPayment,InChargeID,"
        '        qry = qry + "LocateGrp,WebCreateDeviceID,WebCreateSource,WebFlowFrom,WebFlowTo,WebEditSource,WebDeleteStatus,WebLastEditDevice,Email,Seq,ServiceType,ContactPersonMobile,"
        '        qry = qry + "Scheduler,OurRef,YourRef,CollectAmt,CustTelephone2,CustMobile,CustomerSignDateTime,ServiceBySignDateTime,Remarks,ContractNo,TabletDownloaded,SubmitCount,EmailSent,"
        '        qry = qry + "EmailSentDate,EmailSentStatus,RefNo,TargetID,LockST,EmailSendFail,PoNo,CompanyGroup,IsChangeServStaff,AccountID,LocationID,ServiceName,Contact1Position,Contact1Tel,Contact1Tel2,"
        '        qry = qry + "ContactPerson2,Contact2Position,Contact2Tel,Contact2Fax,Contact2Tel2,Contact2Mobile,Contact2Email,ServiceRating,AmountReceived,Description,Contact1Fax,"
        '        qry = qry + "OffBuilding,OffStreet,OffAddress,OffPostal,OffCity,OffState,OffCountry,SameBillingAddress,BillingName,BillAddress,BillBuilding,BillStreet,BillPostal,BillCity,BillState,BillCountry,Supervisor,RequireClientSignature,OtherEmail, AmtToCollect)VALUES"
        '        qry = qry + "(@RecordNo,@CreatedOn,@CreatedBy,@Status,@ContactType,@CustCode,@Contact,@CustName,@CustAddress1,@CustAddBlock,@CustAddNos,@CustAddFloor,@CustAddUnit,"
        '        qry = qry + "@CustAddBuilding,@CustAddStreet,@CustAddPostal,@CustAddCity,@CustAddState,@CustAddCountry,@CustTelephone,@CustFax,@ServiceBy,@ServiceDate,@TimeIn,@TimeOut,@Notes,"
        '        qry = qry + "@Duration,@BillYN,@BillAmount,@SerialNo,@ManualYN,@SignatureYN,@ServiceTime,@ProgTime,@ContactTime,@LastModifiedBy,@LastModifiedOn,@MainJobOrder,@chkUrgent,"
        '        qry = qry + "@ChkOnSite,@AllocatedSvcTime,@CustomerSign,@ServiceBySign,@InChargeSign,@CustomerSignName,@ServiceBySignName,@InChargeSignName,@CustomerSignDate,@ServiceBySignDate,"
        '        qry = qry + "@InChargeSignDate,@TabletSource,@ApprStatus,@ApproveBy,@ApproveDt,@SubmitStatus,@Filling,@Fax,@FaxnReturn,@ApproveStaff,@WebCode,@MobileCode,@TabletID,@PhaseNo,"
        '        qry = qry + "@SchServiceDate,@SchServiceTime,@UploadDate,@ScheduleType,@BranchCode,@Settle,@BillNo,@BilledAmt,@Location,@AddBlock,@AddNos,@AddFloor,@AddUnit,@Address1,"
        '        qry = qry + "@AddBuilding,@AddStreet,@AddCity,@AddState,@AddCountry,@AddPostal,@ContactPersonID,@ContractDetSQLID,@ContractDetFHzSQLID,@TeamID,@VehNo,@CSt,@Reason,@FS,@Comments,"

        '        qry = qry + "@CreateDeviceID,@CreateSource,@FlowFrom,@FlowTo,@EditSource,@DeleteStatus,@LastEditDevice,@SchServiceTimeOut,@CollectPayment,@InChargeID,@LocateGrp,"
        '        qry = qry + "@WebCreateDeviceID,@WebCreateSource,@WebFlowFrom,@WebFlowTo,@WebEditSource,@WebDeleteStatus,@WebLastEditDevice,@Email,@Seq,@ServiceType,@ContactPersonMobile,"
        '        qry = qry + "@Scheduler,@OurRef,@YourRef,@CollectAmt,@CustTelephone2,@CustMobile,@CustomerSignDateTime,@ServiceBySignDateTime,@Remarks,@ContractNo,@TabletDownloaded,@SubmitCount,"
        '        qry = qry + "@EmailSent,@EmailSentDate,@EmailSentStatus,@RefNo,@TargetID,@LockST,@EmailSendFail,@PoNo,@CompanyGroup,@IsChangeServStaff,@AccountID,@LocationID,@ServiceName,@Contact1Position,"
        '        qry = qry + "@Contact1Tel,@Contact1Tel2,@ContactPerson2,@Contact2Position,@Contact2Tel,@Contact2Fax,@Contact2Tel2,@Contact2Mobile,@Contact2Email,@ServiceRating,@AmountReceived,@Description,@Contact1Fax,"
        '        qry = qry + "@OffBuilding,@OffStreet,@OffAddress,@OffPostal,@OffCity,@OffState,@OffCountry,@SameBillingAddress,@BillingName,@BillAddress,@BillBuilding,@BillStreet,@BillPostal,@BillCity,@BillState,@BillCountry,@Supervisor,@RequireClientSignature,@OtherEmail, @AmtToCollect);"

        '        command.CommandText = qry
        '        command.Parameters.Clear()

        '        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

        '            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            If ddlStatus.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@Status", "")
        '            Else
        '                command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
        '            End If
        '            If ddlAccountType.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@ContactType", "")
        '            Else
        '                command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text.ToUpper)
        '            End If

        '            command.Parameters.AddWithValue("@CustCode", DBNull.Value)
        '            command.Parameters.AddWithValue("@Contact", txtCustContact.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text.ToUpper)

        '            command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text.ToUpper)

        '            command.Parameters.AddWithValue("@CustAddState", txtCustState.Text.ToUpper)

        '            command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text.ToUpper)

        '            command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustFax", txtCustFax.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text.ToUpper)
        '            If String.IsNullOrEmpty(txtActSvcDate.Text.ToUpper) = True Then
        '                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '            Else
        '                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
        '            End If
        '            If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
        '                command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
        '            End If
        '            If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
        '                command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

        '            End If
        '            command.Parameters.AddWithValue("@Notes", txtDescription.Text.ToUpper)

        '            If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
        '                Dim d As Double = 0
        '                If Double.TryParse(txtServiceTime.Text, d) Then
        '                    command.Parameters.AddWithValue("@Duration", d)
        '                Else
        '                    command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                End If
        '            Else

        '                command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '            End If

        '            command.Parameters.AddWithValue("@BillYN", "N")

        '            If String.IsNullOrEmpty(txtAmtBill.Text) Then
        '                command.Parameters.AddWithValue("@BillAmount", 0)
        '            Else
        '                command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
        '            End If

        '            command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

        '            command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

        '            command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceTime", 0)
        '            command.Parameters.AddWithValue("@ProgTime", 0)
        '            command.Parameters.AddWithValue("@ContactTime", 0)

        '            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
        '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
        '            If chkUrgent.Checked = True Then
        '                command.Parameters.AddWithValue("@chkurgent", 1)
        '            Else
        '                command.Parameters.AddWithValue("@chkurgent", 0)
        '            End If

        '            command.Parameters.AddWithValue("@ChkOnsite", 0)

        '            If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
        '                command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
        '            Else
        '                command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
        '            End If
        '            command.Parameters.AddWithValue("@CustomerSign", "")
        '            command.Parameters.AddWithValue("@ServiceBySign", "")
        '            command.Parameters.AddWithValue("@InChargeSign", "")
        '            command.Parameters.AddWithValue("@CustomerSignName", "")
        '            command.Parameters.AddWithValue("@ServiceBySignName", "")
        '            command.Parameters.AddWithValue("@InChargeSignName", "")
        '            command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@TabletSource", "")
        '            command.Parameters.AddWithValue("@ApprStatus", "")
        '            command.Parameters.AddWithValue("@ApproveBy", "")
        '            command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
        '            command.Parameters.AddWithValue("@SubmitStatus", "")
        '            command.Parameters.AddWithValue("@Filling", 0)
        '            command.Parameters.AddWithValue("@Fax", "")
        '            command.Parameters.AddWithValue("@FaxnReturn", 0)
        '            command.Parameters.AddWithValue("@ApproveStaff", "")
        '            command.Parameters.AddWithValue("@WebCode", 0)
        '            command.Parameters.AddWithValue("@MobileCode", 0)
        '            command.Parameters.AddWithValue("@TabletID", "")
        '            command.Parameters.AddWithValue("@PhaseNo", "")

        '            If String.IsNullOrEmpty(txtScheduleDate.Text) Then
        '                command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '            End If

        '            If String.IsNullOrEmpty(txtScheduleTimeIn.Text.ToUpper) Then
        '                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
        '            ElseIf txtScheduleTimeIn.Text = "__:__" Then
        '                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

        '            Else
        '                command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

        '            End If
        '            command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
        '            If ddlScheduleType.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@ScheduleType", "")
        '            Else
        '                command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text.ToUpper)
        '            End If
        '            command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
        '            command.Parameters.AddWithValue("@Settle", txtPaymentType.Text.ToUpper)
        '            command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text.ToUpper)
        '            If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
        '                command.Parameters.AddWithValue("@BilledAmt", 0)
        '            Else
        '                command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
        '            End If

        '            command.Parameters.AddWithValue("@Location", txtLocation.Text)
        '            command.Parameters.AddWithValue("@AddBlock", "")
        '            command.Parameters.AddWithValue("@AddNos", "")
        '            command.Parameters.AddWithValue("@AddFloor", "")
        '            command.Parameters.AddWithValue("@AddUnit", "")
        '            command.Parameters.AddWithValue("@Address1", txtAddress.Text.ToUpper)
        '            command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text.ToUpper)
        '            command.Parameters.AddWithValue("@AddStreet", txtStreet.Text.ToUpper)
        '            If ddlState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddState", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddState", ddlState.Text.ToUpper)
        '            End If

        '            If ddlCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddCity", ddlCity.Text.ToUpper)
        '            End If
        '            If ddlCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text.ToUpper)
        '            End If
        '            command.Parameters.AddWithValue("@AddPostal", txtPostal.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ContractDetSQLID", 0)
        '            command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

        '            command.Parameters.AddWithValue("@TeamID", txtTeam.Text.ToUpper)
        '            command.Parameters.AddWithValue("@VehNo", txtVehNo.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CSt", "")
        '            command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text.ToUpper)
        '            command.Parameters.AddWithValue("@FS", "")
        '            command.Parameters.AddWithValue("@Comments", txtInstruction.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CreateDeviceID", "")
        '            command.Parameters.AddWithValue("@CreateSource", "")
        '            command.Parameters.AddWithValue("@FlowFrom", "")
        '            command.Parameters.AddWithValue("@FlowTo", "")
        '            command.Parameters.AddWithValue("@EditSource", "")
        '            command.Parameters.AddWithValue("@DeleteStatus", "")
        '            command.Parameters.AddWithValue("@LastEditDevice", "")

        '            If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
        '            ElseIf txtScheduleTimeOut.Text = "__:__" Then
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

        '            Else
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

        '            End If
        '            If chkPayment.Checked = True Then
        '                command.Parameters.AddWithValue("@CollectPayment", 1)

        '            Else
        '                command.Parameters.AddWithValue("@CollectPayment", 0)

        '            End If
        '            command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text.ToUpper)
        '            If ddlLocateGrp.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@LocateGrp", "")
        '            Else
        '                command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text.ToUpper)
        '            End If

        '            command.Parameters.AddWithValue("@WebCreateDeviceID", "")
        '            command.Parameters.AddWithValue("@WebCreateSource", "")
        '            command.Parameters.AddWithValue("@WebFlowFrom", "")
        '            command.Parameters.AddWithValue("@WebFlowTo", "")
        '            command.Parameters.AddWithValue("@WebEditSource", "")
        '            command.Parameters.AddWithValue("@WebDeleteStatus", "")
        '            command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '            command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Seq", txtSequence.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ServiceType", "")
        '            command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text.ToUpper)
        '            command.Parameters.AddWithValue("@OurRef", txtOurRef.Text.ToUpper)
        '            command.Parameters.AddWithValue("@YourRef", txtYourRef.Text.ToUpper)

        '            'If String.IsNullOrEmpty(txtCollectAmt.Text.ToUpper) Then
        '            '    command.Parameters.AddWithValue("@CollectAmt", 0)
        '            'Else
        '            '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text.ToUpper)
        '            'End If

        '            If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
        '                command.Parameters.AddWithValue("@AmtToCollect", 0.0)
        '            Else
        '                command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
        '            End If

        '            If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
        '                command.Parameters.AddWithValue("@CollectAmt", 0)
        '            Else
        '                command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
        '            End If

        '            command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text.ToUpper)
        '            command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
        '            command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
        '            command.Parameters.AddWithValue("@TabletDownloaded", 0)
        '            command.Parameters.AddWithValue("@SubmitCount", 0)
        '            command.Parameters.AddWithValue("@EmailSent", 0)
        '            command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@EmailSentStatus", "")
        '            command.Parameters.AddWithValue("@RefNo", txtRefNo.Text.ToUpper)
        '            command.Parameters.AddWithValue("@TargetID", "")
        '            command.Parameters.AddWithValue("@LockST", "N")
        '            command.Parameters.AddWithValue("@EmailSendFail", 0)
        '            command.Parameters.AddWithValue("@PoNo", txtPoNo.Text.ToUpper)
        '            If ddlCompanyGrp.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@CompanyGroup", "")
        '            Else
        '                command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
        '            End If
        '            command.Parameters.AddWithValue("@IsChangeServStaff", 0)

        '            command.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
        '            command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text.ToUpper)
        '            command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text.ToUpper)
        '            If String.IsNullOrEmpty(txtAmountRecvd.Text.ToUpper) Then
        '                command.Parameters.AddWithValue("@AmountReceived", 0)
        '            Else
        '                command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text.ToUpper)
        '            End If
        '            command.Parameters.AddWithValue("@Description", txtServiceDescription.Text.ToUpper)
        '            command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text.ToUpper)

        '            command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text.ToUpper)
        '            command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text.ToUpper)
        '            command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text.ToUpper)
        '            command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text.ToUpper)
        '            If ddlOffState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffState", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffState", ddlOffState.Text.ToUpper)
        '            End If

        '            If ddlOffCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text.ToUpper)
        '            End If
        '            If ddlOffCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text.ToUpper)
        '            End If
        '            'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text.ToUpper)
        '            If chkOffAddr.Checked = True Then
        '                command.Parameters.AddWithValue("@SameBillingAddress", 1)

        '            Else
        '                command.Parameters.AddWithValue("@SameBillingAddress", 0)

        '            End If
        '            command.Parameters.AddWithValue("@BillingName", txtBillingName.Text.ToUpper)
        '            command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text.ToUpper)
        '            command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
        '            command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)
        '            command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.ToUpper)
        '            If ddlBillState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillState", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillState", ddlBillState.Text.ToUpper)
        '            End If
        '            If ddlBillCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text.ToUpper)
        '            End If
        '            If ddlBillCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text.ToUpper)
        '            End If
        '            command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.ToUpper)
        '            command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text.ToUpper)


        '            'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text.ToUpper)

        '            GenerateRecordNo()
        '            command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)

        '        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

        '            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
        '            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            If ddlStatus.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@Status", "")
        '            Else
        '                command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
        '            End If
        '            If ddlAccountType.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@ContactType", "")
        '            Else
        '                command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text)
        '            End If

        '            command.Parameters.AddWithValue("@CustCode", DBNull.Value)
        '            command.Parameters.AddWithValue("@Contact", txtCustContact.Text)
        '            command.Parameters.AddWithValue("@CustName", txtCustName.Text)
        '            command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text)
        '            command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
        '            command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text)
        '            command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text)
        '            command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text)

        '            command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text)

        '            command.Parameters.AddWithValue("@CustAddState", txtCustState.Text)

        '            command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text)

        '            command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text)
        '            command.Parameters.AddWithValue("@CustFax", txtCustFax.Text)
        '            command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text)
        '            If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
        '                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '            Else
        '                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
        '            End If
        '            If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
        '                command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
        '            End If
        '            If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
        '                command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

        '            End If
        '            command.Parameters.AddWithValue("@Notes", txtDescription.Text)

        '            If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
        '                Dim d As Double = 0
        '                If Double.TryParse(txtServiceTime.Text, d) Then
        '                    command.Parameters.AddWithValue("@Duration", d)
        '                Else
        '                    command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                End If
        '            Else

        '                command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '            End If
        '            command.Parameters.AddWithValue("@BillYN", "N")

        '            If String.IsNullOrEmpty(txtAmtBill.Text) Then
        '                command.Parameters.AddWithValue("@BillAmount", 0)
        '            Else
        '                command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
        '            End If

        '            command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

        '            command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

        '            command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceTime", 0)
        '            command.Parameters.AddWithValue("@ProgTime", 0)
        '            command.Parameters.AddWithValue("@ContactTime", 0)

        '            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
        '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
        '            If chkUrgent.Checked = True Then
        '                command.Parameters.AddWithValue("@chkurgent", 1)
        '            Else
        '                command.Parameters.AddWithValue("@chkurgent", 0)
        '            End If

        '            command.Parameters.AddWithValue("@ChkOnsite", 0)

        '            If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
        '                command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
        '            Else
        '                command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
        '            End If
        '            command.Parameters.AddWithValue("@CustomerSign", "")
        '            command.Parameters.AddWithValue("@ServiceBySign", "")
        '            command.Parameters.AddWithValue("@InChargeSign", "")
        '            command.Parameters.AddWithValue("@CustomerSignName", "")
        '            command.Parameters.AddWithValue("@ServiceBySignName", "")
        '            command.Parameters.AddWithValue("@InChargeSignName", "")
        '            command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@TabletSource", "")
        '            command.Parameters.AddWithValue("@ApprStatus", "")
        '            command.Parameters.AddWithValue("@ApproveBy", "")
        '            command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
        '            command.Parameters.AddWithValue("@SubmitStatus", "")
        '            command.Parameters.AddWithValue("@Filling", 0)
        '            command.Parameters.AddWithValue("@Fax", "")
        '            command.Parameters.AddWithValue("@FaxnReturn", 0)
        '            command.Parameters.AddWithValue("@ApproveStaff", "")
        '            command.Parameters.AddWithValue("@WebCode", 0)
        '            command.Parameters.AddWithValue("@MobileCode", 0)
        '            command.Parameters.AddWithValue("@TabletID", "")
        '            command.Parameters.AddWithValue("@PhaseNo", "")

        '            If String.IsNullOrEmpty(txtScheduleDate.Text) Then
        '                command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
        '            Else
        '                command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '            End If

        '            If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
        '                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
        '            ElseIf txtScheduleTimeIn.Text = "__:__" Then
        '                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

        '            Else
        '                command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

        '            End If
        '            command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
        '            If ddlScheduleType.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@ScheduleType", "")
        '            Else
        '                command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text)
        '            End If
        '            command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
        '            command.Parameters.AddWithValue("@Settle", txtPaymentType.Text)
        '            command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text)
        '            If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
        '                command.Parameters.AddWithValue("@BilledAmt", 0)
        '            Else
        '                command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
        '            End If

        '            command.Parameters.AddWithValue("@Location", txtLocation.Text)
        '            command.Parameters.AddWithValue("@AddBlock", "")
        '            command.Parameters.AddWithValue("@AddNos", "")
        '            command.Parameters.AddWithValue("@AddFloor", "")
        '            command.Parameters.AddWithValue("@AddUnit", "")
        '            command.Parameters.AddWithValue("@Address1", txtAddress.Text)
        '            command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text)
        '            command.Parameters.AddWithValue("@AddStreet", txtStreet.Text)
        '            If ddlState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddState", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddState", ddlState.Text)
        '            End If

        '            If ddlCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddCity", ddlCity.Text)
        '            End If
        '            If ddlCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@AddCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text)
        '            End If
        '            command.Parameters.AddWithValue("@AddPostal", txtPostal.Text)
        '            command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text)
        '            command.Parameters.AddWithValue("@ContractDetSQLID", 0)
        '            command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

        '            command.Parameters.AddWithValue("@TeamID", txtTeam.Text)
        '            command.Parameters.AddWithValue("@VehNo", txtVehNo.Text)
        '            command.Parameters.AddWithValue("@CSt", "")
        '            command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text)
        '            command.Parameters.AddWithValue("@FS", "")
        '            command.Parameters.AddWithValue("@Comments", txtInstruction.Text)
        '            command.Parameters.AddWithValue("@CreateDeviceID", "")
        '            command.Parameters.AddWithValue("@CreateSource", "")
        '            command.Parameters.AddWithValue("@FlowFrom", "")
        '            command.Parameters.AddWithValue("@FlowTo", "")
        '            command.Parameters.AddWithValue("@EditSource", "")
        '            command.Parameters.AddWithValue("@DeleteStatus", "")
        '            command.Parameters.AddWithValue("@LastEditDevice", "")

        '            If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
        '            ElseIf txtScheduleTimeOut.Text = "__:__" Then
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

        '            Else
        '                command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

        '            End If
        '            If chkPayment.Checked = True Then
        '                command.Parameters.AddWithValue("@CollectPayment", 1)

        '            Else
        '                command.Parameters.AddWithValue("@CollectPayment", 0)

        '            End If
        '            command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text)
        '            If ddlLocateGrp.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@LocateGrp", "")
        '            Else
        '                command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text)
        '            End If

        '            command.Parameters.AddWithValue("@WebCreateDeviceID", "")
        '            command.Parameters.AddWithValue("@WebCreateSource", "")
        '            command.Parameters.AddWithValue("@WebFlowFrom", "")
        '            command.Parameters.AddWithValue("@WebFlowTo", "")
        '            command.Parameters.AddWithValue("@WebEditSource", "")
        '            command.Parameters.AddWithValue("@WebDeleteStatus", "")
        '            command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '            command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text)
        '            command.Parameters.AddWithValue("@Seq", txtSequence.Text)
        '            command.Parameters.AddWithValue("@ServiceType", "")
        '            command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text)
        '            command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text)
        '            command.Parameters.AddWithValue("@OurRef", txtOurRef.Text)
        '            command.Parameters.AddWithValue("@YourRef", txtYourRef.Text)

        '            'If String.IsNullOrEmpty(txtCollectAmt.Text) Then
        '            '    command.Parameters.AddWithValue("@CollectAmt", 0)
        '            'Else
        '            '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text)
        '            'End If

        '            If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
        '                command.Parameters.AddWithValue("@AmtToCollect", 0.0)
        '            Else
        '                command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
        '            End If

        '            If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
        '                command.Parameters.AddWithValue("@CollectAmt", 0)
        '            Else
        '                command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
        '            End If

        '            command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text)
        '            command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text)
        '            command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
        '            command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
        '            command.Parameters.AddWithValue("@Remarks", txtRemarks.Text)
        '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
        '            command.Parameters.AddWithValue("@TabletDownloaded", 0)
        '            command.Parameters.AddWithValue("@SubmitCount", 0)
        '            command.Parameters.AddWithValue("@EmailSent", 0)
        '            command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
        '            command.Parameters.AddWithValue("@EmailSentStatus", "")
        '            command.Parameters.AddWithValue("@RefNo", txtRefNo.Text)
        '            command.Parameters.AddWithValue("@TargetID", "")
        '            command.Parameters.AddWithValue("@LockST", "N")
        '            command.Parameters.AddWithValue("@EmailSendFail", 0)
        '            command.Parameters.AddWithValue("@PoNo", txtPoNo.Text)
        '            If ddlCompanyGrp.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@CompanyGroup", "")
        '            Else
        '                command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
        '            End If
        '            command.Parameters.AddWithValue("@IsChangeServStaff", 0)

        '            command.Parameters.AddWithValue("@AccountID", txtAccountID.Text)
        '            command.Parameters.AddWithValue("@LocationID", txtLocationID.Text)
        '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text)
        '            command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text)
        '            command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text)
        '            command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text)
        '            command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text)
        '            command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text)
        '            command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text)
        '            command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text)
        '            command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text)
        '            command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text)
        '            command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text)
        '            command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text)
        '            If String.IsNullOrEmpty(txtAmountRecvd.Text) Then
        '                command.Parameters.AddWithValue("@AmountReceived", 0)
        '            Else
        '                command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text)
        '            End If
        '            command.Parameters.AddWithValue("@Description", txtServiceDescription.Text)
        '            command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text)

        '            command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text)
        '            command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text)
        '            command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text)
        '            command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text)
        '            If ddlOffState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffState", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffState", ddlOffState.Text)
        '            End If

        '            If ddlOffCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text)
        '            End If
        '            If ddlOffCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@OffCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text)
        '            End If
        '            'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text)
        '            'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text)
        '            'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text)
        '            'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text)
        '            If chkOffAddr.Checked = True Then
        '                command.Parameters.AddWithValue("@SameBillingAddress", 1)

        '            Else
        '                command.Parameters.AddWithValue("@SameBillingAddress", 0)

        '            End If
        '            command.Parameters.AddWithValue("@BillingName", txtBillingName.Text)
        '            command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text)
        '            command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
        '            command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
        '            command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
        '            If ddlBillState.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillState", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillState", ddlBillState.Text)
        '            End If
        '            If ddlBillCity.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillCity", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text)
        '            End If
        '            If ddlBillCountry.Text = txtDDLText.Text Then
        '                command.Parameters.AddWithValue("@BillCountry", "")
        '            Else
        '                command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text)
        '            End If
        '            command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text)
        '            command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text)

        '            'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text)
        '            'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text)
        '            'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text)
        '            'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text)


        '            GenerateRecordNo()
        '            command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
        '        End If

        '        If chkReqCustSign.Checked = True Then
        '            command.Parameters.AddWithValue("@RequireClientSignature", 1)
        '        Else
        '            command.Parameters.AddWithValue("@RequireClientSignature", 0)
        '        End If

        '        command.Connection = conn

        '        command.ExecuteNonQuery()

        '        '      UpdateContractActSvcDate(conn)

        '        UpdateServiceTechnician(conn, txtServiceBy.Text)


        '        '''''''''''''''''''''''''''''''
        '        If String.IsNullOrEmpty(txtSpecificLocation.Text) = False Then

        '            Dim conn1 As MySqlConnection = New MySqlConnection()

        '            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '            conn1.Open()
        '            Dim commandSpecificLocation As MySqlCommand = New MySqlCommand
        '            commandSpecificLocation.CommandType = CommandType.Text

        '            Dim qrySpecificLocation As String = "INSERT INTO tblservicerecord2(RecordNo, SpecificLocationName) values (@RecordNo, @SpecificLocation);"

        '            commandSpecificLocation.CommandText = qrySpecificLocation
        '            commandSpecificLocation.Parameters.Clear()

        '            commandSpecificLocation.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
        '            'command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            commandSpecificLocation.Parameters.AddWithValue("@SpecificLocation", txtSpecificLocation.Text.ToUpper)
        '            commandSpecificLocation.Connection = conn1

        '            commandSpecificLocation.ExecuteNonQuery()
        '            commandSpecificLocation.Dispose()
        '            conn1.Close()
        '            conn1.Dispose()
        '        End If

        '        '''''''''''''''''''''''''''''''

        '        lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
        '        lblAlert.Text = ""
        '        txtRcno.Text = command.LastInsertedId
        '        If txtCopy.Text = "Yes" Then
        '            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

        '        Else
        '            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "COPYADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

        '        End If
        '        ' End If
        '        conn.Close()
        '        txtServiceRecord.Text = txtSvcRecord.Text

        '    Catch ex As Exception
        '        InsertIntoTblWebEventLog("btnSave_Click ADD", ex.Message.ToString, txtSvcRecord.Text)
        '    End Try
        '    EnableControls()


        '    lblRecordNo.Text = txtSvcRecord.Text
        '    lblRecordNo1.Text = txtSvcRecord.Text
        '    lblRecordNo2.Text = txtSvcRecord.Text
        '    lblRecordNo3.Text = txtSvcRecord.Text
        '    lblRecordNo5.Text = txtSvcRecord.Text
        '    lblRecordNo6.Text = txtSvcRecord.Text
        '    lblNotesKeyField.Text = txtSvcRecord.Text

        '    lblContractNo.Text = txtContractNo.Text
        '    lblNotesStaffID.Text = txtCreatedBy.Text

        '    lblTotalServiceArea.Text = "0.00"
        '    lblTotalAreaCompleted.Text = "0.00"
        '    lblTotalPrice.Text = "0.00"

        '    btnSvcAdd.Enabled = True
        '    btnSvcCancel.Enabled = False
        '    btnSvcEdit.Enabled = False
        '    btnSvcSave.Enabled = False
        '    btnSvcDelete.Enabled = False

        '    btnSvcAdd.ForeColor = System.Drawing.Color.Black
        '    btnSvcCancel.ForeColor = System.Drawing.Color.Gray
        '    btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        '    btnSvcSave.ForeColor = System.Drawing.Color.Gray
        '    btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        '    EnableTechControls()

        '    btnTechEdit.Enabled = False
        '    btnTechDelete.Enabled = False

        '    btnTechEdit.ForeColor = System.Drawing.Color.Gray
        '    btnTechDelete.ForeColor = System.Drawing.Color.Gray

        '    EnableNotesControls()

        '    btnEditNotesMaster.Enabled = False
        '    btnEditNotesMaster.Enabled = False

        '    btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
        '    btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray

        '    If txtCopy.Text = "Yes" Then

        '        CopySvcDetailsTechnician(txtSvcRecord.Text, txtCopyRecordNo.Text, txtServiceBy.Text)

        '    End If
        'ElseIf txtMode.Text = "Edit" Then
        '    If txtRcno.Text = "" Then
        '        '  MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
        '        lblAlert.Text = "SELECT RECORD TO EDIT"
        '        Return

        '    End If
        '    If txtAccountID1.Text.Trim <> txtAccountID.Text.Trim Then
        '        MessageBox.Message.Alert(Page, "WARNING: ACCOUNT ID MODIFIED", "str")
        '    End If
        '    Try
        '        Dim conn As MySqlConnection = New MySqlConnection()

        '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '        conn.Open()

        '        'Dim command2 As MySqlCommand = New MySqlCommand
        '        'command2.CommandType = CommandType.Text
        '        'command2.CommandText = "SELECT * FROM tblservicerecord where rcno <>" & Convert.ToInt32(txtRcno.Text)
        '        'command2.Parameters.AddWithValue("@recordno", txtServiceRecord.Text)
        '        'command2.Connection = conn

        '        'Dim dr1 As MySqlDataReader = command2.ExecuteReader()
        '        'Dim dt1 As New DataTable
        '        'dt1.Load(dr1)

        '        'If dt1.Rows.Count > 0 Then
        '        '    '   MessageBox.Message.Alert(Page, "Service Record No already exists!!!", "str")
        '        '    lblAlert.Text = "RECORD NO ALREADY EXISTS"
        '        'Else

        '        Dim command1 As MySqlCommand = New MySqlCommand

        '        command1.CommandType = CommandType.Text

        '        command1.CommandText = "SELECT rcno FROM tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)
        '        command1.Connection = conn

        '        Dim dr As MySqlDataReader = command1.ExecuteReader()
        '        Dim dt As New DataTable
        '        dt.Load(dr)

        '        If dt.Rows.Count > 0 Then

        '            Dim command As MySqlCommand = New MySqlCommand

        '            command.CommandType = CommandType.Text
        '            Dim qry As String = "UPDATE tblservicerecord SET Status = @Status,ContactType = @ContactType,Contact = @Contact,CustName = @CustName,CustAddress1 = @CustAddress1,CustAddBlock = @CustAddBlock,CustAddNos = @CustAddNos,"
        '            qry = qry + "CustAddFloor = @CustAddFloor,CustAddUnit = @CustAddUnit,CustAddBuilding = @CustAddBuilding,CustAddStreet = @CustAddStreet,CustAddPostal = @CustAddPostal,CustAddCity = @CustAddCity,CustAddState = @CustAddState,CustAddCountry = @CustAddCountry,CustTelephone = @CustTelephone,"
        '            qry = qry + "CustFax = @CustFax,ServiceBy = @ServiceBy,ServiceDate = @ServiceDate,TimeIn = @TimeIn,TimeOut = @TimeOut,Notes = @Notes,Duration = @Duration,BillAmount = @BillAmount, SerialNo = @SerialNo,ManualYN = @ManualYN,SignatureYN = @SignatureYN,ServiceTime = @ServiceTime,"
        '            qry = qry + "ProgTime = @ProgTime,ContactTime = @ContactTime,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn,MainJobOrder = @MainJobOrder,chkUrgent = @chkUrgent,ChkOnSite = @ChkOnSite,AllocatedSvcTime = @AllocatedSvcTime, SchServiceDate = @SchServiceDate,SchServiceTime = @SchServiceTime,"
        '            qry = qry + "ScheduleType = @ScheduleType,BranchCode = @BranchCode,BillNo = @BillNo,BilledAmt = @BilledAmt,Location = @Location,Address1 = @Address1,AddBuilding = @AddBuilding,AddStreet=@AddStreet,AddState=@AddState,AddCity=@AddCity,AddCountry=@AddCountry,AddPostal=@AddPostal, ContractDetSQLID = @ContractDetSQLID,ContractDetFHzSQLID = @ContractDetFHzSQLID,TeamID = @TeamID,VehNo = @VehNo,CSt = @CSt, FS = @FS,Comments = @Comments,"
        '            qry = qry + "SchServiceTimeOut = @SchServiceTimeOut,CollectPayment = @CollectPayment,InChargeID = @InChargeID,LocateGrp = @LocateGrp, Email = @Email,Seq = @Seq, ContactPersonMobile = @ContactPersonMobile,Scheduler = @Scheduler,OurRef = @OurRef,YourRef = @YourRef, CustTelephone2 = @CustTelephone2,CustMobile = @CustMobile,"
        '            qry = qry + "Remarks = @Remarks,ContractNo = @ContractNo, PoNo = @PoNo,CompanyGroup = @CompanyGroup,AccountID = @AccountID,LocationID = @LocationID,ServiceName = @ServiceName,Contact1Position = @Contact1Position,Contact1Tel = @Contact1Tel,Contact1Tel2 = @Contact1Tel2,ContactPerson2 = @ContactPerson2,Contact2Position = @Contact2Position,Contact2Tel = @Contact2Tel,"
        '            qry = qry + "Contact2Fax = @Contact2Fax,Contact2Tel2 = @Contact2Tel2,Contact2Mobile = @Contact2Mobile,Contact2Email = @Contact2Email,ServiceRating = @ServiceRating,Description = @Description,OffBuilding = @OffBuilding,OffStreet = @OffStreet,OffAddress = @OffAddress,OffPostal = @OffPostal,OffCity = @OffCity,OffState = @OffState,OffCountry = @OffCountry,"
        '            qry = qry + "SameBillingAddress = @SameBillingAddress,BillingName = @BillingName,BillAddress = @BillAddress,BillBuilding = @BillBuilding,BillStreet = @BillStreet,BillPostal = @BillPostal,BillCity = @BillCity,BillState = @BillState,BillCountry = @BillCountry,Supervisor=@Supervisor,RequireClientSignature=@RequireClientSignature,OtherEmail=@OtherEmail,CollectAmt =@CollectAmt, AmtToCollect=@AmtToCollect,contactpersonid=@contactpersonid,contact1fax=@contact1fax,Reason=@Reason WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

        '            command.CommandText = qry
        '            command.Parameters.Clear()

        '            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

        '                command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '                If ddlStatus.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@Status", "")
        '                Else
        '                    command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
        '                End If
        '                If ddlAccountType.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@ContactType", "")
        '                Else
        '                    command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text.ToUpper)
        '                End If

        '                command.Parameters.AddWithValue("@CustCode", "")
        '                command.Parameters.AddWithValue("@Contact", txtCustContact.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text.ToUpper)

        '                command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text.ToUpper)

        '                command.Parameters.AddWithValue("@CustAddState", txtCustState.Text.ToUpper)

        '                command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text.ToUpper)

        '                command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustFax", txtCustFax.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text.ToUpper)
        '                'If txtEditSchDate.Text = txtScheduleDate.Text Then

        '                'Else
        '                '    If txtScheduleDate.Text = "" Then
        '                '    Else
        '                '        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text.ToUpper).ToString("yyyy-MM-dd"))
        '                '    End If

        '                'End If

        '                If String.IsNullOrEmpty(txtActSvcDate.Text.ToUpper) = True Then
        '                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '                Else
        '                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
        '                End If


        '                'If txtActSvcDate.Text = "" Then
        '                '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
        '                'Else
        '                '    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text.ToUpper).ToString("yyyy-MM-dd"))
        '                'End If
        '                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
        '                    command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
        '                End If
        '                If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
        '                    command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

        '                End If
        '                command.Parameters.AddWithValue("@Notes", txtDescription.Text.ToUpper)

        '                If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
        '                    Dim d As Double = 0
        '                    If Double.TryParse(txtServiceTime.Text, d) Then
        '                        command.Parameters.AddWithValue("@Duration", d)
        '                    Else
        '                        command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                    End If
        '                Else

        '                    command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                End If
        '                'command.Parameters.AddWithValue("@BillYN", "N")

        '                If String.IsNullOrEmpty(txtAmtBill.Text) Then
        '                    command.Parameters.AddWithValue("@BillAmount", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
        '                End If

        '                command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

        '                command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

        '                command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceTime", 0)
        '                command.Parameters.AddWithValue("@ProgTime", 0)
        '                command.Parameters.AddWithValue("@ContactTime", 0)

        '                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
        '                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '                command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
        '                If chkUrgent.Checked = True Then
        '                    command.Parameters.AddWithValue("@chkurgent", 1)
        '                Else
        '                    command.Parameters.AddWithValue("@chkurgent", 0)
        '                End If

        '                command.Parameters.AddWithValue("@ChkOnsite", 0)

        '                If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
        '                    command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
        '                End If
        '                command.Parameters.AddWithValue("@CustomerSign", "")
        '                command.Parameters.AddWithValue("@ServiceBySign", "")
        '                command.Parameters.AddWithValue("@InChargeSign", "")
        '                command.Parameters.AddWithValue("@CustomerSignName", "")
        '                command.Parameters.AddWithValue("@ServiceBySignName", "")
        '                command.Parameters.AddWithValue("@InChargeSignName", "")
        '                command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@TabletSource", "")
        '                command.Parameters.AddWithValue("@ApprStatus", "")
        '                command.Parameters.AddWithValue("@ApproveBy", "")
        '                command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
        '                command.Parameters.AddWithValue("@SubmitStatus", "")
        '                command.Parameters.AddWithValue("@Filling", 0)
        '                command.Parameters.AddWithValue("@Fax", "")
        '                command.Parameters.AddWithValue("@FaxnReturn", 0)
        '                command.Parameters.AddWithValue("@ApproveStaff", "")
        '                command.Parameters.AddWithValue("@WebCode", 0)
        '                command.Parameters.AddWithValue("@MobileCode", 0)
        '                command.Parameters.AddWithValue("@TabletID", "")
        '                command.Parameters.AddWithValue("@PhaseNo", "")
        '                If String.IsNullOrEmpty(txtScheduleDate.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '                End If

        '                If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
        '                ElseIf txtScheduleTimeIn.Text = "__:__" Then
        '                    command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

        '                End If
        '                command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
        '                If ddlScheduleType.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@ScheduleType", "")
        '                Else
        '                    command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text.ToUpper)
        '                End If
        '                command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
        '                command.Parameters.AddWithValue("@Settle", txtPaymentType.Text.ToUpper)
        '                command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text.ToUpper)
        '                If String.IsNullOrEmpty(txtInvoicedAmt.Text.ToUpper) Then
        '                    command.Parameters.AddWithValue("@BilledAmt", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text.ToUpper)
        '                End If

        '                command.Parameters.AddWithValue("@Location", txtLocation.Text)
        '                command.Parameters.AddWithValue("@AddBlock", "")
        '                command.Parameters.AddWithValue("@AddNos", "")
        '                command.Parameters.AddWithValue("@AddFloor", "")
        '                command.Parameters.AddWithValue("@AddUnit", "")
        '                command.Parameters.AddWithValue("@Address1", txtAddress.Text.ToUpper)
        '                command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text.ToUpper)
        '                command.Parameters.AddWithValue("@AddStreet", txtStreet.Text.ToUpper)
        '                If ddlState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddState", ddlState.Text.ToUpper)
        '                End If

        '                If ddlCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddCity", ddlCity.Text.ToUpper)
        '                End If
        '                If ddlCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text.ToUpper)
        '                End If
        '                command.Parameters.AddWithValue("@AddPostal", txtPostal.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ContractDetSQLID", 0)
        '                command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

        '                command.Parameters.AddWithValue("@TeamID", txtTeam.Text.ToUpper)
        '                command.Parameters.AddWithValue("@VehNo", txtVehNo.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CSt", "")
        '                command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text.ToUpper)
        '                command.Parameters.AddWithValue("@FS", "")
        '                command.Parameters.AddWithValue("@Comments", txtInstruction.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CreateDeviceID", "")
        '                command.Parameters.AddWithValue("@CreateSource", "")
        '                command.Parameters.AddWithValue("@FlowFrom", "")
        '                command.Parameters.AddWithValue("@FlowTo", "")
        '                command.Parameters.AddWithValue("@EditSource", "")
        '                command.Parameters.AddWithValue("@DeleteStatus", "")
        '                command.Parameters.AddWithValue("@LastEditDevice", "")

        '                If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
        '                ElseIf txtScheduleTimeOut.Text = "__:__" Then
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

        '                End If
        '                If chkPayment.Checked = True Then
        '                    command.Parameters.AddWithValue("@CollectPayment", 1)

        '                Else
        '                    command.Parameters.AddWithValue("@CollectPayment", 0)

        '                End If
        '                command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text.ToUpper)
        '                If ddlLocateGrp.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@LocateGrp", "")
        '                Else
        '                    command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text.ToUpper)
        '                End If

        '                command.Parameters.AddWithValue("@WebCreateDeviceID", "")
        '                command.Parameters.AddWithValue("@WebCreateSource", "")
        '                command.Parameters.AddWithValue("@WebFlowFrom", "")
        '                command.Parameters.AddWithValue("@WebFlowTo", "")
        '                command.Parameters.AddWithValue("@WebEditSource", "")
        '                command.Parameters.AddWithValue("@WebDeleteStatus", "")
        '                command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '                command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Seq", txtSequence.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ServiceType", "")
        '                command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text.ToUpper)
        '                command.Parameters.AddWithValue("@OurRef", txtOurRef.Text.ToUpper)
        '                command.Parameters.AddWithValue("@YourRef", txtYourRef.Text.ToUpper)

        '                'If String.IsNullOrEmpty(txtCollectAmt.Text.ToUpper) Then
        '                '    command.Parameters.AddWithValue("@CollectAmt", 0)
        '                'Else
        '                '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text.ToUpper)
        '                'End If

        '                If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
        '                    command.Parameters.AddWithValue("@AmtToCollect", 0.0)
        '                Else
        '                    command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
        '                End If

        '                If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
        '                    command.Parameters.AddWithValue("@CollectAmt", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
        '                End If

        '                command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text.ToUpper)
        '                command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
        '                command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
        '                command.Parameters.AddWithValue("@TabletDownloaded", 0)
        '                command.Parameters.AddWithValue("@SubmitCount", 0)
        '                command.Parameters.AddWithValue("@EmailSent", 0)
        '                command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@EmailSentStatus", "")
        '                command.Parameters.AddWithValue("@RefNo", txtRefNo.Text.ToUpper)
        '                command.Parameters.AddWithValue("@TargetID", "")
        '                'command.Parameters.AddWithValue("@LockST", "")
        '                command.Parameters.AddWithValue("@EmailSendFail", 0)
        '                command.Parameters.AddWithValue("@PoNo", txtPoNo.Text.ToUpper)
        '                If ddlCompanyGrp.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@CompanyGroup", "")
        '                Else
        '                    command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
        '                End If
        '                command.Parameters.AddWithValue("@IsChangeServStaff", 0)

        '                command.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
        '                command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text.ToUpper)
        '                command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text.ToUpper)
        '                If String.IsNullOrEmpty(txtAmountRecvd.Text.ToUpper) Then
        '                    command.Parameters.AddWithValue("@AmountReceived", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text.ToUpper)
        '                End If
        '                command.Parameters.AddWithValue("@Description", txtServiceDescription.Text.ToUpper)
        '                command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text.ToUpper)

        '                command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text.ToUpper)
        '                command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text.ToUpper)
        '                command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text.ToUpper)
        '                command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text.ToUpper)
        '                If ddlOffState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffState", ddlOffState.Text.ToUpper)
        '                End If

        '                If ddlOffCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text.ToUpper)
        '                End If
        '                If ddlOffCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text.ToUpper)
        '                End If
        '                'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text.ToUpper)
        '                If chkOffAddr.Checked = True Then
        '                    command.Parameters.AddWithValue("@SameBillingAddress", 1)

        '                Else
        '                    command.Parameters.AddWithValue("@SameBillingAddress", 0)

        '                End If
        '                command.Parameters.AddWithValue("@BillingName", txtBillingName.Text.ToUpper)
        '                command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text.ToUpper)
        '                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
        '                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)
        '                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.ToUpper)
        '                If ddlBillState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillState", ddlBillState.Text.ToUpper)
        '                End If
        '                If ddlBillCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text.ToUpper)
        '                End If
        '                If ddlBillCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text.ToUpper)
        '                End If
        '                command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.ToUpper)
        '                command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text.ToUpper)

        '                'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text.ToUpper)
        '                'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text.ToUpper)

        '            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

        '                command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
        '                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '                If ddlStatus.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@Status", "")
        '                Else
        '                    command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
        '                End If
        '                If ddlAccountType.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@ContactType", "")
        '                Else
        '                    command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text)
        '                End If

        '                command.Parameters.AddWithValue("@CustCode", "")
        '                command.Parameters.AddWithValue("@Contact", txtCustContact.Text)
        '                command.Parameters.AddWithValue("@CustName", txtCustName.Text)
        '                command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text)
        '                command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
        '                command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text)
        '                command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text)
        '                command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text)

        '                command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text)

        '                command.Parameters.AddWithValue("@CustAddState", txtCustState.Text)

        '                command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text)

        '                command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text)
        '                command.Parameters.AddWithValue("@CustFax", txtCustFax.Text)
        '                command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text)
        '                'If txtEditSchDate.Text = txtScheduleDate.Text Then

        '                'Else
        '                '    If txtScheduleDate.Text = "" Then
        '                '    Else
        '                '        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '                '    End If

        '                'End If

        '                If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
        '                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '                Else
        '                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
        '                End If


        '                'If txtActSvcDate.Text = "" Then
        '                '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
        '                'Else
        '                '    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
        '                'End If
        '                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
        '                    command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
        '                End If
        '                If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
        '                    command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

        '                End If
        '                command.Parameters.AddWithValue("@Notes", txtDescription.Text)

        '                If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
        '                    Dim d As Double = 0
        '                    If Double.TryParse(txtServiceTime.Text, d) Then
        '                        command.Parameters.AddWithValue("@Duration", d)
        '                    Else
        '                        command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                    End If
        '                Else

        '                    command.Parameters.AddWithValue("@Duration", DBNull.Value)
        '                End If
        '                'command.Parameters.AddWithValue("@BillYN", "N")

        '                If String.IsNullOrEmpty(txtAmtBill.Text) Then
        '                    command.Parameters.AddWithValue("@BillAmount", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
        '                End If

        '                command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

        '                command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

        '                command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceTime", 0)
        '                command.Parameters.AddWithValue("@ProgTime", 0)
        '                command.Parameters.AddWithValue("@ContactTime", 0)

        '                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
        '                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '                command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
        '                If chkUrgent.Checked = True Then
        '                    command.Parameters.AddWithValue("@chkurgent", 1)
        '                Else
        '                    command.Parameters.AddWithValue("@chkurgent", 0)
        '                End If

        '                command.Parameters.AddWithValue("@ChkOnsite", 0)

        '                If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
        '                    command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
        '                End If
        '                command.Parameters.AddWithValue("@CustomerSign", "")
        '                command.Parameters.AddWithValue("@ServiceBySign", "")
        '                command.Parameters.AddWithValue("@InChargeSign", "")
        '                command.Parameters.AddWithValue("@CustomerSignName", "")
        '                command.Parameters.AddWithValue("@ServiceBySignName", "")
        '                command.Parameters.AddWithValue("@InChargeSignName", "")
        '                command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@TabletSource", "")
        '                command.Parameters.AddWithValue("@ApprStatus", "")
        '                command.Parameters.AddWithValue("@ApproveBy", "")
        '                command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
        '                command.Parameters.AddWithValue("@SubmitStatus", "")
        '                command.Parameters.AddWithValue("@Filling", 0)
        '                command.Parameters.AddWithValue("@Fax", "")
        '                command.Parameters.AddWithValue("@FaxnReturn", 0)
        '                command.Parameters.AddWithValue("@ApproveStaff", "")
        '                command.Parameters.AddWithValue("@WebCode", 0)
        '                command.Parameters.AddWithValue("@MobileCode", 0)
        '                command.Parameters.AddWithValue("@TabletID", "")
        '                command.Parameters.AddWithValue("@PhaseNo", "")
        '                If String.IsNullOrEmpty(txtScheduleDate.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
        '                End If

        '                If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
        '                ElseIf txtScheduleTimeIn.Text = "__:__" Then
        '                    command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

        '                End If
        '                command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
        '                If ddlScheduleType.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@ScheduleType", "")
        '                Else
        '                    command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text)
        '                End If
        '                command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
        '                command.Parameters.AddWithValue("@Settle", txtPaymentType.Text)
        '                command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text)
        '                If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
        '                    command.Parameters.AddWithValue("@BilledAmt", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
        '                End If

        '                command.Parameters.AddWithValue("@Location", txtLocation.Text)
        '                command.Parameters.AddWithValue("@AddBlock", "")
        '                command.Parameters.AddWithValue("@AddNos", "")
        '                command.Parameters.AddWithValue("@AddFloor", "")
        '                command.Parameters.AddWithValue("@AddUnit", "")
        '                command.Parameters.AddWithValue("@Address1", txtAddress.Text)
        '                command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text)
        '                command.Parameters.AddWithValue("@AddStreet", txtStreet.Text)
        '                If ddlState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddState", ddlState.Text)
        '                End If

        '                If ddlCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddCity", ddlCity.Text)
        '                End If
        '                If ddlCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@AddCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text)
        '                End If
        '                command.Parameters.AddWithValue("@AddPostal", txtPostal.Text)
        '                command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text)
        '                command.Parameters.AddWithValue("@ContractDetSQLID", 0)
        '                command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

        '                command.Parameters.AddWithValue("@TeamID", txtTeam.Text)
        '                command.Parameters.AddWithValue("@VehNo", txtVehNo.Text)
        '                command.Parameters.AddWithValue("@CSt", "")
        '                command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text)
        '                command.Parameters.AddWithValue("@FS", "")
        '                command.Parameters.AddWithValue("@Comments", txtInstruction.Text)
        '                command.Parameters.AddWithValue("@CreateDeviceID", "")
        '                command.Parameters.AddWithValue("@CreateSource", "")
        '                command.Parameters.AddWithValue("@FlowFrom", "")
        '                command.Parameters.AddWithValue("@FlowTo", "")
        '                command.Parameters.AddWithValue("@EditSource", "")
        '                command.Parameters.AddWithValue("@DeleteStatus", "")
        '                command.Parameters.AddWithValue("@LastEditDevice", "")

        '                If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
        '                ElseIf txtScheduleTimeOut.Text = "__:__" Then
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
        '                Else
        '                    command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

        '                End If
        '                If chkPayment.Checked = True Then
        '                    command.Parameters.AddWithValue("@CollectPayment", 1)

        '                Else
        '                    command.Parameters.AddWithValue("@CollectPayment", 0)

        '                End If
        '                command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text)
        '                If ddlLocateGrp.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@LocateGrp", "")
        '                Else
        '                    command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text)
        '                End If

        '                command.Parameters.AddWithValue("@WebCreateDeviceID", "")
        '                command.Parameters.AddWithValue("@WebCreateSource", "")
        '                command.Parameters.AddWithValue("@WebFlowFrom", "")
        '                command.Parameters.AddWithValue("@WebFlowTo", "")
        '                command.Parameters.AddWithValue("@WebEditSource", "")
        '                command.Parameters.AddWithValue("@WebDeleteStatus", "")
        '                command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '                command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text)
        '                command.Parameters.AddWithValue("@Seq", txtSequence.Text)
        '                command.Parameters.AddWithValue("@ServiceType", "")
        '                command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text)
        '                command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text)
        '                command.Parameters.AddWithValue("@OurRef", txtOurRef.Text)
        '                command.Parameters.AddWithValue("@YourRef", txtYourRef.Text)

        '                'If String.IsNullOrEmpty(txtCollectAmt.Text) Then
        '                '    command.Parameters.AddWithValue("@CollectAmt", 0)
        '                'Else
        '                '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text)
        '                'End If

        '                If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
        '                    command.Parameters.AddWithValue("@AmtToCollect", 0.0)
        '                Else
        '                    command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
        '                End If

        '                If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
        '                    command.Parameters.AddWithValue("@CollectAmt", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
        '                End If

        '                command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text)
        '                command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text)
        '                command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
        '                command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
        '                command.Parameters.AddWithValue("@Remarks", txtRemarks.Text)
        '                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
        '                command.Parameters.AddWithValue("@TabletDownloaded", 0)
        '                command.Parameters.AddWithValue("@SubmitCount", 0)
        '                command.Parameters.AddWithValue("@EmailSent", 0)
        '                command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
        '                command.Parameters.AddWithValue("@EmailSentStatus", "")
        '                command.Parameters.AddWithValue("@RefNo", txtRefNo.Text)
        '                command.Parameters.AddWithValue("@TargetID", "")
        '                'command.Parameters.AddWithValue("@LockST", "")
        '                command.Parameters.AddWithValue("@EmailSendFail", 0)
        '                command.Parameters.AddWithValue("@PoNo", txtPoNo.Text)
        '                If ddlCompanyGrp.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@CompanyGroup", "")
        '                Else
        '                    command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
        '                End If
        '                command.Parameters.AddWithValue("@IsChangeServStaff", 0)

        '                command.Parameters.AddWithValue("@AccountID", txtAccountID.Text)
        '                command.Parameters.AddWithValue("@LocationID", txtLocationID.Text)
        '                command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text)
        '                command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text)
        '                command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text)
        '                command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text)
        '                command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text)
        '                command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text)
        '                command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text)
        '                command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text)
        '                command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text)
        '                command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text)
        '                command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text)
        '                command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text)
        '                If String.IsNullOrEmpty(txtAmountRecvd.Text) Then
        '                    command.Parameters.AddWithValue("@AmountReceived", 0)
        '                Else
        '                    command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text)
        '                End If
        '                command.Parameters.AddWithValue("@Description", txtServiceDescription.Text)
        '                command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text)

        '                command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text)
        '                command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text)
        '                command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text)
        '                command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text)
        '                If ddlOffState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffState", ddlOffState.Text)
        '                End If

        '                If ddlOffCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text)
        '                End If
        '                If ddlOffCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@OffCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text)
        '                End If
        '                'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text)
        '                'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text)
        '                'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text)
        '                'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text)
        '                If chkOffAddr.Checked = True Then
        '                    command.Parameters.AddWithValue("@SameBillingAddress", 1)

        '                Else
        '                    command.Parameters.AddWithValue("@SameBillingAddress", 0)

        '                End If
        '                command.Parameters.AddWithValue("@BillingName", txtBillingName.Text)
        '                command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text)
        '                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
        '                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
        '                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
        '                If ddlBillState.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillState", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillState", ddlBillState.Text)
        '                End If
        '                If ddlBillCity.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillCity", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text)
        '                End If
        '                If ddlBillCountry.Text = txtDDLText.Text Then
        '                    command.Parameters.AddWithValue("@BillCountry", "")
        '                Else
        '                    command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text)
        '                End If
        '                command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text)

        '                command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text)

        '                'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text)
        '                'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text)
        '                'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text)
        '                'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text)

        '            End If
        '            If chkReqCustSign.Checked = True Then
        '                command.Parameters.AddWithValue("@RequireClientSignature", 1)
        '            Else
        '                command.Parameters.AddWithValue("@RequireClientSignature", 0)
        '            End If

        '            command.Connection = conn

        '            command.ExecuteNonQuery()
        '            '  UpdateContractActSvcDate(conn)


        '            '''''''''''''''''''''''''''''''
        '            'If String.IsNullOrEmpty(txtSpecificLocation.Text) = False Then
        '            Dim commandSpecificLocation As MySqlCommand = New MySqlCommand
        '            commandSpecificLocation.CommandType = CommandType.Text

        '            Dim qrySpecificLocation As String = "Update tblservicerecord2 set SpecificLocationName = @SpecificLocation where RecordNo =@RecordNo"


        '            commandSpecificLocation.CommandText = qrySpecificLocation
        '            commandSpecificLocation.Parameters.Clear()

        '            commandSpecificLocation.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
        '            'commandSpecificLocation.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '            commandSpecificLocation.Parameters.AddWithValue("@SpecificLocation", txtSpecificLocation.Text.ToUpper)
        '            commandSpecificLocation.Connection = conn

        '            commandSpecificLocation.ExecuteNonQuery()
        '            commandSpecificLocation.Dispose()
        '            'End If

        '            '''''''''''''''''''''''''''''''
        '            lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
        '            lblAlert.Text = ""
        '            txtEditSchDate.Text = ""

        '            UpdateServiceTechnician(conn, txtServiceBy.Text)
        '            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)
        '        End If
        '        'End If

        '        conn.Close()

        '    Catch ex As Exception
        '        InsertIntoTblWebEventLog("btnSave_Click EDIT", ex.Message.ToString, txtSvcRecord.Text)
        '    End Try
        '    EnableControls()
        'End If

        ''.01.02.17

        ''If String.IsNullOrEmpty(lblContract1.Text) = True Then
        ''    SqlDataSource1.DataBind()
        ''Else
        ''    txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno FROM tblservicerecord WHERE ContractNo = '" & lblContract1.Text & "' order by servicedate"
        ''    SqlDataSource1.SelectCommand = txt.Text
        ''    SqlDataSource1.DataBind()

        ''End If

        'txtModal.Text = ""
        'txtMode.Text = ""

        ''.01.02.17
        'SqlDataSource1.SelectCommand = txt.Text
        'SqlDataSource1.DataBind()
        'GridView1.DataBind()

        'If txtCopy.Text = "Yes" Then

        '    For i As Int16 = 0 To GridView1.Rows.Count - 1
        '        Dim rcno As String = TryCast(GridView1.Rows(i).FindControl("Label1"), Label).Text
        '        If rcno = txtRcno.Text Then
        '            GridView1.SelectedIndex = i
        '            Exit For

        '        End If
        '    Next
        'End If


        'btnUpdateWorkLoad_Click(sender, e)

        ''   GridView1.DataSourceID = "SqlDataSource1"
        ''MakeMeNull()

        'btnQuickSearch.Enabled = True
        'btnResSearch.Enabled = True

        'btnEditSchType.Visible = True
        'btnEditSchDate.Visible = True
        'btnEditTeam.Visible = True
        'btnEditServInst.Visible = True
        'btnEditRemarks.Visible = True
        'btnEditClientSign.Visible = True
        'btnEditCollectedAmount.Visible = True
        'btnEditOurRef.Visible = True
        'txtContractNo.ReadOnly = True
        'txtContractNo.Enabled = False

    End Sub

    Private Sub SaveService()

        btnConfirmZeroAmountToBillNo.Enabled = False
        If txtMode.Text = "Add" Then
            Try



                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                'Dim command1 As MySqlCommand = New MySqlCommand
                'command1.CommandType = CommandType.Text
                'command1.CommandText = "SELECT * FROM tblservicerecord where recordno=@recordno"
                'command1.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
                'command1.Connection = conn

                'Dim dr As MySqlDataReader = command1.ExecuteReader()
                'Dim dt As New DataTable
                'dt.Load(dr)

                'If dt.Rows.Count > 0 Then
                '    MessageBox.Message.Alert(Page, "Service Record No already exists!!!", "str")
                'Else

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text



                Dim qry As String = "INSERT INTO tblservicerecord(RecordNo,CreatedOn,CreatedBy,Status,ContactType,CustCode,Contact,CustName,CustAddress1,CustAddBlock,CustAddNos,CustAddFloor,CustAddUnit,CustAddBuilding,CustAddStreet,"
                qry = qry + "CustAddPostal,CustAddCity,CustAddState,CustAddCountry,CustTelephone,CustFax,ServiceBy,ServiceDate,TimeIn,TimeOut,Notes,Duration,BillYN,BillAmount,SerialNo,ManualYN,"
                qry = qry + "SignatureYN,ServiceTime,ProgTime,ContactTime,LastModifiedBy,LastModifiedOn,MainJobOrder,chkUrgent,ChkOnSite,AllocatedSvcTime,CustomerSign,ServiceBySign,InChargeSign,"
                qry = qry + "CustomerSignName,ServiceBySignName,InChargeSignName,CustomerSignDate,ServiceBySignDate,InChargeSignDate,TabletSource,ApprStatus,ApproveBy,ApproveDt,SubmitStatus,"
                qry = qry + "Filling,Fax,FaxnReturn,ApproveStaff,WebCode,MobileCode,TabletID,PhaseNo,SchServiceDate,SchServiceTime,UploadDate,ScheduleType,BranchCode,Settle,BillNo,BilledAmt,"
                qry = qry + "Location,AddBlock,AddNos,AddFloor,AddUnit,Address1,AddBuilding,AddStreet,AddCity,AddState,AddCountry,AddPostal,ContactPersonID,ContractDetSQLID,ContractDetFHzSQLID,"
                qry = qry + "TeamID,VehNo,CSt,Reason,FS,Comments,CreateDeviceID,CreateSource,FlowFrom,FlowTo,EditSource,DeleteStatus,LastEditDevice,SchServiceTimeOut,CollectPayment,InChargeID,"
                qry = qry + "LocateGrp,WebCreateDeviceID,WebCreateSource,WebFlowFrom,WebFlowTo,WebEditSource,WebDeleteStatus,WebLastEditDevice,Email,Seq,ServiceType,ContactPersonMobile,"
                qry = qry + "Scheduler,OurRef,YourRef,CollectAmt,CustTelephone2,CustMobile,CustomerSignDateTime,ServiceBySignDateTime,Remarks,ContractNo,TabletDownloaded,SubmitCount,EmailSent,"
                qry = qry + "EmailSentDate,EmailSentStatus,RefNo,TargetID,LockST,EmailSendFail,PoNo,CompanyGroup,IsChangeServStaff,AccountID,LocationID,ServiceName,Contact1Position,Contact1Tel,Contact1Tel2,"
                qry = qry + "ContactPerson2,Contact2Position,Contact2Tel,Contact2Fax,Contact2Tel2,Contact2Mobile,Contact2Email,ServiceRating,AmountReceived,Description,Contact1Fax,"
                qry = qry + "OffBuilding,OffStreet,OffAddress,OffPostal,OffCity,OffState,OffCountry,SameBillingAddress,BillingName,BillAddress,BillBuilding,BillStreet,BillPostal,BillCity,BillState,BillCountry,Supervisor,RequireClientSignature,OtherEmail, AmtToCollect)VALUES"
                qry = qry + "(@RecordNo,@CreatedOn,@CreatedBy,@Status,@ContactType,@CustCode,@Contact,@CustName,@CustAddress1,@CustAddBlock,@CustAddNos,@CustAddFloor,@CustAddUnit,"
                qry = qry + "@CustAddBuilding,@CustAddStreet,@CustAddPostal,@CustAddCity,@CustAddState,@CustAddCountry,@CustTelephone,@CustFax,@ServiceBy,@ServiceDate,@TimeIn,@TimeOut,@Notes,"
                qry = qry + "@Duration,@BillYN,@BillAmount,@SerialNo,@ManualYN,@SignatureYN,@ServiceTime,@ProgTime,@ContactTime,@LastModifiedBy,@LastModifiedOn,@MainJobOrder,@chkUrgent,"
                qry = qry + "@ChkOnSite,@AllocatedSvcTime,@CustomerSign,@ServiceBySign,@InChargeSign,@CustomerSignName,@ServiceBySignName,@InChargeSignName,@CustomerSignDate,@ServiceBySignDate,"
                qry = qry + "@InChargeSignDate,@TabletSource,@ApprStatus,@ApproveBy,@ApproveDt,@SubmitStatus,@Filling,@Fax,@FaxnReturn,@ApproveStaff,@WebCode,@MobileCode,@TabletID,@PhaseNo,"
                qry = qry + "@SchServiceDate,@SchServiceTime,@UploadDate,@ScheduleType,@BranchCode,@Settle,@BillNo,@BilledAmt,@Location,@AddBlock,@AddNos,@AddFloor,@AddUnit,@Address1,"
                qry = qry + "@AddBuilding,@AddStreet,@AddCity,@AddState,@AddCountry,@AddPostal,@ContactPersonID,@ContractDetSQLID,@ContractDetFHzSQLID,@TeamID,@VehNo,@CSt,@Reason,@FS,@Comments,"

                qry = qry + "@CreateDeviceID,@CreateSource,@FlowFrom,@FlowTo,@EditSource,@DeleteStatus,@LastEditDevice,@SchServiceTimeOut,@CollectPayment,@InChargeID,@LocateGrp,"
                qry = qry + "@WebCreateDeviceID,@WebCreateSource,@WebFlowFrom,@WebFlowTo,@WebEditSource,@WebDeleteStatus,@WebLastEditDevice,@Email,@Seq,@ServiceType,@ContactPersonMobile,"
                qry = qry + "@Scheduler,@OurRef,@YourRef,@CollectAmt,@CustTelephone2,@CustMobile,@CustomerSignDateTime,@ServiceBySignDateTime,@Remarks,@ContractNo,@TabletDownloaded,@SubmitCount,"
                qry = qry + "@EmailSent,@EmailSentDate,@EmailSentStatus,@RefNo,@TargetID,@LockST,@EmailSendFail,@PoNo,@CompanyGroup,@IsChangeServStaff,@AccountID,@LocationID,@ServiceName,@Contact1Position,"
                qry = qry + "@Contact1Tel,@Contact1Tel2,@ContactPerson2,@Contact2Position,@Contact2Tel,@Contact2Fax,@Contact2Tel2,@Contact2Mobile,@Contact2Email,@ServiceRating,@AmountReceived,@Description,@Contact1Fax,"
                qry = qry + "@OffBuilding,@OffStreet,@OffAddress,@OffPostal,@OffCity,@OffState,@OffCountry,@SameBillingAddress,@BillingName,@BillAddress,@BillBuilding,@BillStreet,@BillPostal,@BillCity,@BillState,@BillCountry,@Supervisor,@RequireClientSignature,@OtherEmail, @AmtToCollect);"

                command.CommandText = qry
                command.Parameters.Clear()

                If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    If ddlStatus.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@Status", "")
                    Else
                        command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
                    End If
                    If ddlAccountType.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@ContactType", "")
                    Else
                        command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text.ToUpper)
                    End If

                    command.Parameters.AddWithValue("@CustCode", DBNull.Value)
                    command.Parameters.AddWithValue("@Contact", txtCustContact.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text.ToUpper)

                    command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text.ToUpper)

                    command.Parameters.AddWithValue("@CustAddState", txtCustState.Text.ToUpper)

                    command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text.ToUpper)

                    command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustFax", txtCustFax.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text.ToUpper)
                    If String.IsNullOrEmpty(txtActSvcDate.Text.ToUpper) = True Then
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    End If
                    If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
                        command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
                    End If
                    If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
                        command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

                    End If
                    command.Parameters.AddWithValue("@Notes", txtDescription.Text.ToUpper)

                    If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
                        Dim d As Double = 0
                        If Double.TryParse(txtServiceTime.Text, d) Then
                            command.Parameters.AddWithValue("@Duration", d)
                        Else
                            command.Parameters.AddWithValue("@Duration", DBNull.Value)
                        End If
                    Else

                        command.Parameters.AddWithValue("@Duration", DBNull.Value)
                    End If

                    command.Parameters.AddWithValue("@BillYN", "N")

                    If String.IsNullOrEmpty(txtAmtBill.Text) Then
                        command.Parameters.AddWithValue("@BillAmount", 0)
                    Else
                        command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
                    End If

                    command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

                    command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

                    command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceTime", 0)
                    command.Parameters.AddWithValue("@ProgTime", 0)
                    command.Parameters.AddWithValue("@ContactTime", 0)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
                    If chkUrgent.Checked = True Then
                        command.Parameters.AddWithValue("@chkurgent", 1)
                    Else
                        command.Parameters.AddWithValue("@chkurgent", 0)
                    End If

                    command.Parameters.AddWithValue("@ChkOnsite", 0)

                    If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
                        command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
                    Else
                        command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
                    End If
                    command.Parameters.AddWithValue("@CustomerSign", "")
                    command.Parameters.AddWithValue("@ServiceBySign", "")
                    command.Parameters.AddWithValue("@InChargeSign", "")
                    command.Parameters.AddWithValue("@CustomerSignName", "")
                    command.Parameters.AddWithValue("@ServiceBySignName", "")
                    command.Parameters.AddWithValue("@InChargeSignName", "")
                    command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@TabletSource", "")
                    command.Parameters.AddWithValue("@ApprStatus", "")
                    command.Parameters.AddWithValue("@ApproveBy", "")
                    command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
                    command.Parameters.AddWithValue("@SubmitStatus", "")
                    command.Parameters.AddWithValue("@Filling", 0)
                    command.Parameters.AddWithValue("@Fax", "")
                    command.Parameters.AddWithValue("@FaxnReturn", 0)
                    command.Parameters.AddWithValue("@ApproveStaff", "")
                    command.Parameters.AddWithValue("@WebCode", 0)
                    command.Parameters.AddWithValue("@MobileCode", 0)
                    command.Parameters.AddWithValue("@TabletID", "")
                    command.Parameters.AddWithValue("@PhaseNo", "")

                    If String.IsNullOrEmpty(txtScheduleDate.Text) Then
                        command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                    End If

                    If String.IsNullOrEmpty(txtScheduleTimeIn.Text.ToUpper) Then
                        command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
                    ElseIf txtScheduleTimeIn.Text = "__:__" Then
                        command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

                    Else
                        command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

                    End If
                    command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
                    If ddlScheduleType.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@ScheduleType", "")
                    Else
                        command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text.ToUpper)
                    End If
                    command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
                    command.Parameters.AddWithValue("@Settle", txtPaymentType.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text.ToUpper)
                    If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
                        command.Parameters.AddWithValue("@BilledAmt", 0)
                    Else
                        command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    command.Parameters.AddWithValue("@AddBlock", "")
                    command.Parameters.AddWithValue("@AddNos", "")
                    command.Parameters.AddWithValue("@AddFloor", "")
                    command.Parameters.AddWithValue("@AddUnit", "")
                    command.Parameters.AddWithValue("@Address1", txtAddress.Text.ToUpper)
                    command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text.ToUpper)
                    command.Parameters.AddWithValue("@AddStreet", txtStreet.Text.ToUpper)
                    If ddlState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddState", "")
                    Else
                        command.Parameters.AddWithValue("@AddState", ddlState.Text.ToUpper)
                    End If

                    If ddlCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddCity", "")
                    Else
                        command.Parameters.AddWithValue("@AddCity", ddlCity.Text.ToUpper)
                    End If
                    If ddlCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddCountry", "")
                    Else
                        command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text.ToUpper)
                    End If
                    command.Parameters.AddWithValue("@AddPostal", txtPostal.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContractDetSQLID", 0)
                    command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

                    command.Parameters.AddWithValue("@TeamID", txtTeam.Text.ToUpper)
                    command.Parameters.AddWithValue("@VehNo", txtVehNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@CSt", "")
                    command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text.ToUpper)
                    command.Parameters.AddWithValue("@FS", "")
                    command.Parameters.AddWithValue("@Comments", txtInstruction.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreateDeviceID", "")
                    command.Parameters.AddWithValue("@CreateSource", "")
                    command.Parameters.AddWithValue("@FlowFrom", "")
                    command.Parameters.AddWithValue("@FlowTo", "")
                    command.Parameters.AddWithValue("@EditSource", "")
                    command.Parameters.AddWithValue("@DeleteStatus", "")
                    command.Parameters.AddWithValue("@LastEditDevice", "")

                    If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                        command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
                    ElseIf txtScheduleTimeOut.Text = "__:__" Then
                        command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

                    Else
                        command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

                    End If
                    If chkPayment.Checked = True Then
                        command.Parameters.AddWithValue("@CollectPayment", 1)

                    Else
                        command.Parameters.AddWithValue("@CollectPayment", 0)

                    End If
                    command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text.ToUpper)
                    If ddlLocateGrp.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@LocateGrp", "")
                    Else
                        command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text.ToUpper)
                    End If

                    command.Parameters.AddWithValue("@WebCreateDeviceID", "")
                    command.Parameters.AddWithValue("@WebCreateSource", "")
                    command.Parameters.AddWithValue("@WebFlowFrom", "")
                    command.Parameters.AddWithValue("@WebFlowTo", "")
                    command.Parameters.AddWithValue("@WebEditSource", "")
                    command.Parameters.AddWithValue("@WebDeleteStatus", "")
                    command.Parameters.AddWithValue("@WebLastEditDevice", "")
                    command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text.ToUpper)
                    command.Parameters.AddWithValue("@Seq", txtSequence.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceType", "")
                    command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text.ToUpper)
                    command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text.ToUpper)
                    command.Parameters.AddWithValue("@OurRef", txtOurRef.Text.ToUpper)
                    command.Parameters.AddWithValue("@YourRef", txtYourRef.Text.ToUpper)

                    'If String.IsNullOrEmpty(txtCollectAmt.Text.ToUpper) Then
                    '    command.Parameters.AddWithValue("@CollectAmt", 0)
                    'Else
                    '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text.ToUpper)
                    'End If

                    If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@AmtToCollect", 0.0)
                    Else
                        command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
                    End If

                    If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@CollectAmt", 0)
                    Else
                        command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
                    End If

                    command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text.ToUpper)
                    command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
                    command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@TabletDownloaded", 0)
                    command.Parameters.AddWithValue("@SubmitCount", 0)
                    command.Parameters.AddWithValue("@EmailSent", 0)
                    command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
                    command.Parameters.AddWithValue("@EmailSentStatus", "")
                    command.Parameters.AddWithValue("@RefNo", txtRefNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@TargetID", "")
                    command.Parameters.AddWithValue("@LockST", "N")
                    command.Parameters.AddWithValue("@EmailSendFail", 0)
                    command.Parameters.AddWithValue("@PoNo", txtPoNo.Text.ToUpper)
                    If ddlCompanyGrp.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@CompanyGroup", "")
                    Else
                        command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
                    End If
                    command.Parameters.AddWithValue("@IsChangeServStaff", 0)

                    command.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
                    command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text.ToUpper)
                    If String.IsNullOrEmpty(txtAmountRecvd.Text.ToUpper) Then
                        command.Parameters.AddWithValue("@AmountReceived", 0)
                    Else
                        command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text.ToUpper)
                    End If
                    command.Parameters.AddWithValue("@Description", txtServiceDescription.Text.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text.ToUpper)

                    command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text.ToUpper)
                    command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text.ToUpper)
                    command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text.ToUpper)
                    command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text.ToUpper)
                    If ddlOffState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffState", "")
                    Else
                        command.Parameters.AddWithValue("@OffState", ddlOffState.Text.ToUpper)
                    End If

                    If ddlOffCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffCity", "")
                    Else
                        command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text.ToUpper)
                    End If
                    If ddlOffCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffCountry", "")
                    Else
                        command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text.ToUpper)
                    End If
                    'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text.ToUpper)
                    'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text.ToUpper)
                    If chkOffAddr.Checked = True Then
                        command.Parameters.AddWithValue("@SameBillingAddress", 1)

                    Else
                        command.Parameters.AddWithValue("@SameBillingAddress", 0)

                    End If
                    command.Parameters.AddWithValue("@BillingName", txtBillingName.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.ToUpper)
                    If ddlBillState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillState", "")
                    Else
                        command.Parameters.AddWithValue("@BillState", ddlBillState.Text.ToUpper)
                    End If
                    If ddlBillCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillCity", "")
                    Else
                        command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text.ToUpper)
                    End If
                    If ddlBillCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillCountry", "")
                    Else
                        command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text.ToUpper)
                    End If
                    command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.ToUpper)
                    command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text.ToUpper)


                    'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text.ToUpper)
                    'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text.ToUpper)

                    GenerateRecordNo()
                    command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)

                ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    If ddlStatus.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@Status", "")
                    Else
                        command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
                    End If
                    If ddlAccountType.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@ContactType", "")
                    Else
                        command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text)
                    End If

                    command.Parameters.AddWithValue("@CustCode", DBNull.Value)
                    command.Parameters.AddWithValue("@Contact", txtCustContact.Text)
                    command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                    command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text)
                    command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
                    command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text)
                    command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text)
                    command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text)

                    command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text)

                    command.Parameters.AddWithValue("@CustAddState", txtCustState.Text)

                    command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text)

                    command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text)
                    command.Parameters.AddWithValue("@CustFax", txtCustFax.Text)
                    command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text)
                    If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    End If
                    If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
                        command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
                    End If
                    If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
                        command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

                    End If
                    command.Parameters.AddWithValue("@Notes", txtDescription.Text)

                    If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
                        Dim d As Double = 0
                        If Double.TryParse(txtServiceTime.Text, d) Then
                            command.Parameters.AddWithValue("@Duration", d)
                        Else
                            command.Parameters.AddWithValue("@Duration", DBNull.Value)
                        End If
                    Else

                        command.Parameters.AddWithValue("@Duration", DBNull.Value)
                    End If
                    command.Parameters.AddWithValue("@BillYN", "N")

                    If String.IsNullOrEmpty(txtAmtBill.Text) Then
                        command.Parameters.AddWithValue("@BillAmount", 0)
                    Else
                        command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
                    End If

                    command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

                    command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

                    command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceTime", 0)
                    command.Parameters.AddWithValue("@ProgTime", 0)
                    command.Parameters.AddWithValue("@ContactTime", 0)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
                    If chkUrgent.Checked = True Then
                        command.Parameters.AddWithValue("@chkurgent", 1)
                    Else
                        command.Parameters.AddWithValue("@chkurgent", 0)
                    End If

                    command.Parameters.AddWithValue("@ChkOnsite", 0)

                    If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
                        command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
                    Else
                        command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
                    End If
                    command.Parameters.AddWithValue("@CustomerSign", "")
                    command.Parameters.AddWithValue("@ServiceBySign", "")
                    command.Parameters.AddWithValue("@InChargeSign", "")
                    command.Parameters.AddWithValue("@CustomerSignName", "")
                    command.Parameters.AddWithValue("@ServiceBySignName", "")
                    command.Parameters.AddWithValue("@InChargeSignName", "")
                    command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
                    command.Parameters.AddWithValue("@TabletSource", "")
                    command.Parameters.AddWithValue("@ApprStatus", "")
                    command.Parameters.AddWithValue("@ApproveBy", "")
                    command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
                    command.Parameters.AddWithValue("@SubmitStatus", "")
                    command.Parameters.AddWithValue("@Filling", 0)
                    command.Parameters.AddWithValue("@Fax", "")
                    command.Parameters.AddWithValue("@FaxnReturn", 0)
                    command.Parameters.AddWithValue("@ApproveStaff", "")
                    command.Parameters.AddWithValue("@WebCode", 0)
                    command.Parameters.AddWithValue("@MobileCode", 0)
                    command.Parameters.AddWithValue("@TabletID", "")
                    command.Parameters.AddWithValue("@PhaseNo", "")

                    If String.IsNullOrEmpty(txtScheduleDate.Text) Then
                        command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                    End If

                    If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
                        command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
                    ElseIf txtScheduleTimeIn.Text = "__:__" Then
                        command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

                    Else
                        command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

                    End If
                    command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
                    If ddlScheduleType.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@ScheduleType", "")
                    Else
                        command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text)
                    End If
                    command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
                    command.Parameters.AddWithValue("@Settle", txtPaymentType.Text)
                    command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text)
                    If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
                        command.Parameters.AddWithValue("@BilledAmt", 0)
                    Else
                        command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    command.Parameters.AddWithValue("@AddBlock", "")
                    command.Parameters.AddWithValue("@AddNos", "")
                    command.Parameters.AddWithValue("@AddFloor", "")
                    command.Parameters.AddWithValue("@AddUnit", "")
                    command.Parameters.AddWithValue("@Address1", txtAddress.Text)
                    command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text)
                    command.Parameters.AddWithValue("@AddStreet", txtStreet.Text)
                    If ddlState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddState", "")
                    Else
                        command.Parameters.AddWithValue("@AddState", ddlState.Text)
                    End If

                    If ddlCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddCity", "")
                    Else
                        command.Parameters.AddWithValue("@AddCity", ddlCity.Text)
                    End If
                    If ddlCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@AddCountry", "")
                    Else
                        command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text)
                    End If
                    command.Parameters.AddWithValue("@AddPostal", txtPostal.Text)
                    command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text)
                    command.Parameters.AddWithValue("@ContractDetSQLID", 0)
                    command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

                    command.Parameters.AddWithValue("@TeamID", txtTeam.Text)
                    command.Parameters.AddWithValue("@VehNo", txtVehNo.Text)
                    command.Parameters.AddWithValue("@CSt", "")
                    command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text)
                    command.Parameters.AddWithValue("@FS", "")
                    command.Parameters.AddWithValue("@Comments", txtInstruction.Text)
                    command.Parameters.AddWithValue("@CreateDeviceID", "")
                    command.Parameters.AddWithValue("@CreateSource", "")
                    command.Parameters.AddWithValue("@FlowFrom", "")
                    command.Parameters.AddWithValue("@FlowTo", "")
                    command.Parameters.AddWithValue("@EditSource", "")
                    command.Parameters.AddWithValue("@DeleteStatus", "")
                    command.Parameters.AddWithValue("@LastEditDevice", "")

                    If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                        command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
                    ElseIf txtScheduleTimeOut.Text = "__:__" Then
                        command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

                    Else
                        command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

                    End If
                    If chkPayment.Checked = True Then
                        command.Parameters.AddWithValue("@CollectPayment", 1)

                    Else
                        command.Parameters.AddWithValue("@CollectPayment", 0)

                    End If
                    command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text)
                    If ddlLocateGrp.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@LocateGrp", "")
                    Else
                        command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text)
                    End If

                    command.Parameters.AddWithValue("@WebCreateDeviceID", "")
                    command.Parameters.AddWithValue("@WebCreateSource", "")
                    command.Parameters.AddWithValue("@WebFlowFrom", "")
                    command.Parameters.AddWithValue("@WebFlowTo", "")
                    command.Parameters.AddWithValue("@WebEditSource", "")
                    command.Parameters.AddWithValue("@WebDeleteStatus", "")
                    command.Parameters.AddWithValue("@WebLastEditDevice", "")
                    command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text)
                    command.Parameters.AddWithValue("@Seq", txtSequence.Text)
                    command.Parameters.AddWithValue("@ServiceType", "")
                    command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text)
                    command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text)
                    command.Parameters.AddWithValue("@OurRef", txtOurRef.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourRef.Text)

                    'If String.IsNullOrEmpty(txtCollectAmt.Text) Then
                    '    command.Parameters.AddWithValue("@CollectAmt", 0)
                    'Else
                    '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text)
                    'End If

                    If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@AmtToCollect", 0.0)
                    Else
                        command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
                    End If

                    If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@CollectAmt", 0)
                    Else
                        command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
                    End If

                    command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text)
                    command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text)
                    command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
                    command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
                    command.Parameters.AddWithValue("@Remarks", txtRemarks.Text)
                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command.Parameters.AddWithValue("@TabletDownloaded", 0)
                    command.Parameters.AddWithValue("@SubmitCount", 0)
                    command.Parameters.AddWithValue("@EmailSent", 0)
                    command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
                    command.Parameters.AddWithValue("@EmailSentStatus", "")
                    command.Parameters.AddWithValue("@RefNo", txtRefNo.Text)
                    command.Parameters.AddWithValue("@TargetID", "")
                    command.Parameters.AddWithValue("@LockST", "N")
                    command.Parameters.AddWithValue("@EmailSendFail", 0)
                    command.Parameters.AddWithValue("@PoNo", txtPoNo.Text)
                    If ddlCompanyGrp.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@CompanyGroup", "")
                    Else
                        command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                    End If
                    command.Parameters.AddWithValue("@IsChangeServStaff", 0)

                    command.Parameters.AddWithValue("@AccountID", txtAccountID.Text)
                    command.Parameters.AddWithValue("@LocationID", txtLocationID.Text)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text)
                    command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text)
                    command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text)
                    command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text)
                    command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text)
                    command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text)
                    command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text)
                    command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text)
                    command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text)
                    command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text)
                    If String.IsNullOrEmpty(txtAmountRecvd.Text) Then
                        command.Parameters.AddWithValue("@AmountReceived", 0)
                    Else
                        command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text)
                    End If
                    command.Parameters.AddWithValue("@Description", txtServiceDescription.Text)
                    command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text)

                    command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text)
                    command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text)
                    command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text)
                    command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text)
                    If ddlOffState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffState", "")
                    Else
                        command.Parameters.AddWithValue("@OffState", ddlOffState.Text)
                    End If

                    If ddlOffCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffCity", "")
                    Else
                        command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text)
                    End If
                    If ddlOffCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@OffCountry", "")
                    Else
                        command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text)
                    End If
                    'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text)
                    'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text)
                    'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text)
                    'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text)
                    'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text)
                    'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text)
                    'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text)
                    'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text)
                    'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text)
                    'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text)
                    'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text)
                    'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text)
                    'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text)
                    'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text)
                    If chkOffAddr.Checked = True Then
                        command.Parameters.AddWithValue("@SameBillingAddress", 1)

                    Else
                        command.Parameters.AddWithValue("@SameBillingAddress", 0)

                    End If
                    command.Parameters.AddWithValue("@BillingName", txtBillingName.Text)
                    command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                    If ddlBillState.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillState", "")
                    Else
                        command.Parameters.AddWithValue("@BillState", ddlBillState.Text)
                    End If
                    If ddlBillCity.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillCity", "")
                    Else
                        command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text)
                    End If
                    If ddlBillCountry.Text = txtDDLText.Text Then
                        command.Parameters.AddWithValue("@BillCountry", "")
                    Else
                        command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text)
                    End If
                    command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text)
                    command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text)

                    'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text)
                    'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text)
                    'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text)
                    'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text)
                    'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text)
                    'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text)
                    'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text)
                    'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text)
                    'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text)
                    'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text)
                    'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text)
                    'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text)
                    'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text)
                    'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text)


                    GenerateRecordNo()
                    command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
                End If

                If chkReqCustSign.Checked = True Then
                    command.Parameters.AddWithValue("@RequireClientSignature", 1)
                Else
                    command.Parameters.AddWithValue("@RequireClientSignature", 0)
                End If

                command.Connection = conn

                command.ExecuteNonQuery()

                '      UpdateContractActSvcDate(conn)

                UpdateServiceTechnician(conn, txtServiceBy.Text)
                'UpdateServiceTechnician(conn, txtIncharge.Text)

                '''''''''''''''''''''''''''''''
                If String.IsNullOrEmpty(txtSpecificLocation.Text) = False Then

                    Dim conn1 As MySqlConnection = New MySqlConnection()

                    conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn1.Open()
                    Dim commandSpecificLocation As MySqlCommand = New MySqlCommand
                    commandSpecificLocation.CommandType = CommandType.Text

                    Dim qrySpecificLocation As String = "INSERT INTO tblservicerecord2(RecordNo, SpecificLocationName) values (@RecordNo, @SpecificLocation);"

                    commandSpecificLocation.CommandText = qrySpecificLocation
                    commandSpecificLocation.Parameters.Clear()

                    commandSpecificLocation.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
                    'command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    commandSpecificLocation.Parameters.AddWithValue("@SpecificLocation", txtSpecificLocation.Text.ToUpper)
                    commandSpecificLocation.Connection = conn1

                    commandSpecificLocation.ExecuteNonQuery()
                    commandSpecificLocation.Dispose()
                    conn1.Close()
                    conn1.Dispose()
                End If

                '''''''''''''''''''''''''''''''


                'Work Order


                Dim commandWorkOrder As MySqlCommand = New MySqlCommand
                commandWorkOrder.CommandType = CommandType.Text

                Dim qryWorkOrder As String = "UPDATE tblservicerecord2 SET WorkOrderNo =@WorkOrderNo  where RecordNo ='" & txtSvcRecord.Text & "'"

                commandWorkOrder.CommandText = qryWorkOrder
                commandWorkOrder.Parameters.Clear()
                commandWorkOrder.Parameters.AddWithValue("@WorkOrderNo", txtWorkOrderNo.Text.ToUpper)
                commandWorkOrder.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                commandWorkOrder.Connection = conn

                commandWorkOrder.ExecuteNonQuery()
                commandWorkOrder.Dispose()
              

                'Work Order


                lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                lblAlert.Text = ""
                txtRcno.Text = command.LastInsertedId
                If txtCopy.Text = "Yes" Then


                    ''''
                    If txtIsRequireFollowup.Text = "Y" Then
                        txtIsRequireFollowup.Text = "N"


                        '''''''''''''''''''''''''''''''
                        'If String.IsNullOrEmpty(txtSpecificLocation.Text) = False Then

                        Dim connFollowUp As MySqlConnection = New MySqlConnection()

                        connFollowUp.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        connFollowUp.Open()
                        Dim commandFollowUp As MySqlCommand = New MySqlCommand
                        commandFollowUp.CommandType = CommandType.Text

                        Dim qryFollowUp As String = "UPDATE tblservicerecord2 set FollowUpRecordNo = '" & txtSvcRecord.Text & "', WorkOrderNo =@WorkOrderNo where RecordNo ='" & txtCopyRecordNo.Text & "'"

                        commandFollowUp.CommandText = qryFollowUp
                        commandFollowUp.Parameters.Clear()

                        commandFollowUp.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                        commandFollowUp.Parameters.AddWithValue("@WorkOrderNo", txtWorkOrderNo.Text.ToUpper)
                        commandFollowUp.Connection = connFollowUp

                        commandFollowUp.ExecuteNonQuery()
                        commandFollowUp.Dispose()
                        connFollowUp.Close()
                        connFollowUp.Dispose()
                        'End If
                    End If



                    ''''
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "ADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

                Else
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "COPYADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

                End If
                ' End If
                conn.Close()
                txtServiceRecord.Text = txtSvcRecord.Text

            Catch ex As Exception
                'ButtonPressed = "N"
                InsertIntoTblWebEventLog("btnSave_Click ADD", ex.Message.ToString, txtSvcRecord.Text)
            End Try
            EnableControls()


            lblRecordNo.Text = txtSvcRecord.Text
            lblRecordNo1.Text = txtSvcRecord.Text
            lblRecordNo2.Text = txtSvcRecord.Text
            lblRecordNo3.Text = txtSvcRecord.Text
            lblRecordNo5.Text = txtSvcRecord.Text
            lblRecordNo6.Text = txtSvcRecord.Text
            lblNotesKeyField.Text = txtSvcRecord.Text

            lblContractNo.Text = txtContractNo.Text
            lblNotesStaffID.Text = txtCreatedBy.Text

            lblTotalServiceArea.Text = "0.00"
            lblTotalAreaCompleted.Text = "0.00"
            lblTotalPrice.Text = "0.00"

            btnSvcAdd.Enabled = True
            btnSvcCancel.Enabled = False
            btnSvcEdit.Enabled = False
            btnSvcSave.Enabled = False
            btnSvcDelete.Enabled = False
            btnClientImport.Enabled = True

            btnSvcAdd.ForeColor = System.Drawing.Color.Black
            btnSvcCancel.ForeColor = System.Drawing.Color.Gray
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            btnSvcSave.ForeColor = System.Drawing.Color.Gray
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            btnClientImport.ForeColor = System.Drawing.Color.Black

            EnableTechControls()

            btnTechEdit.Enabled = False
            btnTechDelete.Enabled = False

            btnTechEdit.ForeColor = System.Drawing.Color.Gray
            btnTechDelete.ForeColor = System.Drawing.Color.Gray

            EnableNotesControls()

            btnEditNotesMaster.Enabled = False
            btnEditNotesMaster.Enabled = False

            btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
            btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray

            If txtCopy.Text = "Yes" Then

                CopySvcDetailsTechnician(txtSvcRecord.Text, txtCopyRecordNo.Text, txtServiceBy.Text)

            End If
        ElseIf txtMode.Text = "Edit" Then
            'ButtonPressed = "Y"

            If txtRcno.Text = "" Then
                '  MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"
                'ButtonPressed = "N"
                Return

            End If
            If txtAccountID1.Text.Trim <> txtAccountID.Text.Trim Then
                MessageBox.Message.Alert(Page, "WARNING: ACCOUNT ID MODIFIED", "str")
            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                'Dim command2 As MySqlCommand = New MySqlCommand
                'command2.CommandType = CommandType.Text
                'command2.CommandText = "SELECT * FROM tblservicerecord where rcno <>" & Convert.ToInt32(txtRcno.Text)
                'command2.Parameters.AddWithValue("@recordno", txtServiceRecord.Text)
                'command2.Connection = conn

                'Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                'Dim dt1 As New DataTable
                'dt1.Load(dr1)

                'If dt1.Rows.Count > 0 Then
                '    '   MessageBox.Message.Alert(Page, "Service Record No already exists!!!", "str")
                '    lblAlert.Text = "RECORD NO ALREADY EXISTS"
                'Else

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT rcno FROM tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "UPDATE tblservicerecord SET Status = @Status,ContactType = @ContactType,Contact = @Contact,CustName = @CustName,CustAddress1 = @CustAddress1,CustAddBlock = @CustAddBlock,CustAddNos = @CustAddNos,"
                    qry = qry + "CustAddFloor = @CustAddFloor,CustAddUnit = @CustAddUnit,CustAddBuilding = @CustAddBuilding,CustAddStreet = @CustAddStreet,CustAddPostal = @CustAddPostal,CustAddCity = @CustAddCity,CustAddState = @CustAddState,CustAddCountry = @CustAddCountry,CustTelephone = @CustTelephone,"
                    qry = qry + "CustFax = @CustFax,ServiceBy = @ServiceBy,ServiceDate = @ServiceDate,TimeIn = @TimeIn,TimeOut = @TimeOut,Notes = @Notes,Duration = @Duration,BillAmount = @BillAmount, SerialNo = @SerialNo,ManualYN = @ManualYN,SignatureYN = @SignatureYN,ServiceTime = @ServiceTime,"
                    qry = qry + "ProgTime = @ProgTime,ContactTime = @ContactTime,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn,MainJobOrder = @MainJobOrder,chkUrgent = @chkUrgent,ChkOnSite = @ChkOnSite,AllocatedSvcTime = @AllocatedSvcTime, SchServiceDate = @SchServiceDate,SchServiceTime = @SchServiceTime,"
                    qry = qry + "ScheduleType = @ScheduleType,BranchCode = @BranchCode,BillNo = @BillNo,BilledAmt = @BilledAmt,Location = @Location,Address1 = @Address1,AddBuilding = @AddBuilding,AddStreet=@AddStreet,AddState=@AddState,AddCity=@AddCity,AddCountry=@AddCountry,AddPostal=@AddPostal, ContractDetSQLID = @ContractDetSQLID,ContractDetFHzSQLID = @ContractDetFHzSQLID,TeamID = @TeamID,VehNo = @VehNo,CSt = @CSt, FS = @FS,Comments = @Comments,"
                    qry = qry + "SchServiceTimeOut = @SchServiceTimeOut,CollectPayment = @CollectPayment,InChargeID = @InChargeID,LocateGrp = @LocateGrp, Email = @Email,Seq = @Seq, ContactPersonMobile = @ContactPersonMobile,Scheduler = @Scheduler,OurRef = @OurRef,YourRef = @YourRef, CustTelephone2 = @CustTelephone2,CustMobile = @CustMobile,"
                    qry = qry + "Remarks = @Remarks,ContractNo = @ContractNo, PoNo = @PoNo,CompanyGroup = @CompanyGroup,AccountID = @AccountID,LocationID = @LocationID,ServiceName = @ServiceName,Contact1Position = @Contact1Position,Contact1Tel = @Contact1Tel,Contact1Tel2 = @Contact1Tel2,ContactPerson2 = @ContactPerson2,Contact2Position = @Contact2Position,Contact2Tel = @Contact2Tel,"
                    qry = qry + "Contact2Fax = @Contact2Fax,Contact2Tel2 = @Contact2Tel2,Contact2Mobile = @Contact2Mobile,Contact2Email = @Contact2Email,ServiceRating = @ServiceRating,Description = @Description,OffBuilding = @OffBuilding,OffStreet = @OffStreet,OffAddress = @OffAddress,OffPostal = @OffPostal,OffCity = @OffCity,OffState = @OffState,OffCountry = @OffCountry,"
                    qry = qry + "SameBillingAddress = @SameBillingAddress,BillingName = @BillingName,BillAddress = @BillAddress,BillBuilding = @BillBuilding,BillStreet = @BillStreet,BillPostal = @BillPostal,BillCity = @BillCity,BillState = @BillState,BillCountry = @BillCountry,Supervisor=@Supervisor,RequireClientSignature=@RequireClientSignature,OtherEmail=@OtherEmail,CollectAmt =@CollectAmt, AmtToCollect=@AmtToCollect,contactpersonid=@contactpersonid,contact1fax=@contact1fax,Reason=@Reason WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        If ddlStatus.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@Status", "")
                        Else
                            command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
                        End If
                        If ddlAccountType.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@ContactType", "")
                        Else
                            command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text.ToUpper)
                        End If

                        command.Parameters.AddWithValue("@CustCode", "")
                        command.Parameters.AddWithValue("@Contact", txtCustContact.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text.ToUpper)

                        command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text.ToUpper)

                        command.Parameters.AddWithValue("@CustAddState", txtCustState.Text.ToUpper)

                        command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text.ToUpper)

                        command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustFax", txtCustFax.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text.ToUpper)
                        'If txtEditSchDate.Text = txtScheduleDate.Text Then

                        'Else
                        '    If txtScheduleDate.Text = "" Then
                        '    Else
                        '        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text.ToUpper).ToString("yyyy-MM-dd"))
                        '    End If

                        'End If

                        If String.IsNullOrEmpty(txtActSvcDate.Text.ToUpper) = True Then
                            command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                        Else
                            command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                        End If


                        'If txtActSvcDate.Text = "" Then
                        '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                        'Else
                        '    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text.ToUpper).ToString("yyyy-MM-dd"))
                        'End If
                        If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
                            command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
                        End If
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
                            command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

                        End If
                        command.Parameters.AddWithValue("@Notes", txtDescription.Text.ToUpper)

                        If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
                            Dim d As Double = 0
                            If Double.TryParse(txtServiceTime.Text, d) Then
                                command.Parameters.AddWithValue("@Duration", d)
                            Else
                                command.Parameters.AddWithValue("@Duration", DBNull.Value)
                            End If
                        Else

                            command.Parameters.AddWithValue("@Duration", DBNull.Value)
                        End If
                        'command.Parameters.AddWithValue("@BillYN", "N")

                        If String.IsNullOrEmpty(txtAmtBill.Text) Then
                            command.Parameters.AddWithValue("@BillAmount", 0)
                        Else
                            command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
                        End If

                        command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

                        command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

                        command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceTime", 0)
                        command.Parameters.AddWithValue("@ProgTime", 0)
                        command.Parameters.AddWithValue("@ContactTime", 0)

                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
                        If chkUrgent.Checked = True Then
                            command.Parameters.AddWithValue("@chkurgent", 1)
                        Else
                            command.Parameters.AddWithValue("@chkurgent", 0)
                        End If

                        command.Parameters.AddWithValue("@ChkOnsite", 0)

                        If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
                            command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
                        Else
                            command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
                        End If
                        command.Parameters.AddWithValue("@CustomerSign", "")
                        command.Parameters.AddWithValue("@ServiceBySign", "")
                        command.Parameters.AddWithValue("@InChargeSign", "")
                        command.Parameters.AddWithValue("@CustomerSignName", "")
                        command.Parameters.AddWithValue("@ServiceBySignName", "")
                        command.Parameters.AddWithValue("@InChargeSignName", "")
                        command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@TabletSource", "")
                        command.Parameters.AddWithValue("@ApprStatus", "")
                        command.Parameters.AddWithValue("@ApproveBy", "")
                        command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
                        command.Parameters.AddWithValue("@SubmitStatus", "")
                        command.Parameters.AddWithValue("@Filling", 0)
                        command.Parameters.AddWithValue("@Fax", "")
                        command.Parameters.AddWithValue("@FaxnReturn", 0)
                        command.Parameters.AddWithValue("@ApproveStaff", "")
                        command.Parameters.AddWithValue("@WebCode", 0)
                        command.Parameters.AddWithValue("@MobileCode", 0)
                        command.Parameters.AddWithValue("@TabletID", "")
                        command.Parameters.AddWithValue("@PhaseNo", "")
                        If String.IsNullOrEmpty(txtScheduleDate.Text) Then
                            command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
                            command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
                        ElseIf txtScheduleTimeIn.Text = "__:__" Then
                            command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

                        Else
                            command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

                        End If
                        command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
                        If ddlScheduleType.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@ScheduleType", "")
                        Else
                            command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text.ToUpper)
                        End If
                        command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
                        command.Parameters.AddWithValue("@Settle", txtPaymentType.Text.ToUpper)
                        command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text.ToUpper)
                        If String.IsNullOrEmpty(txtInvoicedAmt.Text.ToUpper) Then
                            command.Parameters.AddWithValue("@BilledAmt", 0)
                        Else
                            command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text.ToUpper)
                        End If

                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                        command.Parameters.AddWithValue("@AddBlock", "")
                        command.Parameters.AddWithValue("@AddNos", "")
                        command.Parameters.AddWithValue("@AddFloor", "")
                        command.Parameters.AddWithValue("@AddUnit", "")
                        command.Parameters.AddWithValue("@Address1", txtAddress.Text.ToUpper)
                        command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text.ToUpper)
                        command.Parameters.AddWithValue("@AddStreet", txtStreet.Text.ToUpper)
                        If ddlState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddState", "")
                        Else
                            command.Parameters.AddWithValue("@AddState", ddlState.Text.ToUpper)
                        End If

                        If ddlCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddCity", "")
                        Else
                            command.Parameters.AddWithValue("@AddCity", ddlCity.Text.ToUpper)
                        End If
                        If ddlCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddCountry", "")
                        Else
                            command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text.ToUpper)
                        End If
                        command.Parameters.AddWithValue("@AddPostal", txtPostal.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContractDetSQLID", 0)
                        command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

                        command.Parameters.AddWithValue("@TeamID", txtTeam.Text.ToUpper)
                        command.Parameters.AddWithValue("@VehNo", txtVehNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@CSt", "")
                        command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FS", "")
                        command.Parameters.AddWithValue("@Comments", txtInstruction.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreateDeviceID", "")
                        command.Parameters.AddWithValue("@CreateSource", "")
                        command.Parameters.AddWithValue("@FlowFrom", "")
                        command.Parameters.AddWithValue("@FlowTo", "")
                        command.Parameters.AddWithValue("@EditSource", "")
                        command.Parameters.AddWithValue("@DeleteStatus", "")
                        command.Parameters.AddWithValue("@LastEditDevice", "")

                        If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                            command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
                        ElseIf txtScheduleTimeOut.Text = "__:__" Then
                            command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

                        Else
                            command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

                        End If
                        If chkPayment.Checked = True Then
                            command.Parameters.AddWithValue("@CollectPayment", 1)

                        Else
                            command.Parameters.AddWithValue("@CollectPayment", 0)

                        End If
                        command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text.ToUpper)
                        If ddlLocateGrp.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@LocateGrp", "")
                        Else
                            command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text.ToUpper)
                        End If

                        command.Parameters.AddWithValue("@WebCreateDeviceID", "")
                        command.Parameters.AddWithValue("@WebCreateSource", "")
                        command.Parameters.AddWithValue("@WebFlowFrom", "")
                        command.Parameters.AddWithValue("@WebFlowTo", "")
                        command.Parameters.AddWithValue("@WebEditSource", "")
                        command.Parameters.AddWithValue("@WebDeleteStatus", "")
                        command.Parameters.AddWithValue("@WebLastEditDevice", "")
                        command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text.ToUpper)
                        command.Parameters.AddWithValue("@Seq", txtSequence.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceType", "")
                        command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text.ToUpper)
                        command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text.ToUpper)
                        command.Parameters.AddWithValue("@OurRef", txtOurRef.Text.ToUpper)
                        command.Parameters.AddWithValue("@YourRef", txtYourRef.Text.ToUpper)

                        'If String.IsNullOrEmpty(txtCollectAmt.Text.ToUpper) Then
                        '    command.Parameters.AddWithValue("@CollectAmt", 0)
                        'Else
                        '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text.ToUpper)
                        'End If

                        If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@AmtToCollect", 0.0)
                        Else
                            command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
                        End If

                        If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@CollectAmt", 0)
                        Else
                            command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
                        End If

                        command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text.ToUpper)
                        command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
                        command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@TabletDownloaded", 0)
                        command.Parameters.AddWithValue("@SubmitCount", 0)
                        command.Parameters.AddWithValue("@EmailSent", 0)
                        command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
                        command.Parameters.AddWithValue("@EmailSentStatus", "")
                        command.Parameters.AddWithValue("@RefNo", txtRefNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@TargetID", "")
                        'command.Parameters.AddWithValue("@LockST", "")
                        command.Parameters.AddWithValue("@EmailSendFail", 0)
                        command.Parameters.AddWithValue("@PoNo", txtPoNo.Text.ToUpper)
                        If ddlCompanyGrp.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@CompanyGroup", "")
                        Else
                            command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
                        End If
                        command.Parameters.AddWithValue("@IsChangeServStaff", 0)

                        command.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
                        command.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text.ToUpper)
                        If String.IsNullOrEmpty(txtAmountRecvd.Text.ToUpper) Then
                            command.Parameters.AddWithValue("@AmountReceived", 0)
                        Else
                            command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text.ToUpper)
                        End If
                        command.Parameters.AddWithValue("@Description", txtServiceDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text.ToUpper)

                        command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text.ToUpper)
                        command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text.ToUpper)
                        command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text.ToUpper)
                        command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text.ToUpper)
                        If ddlOffState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffState", "")
                        Else
                            command.Parameters.AddWithValue("@OffState", ddlOffState.Text.ToUpper)
                        End If

                        If ddlOffCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffCity", "")
                        Else
                            command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text.ToUpper)
                        End If
                        If ddlOffCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffCountry", "")
                        Else
                            command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text.ToUpper)
                        End If
                        'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text.ToUpper)
                        'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text.ToUpper)
                        If chkOffAddr.Checked = True Then
                            command.Parameters.AddWithValue("@SameBillingAddress", 1)

                        Else
                            command.Parameters.AddWithValue("@SameBillingAddress", 0)

                        End If
                        command.Parameters.AddWithValue("@BillingName", txtBillingName.Text.ToUpper)
                        command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text.ToUpper)
                        command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
                        command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)
                        command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.ToUpper)
                        If ddlBillState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillState", "")
                        Else
                            command.Parameters.AddWithValue("@BillState", ddlBillState.Text.ToUpper)
                        End If
                        If ddlBillCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillCity", "")
                        Else
                            command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text.ToUpper)
                        End If
                        If ddlBillCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillCountry", "")
                        Else
                            command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text.ToUpper)
                        End If
                        command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.ToUpper)
                        command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text.ToUpper)

                        'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text.ToUpper)
                        'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text.ToUpper)

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        If ddlStatus.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@Status", "")
                        Else
                            command.Parameters.AddWithValue("@Status", ddlStatus.SelectedValue)
                        End If
                        If ddlAccountType.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@ContactType", "")
                        Else
                            command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text)
                        End If

                        command.Parameters.AddWithValue("@CustCode", "")
                        command.Parameters.AddWithValue("@Contact", txtCustContact.Text)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                        command.Parameters.AddWithValue("@CustAddress1", txtCustAddress.Text)
                        command.Parameters.AddWithValue("@CustAddBlock", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddNos", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddFloor", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddUnit", DBNull.Value)
                        command.Parameters.AddWithValue("@CustAddBuilding", txtCustBuilding.Text)
                        command.Parameters.AddWithValue("@CustAddStreet", txtCustStreet.Text)
                        command.Parameters.AddWithValue("@CustAddPostal", txtCustPostal.Text)

                        command.Parameters.AddWithValue("@CustAddCity", txtCustCity.Text)

                        command.Parameters.AddWithValue("@CustAddState", txtCustState.Text)

                        command.Parameters.AddWithValue("@CustAddCountry", txtCustCountry.Text)

                        command.Parameters.AddWithValue("@CustTelephone", txtCustTelephone.Text)
                        command.Parameters.AddWithValue("@CustFax", txtCustFax.Text)
                        command.Parameters.AddWithValue("@ServiceBy", txtServiceBy.Text)
                        'If txtEditSchDate.Text = txtScheduleDate.Text Then

                        'Else
                        '    If txtScheduleDate.Text = "" Then
                        '    Else
                        '        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                        '    End If

                        'End If

                        If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
                            command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                        Else
                            command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                        End If


                        'If txtActSvcDate.Text = "" Then
                        '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                        'Else
                        '    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                        'End If
                        If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) Then
                            command.Parameters.AddWithValue("@TimeIn", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@TimeIn", Convert.ToDateTime(txtActSvcTimeFrom.Text).ToString("HH:mm"))
                        End If
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) Then
                            command.Parameters.AddWithValue("@TimeOut", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@TimeOut", Convert.ToDateTime(txtActSvcTimeTo.Text).ToString("HH:mm"))

                        End If
                        command.Parameters.AddWithValue("@Notes", txtDescription.Text)

                        If String.IsNullOrEmpty(txtServiceTime.Text) = False Then
                            Dim d As Double = 0
                            If Double.TryParse(txtServiceTime.Text, d) Then
                                command.Parameters.AddWithValue("@Duration", d)
                            Else
                                command.Parameters.AddWithValue("@Duration", DBNull.Value)
                            End If
                        Else

                            command.Parameters.AddWithValue("@Duration", DBNull.Value)
                        End If
                        'command.Parameters.AddWithValue("@BillYN", "N")

                        If String.IsNullOrEmpty(txtAmtBill.Text) Then
                            command.Parameters.AddWithValue("@BillAmount", 0)
                        Else
                            command.Parameters.AddWithValue("@BillAmount", txtAmtBill.Text)
                        End If

                        command.Parameters.AddWithValue("@SerialNo", DBNull.Value)

                        command.Parameters.AddWithValue("@ManualYN", DBNull.Value)

                        command.Parameters.AddWithValue("@SignatureYN", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceTime", 0)
                        command.Parameters.AddWithValue("@ProgTime", 0)
                        command.Parameters.AddWithValue("@ContactTime", 0)

                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@MainJobOrder", DBNull.Value)
                        If chkUrgent.Checked = True Then
                            command.Parameters.AddWithValue("@chkurgent", 1)
                        Else
                            command.Parameters.AddWithValue("@chkurgent", 0)
                        End If

                        command.Parameters.AddWithValue("@ChkOnsite", 0)

                        If String.IsNullOrEmpty(txtAllocatedTime.Text) Then
                            command.Parameters.AddWithValue("@AllocatedSvcTime", 0)
                        Else
                            command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocatedTime.Text)
                        End If
                        command.Parameters.AddWithValue("@CustomerSign", "")
                        command.Parameters.AddWithValue("@ServiceBySign", "")
                        command.Parameters.AddWithValue("@InChargeSign", "")
                        command.Parameters.AddWithValue("@CustomerSignName", "")
                        command.Parameters.AddWithValue("@ServiceBySignName", "")
                        command.Parameters.AddWithValue("@InChargeSignName", "")
                        command.Parameters.AddWithValue("@CustomerSignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceBySignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@InChargeSignDate", DBNull.Value)
                        command.Parameters.AddWithValue("@TabletSource", "")
                        command.Parameters.AddWithValue("@ApprStatus", "")
                        command.Parameters.AddWithValue("@ApproveBy", "")
                        command.Parameters.AddWithValue("@ApproveDt", DBNull.Value)
                        command.Parameters.AddWithValue("@SubmitStatus", "")
                        command.Parameters.AddWithValue("@Filling", 0)
                        command.Parameters.AddWithValue("@Fax", "")
                        command.Parameters.AddWithValue("@FaxnReturn", 0)
                        command.Parameters.AddWithValue("@ApproveStaff", "")
                        command.Parameters.AddWithValue("@WebCode", 0)
                        command.Parameters.AddWithValue("@MobileCode", 0)
                        command.Parameters.AddWithValue("@TabletID", "")
                        command.Parameters.AddWithValue("@PhaseNo", "")
                        If String.IsNullOrEmpty(txtScheduleDate.Text) Then
                            command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
                            command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
                        ElseIf txtScheduleTimeIn.Text = "__:__" Then
                            command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtScheduleTimeIn.Text).ToString("HH:mm"))

                        End If
                        command.Parameters.AddWithValue("@UploadDate", DBNull.Value)
                        If ddlScheduleType.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@ScheduleType", "")
                        Else
                            command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.Text)
                        End If
                        command.Parameters.AddWithValue("@BranchCode", DBNull.Value)
                        command.Parameters.AddWithValue("@Settle", txtPaymentType.Text)
                        command.Parameters.AddWithValue("@BillNo", txtInvoiceNo.Text)
                        If String.IsNullOrEmpty(txtInvoicedAmt.Text) Then
                            command.Parameters.AddWithValue("@BilledAmt", 0)
                        Else
                            command.Parameters.AddWithValue("@BilledAmt", txtInvoicedAmt.Text)
                        End If

                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                        command.Parameters.AddWithValue("@AddBlock", "")
                        command.Parameters.AddWithValue("@AddNos", "")
                        command.Parameters.AddWithValue("@AddFloor", "")
                        command.Parameters.AddWithValue("@AddUnit", "")
                        command.Parameters.AddWithValue("@Address1", txtAddress.Text)
                        command.Parameters.AddWithValue("@AddBuilding", txtBuilding.Text)
                        command.Parameters.AddWithValue("@AddStreet", txtStreet.Text)
                        If ddlState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddState", "")
                        Else
                            command.Parameters.AddWithValue("@AddState", ddlState.Text)
                        End If

                        If ddlCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddCity", "")
                        Else
                            command.Parameters.AddWithValue("@AddCity", ddlCity.Text)
                        End If
                        If ddlCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@AddCountry", "")
                        Else
                            command.Parameters.AddWithValue("@AddCountry", ddlCountry.Text)
                        End If
                        command.Parameters.AddWithValue("@AddPostal", txtPostal.Text)
                        command.Parameters.AddWithValue("@ContactPersonID", txtSvcCP1Contact.Text)
                        command.Parameters.AddWithValue("@ContractDetSQLID", 0)
                        command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)

                        command.Parameters.AddWithValue("@TeamID", txtTeam.Text)
                        command.Parameters.AddWithValue("@VehNo", txtVehNo.Text)
                        command.Parameters.AddWithValue("@CSt", "")
                        command.Parameters.AddWithValue("@Reason", txtBillingDescription.Text)
                        command.Parameters.AddWithValue("@FS", "")
                        command.Parameters.AddWithValue("@Comments", txtInstruction.Text)
                        command.Parameters.AddWithValue("@CreateDeviceID", "")
                        command.Parameters.AddWithValue("@CreateSource", "")
                        command.Parameters.AddWithValue("@FlowFrom", "")
                        command.Parameters.AddWithValue("@FlowTo", "")
                        command.Parameters.AddWithValue("@EditSource", "")
                        command.Parameters.AddWithValue("@DeleteStatus", "")
                        command.Parameters.AddWithValue("@LastEditDevice", "")

                        If String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                            command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
                        ElseIf txtScheduleTimeOut.Text = "__:__" Then
                            command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtScheduleTimeOut.Text).ToString("HH:mm"))

                        End If
                        If chkPayment.Checked = True Then
                            command.Parameters.AddWithValue("@CollectPayment", 1)

                        Else
                            command.Parameters.AddWithValue("@CollectPayment", 0)

                        End If
                        command.Parameters.AddWithValue("@InChargeID", txtIncharge.Text)
                        If ddlLocateGrp.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@LocateGrp", "")
                        Else
                            command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.Text)
                        End If

                        command.Parameters.AddWithValue("@WebCreateDeviceID", "")
                        command.Parameters.AddWithValue("@WebCreateSource", "")
                        command.Parameters.AddWithValue("@WebFlowFrom", "")
                        command.Parameters.AddWithValue("@WebFlowTo", "")
                        command.Parameters.AddWithValue("@WebEditSource", "")
                        command.Parameters.AddWithValue("@WebDeleteStatus", "")
                        command.Parameters.AddWithValue("@WebLastEditDevice", "")
                        command.Parameters.AddWithValue("@Email", txtSvcCP1Email.Text)
                        command.Parameters.AddWithValue("@Seq", txtSequence.Text)
                        command.Parameters.AddWithValue("@ServiceType", "")
                        command.Parameters.AddWithValue("@ContactPersonMobile", txtSvcCP1Mobile.Text)
                        command.Parameters.AddWithValue("@Scheduler", txtScheduler.Text)
                        command.Parameters.AddWithValue("@OurRef", txtOurRef.Text)
                        command.Parameters.AddWithValue("@YourRef", txtYourRef.Text)

                        'If String.IsNullOrEmpty(txtCollectAmt.Text) Then
                        '    command.Parameters.AddWithValue("@CollectAmt", 0)
                        'Else
                        '    command.Parameters.AddWithValue("@CollectAmt", txtCollectAmt.Text)
                        'End If

                        If String.IsNullOrEmpty(txtCollectAmt.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@AmtToCollect", 0.0)
                        Else
                            command.Parameters.AddWithValue("@AmtToCollect", txtCollectAmt.Text)
                        End If

                        If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@CollectAmt", 0)
                        Else
                            command.Parameters.AddWithValue("@CollectAmt", txtAmountRecvd.Text)
                        End If

                        command.Parameters.AddWithValue("@CustTelephone2", txtCustTel2.Text)
                        command.Parameters.AddWithValue("@CustMobile", txtCustMobile.Text)
                        command.Parameters.AddWithValue("@CustomerSignDateTime", DBNull.Value)
                        command.Parameters.AddWithValue("@ServiceBySignDateTime", DBNull.Value)
                        command.Parameters.AddWithValue("@Remarks", txtRemarks.Text)
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command.Parameters.AddWithValue("@TabletDownloaded", 0)
                        command.Parameters.AddWithValue("@SubmitCount", 0)
                        command.Parameters.AddWithValue("@EmailSent", 0)
                        command.Parameters.AddWithValue("@EmailSentDate", DBNull.Value)
                        command.Parameters.AddWithValue("@EmailSentStatus", "")
                        command.Parameters.AddWithValue("@RefNo", txtRefNo.Text)
                        command.Parameters.AddWithValue("@TargetID", "")
                        'command.Parameters.AddWithValue("@LockST", "")
                        command.Parameters.AddWithValue("@EmailSendFail", 0)
                        command.Parameters.AddWithValue("@PoNo", txtPoNo.Text)
                        If ddlCompanyGrp.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@CompanyGroup", "")
                        Else
                            command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                        End If
                        command.Parameters.AddWithValue("@IsChangeServStaff", 0)

                        command.Parameters.AddWithValue("@AccountID", txtAccountID.Text)
                        command.Parameters.AddWithValue("@LocationID", txtLocationID.Text)
                        command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text)
                        command.Parameters.AddWithValue("@Contact1Position", txtSvcCP1Position.Text)
                        command.Parameters.AddWithValue("@Contact1Tel", txtSvcCP1Telephone.Text)
                        command.Parameters.AddWithValue("@Contact1Tel2", txtSvcCP1Telephone2.Text)
                        command.Parameters.AddWithValue("@ContactPerson2", txtSvcCP2Contact.Text)
                        command.Parameters.AddWithValue("@Contact2Position", txtSvcCP2Position.Text)
                        command.Parameters.AddWithValue("@Contact2Tel", txtSvcCP2Telephone.Text)
                        command.Parameters.AddWithValue("@Contact2Fax", txtSvcCP2Fax.Text)
                        command.Parameters.AddWithValue("@Contact2Tel2", txtSvcCP2Tel2.Text)
                        command.Parameters.AddWithValue("@Contact2Mobile", txtSvcCP2Mobile.Text)
                        command.Parameters.AddWithValue("@Contact2Email", txtSvcCP2Email.Text)
                        command.Parameters.AddWithValue("@ServiceRating", txtServiceRating.Text)
                        If String.IsNullOrEmpty(txtAmountRecvd.Text) Then
                            command.Parameters.AddWithValue("@AmountReceived", 0)
                        Else
                            command.Parameters.AddWithValue("@AmountReceived", txtAmountRecvd.Text)
                        End If
                        command.Parameters.AddWithValue("@Description", txtServiceDescription.Text)
                        command.Parameters.AddWithValue("@Contact1Fax", txtSvcCP1Fax.Text)

                        command.Parameters.AddWithValue("@OffBuilding", txtOffBuilding.Text)
                        command.Parameters.AddWithValue("@OffStreet", txtOffStreet.Text)
                        command.Parameters.AddWithValue("@OffAddress", txtOffAddress1.Text)
                        command.Parameters.AddWithValue("@OffPostal", txtOffPostal.Text)
                        If ddlOffState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffState", "")
                        Else
                            command.Parameters.AddWithValue("@OffState", ddlOffState.Text)
                        End If

                        If ddlOffCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffCity", "")
                        Else
                            command.Parameters.AddWithValue("@OffCity", ddlOffCity.Text)
                        End If
                        If ddlOffCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@OffCountry", "")
                        Else
                            command.Parameters.AddWithValue("@OffCountry", ddlOffCountry.Text)
                        End If
                        'command.Parameters.AddWithValue("@OffContact1", txtOffContactPerson.Text)
                        'command.Parameters.AddWithValue("@OffCont1Position", txtOffPosition.Text)
                        'command.Parameters.AddWithValue("@OffCont1Tel", txtOffContactNo.Text)
                        'command.Parameters.AddWithValue("@OffCont1Tel2", txtOffContact2.Text)
                        'command.Parameters.AddWithValue("@OffCont1Mobile", txtOffMobile.Text)
                        'command.Parameters.AddWithValue("@OffCont1Fax", txtOffFax.Text)
                        'command.Parameters.AddWithValue("@OffCont1Email", txtOffEmail.Text)
                        'command.Parameters.AddWithValue("@OffContact2", txtOffCont1Name.Text)
                        'command.Parameters.AddWithValue("@OffCont2Position", txtOffCont1Position.Text)
                        'command.Parameters.AddWithValue("@OffCont2Tel", txtOffCont1Tel.Text)
                        'command.Parameters.AddWithValue("@OffCont2Tel2", txtOffCont1Tel2.Text)
                        'command.Parameters.AddWithValue("@OffCont2Mobile", txtOffCont1Mobile.Text)
                        'command.Parameters.AddWithValue("@OffCont2Fax", txtOffCont1Fax.Text)
                        'command.Parameters.AddWithValue("@OffCont2Email", txtOffCont1Email.Text)
                        If chkOffAddr.Checked = True Then
                            command.Parameters.AddWithValue("@SameBillingAddress", 1)

                        Else
                            command.Parameters.AddWithValue("@SameBillingAddress", 0)

                        End If
                        command.Parameters.AddWithValue("@BillingName", txtBillingName.Text)
                        command.Parameters.AddWithValue("@BillAddress", txtBillAddress.Text)
                        command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                        command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                        command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                        If ddlBillState.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillState", "")
                        Else
                            command.Parameters.AddWithValue("@BillState", ddlBillState.Text)
                        End If
                        If ddlBillCity.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillCity", "")
                        Else
                            command.Parameters.AddWithValue("@BillCity", ddlBillCity.Text)
                        End If
                        If ddlBillCountry.Text = txtDDLText.Text Then
                            command.Parameters.AddWithValue("@BillCountry", "")
                        Else
                            command.Parameters.AddWithValue("@BillCountry", ddlBillCountry.Text)
                        End If
                        command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text)

                        command.Parameters.AddWithValue("@OtherEmail", txtOtherEmail.Text)

                        'command.Parameters.AddWithValue("@BillContact1", txtBillCP1Contact.Text)
                        'command.Parameters.AddWithValue("@BillCont1Position", txtBillCP1Position.Text)
                        'command.Parameters.AddWithValue("@BillCont1Tel", txtBillCP1Tel.Text)
                        'command.Parameters.AddWithValue("@BillCont1Tel2", txtBillCP1Tel2.Text)
                        'command.Parameters.AddWithValue("@BillCont1Mobile", txtBillCP1Mobile.Text)
                        'command.Parameters.AddWithValue("@BillCont1Fax", txtBillCP1Fax.Text)
                        'command.Parameters.AddWithValue("@BillCont1Email", txtBillCP1Email.Text)
                        'command.Parameters.AddWithValue("@BillContact2", txtBillCP2Contact.Text)
                        'command.Parameters.AddWithValue("@BillCont2Position", txtBillCP2Position.Text)
                        'command.Parameters.AddWithValue("@BillCont2Tel", txtBillCP2Tel.Text)
                        'command.Parameters.AddWithValue("@BillCont2Tel2", txtBillCP2Tel2.Text)
                        'command.Parameters.AddWithValue("@BillCont2Mobile", txtBillCP2Mobile.Text)
                        'command.Parameters.AddWithValue("@BillCont2Fax", txtBillCP2Fax.Text)
                        'command.Parameters.AddWithValue("@BillCont2Email", txtBillCP2Email.Text)

                    End If
                    If chkReqCustSign.Checked = True Then
                        command.Parameters.AddWithValue("@RequireClientSignature", 1)
                    Else
                        command.Parameters.AddWithValue("@RequireClientSignature", 0)
                    End If

                    command.Connection = conn

                    command.ExecuteNonQuery()
                    '  UpdateContractActSvcDate(conn)


                    '''''''''''''''''''''''''''''''
                    'If String.IsNullOrEmpty(txtSpecificLocation.Text) = False Then
                    Dim commandSpecificLocation As MySqlCommand = New MySqlCommand
                    commandSpecificLocation.CommandType = CommandType.Text

                    Dim qrySpecificLocation As String = "Update tblservicerecord2 set SpecificLocationName = @SpecificLocation, ReportServiceStart=@ReportServiceStart, ReportServiceEnd =@ReportServiceEnd, EndServiceDate =@EndServiceDate, WorkOrderNo=@WorkOrderNo where RecordNo =@RecordNo"


                    commandSpecificLocation.CommandText = qrySpecificLocation
                    commandSpecificLocation.Parameters.Clear()

                    commandSpecificLocation.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@AccountID", txtAccountID.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@LocationID", txtLocationID.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    'commandSpecificLocation.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    commandSpecificLocation.Parameters.AddWithValue("@SpecificLocation", txtSpecificLocation.Text.ToUpper)

                    Dim lReportServiceStart As String
                    Dim lReportServiceEnd As String
                    Dim lActServiceEnd As String

                    If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                        lReportServiceStart = txtReportServiceStart.Text & " " & txtReportServiceStartTime.Text
                        commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", Convert.ToDateTime(lReportServiceStart).ToString("yyyy-MM-dd HH:mm"))
                    Else
                        If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                            lReportServiceStart = txtActSvcDate.Text & " " & txtActSvcTimeFrom.Text
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", Convert.ToDateTime(lReportServiceStart).ToString("yyyy-MM-dd HH:mm"))
                        Else
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", DBNull.Value)
                        End If
                    End If

                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        lReportServiceEnd = txtReportServiceEnd.Text & " " & txtReportServiceEndTime.Text
                        commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", Convert.ToDateTime(lReportServiceEnd).ToString("yyyy-MM-dd HH:mm"))
                    Else
                        If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                            lReportServiceEnd = txtActSvcDate.Text & " " & txtActSvcTimeTo.Text
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", Convert.ToDateTime(lReportServiceEnd).ToString("yyyy-MM-dd HH:mm"))
                        Else
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", DBNull.Value)
                        End If
                    End If

                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        lActServiceEnd = txtActSvcEndDate.Text
                        commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", Convert.ToDateTime(txtActSvcEndDate.Text).ToString("yyyy-MM-dd"))
                    Else
                        'If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                        '    lActServiceEnd = txtActSvcDate.Text
                        '    commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", Convert.ToDateTime(lActServiceEnd).ToString("yyyy-MM-dd"))
                        'Else
                        commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", DBNull.Value)
                        'End If
                    End If

                    commandSpecificLocation.Parameters.AddWithValue("@WorkOrderNo", txtWorkOrderNo.Text.ToUpper)
                    commandSpecificLocation.Connection = conn

                    commandSpecificLocation.ExecuteNonQuery()
                    commandSpecificLocation.Dispose()
                    'End If

                    '''''''''''''''''''''''''''''''
                    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                    lblAlert.Text = ""
                    txtEditSchDate.Text = ""

                    UpdateServiceTechnician(conn, txtServiceBy.Text)

                    If Month(Convert.ToDateTime(txtOldScheduleDate.Text)) <> Month(Convert.ToDateTime(txtScheduleDate.Text)) Then

                        InsertSchDateChange(conn)

                        'Dim mailsub As String = ""
                        'Dim mailbody As String = ""
                        'Dim toemail As String = ""

                        'mailsub += "SCHEDULED DATE CHANGE NOTIFICATION - " + txtSvcRecord.Text
                        ''mail body 
                        'mailbody += "SCHEDULED DATE CHANGE <br/>"
                        'mailbody += "----------------------------------------- <br/>"
                        'mailbody += "RecordNo : " + txtSvcRecord.Text + "<br/>"
                        'If String.IsNullOrEmpty(txtOldScheduleTimeIn.Text) And String.IsNullOrEmpty(txtOldScheduleTimeOut.Text) Then
                        '    mailbody += "Previous Scheduled Date : " + txtOldScheduleDate.Text + "<br/>"
                        'Else
                        '    mailbody += "Previous Scheduled Date : " + txtOldScheduleDate.Text + " &emsp;&emsp; Time : " + txtOldScheduleTimeIn.Text + " to " + txtOldScheduleTimeOut.Text + "<br/>"
                        'End If

                        'If String.IsNullOrEmpty(txtScheduleTimeIn.Text) And String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                        '    mailbody += "New ScheduledDate : " + txtScheduleDate.Text + "<br/>"
                        'Else
                        '    mailbody += "New ScheduledDate : " + txtScheduleDate.Text + " &emsp;&emsp; Time : " + txtScheduleTimeIn.Text + " to " + txtScheduleTimeOut.Text + "<br/>"
                        'End If

                        'mailbody += "Reason for Reschedule : " + txtRemarks.Text + "<br/>"
                        'mailbody += "Location ID : " + txtLocationID.Text + "<br/>"
                        'mailbody += "Name : " + txtServiceName.Text + "<br/>"
                        'mailbody += "Service Address : " + txtAddress.Text & ", " & txtPostal.Text + "<br/>"
                        'mailbody += "Service Description : " + txtDescription.Text + "<br/>"
                        'mailbody += "Action By : " + txtCreatedBy.Text + "<br/>"

                        'toemail = getNotificationEmail(conn)

                        ''   mailbody += "Send Notifications To : " + toemail + "<br/>"

                        'SendNotificationEmail(conn, toemail, mailbody, mailsub)

                    End If

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "EDIT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)
                End If
                'End If

                conn.Close()

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnSave_Click EDIT", ex.Message.ToString, txtSvcRecord.Text)
                'ButtonPressed = "N"
            End Try
            EnableControls()

            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black
            btnQuit.Enabled = True
            btnQuit.ForeColor = System.Drawing.Color.Black
            btnCopy.Enabled = True
            btnCopy.ForeColor = System.Drawing.Color.Black
            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black
            btnPrint.Enabled = True
            btnPrint.ForeColor = System.Drawing.Color.Black
            btnUpdate.Enabled = True
            btnUpdate.ForeColor = System.Drawing.Color.Black
            btnStatus.Enabled = True
            btnStatus.ForeColor = System.Drawing.Color.Black
            btnTransactions.Enabled = True
            btnTransactions.ForeColor = System.Drawing.Color.Black

            btnReCalculate.Enabled = True
            btnReCalculate.ForeColor = System.Drawing.Color.Black


            'btnSvcAdd.Enabled = True
            'btnSvcCancel.Enabled = False
            'btnSvcEdit.Enabled = False
            'btnSvcSave.Enabled = False
            'btnSvcDelete.Enabled = False
            'btnClientImport.Enabled = True

            'btnSvcAdd.ForeColor = System.Drawing.Color.Black
            'btnSvcCancel.ForeColor = System.Drawing.Color.Gray
            'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            'btnSvcSave.ForeColor = System.Drawing.Color.Gray
            'btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            'btnClientImport.ForeColor = System.Drawing.Color.Black

            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            AccessControl()
            'End If

        End If

        '.01.02.17

        'If String.IsNullOrEmpty(lblContract1.Text) = True Then
        '    SqlDataSource1.DataBind()
        'Else
        '    txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno FROM tblservicerecord WHERE ContractNo = '" & lblContract1.Text & "' order by servicedate"
        '    SqlDataSource1.SelectCommand = txt.Text
        '    SqlDataSource1.DataBind()

        'End If

        txtModal.Text = ""
        txtMode.Text = ""

        '.01.02.17
        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()

        If txtCopy.Text = "Yes" Then

            For i As Int16 = 0 To GridView1.Rows.Count - 1
                Dim rcno As String = TryCast(GridView1.Rows(i).FindControl("Label1"), Label).Text
                If rcno = txtRcno.Text Then
                    GridView1.SelectedIndex = i
                    Exit For

                End If
            Next
        End If


        'btnUpdateWorkLoad_Click(sender, e)

        UpdateWorkLoad()



        btnQuickSearch.Enabled = True
        btnResSearch.Enabled = True

        btnEditSchType.Visible = True
        btnEditSchDate.Visible = True
        btnEditTeam.Visible = True
        btnEditServInst.Visible = True
        btnEditRemarks.Visible = True
        btnEditClientSign.Visible = True
        btnEditCollectedAmount.Visible = True
        btnEditOurRef.Visible = True
        txtContractNo.ReadOnly = True
        txtContractNo.Enabled = False
        btnConfirmZeroAmountToBillNo.Enabled = True

        btnEditManualContractNo.Visible = False
        btnEditPONo.Visible = False
        btnEditWorkOrderNo.Visible = False

        'InsertNewLog()

        'ButtonPressed = "N"
    End Sub


    Private Sub InsertNewLog()

        Try

            ' Start: Insert NEW Log table

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = "SELECT EnableLogforService FROM tblservicerecordmastersetup where rcno=1"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'If Convert.ToBoolean(dt.Rows(0)("EnableLogforContract")) = False Then
                If dt.Rows(0)("EnableLogforService").ToString = "1" Then


                    Dim connLog As MySqlConnection = New MySqlConnection()

                    connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
                    If connLog.State = ConnectionState.Open Then
                        connLog.Close()
                        connLog.Dispose()
                    End If
                    connLog.Open()

                    Dim commandInsertLog As MySqlCommand = New MySqlCommand
                    commandInsertLog.CommandType = CommandType.StoredProcedure
                    commandInsertLog.CommandText = "InsertLog_sitadatadb"

                    commandInsertLog.Parameters.Clear()

                    commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Service")
                    commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtSvcRecord.Text.Trim)

                    commandInsertLog.Connection = connLog
                    commandInsertLog.ExecuteScalar()

                    connLog.Close()
                    commandInsertLog.Dispose()
                End If
            End If

            ' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("InsertLog", ex.Message.ToString, txtSvcRecord.Text + " " + txtSvcRecord.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub InsertNewLogDetail()

        Try

            ' Start: Insert NEW Log table

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = "SELECT EnableLogforService FROM tblservicerecordmastersetup where rcno=1"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'If Convert.ToBoolean(dt.Rows(0)("EnableLogforContract")) = False Then
                If dt.Rows(0)("EnableLogforService").ToString = "1" Then

                    Dim connLog As MySqlConnection = New MySqlConnection()

                    connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
                    If connLog.State = ConnectionState.Open Then
                        connLog.Close()
                        connLog.Dispose()
                    End If
                    connLog.Open()

                    Dim commandInsertLog As MySqlCommand = New MySqlCommand
                    commandInsertLog.CommandType = CommandType.StoredProcedure
                    commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

                    commandInsertLog.Parameters.Clear()

                    commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Service")
                    commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtSvcRecord.Text.Trim)
                    commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", txtSvcRcNo.Text.Trim)

                    commandInsertLog.Connection = connLog
                    commandInsertLog.ExecuteScalar()

                    connLog.Close()
                    commandInsertLog.Dispose()
                End If
            End If

            ' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            'InsertIntoTblWebEventLog("COMPANY - " + Session("UserID"), "FUNCTION InsertLogDetail", ex.Message.ToString, txtSvcRecord.Text)
            InsertIntoTblWebEventLog("InsertLogDetail", ex.Message.ToString, txtSvcRecord.Text + " " + txtSvcRecord.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub GenerateRecordNo()
        Dim num1 As String
        Dim month As Integer
        Dim month1 As String

        Dim dtdate As Date
        If String.IsNullOrEmpty(txtScheduleDate.Text) Then

            num1 = Date.Now.Year.ToString
            num1 = "SERV" + num1
            month = Convert.ToInt32(DateTime.Now.ToString("MM"))
            month1 = DateTime.Now.ToString("MM")
        Else

            If Date.TryParseExact(txtScheduleDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dtdate) Then
                num1 = "SERV" + dtdate.ToString("yyyy")
                month = Convert.ToInt32(dtdate.ToString("MM"))
                month1 = dtdate.ToString("MM")
            End If

        End If

        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tbldoccontrol where Prefix= '" + num1 + "';"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            Dim field As String
            Dim lastnumber As String
            If dt.Rows.Count > 0 Then
                Dim num As Integer

                Select Case month
                    Case "01"
                        num = Convert.ToInt32(dt.Rows(0)("Period01"))
                        field = "Period01"
                        lastnumber = num
                    Case "02"
                        num = Convert.ToInt32(dt.Rows(0)("Period02"))
                        field = "Period02"
                        lastnumber = num
                    Case "03"
                        num = Convert.ToInt32(dt.Rows(0)("Period03"))
                        field = "Period03"
                        lastnumber = num
                    Case "04"
                        num = Convert.ToInt32(dt.Rows(0)("Period04"))
                        field = "Period04"
                        lastnumber = num
                    Case "05"
                        num = Convert.ToInt32(dt.Rows(0)("Period05"))
                        field = "Period05"
                        lastnumber = num
                    Case "06"
                        num = Convert.ToInt32(dt.Rows(0)("Period06"))
                        field = "Period06"
                        lastnumber = num
                    Case "07"
                        num = Convert.ToInt32(dt.Rows(0)("Period07"))
                        field = "Period07"
                        lastnumber = num
                    Case "08"
                        num = Convert.ToInt32(dt.Rows(0)("Period08"))
                        field = "Period08"
                        lastnumber = num
                    Case "09"
                        num = Convert.ToInt32(dt.Rows(0)("Period09"))
                        field = "Period09"
                        lastnumber = num
                    Case "10"
                        num = Convert.ToInt32(dt.Rows(0)("Period10"))
                        field = "Period10"
                        lastnumber = num
                    Case "11"
                        num = Convert.ToInt32(dt.Rows(0)("Period11"))
                        field = "Period11"
                        lastnumber = num
                    Case "12"
                        num = Convert.ToInt32(dt.Rows(0)("Period12"))
                        field = "Period12"
                        lastnumber = num
                End Select
                Dim length As String = "D" + dt.Rows(0)("Width").ToString


                ' txtSvcRecord.Text = dt.Rows(0)("Prefix") + DateTime.Now.ToString("MM") + dt.Rows(0)("Separator").ToString + (num + 1).ToString(length)
                '  txtSvcRecord.Text = dt.Rows(0)("Prefix") + DateTime.Now.ToString("MM") + "-" + (num + 1).ToString(length)

                'txtSvcRecord.Text = dt.Rows(0)("Prefix") + month1 + "-" + (num + 1).ToString(length)

                txtSvcRecord.Text = txtPrefixDocNoService.Text + dt.Rows(0)("Prefix") + month1 + "-" + (num + 1).ToString(length)
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'Increment Autonumber
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                Dim lastnum As Integer = Convert.ToDouble(lastnumber + 1)

                Dim cmd1 As MySqlCommand = New MySqlCommand("update tbldoccontrol set " & field & " = " & lastnum & " where Prefix = '" + num1 + "';", conn)
                cmd1.ExecuteNonQuery()

                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GenerateRecordNo", ex.Message.ToString, num1)
        End Try
    End Sub

    Private Sub UpdateContractActSvcDate(conn As MySqlConnection)
        'Update tblContract

        Try
            Dim commandSvc As MySqlCommand = New MySqlCommand

            commandSvc.CommandType = CommandType.Text

            commandSvc.CommandText = "SELECT RECORDNO,status,servicedate FROM tblservicerecord where contractno=@contractno and status = 'P'" 'and recordno<>@recordno"
            commandSvc.Parameters.AddWithValue("@contractno", txtContractNo.Text)
            commandSvc.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
            commandSvc.Connection = conn

            Dim drSvc As MySqlDataReader = commandSvc.ExecuteReader()
            Dim dtSvc As New DataTable
            dtSvc.Load(drSvc)

            If dtSvc.Rows.Count = 0 Then

            ElseIf dtSvc.Rows.Count = 1 Then

                Dim commandContract As MySqlCommand = New MySqlCommand

                commandContract.CommandType = CommandType.Text

                commandContract.CommandText = "Update tblContract set actualservicestartdate=@ServiceDate where contractno=@contractno "
                commandContract.Parameters.AddWithValue("@contractno", txtContractNo.Text)
                If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
                    commandContract.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
                Else
                    commandContract.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                End If
                commandContract.Connection = conn

                commandContract.ExecuteNonQuery()

            End If

            commandSvc.Dispose()
            dtSvc.Dispose()
            drSvc.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdateContractActSvcDate", ex.Message.ToString, txtSvcRecord.Text + " " + txtContractNo.Text)
        End Try
        'End - Update tblContract

    End Sub


    Protected Sub ddlAccountType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlAccountType.SelectedIndexChanged
        Try
            txtAccountID.Text = ""
            txtCustName.Text = ""

            txtOffAddress1.Text = ""
            txtOffStreet.Text = ""
            txtOffBuilding.Text = ""
            ddlOffCity.SelectedIndex = 0
            ddlOffCountry.SelectedIndex = 0
            ddlOffState.SelectedIndex = 0
            txtOffPostal.Text = ""

            'txtOffContactPerson.Text = ""
            'txtOffPosition.Text = ""
            'txtOffContactNo.Text = ""
            'txtOffFax.Text = ""
            'txtOffContact2.Text = ""
            'txtOffEmail.Text = ""
            'txtOffMobile.Text = ""

            'txtOffCont1Name.Text = ""
            'txtOffCont1Position.Text = ""
            'txtOffCont1Tel.Text = ""
            'txtOffCont1Fax.Text = ""
            'txtOffCont1Tel2.Text = ""
            'txtOffCont1Mobile.Text = ""
            'txtOffCont1Email.Text = ""

            txtBillingName.Text = ""
            txtBillAddress.Text = ""
            txtBillStreet.Text = ""
            txtBillBuilding.Text = ""
            ddlBillCity.SelectedIndex = 0
            ddlBillState.SelectedIndex = 0
            ddlBillCountry.SelectedIndex = 0
            txtBillPostal.Text = ""

            'txtBillCP1Contact.Text = ""
            'txtBillCP1Position.Text = ""
            'txtBillCP1Tel.Text = ""
            'txtBillCP1Fax.Text = ""
            'txtBillCP1Tel2.Text = ""
            'txtBillCP1Mobile.Text = ""
            'txtBillCP1Fax.Text = ""
            'txtBillCP1Email.Text = ""

            'txtBillCP2Contact.Text = ""
            'txtBillCP2Position.Text = ""
            'txtBillCP2Tel.Text = ""
            'txtBillCP2Fax.Text = ""
            'txtBillCP2Tel2.Text = ""
            'txtBillCP2Mobile.Text = ""
            'txtBillCP2Fax.Text = ""
            'txtBillCP2Email.Text = ""

            chkOffAddr.Checked = False
            txtLocationID.Text = ""
            txtServiceName.Text = ""
            txtServiceDescription.Text = ""
            txtAddress.Text = ""
            txtStreet.Text = ""
            txtBuilding.Text = ""
            ddlCity.SelectedIndex = 0
            ddlState.SelectedIndex = 0
            ddlCountry.SelectedIndex = 0
            txtPostal.Text = ""
            ddlLocateGrp.SelectedIndex = 0

            txtSvcCP1Contact.Text = ""
            txtSvcCP1Position.Text = ""
            txtSvcCP1Telephone.Text = ""
            txtSvcCP1Fax.Text = ""
            txtSvcCP1Telephone2.Text = ""
            txtSvcCP1Mobile.Text = ""
            txtSvcCP1Email.Text = ""

            txtSvcCP2Contact.Text = ""
            txtSvcCP2Position.Text = ""
            txtSvcCP2Telephone.Text = ""
            txtSvcCP2Tel2.Text = ""
            txtSvcCP2Fax.Text = ""
            txtSvcCP2Mobile.Text = ""
            txtSvcCP2Email.Text = ""

            txtSvcRcNo.Text = ""
        Catch ex As Exception
            InsertIntoTblWebEventLog("ddlAccountType_SelectedIndexChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub CalculateServiceTime()
        Try
            Dim starttime As DateTime
            Dim endtime As DateTime

            'Dim x As DateTime
            'Dim y As DateTime

            'DateTime.TryParse(txtActSvcTimeFrom.Text, x)
            'DateTime.TryParse(txtActSvcTimeTo.Text, y)

            'txtServiceTime.Text = DateDiff(DateInterval.Minute, x, y).ToString
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                    starttime = Convert.ToDateTime(txtActSvcDate.Text & " " & txtActSvcTimeFrom.Text)
                End If
            End If

            If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then
                    endtime = Convert.ToDateTime(txtActSvcEndDate.Text & " " & txtActSvcTimeTo.Text)
                End If
            End If


            Dim servicetime As TimeSpan
            If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                If String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False Then

                            If String.IsNullOrEmpty(endtime) = False And String.IsNullOrEmpty(starttime) = False Then
                                servicetime = DateTime.Parse(endtime).Subtract(DateTime.Parse(starttime))
                                txtServiceTime.Text = servicetime.TotalMinutes

                                If servicetime.TotalMinutes < 0 Then

                                    servicetime = DateTime.Parse(endtime).AddDays(1).Subtract(DateTime.Parse(starttime))
                                    txtServiceTime.Text = servicetime.TotalMinutes

                                End If
                            Else
                                txtServiceTime.Text = 0
                            End If
                        Else
                            txtServiceTime.Text = 0
                        End If
                    Else
                        txtServiceTime.Text = 0
                    End If
                Else
                    txtServiceTime.Text = 0
                End If
            Else
                txtServiceTime.Text = 0
            End If


            'Dim servicetime As TimeSpan
            'If String.IsNullOrEmpty(txtActSvcTimeTo.Text) = False And String.IsNullOrEmpty(txtActSvcTimeFrom.Text) = False Then
            '    servicetime = DateTime.Parse(txtActSvcTimeTo.Text).Subtract(DateTime.Parse(txtActSvcTimeFrom.Text))
            '    txtServiceTime.Text = servicetime.TotalMinutes

            '    If servicetime.TotalMinutes < 0 Then

            '        servicetime = DateTime.Parse(txtActSvcTimeTo.Text).AddDays(1).Subtract(DateTime.Parse(txtActSvcTimeFrom.Text))
            '        txtServiceTime.Text = servicetime.TotalMinutes

            '    End If
            'Else
            '    txtServiceTime.Text = 0
            'End If

            ''DateTime.TryParse(txtActSvcTimeTo.Text, y).Subtract(DateTime.TryParse(txtActSvcTimeFrom.Text, x))
            ''             totalMinutes = duration.TotalMinutes;
        Catch ex As Exception
            InsertIntoTblWebEventLog("CalculateServiceTime", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        lblMessage.Text = ""
        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return

        End If
        If txtFilling.Text = "1" Then
            lblAlert.Text = "RECORD IS POSTED, CANNOT BE EDITED"
            Return
        End If


        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then

            lblMessage.Text = "ACTION: DELETE RECORD"
            ' MessageBox.Message.Alert(Page, txtRcno.Text, "str")

            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT rcno FROM tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command.CommandText = qry

                    command.Connection = conn

                    command.ExecuteNonQuery()


                    '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

                End If
                conn.Close()


            Catch ex As Exception
                InsertIntoTblWebEventLog("btnDelete_Click", ex.Message.ToString, txtSvcRecord.Text)
            End Try
            EnableControls()

            SqlDataSource1.SelectCommand = txt.Text

            SqlDataSource1.DataBind()

            GridView1.DataBind()
            GridView1.DataSourceID = "SqlDataSource1"
            MakeMeNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        End If

    End Sub

    Protected Sub txtSearchSvc_TextChanged(sender As Object, e As EventArgs) Handles txtSearchSvc.TextChanged
        ' MakeMeNull()

        'Dim qry As String
        'qry = "select * from tblservicerecord where rcno <> 0 "

        'If String.IsNullOrEmpty(txtSearchSvc.Text) = False Then
        '    If chkSearchList.Items(0).Selected Then
        '        qry = qry + " and recordno like '" & txtSearchSvc.Text & "%'"
        '    End If
        '    If chkSearchList.Items(1).Selected Then
        '        qry = qry + " and CustName like '%" + txtSearchSvc.Text + "%'"
        '    End If
        '    If chkSearchList.Items(2).Selected Then
        '        qry = qry + " and accountid like '" + txtSearchSvc.Text + "%'"
        '    End If
        '    If chkSearchList.Items(3).Selected Then
        '        qry = qry + " and ServiceBy like '%" + txtSearchSvc.Text + "%'"
        '    End If
        '    If chkSearchList.Items(4).Selected Then
        '        qry = qry + " and locationid like '" + txtSearchSvc.Text + "%'"
        '    End If
        '    If chkSearchList.Items(5).Selected Then
        '        qry = qry + " and (address1 like '%" + txtSearchSvc.Text + "%'"
        '        qry = qry + " or addbuilding like '%" + txtSearchSvc.Text + "%'"
        '        qry = qry + " or addstreet like '%" + txtSearchSvc.Text + "%')"
        '    End If
        '    If chkSearchList.Items(6).Selected Then
        '        qry = qry + " and ContactPersonID like '%" + txtSearchSvc.Text + "%'"
        '    End If
        '    If chkSearchList.Items(7).Selected Then
        '        qry = qry + " and Contractno like '%" + txtSearchSvc.Text + "%'"
        '    End If


        'End If
        'qry = qry + " order by createdon desc,RECORDNO;"
        'txt.Text = qry
        Dim qry1 As String
        Dim qry As String = ""
        Try
            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency "
            'qry = qry + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null) and "

            qry1 = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, A.Emailsent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo "
            qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1   "


            If String.IsNullOrEmpty(txtSearchSvc.Text) = False Then
                qry = qry + " and (A.recordno like '" & txtSearchSvc.Text & "%'"
                '    qry = qry + " or ServiceDate = '" + Convert.ToDateTime(txtSearchSvc.Text).ToString("yyyy-MM-dd") + "'"
                qry = qry + " or A.ServiceBy like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.accountid like '" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.CustName like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.locationid like '" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.address1 like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.addbuilding like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.addstreet like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.offaddress like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.offbuilding like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.offstreet like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.billaddress like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.billbuilding like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.billstreet like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.billingname like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or A.Contractno like '%" + txtSearchSvc.Text + "%'"
                qry = qry + " or ContactPersonID like '%" + txtSearchSvc.Text + "%')"


            End If
            qry = qry + " order by A.createdon desc,A.RECORDNO;"
            txt.Text = qry1 + qry

            'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
            txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,A.AddStreet,a.AddCountry,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

            txtGrid.Text = txtGrid.Text + qry


            MakeMeNull()
            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()

            GridView1.DataBind()

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()


            'Dim gridcount As Int16 = GridviewCount(conn, qry)

            'conn.Close()
            'conn.Dispose()

            'If gridcount > Convert.ToInt16(txtLimit.Text) Then
            '    lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

            '    mdlPopupMsg.Show()
            'End If

            lblMessage.Text = "SEARCH CRITERIA : " + txtSearchSvc.Text + " <br/>NUMBER OF RECORDS FOUND : " + txtRowCount.Text


        Catch ex As Exception
            InsertIntoTblWebEventLog("txtSearchSvc_TextChanged", ex.Message.ToString, qry)
        End Try

        txtSearchSvc.Text = "Search Here"

        '    GridView1.AllowPaging = True

    End Sub

    Protected Sub btnResSearch_Click(sender As Object, e As EventArgs) Handles btnResSearch.Click
        'MakeMeNull()
        'EnableControls()


        'If String.IsNullOrEmpty(lblContract1.Text) = True Then
        '    txt.Text = "SELECT * FROM tblSERVICERECORD WHERE  status='O' order by recordno limit 100;"
        'Else
        '    txt.Text = "SELECT Status, RecordNo, ServiceDate, ContactType, AccountId, CustName, Contact, LocationId, ServiceName, ServiceBy, Rcno, Notes FROM tblservicerecord WHERE ContractNo = '" & lblContract1.Text & "' order by servicedate"
        'End If


        'SqlDataSource1.SelectCommand = txt.Text
        'SqlDataSource1.DataBind()
        'GridView1.DataBind()

        Dim sysdate As String = Convert.ToString(Session("SysDate"))

        lblMessage.Text = ""
        txtSearch1AccountID.Text = ""
        txtSearch1ClientName.Text = ""
        txtSearch1Incharge.Text = ""
        txtSearch1Status.Text = "O,P,H"
        txtSearch1Svc.Text = ""
        txtSearch1SvcBy.Text = ""
        'txtSearch1SvcDate.Text = ""
        txtSearch1Team.Text = ""
        'txtSearch2SvcDate.Text = ""
        txtSvcAddressSearch.Text = ""
        txtSearch1SvcDate.Text = ""
        txtSearch2SvcDate.Text = ""
        ddlSearchScheduleType.SelectedIndex = 0
        ddlSearchContactType.SelectedIndex = 0
        'txtCalendarDisplay.Text = ""
    End Sub

    Protected Sub btnSearchTeamID_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearchTeamID.Click
        mdlPopUpTeam.TargetControlID = "btnSearchTeamID"
        txtModal.Text = "TeamID"
        mdlPopUpTeam.Show()
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
            lblAlert.Text = ""


            Dim dt As Date
            If String.IsNullOrEmpty(txtSearchSvcDate.Text) = False Then
                If Date.TryParseExact(txtSearchSvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtSearchSvcDate.Text = dt.ToShortDateString

                Else
                    MessageBox.Message.Alert(Page, "Search Service Date is invalid", "str")

                    Return
                    Exit Sub
                    mdlPopUpTeam.Show()

                End If
            End If
        Dim qry As String = ""
        Dim qry1 As String

        Try
            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text

            'command1.CommandText = "UPDATE tblservicerecord SET EmailSent=0 where EmailSent is null or EmailSent = '';"
            'command1.Parameters.Clear()
            ''  command1.Parameters.AddWithValue("@accountid", DBNull.Value.ToString)

            'command1.Connection = conn

            'command1.ExecuteNonQuery()

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency  "
            'qry = qry + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null)"

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno  "
            'qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno where 1=1  "


            'Original

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, C.SvcLock as LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno  "
            'qry = qry + " FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo, tblcontract as B  where a.contractno=b.contractno and 1=1  "

            'Original


            'Quick Search

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno ,  ifnull(left(D.JobStatus,1),'') as JobStatus"
            'qry = qry + "  FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1  "

            'Quick Serch

            qry1 = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, C.SvcLock as LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo "
            qry = qry + " FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1  "

            'txt.Text = txt.Text + "  FROM tblservicerecord as A Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo, tblcontract as B  where a.contractno=b.contractno and A.AccountId = '" & txtSearch1AccountID.Text & "' and  A.ContractNo = '" & Session("contractno") & "' and A.status in ('O','P','H')  order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC "

            '
            If String.IsNullOrEmpty(txtSearchRcno.Text) = False Then
                qry = qry + " and A.Rcno like '%" + txtSearchRcno.Text + "%'"
            End If

            If String.IsNullOrEmpty(txtSearchSvcRecord.Text) = False Then
                '   txtSvcRecord.Text = txtSearchSvcRecord.Text
                qry = qry + " and A.recordno like '%" + txtSearchSvcRecord.Text + "%'"
            End If
            If String.IsNullOrEmpty(txtSearchSvcDate.Text) = False Then
                qry = qry + " and A.ServiceDate = '" + Convert.ToDateTime(txtSearchSvcDate.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtSearchSvcBy.Text) = False Then
                qry = qry + " and A.ServiceBy like '%" + txtSearchSvcBy.Text + "%'"
            End If
            If String.IsNullOrEmpty(ddlSearchIncharge.Text) = False Then
                If ddlSearchIncharge.Text <> txtDDLText.Text Then
                    qry = qry + " and A.InchargeID = '" + ddlSearchIncharge.Text + "'"
                End If
            End If

            If String.IsNullOrEmpty(ddlSearchCompanyGroup.Text) = False Then
                If ddlSearchCompanyGroup.Text <> txtDDLText.Text Then
                    qry = qry + " and A.CompanyGroup = '" + ddlSearchCompanyGroup.Text + "'"
                End If
            End If

          


            If String.IsNullOrEmpty(txtSearchServiceAddress.Text) = False Then
                txtSearchServiceAddress.Text = txtSearchServiceAddress.Text.Replace("'", "\\'")

                qry = qry + " and (A.address1 like '%" + txtSearchServiceAddress.Text + "%'"
                qry = qry + " or A.addbuilding like '%" + txtSearchServiceAddress.Text + "%'"
                qry = qry + " or A.addstreet like '%" + txtSearchServiceAddress.Text + "%'"
                qry = qry + " or A.addpostal like '%" + txtSearchServiceAddress.Text + "%')"
            End If
            If String.IsNullOrEmpty(txtSearchManualReportNo.Text.Trim) = False Then
                qry = qry + " and A.ourref = '" + txtSearchManualReportNo.Text + "'"
            End If
            If String.IsNullOrEmpty(txtSearchManualContractNo.Text.Trim) = False Then
                qry = qry + " and A.yourref = '" + txtSearchManualContractNo.Text + "'"
            End If

            If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
                qry = qry + " and A.pono like '%" + txtSearchPONo.Text + "%'"
            End If


            If ddlSearchBillingFrequency.SelectedIndex > 0 Then
                qry = qry + " and B.BillingFrequency = '" + ddlSearchBillingFrequency.Text + "'"
            End If


            If ddlSearchScheduleType.SelectedIndex > 0 Then
                qry = qry + " and A.ScheduleType = '" + ddlSearchScheduleType.Text + "'"
            End If



            If ddlSearchContactType.SelectedIndex > 0 Then
                qry = qry + " and A.ContactType = '" + ddlSearchContactType.Text + "'"
            End If


            If chkAdhocMapping.Checked Then


                qry = qry + " and A.Status = 'P'"
                qry = qry + " and (A.AccountID IS NULL OR A.AccountID = '')"
            Else
                If String.IsNullOrEmpty(ddlSearchStatus.Text) = False Then
                    If ddlSearchStatus.Text <> txtDDLText.Text Then
                        qry = qry + " and A.Status = '" + ddlSearchStatus.Text + "'"
                    End If
                End If
                If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
                    '   qry = qry + " and AccountID like '" + txtSearchAccountID.Text + "%'"
                    qry = qry + " and A.LocationID like '" + txtSearchAccountID.Text.Trim + "%'"
                End If
                If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
                    qry = qry + " and A.ServiceName like '%" + txtSearchClientName.Text + "%'"
                    '   qry = qry + " or address1 like '%" + txtSearchClientName.Text + "%'"
                    '  qry = qry + " or addbuilding like '%" + txtSearchClientName.Text + "%'"
                    '  qry = qry + " or addstreet like '%" + txtSearchClientName.Text + "%'"
                    '  qry = qry + " or addcity like '%" + txtSearchClientName.Text + "%'"
                    ' qry = qry + " or addcountry like '%" + txtSearchClientName.Text + "%'"
                    ' qry = qry + " or addpostal like '%" + txtSearchClientName.Text + "%')"
                End If
                If String.IsNullOrEmpty(txtSearchContractNo.Text) = False Then
                    qry = qry + " and A.ContractNo like '%" + txtSearchContractNo.Text + "%'"
                End If


            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                'qry = qry + " and A.Location = '" & txtLocation.Text & "'"
                qry = qry & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & Session("SecGroupAuthority") & "')"

            End If
            Dim gridqry As String = qry
            qry = qry + " order by A.ServiceDate ,A.recordno limit " & txtLimit.Text
            txt.Text = qry1 + qry

            'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
            txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,A.AddStreet,a.AddCountry,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

            txtGrid.Text = txtGrid.Text + qry

            MakeMeNull()
            'MessageBox.Message.Alert(Page, qry, "str")
            'Return

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            GridView1.PageIndex = 0
            txtSearchAccountID.Text = ""
            txtSearchClientName.Text = ""
            txtSearchSvcBy.Text = ""
            txtSearchSvcDate.Text = ""
            txtSearchSvcRecord.Text = ""
            ddlSearchIncharge.ClearSelection()
            ddlSearchStatus.ClearSelection()
            chkAdhocMapping.Checked = False
            ddlSearchCompanyGroup.ClearSelection()

            'lblContract.Visible = False
            'lblContract1.Text = ""
            'lblContractStartDate.Visible = False
            'lblContractEndDate.Visible = False
            'lblContractStartDate.Text = ""
            'lblContractEndDate.Text = ""

            btnUpdateWorkLoad_Click(sender, e)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim gridcount As Int16 = GridviewCount(conn, gridqry)

            conn.Close()
            conn.Dispose()

            If gridcount > Convert.ToInt16(txtLimit.Text) Then
                lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

                mdlPopupMsg.Show()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSearch_Click", ex.Message.ToString, qry)
            Dim exstr As String
            exstr = ex.ToString
            lblAlert.Text = exstr
        End Try
    End Sub

    Protected Sub btnPrintReport_Click(sender As Object, e As EventArgs) Handles btnPrintReport.Click
        Try
            '    'btnQuit.Attributes.Add("onClick", "javascript:history.go(-1); return false;")

            '    'Dim SvcRecordNo As String = Convert.ToString(Session("SvcRecordNo"))
            '    'lblRecordNo.Text = SvcRecordNo
            '    'Dim Query As String = Convert.ToString(Session("Query"))
            '    'txtQuery.Text = Query
            '    'Dim SvcRcNo As String = Convert.ToString(Session("SvcRcNo"))
            '    'txtSvcRcNo.Text = SvcRcNo

            '    '    MessageBox.Message.Alert(Page, Convert.ToString(Session("selFormula")), "str")

            '    ' txtServiceRecordNo.Text = Convert.ToString(Session("JobNo"))
            '    '      Dim repPath As String = Server.MapPath("~/24ServiceRecord02.rpt")
            '    Dim repPath As String = Server.MapPath("~/Reports/ServiceReport.rpt")

            '    crReportDocument.Load(repPath)


            '    Dim myConnectionInfo As ConnectionInfo = New ConnectionInfo()

            '    Dim myTables As Tables = crReportDocument.Database.Tables

            '    For Each myTable As CrystalDecisions.CrystalReports.Engine.Table In myTables
            '        Dim myTableLogonInfo As TableLogOnInfo = myTable.LogOnInfo
            '        myConnectionInfo.ServerName = ConfigurationManager.AppSettings("ServerName")
            '        myConnectionInfo.DatabaseName = ConfigurationManager.AppSettings("DatabaseName")
            '        myConnectionInfo.UserID = ConfigurationManager.AppSettings("UserName")
            '        myConnectionInfo.Password = ConfigurationManager.AppSettings("Password")
            '        myTable.ApplyLogOnInfo(myTableLogonInfo)
            '        myTableLogonInfo.ConnectionInfo = myConnectionInfo

            '    Next

            '    CrystalReportViewer1.ReportSource = crReportDocument

            '    CrystalReportViewer1.SelectionFormula = "{tblservicerecord1.Recordno} = '" + txtSvcRecord.Text + "'"
            'CrystalReportViewer1.RefreshReport()

        Catch ex As Exception
            Dim ErrOtLo As String = "C:\temp\SitaPestErrorLogger.txt"

            Using w As StreamWriter = File.AppendText(ErrOtLo)
                w.WriteLine(ex.Message.ToString + vbLf & vbLf)
            End Using

        End Try

        'tb1.ActiveTabIndex = 6

        Session.Add("SvcRecordNo", txtSvcRecord.Text)
        Session.Add("Query", txt.Text)
        Session.Add("SvcRcNo", txtRcno.Text)
        If RadioButtonList1.SelectedIndex = 0 Then
            'Dim selFormula As String
            ''  selFormula = "{tblservicerecord1.Recordno} = '" + txtSvcRecord.Text + "'"

            'selFormula = "{tblservicerecord1.recordno}='SERV201611-006982'"
            'Session.Add("selFormula", selFormula)

            Response.Redirect("RV_ServiceReport.aspx")

            'Server.Transfer("RV_ServiceReport.aspx")
        ElseIf RadioButtonList1.SelectedIndex = 1 Then
            'Dim selFormula As String
            ''    selFormula = "{tblservicerecord1.Recordno} = '" + txtSvcRecord.Text + "'"

            'selFormula = "{tblservicerecord1.recordno}='SERV201611-006982'"
            'Session.Add("selFormula", selFormula)
            Response.Redirect("RV_ServiceReportTechSign.aspx")
            'Server.Transfer("RV_ServiceReportTechSign.aspx")
        End If

    End Sub

    Protected Sub btnEmail_Click(sender As Object, e As EventArgs) Handles btnEmail.Click
        Session.Add("SvcRecordNo", txtSvcRecord.Text)
        Session.Add("Query", txt.Text)
        Session.Add("SvcRcNo", txtRcno.Text)
        Session.Add("SvcDate", txtActSvcDate.Text)
        Session.Add("CustName", txtCustName.Text)
        Session.Add("Email", txtSvcCP1Email.Text)
        Server.Transfer("Email.aspx")
    End Sub

    Protected Sub btnUpdate_Click(sender As Object, e As EventArgs) Handles btnUpdate.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        Try
            If txtRcno.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
                lblAlert.Text = "SELECT RECORD TO UPDATE"
                Return

            End If

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If

            'If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
            '    lblAlert.Text = "PLEASE ENTER ACTUAL START DATE"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Return

            'End If

            'If String.IsNullOrEmpty(txtActSvcEndDate.Text) = True Then

            '    lblAlert.Text = "PLEASE ENTER ACTUAL END DATE"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Return

            'End If


            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                If txtFilling.Text = "0" Then

                    If GridView2.Rows.Count = 0 Then
                        lblAlert.Text = "THE SERVICE RECORD HAS NO SERVICE DETAILS YET .. CANNOT BE UPDATED"
                        Exit Sub
                    End If


                    If ValidationDuringUpdate() = False Then
                        Return
                    End If
                    ''''Lock record from editing
                    ''''''''''''''''''''''''''''''''''
                    Dim command0 As MySqlCommand = New MySqlCommand
                    command0.CommandType = CommandType.Text
                    command0.CommandText = "UPDATE tblservicerecord SET filling=1,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command0.Connection = conn
                    command0.Parameters.Clear()
                    command0.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command0.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command0.ExecuteNonQuery()

                    '''''''''''''''''''''''''''''
                    ''''''''''''''''''''''''''''

                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text
                    command1.CommandText = "UPDATE tblservicerecord SET STATUS='P', LastModifiedBy=@LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command1.Connection = conn
                    command1.Parameters.Clear()
                    command1.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command1.ExecuteNonQuery()


                    ''''''''''''''''''''''''''''''


                    Dim commandSpecificLocation As MySqlCommand = New MySqlCommand
                    commandSpecificLocation.CommandType = CommandType.Text

                    Dim qrySpecificLocation As String = "Update tblservicerecord2 set ReportServiceStart=@ReportServiceStart, ReportServiceEnd =@ReportServiceEnd, EndServiceDate =@EndServiceDate where RecordNo =@RecordNo"


                    commandSpecificLocation.CommandText = qrySpecificLocation
                    commandSpecificLocation.Parameters.Clear()

                    commandSpecificLocation.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                 
                    Dim lReportServiceStart As String
                    Dim lReportServiceEnd As String
                    Dim lActServiceEnd As String

                    If String.IsNullOrEmpty(txtReportServiceStart.Text) = False Then
                        lReportServiceStart = txtReportServiceStart.Text & " " & txtReportServiceStartTime.Text
                        commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", Convert.ToDateTime(lReportServiceStart).ToString("yyyy-MM-dd HH:mm"))
                    Else
                        If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                            lReportServiceStart = txtActSvcDate.Text & " " & txtActSvcTimeFrom.Text
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", Convert.ToDateTime(lReportServiceStart).ToString("yyyy-MM-dd HH:mm"))
                        Else
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceStart", DBNull.Value)
                        End If
                    End If

                    If String.IsNullOrEmpty(txtReportServiceEnd.Text) = False Then
                        lReportServiceEnd = txtReportServiceEnd.Text & " " & txtReportServiceEndTime.Text
                        commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", Convert.ToDateTime(lReportServiceEnd).ToString("yyyy-MM-dd HH:mm"))
                    Else
                        If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                            lReportServiceEnd = txtActSvcDate.Text & " " & txtActSvcTimeTo.Text
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", Convert.ToDateTime(lReportServiceEnd).ToString("yyyy-MM-dd HH:mm"))
                        Else
                            commandSpecificLocation.Parameters.AddWithValue("@ReportServiceEnd", DBNull.Value)
                        End If
                    End If

                    If String.IsNullOrEmpty(txtActSvcEndDate.Text) = False Then
                        lActServiceEnd = txtActSvcEndDate.Text
                        commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", Convert.ToDateTime(txtActSvcEndDate.Text).ToString("yyyy-MM-dd"))
                    Else
                        'If String.IsNullOrEmpty(txtActSvcDate.Text) = False Then
                        '    lActServiceEnd = txtActSvcDate.Text
                        '    commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", Convert.ToDateTime(lActServiceEnd).ToString("yyyy-MM-dd"))
                        'Else
                        commandSpecificLocation.Parameters.AddWithValue("@EndServiceDate", DBNull.Value)
                        'End If
                    End If

                    commandSpecificLocation.Connection = conn

                    commandSpecificLocation.ExecuteNonQuery()
                    commandSpecificLocation.Dispose()
                    ''''''''''''''''''''''''''''


                    ''''''''''''''''''''''''''''''''''''

                    ' ''''Update tblAR
                    ' '''''''''''''''''''''''''''''''''''''''
                    ''Retrieve AR details
                    ' '''''''''''''''''''''''''''''''''''''''''

                    'Dim command5 As MySqlCommand = New MySqlCommand

                    'command5.CommandType = CommandType.Text

                    'command5.CommandText = "SELECT * FROM tblAR where rcnoServiceRecord = " & Convert.ToInt64(txtRcno.Text) & " and ItemCode='IN-DEF' and ServiceStatus ='O'"
                    'command5.Connection = conn

                    'Dim dr5 As MySqlDataReader = command5.ExecuteReader()
                    'Dim dt5 As New DataTable
                    'dt5.Load(dr5)

                    'Dim qryAR As String

                    'Dim commandAR As MySqlCommand = New MySqlCommand
                    'commandAR.CommandType = CommandType.Text

                    'Dim lCOACode As String
                    'Dim lCOADesc As String
                    'Dim lItemCode As String


                    'If dt5.Rows.Count > 0 Then


                    '    '''''''''''''''''''''''''

                    '    'Get Item desc, price Id

                    '    'Dim conn As MySqlConnection = New MySqlConnection()

                    '    'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    '    'conn.Open()
                    '    Dim command10 As MySqlCommand = New MySqlCommand
                    '    command10.CommandType = CommandType.Text
                    '    command10.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                    '    command10.Connection = conn

                    '    Dim dr10 As MySqlDataReader = command10.ExecuteReader()
                    '    Dim dt10 As New DataTable
                    '    dt10.Load(dr10)


                    '    lCOACode = dt10.Rows(0)("COACode").ToString()
                    '    lCOADesc = dt10.Rows(0)("COADescription").ToString()
                    '    lItemCode = dt10.Rows(0)("ProductCode").ToString()

                    '    ''''''''''''''''''''''''''''


                    '    qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup, ModuleName, ItemCode,"
                    '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @ModuleName, @ItemCode,"
                    '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    '    commandAR.CommandText = qryAR
                    '    commandAR.Parameters.Clear()

                    '    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                    '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtSvcRecord.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountID.Text.ToUpper)

                    '        If txtActSvcDate.Text.Trim = "" Then
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                    '        Else
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    '        End If

                    '        commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)

                    '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(txtRcno.Text))
                    '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@GLCode", lCOACode.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@GLDescription", lCOADesc.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtAmtBill.Text))
                    '        commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
                    '        commandAR.Parameters.AddWithValue("@BatchNo", "")
                    '        commandAR.Parameters.AddWithValue("@ServiceStatus", "")
                    '        commandAR.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
                    '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
                    '        commandAR.Parameters.AddWithValue("@ItemCode", lItemCode.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToUpper)
                    '        commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
                    '        'commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Now())

                    '    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                    '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtSvcRecord.Text)
                    '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountID.Text)

                    '        If txtActSvcDate.Text.Trim = "" Then
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                    '        Else
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    '        End If

                    '        commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)

                    '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(txtRcno.Text))
                    '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
                    '        commandAR.Parameters.AddWithValue("@GLCode", lCOACode)
                    '        commandAR.Parameters.AddWithValue("@GLDescription", lCOADesc)
                    '        commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtAmtBill.Text))
                    '        commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
                    '        commandAR.Parameters.AddWithValue("@BatchNo", "")
                    '        commandAR.Parameters.AddWithValue("@ServiceStatus", "")
                    '        commandAR.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                    '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
                    '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
                    '        commandAR.Parameters.AddWithValue("@ItemCode", lItemCode)
                    '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    '        commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    '        'commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Now())
                    '    End If


                    '    commandAR.Connection = conn
                    '    commandAR.ExecuteNonQuery()



                    '    Dim command11 As MySqlCommand = New MySqlCommand
                    '    command11.CommandType = CommandType.Text

                    '    command11.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                    '    command11.Connection = conn
                    '    Dim dr11 As MySqlDataReader = command11.ExecuteReader()
                    '    Dim dt11 As New DataTable
                    '    dt11.Load(dr11)


                    '    lCOACode = dt11.Rows(0)("COACode").ToString()
                    '    lCOADesc = dt11.Rows(0)("COADescription").ToString()
                    '    lItemCode = dt11.Rows(0)("ProductCode").ToString()


                    '    qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup, ModuleName, ItemCode,"
                    '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @ModuleName, @ItemCode,"
                    '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    '    commandAR.CommandText = qryAR
                    '    commandAR.Parameters.Clear()

                    '    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                    '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtSvcRecord.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountID.Text.ToUpper)

                    '        If txtActSvcDate.Text.Trim = "" Then
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                    '        Else
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    '        End If

                    '        commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)

                    '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(txtRcno.Text))
                    '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@GLCode", lCOACode.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@GLDescription", lCOADesc.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
                    '        commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtAmtBill.Text))
                    '        commandAR.Parameters.AddWithValue("@BatchNo", "")
                    '        commandAR.Parameters.AddWithValue("@ServiceStatus", "")
                    '        commandAR.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
                    '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
                    '        commandAR.Parameters.AddWithValue("@ItemCode", lItemCode.ToUpper)
                    '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToUpper)
                    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
                    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Now())
                    '    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                    '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtSvcRecord.Text)
                    '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountID.Text)

                    '        If txtActSvcDate.Text.Trim = "" Then
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                    '        Else
                    '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
                    '        End If

                    '        commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)

                    '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(txtRcno.Text))
                    '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
                    '        commandAR.Parameters.AddWithValue("@GLCode", lCOACode)
                    '        commandAR.Parameters.AddWithValue("@GLDescription", lCOADesc)
                    '        commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
                    '        commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtAmtBill.Text))
                    '        commandAR.Parameters.AddWithValue("@BatchNo", "")
                    '        commandAR.Parameters.AddWithValue("@ServiceStatus", "")
                    '        commandAR.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                    '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
                    '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
                    '        commandAR.Parameters.AddWithValue("@ItemCode", lItemCode)
                    '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@CreatedOn", Now())
                    '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Now())

                    '    End If


                    '    commandAR.Connection = conn
                    '    commandAR.ExecuteNonQuery()
                    'End If


                    ''''''''''''''''''''''''''''''''''
                    If String.IsNullOrEmpty(txtContractNo.Text.Trim) = False Then
                        CType(Me.Master, MasterPage).UpdateContract(txtContractNo.Text)
                    End If

                    conn.Close()
                    txtFilling.Text = "1"
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "UPDATE-UPDATE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

                    lblMessage.Text = "ACTION: SERVICE RECORD UPDATED SUCCESSFULLY"
                    'ddlStatus.SelectedValue
                    ddlStatus.Text = "P"
                    btnUpdate.Text = "REVERSE"
                    SqlDataSource1.SelectCommand = txt.Text
                    SqlDataSource1.DataBind()
                    GridView1.DataBind()
                ElseIf txtFilling.Text = "1" Then
                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    command.CommandText = "UPDATE tblservicerecord SET filling=0, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command.Connection = conn
                    command.Parameters.Clear()
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command.ExecuteNonQuery()


                    ''''''''''''''''''''''''''''

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text
                    command2.CommandText = "UPDATE tblservicerecord SET STATUS='O', LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command2.Connection = conn
                    command2.Parameters.Clear()
                    command2.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command2.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command2.ExecuteNonQuery()


                    ''''''''''''''''''''''''''''''
                    conn.Close()
                    txtFilling.Text = "0"
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "UPDATE-REVERSE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

                    ' lblMessage.Text = "ACTION: RECORD LOCK RELEASED"
                    lblMessage.Text = "ACTION: RECORD REVERSED"
                     ddlStatus.Text = "O"
                    btnUpdate.Text = "UPDATE"
                    SqlDataSource1.SelectCommand = txt.Text
                    SqlDataSource1.DataBind()
                    GridView1.DataBind()
                End If  ' If txtFilling.Text = "0" Then

                btnUpdateWorkLoad_Click(sender, e)

                FindTotOsServices()
                'InsertNewLog()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnUpdate_Click", ex.Message.ToString, txtRcno.Text + " " + txtSvcRecord.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Private Sub UpdateContract(conn As MySqlConnection)


    '    ''''Update Contract
    '    '''''''''''''''''''''''''''''''''''''''
    '    'Retrieve Contract details
    '    '''''''''''''''''''''''''''''''''''''''''
    '    Try
    '        Dim command2 As MySqlCommand = New MySqlCommand

    '        command2.CommandType = CommandType.Text

    '        command2.CommandText = "SELECT ContractNo,agreevalue FROM tblcontract where CONTRACTNO='" & txtContractNo.Text & "'"
    '        command2.Connection = conn

    '        Dim dr2 As MySqlDataReader = command2.ExecuteReader()
    '        Dim dt2 As New DataTable
    '        dt2.Load(dr2)

    '        If dt2.Rows.Count > 0 Then
    '            '''''''Retrieve all services under that contract 
    '            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '            Dim command0 As MySqlCommand = New MySqlCommand

    '            command0.CommandType = CommandType.Text

    '            command0.CommandText = "SELECT ContractNo, Status,BillAmount,recordno FROM tblservicerecord where CONTRACTNO='" & txtContractNo.Text & "'"
    '            command0.Connection = conn

    '            Dim dr0 As MySqlDataReader = command0.ExecuteReader()
    '            Dim dt0 As New DataTable
    '            dt0.Load(dr0)

    '            '''''''Retrieve all posted services under that contract 
    '            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text

    '            command1.CommandText = "SELECT ContractNo, Status,BillAmount,recordno FROM tblservicerecord where CONTRACTNO='" & txtContractNo.Text & "' AND STATUS='P'"
    '            command1.Connection = conn

    '            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
    '            Dim dt1 As New DataTable
    '            dt1.Load(dr1)

    '            Dim totarea0 As Decimal = 0
    '            Dim totbait0 As Integer = 0
    '            Dim totareaprice0 As Decimal = 0
    '            Dim totbaitprice0 As Decimal = 0

    '            Dim totarea1 As Decimal = 0
    '            Dim totbait1 As Integer = 0
    '            Dim totareaprice1 As Decimal = 0
    '            Dim totbaitprice1 As Decimal = 0


    '            If dt0.Rows.Count > 0 Then
    '                For j As Integer = 0 To dt0.Rows.Count - 1
    '                    '''''''Retrieve service area details to compute completed area and balance area for that contract
    '                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '                    Dim command3 As MySqlCommand = New MySqlCommand

    '                    command3.CommandType = CommandType.Text
    '                    command3.CommandText = "SELECT sum(AreaCompleted) as TotalAreaCompleted,sum(BaitStationInstalled) as TotalBaitStation,sum(PriceOfAreaCompleted) as totalPrice, sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where RecordNo='" & dt0.Rows(j)("RecordNo").ToString & "'"
    '                    command3.Connection = conn

    '                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
    '                    Dim dt3 As New DataTable
    '                    dt3.Load(dr3)

    '                    totarea0 = 0

    '                    If dt3.Rows.Count > 0 Then
    '                        If IsDBNull(dt3.Rows(0)("TotalAreaCompleted")) = False Then
    '                            totarea0 = totarea0 + dt3.Rows(0)("TotalAreaCompleted")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("TotalBaitStation")) = False Then
    '                            totbait0 = totbait0 + dt3.Rows(0)("TotalBaitStation")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("totalprice")) = False Then
    '                            totareaprice0 = totareaprice0 + dt3.Rows(0)("totalprice")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("totalbaitprice")) = False Then
    '                            totbaitprice0 = totbaitprice0 + dt3.Rows(0)("totalbaitprice")
    '                        End If

    '                    End If

    '                    dt3.Clear()
    '                    dr3.Close()
    '                    dt3.Dispose()

    '                Next

    '            End If


    '            If dt1.Rows.Count > 0 Then

    '                For j As Integer = 0 To dt1.Rows.Count - 1
    '                    '''''''Retrieve service area details to compute completed area and balance area for that contract
    '                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '                    Dim command3 As MySqlCommand = New MySqlCommand

    '                    command3.CommandType = CommandType.Text
    '                    command3.CommandText = "SELECT sum(AreaCompleted) as TotalAreaCompleted,sum(BaitStationInstalled) as TotalBaitStation,sum(PriceOfAreaCompleted) as totalPrice, sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where RecordNo='" & dt1.Rows(j)("RecordNo").ToString & "'"
    '                    command3.Connection = conn

    '                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
    '                    Dim dt3 As New DataTable
    '                    dt3.Load(dr3)

    '                    totarea1 = 0

    '                    If dt3.Rows.Count > 0 Then
    '                        If IsDBNull(dt3.Rows(0)("TotalAreaCompleted")) = False Then
    '                            totarea1 = totarea1 + dt3.Rows(0)("TotalAreaCompleted")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("TotalBaitStation")) = False Then
    '                            totbait1 = totbait1 + dt3.Rows(0)("TotalBaitStation")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("totalprice")) = False Then
    '                            totareaprice1 = totareaprice1 + dt3.Rows(0)("totalprice")
    '                        End If

    '                        If IsDBNull(dt3.Rows(0)("totalbaitprice")) = False Then
    '                            totbaitprice1 = totbaitprice1 + dt3.Rows(0)("totalbaitprice")
    '                        End If

    '                    End If

    '                    dt3.Clear()
    '                    dr3.Close()
    '                    dt3.Dispose()

    '                Next

    '                'Update Contract
    '                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '                Dim command As MySqlCommand = New MySqlCommand

    '                command.CommandType = CommandType.Text
    '                command.CommandText = "UPDATE tblcontract SET SERVICENO=@SERVICENO,servicenoactual=@servicenoactual,servicebal=@servicebal,serviceamt=@serviceamt,amtcompleted=@amtcompleted,amtbalance=@amtbalance,completedarea=@completedarea,balancearea=@balancearea,BaitStationTotal=@BaitStationTotal, BaitStationInstalled=@BaitStationInstalled,BaitStationBalance=@BaitStationBalance where contractno='" & txtContractNo.Text & "'"
    '                command.Parameters.Clear()
    '                command.Parameters.AddWithValue("@serviceno", dt0.Rows.Count)
    '                command.Parameters.AddWithValue("@servicenoactual", dt1.Rows.Count)
    '                command.Parameters.AddWithValue("@servicebal", dt0.Rows.Count - dt1.Rows.Count)

    '                Dim tot0 As Decimal = 0

    '                For i As Integer = 0 To dt0.Rows.Count - 1
    '                    tot0 = tot0 + dt0.Rows(i)("BillAmount")
    '                Next

    '                Dim tot1 As Decimal = 0

    '                For i As Integer = 0 To dt1.Rows.Count - 1
    '                    tot1 = tot1 + dt1.Rows(i)("BillAmount")
    '                Next

    '                command.Parameters.AddWithValue("@serviceamt", dt2.Rows(0)("Agreevalue"))
    '                command.Parameters.AddWithValue("@amtcompleted", tot1)
    '                command.Parameters.AddWithValue("@amtbalance", tot0 - tot1)
    '                command.Parameters.AddWithValue("@totalarea", totarea0)
    '                command.Parameters.AddWithValue("@completedarea", totarea1)
    '                'If totarea0 = DBNull.Value.ToString Then
    '                '    command.Parameters.AddWithValue("@balancearea", 0 - totarea1)
    '                'Else

    '                command.Parameters.AddWithValue("@balancearea", totarea0 - totarea1)
    '                'End If
    '                command.Parameters.AddWithValue("@BaitStationTotal", totbait0)
    '                command.Parameters.AddWithValue("@BaitStationInstalled", totbait1)
    '                command.Parameters.AddWithValue("@BaitStationBalance", totbait0 - totbait1)


    '                command.Connection = conn

    '                command.ExecuteNonQuery()
    '            End If ' If dt1.Rows.Count > 0 Then

    '            'Update Actual Service Start Date
    '            If dt1.Rows.Count = 1 Then
    '                Dim commandContract As MySqlCommand = New MySqlCommand

    '                commandContract.CommandType = CommandType.Text

    '                commandContract.CommandText = "Update tblContract set actualservicestartdate=@ServiceDate where contractno=@contractno "
    '                commandContract.Parameters.AddWithValue("@contractno", txtContractNo.Text)
    '                If String.IsNullOrEmpty(txtActSvcDate.Text) = True Then
    '                    commandContract.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtScheduleDate.Text).ToString("yyyy-MM-dd"))
    '                Else
    '                    commandContract.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text).ToString("yyyy-MM-dd"))
    '                End If
    '                commandContract.Connection = conn

    '                commandContract.ExecuteNonQuery()
    '            End If
    '        End If 'If dt2.Rows.Count > 0 Then

    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("UpdateContract", ex.Message.ToString, txtContractNo.Text)
    '    End Try
    'End Sub


    Protected Sub btnUpdateStatus_Click(sender As Object, e As EventArgs) Handles btnUpdateStatus.Click
        If ddlNewStatus.Text = txtDDLText.Text Then
            lblAlertStatus.Text = "SELECT NEW STATUS"
            mdlPopupStatus.Show()

            Return

        End If
        If ddlNewStatus.Text = lblOldStatus.Text Then
            lblAlertStatus.Text = "STATUS ALREADY UPDATED"
            mdlPopupStatus.Show()

            Return
        End If

        If ddlNewStatus.Text = "V" Then
            If lblOldStatus.Text = "P" Then
                lblAlertStatus.Text = "POSTED RECORDS CANNOT BE MADE VOID"
                mdlPopupStatus.Show()

                Return

            End If
            If String.IsNullOrEmpty(lblBillNo.Text) = False Then
                lblAlertStatus.Text = "SERVICE ALREADY BILLED, SO CANNOT BE MADE VOID"
                mdlPopupStatus.Show()

                Return
            End If
        End If

        If ddlNewStatus.Text = "T" Then
            If lblOldStatus.Text = "P" Then
                lblAlertStatus.Text = "POSTED RECORDS CANNOT BE TERMINATED"
                mdlPopupStatus.Show()

                Return

            End If
            If String.IsNullOrEmpty(lblBillNo.Text) = False Then
                lblAlertStatus.Text = "SERVICE ALREADY BILLED, SO CANNOT BE TERMINATED"
                mdlPopupStatus.Show()

                Return
            End If
        End If

        If ddlNewStatus.Text = "C" Then
            If lblOldStatus.Text = "P" Then
                lblAlertStatus.Text = "POSTED RECORDS CANNOT BE CANCELLED"
                mdlPopupStatus.Show()

                Return

            End If
            If String.IsNullOrEmpty(lblBillNo.Text) = False Then
                lblAlertStatus.Text = "SERVICE ALREADY BILLED, SO CANNOT BE CANCELLED"
                mdlPopupStatus.Show()

                Return
            End If
        End If
        If String.IsNullOrEmpty(txtChangeStatusRemarks.Text) Then
            lblAlertStatus.Text = "ENTER REMARKS"
            mdlPopupStatus.Show()

            Return

        End If
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim sql As String = ""

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text


            'command.CommandText = "UPDATE tblservicerecord SET STATUS='" + ddlNewStatus.SelectedValue + "', LastModifiedBy = '" & txtLastModifiedBy.Text.ToUpper & "', LastModifiedOn = '" & Convert.ToDateTime(txtCreatedOn.Text) & "' where rcno=" & Convert.ToInt32(txtRcno.Text)

            'command.Connection = conn

            'command.ExecuteNonQuery()



            sql = "Update tblservicerecord set STATUS= @STATUS, LastModifiedBy =@LastModifiedBy, LastModifiedOn = @LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)

            command.CommandText = sql
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@STATUS", ddlNewStatus.SelectedValue)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command.Connection = conn
            command.ExecuteNonQuery()


            '   UpdateContractActSvcDate(conn)

            'command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            conn.Close()
            ddlStatus.Text = ddlNewStatus.Text
            ddlNewStatus.SelectedIndex = 0

            lblMessage.Text = "ACTION: STATUS UPDATED"
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtSvcRecord.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, txtAccountID.Text, txtChangeStatusRemarks.Text, txtRcno.Text)

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            FindTotOsServices()

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupStatus.Hide()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnUpdateStatus_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub


    Protected Sub btnStatus_Click(sender As Object, e As EventArgs) Handles btnStatus.Click
        lblMessage.Text = ""
        lblAlertStatus.Text = ""
        ddlNewStatus.SelectedIndex = 0
        Try
            If txtRcno.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
                lblAlert.Text = "SELECT RECORD TO UPDATE STATUS"
                Return

            End If

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If

            If ddlStatus.Text = "P" Then
                lblAlert.Text = "STATUS CANNOT BE CHANGED FOR POSTED RECORDS"
                Return

            End If
            lblRecordNo.Text = txtSvcRecord.Text
            lblOldStatus.Text = ddlStatus.Text
            lblBillNo.Text = txtInvoiceNo.Text
            txtChangeStatusRemarks.Text = ""
            lblStatusServiceDate.Text = txtActSvcDate.Text

            mdlPopupStatus.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnStatus_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub GridView2_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView2.PageIndexChanging
        GridView2.PageIndex = e.NewPageIndex

        SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
        SqlDataSource2.DataBind()
        GridView2.DataBind()

        'SqlDataSource2.DataBind()
        'GridView2.DataBind()
        'SqlDataSource1.SelectCommand = txt.Text
        'SqlDataSource1.DataBind()
        'GridView1.DataBind()
    End Sub

 

    Protected Sub GridView2_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles GridView2.RowCommand
        ' System.Threading.Thread.Sleep(1000)
        'GridView1.CssClass = "dummybutton"
        'btnADD.CssClass = "dummybutton"
        'btnCopy.CssClass = "dummybutton"
        'btnEdit.CssClass = "dummybutton"
        'btnDelete.CssClass = "dummybutton"
        'btnStatus.CssClass = "dummybutton"
        'btnQuit.CssClass = "dummybutton"
        'btnFilter.CssClass = "dummybutton"
        'btnResSearch.CssClass = "dummybutton"
        'btnQuickSearch.CssClass = "dummybutton"
        'btnUpdate.CssClass = "dummybutton"
        'btnPrint.CssClass = "dummybutton"
        'If e.CommandName = "Edit" Then
        '    Dim editindex As Integer = e.CommandArgument
        '    txtSvcRcNo.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
        '    txtAction.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblAction"), Label).Text
        '    txtRemarkOffice.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblRemarkO"), Label).Text
        '    txtRemarkClient.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblRemarkC"), Label).Text
        '    txtMaterials.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblMaterial"), Label).Text

        '    ddlServiceID.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblServiceID"), Label).Text
        '    ddlServiceDesc.Text = DirectCast(GridView2.Rows(editindex).FindControl("lblServiceDescription"), Label).Text
        '    txtFrequencyedit.Text = TryCast(GridView2.Rows(editindex).FindControl("lblFrequency"), Label).Text
        '    txtTargetIDEdit.Text = TryCast(GridView2.Rows(editindex).FindControl("lblTargetID"), Label).Text
        '    txtTargetDescEdit.Text = TryCast(GridView2.Rows(editindex).FindControl("txtTargetDesc"), Label).Text

        '    txtSvcMode.Text = "Edit"


        'ElseIf e.CommandName = "Update" Then
        '    btnSvcSave.Enabled = False
        '    btnSvcCancel.Enabled = False
        'ElseIf e.CommandName = "Cancel" Then
        '    btnSvcSave.Enabled = False
        '    btnSvcCancel.Enabled = False
        'End If


    End Sub

    Protected Sub lbltarget_textchanged(sender As Object, e As EventArgs)


    End Sub



    Protected Sub OnRowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView2.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView2, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."

            If e.Row.RowIndex = GridView2.EditIndex Then
                'update or cancel buttons
                Dim updateBtn As LinkButton = DirectCast(e.Row.Cells(6).Controls(0), LinkButton)
                Dim updateScript As String = ClientScript.GetPostBackClientHyperlink(updateBtn, "")
                btnSvcSave.Attributes("onclick") = updateScript

                Dim cancelScript As String = String.Format("javascript:__doPostBack('{0}','Cancel${1}')", GridView2.UniqueID, e.Row.RowIndex)
                btnSvcCancel.Attributes("onclick") = cancelScript
            Else
                'edit button
                Dim editScript As String = String.Format("javascript:__doPostBack('{0}','Edit${1}')", GridView2.UniqueID, e.Row.RowIndex)

                btnSvcEdit.Attributes("onclick") = editScript

            End If
            '  InsertIntoTblWebEventLog("Gridview2_Databound", GridView2.EditIndex.ToString, lblRecordNo.Text)


            Try
                If GridView2.EditIndex < 0 Then


                    Dim value As String = DirectCast(e.Row.Cells(1).FindControl("lblTargetID"), Label).Text
                    Dim substrings As [String]() = value.Split(",")

                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text

                    command.Connection = conn
                    Dim noofrec As Integer
                    noofrec = 0

                    Dim ltargetid As String


                    For count As Int16 = 0 To substrings.Length - 1
                        command.CommandText = "select descrip1 from tbltarget where targetid=@targetid"
                        command.Parameters.Clear()
                        ltargetid = substrings(noofrec).Trim

                        command.Parameters.AddWithValue("@targetid", ltargetid)

                        Dim dr As MySqlDataReader = command.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then
                            If count = 0 Then
                                DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text = dt.Rows(0)("descrip1").ToString
                            Else
                                DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text + "," + dt.Rows(0)("descrip1").ToString
                            End If
                        End If

                        noofrec = noofrec + 1
                    Next
                    conn.Close()

                ElseIf GridView2.EditIndex >= 0 Then
                    If e.Row.RowIndex = GridView2.EditIndex Then
                        txtSvcMode.Text = "Edit"
                        DisableSvcControls()
                        txtSvcMode.Text = "EDIT"
                        lblMessage.Text = "ACTION: EDIT SERVICE LOCATION DETAIL"

                        Dim ddlservices As DropDownList = DirectCast(e.Row.FindControl("ddlServices"), DropDownList)

                        ddlservices.Items.FindByText(TryCast(e.Row.FindControl("lblServiceID1"), Label).Text).Selected = True

                        Dim ddlfreq As DropDownList = DirectCast(e.Row.FindControl("ddlFrequency"), DropDownList)

                        If TryCast(e.Row.FindControl("lblFrequency1"), Label).Text <> "" Or String.IsNullOrEmpty(TryCast(e.Row.FindControl("lblFrequency1"), Label).Text) = False Then
                            ddlfreq.Items.FindByText(TryCast(e.Row.FindControl("lblFrequency1"), Label).Text).Selected = True

                        End If

                        Dim value As String = DirectCast(e.Row.Cells(0).FindControl("lblTargetID1"), Label).Text
                        Dim substrings As [String]() = value.Split(",")

                        Dim conn As MySqlConnection = New MySqlConnection()

                        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        conn.Open()

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text

                        command.Connection = conn

                        For count As Int16 = 0 To substrings.Length - 1
                            command.CommandText = "select descrip1 from tbltarget where targetid=@targetid"
                            command.Parameters.Clear()

                            command.Parameters.AddWithValue("@targetid", substrings(count).Trim)

                            Dim dr As MySqlDataReader = command.ExecuteReader()
                            Dim dt As New DataTable
                            dt.Load(dr)

                            If dt.Rows.Count > 0 Then
                                If count = 0 Then
                                    DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text = dt.Rows(0)("descrip1").ToString
                                Else
                                    DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(e.Row.Cells(0).FindControl("txtTargetDesc"), Label).Text + "," + dt.Rows(0)("descrip1").ToString
                                End If
                            End If


                        Next
                        conn.Close()
                    End If
                End If
            Catch ex As Exception
                InsertIntoTblWebEventLog("OnRowDataBound", ex.Message.ToString, GridView2.UniqueID.ToString)
            End Try
        End If


        '  If GridView2.EditIndex < 0 Then


        '        End If

        If GridView2.EditIndex >= 0 Then
            btnSvcSave.Enabled = True
            btnSvcCancel.Enabled = True
        Else
            btnSvcSave.Enabled = False
            btnSvcCancel.Enabled = False
        End If
    End Sub

    Protected Sub svc_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim ddl_svcid As DropDownList = DirectCast(sender, DropDownList)
            Dim row As GridViewRow = DirectCast(ddl_svcid.Parent.Parent, GridViewRow)
            '   DirectCast(row.Cells(0).FindControl("lblServiceID"), Label).Text = ddl_svcid.SelectedItem.Text


            DirectCast(row.Cells(0).FindControl("lblServiceDescription"), Label).Text = ddl_svcid.SelectedValue.ToString

        Catch ex As Exception
            InsertIntoTblWebEventLog("svc_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub target_TextChanged(sender As Object, e As EventArgs)
        ' mdlPopUpTarget.Show()
        Try
            Dim ddl_targetid As Saplin.Controls.DropDownCheckBoxes = DirectCast(sender, Saplin.Controls.DropDownCheckBoxes)
            Dim row As GridViewRow = DirectCast(ddl_targetid.Parent.Parent, GridViewRow)
            Dim idx As Integer = row.RowIndex

            '   Dim lblsvcdesc As [String] = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text

            DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = ""
            DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = ""
            DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text = ""

            For Each item As ListItem In ddl_targetid.Items

                If item.Selected Then
                    DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text += item.Value + ","

                    DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text += item.Text + ","
                    DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text += item.Text + ":" + item.Value + ","
                End If
            Next
            DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Length - 1)
            ' DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.TrimEnd

            DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Length - 1)

            DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text = DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text.Length - 1)

            DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text = DirectCast(row.Cells(0).FindControl("lblReason"), Label).Text.Replace(",", vbCrLf)
        Catch ex As Exception
            InsertIntoTblWebEventLog("target_TextChanged", ex.Message.ToString, txtSvcRcNo.Text)
        End Try
    End Sub

    Protected Sub checkBoxes_SelcetedIndexChanged(sender As Object, e As EventArgs)
        'Dim ddl_targetid As Saplin.Controls.DropDownCheckBoxes = DirectCast(sender, Saplin.Controls.DropDownCheckBoxes)
        'Dim row As GridViewRow = DirectCast(ddl_targetid.Parent.Parent, GridViewRow)
        'Dim idx As Integer = row.RowIndex

        ''   Dim lblsvcdesc As [String] = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text

        'DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = ""
        'DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = ""

        'For Each item As ListItem In ddl_targetid.Items

        '    If item.Selected Then
        '        DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text += item.Value + ","

        '        DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text += item.Text + ","

        '    End If
        'Next
        'DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Length - 1)
        ''    DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = ddl_targetid.SelectedValue.ToString
        'DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Length - 1)

    End Sub


    Protected Sub ok_click(sender As Object, e As EventArgs)
        'Dim btn As Button = DirectCast(sender, Button)
        'Dim row As GridViewRow = DirectCast(btn.Parent.Parent, GridViewRow)
        'Dim idx As Integer = row.RowIndex
        'Dim ddl_targetid As CheckBoxList = DirectCast(row.Cells(0).FindControl("chkTarget"), CheckBoxList)

        ''   Dim lblsvcdesc As [String] = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text

        'DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = ""
        'DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = ""

        'For Each item As ListItem In ddl_targetid.Items

        '    If item.Selected Then
        '        DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text += item.Value + ", "

        '        DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text += item.Text + ", "

        '    End If
        'Next
        'DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.Length - 2)
        'DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text = DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Trim().Remove(DirectCast(row.Cells(0).FindControl("lblTargetID1"), Label).Text.Length - 2)

    End Sub

    Protected Sub btnSvcSave_Click(sender As Object, e As EventArgs) Handles btnSvcSave.Click

        Dim d, d1, d2 As Double
        If String.IsNullOrEmpty(txtServiceArea.Text) = False Then
            If Double.TryParse(txtServiceArea.Text, d) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER NUMBERIC VALUE FOR SERVICE AREA"

                txtServiceArea.Focus()
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER NUMBERIC VALUE FOR SERVICE AREA');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return

            End If
        Else
            txtServiceArea.Text = "0.00"
            d = 0
        End If
        If String.IsNullOrEmpty(txtPricePerServiceArea.Text) = False Then
            If Double.TryParse(txtPricePerServiceArea.Text, d1) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID VALUE FOR PRICE PER SERVICE AREA"
                txtPricePerServiceArea.Focus()
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID VALUE FOR PRICE PER SERVICE AREA');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtPricePerServiceArea.Text = "0.00"
            d1 = 0
        End If

        If String.IsNullOrEmpty(txtAreaCompleted1.Text) = False Then
            If Double.TryParse(txtAreaCompleted1.Text, d2) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID VALUE FOR AREA COMPLETED"
                txtAreaCompleted1.Focus()
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID VALUE FOR AREA COMPLETED');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtAreaCompleted1.Text = "0.00"
            d2 = 0
        End If

        txtTotalPriceOfAreaCompleted.Text = (d1 * d2).ToString

        Dim n, n1 As Integer
        If String.IsNullOrEmpty(txtNoofBaitStation.Text) = False Then
            If Integer.TryParse(txtNoofBaitStation.Text, n) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER NUMBERIC VALUE FOR BAIT STATION INSTALLED"
                txtNoofBaitStation.Focus()
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER NUMBERIC VALUE FOR BAIT STATION INSTALLED');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtNoofBaitStation.Text = 0
            n = 0
        End If

        If String.IsNullOrEmpty(txtPricePerBaitStaion.Text) = False Then
            If Double.TryParse(txtPricePerBaitStaion.Text, n1) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID VALUE FOR PRICE PER BAIT STATION"
                txtPricePerBaitStaion.Focus()
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID VALUE FOR PRICE PER BAIT STATION');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtPricePerBaitStaion.Text = "0.00"
            n1 = 0
        End If

        txtTotalPriceofBaitStation.Text = (n * n1).ToString
        If String.IsNullOrEmpty(txtTotalPriceofBaitStation.Text) Then
            txtTotalPriceofBaitStation.Text = "0.00"
        End If
        'If String.IsNullOrEmpty(txtTotalPriceOfAreaCompleted.Text) = False Then
        '    If Double.TryParse(txtTotalPriceOfAreaCompleted.Text, d3) = False Then
        '        ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
        '        lblAlert.Text = "ENTER VALID VALUE FOR AREA COMPLETED"
        '        Return
        '    End If
        'Else
        '    txtTotalPriceOfAreaCompleted.Text = "0.00"
        '    d3 = 0
        'End If



        If (ddlServiceID.Text) = "Select" Then
            lblAlert.Text = "PLEASE SELECT VALID SERVICE ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            updPanelService1.Update()
            Exit Sub

        End If
        If String.IsNullOrEmpty(ddlServiceDesc.Text) Then
            ddlServiceDesc.Text = ddlServiceID.SelectedValue

        End If

        If txtSvcMode.Text = "Add" Then
            '  Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.Connection = conn
            command.CommandText = "INSERT INTO tblservicerecorddet(contractno,WARRANTY,Reason,status,ServiceID,ProductServices,frequency, TargetID,RecordNo,Action,RemarkOffice,RemarkClient,ServiceArea,PricePerServiceArea,AreaCompleted,PriceOfAreaCompleted,BaitStationInstalled,PricePerBaitStation,TotalPriceForBaitStation,Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn) VALUES(@contractno,@WARRANTY,@Reason,@status,@ServiceID, @ProductServices,@Frequency,@TargetID,@RecordNo,@Action,@RemarkOffice,@RemarkClient,@ServiceArea,@PricePerServiceArea,@AreaCompleted,@PriceOfAreaCompleted,@BaitStationInstalled,@PricePerBaitStation,@TotalPriceForBaitStation,@Material, @CreatedBy, @CreatedOn, @lastModifiedBy, @lastModifiedOn)"
            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                command.Parameters.AddWithValue("@contractno", txtContractNo.Text.ToUpper)
                '    command.Parameters.AddWithValue("@WARRANTY", txtFrequencyadd.Text.ToUpper & " - " & txtTargetDescAdd.Text.ToUpper)
                command.Parameters.AddWithValue("@status", "O")
                '  command.Parameters.AddWithValue("@Reason", txtReasonAdd.Text.ToUpper)
                command.Parameters.AddWithValue("@WARRANTY", txtFrequencyedit.Text.ToUpper & " - " & txtTargetDescEdit.Text.ToUpper)

                command.Parameters.AddWithValue("@Reason", txtReasonEdit.Text.ToUpper)
                command.Parameters.AddWithValue("@ServiceID", ddlServiceID.SelectedItem.Text.ToUpper)

                command.Parameters.AddWithValue("@ProductServices", ddlServiceDesc.Text.ToUpper)
                command.Parameters.AddWithValue("@Frequency", txtFrequencyedit.Text.ToUpper)

                command.Parameters.AddWithValue("@TargetID", txtTargetIDEdit.Text.ToUpper)


                '  command.Parameters.AddWithValue("@ServiceID", txtServiceIDadd.SelectedItem.Text.ToUpper)

                'command.Parameters.AddWithValue("@ProductServices", txtServiceDescadd.Text.ToUpper)
                'command.Parameters.AddWithValue("@Frequency", txtFrequencyadd.Text.ToUpper)

                'command.Parameters.AddWithValue("@TargetID", txtTargetIDAdd.Text.ToUpper)

                command.Parameters.AddWithValue("@Action", txtAction.Text.ToUpper)
                command.Parameters.AddWithValue("@RemarkOffice", txtRemarkOffice.Text.ToUpper)
                command.Parameters.AddWithValue("@RemarkClient", txtRemarkClient.Text.ToUpper)
                command.Parameters.AddWithValue("@Material", txtMaterials.Text.ToUpper)

                command.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text.ToUpper)

                command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                command.Parameters.AddWithValue("@contractno", txtContractNo.Text)
                '   command.Parameters.AddWithValue("@WARRANTY", txtFrequencyadd.Text & " - " & txtTargetDescAdd.Text)
                command.Parameters.AddWithValue("@status", "O")

                'command.Parameters.AddWithValue("@ServiceID", txtServiceIDadd.SelectedItem.Text)

                'command.Parameters.AddWithValue("@ProductServices", txtServiceDescadd.Text)
                'command.Parameters.AddWithValue("@Frequency", txtFrequencyadd.Text)

                'command.Parameters.AddWithValue("@TargetID", txtTargetIDAdd.Text)

                command.Parameters.AddWithValue("@WARRANTY", txtFrequencyedit.Text & " - " & txtTargetDescEdit.Text)

                command.Parameters.AddWithValue("@Reason", txtReasonEdit.Text)
                command.Parameters.AddWithValue("@ServiceID", ddlServiceID.SelectedItem.Text)

                command.Parameters.AddWithValue("@ProductServices", ddlServiceDesc.Text)
                command.Parameters.AddWithValue("@Frequency", txtFrequencyedit.Text)

                command.Parameters.AddWithValue("@TargetID", txtTargetIDEdit.Text)

                command.Parameters.AddWithValue("@Action", txtAction.Text)
                command.Parameters.AddWithValue("@RemarkOffice", txtRemarkOffice.Text)
                command.Parameters.AddWithValue("@RemarkClient", txtRemarkClient.Text)
                command.Parameters.AddWithValue("@Material", txtMaterials.Text)

                command.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text)

                command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            End If


            command.Parameters.AddWithValue("@ServiceArea", txtServiceArea.Text)
            command.Parameters.AddWithValue("@PricePerServiceArea", txtPricePerServiceArea.Text)
            command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted1.Text)
            command.Parameters.AddWithValue("@PriceOfAreaCompleted", txtTotalPriceOfAreaCompleted.Text)
            command.Parameters.AddWithValue("@BaitStationInstalled", Convert.ToInt32(txtNoofBaitStation.Text))
            command.Parameters.AddWithValue("@PricePerBaitStation", txtPricePerBaitStaion.Text)
            command.Parameters.AddWithValue("@TotalPriceForBaitStation", txtTotalPriceofBaitStation.Text)

            command.ExecuteNonQuery()
            txtSvcRcNo.Text = command.LastInsertedId
            '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            ' lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('ADD: RECORD SUCCESSFULLY ADDED');", True)
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('');", True)

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD SAVE SVC", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRcNo.Text)

            'Update tblservicerecord 


            UpdatePrice(conn, "ADD SAVE")
            UpdatePriceRateSchedule(conn, "ADD SAVE", txtSvcRcNo.Text)
            'End - Update tblservicerecord


            ''Update tblContract


            'Dim commandBait As MySqlCommand = New MySqlCommand

            'commandBait.CommandType = CommandType.Text

            'commandBait.CommandText = "SELECT sum(BaitStationInstalled) as TotalBaitStation FROM tblservicerecorddet where contractno=@contractno "
            'commandBait.Parameters.AddWithValue("@contractno", lblContractNo.Text)
            ''commandBait.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            'commandBait.Connection = conn

            'Dim drBait As MySqlDataReader = commandBait.ExecuteReader()
            'Dim dtBait As New DataTable
            'dtBait.Load(drBait)

            'If dtBait.Rows.Count > 0 Then

            '    'Find no of bait station from tblcontract

            '    Dim commandCont As MySqlCommand = New MySqlCommand

            '    commandCont.CommandType = CommandType.Text

            '    commandCont.CommandText = "SELECT BaitStationTotal FROM tblcontract where contractno=@contractno "
            '    commandCont.Parameters.AddWithValue("@contractno", lblContractNo.Text)
            '    'commandCont.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            '    commandCont.Connection = conn

            '    Dim drCont As MySqlDataReader = commandCont.ExecuteReader()
            '    Dim dtCont As New DataTable
            '    dtCont.Load(drCont)

            '    Dim baittotalcount As Integer = 0

            '    If dtCont.Rows.Count > 0 Then
            '        baittotalcount = dtCont.Rows(0)("BaitStationTotal")
            '    End If

            '    Dim commandContract As MySqlCommand = New MySqlCommand

            '    commandContract.CommandType = CommandType.Text

            '    commandContract.CommandText = "Update tblContract set BaitStationTotal=@BaitStationTotal, BaitStationInstalled=@BaitStationInstalled,BaitStationBalance=@BaitStationBalance where contractno=@contractno "
            '    commandContract.Parameters.AddWithValue("@contractno", lblContractNo.Text)
            '    commandContract.Parameters.AddWithValue("@BaitStationTotal", baittotalcount)
            '    commandContract.Parameters.AddWithValue("@BaitStationInstalled", dtBait.Rows(0)("TotalBaitStation"))
            '    commandContract.Parameters.AddWithValue("@BaitStationBalance", baittotalcount - dtBait.Rows(0)("TotalBaitStation"))

            '    commandContract.Connection = conn

            '    commandContract.ExecuteNonQuery()

            ' End If


            'End - Update tblContract

            lblAlert.Text = ""
            conn.Close()
            tableadd.Visible = False
            tableaddHeader.Visible = False
            tableedit.CssClass = "dummybutton"

            SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
            SqlDataSource2.DataBind()
            'GridView2.DataBind()

            GridView2.DataBind()
            EnableSvcControls()

            For i As Int32 = 0 To GridView2.Rows.Count - 1
                If GridView2.Rows(i).Cells(6).Text = txtSvcRcNo.Text Then
                    GridView2.SelectedIndex = i
                End If
            Next

            '  MessageBox.Message.Alert(Page, GridView2.SelectedIndex.ToString, "str")

            'MakeSvcNull()
            'btnEdit.Enabled = False

            'btnDelete.Enabled = False
            'btnEdit.ForeColor = Color.Gray
            'btnDelete.ForeColor = Color.Gray
            'Catch ex As Exception
            '    InsertIntoTblWebEventLog("btnSvcSave_Click ADD SAVE", ex.Message.ToString, txtSvcRcNo.Text)
            'End Try
        Else

            Try
                ' Dim rcno As String = GridView2.Rows(GridView2.EditIndex).Cells(6).Text
                'Dim rcno As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("lblRcno"), Label).Text
                'Dim serviceid As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("ddlServices"), DropDownList).SelectedItem.Text.ToUpper

                'Dim servicedesc As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("lblServiceDescription"), Label).Text.ToUpper
                'Dim frequency As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("ddlFrequency"), DropDownList).Text.ToUpper

                'Dim target As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("lblTargetID1"), Label).Text.ToUpper
                'Dim targetdesc As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("txtTargetDesc"), Label).Text.ToUpper
                'Dim reason As String = TryCast(GridView2.Rows(GridView2.EditIndex).FindControl("lblReason"), Label).Text.ToUpper

                If String.IsNullOrEmpty(txtTargetDescEdit.Text) = False Then
                    targetchkAdd_TextChanged(sender, e)

                End If

                'Dim rcno As String = TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblRcno"), Label).Text
                Dim serviceid As String = ddlServiceID.SelectedItem.Text
                Dim servicedesc As String = ddlServiceDesc.Text
                Dim frequency As String = txtFrequencyedit.Text

                Dim target As String = txtTargetIDEdit.Text
                Dim targetdesc As String = txtTargetDescEdit.Text.ToUpper
                Dim reason As String = txtReasonEdit.Text.ToUpper


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text

                command.Connection = conn

                command.CommandText = "UPDATE tblservicerecorddet SET contractno=@contractno,warranty=@warranty,Reason=@Reason,ServiceID=@ServiceID, productservices=@ProductServices,frequency=@Frequency, TargetID=@TargetID,Action=@Action, RemarkOffice=@RemarkOffice,RemarkClient=@RemarkClient,ServiceArea=@ServiceArea,PricePerServiceArea=@PricePerServiceArea,AreaCompleted=@AreaCompleted,PriceOfAreaCompleted=@PriceOfAreaCompleted,BaitStationInstalled=@BaitStationInstalled,PricePerBaitStation=@PricePerBaitStation,TotalPriceForBaitStation=@TotalPriceForBaitStation,Material=@Material, lastModifiedBy=@lastModifiedBy, lastModifiedOn=@lastModifiedOn where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)
                command.Parameters.Clear()
                If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                    command.Parameters.AddWithValue("@contractno", txtContractNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@WARRANTY", frequency & " - " & targetdesc)
                    command.Parameters.AddWithValue("@Reason", reason)

                    command.Parameters.AddWithValue("@ServiceID", serviceid)

                    command.Parameters.AddWithValue("@ProductServices", servicedesc)
                    command.Parameters.AddWithValue("@Frequency", frequency)

                    command.Parameters.AddWithValue("@TargetID", target)

                    command.Parameters.AddWithValue("@Action", txtAction.Text.ToUpper)
                    command.Parameters.AddWithValue("@RemarkOffice", txtRemarkOffice.Text.ToUpper)
                    command.Parameters.AddWithValue("@RemarkClient", txtRemarkClient.Text.ToUpper)
                    command.Parameters.AddWithValue("@Material", txtMaterials.Text.ToUpper)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                    command.Parameters.AddWithValue("@contractno", txtContractNo.Text)
                    command.Parameters.AddWithValue("@WARRANTY", frequency & " - " & targetdesc)
                    command.Parameters.AddWithValue("@Reason", reason)

                    command.Parameters.AddWithValue("@ServiceID", serviceid)

                    command.Parameters.AddWithValue("@ProductServices", servicedesc)
                    command.Parameters.AddWithValue("@Frequency", frequency)

                    command.Parameters.AddWithValue("@TargetID", target)

                    command.Parameters.AddWithValue("@Action", txtAction.Text)
                    command.Parameters.AddWithValue("@RemarkOffice", txtRemarkOffice.Text)
                    command.Parameters.AddWithValue("@RemarkClient", txtRemarkClient.Text)
                    command.Parameters.AddWithValue("@Material", txtMaterials.Text)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                End If

                command.Parameters.AddWithValue("@ServiceArea", txtServiceArea.Text)
                command.Parameters.AddWithValue("@PricePerServiceArea", txtPricePerServiceArea.Text)
                command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted1.Text)
                command.Parameters.AddWithValue("@PriceOfAreaCompleted", txtTotalPriceOfAreaCompleted.Text)
                command.Parameters.AddWithValue("@BaitStationInstalled", Convert.ToInt32(txtNoofBaitStation.Text))
                command.Parameters.AddWithValue("@PricePerBaitStation", txtPricePerBaitStaion.Text)
                command.Parameters.AddWithValue("@TotalPriceForBaitStation", txtTotalPriceofBaitStation.Text)

                command.ExecuteNonQuery()

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT SAVE SVC", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRcNo.Text)

                'Update tblservicerecord 
                UpdatePrice(conn, "EDIT SAVE")

             

                UpdatePriceRateSchedule(conn, "EDIT SAVE", txtSvcRcNo.Text)

           

                'Dim command2 As MySqlCommand = New MySqlCommand

                'command2.CommandType = CommandType.Text

                'command2.CommandText = "SELECT sum(servicearea) as totalservicearea,sum(AreaCompleted) as totalareacompleted,sum(PriceOfAreaCompleted) as totalPrice,sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where recordno=@recordno "
                'command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                ''command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                'command2.Connection = conn

                'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                'Dim dt2 As New DataTable
                'dt2.Load(dr2)

                'If dt2.Rows.Count > 0 Then
                '    If String.IsNullOrEmpty(dt2.Rows(0)("totalPrice").ToString) = False Or dt2.Rows(0)("totalPrice") = 0 Then
                '        lblTotalPrice.Text = 0
                '        If dt2.Rows(0)("totalbaitprice").ToString = "" Or dt2.Rows(0)("totalbaitprice") = 0 Then
                '            '  txtAmtBill.Text = 0
                '        End If
                '    Else
                '        txtAmtBill.Text = (dt2.Rows(0)("totalPrice") + dt2.Rows(0)("totalbaitprice")).ToString
                '        lblTotalPrice.Text = dt2.Rows(0)("totalPrice").ToString
                '    End If

                '    If String.IsNullOrEmpty(dt2.Rows(0)("totalservicearea").ToString) = False Then
                '        lblTotalServiceArea.Text = 0
                '    Else
                '        lblTotalServiceArea.Text = dt2.Rows(0)("totalservicearea").ToString
                '    End If

                '    If String.IsNullOrEmpty(dt2.Rows(0)("totalareacompleted").ToString) = False Then
                '        lblTotalAreaCompleted.Text = 0
                '    Else
                '        lblTotalAreaCompleted.Text = dt2.Rows(0)("totalareacompleted").ToString
                '    End If


                'End If

                'Dim command4 As MySqlCommand = New MySqlCommand

                'command4.CommandType = CommandType.Text

                'command4.CommandText = "SELECT warranty FROM tblservicerecorddet where recordno=@recordno "
                'command4.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                ''command4.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                'command4.Connection = conn

                'Dim dr4 As MySqlDataReader = command4.ExecuteReader()
                'Dim dt4 As New DataTable
                'dt4.Load(dr4)

                'Dim notes As String = ""
                'If dt4.Rows.Count > 0 Then
                '    For i As Int32 = 0 To dt4.Rows.Count - 1
                '        If i = 0 Then
                '            notes = dt4.Rows(i)("warranty")
                '        Else
                '            notes = notes + "\n" + dt4.Rows(i)("warranty")
                '        End If

                '    Next

                'End If

                'txtDescription.Text = notes
                'If String.IsNullOrEmpty(txtAmtBill.Text) Then
                '    txtAmtBill.Text = 0
                'End If
                'Dim command3 As MySqlCommand = New MySqlCommand

                'command3.CommandType = CommandType.Text

                'command3.CommandText = "Update tblServiceRecord set Notes= '" & notes & "',BillAmount = " & txtAmtBill.Text & ",TotalServiceArea = " & lblTotalServiceArea.Text & ",TotalAreaCompleted=" & lblTotalAreaCompleted.Text & ",TotalPriceOfAreaCompleted=" & lblTotalPrice.Text & " where recordno=@recordno "
                'command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                ''    command3.Parameters.AddWithValue("@notes", notes)
                'command3.Connection = conn

                'command3.ExecuteNonQuery()


                'End - Update tblservicerecord

                ''Update tblContract


                'Dim commandBait As MySqlCommand = New MySqlCommand

                'commandBait.CommandType = CommandType.Text

                'commandBait.CommandText = "SELECT sum(BaitStationInstalled) as TotalBaitStation FROM tblservicerecorddet where contractno=@contractno "
                'commandBait.Parameters.AddWithValue("@contractno", lblContractNo.Text)
                ''commandBait.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                'commandBait.Connection = conn

                'Dim drBait As MySqlDataReader = commandBait.ExecuteReader()
                'Dim dtBait As New DataTable
                'dtBait.Load(drBait)

                'If dtBait.Rows.Count > 0 Then

                '    'Find no of bait station from tblcontract

                '    Dim commandCont As MySqlCommand = New MySqlCommand

                '    commandCont.CommandType = CommandType.Text

                '    commandCont.CommandText = "SELECT BaitStationTotal FROM tblcontract where contractno=@contractno "
                '    commandCont.Parameters.AddWithValue("@contractno", lblContractNo.Text)
                '    'commandCont.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                '    commandCont.Connection = conn

                '    Dim drCont As MySqlDataReader = commandCont.ExecuteReader()
                '    Dim dtCont As New DataTable
                '    dtCont.Load(drCont)

                '    Dim baittotalcount As Integer = 0

                '    If dtCont.Rows.Count > 0 Then
                '        baittotalcount = dtCont.Rows(0)("BaitStationTotal")
                '    End If

                '    Dim commandContract As MySqlCommand = New MySqlCommand

                '    commandContract.CommandType = CommandType.Text

                '    commandContract.CommandText = "Update tblContract set BaitStationTotal=@BaitStationTotal, BaitStationInstalled=@BaitStationInstalled,BaitStationBalance=@BaitStationBalance where contractno=@contractno "
                '    commandContract.Parameters.AddWithValue("@contractno", lblContractNo.Text)
                '    commandContract.Parameters.AddWithValue("@BaitStationTotal", baittotalcount)
                '    commandContract.Parameters.AddWithValue("@BaitStationInstalled", dtBait.Rows(0)("TotalBaitStation"))
                '    commandContract.Parameters.AddWithValue("@BaitStationBalance", baittotalcount - dtBait.Rows(0)("TotalBaitStation"))

                '    commandContract.Connection = conn

                '    commandContract.ExecuteNonQuery()

                'End If


                ''End - Update tblContract


                '   GridView2.EditIndex = -1


                tableedit.CssClass = "dummybutton"

          
                SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
                SqlDataSource2.DataBind()
                'GridView2.DataBind()

                GridView2.DataBind()

           
                EnableSvcControls()

          
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('ACTION: SERVICE DETAIL UPDATED SUCCESSFULLY');", True)
              
                lblMessage.Text = "ACTION: SERVICE DETAIL UPDATED SUCCESSFULLY"

                'If GridView2.Rows.Count = 0 Then
                '    lblServiceDetailMessage.Text = "THE SERVICE RECORD HAS NO SERVICE DETAILS YET, PLEASE ADD THE SERVICE DETAILS SO THAT IT CAN BE DOWNLOADED ON MOBILE APP."
                'Else
                '    lblServiceDetailMessage.Text = ""
                'End If
            Catch ex As Exception
                InsertIntoTblWebEventLog("btnSvcSave_Click EDIT SAVE", ex.Message.ToString, txtSvcRcNo.Text)
            End Try
        End If
        txtSvcMode.Text = ""
     
        '  InsertNewLogDetail()

      
    End Sub


    ''
    Private Sub UpdatePriceRateSchedule(conn As MySqlConnection, modetype As String, svcRcno As Long)

        Try


            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT AutoCalculateServiceValue FROM tblservicefrequency where Frequency ='" & txtFrequencyedit.Text & "'"
            'command1.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If (dt1.Rows(0)("AutoCalculateServiceValue").ToString = True) Then

                If modetype <> "DELETE" Then

                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT TargetId, FinalPricePerService FROM tblrateschedule where ContractNo ='" & txtContractNo.Text & "' and TargetId ='" & txtTargetIDEdit.Text & "'"
                    'command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                    command2.Connection = conn

                    Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt2 As New DataTable
                    dt2.Load(dr2)

                    If dt2.Rows.Count > 0 Then


                        'txtAmtBill.Text = dt2.Rows(0)("FinalPricePerService").ToString
                        'lblTotalPrice.Text = dt2.Rows(0)("FinalPricePerService").ToString
                        'End If

                        Dim command3 As MySqlCommand = New MySqlCommand

                        command3.CommandType = CommandType.Text

                        'command3.CommandText = "Update tblServiceRecordDet set FinalPricePerService = " & dt2.Rows(0)("FinalPricePerService").ToString & " where Frequency ='" & txtFrequencyedit.Text & "' and TargetId ='" & txtTargetIDEdit.Text & "' and recordno=@recordno"
                        command3.CommandText = "Update tblServiceRecordDet set FinalPricePerService = " & dt2.Rows(0)("FinalPricePerService").ToString & " where Rcno =" & svcRcno
                        command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                        'command3.Parameters.AddWithValue("@notes", notes)
                        command3.Connection = conn

                        command3.ExecuteNonQuery()

                    End If 'end of  If modetype <> "DELETE" Then

                End If

                ''''''''''''''''

                'If modetype for all ("Add/Edit/Delete)


                Dim command4 As MySqlCommand = New MySqlCommand

                command4.CommandType = CommandType.Text

                'command4.CommandText = "SELECT ifnull(A.GstBase,0) Sum(FinalPricePerService) as TotalPrice FROM tblServiceRecordDet where recordno=@recordno"
                command4.CommandText = "SELECT ifnull(sum(ifnull(FinalPricePerService,0)),0) as TotalPrice FROM tblServiceRecordDet where recordno=@recordno"
                command4.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                command4.Connection = conn

                Dim dr4 As MySqlDataReader = command4.ExecuteReader()
                Dim dt4 As New DataTable
                dt4.Load(dr4)

                ''''''''''''''''
                Dim command5 As MySqlCommand = New MySqlCommand

                command5.CommandType = CommandType.Text

                command5.CommandText = "Update tblServiceRecord set BillAmount = " & dt4.Rows(0)("TotalPrice").ToString & " where recordno=@recordno "
                command5.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                'command3.Parameters.AddWithValue("@notes", notes)
                command5.Connection = conn

                command5.ExecuteNonQuery()

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdatePriceRateSchedule " + modetype, ex.Message.ToString, lblRecordNo.Text + " " + txtSvcRcNo.Text)
        End Try

    End Sub

    ''
    Private Sub UpdatePrice(conn As MySqlConnection, modetype As String)

        Try
            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text

            command2.CommandText = "SELECT sum(servicearea) as totalservicearea,sum(AreaCompleted) as totalareacompleted,sum(PriceOfAreaCompleted) as totalPrice, sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where recordno=@recordno "
            command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            command2.Connection = conn

            Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)
          
            If dt2.Rows.Count > 0 Then
                If String.IsNullOrEmpty(dt2.Rows(0)("totalPrice").ToString) Then
                    lblTotalPrice.Text = 0
                ElseIf dt2.Rows(0)("totalPrice") = 0 Then
                    lblTotalPrice.Text = 0
                Else
                    If String.IsNullOrEmpty(dt2.Rows(0)("totalbaitprice").ToString) Then
                        txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                        lblTotalPrice.Text = dt2.Rows(0)("totalPrice").ToString
                    ElseIf dt2.Rows(0)("totalbaitprice") = 0 Then
                        txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                        lblTotalPrice.Text = dt2.Rows(0)("totalPrice").ToString
                    Else
                        txtAmtBill.Text = (dt2.Rows(0)("totalPrice") + dt2.Rows(0)("totalbaitprice")).ToString
                        lblTotalPrice.Text = dt2.Rows(0)("totalPrice").ToString
                    End If
                End If
          
                If String.IsNullOrEmpty(dt2.Rows(0)("totalservicearea").ToString) Then
                    lblTotalServiceArea.Text = 0
                Else
                    lblTotalServiceArea.Text = dt2.Rows(0)("totalservicearea").ToString
                End If

                If String.IsNullOrEmpty(dt2.Rows(0)("totalareacompleted").ToString) Then
                    lblTotalAreaCompleted.Text = 0
                Else
                    lblTotalAreaCompleted.Text = dt2.Rows(0)("totalareacompleted").ToString
                End If
            End If
          
            Dim command4 As MySqlCommand = New MySqlCommand

            command4.CommandType = CommandType.Text

            command4.CommandText = "SELECT warranty FROM tblservicerecorddet where recordno=@recordno "
            command4.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            'command4.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            command4.Connection = conn

            Dim dr4 As MySqlDataReader = command4.ExecuteReader()
            Dim dt4 As New DataTable
            dt4.Load(dr4)
           
            Dim notes As String = ""
            If dt4.Rows.Count > 0 Then
                For i As Int32 = 0 To dt4.Rows.Count - 1
                    If i = 0 Then
                        notes = dt4.Rows(i)("warranty").ToString
                    Else
                        notes = notes & vbCrLf & dt4.Rows(i)("warranty").ToString
                    End If

                Next

            End If
           

            txtDescription.Text = notes
            updPanelService1.Update()
            If String.IsNullOrEmpty(txtAmtBill.Text) Then
                txtAmtBill.Text = 0
            End If
         
            Dim command3 As MySqlCommand = New MySqlCommand

            command3.CommandType = CommandType.Text

            command3.CommandText = "Update tblServiceRecord set Notes = @notes,BillAmount = " & txtAmtBill.Text & ",TotalServiceArea = " & lblTotalServiceArea.Text & ",TotalAreaCompleted=" & lblTotalAreaCompleted.Text & ",TotalPriceOfAreaCompleted=" & lblTotalPrice.Text & " where recordno=@recordno "
            command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            command3.Parameters.AddWithValue("@notes", notes)
            command3.Connection = conn

            command3.ExecuteNonQuery()

       
        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdatePrice " + modetype, ex.Message.ToString, lblRecordNo.Text + " " + txtSvcRcNo.Text)
        End Try

    End Sub
    Protected Sub GridView2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged
        Try
            lblAlert.Text = ""
            Dim editindex As Integer = GridView2.SelectedIndex
            'txtEditIndex.Text = editindex.ToString
            ddlServiceID.SelectedIndex = 0
            ddlServiceDesc.Text = ""
            txtFrequencyedit.SelectedIndex = 0
            txtTargetIDEdit.Text = ""
            txtTargetDescEdit.Text = ""
            ddlchkTargetEdit.ClearSelection()
            txtReasonEdit.Text = ""

            'rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            'txtSvcRcNo.Text = rcno.ToString()

            'Dim editindex As Integer
            MakeSvcNull()

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then
                editindex = txtSelectedIndex.Text
            Else
                editindex = GridView2.SelectedIndex
            End If

            If editindex < 0 Then

                btnSvcAdd.Enabled = True
                btnSvcAdd.ForeColor = System.Drawing.Color.Black
                btnClientImport.Enabled = True
                btnClientImport.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If


            rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            txtSvcRcNo.Text = rcno.ToString()
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT rcno,ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material    FROM tblservicerecorddet where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                ''''''''''''''''
                'ddlServiceID.Items.Clear()
                'SqlDSService.SelectCommand = "SELECT ProductID, ProductDesc from tblProduct order by ProductID"
                'SqlDSService.DataBind()
                'ddlServiceID.AppendDataBoundItems = True
                'ddlServiceID.Items.Add("Select")

                'ddlServiceID.DataSourceID = "SqlDSService"

                'ddlServiceID.DataBind()

                '''''''''''''''''

                'ddlServiceID.SelectedItem.Text = dt.Rows(0)("ServiceID").ToString.Trim
                If String.IsNullOrEmpty(dt.Rows(0)("ServiceID").ToString.Trim) = False Then
                    ddlServiceID.Text = dt.Rows(0)("ServiceID").ToString.Trim

                End If
                ddlServiceDesc.Text = dt.Rows(0)("ProductServices").ToString
                txtsvc.Text = dt.Rows(0)("ProductServices").ToString

                If dt.Rows(0)("Frequency").ToString <> "" Then
                    txtFrequencyedit.Text = dt.Rows(0)("Frequency").ToString
                End If

                'Dim gFreq As String
                'If dt.Rows(0)("Frequency").ToString <> "" Then

                '    gFreq = dt.Rows(0)("Frequency").ToString.ToUpper()

                '    If txtFrequencyedit.Items.FindByValue(gFreq) Is Nothing Then
                '        txtFrequencyedit.Items.Add(gFreq)
                '        txtFrequencyedit.Text = gFreq
                '    Else
                '        txtFrequencyedit.Text = dt.Rows(0)("Frequency").ToString.Trim().ToUpper()
                '    End If
                'End If

                txtTargetIDEdit.Text = dt.Rows(0)("TargetID").ToString
                txtReasonEdit.Text = dt.Rows(0)("Reason").ToString

                txtAction.Text = dt.Rows(0)("Action").ToString
                txtRemarkOffice.Text = dt.Rows(0)("RemarkOffice").ToString
                txtRemarkClient.Text = dt.Rows(0)("RemarkClient").ToString

                txtServiceArea.Text = dt.Rows(0)("ServiceArea").ToString
                txtPricePerServiceArea.Text = dt.Rows(0)("PricePerServiceArea").ToString
                txtAreaCompleted1.Text = dt.Rows(0)("AreaCompleted").ToString
                txtTotalPriceOfAreaCompleted.Text = dt.Rows(0)("PriceOfAreaCompleted").ToString
                txtNoofBaitStation.Text = dt.Rows(0)("BaitStationInstalled").ToString
                txtPricePerBaitStaion.Text = dt.Rows(0)("PricePerBaitStation").ToString
                txtTotalPriceofBaitStation.Text = dt.Rows(0)("TotalPriceForBaitStation").ToString
                txtMaterials.Text = dt.Rows(0)("Material").ToString

                If String.IsNullOrEmpty(txtTargetIDEdit.Text) = False Then
                    Dim stringList As List(Of String) = txtTargetIDEdit.Text.Split(","c).ToList()
                    Dim YrStrList As List(Of [String]) = New List(Of String)()

                    For Each str As String In stringList

                        For Each item As ListItem In ddlchkTargetEdit.Items


                            If item.Text.Substring(0, item.Text.IndexOf("-")).TrimEnd = str.Trim Then
                                item.Selected = True
                                Exit For
                            End If
                        Next

                    Next

                End If
                For Each item As ListItem In ddlchkTargetEdit.Items

                    If item.Selected Then
                        txtTargetDescEdit.Text += item.Value + ","
                    End If
                Next

                If String.IsNullOrEmpty(txtTargetDescEdit.Text.Trim) = False Then
                    txtTargetDescEdit.Text = txtTargetDescEdit.Text.Trim().Remove(txtTargetDescEdit.Text.Length - 1)
                End If

            End If

            'If GridView2.SelectedRow.Cells(2).Text = "&nbsp;" Then
            '    txtsvc.Text = ""
            'Else
            '    txtsvc.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblServiceDescription"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(7).Text = "&nbsp;" Then
            '    txtAction.Text = ""
            'Else
            '    txtAction.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblAction"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(8).Text = "&nbsp;" Then
            '    txtRemarkOffice.Text = ""
            'Else
            '    txtRemarkOffice.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblRemarkO"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(9).Text = "&nbsp;" Then
            '    txtRemarkClient.Text = ""
            'Else
            '    txtRemarkClient.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblRemarkC"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(10).Text = "&nbsp;" Then
            '    txtServiceArea.Text = "0.00"
            'Else
            '    txtServiceArea.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblServiceArea"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(11).Text = "&nbsp;" Then
            '    txtPricePerServiceArea.Text = "0.00"
            'Else
            '    txtPricePerServiceArea.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblPricePerServiceArea"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(12).Text = "&nbsp;" Then
            '    txtAreaCompleted1.Text = "0.00"
            'Else
            '    txtAreaCompleted1.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblAreaCompleted"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(13).Text = "&nbsp;" Then
            '    txtTotalPriceOfAreaCompleted.Text = "0.00"
            'Else
            '    txtTotalPriceOfAreaCompleted.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblPriceOfAreaCompleted"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(14).Text = "&nbsp;" Then
            '    txtNoofBaitStation.Text = "0"
            'Else
            '    txtNoofBaitStation.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblBaitStationInstalled"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(15).Text = "&nbsp;" Then
            '    txtPricePerBaitStaion.Text = "0.00"
            'Else
            '    txtPricePerBaitStaion.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblPricePerBaitStation1"), Label).Text).ToString
            'End If

            'If GridView2.SelectedRow.Cells(16).Text = "&nbsp;" Then
            '    txtTotalPriceofBaitStation.Text = "0.00"
            'Else
            '    txtTotalPriceofBaitStation.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblTotalPriceForBaitStation1"), Label).Text).ToString
            'End If
            'If GridView2.SelectedRow.Cells(17).Text = "&nbsp;" Then
            '    txtMaterials.Text = ""
            'Else
            '    txtMaterials.Text = Server.HtmlDecode(DirectCast(GridView2.Rows(editindex).FindControl("lblMaterial"), Label).Text).ToString
            'End If

            If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then

            Else
                EnableSvcControls()
                btnSvcEdit.Enabled = True
                btnSvcEdit.ForeColor = System.Drawing.Color.Black
                btnSvcDelete.Enabled = True
                btnSvcDelete.ForeColor = System.Drawing.Color.Black


            End If

            If chkInactive.Checked = True Then
                btnSvcAdd.Enabled = False
                btnSvcAdd.ForeColor = System.Drawing.Color.Gray
                'btnSvcEdit.Enabled = False
                'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
                btnClientImport.Enabled = False
                btnClientImport.ForeColor = System.Drawing.Color.Gray
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("GridView2_SelectedIndexChanged", ex.Message.ToString, txtSvcRcNo.Text)
        End Try
    End Sub

    Protected Sub btnSvcCancel_Click(sender As Object, e As EventArgs) Handles btnSvcCancel.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        txtSvcRcNo.Text = ""
        txtAction.Text = ""
        txtRemarkClient.Text = ""
        txtRemarkOffice.Text = ""
        txtMaterials.Text = ""

        txtServiceArea.Text = "0.00"
        txtPricePerServiceArea.Text = "0.00"
        txtAreaCompleted1.Text = "0.00"
        txtTotalPriceOfAreaCompleted.Text = "0.00"

        txtNoofBaitStation.Text = "0"
        txtPricePerBaitStaion.Text = "0.00"
        txtTotalPriceofBaitStation.Text = "0.00"

        GridView2.EditIndex = -1
        tableadd.Visible = False
        tableaddHeader.Visible = False

        tableedit.CssClass = "dummybutton"
        txtSvcMode.Text = ""

        '''''''''''''''''''
        EnableSvcControls()
        'btnSvcSave.Enabled = False
        'btnSvcSave.ForeColor = System.Drawing.Color.Gray
        'btnSvcCancel.Enabled = False
        'btnSvcCancel.ForeColor = System.Drawing.Color.Gray

        'btnSvcAdd.Enabled = True
        'btnSvcAdd.ForeColor = System.Drawing.Color.Black
        'btnSvcEdit.Enabled = False
        'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        'btnSvcDelete.Enabled = False
        'btnSvcDelete.ForeColor = System.Drawing.Color.Gray
        'txtAction.Enabled = False
        'txtRemarkOffice.Enabled = False
        'txtRemarkClient.Enabled = False
        'txtServiceArea.Enabled = False
        'txtPricePerServiceArea.Enabled = False
        'txtAreaCompleted1.Enabled = False
        'txtTotalPriceOfAreaCompleted.Enabled = False
        '''''''''''''''''''
    End Sub


    Protected Sub SqlDataSource1_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDataSource1.Selected
        txtRowCount.Text = e.AffectedRows.ToString

        'mdlPopupEditTeam.Hide()
    End Sub

    Private Sub DisableSvcControls()
        btnSvcSave.Enabled = True
        btnSvcSave.ForeColor = System.Drawing.Color.Black
        btnSvcCancel.Enabled = True
        btnSvcCancel.ForeColor = System.Drawing.Color.Black

        btnSvcAdd.Enabled = False
        btnSvcAdd.ForeColor = System.Drawing.Color.Gray

        btnClientImport.Enabled = False
        btnClientImport.ForeColor = System.Drawing.Color.Gray


        btnSvcEdit.Enabled = False
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray

        btnSvcDelete.Enabled = False
        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        txtRemarkClient.Enabled = True
        txtRemarkOffice.Enabled = True
        txtAction.Enabled = True
        txtMaterials.Enabled = True

        txtServiceArea.Enabled = True
        txtPricePerServiceArea.Enabled = True
        txtAreaCompleted1.Enabled = True
        txtTotalPriceOfAreaCompleted.Enabled = True

        txtNoofBaitStation.Enabled = True
        txtPricePerBaitStaion.Enabled = True
        txtTotalPriceofBaitStation.Enabled = True

    End Sub


    Private Sub EnableSvcControls()
        btnSvcSave.Enabled = False
        btnSvcSave.ForeColor = System.Drawing.Color.Gray
        btnSvcCancel.Enabled = False
        btnSvcCancel.ForeColor = System.Drawing.Color.Gray

        btnSvcAdd.Enabled = True
        btnSvcAdd.ForeColor = System.Drawing.Color.Black

        btnClientImport.Enabled = True
        btnClientImport.ForeColor = System.Drawing.Color.Black

        btnSvcEdit.Enabled = False
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        btnSvcDelete.Enabled = False
        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        txtRemarkClient.Enabled = False
        txtRemarkOffice.Enabled = False
        txtAction.Enabled = False
        txtMaterials.Enabled = False

        txtServiceArea.Enabled = False
        txtPricePerServiceArea.Enabled = False
        txtAreaCompleted1.Enabled = False
        txtTotalPriceOfAreaCompleted.Enabled = False

        txtNoofBaitStation.Enabled = False
        txtPricePerBaitStaion.Enabled = False
        txtTotalPriceofBaitStation.Enabled = False
    End Sub

    Private Sub MakeSvcNull()
        txtSvcMode.Text = ""
        txtRemarkClient.Text = ""
        txtRemarkOffice.Text = ""
        txtAction.Text = ""
        txtSvcRcNo.Text = ""
        txtMaterials.Text = ""

        txtServiceArea.Text = "0.00"
        txtPricePerServiceArea.Text = "0.00"
        txtAreaCompleted1.Text = "0.00"
        txtTotalPriceOfAreaCompleted.Text = "0.00"

        txtNoofBaitStation.Text = "0"
        txtPricePerBaitStaion.Text = "0.00"
        txtTotalPriceofBaitStation.Text = "0.00"

    End Sub

    Protected Sub btnSvcAdd_Click(sender As Object, e As EventArgs) Handles btnSvcAdd.Click
        Try
            'tableadd.Visible = True
            'If GridView2.Rows.Count <= 0 Then
            '    tableaddHeader.Visible = True
            'End If
            tableedit.CssClass = "Centered"

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            tableedit.CssClass = "Centered"

            '  ScriptManager.RegisterStartupScript(Page, Me.[GetType](), "id", "document.getElementById('<%=lblMessage.ClientID%>').value='ADD: RECORD SUCCESSFULLY ADDED';", True)
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('ACTION: ADD SERVICE RECORD DETAIL');", True)

            lblMessage.Text = "ACTION: ADD SERVICE RECORD DETAIL"
            DisableSvcControls()
            MakeSvcNull()



            ddlServiceDesc.Text = ""
            txtFrequencyedit.SelectedIndex = 0
            txtTargetIDEdit.Text = ""
            txtTargetDescEdit.Text = ""
            ddlchkTargetEdit.ClearSelection()
            txtReasonEdit.Text = ""

            txtServiceIDadd.SelectedIndex = 0
            txtServiceDescadd.SelectedIndex = 0
            txtFrequencyadd.SelectedIndex = 0
            txtTargetIDAdd.Text = ""
            txtTargetDescAdd.Text = ""
            ddlchkTargetAdd.ClearSelection()

            'txtServiceIDadd.Items.Clear()
            ddlServiceID.Items.Clear()
            SqlDSService.SelectCommand = "SELECT ProductID, ProductDesc from tblProduct order by ProductID"
            SqlDSService.DataBind()
            ddlServiceID.AppendDataBoundItems = True
            ddlServiceID.Items.Add("--SELECT--")

            ddlServiceID.DataSourceID = "SqlDSService"
         
            ddlServiceID.DataBind()
            ddlServiceID.SelectedIndex = 0
            'ddlServiceID.Items.Remove(0)
            txtSvcMode.Text = "Add"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSvcAdd_Click", ex.Message.ToString, txtSvcRcNo.Text)
            lblMessage.Text = ex.Message.ToString
        End Try
    End Sub

    Protected Sub Insert(sender As Object, e As EventArgs)
        SqlDataSource2.Insert()
    End Sub

    Protected Sub txtServiceIDadd_TextChanged(sender As Object, e As EventArgs) Handles txtServiceIDadd.TextChanged
        txtServiceDescadd.Text = txtServiceIDadd.SelectedValue

    End Sub

    Protected Sub targetAdd_TextChanged(sender As Object, e As EventArgs) Handles ddlchkTargetAdd.TextChanged
        txtTargetIDAdd.Text = ""
        txtTargetDescAdd.Text = ""
        txtReasonAdd.Text = ""
        Try
            For Each item As ListItem In ddlchkTargetAdd.Items

                If item.Selected Then
                    txtTargetDescAdd.Text += item.Value + ","

                    '  txtTargetIDAdd.Text += item.Text.Substring(0, item.Text.IndexOf("-")).TrimEnd + ","
                    txtTargetIDAdd.Text += item.Text + ","
                    txtReasonAdd.Text += item.Text + ":" + item.Value + ","

                End If
            Next
            txtTargetDescAdd.Text = txtTargetDescAdd.Text.Trim().Remove(txtTargetDescAdd.Text.Length - 1)
            ' DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.TrimEnd

            txtTargetIDAdd.Text = txtTargetIDAdd.Text.Trim().Remove(txtTargetIDAdd.Text.Length - 1)

            txtReasonAdd.Text = txtReasonAdd.Text.Trim().Remove(txtReasonAdd.Text.Length - 1)

            txtReasonAdd.Text = txtReasonAdd.Text.Replace(",", vbCrLf)

        Catch ex As Exception
            InsertIntoTblWebEventLog("targetAdd_TextChanged", ex.Message.ToString, txtSvcRcNo.Text)
        End Try
    End Sub

    Protected Sub btnSvcDelete_Click(sender As Object, e As EventArgs) Handles btnSvcDelete.Click
        lblMessage.Text = ""

        Try
            If txtSvcRcNo.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
                lblAlert.Text = "SELECT RECORD TO DELETE"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('SELECT RECORD TO DELETE');", True)

                Return
            End If

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            lblMessage.Text = "ACTION: DELETE SERVICE LOCATION"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('ACTION: DELETE SERVICE LOCATION');", True)

            Dim confirmValue As String = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                'Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT rcno,joborder FROM tblservicerecorddet where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)
              
                If dt.Rows.Count > 0 Then
                    Dim RequestScheduled As Boolean = False

                    If String.IsNullOrEmpty(dt.Rows(0)("JobOrder").ToString) = False Then
                        RequestScheduled = CheckRequestStatus(conn, dt.Rows(0)("JobOrder").ToString)
                    Else
                        RequestScheduled = False
                    End If
                    '  InsertIntoTblWebEventLog("btnSvcDelete", dt.Rows(0)("JobOrder").ToString, RequestScheduled)

                    If RequestScheduled = True Then
                        txtSvcRequestNo.Text = ""
                        txtSvcRequestNo.Text = dt.Rows(0)("JobOrder").ToString
                        '    lblDeleteConfirm.Text = "Request"
                       
                        lblRequestQuery.Text = "Deleting this Service Record Detail will OPEN the Customer Request <br><br>" + dt.Rows(0)("JobOrder").ToString + ".<br><br> Do you wish to proceed?"
                        ' InsertIntoTblWebEventLog("btnSvcDelete", lblQuery.Text, RequestScheduled)
                        mdlPopupRequestSvcDetail.Show()

                    
                    ElseIf RequestScheduled = False Then

                        SvcDelete(conn)
                    End If

                    'Dim command As MySqlCommand = New MySqlCommand

                    'command.CommandType = CommandType.Text
                    'Dim qry As String = "delete from tblservicerecorddet where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)

                    'command.CommandText = qry

                    'command.Connection = conn

                    'command.ExecuteNonQuery()


                    ''  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    'lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE SVC", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRcNo.Text)

                    ''Update tblservicerecord 

                    'UpdatePrice(conn, "DELETE")

                    'UpdatePriceRateSchedule(conn, "DELETE", 0)


                    '    Dim command2 As MySqlCommand = New MySqlCommand

                    '    command2.CommandType = CommandType.Text

                    '    command2.CommandText = "SELECT sum(servicearea) as totalservicearea,sum(AreaCompleted) as totalareacompleted,sum(PriceOfAreaCompleted) as totalPrice,sum(TotalPriceForBaitStation) as totalbaitprice FROM tblservicerecorddet where recordno=@recordno "
                    '    command2.Parameters.Clear()

                    '    command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    '    'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                    '    command2.Connection = conn

                    '    Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                    '    Dim dt2 As New DataTable
                    '    dt2.Load(dr2)

                    '    If dt2.Rows.Count > 0 Then
                    '        'tx tAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                    '        'lblTotalServiceArea.Text = dt2.Rows(0)("totalservicearea").ToString
                    '        'lblTotalAreaCompleted.Text = dt2.Rows(0)("totalareacompleted").ToString
                    '        'lblTotalPrice.Text = dt2.Rows(0)("totalprice").ToString

                    '        If String.IsNullOrEmpty(dt2.Rows(0)("totalPrice").ToString) Then
                    '            lblTotalPrice.Text = 0
                    '        ElseIf dt2.Rows(0)("totalPrice") = 0 Then
                    '            lblTotalPrice.Text = 0
                    '            If String.IsNullOrEmpty(dt2.Rows(0)("totalbaitprice").ToString) = "" Or dt2.Rows(0)("totalbaitprice") = 0 Then
                    '                '  txtAmtBill.Text = 0
                    '            End If

                    '    Else
                    '        If String.IsNullOrEmpty(dt2.Rows(0)("totalbaitprice").ToString) Then
                    '            txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                    '        Else
                    '            txtAmtBill.Text = (dt2.Rows(0)("totalPrice") + dt2.Rows(0)("totalbaitprice")).ToString

                    '        End If
                    '        lblTotalPrice.Text = dt2.Rows(0)("totalPrice").ToString
                    '        End If


                    '    If String.IsNullOrEmpty(dt2.Rows(0)("totalservicearea").ToString) = False Then
                    '        lblTotalServiceArea.Text = 0
                    '    Else
                    '        lblTotalServiceArea.Text = dt2.Rows(0)("totalservicearea").ToString
                    '    End If

                    '    If String.IsNullOrEmpty(dt2.Rows(0)("totalareacompleted").ToString) = False Then
                    '        lblTotalAreaCompleted.Text = 0
                    '    Else
                    '        lblTotalAreaCompleted.Text = dt2.Rows(0)("totalareacompleted").ToString
                    '    End If
                    'End If

                    'Dim command4 As MySqlCommand = New MySqlCommand

                    'command4.CommandType = CommandType.Text

                    'command4.CommandText = "SELECT warranty FROM tblservicerecorddet where recordno=@recordno "
                    'command4.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    ''command4.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                    'command4.Connection = conn

                    'Dim dr4 As MySqlDataReader = command4.ExecuteReader()
                    'Dim dt4 As New DataTable
                    'dt4.Load(dr4)

                    'Dim notes As String = ""
                    'If dt4.Rows.Count > 0 Then
                    '    For i As Int32 = 0 To dt4.Rows.Count - 1
                    '        If i = 0 Then
                    '            notes = dt4.Rows(i)("warranty").ToString
                    '        Else
                    '            notes = notes & vbCrLf & dt4.Rows(i)("warranty").ToString
                    '        End If

                    '    Next

                    'End If


                    'txtDescription.Text = notes
                    'updPanelService1.Update()
                    'If String.IsNullOrEmpty(txtAmtBill.Text) Then
                    '    txtAmtBill.Text = 0
                    'End If
                    'Dim command3 As MySqlCommand = New MySqlCommand

                    'command3.CommandType = CommandType.Text

                    'command3.CommandText = "Update tblServiceRecord set Notes = '" & notes & "',BillAmount = " & txtAmtBill.Text & ",TotalServiceArea = " & lblTotalServiceArea.Text & ",TotalAreaCompleted=" & lblTotalAreaCompleted.Text & ",TotalPriceOfAreaCompleted=" & lblTotalPrice.Text & " where recordno=@recordno "
                    'command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    ''   command3.Parameters.AddWithValue("@notes", notes)
                    'command3.Connection = conn

                    'command3.ExecuteNonQuery()

                    'End - Update tblservicerecord

                End If
                    'conn.Close()


                    ''Catch ex As Exception
                    ''    InsertIntoTblWebEventLog("btnSvcDelete_Click", ex.Message.ToString, txtSvcRcNo.Text)
                    ''End Try
                    'EnableSvcControls()
                    'SqlDataSource2.SelectCommand = "SELECT rcno,RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn FROM tblservicerecorddet where recordno = '" & lblRecordNo1.Text & "'"

                    ''   SqlDataSource2.SelectCommand = "SELECT ServiceID,ServiceDescription,ServiceFrequency,TargetID,TargetDescription,rcno,Action,RemarkOffice,RemarkClient,ServiceArea,PricePerServiceArea,AreaCompleted,PriceOfAreaCompleted,BaitStationInstalled FROM tblservicerecorddet where recordno = '" & lblRecordNo1.Text & "'"

                    'SqlDataSource2.DataBind()
                    'GridView2.DataBind()
                    'MakeSvcNull()
                    'lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
                    'ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('DELETE: RECORD SUCCESSFULLY DELETED');", True)

                End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSvcDelete_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnSvcEdit_Click(sender As Object, e As EventArgs) Handles btnSvcEdit.Click
        Try
            tableedit.CssClass = "Centered"

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            lblMessage.Text = ""
            lblAlert.Text = ""
            If txtSvcRcNo.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('SELECT RECORD TO EDIT');", True)

                Return

            End If
            If ddlStatus.Text = "O" Then
                DisableSvcControls()
                txtSvcMode.Text = "Edit"
                lblMessage.Text = "ACTION: EDIT SERVICE DETAILS"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('ACTION: EDIT SERVICE DETAILS');", True)

           

              
                '   GridView2.EditIndex = GridView2.SelectedIndex
                '    GridView2.SelectedIndex = Convert.ToInt16(txtEditIndex.Text)
                '   txtAction.Text = DirectCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblServiceID"), Label).Text

                '   txtServiceIDedit.SelectedItem.Text = "BAIT STN"
                'DirectCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblServiceID"), Label).Text
                'TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("ddlServices"), DropDownList).SelectedItem.Text
                '  txtServiceDescedit.SelectedItem.Text = TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblServiceDescription"), Label).Text
                'ddlServiceID.Text = DirectCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblServiceID"), Label).Text
                'ddlServiceDesc.Text = DirectCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblServiceDescription"), Label).Text
                'txtFrequencyedit.Text = TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblFrequency"), Label).Text
                'txtTargetIDEdit.Text = TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("lblTargetID"), Label).Text
                'txtTargetDescEdit.Text = TryCast(GridView2.Rows(GridView2.SelectedIndex).FindControl("txtTargetDesc"), Label).Text

            Else
                lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSvcEdit_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    
    Private Sub MakeTechNull()
        ddlTechID.SelectedIndex = 0
        txtTechRcNo.Text = ""
        txtTechCostValue.Text = ""
        txtTechMode.Text = ""
    End Sub

    Private Sub EnableTechControls()
        btnTechSave.Enabled = False
        btnTechSave.ForeColor = System.Drawing.Color.Gray
        btnTechCancel.Enabled = False
        btnTechCancel.ForeColor = System.Drawing.Color.Gray

        btnTechAdd.Enabled = True
        btnTechAdd.ForeColor = System.Drawing.Color.Black
        btnTechEdit.Enabled = False
        btnTechEdit.ForeColor = System.Drawing.Color.Gray
        btnTechDelete.Enabled = False
        btnTechDelete.ForeColor = System.Drawing.Color.Gray
        ddlTechID.Enabled = False
        txtTechCostValue.Enabled = False

    End Sub

    Private Sub DisableTechControls()
        btnTechSave.Enabled = True
        btnTechSave.ForeColor = System.Drawing.Color.Black
        btnTechCancel.Enabled = True
        btnTechCancel.ForeColor = System.Drawing.Color.Black

        btnTechAdd.Enabled = False
        btnTechAdd.ForeColor = System.Drawing.Color.Gray

        btnTechEdit.Enabled = False
        btnTechEdit.ForeColor = System.Drawing.Color.Gray

        btnTechDelete.Enabled = False
        btnTechDelete.ForeColor = System.Drawing.Color.Gray


        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        ddlTechID.Enabled = True
        txtTechCostValue.Enabled = True

    End Sub

    Private Sub MakeItemsIssuedNull()
        ddlItemIDItemsIssued.SelectedIndex = 0
        txtItemsIssuedRcNo.Text = ""
        txtQtyItemsIssued.Text = ""
        txtUnitItemsIssued.Text = ""
        txtRemarksItemsIssued.Text = ""
        txtItemsIssuedMode.Text = ""
    End Sub

    Private Sub EnableItemsIssuedControls()
        btnItemsIssuedSave.Enabled = False
        btnItemsIssuedSave.ForeColor = System.Drawing.Color.Gray
        btnItemsIssuedCancel.Enabled = False
        btnItemsIssuedCancel.ForeColor = System.Drawing.Color.Gray

        btnItemsIssuedAdd.Enabled = True
        btnItemsIssuedAdd.ForeColor = System.Drawing.Color.Black
        btnItemsIssuedEdit.Enabled = False
        btnItemsIssuedEdit.ForeColor = System.Drawing.Color.Gray
        btnItemsIssuedDelete.Enabled = False
        btnItemsIssuedDelete.ForeColor = System.Drawing.Color.Gray

        ddlItemIDItemsIssued.Enabled = False
        txtItemsIssuedRcNo.Enabled = False
        txtQtyItemsIssued.Enabled = False
        txtUnitItemsIssued.Enabled = False
        txtRemarksItemsIssued.Enabled = False
    End Sub

    Private Sub DisableItemsIssuedControls()
        btnItemsIssuedSave.Enabled = True
        btnItemsIssuedSave.ForeColor = System.Drawing.Color.Black
        btnItemsIssuedCancel.Enabled = True
        btnItemsIssuedCancel.ForeColor = System.Drawing.Color.Black

        btnItemsIssuedAdd.Enabled = False
        btnItemsIssuedAdd.ForeColor = System.Drawing.Color.Gray

        btnItemsIssuedEdit.Enabled = False
        btnItemsIssuedEdit.ForeColor = System.Drawing.Color.Gray

        btnItemsIssuedDelete.Enabled = False
        btnItemsIssuedDelete.ForeColor = System.Drawing.Color.Gray

        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        ddlItemIDItemsIssued.Enabled = True
        txtItemsIssuedRcNo.Enabled = True
        txtQtyItemsIssued.Enabled = True
        txtUnitItemsIssued.Enabled = True
        txtRemarksItemsIssued.Enabled = True
    End Sub
    Public TechRcno As String

    Protected Sub GridView3_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView3.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim commandService As MySqlCommand = New MySqlCommand

                commandService.CommandType = CommandType.Text
                commandService.CommandText = "SELECT count(*) as totservicerec FROM tblservicerecordstafftimesheet where RecordNo = '" & txtServiceRecord.Text & "' and Staffid ='" & e.Row.Cells(1).Text & "'"
                commandService.Connection = conn

                Dim drService As MySqlDataReader = commandService.ExecuteReader()
                Dim dtService As New DataTable
                dtService.Load(drService)

                'Dim btn1 As Button = DirectCast(sender, Button)

                'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
                'Dim rowindex1 As Integer = e.Row.RowIndex

                'Dim btn1 As Button = TryCast(GridView3.Rows(0).FindControl("btnTimeSheet"), Label).Text

                'Dim btn1 As Button = TryCast(GridView3.SelectedRow.Cells(6).FindControl("btnTimeSheet"), Button)
                Dim btn1 As Button = TryCast(e.Row.FindControl("btnTimeSheet"), Button)

                'If dtService.Rows.Count > 0 Then
                If dtService.Rows(0)("totservicerec").ToString > 0 Then
                    btn1.Text = "TS [" & dtService.Rows(0)("totservicerec").ToString & "]"
                    'e.Row.Cells(6).Text = "Arghya"
                    'btnServiceRecords.Enabled = True
                    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
                Else
                    btn1.Text = "ADD TS"
                End If

                conn.Close()
                conn.Dispose()

                'Dim ContractEndDate As Date
                'Dim CategoryId As String
                'CategoryId = ""


                'If e.Row.Cells(14).Text.Trim = "F" Then
                '    e.Row.Cells(14).Text = "FIXED"
                'Else
                '    e.Row.Cells(14).Text = "CONTINUOUS"
                'End If



                'If e.Row.Cells(19).Text.Trim <> "&nbsp;" Then
                '    If String.IsNullOrEmpty(e.Row.Cells(19).Text.Trim) = False Then
                '        ContractEndDate = e.Row.Cells(19).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(e.Row.Cells(25).Text.Trim) = False Then
                '        CategoryId = e.Row.Cells(25).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                '        If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                '            isInPage = True

                '            txtSelectedRow.Text = e.Row.RowIndex
                '        End If
                '    End If


                '    If CategoryId = "CONTRACT" And IsDate(ContractEndDate) = True Then
                '        Dim noofdays As Integer
                '        noofdays = DateDiff(DateInterval.Day, Now(), ContractEndDate)

                '        If noofdays < 0 Then
                '            e.Row.ForeColor = Color.Red
                '        End If

                '        If noofdays > 0 And noofdays < 30 Then
                '            e.Row.ForeColor = Color.Green
                '        End If

                '        If noofdays > 30 And noofdays < 60 Then
                '            e.Row.ForeColor = Color.Blue
                '        End If
                '    End If
                'End If


            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'InsertIntoTblWebEventLog("SERVICE - " + Session("UserID"), "GridView1_RowDataBound", ex.Message.ToString, txtContractNo.Text)
            InsertIntoTblWebEventLog("GridView3_RowDataBound", ex.Message.ToString, txtTechRcNo.Text)
            Exit Sub
        End Try
    End Sub


    Protected Sub GridView3_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView3.SelectedIndexChanged
        Try
            MakeTechNull()
            Dim editindex As Integer = GridView3.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then
                editindex = txtSelectedIndex.Text
            Else
                editindex = GridView3.SelectedIndex
            End If
            '''''''''''''''''''''''
            If editindex < 0 Then

                btnTechAdd.Enabled = True
                btnTechAdd.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If


            'rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            'txtSvcRcNo.Text = rcno.ToString()


            '''''''''''''''''''''''''''''
            rcno = DirectCast(GridView3.Rows(editindex).FindControl("Label1"), Label).Text

            txtTechRcNo.Text = rcno.ToString()
            'ddlTechID.SelectedValue = GridView3.SelectedRow.Cells(1).Text


            ddlTechID.Items.Clear()
            ddlTechID.Items.Add("--SELECT--")
            Dim qry As String
            qry = " SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff  ORDER BY StaffId"
            PopulateDropDownList(qry, "IDNAME", "StaffId", ddlTechID)



            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT StaffId, StaffName, CostValue FROM tblservicerecordStaff where rcno=" & Convert.ToInt32(txtTechRcNo.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                ddlTechID.Text = dt.Rows(0)("StaffID").ToString
                txtTechCostValue.Text = dt.Rows(0)("CostValue").ToString
                'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
                'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            End If


            '''''''''''''''''''''''
            'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
            'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            'DisableTechControls()
            If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then

            Else
                EnableTechControls()

                btnTechEdit.Enabled = True
                btnTechEdit.ForeColor = System.Drawing.Color.Black
                btnTechDelete.Enabled = True
                btnTechDelete.ForeColor = System.Drawing.Color.Black
            End If

            If chkInactive.Checked = True Then
                btnTechAdd.Enabled = False
                btnTechAdd.ForeColor = System.Drawing.Color.Gray
                btnTechEdit.Enabled = False
                btnTechEdit.ForeColor = System.Drawing.Color.Gray
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("GridView3_SelectedIndexChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnTechCancel_Click(sender As Object, e As EventArgs) Handles btnTechCancel.Click
        MakeTechNull()
        enabletechcontrols()
        txtTechMode.Text = ""

    End Sub

    Protected Sub btnTechAdd_Click(sender As Object, e As EventArgs) Handles btnTechAdd.Click
        Try
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            DisableTechControls()

            MakeTechNull()
            lblMessage.Text = "ACTION: ADD SERVICE TECHNICIAN"

            'SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status = 'O' ORDER BY StaffId"
            'SqlDSStaff.DataBind()
            'ddlTechID.DataSourceID = "SqlDSStaff"
            'ddlTechID.DataBind()

            txtTechMode.Text = "Add"
            ddlTechID.Focus()
            CheckTab()


            ddlTechID.Items.Clear()
            ddlTechID.Items.Add("--SELECT--")
            Dim qry As String
            qry = " SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status = 'O' ORDER BY StaffId"
            PopulateDropDownList(qry, "IDNAME", "StaffId", ddlTechID)


            'mdlPopupStatusSearch.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTechAdd_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnTechSave_Click(sender As Object, e As EventArgs) Handles btnTechSave.Click
        Dim d As Double
        If String.IsNullOrEmpty(txtTechCostValue.Text) = False Then
            If Double.TryParse(txtTechCostValue.Text, d) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID COST VALUE"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID COST VALUE');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtTechCostValue.Text = "0"
        End If
        If ddlTechID.Text = "--SELECT--" Or ddlTechID.Text = "-1" Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "SELECT STAFF TO PROCEED"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('SELECT STAFF TO PROCEED');", True)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If

        If txtTechMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno,staffid FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
                command1.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                command1.Parameters.AddWithValue("@staffid", ddlTechID.SelectedValue.ToString)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "SELECTED STAFF ALREADY ASSIGNED FOR THIS SERVICE"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblservicerecordstaff(StaffID,StaffName,CostValue,RecordNo,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn,CreateDeviceID,CreateSource,FlowFrom,FlowTo,EditSource,DeleteStatus,LastEditDevice)VALUES(@StaffID,@StaffName,@CostValue,@RecordNo,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn,@CreateDeviceID,@CreateSource,@FlowFrom,@FlowTo,@EditSource,@DeleteStatus,@LastEditDevice);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@StaffID", ddlTechID.SelectedValue.ToString)
                        Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                        name = name.Replace("]", "")
                        name = name.Replace("[", "")
                        command.Parameters.AddWithValue("@StaffName", name.ToUpper)
                        command.Parameters.AddWithValue("@CostValue", txtTechCostValue.Text.ToUpper)
                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        command.Parameters.AddWithValue("@CreateDeviceID", "")
                        command.Parameters.AddWithValue("@CreateSource", "")
                        command.Parameters.AddWithValue("@FlowFrom", "")
                        command.Parameters.AddWithValue("@FlowTo", "")
                        command.Parameters.AddWithValue("@EditSource", "")
                        command.Parameters.AddWithValue("@DeleteStatus", "")
                        command.Parameters.AddWithValue("@LastEditDevice", "")

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@StaffID", ddlTechID.SelectedValue.ToString)
                        Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                        name = name.Replace("]", "")
                        name = name.Replace("[", "")
                        command.Parameters.AddWithValue("@StaffName", name)
                        command.Parameters.AddWithValue("@CostValue", txtTechCostValue.Text)
                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        command.Parameters.AddWithValue("@CreateDeviceID", "")
                        command.Parameters.AddWithValue("@CreateSource", "")
                        command.Parameters.AddWithValue("@FlowFrom", "")
                        command.Parameters.AddWithValue("@FlowTo", "")
                        command.Parameters.AddWithValue("@EditSource", "")
                        command.Parameters.AddWithValue("@DeleteStatus", "")
                        command.Parameters.AddWithValue("@LastEditDevice", "")
                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    txtTechRcNo.Text = command.LastInsertedId
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD SAVE TECH", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""

                End If
                conn.Close()

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnTechSave_Click ADD SAVE", ex.Message.ToString, txtTechRcNo.Text)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableTechControls()

        ElseIf txtTechMode.Text = "Edit" Then
            If txtTechRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT recordno,staffid FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid and rcno<>" & Convert.ToInt32(txtTechRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                command2.Parameters.AddWithValue("@staffid", ddlTechID.SelectedValue.ToString)
                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    '   MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "SELECTED STAFF ALREADY ASSIGNED FOR THIS SERVICE"


                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT staffid FROM tblservicerecordstaff where rcno=" & Convert.ToInt32(txtTechRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblservicerecordstaff SET StaffID = @StaffID,StaffName = @StaffName,CostValue = @CostValue,RecordNo = @RecordNo,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtTechRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                            command.Parameters.AddWithValue("@StaffID", ddlTechID.SelectedValue.ToString)
                            Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                            name = name.Replace("]", "")
                            name = name.Replace("[", "")
                            command.Parameters.AddWithValue("@StaffName", name.ToUpper)
                            command.Parameters.AddWithValue("@CostValue", txtTechCostValue.Text.ToUpper)
                            command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                            command.Parameters.AddWithValue("@StaffID", ddlTechID.SelectedValue.ToString)
                            Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                            name = name.Replace("]", "")
                            name = name.Replace("[", "")
                            command.Parameters.AddWithValue("@StaffName", name)
                            command.Parameters.AddWithValue("@CostValue", txtTechCostValue.Text)
                            command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT SAVE TECH", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                    End If
                End If

                conn.Close()
            Catch ex As Exception
                InsertIntoTblWebEventLog("btnTechSave_Click EDIT SAVE", ex.Message.ToString, txtTechRcNo.Text)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableTechControls()

        End If

        '''''''''''''''''''''''

        SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff ORDER BY StaffId"
        SqlDSStaff.DataBind()

        ''''''''''''''''''''''''''

        SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
        SqlDSServiceStaff.DataBind()
        GridView3.DataSourceID = "SqlDSServiceStaff"
        GridView3.DataBind()

        '    MakeTechNull()
        txtTechMode.Text = ""

    End Sub

    Protected Sub btnTechEdit_Click(sender As Object, e As EventArgs) Handles btnTechEdit.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If txtTechRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If

      

        If ddlStatus.Text = "O" Then
            DisableTechControls()
            txtTechMode.Text = "Edit"
            lblMessage.Text = "ACTION: EDIT SERVICE TECHNICIAN"
        Else
            lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If


    End Sub

    Protected Sub btnTechDelete_Click(sender As Object, e As EventArgs) Handles btnTechDelete.Click
        lblMessage.Text = ""

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        If txtTechRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If txtServiceBy.Text.Trim = ddlTechID.Text.Trim Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "'SERVICEBY' TECHNICIAN CANNOT BE DELETED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        lblMessage.Text = "ACTION: DELETE SERVICE TECHNICIAN"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno,staffid FROM tblservicerecordstaff where rcno=" & Convert.ToInt32(txtTechRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblservicerecordstaff where rcno=" & Convert.ToInt32(txtTechRcNo.Text)

                    command.CommandText = qry

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE TECH", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnTechDelete_Click", ex.Message.ToString, txtTechRcNo.Text)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableTechControls()

            SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
            SqlDSServiceStaff.DataBind()
            'GridView3.DataBind()


            SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
            SqlDataSource2.DataBind()
            'GridView2.DataBind()

            GridView3.DataBind()
            MakeTechNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        End If

    End Sub

    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click
        lblAlert.Text = ""
        Dim qry As String = ""
        Dim qry1 As String

        Try
            Dim dt As Date
            If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                If txtSearch1SvcDate.Text = "__/__/____" Then
                Else
                    If Date.TryParseExact(txtSearch1SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtSearch1SvcDate.Text = dt.ToShortDateString
                    Else
                        MessageBox.Message.Alert(Page, "Search Service Date From is invalid", "str")
                        Return
                        Exit Sub
                    End If
                End If
            End If

            Dim dt1 As Date
            If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                If txtSearch2SvcDate.Text = "__/__/____" Then
                Else
                    If Date.TryParseExact(txtSearch2SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt1) Then
                        txtSearch2SvcDate.Text = dt1.ToShortDateString

                    Else
                        MessageBox.Message.Alert(Page, "Search Service Date To is invalid", "str")

                        Return
                        Exit Sub

                    End If
                End If
            End If

            '  txtSearchSvc.Text = ""
            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency"
            'qry = qry + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno <>'' or b.contractno is not null)"

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, "
            'qry = qry + " b.contractno FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno where 1=1 "

            qry1 = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo "
            qry = qry + "  FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1  "


            If String.IsNullOrEmpty(txtSearch1Svc.Text) = False Then
                '   txtSvcRecord.Text = txtSearchSvcRecord.Text
                qry = qry + " and A.recordno like '%" + txtSearch1Svc.Text.Trim + "%'"
                '  qry = qry + " and A.recordno = '" + txtSearch1Svc.Text.Trim + "'"
                '       txtSearchSvc.Text = txtSearchSvc.Text+
            End If
            If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                If txtSearch1SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate >= '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                If txtSearch2SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate <= '" + Convert.ToDateTime(txtSearch2SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If
            If txtFrom.Text = "contract" Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If

            'If String.IsNullOrEmpty(txtSearch1Team.Text) = False Then
            '    qry = qry + " and A.TeamID like '%" + txtSearch1Team.Text.Trim + "%'"
            'End If
            'Multi Select TeamID
            If rdoListView.Checked = True Then
                If String.IsNullOrEmpty(txtSearch1Team.Text) = False Then
                    If txtSearch1Team.Text.IndexOf(",") < 0 Then
                        qry = qry + " and A.TeamID like '%" + txtSearch1Team.Text.Trim + "%'"
                    Else
                        Dim teamIDArray() As String
                        teamIDArray = txtSearch1Team.Text.Split(",")
                        Dim teamIDList As String = ""
                        For Each item In teamIDArray
                            teamIDList = teamIDList + "'" + item.Trim + "',"
                        Next
                        If teamIDList <> "" Then
                            teamIDList = teamIDList.TrimEnd(",")
                        End If

                        qry = qry + " and A.TeamID IN (" + teamIDList + ")"
                    End If

                End If
            ElseIf rdoCalendarView.Checked = True Then

                If String.IsNullOrEmpty(txtSearch1Team.Text) = False Then
                    Dim teamIDArray() As String
                    teamIDArray = txtSearch1Team.Text.Split(",")
                    Dim teamIDList As String = ""
                    For Each item In teamIDArray
                        teamIDList = teamIDList + "'" + item.Trim + "',"
                    Next
                    If teamIDList <> "" Then
                        teamIDList = teamIDList.TrimEnd(",")
                    End If

                    qry = qry + " and A.TeamID IN (" + teamIDList + ")"
                End If
            End If

            If String.IsNullOrEmpty(txtSearch1SvcBy.Text) = False Then
                qry = qry + " and (A.ServiceBy = '" + txtSearch1SvcBy.Text.Trim + "'"
                qry = qry + " or A.Recordno in (select recordno from tblservicerecordstaff where staffid='" + txtSearch1SvcBy.Text.Trim + "'))"
            End If
            If String.IsNullOrEmpty(txtSearch1Incharge.Text) = False Then

                'qry = qry + " and InchargeID = '" + ddlSearchIncharge.Text.Trim + "'"
                qry = qry + " and A.InchargeID = '" + txtSearch1Incharge.Text.Trim + "'"
            End If
            If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                If ddlCompanyGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and A.CompanyGroup = '" + ddlCompanyGrpSearch.Text + "'"
                End If
            End If
            If String.IsNullOrEmpty(ddlContractGrpSearch.Text) = False Then
                If ddlContractGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and B.ContractGroup = '" + ddlContractGrpSearch.Text + "'"
                End If
            End If
            If ddlSearchScheduler.SelectedIndex > 0 Then
                qry = qry + " and A.Scheduler = '" + ddlSearchScheduler.Text.Trim + "'"
            End If


            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                qry = qry + " and A.status in (" + YrStr + ")"

            End If
            'If String.IsNullOrEmpty(txtSearch1AccountID.Text) = False Then
            '    qry = qry + " and (AccountID like '" + txtSearch1AccountID.Text.Trim + "%'"
            '    qry = qry + " OR CustCode like '%" + txtSearch1AccountID.Text.Trim + "%')"
            'End If

            If String.IsNullOrEmpty(txtSearch1AccountID.Text.Trim) = False Then
                qry = qry + " and A.LocationID like '" + txtSearch1AccountID.Text.Trim + "%'"
            End If

            If String.IsNullOrEmpty(lblContract1.Text.Trim) = False Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If


            'If String.IsNullOrEmpty(txtSearchLocationID.Text) = False Then
            '    qry = qry + " and LocationID = '" + txtSearchLocationID.Text.Trim + "'"
            'End If

            If String.IsNullOrEmpty(txtSearch1ClientName.Text.Trim) = False Then
                txtSearch1ClientName.Text = txtSearch1ClientName.Text.Replace("'", "\\'")
                qry = qry + " and A.CustName like '%" + txtSearch1ClientName.Text.Trim + "%'"
                '   qry = qry + " and CustName like @name"
            End If

            If rdbSearchBillStatus.SelectedItem.Value = "Billed" Then
                qry = qry + " and ((A.Billno <>'') and (A.Billno is not NULL)) "
            ElseIf rdbSearchBillStatus.SelectedItem.Value = "UnBilled" Then
                qry = qry + " and ((A.Billno= '') or (A.Billno is NULL))"
            End If

            If ChkIncludeZeroValue.Checked = False Then
                qry = qry + " and A.BillAmount > 0.00"
            End If

            '30.05.22
            If ddlSearchScheduleType.SelectedIndex > 0 Then
                qry = qry + " and A.ScheduleType = '" + ddlSearchScheduleType.Text + "'"
            End If

            '30.05.22

            If String.IsNullOrEmpty(txtSvcAddressSearch.Text.Trim) = False Then
                txtSvcAddressSearch.Text = txtSvcAddressSearch.Text.Replace("'", "\\'")

                qry = qry + " and (A.address1 like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addbuilding like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addstreet like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addpostal like '%" + txtSvcAddressSearch.Text + "%')"
            End If


            If ChkShowEmailSent.Checked = False Then
                qry = qry + " and A.EmailSent = False"
            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then

                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    qry = qry + " and A.location in (" + YrStr + ")"
                    'selFormula = selFormula + " and {tblsales1.CompanyGroup} in [" + YrStr + "]"
                    'If selection = "" Then
                    '    selection = "CompanyGroup : " + YrStr
                    'Else
                    '    selection = selection + ", CompanyGroup : " + YrStr
                    'End If
                Else
                    qry = qry & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                'qry = qry & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & Session("SecGroupAuthority") & "')"
            End If
            Dim grdqry As String = qry
            'qry = qry + " order by ServiceDate desc,recordno limit " & txtLimit.Text
            qry = qry + " order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC limit " & txtLimit.Text
            txt.Text = qry1 + qry

            'a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno

            'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
            txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,A.AddStreet,a.AddCountry,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

            txtGrid.Text = txtGrid.Text + qry

            '  InsertIntoTblWebEventLog("btnQuickSearch_Click", txt.Text, "1")
            SqlDataSource1.SelectCommand = txt.Text
            '    InsertIntoTblWebEventLog("btnQuickSearch_Click", txt.Text, "2")

            SqlDataSource1.DataBind()
            '    InsertIntoTblWebEventLog("btnQuickSearch_Click", txt.Text, "3")

            GridView1.DataBind()
            '       InsertIntoTblWebEventLog("btnQuickSearch_Click", txt.Text, "4")

            GridView1.PageIndex = 0

            '      InsertIntoTblWebEventLog("btnQuickSearch_Click", txt.Text, "5")


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim gridcount As Int16 = GridviewCount(conn, grdqry)

            conn.Close()
            conn.Dispose()

            If gridcount > Convert.ToInt16(txtLimit.Text) Then
                lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

                mdlPopupMsg.Show()
            End If


            hdnqueryselected.Value = qry
            'hdnqueryselected.Value = qryCalender
            Dim validTeamIdCount As Integer

            If rdoCalendarView.Checked Then

                'Dim caldt As Date
                'If String.IsNullOrEmpty(txtCalendarDisplay.Text) = False Then
                '    If txtCalendarDisplay.Text = "__/__/____" Then
                '    Else
                '        If Date.TryParseExact(txtCalendarDisplay.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, caldt) Then
                '            txtCalendarDisplay.Text = dt.ToShortDateString
                '        Else
                '            MessageBox.Message.Alert(Page, "Search Calendar Date is invalid", "str")
                '            Return
                '            Exit Sub
                '        End If
                '    End If
                'End If

                If txtSearch1Team.Text = "" Then
                    'ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowalertMessage", "alertMessage('Team Id cannot be empty');", True)
                Else
                    ' Checked the values which is entered in Team TextBox Start
                    If String.IsNullOrEmpty(txtSearch1Team.Text.Trim) = False Then
                        Dim team As List(Of String) = txtSearch1Team.Text.Split(",").ToList()
                        'For Each str As String In team
                        '    For Each item As GridViewRow In gvTeamNew.Rows
                        '        If (item.Cells(2).Text.Trim.ToUpper()).Contains(str.ToUpper()) Then
                        '            DirectCast(item.FindControl("cbmultiTeam"), CheckBox).Checked = True
                        '            validTeamIdCount = validTeamIdCount + 1
                        '        End If
                        '    Next
                        'Next
                        Dim list1 As New List(Of TeamSeach)

                        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        Dim invalidTeamId As String = ""

                        Using con As New MySqlConnection(constr)
                            Using cmd As New MySqlCommand()
                                cmd.CommandType = CommandType.Text
                                Dim insQuery As String = ""
                                insQuery = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where Status <> 'N'  order by TeamName"
                                cmd.CommandText = insQuery
                                cmd.CommandTimeout = 0
                                cmd.Connection = con
                                con.Open()
                                Dim reader As MySqlDataReader = cmd.ExecuteReader()
                                Do While reader.Read()
                                    Dim item As New TeamSeach()
                                    If Not IsDBNull(reader("TeamId")) Then
                                        item.TeamId = CType(reader("TeamId"), String)
                                    Else
                                        item.TeamId = ""
                                    End If

                                    If Not IsDBNull(reader("TeamName")) Then
                                        item.TeamName = CType(reader("TeamName"), String)
                                    Else
                                        item.TeamName = ""
                                    End If

                                    If Not IsDBNull(reader("InChargeId")) Then
                                        item.InChargeId = CType(reader("InChargeId"), String)
                                    Else
                                        item.InChargeId = ""
                                    End If

                                    If Not IsDBNull(reader("Vehnos")) Then
                                        item.Vehnos = CType(reader("Vehnos"), String)
                                    Else
                                        item.Vehnos = ""
                                    End If

                                    If Not IsDBNull(reader("Supervisor")) Then
                                        item.Supervisor = CType(reader("Supervisor"), String)
                                    Else
                                        item.Supervisor = ""
                                    End If

                                    If Not IsDBNull(reader("Status")) Then
                                        item.Status = CType(reader("Status"), String)
                                    Else
                                        item.Status = ""
                                    End If

                                    If Not IsDBNull(reader("Location")) Then
                                        item.Location = CType(reader("Location"), String)
                                    Else
                                        item.Location = ""
                                    End If
                                    list1.Add(item)
                                Loop
                            End Using
                        End Using

                        For Each str As String In team
                            If list1.Any(Function(x) x.TeamId.Trim().ToLower() = str.Trim().ToLower()) Then
                                validTeamIdCount = validTeamIdCount + 1
                            Else
                                invalidTeamId = invalidTeamId + str + ","
                            End If
                        Next

                        If invalidTeamId <> "" Then
                            invalidTeamId = invalidTeamId.TrimEnd(",")
                        End If

                        If validTeamIdCount = team.Count Then
                            ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
                            divlegendshow.Visible = True
                            divbuttonsShow.Visible = True
                        Else
                            ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowalertMessage", "alertMessage('" + invalidTeamId + " TeamId(s) is invalid. Please enter the valid Team Id(s)');", True)
                        End If
                    End If
                    ' Checked the values which is entered in Team TextBox End                    
                End If

            End If
            'ChangedDisplayRadioButton()

            If txtRowCount.Text = "0" Then
                MakeMeNull()
            End If
            '  lblMessage.Text = "SEARCH CRITERIA : " + txtSearchSvc.Text + " <br/>NUMBER OF RECORDS FOUND : " + txtRowCount.Text

            'If txtRowCount.Text < 21 Then
            '    lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text
            'Else
            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            'End If


            btnUpdateWorkLoad_Click(sender, e)

            '''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                'Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                'MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"
                    txtRcno.Text = TryCast(GridView1.Rows(0).FindControl("Label1"), Label).Text
                    RetrieveData()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0

                    btnEditSchDate.Visible = True
                    btnEditTeam.Visible = True
                    btnEditServInst.Visible = True
                    btnEditRemarks.Visible = True
                    btnEditClientSign.Visible = True
                    btnEditCollectedAmount.Visible = True
                    btnEditOurRef.Visible = True

                    btnEditManualContractNo.Visible = True
                    btnEditPONo.Visible = True
                    btnEditWorkOrderNo.Visible = True

                    tableadd.Visible = False
                    tableaddHeader.Visible = False
                    tableedit.CssClass = "dummybutton"

                    CheckTab()
                    tb1.ActiveTabIndex = 0
                    'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                    AccessControl()
                    'End If

                    'GridView1_SelectedIndexChanged(sender, e)
                End If
            End If


            ''''''''''''''''''''''''''''
            chkStatusSearch.ClearSelection()
            'lblContract.Visible = False
            'lblContract1.Text = ""
            '    txtSearchSvc.Text = "Search Here"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnQuickSearch_Click", ex.Message.ToString, qry)
            lblAlert.Text = ex.Message.ToString
            '  lblAlert.Text = txt.Text
        End Try
    End Sub

    Protected Sub btnTeamSearch_Click(sender As Object, e As ImageClickEventArgs)
        Try

            Dim strsql As String
            strsql = ""

            mdlPopUpTeamNew.TargetControlID = "btnTeamSearch"
            txtModal.Text = "TeamSearch"
            'If String.IsNullOrEmpty(txtSearch1Team.Text.Trim) = False Then
            '    txtPopupTeamSearch.Text = txtSearch1Team.Text.Trim
            '    txtPopUpTeam.Text = txtPopupTeamSearch.Text

            '    strsql = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            '    End If
            '    strsql = strsql + " order by TeamName"
            '    SqlDSTeam.SelectCommand = strsql

            '    'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
            '    SqlDSTeam.DataBind()
            '    gvTeam.DataBind()
            'Else
            '    'txtPopUpTeam.Text = ""
            '    'txtPopupTeamSearch.Text = ""

            '    'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"
            '    strsql = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where Status <> 'N' "

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            '    End If
            '    strsql = strsql + " order by TeamName"
            '    SqlDSTeam.SelectCommand = strsql

            '    SqlDSTeam.DataBind()
            '    gvTeam.DataBind()
            'End If

            ' If Else Part is Commented Because of Team List Have to be List the whole Teams Whenever click on the Team Search
            strsql = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where Status <> 'N' "

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            End If
            strsql = strsql + " order by TeamName"

            gvTeamNew.DataSource = Nothing

            SqlDSTeamNew.SelectCommand = strsql
            SqlDSTeamNew.DataBind()
            gvTeamNew.DataBind()

            ' Checked the values which is entered in Team TextBox Start
            If String.IsNullOrEmpty(txtSearch1Team.Text.Trim) = False Then
                Dim team As List(Of String) = txtSearch1Team.Text.Split(",").ToList()
                Dim SelectedRow As String = ""
                hdnTeamIDList.Value = ""
                For Each str As String In team
                    For Each item As GridViewRow In gvTeamNew.Rows
                        Dim isContain As Boolean = False

                        'If (item.Cells(2).Text.Trim.ToUpper()).Contains(str.ToUpper()) Then
                        If (item.Cells(2).Text.Trim.ToUpper() = str.Trim().ToUpper()) Then
                            DirectCast(item.FindControl("cbmultiTeam"), CheckBox).Checked = True

                            'SelectedRow = SelectedRow & "'" & item.Cells(2).Text & "',"
                            'hdnTeamIDList.Value = hdnTeamIDList.Value + item.Cells(2).Text & ","
                        End If
                    Next

                    SelectedRow = SelectedRow + str & ","
                    hdnTeamIDList.Value = hdnTeamIDList.Value & "'" & str & "',"

                Next
                If SelectedRow <> "" Then
                    SelectedRow = SelectedRow.TrimEnd(",")
                    txtPopUpTeamNew.Text = SelectedRow
                    hdnTeamIDList.Value = hdnTeamIDList.Value.TrimEnd(",")
                    'txtPopupTeamSearch.Text = SelectedRow
                End If

                btnPopUpTeamSearchNew_Click1(sender, e)
            Else
                txtPopUpTeamNew.Text = "Search Here for Team, Incharge or ServiceBy"
            End If
            ' Checked the values which is entered in Team TextBox End

            mdlPopUpTeamNew.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTeamSearch_Click", ex.Message.ToString, txtSearch1Team.Text)
        End Try
    End Sub

    Protected Sub btnSvcBySearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnSvcBySearch.Click

        'SqlDSStaffID = SELECT StaffId,Name FROM tblstaff ORDER BY STAFFID - 16.12.17
        Dim strsql As String
        strsql = ""

        mdlPopupStaff.TargetControlID = "btnSvcBySearch"
        txtModal.Text = "SvcBySearch"
        Try
            If String.IsNullOrEmpty(txtSearch1SvcBy.Text.Trim) = False Then
                txtPopupStaffSearch.Text = txtSearch1SvcBy.Text.Trim
                txtPopUpStaff.Text = txtPopupStaffSearch.Text
                'SqlDSStaffID.SelectCommand = "SELECT StaffId, Name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%'  order by staffid"

                strsql = "SELECT StaffId, Name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                strsql = strsql + " order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT StaffId, Name From tblstaff order by staffid"
                strsql = "SELECT StaffId, Name From tblstaff where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If

            mdlPopupStaff.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSvcBySearch_Click", ex.Message.ToString, txtSearch1SvcBy.Text)
        End Try
    End Sub

    Protected Sub btnInchargeSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnInchargeSearch.Click
        mdlPopupStaff.TargetControlID = "btnInchargeSearch"
        txtModal.Text = "InchargeSearch"

        Dim strsql As String
        strsql = ""
        lblAlert.Text = ""
        Try
            If String.IsNullOrEmpty(txtSearch1Incharge.Text.Trim) = False Then
                txtPopupStaffSearch.Text = txtSearch1Incharge.Text.Trim
                txtPopUpStaff.Text = txtPopupStaffSearch.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT distinct StaffID, Name From tblstaff where ((staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%') or (name like '%" + txtPopupStaffSearch.Text + "%')) "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

                strsql = "SELECT distinct StaffID, Name  From tblstaff where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnInchargeSearch_Click", ex.Message.ToString, txtSearch1Incharge.Text)
        End Try

        mdlPopupStaff.Show()
    End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()


            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    If item.Value = "ALL" Then
                    Else
                        YrStrList.Add(item.Value)
                    End If

                End If
            Next


            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            If String.IsNullOrEmpty(YrStr) = True Then
                Dim message As String = "alert('PLEASE SELECT A STATUS')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                mdlPopupStatusSearch.Show()

                Exit Sub
            End If

            txtSearch1Status.Text = YrStr
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnStatusSearch_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnAccountIDSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnAccountIDSearch.Click
        txtClientModal.Text = "ID"
        Try
            If String.IsNullOrEmpty(txtSearch1AccountID.Text.Trim) = False Then
                txtPpclient.Text = txtSearch1AccountID.Text
                txtPpClientSearch.Text = txtPpclient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClientSearch.SelectCommand = "SELECT B.CompanyId as ID,A.name,A.accountid,A.contactperson, B.LocationId, B.Address1 as ServiceAddress1,B.ContractGroup, B.serviceName, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.COMPANYID Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PERSONid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.ServiceName, D.PersonGroupD as CompanyGroupD, C.Location  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PERSONid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                Else
                    SqlDSClientSearch.SelectCommand = "SELECT B.CompanyId as ID,A.name,A.accountid,A.contactperson, B.LocationId, B.Address1 as ServiceAddress1,B.ContractGroup, B.serviceName, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.COMPANYID Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PERSONid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.ServiceName, D.PersonGroupD as CompanyGroupD, C.Location  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PERSONid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                End If
           
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()
            Else
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClientSearch.SelectCommand = "SELECT B.CompanyId as ID,A.name,A.accountid,A.contactperson, B.LocationId, B.Address1 as ServiceAddress1,B.ContractGroup, B.serviceName, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.PersonId as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C  Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and D.Accountid <> '')   ORDER BY AccountId, LocationId"
                Else
                    SqlDSClientSearch.SelectCommand = "SELECT B.CompanyId as ID,A.name,A.accountid,A.contactperson, B.LocationId, B.Address1 as ServiceAddress1,B.ContractGroup, B.serviceName, B.CompanyGroupD, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.PersonId as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C  Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and D.Accountid <> '')   ORDER BY AccountId, LocationId"
                End If

              
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnAccountIDSearch_Click", ex.Message.ToString, txtSearch1AccountID.Text)
        End Try
        mdlPpClientSearch.Show()

    End Sub

    Protected Sub btnAccountNameSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnAccountNameSearch.Click
        txtClientModal.Text = "Name"

        'If String.IsNullOrEmpty(txtSearch1ClientName.Text.Trim) = False Then
        '    txtPpclient.Text = txtSearch1ClientName.Text
        '    txtPpClientSearch.Text = txtPpclient.Text
        '    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + txtPpclient.Text.Trim + "%' order by contname"
        '    SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where Name like '" + txtPpclient.Text.Trim + "%')"
        '    SqlDSClientSearch.DataBind()
        '    gvClientSearch.DataBind()
        'Else
        '    '  SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 order by contname"
        '    SqlDSClientSearch.SelectCommand = "SELECT id,name,accountid,contactperson FROM tblcompany union SELECT id,name,accountid,contactperson FROM tblperson"

        '    SqlDSClientSearch.DataBind()
        '    gvClientSearch.DataBind()
        'End If
        'mdlPpClientSearch.Show()
        Try
            If String.IsNullOrEmpty(txtSearch1ClientName.Text.Trim) = False Then
                txtPpclient.Text = txtSearch1ClientName.Text
                txtPpClientSearch.Text = txtPpclient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.Personid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                Else
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.Personid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                End If
             
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()
            Else
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, C.Location From tblperson C  Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and D.Accountid <> '')   ORDER BY AccountId, LocationId"
                Else
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName, A.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName, C.Location From tblperson C  Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and D.Accountid <> '')   ORDER BY AccountId, LocationId"
                End If

          
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnAccountNameSearch_Click", ex.Message.ToString, txtSearch1ClientName.Text)
        End Try
        mdlPpClientSearch.Show()
    End Sub

    Protected Sub gvClientSearch_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClientSearch.PageIndexChanging
        Try
            If txtPpClientSearch.Text.Trim = "" Then

                '  SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblcontactmaster where rcno <>0 order by contname"
                'SqlDSClientSearch.SelectCommand = "SELECT id,name,accountid,contactperson FROM tblcompany union SELECT id,name,accountid,contactperson FROM tblperson"
                '  SqlDSClientSearch.SelectCommand = "SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1 From tblperson C, tblPersonLocation D  ORDER BY AccountId, LocationId"
                SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName From tblperson C  Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and D.Accountid <> '')   ORDER BY AccountId, LocationId"


            Else
                If txtClientModal.Text = "ID" Then
                    '     SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and (ContID like '" + txtPpclient.Text.Trim + "%' OR ACCOUNTID Like '%" + txtPpclient.Text.Trim + "%') order by contname"
                    'SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%')"
                    '    SqlDSClientSearch.SelectCommand = "SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.CompanyID Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1 From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '%" + txtPpclient.Text.Trim + "%' OR D.PersonID Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.Personid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"

                Else
                    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + txtPpclient.Text.Trim + "%' order by contname"
                    'SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where Name like '" + txtPpclient.Text.Trim + "%')"
                    '   SqlDSClientSearch.SelectCommand = "SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.CompanyID Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1 From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '%" + txtPpclient.Text.Trim + "%' OR D.PersonID Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"
                    SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.serviceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.serviceName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.Personid Like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId"

                End If

            End If


            gvClientSearch.PageIndex = e.NewPageIndex

            mdlPpClientSearch.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("gvClientSearch_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvClientSearch_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClientSearch.SelectedIndexChanged
        Try
            If txtClientModal.Text = "ID" Then
                'If (gvClientSearch.SelectedRow.Cells(2).Text = "&nbsp;") Then
                '    txtSearch1AccountID.Text = ""
                '    If (gvClientSearch.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '        txtSearch1AccountID.Text = ""
                '    Else
                '        txtSearch1AccountID.Text = gvClientSearch.SelectedRow.Cells(1).Text.Trim
                '    End If

                'Else
                '    txtSearch1AccountID.Text = gvClientSearch.SelectedRow.Cells(2).Text.Trim
                'End If

                If (gvClientSearch.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtSearch1ClientName.Text = ""
                Else
                    txtSearch1ClientName.Text = Server.HtmlDecode(gvClientSearch.SelectedRow.Cells(4).Text.Trim)
                End If


                If (gvClientSearch.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtSearch1AccountID.Text = ""
                Else
                    txtSearch1AccountID.Text = gvClientSearch.SelectedRow.Cells(2).Text.Trim
                End If

            Else

                If (gvClientSearch.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtSearch1AccountID.Text = ""
                Else
                    txtSearch1AccountID.Text = gvClientSearch.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClientSearch.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtSearch1ClientName.Text = ""
                Else
                    txtSearch1ClientName.Text = Server.HtmlDecode(gvClientSearch.SelectedRow.Cells(4).Text.Trim)
                End If

                'txtSearch1AccountID.Text = gvClientSearch.SelectedRow.Cells(3).Text.Trim

            End If
            mdlPpClientSearch.Hide()

        Catch ex As Exception
            InsertIntoTblWebEventLog("gvClientSearch_SelectedIndexChanged", ex.Message.ToString, gvClientSearch.SelectedRow.Cells(2).Text.Trim)
        End Try
    End Sub

    Protected Sub btnppClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnppClientReset.Click
        Try
            txtPpclient.Text = "Search Here for AccountID or Client details"
            txtPpClientSearch.Text = ""
            '  SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblcontactmaster where rcno <>0 order by contname"
            'SqlDSClientSearch.SelectCommand = "SELECT id,name,accountid,contactperson FROM tblcompany union SELECT id,name,accountid,contactperson FROM tblperson"
            SqlDSClientSearch.SelectCommand = "SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.ServiceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  union SELECT D.Personid as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.ServiceName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '')  ORDER BY AccountId, LocationId"

            SqlDSClientSearch.DataBind()
            gvClientSearch.DataBind()
            mdlPpClientSearch.Show()
            txtIsPopUp.Text = "ClientSearch"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnppClientReset_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub txtPpclient_TextChanged(sender As Object, e As EventArgs) Handles txtPpclient.TextChanged
        Try
            If txtPpclient.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                txtPpClientSearch.Text = txtPpclient.Text
                SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%')"

                'If txtClientModal.Text = "ID" Then
                '    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and (ContID like '" + txtPpclient.Text.Trim + "%' OR ACCOUNTID Like '%" + txtPpclient.Text.Trim + "%') order by contname"
                '    SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%')"

                'Else
                '    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + txtPpclient.Text.Trim + "%' order by contname"
                '    SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where Name like '" + txtPpclient.Text.Trim + "%')"

                'End If
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()

            End If

            txtPpclient.Text = "Search Here for AccountID or Client details"
            mdlPpClientSearch.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPpclient_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub txtSearch1Status_TextChanged(sender As Object, e As EventArgs) Handles txtSearch1Status.TextChanged

    End Sub

    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged
        Try
            RetrieveGrdCustRequest()

            'lblServiceDetailMessage.Text = ""
            If tb1.ActiveTabIndex <> 0 Then
                If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                End If

                If String.IsNullOrEmpty(txtSvcRecord.Text) Then
                    MessageBox.Message.Alert(Page, "Select a Service record to proceed", "str")
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                End If
            End If

            'Start : tab1 - Service Details
            If tb1.ActiveTabIndex = 1 Then
                If txtSvcRecord.Text = "" Or String.IsNullOrEmpty(txtSvcRecord.Text) Then
                    MakeSvcNull()
                End If
                If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then
                    btnSvcAdd.Enabled = False
                    btnSvcAdd.ForeColor = System.Drawing.Color.Gray
                    btnClientImport.Enabled = False
                    btnClientImport.ForeColor = System.Drawing.Color.Gray
                    btnSvcEdit.Enabled = False
                    btnSvcEdit.ForeColor = System.Drawing.Color.Gray
                    btnSvcDelete.Enabled = False
                    btnSvcDelete.ForeColor = System.Drawing.Color.Gray

                End If
                ''''''''''''''

                SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID,TargetDescription, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
                SqlDataSource2.DataBind()
                GridView2.DataBind()

                'If GridView2.Rows.Count = 0 Then
                '    lblServiceDetailMessage.Text = "THE SERVICE RECORD HAS NO SERVICE DETAILS YET, PLEASE ADD THE SERVICE DETAILS SO THAT IT CAN BE DOWNLOADED ON MOBILE APP."
                'End If

                'SELECT rcno where RecordNo = @RecordNo

                If tb1.ActiveTabIndex = 1 Then
                    If GridView2.Rows.Count = 0 Then
                        txtSelectedIndex.Text = "-1"
                    Else
                        txtSelectedIndex.Text = "0"


                        GridView2_SelectedIndexChanged(New Object(), New EventArgs)
                        OnSelectedIndexChanged2(New Object(), New EventArgs)
                    End If

                End If

                ''''''''''''''
            End If

            'End : tab1 - Service Details


            'Start : tab2 - Pest Count
            If tb1.ActiveTabIndex = 2 Then
                If txtSvcRecord.Text = "" Or String.IsNullOrEmpty(txtSvcRecord.Text) Then
                    MakePestCountNull()
                End If

                If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then
                    btnPestCountAdd.Enabled = False
                    btnPestCountAdd.ForeColor = System.Drawing.Color.Gray
                    btnPestCountEdit.Enabled = False
                    btnPestCountEdit.ForeColor = System.Drawing.Color.Gray
                    btnPestCountDelete.Enabled = False
                    btnPestCountDelete.ForeColor = System.Drawing.Color.Gray

                End If
                lblRecordNoPestCount.Text = txtSvcRecord.Text

                ddlFloorLevel.Items.Clear()
                ddlFloorLevel.Items.Add("--SELECT--")
                'ddlFloorLevel.Items.Add("N.A")

                Dim qry As String
                qry = " SELECT FloorPlanID, FloorPlanName FROM tblcustomerlocationfloorplan where LocationID ='" & txtLocationID.Text & "' ORDER BY FloorPlanName"
                PopulateDropDownList(qry, "FloorPlanName", "FloorPlanID", ddlFloorLevel)

                SqlDSPestCount.SelectCommand = "SELECT Rcno, RecordNo, PestID, Qty, Location, TrapType, TrapSerialNo, Gender, LifeStage, Species, Remarks, LevelofInfestation FROM tblservicerecordpest where recordno = '" + txtSvcRecord.Text + "' order by PestID"
                SqlDSPestCount.DataBind()

                GrdViewPestCount.DataSourceID = "SqlDSPestCount"
                GrdViewPestCount.DataBind()



                If GrdViewPestCount.Rows.Count = 0 Then
                    txtSelectedIndex.Text = "-1"
                Else
                    txtSelectedIndex.Text = "0"

                    grdViewPestCount_SelectedIndexChanged(New Object(), New EventArgs)
                    OnSelectedIndexChangedgrdViewPestCount(New Object(), New EventArgs)
                    'OnSelectedIndexChanged2(New Object(), New EventArgs)
                End If


            End If


            'End : tab2 - Pest Count

            'Start : tab3 - Technician Details

            If tb1.ActiveTabIndex = 3 Then
                If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then
                    btnTechAdd.Enabled = False
                    btnTechAdd.ForeColor = System.Drawing.Color.Gray
                    btnTechEdit.Enabled = False
                    btnTechEdit.ForeColor = System.Drawing.Color.Gray
                    btnTechDelete.Enabled = False
                    btnTechDelete.ForeColor = System.Drawing.Color.Gray

                End If

                '''''''''''''''''''''

                SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
                SqlDSServiceStaff.DataBind()
                GridView3.DataBind()


              


                If tb1.ActiveTabIndex = 2 Then
                    If GridView3.Rows.Count = 0 Then
                        txtSelectedIndex.Text = "-1"
                    Else
                        txtSelectedIndex.Text = "0"


                        GridView3_SelectedIndexChanged(New Object(), New EventArgs)
                        OnSelectedIndexChanged3(New Object(), New EventArgs)
                    End If

                End If

                '''''''''''''''''''''
            End If

            'End : tab3 - Technician Details

            'Start : tab4 - Items Issued Details
            '''''''''''''''''''''' Items Issued

            If tb1.ActiveTabIndex = 4 Then
                If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then
                    btnItemsIssuedAdd.Enabled = False
                    btnItemsIssuedAdd.ForeColor = System.Drawing.Color.Gray
                    btnItemsIssuedEdit.Enabled = False
                    btnItemsIssuedEdit.ForeColor = System.Drawing.Color.Gray
                    btnItemsIssuedDelete.Enabled = False
                    btnItemsIssuedDelete.ForeColor = System.Drawing.Color.Gray

                End If

                '''''''''''''''''''''
                lblRecordNoItemsIssued.Text = txtSvcRecord.Text
                sqlDSItemsIssued.SelectCommand = "SELECT Rcno, RecordNo, ItemID, ItemName, Qty, UnitMS, Remarks FROM tblservicerecordissueditem where recordno = '" + txtSvcRecord.Text + "' order by ItemID"
                sqlDSItemsIssued.DataBind()

                grdViewItemsIssued.DataSourceID = "sqlDSItemsIssued"
                grdViewItemsIssued.DataBind()


                If tb1.ActiveTabIndex = 3 Then
                    If grdViewItemsIssued.Rows.Count = 0 Then
                        txtSelectedIndex.Text = "-1"
                    Else
                        txtSelectedIndex.Text = "0"

                        grdViewItemsIssued_SelectedIndexChanged(New Object(), New EventArgs)
                        OnSelectedIndexChangedgrdViewItemsIssued(New Object(), New EventArgs)

                        'GridView3_SelectedIndexChanged(New Object(), New EventArgs)
                        'OnSelectedIndexChanged3(New Object(), New EventArgs)
                    End If

                End If

                '''''''''''''''''''''
            End If

            '''''''''''''''''''''' Items issued

            'End : tab4 - Items Issued Details

            If tb1.ActiveTabIndex = 5 Then
                'BindGrid()
            End If

            'If tb1.ActiveTabIndex = 3 Then
            '    SqlDSNotesMaster.SelectCommand = "select Rcno, KeyModule, KeyField, StaffID, Notes, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn from tblnotes where keyfield = '" + txtSvcRecord.Text + "'"
            '    SqlDSNotesMaster.DataBind()
            '    gvNotesMaster.DataBind()
            'End If


            'Start : tab18 - Notes Details
            If tb1.ActiveTabIndex = 8 Then
                SqlDSNotesMaster.SelectCommand = "select Rcno, KeyModule, KeyField, StaffID, Notes, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn from tblnotes where keyfield = '" + txtSvcRecord.Text + "'"
                SqlDSNotesMaster.DataBind()
                gvNotesMaster.DataBind()
            End If

            'End : tab8 - Notes Details

            If tb1.ActiveTabIndex <> 1 Then

                If txtSvcMode.Text = "Add" Or txtSvcMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 1
                End If

            End If

            If tb1.ActiveTabIndex <> 4 Then
                If txtTechMode.Text = "Add" Or txtTechMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 2
                End If

            End If
            'If tb1.ActiveTabIndex <> 3 Then
            '    If txtAreaMode.Text = "Add" Or txtAreaMode.Text = "Edit" Then
            '        lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        tb1.ActiveTabIndex = 3
            '    End If

            'End If
            If tb1.ActiveTabIndex <> 8 Then
                If txtNotesMode.Text = "Add" Or txtNotesMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 7
                End If

            End If

            If tb1.ActiveTabIndex = 0 Then
                If String.IsNullOrEmpty(txtRcno.Text) = False Then
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT notes,billamount FROM tblservicerecord where rcno=" & Convert.ToInt32(txtRcno.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        txtDescription.Text = dt.Rows(0)("Notes").ToString
                        txtAmtBill.Text = dt.Rows(0)("BillAmount").ToString
                    End If
                    conn.Close()
                End If
            End If

            'Start: tab7 - File Upload

            If tb1.ActiveTabIndex = 6 Then
                'BindGrid()
                'lblServicePhotosCount.Text = "Service Photos [" & gvImages.Rows.Count & "]"

                DisplayNoOfPhoto()

                lblPhotoMessage.Text = ""

                'iframeid.Attributes.Add("src", "about:blank")

                'SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
                'gvUpload.DataSourceID = "SqlDSUpload"
                'gvUpload.DataBind()
                'lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
            End If

            'Start: tab7 - File Upload

            If tb1.ActiveTabIndex = 7 Then
                iframeid.Attributes.Add("src", "about:blank")

                SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
                gvUpload.DataSourceID = "SqlDSUpload"
                gvUpload.DataBind()
                lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
            End If

            'End: tab7 - File Upload

            '  SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
            '   gvUpload.DataSourceID = "SqlDSUpload"
            '   gvUpload.DataBind()
            'If tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Then
            '    GridView1.CssClass = "dummybutton"
            '    btnADD.CssClass = "dummybutton"
            '    btnCopy.CssClass = "dummybutton"
            '    btnEdit.CssClass = "dummybutton"
            '    btnDelete.CssClass = "dummybutton"
            '    btnStatus.CssClass = "dummybutton"
            '    btnQuit.CssClass = "dummybutton"
            '    btnFilter.CssClass = "dummybutton"
            '    btnResSearch.CssClass = "dummybutton"
            '    btnQuickSearch.CssClass = "dummybutton"
            '    btnUpdate.CssClass = "dummybutton"
            '    txtSearchSvc.CssClass = "dummybutton"
            '    btnPrint.CssClass = "dummybutton"
            '    tablesearch.Visible = False
            '    '  btnUpdateContract.CssClass = "dummybutton"

            'Else
            '    GridView1.CssClass = "visiblebutton"
            '    btnADD.CssClass = "visiblebutton"
            '    btnCopy.CssClass = "visiblebutton"
            '    btnEdit.CssClass = "visiblebutton"
            '    btnDelete.CssClass = "visiblebutton"
            '    btnStatus.CssClass = "visiblebutton"
            '    btnQuit.CssClass = "visiblebutton"
            '    btnFilter.CssClass = "visiblebutton"
            '    btnResSearch.CssClass = "visiblebutton"
            '    btnQuickSearch.CssClass = "visiblebutton"
            '    btnUpdate.CssClass = "visiblebutton"
            '    txtSearchSvc.CssClass = "visiblebutton"
            '    btnPrint.CssClass = "visiblebutton"
            '    tablesearch.Visible = True
            '    '    btnUpdateContract.CssClass = "visiblebutton"

            'End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("tb1_ActiveTabChanged", ex.Message.ToString, tb1.ActiveTabIndex.ToString)
        End Try
    End Sub

  

    Private Sub DisplayNoOfPhoto()
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT count(Rcno) as NoOfPhoto FROM tblservicephoto where recordno='" & txtSvcRecord.Text.Trim & "' and (ServiceRecordRcNo is null or ServiceRecordRcNo='' or ServiceRecordRcno=0)"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'dt.Rows(0)("LocationId").ToString
            If dt.Rows.Count > 0 Then
                lblServicePhotosCount.Text = "Service Photos [" & Val(dt.Rows(0)("NoOfPhoto").ToString).ToString & "]"
            Else
                lblServicePhotosCount.Text = "Service Photos"
            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("DisplayNoOfPhoto", ex.Message.ToString, txtTechRcNo.Text)
            lblAlert.Text = ex.Message.ToString
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try



    End Sub

    'Private Sub DisplayPestNoOfPhoto()
    '    Try
    '        Dim IsLock As String
    '        IsLock = ""

    '        Dim connLocation As MySqlConnection = New MySqlConnection()

    '        connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
    '        connLocation.Open()

    '        Dim command1 As MySqlCommand = New MySqlCommand

    '        command1.CommandType = CommandType.Text
    '        command1.CommandText = "SELECT count(Rcno) as NoOfPhoto FROM tblservicephoto where recordno='" & txtSvcRecord.Text.Trim & "' and ServiceRecordRcNo is null"
    '        command1.Connection = connLocation

    '        Dim dr As MySqlDataReader = command1.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)
    '        'dt.Rows(0)("LocationId").ToString
    '        If dt.Rows.Count > 0 Then
    '            lblServicePhotosCount.Text = "Service Photos [" & Val(dt.Rows(0)("NoOfPhoto").ToString).ToString & "]"
    '        End If

    '        connLocation.Close()
    '        connLocation.Dispose()
    '        command1.Dispose()
    '        dt.Dispose()
    '        dr.Close()
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("DisplayNoOfPhoto", ex.Message.ToString, txtTechRcNo.Text)
    '        lblAlert.Text = ex.Message.ToString
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try



    'End Sub
    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        Try
            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    For Each item As ListItem In chkStatusSearch.Items
                        If item.Value = str Then
                            item.Selected = True
                        End If
                    Next
                Next


            End If
            mdlPopupStatusSearch.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSearch1Status_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpClientSearch_Click1(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        If txtPopupLocation.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter search text", "str")
        Else
            txtPopupLocationSearch.Text = txtPopupLocation.Text
            Dim qry As String
            Try
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup FROM tblcompanylocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup FROM tblpersonlocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                Else
                    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                    Return
                End If

                SqlDSLocation.SelectCommand = qry
                SqlDSLocation.DataBind()
                gvLocation.DataBind()
                mdlPopupLocation.Show()
                txtIsPopUp.Text = "Location"

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnPopUpClientSearch_Click1", ex.Message.ToString, qry)
            End Try
        End If

        txtPopupLocation.Text = "Search Here for Location Address, Postal Code or Description"
    End Sub

    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If txtRcno.Text = "" Then

                '  MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO PRINT"
                Return

            End If
            Session("gridsqlserviceprint") = txt.Text
            Session("servicefrom") = "serviceprint"
            Session.Add("SvcRecordNo", txtSvcRecord.Text)
            Session.Add("Query", txt.Text)
            Session.Add("SvcRcNo", txtRcno.Text)
            Session.Add("Email", txtSvcCP1Email.Text + ";" + txtSvcCP2Email.Text)

            GenerateWarranty()

            '   InsertIntoTblWebEventLog("btnPrint", txtDisplayRecordsLocationwise.Text, txtLocation.Text)
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT * FROM tbllocation where LocationID='" + txtLocation.Text + "'"
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(dt2.Rows(0)("BranchName")) = False Then
                        Session.Add("BranchName", dt2.Rows(0)("BranchName"))
                        Session.Add("OfficeAddress", dt2.Rows(0)("OfficeAddress1").ToString)
                        Session.Add("BusinessRegNumber", dt2.Rows(0)("BusinessRegistrationNumber").ToString)
                        Session.Add("GSTNumber", dt2.Rows(0)("GSTNumber").ToString)
                        Session.Add("TelNumber", dt2.Rows(0)("TelephoneNumber").ToString)
                        Session.Add("FaxNumber", dt2.Rows(0)("FaxNumber").ToString)
                        Session.Add("Website", dt2.Rows(0)("Website").ToString)
                        Session.Add("CompanyEmail", dt2.Rows(0)("Email").ToString)
                        Session.Add("InvoiceEmail", dt2.Rows(0)("InvoiceEmail").ToString)
                    Else

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblcompanyinfo where rcno=1"
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then
                            Session.Add("CompanyName", dt.Rows(0)("CompanyName"))
                            Session.Add("OfficeAddress", dt.Rows(0)("OfficeAddress1").ToString)
                            Session.Add("BusinessRegNumber", dt.Rows(0)("BusinessRegistrationNumber").ToString)
                            Session.Add("GSTNumber", dt.Rows(0)("GSTNumber").ToString)
                            Session.Add("TelNumber", dt.Rows(0)("TelephoneNumber").ToString)
                            Session.Add("FaxNumber", dt.Rows(0)("FaxNumber").ToString)
                            Session.Add("Website", dt.Rows(0)("Website").ToString)
                            Session.Add("CompanyEmail", dt.Rows(0)("Email").ToString)
                            Session.Add("InvoiceEmail", dt.Rows(0)("InvoiceEmail").ToString)
                        End If

                        dt.Clear()
                        dr.Close()
                        command1.Dispose()

                    End If


                End If

                dt2.Clear()
                dr2.Close()
                command2.Dispose()

            End If

            'Response.Redirect("servicedetails.aspx")
            'SqlDataSource1
            mdlPopupPrint.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPrint_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub GenerateWarranty()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT rcno,frequency,targetid FROM tblservicerecorddet where recordno='" & txtSvcRecord.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            Dim warranty As String = ""
            Dim targetid As String = ""
            Dim targetdesc As String = ""

            If dt.Rows.Count > 0 Then
                For i As Int16 = 0 To dt.Rows.Count - 1
                    warranty = ""
                    If dt.Rows(i)("Frequency").ToString <> "" Then
                        warranty = dt.Rows(i)("Frequency").ToString
                    End If

                    targetid = dt.Rows(i)("TargetID").ToString
                    If String.IsNullOrEmpty(targetid) = False Then
                        Dim stringList As List(Of String) = targetid.Split(","c).ToList()
                        Dim YrStrList As List(Of [String]) = New List(Of String)()
                        targetdesc = ""

                        For Each str As String In stringList

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text

                            command2.CommandText = "SELECT descrip1 FROM tbltarget where targetid='" & str.Trim & "'"
                            command2.Connection = conn

                            Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                            Dim dt2 As New System.Data.DataTable
                            dt2.Load(dr2)

                            If dt2.Rows.Count > 0 Then
                                If targetdesc = "" Then
                                    targetdesc = dt2.Rows(0)("descrip1").ToString
                                Else
                                    targetdesc = targetdesc + "," + dt2.Rows(0)("descrip1").ToString
                                End If

                            End If

                            command2.Dispose()
                            dt2.Clear()
                            dt2.Dispose()
                            dr2.Close()

                        Next
                        warranty = warranty + " - " + targetdesc

                    End If

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    command.CommandText = "update tblservicerecorddet set TargetDescription=@desc where rcno=" & dt.Rows(i)("RcNo")
                    command.Parameters.Clear()
                    command.Parameters.AddWithValue("@desc", warranty)
                    command.Connection = conn
                    command.ExecuteNonQuery()
                    command.Dispose()

                Next



            End If
            command1.Dispose()
            dt.Clear()
            dt.Dispose()
            dr.Close()

            conn.Close()
            conn.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("GenerateWarranty", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub


    Protected Sub txtPpClientSearch_TextChanged(sender As Object, e As EventArgs) Handles txtPpClientSearch.TextChanged
        Try
            If txtPpClientSearch.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                txtPpclient.Text = txtPpClientSearch.Text
                '    If txtClientModal.Text = "ID" Then
                '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and (ContID like '" + txtPpclient.Text.Trim + "%' OR ACCOUNTID Like '%" + txtPpclient.Text.Trim + "%') order by contname"
                'SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%')"
                SqlDSClientSearch.SelectCommand = "SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.ServiceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.Name Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.ServiceName  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PersonID Like '%" + txtPpclient.Text.Trim + "%' OR C.Name Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%' ORDER BY AccountId, LocationId"

                'Else
                '    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + txtPpclient.Text.Trim + "%' order by contname"
                '    SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where Name like '" + txtPpclient.Text.Trim + "%')"

                'End If
                SqlDSClientSearch.DataBind()
                gvClientSearch.DataBind()

            End If

            txtPpClientSearch.Text = "Search Here for AccountID or Client details"
            mdlPpClientSearch.Show()
            txtIsPopUp.Text = "ClientSearch"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPpClientSearch_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnEditSchDate_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditSchDate.Click
        Try


            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""

            If txtRcno.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT SCHEDULE DATE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return

            End If

            If ddlStatus.SelectedValue.ToString = "O" Then
                txtEditSchDate.Text = txtScheduleDate.Text
                txtEditSchTimeIn.Text = txtScheduleTimeIn.Text
                txtEditSchTimeOut.Text = txtScheduleTimeOut.Text
                txtEditRemarks.Text = txtRemarks.Text
                ddlEditScheduleType.Text = ddlScheduleType.Text
                txtEditServiceInstruction.Text = txtInstruction.Text

                txtEditTeam1.Text = txtTeam.Text
                txtEditIncharge1.Text = txtIncharge.Text
                txtEditSvcBy1.Text = txtServiceBy.Text
                txtEditVehNo1.Text = txtVehNo.Text
                txtOldSvcBy.Text = txtServiceBy.Text
                txtEditSupervisor1.Text = txtSupervisor.Text

                txtEditRecordNo.Text = txtSvcRecord.Text
                txtEditClientName.Text = txtServiceName.Text
                txtEditServiceAddress.Text = txtAddress.Text & ", " & txtPostal.Text

                txtCharCountEditRemarks.Visible = True
                txtCharCountEditSI.Visible = True

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this);</Script>", False)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this);</Script>", False)

                mdlPopupSchDate.Show()


            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditSchDate_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnSchSave_Click(sender As Object, e As EventArgs) Handles btnSchSave.Click
        lblAlertSchDate.Text = ""

        If ddlScheduleType.Text = ddlEditScheduleType.Text And txtRemarks.Text = txtEditRemarks.Text And txtScheduleDate.Text = txtEditSchDate.Text And txtScheduleTimeIn.Text = txtEditSchTimeIn.Text And txtScheduleTimeOut.Text = txtEditSchTimeOut.Text And txtEditServiceInstruction.Text = txtInstruction.Text And txtTeam.Text = txtEditTeam1.Text And txtIncharge.Text = txtEditIncharge1.Text And txtServiceBy.Text = txtEditSvcBy1.Text And txtVehNo.Text = txtEditVehNo1.Text And txtSupervisor.Text = txtEditSupervisor1.Text Then
            lblAlertSchDate.Text = "NO CHANGES MADE"
            mdlPopupSchDate.Show()
        End If

        If String.IsNullOrEmpty(txtEditSchDate.Text) Then
            '  MessageBox.Message.Alert(Page, "Service Date cannot be blank!!!", "str")
            lblAlertSchDate.Text = "SCHEDULE DATE CANNOT BE BLANK"
            mdlPopupSchDate.Show()

            Return
        End If

        'If Validation() = False Then
        '    Return
        'End If

        Dim t As DateTime
        Dim d As Double
        Dim dt As Date
        If String.IsNullOrEmpty(txtEditSchDate.Text) = False Then
            If Date.TryParseExact(txtEditSchDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                txtEditSchDate.Text = dt.ToShortDateString

            Else
                ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                lblAlertSchDate.Text = "SCHEDULE DATE IS INVALID"
                mdlPopupSchDate.Show()

                Return
            End If
        End If

        If String.IsNullOrEmpty(txtEditSchTimeIn.Text) = False Then
            If txtEditSchTimeIn.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtEditSchTimeIn.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                    lblAlertSchDate.Text = "SCHEDULE TIME IN IS INVALID"
                    mdlPopupSchDate.Show()

                    Return
                End If
            End If
        End If


        If String.IsNullOrEmpty(txtEditSchTimeOut.Text) = False Then
            If txtEditSchTimeOut.Text = "__:__" Then

            Else
                If (DateTime.TryParse(txtEditSchTimeOut.Text, t) = True) Then
                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                    lblAlertSchDate.Text = "SCHEDULE TIME OUT IS INVALID"
                    mdlPopupSchDate.Show()

                    Return
                End If
            End If
        End If


        ' '''''''''''''''''

        'Dim regTime As New System.Text.RegularExpressions.Regex("^([0-1][0-9]|[2][0-3]):([0-5][0-9])$")
        'Dim IsValidTime As Boolean

        'IsValidTime = True

        'If regTime.IsMatch(txtEditSchTimeIn.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID SCHEDULED TIME IN"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If


        'IsValidTime = True

        'If regTime.IsMatch(txtEditSchTimeOut.Text) Then
        '    IsValidTime = True
        'Else
        '    IsValidTime = False
        'End If

        'If IsValidTime = False Then
        '    lblAlert.Text = "PLEASE ENTER VALID SCHEDULED TIME OUT"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If

        ' '''''''''
        Dim sqlstr As String
        sqlstr = ""

        Try

            If Month(Convert.ToDateTime(txtEditSchDate.Text)) <> Month(Convert.ToDateTime(txtScheduleDate.Text)) Then
                If String.IsNullOrEmpty(txtEditRemarks.Text) = True Then
                    lblAlertSchDate.Text = "SCHEDULE MONTH HAS BEEN CHANGED. PLEASE ENTER REMARKS"
                    mdlPopupSchDate.Show()
                    Return
                End If

            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            'command.CommandText = "UPDATE tblservicerecord SET ScheduleType = @ScheduleType, Remarks = @Remarks, SchServiceDate=@SchServiceDate, ServiceDate=@SchServiceDate1, SchServiceTime=@SchServiceTime,SchServiceTimeOut=@SchServiceTimeoUT,ServiceDate=@SchServiceDate, Comments=@Comments,TeamID=@TeamID,InchargeID=@InchargeID,ServiceBy=@ServiceBy,VehNo=@VehNo,Supervisor=@Supervisor,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.CommandText = "UPDATE tblservicerecord SET ScheduleType = @ScheduleType, Remarks = @Remarks, SchServiceDate=@SchServiceDate, ServiceDate=@SchServiceDate1, SchServiceTime=@SchServiceTime,SchServiceTimeOut=@SchServiceTimeoUT,ServiceDate=@SchServiceDate, Comments=@Comments,TeamID=@TeamID,InchargeID=@InchargeID,ServiceBy=@ServiceBy,VehNo=@VehNo,Supervisor=@Supervisor,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where RecordNo = '" & txtEditRecordNo.Text & "'"
            'command.CommandText = sqlstr

            command.Parameters.Clear()

            If String.IsNullOrEmpty(txtEditSchDate.Text) Then
                command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
            Else
                command.Parameters.AddWithValue("@SchServiceDate", Convert.ToDateTime(txtEditSchDate.Text).ToString("yyyy-MM-dd"))
            End If

            If String.IsNullOrEmpty(txtEditSchDate.Text) Then
                command.Parameters.AddWithValue("@SchServiceDate1", DBNull.Value)
            Else
                command.Parameters.AddWithValue("@SchServiceDate1", Convert.ToDateTime(txtEditSchDate.Text).ToString("yyyy-MM-dd"))
            End If


            If String.IsNullOrEmpty(txtEditSchTimeIn.Text) Then
                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)
            ElseIf txtEditSchTimeIn.Text = "__:__" Then
                command.Parameters.AddWithValue("@SchServiceTime", DBNull.Value)

            Else
                command.Parameters.AddWithValue("@SchServiceTime", Convert.ToDateTime(txtEditSchTimeIn.Text).ToString("HH:mm"))

            End If
            If String.IsNullOrEmpty(txtEditSchTimeOut.Text) Then
                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)
            ElseIf txtEditSchTimeOut.Text = "__:__" Then
                command.Parameters.AddWithValue("@SchServiceTimeOut", DBNull.Value)

            Else
                command.Parameters.AddWithValue("@SchServiceTimeOut", Convert.ToDateTime(txtEditSchTimeOut.Text).ToString("HH:mm"))

            End If

            If ddlEditScheduleType.SelectedIndex > 0 Then
                command.Parameters.AddWithValue("@ScheduleType", ddlEditScheduleType.Text)
            Else
                command.Parameters.AddWithValue("@ScheduleType", "")
            End If

            If String.IsNullOrEmpty(txtEditServiceInstruction.Text) = False Then
                'command.Parameters.AddWithValue("@Comments", Left(txtEditServiceInstruction.Text.ToUpper.Trim, 500))
                command.Parameters.AddWithValue("@Comments", (txtEditServiceInstruction.Text.ToUpper.Trim))
            Else
                command.Parameters.AddWithValue("@Comments", "")
            End If
            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command.Parameters.AddWithValue("@Remarks", txtEditRemarks.Text.ToUpper.Trim)
            command.Parameters.AddWithValue("@TeamID", txtEditTeam1.Text.ToUpper)
            command.Parameters.AddWithValue("@VehNo", txtEditVehNo1.Text.ToUpper)
            command.Parameters.AddWithValue("@ServiceBy", txtEditSvcBy1.Text.ToUpper)
            command.Parameters.AddWithValue("@InChargeID", txtEditIncharge1.Text.ToUpper)
            command.Parameters.AddWithValue("@Supervisor", txtEditSupervisor1.Text.ToUpper)
            command.Connection = conn

            command.ExecuteNonQuery()

            command.Dispose()

            sqlstr = txtEditSchDate.Text + " Time In: " + txtEditSchTimeIn.Text + " Time Out: " + txtEditSchTimeOut.Text + " Sch. Type: " + ddlEditScheduleType.Text + " Team: " + txtEditTeam1.Text.ToUpper + " In-Charge: " + txtEditIncharge1.Text.ToUpper + " Service By: " + txtEditSvcBy1.Text.ToUpper + " Supervisor: " + txtEditSupervisor1.Text.ToUpper + " Veh No.: " + txtEditVehNo1.Text.ToUpper + " Remarks: " + txtEditRemarks.Text.ToUpper + " SI: " + (txtEditServiceInstruction.Text.ToUpper.Trim) + " where RecordNo = " & txtEditRecordNo.Text
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "SCHSAVE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", Right(sqlstr, 2000), txtRcno.Text)


            ''Update staff details based on the modification of ServiceBy

            UpdateServiceTechnician(conn, txtEditSvcBy1.Text)

            If Month(Convert.ToDateTime(txtEditSchDate.Text)) <> Month(Convert.ToDateTime(txtScheduleDate.Text)) Then

                InsertSchDateChange(conn)

                'Dim mailsub As String = ""
                'Dim mailbody As String = ""
                'Dim toemail As String = ""

                'mailsub += "SCHEDULED DATE CHANGE NOTIFICATION - " + txtSvcRecord.Text
                ''mail body 
                'mailbody += "SCHEDULED DATE CHANGE <br/>"
                'mailbody += "----------------------------------------- <br/>"
                'mailbody += "RecordNo : " + txtSvcRecord.Text + "<br/>"
                'If String.IsNullOrEmpty(txtScheduleTimeIn.Text) And String.IsNullOrEmpty(txtScheduleTimeOut.Text) Then
                '    mailbody += "Previous Scheduled Date : " + txtScheduleDate.Text + "<br/>"
                'Else
                '    mailbody += "Previous Scheduled Date : " + txtScheduleDate.Text + " &emsp;&emsp; Time : " + txtScheduleTimeIn.Text + " to " + txtScheduleTimeOut.Text + "<br/>"
                'End If

                'If String.IsNullOrEmpty(txtEditSchTimeIn.Text) And String.IsNullOrEmpty(txtEditSchTimeOut.Text) Then
                '    mailbody += "New ScheduledDate : " + txtEditSchDate.Text + "<br/>"
                'Else
                '    mailbody += "New ScheduledDate : " + txtEditSchDate.Text + " &emsp;&emsp; Time : " + txtEditSchTimeIn.Text + " to " + txtEditSchTimeOut.Text + "<br/>"
                'End If

                'mailbody += "Reason for Reschedule : " + txtEditRemarks.Text + "<br/>"
                'mailbody += "Location ID : " + txtLocationID.Text + "<br/>"
                'mailbody += "Name : " + txtEditClientName.Text + "<br/>"
                'mailbody += "Service Address : " + txtEditServiceAddress.Text + "<br/>"
                'mailbody += "Service Description : " + txtDescription.Text + "<br/>"
                'mailbody += "Service Value : " + txtAmtBill.Text + "<br/>"
                'mailbody += "Action By : " + txtCreatedBy.Text + "<br/>"

                'toemail = getNotificationEmail(conn)

                ''   mailbody += "Send Notifications To : " + toemail + "<br/>"

                'SendNotificationEmail(conn, toemail, mailbody, mailsub)

            End If


            If txtScheduleDate.Text = txtEditSchDate.Text And txtScheduleTimeIn.Text = txtEditSchTimeIn.Text And txtScheduleTimeOut.Text = txtEditSchTimeOut.Text And txtServiceBy.Text = txtEditSvcBy1.Text Then

            Else
                '  InsertIntoTblWebEventLog("SchSave", conn.State.ToString, txtCreatedBy.Text)
                CustRequestUpdateReScheduledStatus(conn)

            End If

            'Dim command2 As MySqlCommand = New MySqlCommand

            'command2.CommandType = CommandType.Text
            'command2.CommandText = "SELECT * FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
            'command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            'command2.Parameters.AddWithValue("@staffid", txtOldSvcBy.Text)
            'command2.Connection = conn

            'Dim dr1 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt1 As New DataTable
            'dt1.Load(dr1)

            'If dt1.Rows.Count > 0 Then
            '    Dim command3 As MySqlCommand = New MySqlCommand

            '    command3.CommandType = CommandType.Text
            '    command3.CommandText = "SELECT * FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
            '    command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            '    command3.Parameters.AddWithValue("@staffid", txtEditSvcBy1.Text)
            '    command3.Connection = conn

            '    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            '    Dim dt3 As New DataTable
            '    dt3.Load(dr3)

            '    ' check if new Technician is available in tblservicerecordstaff
            '    'if available, then delete the old Technician name

            '    If dt3.Rows.Count > 0 Then

            '        Dim command1 As MySqlCommand = New MySqlCommand

            '        command1.CommandType = CommandType.Text
            '        Dim qry As String = "delete from tblservicerecordstaff WHERE  rcno=" & dt1.Rows(0)("rcno")

            '        command1.CommandText = qry
            '    Else
            '        'if new technician name not available then replace the old technician with new technician

            '     Dim command1 As MySqlCommand = New MySqlCommand

            '    command1.CommandType = CommandType.Text
            '    Dim qry As String = "UPDATE tblservicerecordstaff SET StaffID = @StaffID,StaffName = @StaffName WHERE  rcno=" & dt1.Rows(0)("rcno")

            '    command1.CommandText = qry
            '    command1.Parameters.Clear()

            '    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

            '        command1.Parameters.AddWithValue("@StaffID", txtEditSvcBy1.Text.ToUpper)

            '        command1.Parameters.AddWithValue("@StaffName", txtEditSvcBy1.Text.ToUpper)

            '    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

            '        command1.Parameters.AddWithValue("@StaffID", txtEditSvcBy1.Text)

            '        command1.Parameters.AddWithValue("@StaffName", txtEditSvcBy1.Text)
            '    End If


            '    command1.Connection = conn

            '        command1.ExecuteNonQuery()
            '    End If


            'End If

            conn.Close()
            conn.Dispose()
            'command.Dispose()
            txtScheduleDate.Text = txtEditSchDate.Text
            txtScheduleTimeIn.Text = txtEditSchTimeIn.Text
            txtScheduleTimeOut.Text = txtEditSchTimeOut.Text
            txtActSvcDate.Text = txtEditSchDate.Text

            ddlScheduleType.Text = ddlEditScheduleType.Text
            txtRemarks.Text = txtEditRemarks.Text

            txtInstruction.Text = txtEditServiceInstruction.Text

            txtTeam.Text = txtEditTeam1.Text
            txtIncharge.Text = txtEditIncharge1.Text
            txtServiceBy.Text = txtEditSvcBy1.Text
            txtVehNo.Text = txtEditVehNo1.Text
            txtSupervisor.Text = txtEditSupervisor1.Text

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            'lblServiceDetailMessage.Text = ""
            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupSchDate.Hide()

            'btnEditRemarks.Focus()
            If hdnqueryselected.Value = "" Then
                GridView1.SelectedIndex = Convert.ToInt16(txtGridIndex.Text)
            End If

            btnUpdateWorkLoad_Click(sender, e)
            'InsertNewLog()
            'GridView1.SelectedIndex
            'GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSchSave_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try

    End Sub

    Private Sub InsertSchDateChange(conn As MySqlConnection)
        Dim command As MySqlCommand = New MySqlCommand

        command.CommandType = CommandType.Text
        Dim qry As String = "INSERT INTO tblservicerecordschdatechange(RecordNo,ServiceDate,CustName,LocationID,"
        qry = qry + "ServiceAddress,ServiceValue,ServiceDescription,ReasonforReschedule,OldSchDate,NewSchDate,"
        qry = qry + "OldSchTimeIn,OldSchTimeOut,NewSchTimeIn,NewSchTimeOut,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
        qry = qry + "values(@RecordNo,@ServiceDate,@CustName,@LocationID,"
        qry = qry + "@ServiceAddress,@ServiceValue,@ServiceDescription,@ReasonforReschedule,@OldSchDate,@NewSchDate,"
        qry = qry + "@OldSchTimeIn,@OldSchTimeOut,@NewSchTimeIn,@NewSchTimeOut,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"

        command.CommandText = qry
        command.Parameters.Clear()

        command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(txtActSvcDate.Text))
        command.Parameters.AddWithValue("@CustName", txtEditClientName.Text)
        command.Parameters.AddWithValue("@LocationID", txtLocationID.Text)
        command.Parameters.AddWithValue("@ServiceAddress", txtEditServiceAddress.Text)
        command.Parameters.AddWithValue("@ServiceValue", Convert.ToDecimal(txtAmtBill.Text))
        command.Parameters.AddWithValue("@ServiceDescription", txtDescription.Text)
        command.Parameters.AddWithValue("@ReasonforReschedule", txtEditRemarks.Text)
        command.Parameters.AddWithValue("@OldSchDate", Convert.ToDateTime(txtScheduleDate.Text))
        command.Parameters.AddWithValue("@NewSchDate", Convert.ToDateTime(txtEditSchDate.Text))
        command.Parameters.AddWithValue("@OldSchTimeIn", txtScheduleTimeIn.Text)
        command.Parameters.AddWithValue("@OldSchTimeOut", txtScheduleTimeOut.Text)
        command.Parameters.AddWithValue("@NewSchTimeIn", txtEditSchTimeIn.Text)
        command.Parameters.AddWithValue("@NewSchTimeOut", txtEditSchTimeOut.Text)

        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))


        command.Connection = conn

        command.ExecuteNonQuery()

    End Sub

    Protected Sub btnEditTeam_Click1(sender As Object, e As ImageClickEventArgs) Handles btnEditTeam.Click
        lblMessage.Text = ""
        lblAlertTeam.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT TEAM"
            Return

        End If

        If ddlStatus.SelectedValue.ToString = "O" Then
            txtEditTeam.Text = txtTeam.Text
            txtEditIncharge.Text = txtIncharge.Text
            txtEditSvcBy.Text = txtServiceBy.Text
            txtEditVehNo.Text = txtVehNo.Text
            txtOldSvcBy.Text = txtServiceBy.Text
            txtEditSupervisor.Text = txtSupervisor.Text

            mdlPopupEditTeam.Show()
        Else
            lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If
    End Sub

    Protected Sub btnImgEditTeam_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditTeam.Click
        mdlPopUpTeam.TargetControlID = "btnImgEditTeam"
        txtModal.Text = "ImgEditTeam"

        Dim strsql As String
        strsql = ""

        Try
            If String.IsNullOrEmpty(txtEditTeam.Text.Trim) = False Then
                txtPopupTeamSearch.Text = txtEditTeam.Text.Trim
                txtPopUpTeam.Text = txtPopupTeamSearch.Text
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamID, TeamName, InChargeID, Vehnos,  Supervisor, Location, Status From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql

                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            Else
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamID, TeamName, InChargeID, Vehnos, Supervisor, Location, Status From tblTeam where  Status <> 'N'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditTeam_Click", ex.Message.ToString, txtEditTeam.Text)
        End Try
        mdlPopUpTeam.Show()
    End Sub

    Protected Sub btnPnlTeamClose_Click(sender As Object, e As ImageClickEventArgs) Handles btnPnlTeamClose.Click
        If txtModal.Text = "ImgEditTeam" Then
            mdlPopupEditTeam.Show()
        ElseIf txtModal.Text = "ImgEditTeam1" Then
            mdlPopupSchDate.Show()

        End If
    End Sub

    Protected Sub btnPnlTeamCloseNew_Click(sender As Object, e As ImageClickEventArgs) Handles btnPnlTeamCloseNew.Click
        'If txtModal.Text = "ImgEditTeam" Then
        '    mdlPopupEditTeam.Show()
        'ElseIf txtModal.Text = "ImgEditTeam1" Then
        '    mdlPopupSchDate.Show()
        'End If
        mdlPopUpTeamNew.Hide()

    End Sub

    Protected Sub btnEditTeamSave_Click(sender As Object, e As EventArgs) Handles btnEditTeamSave.Click
        If txtTeam.Text = txtEditTeam.Text And txtIncharge.Text = txtEditIncharge.Text And txtServiceBy.Text = txtEditSvcBy.Text And txtVehNo.Text = txtEditVehNo.Text And txtSupervisor.Text = txtEditSupervisor.Text Then
            lblAlertTeam.Text = "NO CHANGES MADE"
            mdlPopupEditTeam.Show()
            '   Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "UPDATE tblservicerecord SET TeamID=@TeamID,InchargeID=@InchargeID,ServiceBy=@ServiceBy,VehNo=@VehNo,Supervisor=@Supervisor,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)

            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                command.Parameters.AddWithValue("@TeamID", txtEditTeam.Text.ToUpper)
                command.Parameters.AddWithValue("@VehNo", txtEditVehNo.Text.ToUpper)
                command.Parameters.AddWithValue("@ServiceBy", txtEditSvcBy.Text.ToUpper)
                command.Parameters.AddWithValue("@InChargeID", txtEditIncharge.Text.ToUpper)
                command.Parameters.AddWithValue("@Supervisor", txtEditSupervisor.Text.ToUpper)
                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                command.Parameters.AddWithValue("@TeamID", txtEditTeam.Text)
                command.Parameters.AddWithValue("@VehNo", txtEditVehNo.Text)
                command.Parameters.AddWithValue("@ServiceBy", txtEditSvcBy.Text)
                command.Parameters.AddWithValue("@InChargeID", txtEditIncharge.Text)
                command.Parameters.AddWithValue("@Supervisor", txtEditSupervisor.Text)
                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            End If


            command.Connection = conn

            command.ExecuteNonQuery()

            UpdateServiceTechnician(conn, txtEditSvcBy.Text)


            conn.Close()
            txtTeam.Text = txtEditTeam.Text
            txtIncharge.Text = txtEditIncharge.Text
            txtServiceBy.Text = txtEditSvcBy.Text
            txtVehNo.Text = txtEditVehNo.Text
            txtSupervisor.Text = txtEditSupervisor.Text

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()


            'GridView1.DataSourceID = "SqlDataSource1"
            GridView3.DataSourceID = "SqlDSServiceStaff"
            mdlPopupEditTeam.Hide()

            GridView1.SelectedIndex = Convert.ToInt16(txtGridIndex.Text)
            'InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditTeamSave_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub

    Private Sub UpdateServiceTechnician(conn As MySqlConnection, NewSvcBy As String)
        Try


            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text
            command2.CommandText = "SELECT recordno,staffid,rcno FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
            command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            command2.Parameters.AddWithValue("@staffid", txtOldSvcBy.Text)
            command2.Connection = conn

            Dim dr1 As MySqlDataReader = command2.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then

                Dim command3 As MySqlCommand = New MySqlCommand

                command3.CommandType = CommandType.Text
                command3.CommandText = "SELECT recordno,staffid FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
                command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                command3.Parameters.AddWithValue("@staffid", NewSvcBy)
                command3.Connection = conn

                Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                Dim dt3 As New DataTable
                dt3.Load(dr3)

                ' check if new Technician is available in tblservicerecordstaff
                'if available, then delete the old Technician name

                If dt3.Rows.Count > 0 Then

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblservicerecordstaff WHERE  rcno=" & dt1.Rows(0)("rcno")

                    command1.CommandText = qry
                    command1.Dispose()
                Else
                    'if new technician name not available then replace the old technician with new technician

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    Dim qry As String = "UPDATE tblservicerecordstaff SET StaffID = @StaffID,StaffName = @StaffName WHERE  rcno=" & dt1.Rows(0)("rcno")

                    command1.CommandText = qry
                    command1.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command1.Parameters.AddWithValue("@StaffID", NewSvcBy.ToUpper)
                        command1.Parameters.AddWithValue("@StaffName", NewSvcBy.ToUpper)
                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command1.Parameters.AddWithValue("@StaffID", NewSvcBy)
                        command1.Parameters.AddWithValue("@StaffName", NewSvcBy)
                    End If

                    command1.Connection = conn

                    command1.ExecuteNonQuery()
                    command1.Dispose()
                    command3.Dispose()
                End If

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT TEAM SAVE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)


            Else
                Dim command3 As MySqlCommand = New MySqlCommand

                command3.CommandType = CommandType.Text
                command3.CommandText = "SELECT recordno,staffid FROM tblservicerecordstaff where recordno=@recordno and staffid=@staffid"
                command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                command3.Parameters.AddWithValue("@staffid", NewSvcBy)
                command3.Connection = conn

                Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                Dim dt3 As New DataTable
                dt3.Load(dr3)

                ' check if new Technician is available in tblservicerecordstaff
                'if available, then delete the old Technician name

                If dt3.Rows.Count > 0 Then

                Else
                    'if new technician name and old technician name are not available then add the new technician name
                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblservicerecordstaff(StaffID,StaffName,CostValue,RecordNo,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn,CreateDeviceID,CreateSource,FlowFrom,FlowTo,EditSource,DeleteStatus,LastEditDevice)VALUES(@StaffID,@StaffName,@CostValue,@RecordNo,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn,@CreateDeviceID,@CreateSource,@FlowFrom,@FlowTo,@EditSource,@DeleteStatus,@LastEditDevice);"
                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@StaffID", NewSvcBy)

                    command.Parameters.AddWithValue("@StaffName", NewSvcBy)
                    command.Parameters.AddWithValue("@CostValue", "0.00")
                    command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    command.Parameters.AddWithValue("@CreateDeviceID", "")
                    command.Parameters.AddWithValue("@CreateSource", "")
                    command.Parameters.AddWithValue("@FlowFrom", "")
                    command.Parameters.AddWithValue("@FlowTo", "")
                    command.Parameters.AddWithValue("@EditSource", "")
                    command.Parameters.AddWithValue("@DeleteStatus", "")
                    command.Parameters.AddWithValue("@LastEditDevice", "")

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    command.Dispose()
                End If
                command3.Dispose()
                dt3.Dispose()
                dr3.Close()
            End If
            GridView3.DataBind()

            command2.Dispose()
            dt1.Dispose()
            'conn.Close()
            'conn.Dispose()
            dr1.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdateServiceTechnician", ex.Message.ToString, txtSvcRecord.Text + " " + NewSvcBy)

        End Try
    End Sub

    Protected Sub gvStaff_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvStaff.PageIndexChanging
        If String.IsNullOrEmpty(txtPopupStaffSearch.Text.Trim) Then

            SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff order by staffid"
        Else
            SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"
        End If

        SqlDSStaffID.DataBind()
        gvStaff.DataBind()
        gvStaff.PageIndex = e.NewPageIndex

        mdlPopupStaff.Show()
    End Sub

    Protected Sub gvStaff_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvStaff.SelectedIndexChanged
        Try
            If txtModal.Text = "EditIncharge" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditIncharge.Text = ""
                Else
                    txtEditIncharge.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupEditTeam.Show()

            End If

            If txtModal.Text = "EditSvcBy" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditSvcBy.Text = ""
                Else
                    txtEditSvcBy.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupEditTeam.Show()

            End If

            If txtModal.Text = "EditSupervisor" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditSupervisor.Text = ""
                Else
                    txtEditSupervisor.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupEditTeam.Show()

            End If
            If txtModal.Text = "EditIncharge1" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditIncharge1.Text = ""
                Else
                    txtEditIncharge1.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupSchDate.Show()

            End If

            If txtModal.Text = "EditSvcBy1" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditSvcBy1.Text = ""
                Else
                    txtEditSvcBy1.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupSchDate.Show()

            End If

            If txtModal.Text = "EditSupervisor1" Then
                If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditSupervisor1.Text = ""
                Else
                    txtEditSupervisor1.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
                End If
                mdlPopupSchDate.Show()

            End If
            If txtModal.Text = "SvcBySearch" Then
                If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtSearch1SvcBy.Text = " "
                Else
                    txtSearch1SvcBy.Text = gvStaff.SelectedRow.Cells(1).Text
                End If
            End If
            If txtModal.Text = "InchargeSearch" Then
                If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtSearch1Incharge.Text = " "
                Else
                    txtSearch1Incharge.Text = gvStaff.SelectedRow.Cells(1).Text
                End If
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("gvStaff_SelectedIndexChanged", ex.Message.ToString, txtSvcRecord.Text + " " + txtModal.Text)
        End Try
    End Sub

    Protected Sub btnPopUpStaffSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffSearch.Click
        Try
            If txtPopUpStaff.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
                mdlPopupStaff.Show()
                txtIsPopUp.Text = "Staff"
            End If

            txtPopUpStaff.Text = "Search Here"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpStaffSearch_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub txtPopUpStaff_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpStaff.TextChanged
        Try
            If txtPopUpStaff.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                Dim strsql As String
                strsql = ""

                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"


                strsql = "SELECT distinct staffid,name From tblstaff where ((staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%') or (name like '%" + txtPopupStaffSearch.Text + "%')) "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                strsql = strsql + " order by staffid"

                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
                mdlPopupStaff.Show()
                txtIsPopUp.Text = "Staff"
            End If

            txtPopUpStaff.Text = "Search Here"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopUpStaff_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpStaffReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffReset.Click
        txtPopUpStaff.Text = ""
        txtPopupStaffSearch.Text = ""
        SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff order by staffid"

        SqlDSStaffID.DataBind()

        gvStaff.DataBind()
        mdlPopupStaff.Show()
    End Sub

    Protected Sub btnImgEditIncharge_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditIncharge.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditIncharge"
            txtModal.Text = "EditIncharge"

            Dim strsql As String
            strsql = ""

            If String.IsNullOrEmpty(txtEditIncharge.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditIncharge.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + "order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff order by staffid"

                strsql = "SELECT distinct staffid,name From tblstaff where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + "order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditIncharge_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnImgEditSvcBy_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditSvcBy.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditSvcBy"
            txtModal.Text = "EditSvcBy"

            Dim strsql As String
            strsql = ""


            If String.IsNullOrEmpty(txtEditSvcBy.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditSvcBy.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT distinct staffid,name From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql
                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct staffid,name From tblstaff order by staffid"

                strsql = "SELECT distinct staffid,name From tblstaff where 1=1  "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditSvcBy_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnImgEditVehNo_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditVehNo.Click
        Try
            'SqlDSAsset = SELECT * FROM tblasset where rcno<>0 order by assetno - 16.12.17

            mdlPopUpAsset.TargetControlID = "btnImgEditVehNo"
            txtModal.Text = "EditVehNo"

            Dim strsql As String
            strsql = ""

            If String.IsNullOrEmpty(txtEditVehNo.Text.Trim) = False Then
                txtPopUpAsset.Text = txtEditVehNo.Text.Trim
                txtPopupAssetSearch.Text = txtPopUpAsset.Text

                'SqlDSAsset.SelectCommand = "SELECT Rcno, AssetNo, AssetRegNo, AssetClass, InchargeID, Status, OpStatus, Descrip, Type From tblasset where upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%' Order By AssetNo"

                strsql = "SELECT Rcno, AssetNo, AssetRegNo, AssetClass, InchargeID, Status, OpStatus, Descrip, Type From tblasset where upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%' "
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by AssetNo"

                SqlDSAsset.SelectCommand = strsql

                SqlDSAsset.DataBind()
                gvAsset.DataSourceID = "SqlDSAsset"
                gvAsset.DataBind()
            Else
                'txtPopUpasset.Text = ""
                'txtPopupassetSearch.Text = ""

                'SqlDSAsset.SelectCommand = "SELECT Rcno, AssetNo, AssetRegNo, AssetClass, InchargeID, Status, OpStatus, Descrip, Type From tblasset Order By AssetNo"

                strsql = "SELECT Rcno, AssetNo, AssetRegNo, AssetClass, InchargeID, Status, OpStatus, Descrip, Type From tblasset "
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by AssetNo"

                SqlDSAsset.SelectCommand = strsql
                SqlDSAsset.DataBind()
                gvAsset.DataSourceID = "SqlDSAsset"
                gvAsset.DataBind()
            End If

            mdlPopUpAsset.Show()
            'SQLDSInvoice.SelectCommand = txt.Text
            'GridView1.DataSourceID = "SQLDSInvoice"
            'GridView1.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditVehNo_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub MakeAreaNull()

        txtAreaRcNo.Text = ""
        txtAreaMode.Text = ""

        txtAreaDescription.Text = ""
        txtPricePerSqM.Text = ""
        txtAreaCompleted.Text = ""
        txtAreaTotalPrice.Text = ""

    End Sub

    Private Sub EnableAreaControls()
        btnAreaSave.Enabled = False
        btnAreaSave.ForeColor = System.Drawing.Color.Gray
        btnAreaCancel.Enabled = False
        btnAreaCancel.ForeColor = System.Drawing.Color.Gray

        btnAreaAdd.Enabled = True
        btnAreaAdd.ForeColor = System.Drawing.Color.Black
        btnAreaEdit.Enabled = True
        btnAreaEdit.ForeColor = System.Drawing.Color.Black
        btnAreaDelete.Enabled = True
        btnAreaDelete.ForeColor = System.Drawing.Color.Black

        txtAreaDescription.Enabled = False
        txtPricePerSqM.Enabled = False
        txtAreaCompleted.Enabled = False
        txtAreaTotalPrice.Enabled = False


    End Sub

    Private Sub DisableAreaControls()
        btnAreaSave.Enabled = True
        btnAreaSave.ForeColor = System.Drawing.Color.Black
        btnAreaCancel.Enabled = True
        btnAreaCancel.ForeColor = System.Drawing.Color.Black

        btnAreaAdd.Enabled = False
        btnAreaAdd.ForeColor = System.Drawing.Color.Gray

        btnAreaEdit.Enabled = False
        btnAreaEdit.ForeColor = System.Drawing.Color.Gray

        btnAreaDelete.Enabled = False
        btnAreaDelete.ForeColor = System.Drawing.Color.Gray

        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        txtAreaDescription.Enabled = True
        txtPricePerSqM.Enabled = True
        txtAreaCompleted.Enabled = True
        txtAreaTotalPrice.Enabled = True

    End Sub
    Public AreaRcno As String


    Protected Sub GridView4_SelectedIndexChanged1(sender As Object, e As EventArgs) Handles GridView4.SelectedIndexChanged
        Try
            MakeAreaNull()
            Dim editindex As Integer = GridView4.SelectedIndex
            rcno = DirectCast(GridView4.Rows(editindex).FindControl("Label1"), Label).Text
            txtAreaRcNo.Text = rcno.ToString()
            txtAreaDescription.Text = GridView4.SelectedRow.Cells(1).Text
            txtPricePerSqM.Text = GridView4.SelectedRow.Cells(2).Text
            txtAreaCompleted.Text = GridView4.SelectedRow.Cells(3).Text
            txtAreaTotalPrice.Text = GridView4.SelectedRow.Cells(4).Text
            EnableAreaControls()

        Catch ex As Exception
            InsertIntoTblWebEventLog("GridView4_SelectedIndexChanged1", ex.Message.ToString, txtSvcRecord.Text + " " + txtAreaRcNo.Text)
        End Try
    End Sub

    Protected Sub btnAreaCancel_Click(sender As Object, e As EventArgs) Handles btnAreaCancel.Click
        MakeAreaNull()
        EnableAreaControls()
    End Sub

    Protected Sub btnAreaAdd_Click(sender As Object, e As EventArgs) Handles btnAreaAdd.Click
        DisableAreaControls()

        MakeAreaNull()
        lblMessage.Text = "ACTION: ADD SERVICE AREA"


        txtAreaMode.Text = "Add"
        txtAreaDescription.Focus()

        CheckTab()
        '    mdlPopupStatusSearch.Hide()
    End Sub

    Protected Sub btnAreaSave_Click(sender As Object, e As EventArgs) Handles btnAreaSave.Click
        Dim d, d1 As Double
        If String.IsNullOrEmpty(txtPricePerSqM.Text) = False Then
            If Double.TryParse(txtPricePerSqM.Text, d) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID VALUE: PRICE PER SQUARE METER"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID VALUE: PRICE PER SQUARE METER');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        End If
        If String.IsNullOrEmpty(txtAreaCompleted.Text) = False Then
            If Double.TryParse(txtAreaCompleted.Text, d1) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID VALUE: AREA COMPLETED"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID VALUE: AREA COMPLETED');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtAreaCompleted.Text = "0.00"
            d1 = 0
        End If

        If String.IsNullOrEmpty(txtAreaDescription.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER DESCRIPTION"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER DESCRIPTION');", True)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If
        If String.IsNullOrEmpty(txtPricePerSqM.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER PRICE PER SQUARE METER"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER PRICE PER SQUARE METER');", True)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If

        txtAreaTotalPrice.Text = (d * d1).ToString

        If txtAreaMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno,description FROM tblservicerecordservicearea where recordno=@recordno and Description=@desc"
                command1.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                command1.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "AREA DESCRIPTION ALREADY SPECIFIED"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = " INSERT INTO tblservicerecordservicearea(RecordNo,Description,PricePerSquareMeter,AreaCompleted,TotalPriceOfCompletedArea,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn) VALUES(@RecordNo,@Description,@PricePerSquareMeter,@AreaCompleted,@TotalPriceOfCompletedArea,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"

                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@Description", txtAreaDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@PricePerSquareMeter", txtPricePerSqM.Text.ToUpper)

                        command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted.Text.ToUpper)
                        command.Parameters.AddWithValue("@TotalPriceOfCompletedArea", txtAreaTotalPrice.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text)
                        command.Parameters.AddWithValue("@Description", txtAreaDescription.Text)
                        command.Parameters.AddWithValue("@PricePerSquareMeter", txtPricePerSqM.Text)

                        command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted.Text)
                        command.Parameters.AddWithValue("@TotalPriceOfCompletedArea", txtAreaTotalPrice.Text)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    txtAreaRcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""


                    '''''''''''''''''

                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT sum(TotalPriceOfCompletedArea) as totalPrice FROM tblservicerecordservicearea where recordno=@recordno "
                    command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                    command2.Connection = conn

                    Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt2 As New DataTable
                    dt2.Load(dr2)

                    If dt2.Rows.Count > 0 Then
                        txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                    End If


                    Dim command3 As MySqlCommand = New MySqlCommand

                    command3.CommandType = CommandType.Text

                    command3.CommandText = "Update tblServiceRecord set BillAmount = " & txtAmtBill.Text & " where recordno=@recordno "
                    command3.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                    'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                    command3.Connection = conn

                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    'Dim dt2 As New DataTable
                    'dt2.Load(dr2)

                    'If dt2.Rows.Count > 0 Then
                    '    txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                    'End If

                    '''''''''''''''''''
                End If
                conn.Close()

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD AREA", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtAreaRcNo.Text)


            Catch ex As Exception
                InsertIntoTblWebEventLog("btnAreaSave_Click ADD SAVE", ex.Message.ToString, txtSvcRecord.Text + " " + txtAreaRcNo.Text)
            End Try
            EnableAreaControls()

        ElseIf txtAreaMode.Text = "Edit" Then
            If txtAreaRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandText = "SELECT recordno,description FROM tblservicerecordservicearea where recordno=@recordno and Description=@desc and rcno<>" & Convert.ToInt32(txtAreaRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text.ToUpper)
                command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text.ToUpper)
                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "AREA DESCRIPTION ALREADY SPECIFIED"


                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT recordno FROM tblservicerecordservicearea where rcno=" & Convert.ToInt32(txtAreaRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblservicerecordservicearea SET description = @Description,PricePerSquareMeter = @PricePerSquareMeter,AreaCompleted = @AreaCompleted,TotalPriceOfCompletedArea = @TotalPriceOfCompletedArea,RecordNo = @RecordNo,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtAreaRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                            command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@Description", txtAreaDescription.Text.ToUpper)
                            command.Parameters.AddWithValue("@PricePerSquareMeter", txtPricePerSqM.Text.ToUpper)

                            command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted.Text.ToUpper)
                            command.Parameters.AddWithValue("@TotalPriceOfCompletedArea", txtAreaTotalPrice.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                            command.Parameters.AddWithValue("@RecordNo", lblRecordNo.Text)
                            command.Parameters.AddWithValue("@Description", txtAreaDescription.Text)
                            command.Parameters.AddWithValue("@PricePerSquareMeter", txtPricePerSqM.Text)

                            command.Parameters.AddWithValue("@AreaCompleted", txtAreaCompleted.Text)
                            command.Parameters.AddWithValue("@TotalPriceOfCompletedArea", txtAreaTotalPrice.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        End If


                        command.Connection = conn

                        command.ExecuteNonQuery()


                        '''''''''''''''''

                        'Dim command2 As MySqlCommand = New MySqlCommand

                        command2.CommandType = CommandType.Text

                        command2.CommandText = "SELECT sum(TotalPriceOfCompletedArea) as totalPrice FROM tblservicerecordservicearea where recordno=@recordno "
                        command2.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
                        'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
                        command2.Connection = conn

                        Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                        Dim dt2 As New DataTable
                        dt2.Load(dr2)

                        If dt2.Rows.Count > 0 Then
                            txtAmtBill.Text = dt2.Rows(0)("totalPrice").ToString
                        End If


                        '''''''''''''''''''
                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""

                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT AREA", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtAreaRcNo.Text)

                    End If
                End If

                conn.Close()
                conn.Dispose()

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnAreaSave_Click EDIT SAVE", ex.Message.ToString, txtSvcRecord.Text + " " + txtAreaRcNo.Text)
            End Try
            EnableAreaControls()

        End If

        GridView4.DataSourceID = "SqlDSServiceArea"
        '  GridView4.DataBind()

        '    MakeAreaNull()
        txtAreaMode.Text = ""
    End Sub

    Protected Sub btnAreaEdit_Click(sender As Object, e As EventArgs) Handles btnAreaEdit.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtAreaRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        If ddlStatus.Text = "O" Then
            DisableAreaControls()
            txtAreaMode.Text = "Edit"
            lblMessage.Text = "ACTION: EDIT SERVICE AREA"
        Else
            lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

    End Sub

    Protected Sub btnAreaDelete_Click(sender As Object, e As EventArgs) Handles btnAreaDelete.Click

        lblMessage.Text = ""
        If txtAreaRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE SERVICE AREA"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno FROM tblservicerecordservicearea where rcno=" & Convert.ToInt32(txtAreaRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblservicerecordservicearea where rcno=" & Convert.ToInt32(txtAreaRcNo.Text)

                    command.CommandText = qry

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE AREA", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtAreaRcNo.Text)

                End If
                conn.Close()

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnAreaDelete_Click", ex.Message.ToString, txtSvcRecord.Text + " " + txtAreaRcNo.Text)
            End Try
            EnableAreaControls()


            GridView4.DataBind()
            MakeAreaNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        End If

    End Sub

    Protected Sub btnUpdateContract_Click(sender As Object, e As EventArgs) Handles btnUpdateContract.Click
        lblMessage.Text = ""
        lblAlert.Text = ""
        If txtRcno.Text = "" Then
            '  MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'UpdateContract(conn)

            'CType(Me.Master, MasterPage).UpdateContract(txtContractNo.Text)


            'Start: 03.04

            'Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            '    conn.Dispose()
            'End If
            conn.Open()

            Dim commandUpdateContractServiceInfo As MySqlCommand = New MySqlCommand

            commandUpdateContractServiceInfo.CommandType = CommandType.StoredProcedure
            commandUpdateContractServiceInfo.CommandText = "UpdateContractServiceInfo"
            commandUpdateContractServiceInfo.Parameters.Clear()
            commandUpdateContractServiceInfo.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
            commandUpdateContractServiceInfo.Connection = conn
            commandUpdateContractServiceInfo.ExecuteScalar()
            conn.Close()
            commandUpdateContractServiceInfo.Dispose()
            'End: 03.03

            'Dim command2 As MySqlCommand = New MySqlCommand

            'command2.CommandType = CommandType.Text

            'command2.CommandText = "SELECT * FROM tblcontract where CONTRACTNO='" & txtContractNo.Text & "'"
            'command2.Connection = conn

            'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    Dim command1 As MySqlCommand = New MySqlCommand

            '    command1.CommandType = CommandType.Text

            '    command1.CommandText = "SELECT * FROM tblservicerecord where CONTRACTNO='" & txtContractNo.Text & "' AND STATUS='P'"
            '    command1.Connection = conn

            '    Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            '    Dim dt1 As New DataTable
            '    dt1.Load(dr1)

            '    Dim totarea As Decimal = 0

            '    If dt1.Rows.Count > 0 Then
            '        For j As Integer = 0 To dt1.Rows.Count - 1
            '            Dim command3 As MySqlCommand = New MySqlCommand

            '            command3.CommandType = CommandType.Text

            '            command3.CommandText = "SELECT * FROM tblservicerecordservicearea where RecordNo='" & dt1.Rows(j)("RecordNo").ToString & "'"
            '            command3.Connection = conn

            '            Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            '            Dim dt3 As New DataTable
            '            dt3.Load(dr3)

            '            totarea = 0

            '            If dt3.Rows.Count > 0 Then
            '                For k As Integer = 0 To dt3.Rows.Count - 1
            '                    totarea = totarea + dt3.Rows(k)("AreaCompleted")
            '                Next
            '            End If
            '        Next


            '        Dim command As MySqlCommand = New MySqlCommand

            '        command.CommandType = CommandType.Text

            '        command.CommandText = "UPDATE tblcontract SET servicenoactual=@servicenoactual,servicebal=@servicebal,amtcompleted=@amtcompleted,amtbalance=@amtbalance,completedarea=@completedarea,balancearea=@balancearea where contractno='" & txtContractNo.Text & "'"
            '        command.Parameters.Clear()

            '        command.Parameters.AddWithValue("@servicenoactual", dt1.Rows.Count)

            '        command.Parameters.AddWithValue("@servicebal", dt2.Rows(0)("ServiceNo") - dt1.Rows.Count)

            '        Dim tot As Decimal = 0

            '        For i As Integer = 0 To dt1.Rows.Count - 1
            '            tot = tot + dt1.Rows(i)("BillAmount")
            '        Next

            '        command.Parameters.AddWithValue("@amtcompleted", tot)
            '        command.Parameters.AddWithValue("@amtbalance", dt2.Rows(0)("ServiceAmt") - tot)
            '        command.Parameters.AddWithValue("@completedarea", totarea)
            '        If dt2.Rows(0)("TotalArea").ToString = DBNull.Value.ToString Then
            '            command.Parameters.AddWithValue("@balancearea", 0 - totarea)
            '        Else

            '            command.Parameters.AddWithValue("@balancearea", dt2.Rows(0)("TotalArea") - totarea)
            '        End If


            '        command.Connection = conn

            '        command.ExecuteNonQuery()
            '    End If

            'End If

            conn.Close()
            lblMessage.Text = "ACTION: CONTRACT UPDATED"

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnUpdateContract_Click", ex.Message.ToString, txtSvcRecord.Text + " " + txtContractNo.Text)
        End Try
    End Sub

    Protected Sub btnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        '    Session("servicefrom") = "contract"

        If txtFrom.Text = "contract" Then
            Session("servicefrom") = "contract"
            Session("CustName") = txtCustName.Text

            '24.08.21

            Session("accountid") = txtAccountID.Text
            Session("custname") = txtCustName.Text

            Session("industry") = txtIndustrySession.Text
            Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
            Session("contractgroup") = txtContractGroupSession.Text
            Session("companygroup") = txtCompanyGroupSession.Text
            Session("salesman") = txtSalesmanSession.Text

            Session("billaddress1") = txtbilladdress1session.Text
            Session("billstreet") = txtbillstreetsession.Text
            Session("billbuilding") = txtbillbuildingsession.Text
            Session("billcountry") = txtbillcountrysession.Text
            Session("billpostal") = txtbillpostalsession.Text

            'txtCustName.Text = Session("custname")
            txtContactPersonsession.Text = Session("contactperson")
            txtConPerMobilesession.Text = Session("conpermobile")
            txtAccCodesession.Text = Session("acctcode")
            txtTelephonesession.Text = Session("telephone")
            txtFaxsession.Text = Session("fax")
            txtPostalsession.Text = Session("offpostal")
            txtOfficeAddresssession.Text = Session("sevaddress")
            ddlLocateGrpsession.Text = Session("locategrp")
            ddlSalesmansession.Text = Session("salesman")
            txtLocationSession.Text = Session("location")


            '24.08.21

            Response.Redirect("Contract.aspx")
        ElseIf txtFrom.Text = "contactC" Then
            Session("servicefrom") = "contactC"
            Session("rcno") = txtRcnoContact.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Company.aspx")
        ElseIf txtFrom.Text = "contactP" Then
            Session("servicefrom") = "contactP"
            Session("rcno") = txtRcnoContact.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Person.aspx")
        End If

    End Sub

    Protected Sub GridView1_Sorted(sender As Object, e As EventArgs) Handles GridView1.Sorted

    End Sub

    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting
        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()

    End Sub

    Protected Sub btnFilter_Click(sender As Object, e As EventArgs)

    End Sub

    Protected Sub btnPopUpSchedulerReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpSchedulerReset.Click
        Try
            txtPopUpScheduler.Text = ""
            txtPopupSchedulerSearch.Text = ""
            SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O'"
            SqlDSScheduler.DataBind()
            gvScheduler.DataBind()
            mdlPopUpScheduler.Show()
            txtIsPopUp.Text = "Scheduler"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpSchedulerReset_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpTeamReset_Click(sender As Object, e As ImageClickEventArgs)
        txtPopUpTeam.Text = ""
        txtPopupTeamSearch.Text = ""
        '   SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' and Status <> 'N'"
        SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"

        SqlDSTeam.DataBind()
        gvTeam.DataBind()
        mdlPopUpTeam.Show()
        txtIsPopUp.Text = "Team"
    End Sub
    Protected Sub btnPopUpTeamResetNew_Click(sender As Object, e As ImageClickEventArgs)
        txtPopUpTeamNew.Text = ""
        txtPopupTeamSearchNew.Text = ""
        '   SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' and Status <> 'N'"
        SqlDSTeamNew.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"

        SqlDSTeamNew.DataBind()
        gvTeamNew.DataBind()
        mdlPopUpTeamNew.Show()
        txtIsPopUp.Text = "TeamNew"
    End Sub

    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click
        Try
            txtPopUpClient.Text = "Search Here for AccountID or Client details"
            txtPopupClientSearch.Text = ""

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,b.companyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,b.PersonGroupD as CompanyGroupD  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False  order by A.Accountid, B.LocationId"
                End If
            Else
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,b.companyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup,b.PersonGroupD as CompanyGroupD  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False  order by A.Accountid, B.LocationId"
                End If
            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            txtIsPopUp.Text = "Client"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpClientReset_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
    '    Try
    '        lblMessage.Text = ""
    '        lblAlert.Text = ""
    '        If FileUpload1.HasFile Then

    '            Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
    '            Dim ext As String = Path.GetExtension(fileName)

    '            If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

    '                '    If File.Exists((Server.MapPath("~/Uploads/Service/") + txtAccountID.Text + "_SERVICE_" + txtSvcRecord.Text + "_" + fileName)) Then
    '                If File.Exists((Server.MapPath("~/Uploads/Service/") + txtSvcRecord.Text + "_" + fileName)) Then
    '                    lblAlert.Text = "FILE ALREADY EXISTS"
    '                    Return
    '                End If

    '                '   FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Service/") + txtAccountID.Text + "_SERVICE_" + txtSvcRecord.Text + "_" + fileName))
    '                FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Service/") + txtSvcRecord.Text + "_" + fileName))
    '                lblMessage.Text = "FILE UPLOADED"

    '                Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Service/"))
    '                Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtSvcRecord.Text + "_")) + "*.*")
    '                '  Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")

    '                Dim files As List(Of ListItem) = New List(Of ListItem)

    '                For Each foundFile As FileInfo In filesInDir
    '                    Dim fullName As String = foundFile.FullName
    '                    files.Add(New ListItem(foundFile.Name))
    '                Next
    '                'Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
    '                'For Each filePath As String In filePaths
    '                '    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
    '                'Next
    '                gvUpload.DataSource = files
    '                gvUpload.DataBind()
    '            Else
    '                lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
    '                Return
    '            End If

    '        Else
    '            lblAlert.Text = "SELECT FILE TO UPLOAD"
    '        End If

    '    Catch ex As Exception
    '        MessageBox.Message.Alert(Page, ex.ToString, "str")
    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Sub

    Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        lblMessage.Text = ""
        lblAlert.Text = ""
        If String.IsNullOrEmpty(txtSvcRecord.Text) Then
            lblAlert.Text = "SELECT ACCOUNT TO UPLOAD FILE"
            Return

        End If
        If String.IsNullOrEmpty(txtFileDescription.Text) Then
            lblAlert.Text = "ENTER FILE DESCRIPTION TO UPLOAD FILE"
            Exit Sub

        End If
        ''''''''''''''''''
        If (FileUpload1.FileBytes.Length > 20971520) Then
            lblAlert.Text = "FILE SIZE SHOULD BE LESS THAN 20MB"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        ''''''''''''''''''''''
        Try
            If FileUpload1.HasFile Then

                Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
                Dim ext As String = Path.GetExtension(fileName)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

                    If File.Exists(Server.MapPath("~/Uploads/Service/") + txtSvcRecord.Text + "_" + fileName) Then

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtSvcRecord.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            '  MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                            lblAlert.Text = "FILE ALREADY EXISTS"
                            conn.Close()
                            conn.Dispose()
                            Exit Sub
                        End If
                    Else
                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtSvcRecord.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text
                            command2.CommandText = "delete from fileupload where filenamelink='" + txtSvcRecord.Text + "_" + fileName + "'"
                            command2.Connection = conn
                            command2.ExecuteNonQuery()
                        End If
                    End If
                    FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Service/") + txtSvcRecord.Text + "_" + fileName))

                    'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
                    'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
                    'Dim files As List(Of ListItem) = New List(Of ListItem)

                    'For Each foundFile As FileInfo In filesInDir
                    '    Dim fullName As String = foundFile.FullName
                    '    files.Add(New ListItem(foundFile.Name))
                    'Next
                    ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                    ''For Each filePath As String In filePaths
                    ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                    ''Next

                    'ADD FILE UPLOAD INFORMATION TO DATABASE INORDER TO STORE FILES WITH DESCRIPTION - 20170930



                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblfileupload(FileGroup,FileRef,FileName,FileDescription,FileType,FileNameLink, ManualReport,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                    qry = qry + "VALUES(@FileGroup,@FileRef,@FileName,@FileDescription,@FileType,@FileNameLink,@ManualReport,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"


                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@FileGroup", "SERVICE")
                        command.Parameters.AddWithValue("@FileRef", txtSvcRecord.Text)
                        command.Parameters.AddWithValue("@FileName", fileName.ToUpper)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)

                        If chkManualReport.Checked = True Then
                            command.Parameters.AddWithValue("@ManualReport", "Y")
                        Else
                            command.Parameters.AddWithValue("@ManualReport", "N")
                        End If

                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@FileNameLink", txtSvcRecord.Text + "_" + fileName.ToUpper)

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@FileGroup", "SERVICE")
                        command.Parameters.AddWithValue("@FileRef", txtSvcRecord.Text)
                        command.Parameters.AddWithValue("@FileName", fileName)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)

                        If chkManualReport.Checked = True Then
                            command.Parameters.AddWithValue("@ManualReport", "Y")
                        Else
                            command.Parameters.AddWithValue("@ManualReport", "N")
                        End If

                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@FileNameLink", txtSvcRecord.Text + "_" + fileName)

                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    conn.Close()
                    conn.Dispose()
                    SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
                    gvUpload.DataSourceID = "SqlDSUpload"
                    gvUpload.DataBind()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtSvcRecord.Text, "ADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", txtServiceRecord.Text + "_" + fileName, txtSvcRecord.Text)

                    txtFileDescription.Text = ""

                    lblMessage.Text = "FILE UPLOADED"
                    lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"

                Else
                    lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
                    Return
                End If

            Else
                lblAlert.Text = "SELECT FILE TO UPLOAD"
            End If
            '  Response.Redirect(Request.Url.AbsoluteUri)


        Catch ex As Exception
            InsertIntoTblWebEventLog("UploadFile", ex.Message.ToString, FileUpload1.PostedFile.FileName)
        End Try
    End Sub

    'Public Function GetImage(pageNumber As Integer) As Bitmap
    '    Dim result As Bitmap = Nothing
    '    Dim workFile As String

    '    If pageNumber < 1 OrElse pageNumber > Me.PageCount Then
    '        Throw New ArgumentException("Page number is out of bounds", "pageNumber")
    '    End If

    '    'workFile = Path.GetTempFileName();
    '    'workFile=Path.GetDirectoryName(this._pdfFileName)+"\\TempFile.tmp";

    '    Try
    '        For i As Integer = 1 To Me.PageCount
    '            workFile = Path.GetDirectoryName(Me._pdfFileName) + "\TempFile" + i + ".tmp"
    '            Me.ConvertPdfPageToImage(workFile, i)
    '            Using stream As New FileStream(workFile, FileMode.Open, FileAccess.Read)
    '                result = New Bitmap(stream)
    '            End Using
    '        Next
    '        'File.Delete(workFile);
    '    Finally
    '    End Try
    'End Function
    Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            filePath = Server.MapPath("~/Uploads/Service/") + filePath
            'lblMessage.Text = filePath
            'Return

            Response.ContentType = ContentType
            Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
            Response.WriteFile(filePath)
            Response.End()
        Catch ex As Exception
            InsertIntoTblWebEventLog("DownloadFile", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Session.Add("FileName", filePath)
            filePath = Server.MapPath("~/Uploads/Service/") + filePath
            'lblMessage.Text = filePath
            'Return
            Session.Add("FilePath", filePath)

            Response.Redirect("Email.aspx?Type=FileUpload")

        Catch ex As Exception
            InsertIntoTblWebEventLog("EmailFile", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub DeleteFile(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If txtFileDelete.Text = "0" Then
                lblAlert.Text = "FILE DELETION ACCESS RIGHT HAS NOT BEEN PROVIDED"
                'MaintainScrollPositionOnPostBack = "true"
                'Me.LoadPage.MaintainScrollPositionOnPostBack = True
                Me.MaintainScrollPositionOnPostBack = False
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Me.MaintainScrollPositionOnPostBack = True
                Exit Sub
            End If

            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            txtFileLink.Text = filePath

            filePath = Server.MapPath("~/Uploads/Service/") + filePath

            txtDeleteUploadedFile.Text = filePath
            iframeid.Attributes.Add("src", "about:blank")

            Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)
            lblDeleteConfirm.Text = "File"
            '  lblEvent.Text = "Confirm DELETE"
            lblQuery.Text = "Are you sure to DELETE the File? <br><br> File Name : " + txtFileLink.Text + "<br><br>File Description : " + grdrow.Cells(2).Text
            mdlPopupDeleteUploadedFile.Show()


            'File.Delete(filePath)
            ''  Response.Redirect(Request.Url.AbsoluteUri)
            'lblMessage.Text = "FILE DELETED"
            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("DeleteFile", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub DeleteUploadedfile(gFilePath As String)
        'File.Delete(gFilePath)
        ''  Response.Redirect(Request.Url.AbsoluteUri)
        'lblMessage.Text = "FILE DELETED"
        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Service/"))
        ''   Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtSvcRecord.Text + "_")) + "*.*")
        'Dim files As List(Of ListItem) = New List(Of ListItem)

        'For Each foundFile As FileInfo In filesInDir
        '    Dim fullName As String = foundFile.FullName
        '    files.Add(New ListItem(foundFile.Name))
        'Next
        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
        ''For Each filePath As String In filePaths
        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
        ''Next
        'gvUpload.DataSource = files
        'gvUpload.DataBind()
        Try
            ' File.Delete(gFilePath)
            '   Dim filename As New FileInfo(txtFileLink.Text)
            ' Dim deletefilepath As String = Server.MapPath("~/Uploads/Service/DeletedFiles/") + filename.Name + +"_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh") + filename.Extension

            '  Dim deletefilepath = Server.MapPath("~/Uploads/Service/DeletedFiles/") + txtFileLink.Text.Substring(0, txtFileLink.Text.IndexOf(filename.Extension)).ToString + "_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh")
            Dim deletefilepath1 As String = Server.MapPath("~/Uploads/Service/DeletedFiles/") + txtFileLink.Text
            Dim deletefilepath As String = Server.MapPath("~/Uploads/Service/DeletedFiles/") + Path.GetFileNameWithoutExtension(deletefilepath1) + "_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh") + Path.GetExtension(deletefilepath1)
            File.Move(gFilePath, deletefilepath)

            '  Response.Redirect(Request.Url.AbsoluteUri)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblfileupload where filenamelink='" + txtFileLink.Text + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblfileupload where filenamelink='" + txtFileLink.Text + "'"

                command.CommandText = qry

                command.Connection = conn

                command.ExecuteNonQuery()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtFileLink.Text, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRecord.Text)
            End If
            conn.Close()
            lblMessage.Text = "FILE DELETED"

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtSvcRecord.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()


        Catch ex As Exception
            InsertIntoTblWebEventLog("DeleteUploadedfile", ex.Message.ToString, gFilePath)
        End Try
    End Sub


    'Protected Sub btnImgEditSupervisor_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditSupervisor.Click
    '    mdlPopUpTeam.TargetControlID = "btnImgEditSupervisor"
    '    txtModal.Text = "EditSupervisor"
    '    If String.IsNullOrEmpty(txtEditVehNo.Text.Trim) = False Then
    '        txtPopupTeamSearch.Text = txtEditVehNo.Text.Trim
    '        txtPopUpTeam.Text = txtPopupTeamSearch.Text
    '        ' SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
    '        SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
    '        SqlDSTeam.DataBind()
    '        gvTeam.DataBind()
    '    Else
    '        'txtPopUpTeam.Text = ""
    '        'txtPopupTeamSearch.Text = ""
    '        '   SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' and Status <> 'N'"
    '        SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where Status <> 'N' order by TeamName"

    '        SqlDSTeam.DataBind()
    '        gvTeam.DataBind()
    '    End If
    '    mdlPopUpTeam.Show()
    'End Sub


    Protected Sub PreviewFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Dim ext As String = Path.GetExtension(filePath)
            filePath = "Uploads/Service/" + filePath
            ext = ext.ToLower

            '  filePath = Server.MapPath("~/Uploads/") + filePath
            '    frmWord.Attributes["src"] = http://localhost/MyApp/resume.doc;
            ' iframeid.Attributes.Add("src", Server.HtmlDecode("D:\1_CWBInfotech\A_Sitapest\Program\Sitapest\Uploads\10000145_photo (1).JPG"))
            If ext = ".doc" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Then
                Dim strFilePath As String = Server.MapPath("Uploads\Service\")
                Dim strFile As String = CType(sender, LinkButton).CommandArgument
                Dim File As String() = strFile.Split("."c)
                Dim strExtension As String = ext
                Dim strUrl As String = "http://" + Request.Url.Authority + "/WordinIFrame/ConvertedLocation/"

                Dim Filename As String = strFilePath + strFile.Split("."c)(0) & Convert.ToString(".html")

                If System.IO.File.Exists(Filename) Then
                    System.IO.File.Delete(Filename)
                End If

                If ext = ".doc" Or ext = ".docx" Then
                    ConvertHTMLFromWord(strFilePath & strFile, strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html"))

                ElseIf ext = ".xls" Or ext = ".xlsx" Then
                    ConvertHtmlFromExcel(strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
                End If

                iframeid.Attributes("src") = "Uploads/Service/A" + strFile.Split("."c)(0) & Convert.ToString(".html")

            Else
                filePath = filePath.Replace("#", "%23")

                iframeid.Attributes.Add("src", filePath)
                ' iframeid.Attributes.Add("src", "Uploads/Service/SERV201711-006222_SERV201711-018002_ONMIR %2350-01.PDF")
            End If
            '  iframeid.Attributes.Add("src", "https://docs.google.com/viewer?url={D:/1_CWBInfotech/A_Sitapest/Program/Sitapest/Uploads/10000145_ActualVsForecast_Format1.pdf?pid=explorer&efh=false&a=v&chrome=false&embedded=true")
        Catch ex As Exception
            InsertIntoTblWebEventLog("PreviewFile", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub



    Public Sub ConvertHTMLFromWord(Source As Object, Target As Object)
        If Word Is Nothing Then
            ' Check for the prior instance of the OfficeWord Object
            Word = New Microsoft.Office.Interop.Word.ApplicationClass()
        End If

        Try
            ' To suppress window display the following code will help
            Word.Visible = False
            Word.Application.Visible = False
            Word.WindowState = Microsoft.Office.Interop.Word.WdWindowState.wdWindowStateMinimize



            Word.Documents.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Word.WdSaveFormat.wdFormatHTML

            Word.ActiveDocument.SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS
            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Word IsNot Nothing Then
                Word.Documents.Close(Unknown, Unknown, Unknown)
                Word.Quit(Unknown, Unknown, Unknown)
            End If
        End Try
    End Sub

    Public Sub ConvertHtmlFromExcel(Source As String, Target As String)
        If Excel Is Nothing Then
            Excel = New Microsoft.Office.Interop.Excel.ApplicationClass()
        End If

        Try
            'Excel.Visible = False
            'Excel.Application.Visible = False
            'Excel.WindowState = Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized

            'Excel.Workbooks.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
            '    Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
            '    Unknown, Unknown, Unknown)

            'Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            'Excel.Workbooks(1).SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
            '    Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlShared, Unknown, Unknown, Unknown, Unknown, Unknown)

            'Status = StatusType.SUCCESS

            'Message = Status.ToString()

            Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            Dim excel As New Microsoft.Office.Interop.Excel.Application
            Dim xls As Microsoft.Office.Interop.Excel.Workbook
            xls = excel.Workbooks.Open(Source)
            xls.SaveAs(Target, format)
            xls.Close()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Excel IsNot Nothing Then
                Excel.Workbooks.Close()
                Excel.Quit()
            End If
        End Try
    End Sub

    Protected Sub btnImgEditSupervisor_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditSupervisor.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditSupervisor"
            txtModal.Text = "EditSupervisor"

            Dim strsql As String
            strsql = ""

            If String.IsNullOrEmpty(txtEditSupervisor.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditSupervisor.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT  distinct(StaffId, StaffName) From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If
                strsql = strsql + " Order by staffid"

                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

                strsql = "SELECT distinct StaffId, StaffName From tblstaff where 1=1 "
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditSupervisor_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpAssetReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpAssetReset.Click
        txtPopUpAsset.Text = ""
        txtPopupAssetSearch.Text = ""
        SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0"
        SqlDSAsset.DataBind()
        gvAsset.DataBind()
        mdlPopUpAsset.Show()
    End Sub

    Protected Sub gvAsset_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvAsset.PageIndexChanging
        Try
            gvAsset.PageIndex = e.NewPageIndex
            If txtPopUpAsset.Text.Trim = "" Then
                SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0"
            Else
                ' SqlDSasset.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("assetCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpasset.Text.Trim.ToUpper + "%'"
                SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0 and upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%'"
            End If

            SqlDSAsset.DataBind()
            gvAsset.DataBind()
            mdlPopUpAsset.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("gvAsset_PageIndexChanging", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvAsset_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvAsset.SelectedIndexChanged
        Try
            If txtModal.Text = "EditVehNo" Then
                If (gvAsset.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditVehNo.Text = " "
                Else
                    txtEditVehNo.Text = gvAsset.SelectedRow.Cells(1).Text
                End If
                mdlPopupEditTeam.Show()

            End If
            If txtModal.Text = "EditVehNo1" Then
                If (gvAsset.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtEditVehNo1.Text = " "
                Else
                    txtEditVehNo1.Text = gvAsset.SelectedRow.Cells(1).Text
                End If
                mdlPopupSchDate.Show()

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("gvAsset_SelectedIndexChanged", ex.Message.ToString, gvAsset.SelectedRow.Cells(1).Text)
        End Try

        For Each row As GridViewRow In gvAsset.Rows
            If row.RowIndex = gvAsset.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub txtPopUpAsset_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpAsset.TextChanged
        Try
            If txtPopUpAsset.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Asset", "str")
            Else
                txtPopupAssetSearch.Text = txtPopUpAsset.Text

                Dim strsql As String
                strsql = ""


                '  SqlDSasset.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("assetCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpasset.Text.Trim.ToUpper + "%'"
                'SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where  upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%'"

                strsql = "SELECT distinct AssetNo, AssetRegNo, InChargeID, Descrip, Type, Rcno From tblasset where  upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%' "



                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by AssetNo"
                SqlDSAsset.SelectCommand = strsql


                SqlDSAsset.DataBind()
                gvAsset.DataBind()
                mdlPopUpAsset.Show()
            End If
            txtPopUpAsset.Text = "Search Vehicle Here"
            mdlPopUpAsset.Show()
            txtIsPopUp.Text = "Asset"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopUpAsset_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnRowDataBoundg1(sender As Object, e As GridViewRowEventArgs)
        RetrieveGrdCustRequest()
        '   InsertIntoTblWebEventLog("OnRowDataBound", e.Row.RowIndex.ToString, "1")
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."

            'txtRemarkClient.Text = e.Row.Cells(14).Text

            If txtAllowToEditBilledAmtBillNo.Text = True And txtEditBilledAmtBillNo.Text = True Then
                e.Row.Cells(22).Visible = True
                GridView1.HeaderRow.Cells(22).Visible = True
            Else
                e.Row.Cells(22).Visible = False
                GridView1.HeaderRow.Cells(22).Visible = False
            End If

            If ConfigurationManager.AppSettings("SMSEnabled").ToString() = "No" Then
                e.Row.Cells(13).Visible = False
                GridView1.HeaderRow.Cells(13).Visible = False

            ElseIf ConfigurationManager.AppSettings("SMSEnabled").ToString() = "Yes" Then
                e.Row.Cells(13).Visible = True
                GridView1.HeaderRow.Cells(13).Visible = True
            End If

            tot = tot + Convert.ToDecimal(e.Row.Cells(19).Text.Trim).ToString("F2")
            'Label15.Text = (tot).ToString()
            Label15.Text = String.Format("{0:n2}", tot)

            '   InsertIntoTblWebEventLog("OnRowDataBound", e.Row.RowIndex.ToString, "2")

            'If e.Row.Cells(1).Text.Trim = "&nbsp;" Then
            '    If e.Row.Cells(2).Text.Trim = "O" Then
            '        'e.Row.Cells(9).BackColor = Color.YellowGreen
            '        If Convert.ToDateTime(e.Row.Cells(58).Text.Trim).AddDays(2).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd", New System.Globalization.CultureInfo("en-GB")) Then
            '            e.Row.Cells(1).BackColor = Color.Red
            '        End If
            '    End If

            'Else
            '    If e.Row.Cells(1).Text.Trim = "C" Then
            '        e.Row.Cells(1).BackColor = Color.YellowGreen
            '        e.Row.Cells(1).ForeColor = Color.YellowGreen
            '    ElseIf e.Row.Cells(1).Text.Trim = "O" Then
            '        e.Row.Cells(1).BackColor = Color.Gold
            '        e.Row.Cells(1).ForeColor = Color.Gold
            '    End If
            'End If
            '  InsertIntoTblWebEventLog("OnRowDataBound", Convert.ToDateTime(e.Row.Cells(7).Text.Trim).AddDays(2).ToString("yyyy-MM-dd"), "31")


            '09.12.22
            If e.Row.Cells(1).Text.Trim = "&nbsp;" Then
                If e.Row.Cells(2).Text.Trim = "O" Then
                    'e.Row.Cells(9).BackColor = Color.YellowGreen
                    If Convert.ToDateTime(e.Row.Cells(7).Text.Trim).AddDays(2).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd", New System.Globalization.CultureInfo("en-GB")) Then
                        e.Row.Cells(1).BackColor = Color.Red
                    End If
                End If

            Else
                If e.Row.Cells(1).Text.Trim = "C" Then
                    e.Row.Cells(1).BackColor = Color.YellowGreen
                    e.Row.Cells(1).ForeColor = Color.YellowGreen
                ElseIf e.Row.Cells(1).Text.Trim = "O" Then
                    e.Row.Cells(1).BackColor = Color.Gold
                    e.Row.Cells(1).ForeColor = Color.Gold
                End If
            End If
            '  InsertIntoTblWebEventLog("OnRowDataBound", e.Row.RowIndex.ToString, "3")
            '09.12.22

            Dim servicedate As String = e.Row.Cells(7).Text
            'Dim RecordNo As String = e.Row.Cells(27).Text

            '09.12.22

            Dim RecordNo As String = e.Row.Cells(28).Text

            '09.12.22

            'Dim d As DateTime
            'Date.TryParseExact(servicedate, "yyyyMM", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d)
            ' InsertIntoTblWebEventLog("Gridview1_Databound", Convert.ToDateTime(servicedate).ToString("yyyyMM").ToString, RecordNo.IndexOf("RV").ToString)

            If RecordNo.Contains(Convert.ToDateTime(servicedate).ToString("yyyyMM").ToString) = False Then
                If e.Row.Cells(2).Text.Trim = "O" Then
                    e.Row.Cells(1).BackColor = Color.Magenta
                    e.Row.Cells(1).ForeColor = Color.Magenta
                End If
            End If

            '   InsertIntoTblWebEventLog("OnRowDataBound", e.Row.RowIndex.ToString, "4")
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedg1(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        Try
            For Each row As GridViewRow In GridView1.Rows
                'If row.RowIndex = GridView1.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = GridView1.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If
            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChangedg1", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnSelectedIndexChanged2(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged
        Try
            For Each row As GridViewRow In GridView2.Rows
                If row.RowIndex = GridView2.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If

                If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                    If row.RowIndex = GridView2.SelectedIndex Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If


                Else
                    If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                        If row.RowIndex = txtSelectedIndex.Text Then
                            row.BackColor = ColorTranslator.FromHtml("#00ccff")
                            row.ToolTip = String.Empty
                            txtSelectedIndex.Text = ""
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If


                    End If

                End If
            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChangedg2", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnRowDataBound3(sender As Object, e As GridViewRowEventArgs)
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView3, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound3", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnSelectedIndexChanged3(sender As Object, e As EventArgs) Handles GridView3.SelectedIndexChanged
        Try
            'For Each row As GridViewRow In GridView3.Ros


            '    If row.RowIndex = GridView3.SelectedIndex Then
            '        row.BackColor = ColorTranslator.FromHtml("#00ccff")
            '        row.ToolTip = String.Empty
            '    Else
            '        If row.RowIndex Mod 2 = 0 Then
            '            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
            '            row.ToolTip = "Click to select this row."
            '        Else
            '            row.BackColor = ColorTranslator.FromHtml("#ffffff")
            '            row.ToolTip = "Click to select this row."
            '        End If
            '    End If

            'Next

            For Each row As GridViewRow In GridView3.Rows
                If row.RowIndex = GridView3.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If

                If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                    If row.RowIndex = GridView3.SelectedIndex Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If


                Else
                    If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                        If row.RowIndex = txtSelectedIndex.Text Then
                            row.BackColor = ColorTranslator.FromHtml("#00ccff")
                            row.ToolTip = String.Empty
                            txtSelectedIndex.Text = ""
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If


                    End If

                End If
            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChanged3", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnRowDataBound4(sender As Object, e As GridViewRowEventArgs)
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView4, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound4", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnSelectedIndexChanged4(sender As Object, e As EventArgs)
        Try
            For Each row As GridViewRow In GridView4.Rows
                'If row.RowIndex = GridView4.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = GridView4.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChanged4", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub GridViewTS2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridViewTS2.SelectedIndexChanged
        Try


            lblMessageTS.Text = ""
            lblAlertTS.Text = ""

            Dim editindex As Integer = GridViewTS2.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndexTS.Text) = False Then
                editindex = txtSelectedIndexTS.Text
            Else
                editindex = GridViewTS2.SelectedIndex
            End If

            'If (txtSelectedIndexTS.Text) = 0 Then
            '    editindex = txtSelectedIndexTS.Text
            'Else
            '    editindex = GridViewTS2.SelectedIndex
            'End If
            '''''''''''''''''''''''
            If editindex < 0 Then

                btnADDTS.Enabled = True
                btnADDTS.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If


            'rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            'txtSvcRcNo.Text = rcno.ToString()


            '''''''''''''''''''''''''''''
            rcno = DirectCast(GridViewTS2.Rows(editindex).FindControl("Label1"), Label).Text

            txtRcnoTS.Text = rcno.ToString()
            txtSelectedIndexTS.Text = ""

            'ddlTechID.Items.Clear()
            'ddlTechID.Items.Add("--SELECT--")
            'Dim qry As String
            'qry = " SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff  ORDER BY StaffId"
            'PopulateDropDownList(qry, "IDNAME", "StaffId", ddlTechID)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT TimeIn, TimeOut, Duration, Comments, ServiceDateIn, ServiceDateOut FROM tblservicerecordstafftimesheet where rcno=" & Convert.ToInt32(txtRcnoTS.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                txtTimeInTS.Text = dt.Rows(0)("TimeIn").ToString
                txtTimeOutTS.Text = dt.Rows(0)("TimeOut").ToString
                txtDurationTS.Text = dt.Rows(0)("Duration").ToString
                txtCommentsTS.Text = dt.Rows(0)("Comments").ToString
                'Convert.ToDateTime(command1.Parameters("@pr_ServiceDate").Value).ToString("dd/MM/yyyy")
                'txtTimeInDateTS.Text = dt.Rows(0)("ServiceDateIn").ToString
                'txtTimeOutDateTS.Text = dt.Rows(0)("ServiceDateOut").ToString
               

                txtTimeInDateTS.Text = Convert.ToDateTime(dt.Rows(0)("ServiceDateIn")).ToString("dd/MM/yyyy")
                txtTimeOutDateTS.Text = Convert.ToDateTime(dt.Rows(0)("ServiceDateOut")).ToString("dd/MM/yyyy")
            End If


            '''''''''''''''''''''''
            ''ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
            ''txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            ''DisableTechControls()
            If ddlStatus.Text = "O" Or ddlStatus.Text = "P" Then

                EnableControlsTS()

                btnEditTS.Enabled = True
                btnEditTS.ForeColor = System.Drawing.Color.Black
                btnDeleteTS.Enabled = True
                btnDeleteTS.ForeColor = System.Drawing.Color.Black
            End If

            If chkInactive.Checked = True Then
                btnADDTS.Enabled = False
                btnADDTS.ForeColor = System.Drawing.Color.Gray
                btnEditTS.Enabled = False
                btnEditTS.ForeColor = System.Drawing.Color.Gray
            End If

            mdlViewTS.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("GridViewTS2_SelectedIndexChanged", ex.Message.ToString, txtRcnoTS.Text)
            lblAlertTS.Text = ex.Message.ToString
            mdlViewTS.Show()
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub DisableNotesControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddNotesMaster.Enabled = False
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnableNotesControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddNotesMaster.Enabled = True
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Black
        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakeNotesNull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub

    Public NotesRcno As String

    Protected Sub gvNotesMaster_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvNotesMaster.PageIndexChanging
        gvNotesMaster.PageIndex = e.NewPageIndex

        SqlDSNotesMaster.SelectCommand = "SELECT * From tblnotes where rcno <>0 and keyfield='" + txtSvcRecord.Text + "'"


        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()

    End Sub

    Protected Sub gvNotesMaster_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        Try
            MakeNotesNull()
            '  txtTechMode.Text = "Edit"
            Dim editindex As Integer = gvNotesMaster.SelectedIndex
            rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            txtNotesRcNo.Text = rcno.ToString()
            txtNotes.Text = gvNotesMaster.SelectedRow.Cells(2).Text
            EnableNotesControls()

            btnEditNotesMaster.Enabled = True
            btnEditNotesMaster.ForeColor = System.Drawing.Color.Black
            btnDeleteNotesMaster.Enabled = True
            btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Black


        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnCancelNotesMaster_Click(sender As Object, e As EventArgs) Handles btnCancelNotesMaster.Click
        MakeNotesNull()
        EnableNotesControls()
        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnAddNotesMaster_Click(sender As Object, e As EventArgs) Handles btnAddNotesMaster.Click
        DisableNotesControls()

        MakeNotesNull()
        lblmessage.Text = "ACTION: ADD NOTES"


        txtNotesMode.Text = "Add"
        txtNotes.Focus()

    End Sub

    Protected Sub btnSaveNotesMaster_Click(sender As Object, e As EventArgs) Handles btnSaveNotesMaster.Click
        Try
            If String.IsNullOrEmpty(txtNotes.Text) Then
                ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
                lblAlert.Text = "ENTER NOTES"
                Return
            End If

            If txtNotesMode.Text = "Add" Then
                Try
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT KEYFIELD FROM tblNOTES where KEYFIELD=@recordno and notes=@notes"
                    command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                    command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                        lblAlert.Text = "NOTES ALREADY EXISTS"

                    Else

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "INSERT INTO tblnotes(KeyModule,SubKeyModule,KeyField,SubKeyField,StaffID,CreatedOn,ContactType,CustCode,CustName,ContactPerson,Notes,Internal,Printable,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@KeyModule,@SubKeyModule,@KeyField,@SubKeyField,@StaffID,@CreatedOn,@ContactType,@CustCode,@CustName,@ContactPerson,@Notes,@Internal,@Printable,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                        command.CommandText = qry
                        command.Parameters.Clear()
                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@KeyModule", "SERVICE")
                            command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                            command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text.ToUpper)
                            command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                            command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text.ToUpper)
                            command.Parameters.AddWithValue("@CustCode", txtAccountID.Text)
                            command.Parameters.AddWithValue("@CustName", txtServiceName.Text)
                            command.Parameters.AddWithValue("@ContactPerson", txtSvcCP1Contact.Text.ToUpper)
                            command.Parameters.AddWithValue("@Notes", txtNotes.Text.ToUpper)
                            command.Parameters.AddWithValue("@Internal", 0)
                            command.Parameters.AddWithValue("@Printable", 0)
                            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@KeyModule", "SERVICE")
                            command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                            command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text)
                            command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                            command.Parameters.AddWithValue("@ContactType", ddlAccountType.Text)
                            command.Parameters.AddWithValue("@CustCode", txtAccountID.Text)
                            command.Parameters.AddWithValue("@CustName", txtServiceName.Text)
                            command.Parameters.AddWithValue("@ContactPerson", txtSvcCP1Contact.Text)
                            command.Parameters.AddWithValue("@Notes", txtNotes.Text)
                            command.Parameters.AddWithValue("@Internal", 0)
                            command.Parameters.AddWithValue("@Printable", 0)
                            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        End If


                        command.Connection = conn

                        command.ExecuteNonQuery()
                        txtNotesRcNo.Text = command.LastInsertedId

                        '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                        lblMessage.Text = "ADD: NOTES SUCCESSFULLY ADDED"
                        lblAlert.Text = ""
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD SAVE NOTES", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtNotesRcNo.Text)

                    End If
                    conn.Close()


                Catch ex As Exception
                    InsertIntoTblWebEventLog("btnSaveNotesMaster_Click ADD SAVE", ex.Message.ToString, txtSvcRecord.Text)
                End Try
                EnableNotesControls()

            ElseIf txtNotesMode.Text = "Edit" Then
                If txtNotesRcNo.Text = "" Then
                    '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                    lblAlert.Text = "SELECT RECORD TO EDIT"

                    Return

                End If
                Try
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandType = CommandType.Text
                    command2.CommandText = "SELECT KEYFIELD FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                    command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                    command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                    command2.Connection = conn

                    Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    If dt1.Rows.Count > 0 Then

                        lblAlert.Text = "NOTES ALREADY EXISTS"



                    Else

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblnotes where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command As MySqlCommand = New MySqlCommand

                            command.CommandType = CommandType.Text
                            Dim qry As String = "UPDATE tblnotes SET notes=@notes,StaffID = @StaffID,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                            command.CommandText = qry
                            command.Parameters.Clear()

                            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                                command.Parameters.AddWithValue("@notes", txtNotes.Text.ToUpper)

                                command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                                command.Parameters.AddWithValue("@notes", txtNotes.Text)

                                command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            End If

                            command.Connection = conn

                            command.ExecuteNonQuery()

                            '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                            lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                            lblAlert.Text = ""
                        End If
                    End If


                    txtNotesMode.Text = ""

                    conn.Close()
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT SAVE NOTES", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtNotesRcNo.Text)

                Catch ex As Exception
                    InsertIntoTblWebEventLog("btnSaveNotesMaster_Click EDIT SAVE", ex.Message.ToString, txtSvcRecord.Text)
                End Try
                EnableNotesControls()

            End If
            SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtSvcRecord.Text + "'"
            SqlDSNotesMaster.DataBind()
            gvNotesMaster.DataBind()

            txtNotesMode.Text = ""
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            lblAlert.Text = ex.Message.ToString
        End Try
    End Sub

    Protected Sub btnEditNotesMaster_Click(sender As Object, e As EventArgs) Handles btnEditNotesMaster.Click
        lblalert.Text = ""
        lblmessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblalert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        If ddlStatus.Text = "O" Then
            DisableNotesControls()
            txtNotesMode.Text = "Edit"
            lblmessage.Text = "ACTION: EDIT NOTES"
        Else
            lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

    End Sub

    Protected Sub btnDeleteNotesMaster_Click(sender As Object, e As EventArgs) Handles btnDeleteNotesMaster.Click
        lblmessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblalert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblmessage.Text = "ACTION: DELETE NOTES"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                    command.CommandText = qry

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblmessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE NOTES", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtNotesRcNo.Text)

                End If
                conn.Close()



                EnableNotesControls()

                SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtSvcRecord.Text + "'"
                SqlDSNotesMaster.DataBind()
                gvNotesMaster.DataBind()
                MakeNotesNull()
                lblmessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
            Catch ex As Exception
                InsertIntoTblWebEventLog("btnDeleteNotesMaster_Click", ex.Message.ToString, txtSvcRecord.Text)
            End Try
        End If
    End Sub

    Protected Sub OnRowDataBoundgNotes(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgNotes(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvNotesMaster.Rows
            'If row.RowIndex = gvNotesMaster.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = gvNotesMaster.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub

    Protected Sub btnQuitNotesMaster_Click(sender As Object, e As EventArgs) Handles btnQuitNotesMaster.Click
    End Sub

    Protected Sub OnRowDataBoundgSch(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvScheduler, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgSch(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvScheduler.Rows
            If row.RowIndex = gvScheduler.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgTeam(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvTeam, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnRowDataBoundgTeamNew(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvTeamNew, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgTeam(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvTeam.Rows
            If row.RowIndex = gvTeam.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub
    Protected Sub OnSelectedIndexChangedgTeamNew(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvTeamNew.Rows
            If row.RowIndex = gvTeamNew.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgClient(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvClient.Rows
            If row.RowIndex = gvClient.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgLoc(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocation, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgLoc(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        For Each row As GridViewRow In gvLocation.Rows
            If row.RowIndex = gvLocation.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgClientSearch(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClientSearch, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClientSearch(sender As Object, e As EventArgs) Handles gvClientSearch.SelectedIndexChanged
        For Each row As GridViewRow In gvClientSearch.Rows
            If row.RowIndex = gvClientSearch.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgStaff(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvStaff, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgStaff(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvStaff.Rows
            If row.RowIndex = gvStaff.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgAsset(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvAsset, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub



    Protected Sub OnSelectedIndexChangedImg(sender As Object, e As EventArgs)
        Dim editindex As Integer = gvImages.SelectedIndex
        ' If editindex = 3 Then
        '   iframe1.Attributes.Add("src", DirectCast(gvImages.Rows(editindex).FindControl("ImageView"), System.Web.UI.WebControls.Image).ImageUrl)
        ImageEnlarge.ImageUrl = DirectCast(gvImages.Rows(editindex).FindControl("ImageView"), System.Web.UI.WebControls.Image).ImageUrl
        mdlPopupImage.Show()

        '  End If


        For Each row As GridViewRow In gvImages.Rows
            If row.RowIndex = gvImages.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub


    Protected Sub OnRowDataBound1(sender As Object, e As GridViewRowEventArgs)
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                Dim bytes As Byte() = TryCast(TryCast(e.Row.DataItem, DataRowView)("Photo"), Byte())
                Dim base64String As String = Convert.ToBase64String(bytes, 0, bytes.Length)
                TryCast(e.Row.FindControl("ImageView"), System.Web.UI.WebControls.Image).ImageUrl = Convert.ToString("data:image/png;base64,") & base64String
                TryCast(e.Row.FindControl("ImageButton1"), System.Web.UI.WebControls.ImageButton).ImageUrl = Convert.ToString("data:image/png;base64,") & base64String
                '  TryCast(e.Row.FindControl("ImageButton1"), System.Web.UI.WebControls.ImageButton).Attributes.Add("onclick", "javascript: LoadDiv ('" & Convert.ToString("data:image/png;base64,") & base64String & "');")
                '   iframe1.Attributes.Add("src", Convert.ToString("data:image/png;base64,") & base64String)
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvImages, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound1", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub



    Protected Sub btnEditRemarks_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditRemarks.Click
        btnEditSchDate_Click(sender, e)
    End Sub

    Protected Sub btnEditSchType_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditSchType.Click
        btnEditSchDate_Click(sender, e)
    End Sub

    Protected Sub btnEditServiceDate_Click(sender As Object, e As EventArgs)
        Try
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
                Return

            End If
            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
                'btnEditSchType.Enabled = False
                'btnEditSchDate.Enabled = False
                'btnEditTeam.Enabled = False
                'btnEditServInst.Enabled = False
                'btnEditRemarks.Enabled = False
                'btnEditCollectedAmount.Enabled = False
                'Return
            End If


            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno

            '   InsertIntoTblWebEventLog("EditServiceDate", txtRcno.Text, "1")
            RetrieveData()
            ''  GridView1.SelectRow(rowindex1)
            GridView1.SelectedIndex = rowindex1
            ''GridView1_SelectedIndexChanged(sender, e)
            'Dim lblid1 As TextBox = CType(xrow1.FindControl("Status"), TextBox)
            'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(1).Text


            'Dim lblEditSchTimeIn As String = GridView1.Rows(rowindex1).Cells(7).Text
            'Dim lblEditSchTimeOut As String = GridView1.Rows(rowindex1).Cells(8).Text
            'Dim lblEditScheduleType As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(9).Text)
            'Dim lblEditRemarks As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(46).Text)
            'Dim lblEditSchDate As String = GridView1.Rows(rowindex1).Cells(47).Text
            'Dim lblEditServiceInstruction As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(16).Text)


            ''Dim lblEditSchDate As String = GridView1.Rows(rowindex1).Cells(44).Text
            ''Dim lblEditSchTimeIn As String = GridView1.Rows(rowindex1).Cells(8).Text
            ''Dim lblEditSchTimeOut As String = GridView1.Rows(rowindex1).Cells(9).Text
            ''Dim lblEditScheduleType As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(10).Text)
            ''Dim lblEditRemarks As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(43).Text)


            txtRcno.Text = ""

            rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            txtRcno.Text = rcno.ToString()
            '  InsertIntoTblWebEventLog("EditServiceDate", txtRcno.Text, "2")

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            txtGridIndex.Text = rowindex1.ToString



            'If lblStatus = "O" Then
            '    txtEditSchDate.Text = Convert.ToDateTime(lblEditSchDate).ToString("dd/MM/yyyy")
            '    txtEditSchTimeIn.Text = lblEditSchTimeIn
            '    txtEditSchTimeOut.Text = lblEditSchTimeOut

            '    If lblEditRemarks = "&nbsp;" Then
            '        txtEditRemarks.Text = ""
            '    Else
            '        txtEditRemarks.Text = lblEditRemarks
            '    End If

            '    txtEditServiceInstruction.Text = lblEditServiceInstruction

            '    ddlEditScheduleType.Text = lblEditScheduleType
            '    mdlPopupSchDate.Show()
            'Else
            '    lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            'End If

            If ddlStatus.SelectedValue.ToString = "O" Then


                'txtCharCountServiceDescription.Visible = True
                'txtCharCountSI.Visible = True
                'txtCharCountRemarks.Visible = True
                'txtCharCountBillingDescription.Visible = True
                txtCharCountEditRemarks.Visible = True
                txtCharCountEditSI.Visible = True


                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsDescription(this);</Script>", False)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsInstruction(this);</Script>", False)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsRemarks(this);</Script>", False)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsBillingDescription(this);</Script>", False)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this);</Script>", False)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this);</Script>", False)



                txtEditSchDate.Text = txtScheduleDate.Text
                txtEditSchTimeIn.Text = txtScheduleTimeIn.Text
                txtEditSchTimeOut.Text = txtScheduleTimeOut.Text
                txtEditRemarks.Text = txtRemarks.Text
                ddlEditScheduleType.Text = ddlScheduleType.Text
                txtEditServiceInstruction.Text = txtInstruction.Text

                txtEditTeam1.Text = txtTeam.Text
                txtEditIncharge1.Text = txtIncharge.Text
                txtEditSvcBy1.Text = txtServiceBy.Text
                txtEditVehNo1.Text = txtVehNo.Text
                txtOldSvcBy.Text = txtServiceBy.Text
                txtEditSupervisor1.Text = txtSupervisor.Text

                txtEditRecordNo.Text = txtSvcRecord.Text
                txtEditClientName.Text = txtServiceName.Text
                txtEditServiceAddress.Text = txtAddress.Text & ", " & txtPostal.Text
                '  InsertIntoTblWebEventLog("EditServiceDate", txtRcno.Text, txtEditRecordNo.Text)

                mdlPopupSchDate.Show()
            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditServiceDate_Click", ex.Message.ToString, txtSvcRecord.Text)

        End Try

    End Sub


    Protected Sub btnEditServiceDateL_Click(sender As Object, e As EventArgs)
        Try
            lblMessage.Text = ""
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
                Return
            End If
            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If


            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno
            'RetrieveData()

            GridView1.SelectedIndex = rowindex1

            Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text

            txtRcno.Text = ""

            rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            txtRcno.Text = rcno.ToString()

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            txtGridIndex.Text = rowindex1.ToString

            If lblStatus = "O" Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.StoredProcedure
                'command.CommandText = "UPDATE tblservicerecord SET  SchServiceDate=@SchServiceDate, ServiceDate=@SchServiceDate1, LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where RecordNo = '" & txtEditRecordNo.Text & "'"
                command.CommandText = "UpdateServiceDate"

                command.Parameters.Clear()

                command.Parameters.AddWithValue("@pr_rcno", txtRcno.Text)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                command.Parameters.AddWithValue("@pr_plusminus", "minus")
                command.Parameters.Add(New MySqlParameter("@pr_RecordNo", MySqlDbType.String))
                command.Parameters("@pr_RecordNo").Direction = ParameterDirection.Output

                command.Connection = conn

                command.ExecuteNonQuery()

                Dim lRecordNo As String
                lRecordNo = command.Parameters("@pr_RecordNo").Value
                command.Dispose()



                conn.Close()
                conn.Dispose()
                command.Dispose()

                If lRecordNo = "L" Then
                    lblMessage.Text = "This feature is only allowed to reschedule on the same month." & vbNewLine & " Please use the Edit Service Date feature if you want to reschedule to a different month."
                    Exit Sub
                End If

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lRecordNo, "EDITSERVICEDATEL", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)


                SqlDataSource1.SelectCommand = txt.Text
                SqlDataSource1.DataBind()
                GridView1.DataBind()
                GridView1.DataSourceID = "SqlDataSource1"

                'InsertNewLog()
            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditServiceDateL_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnEditServiceDateR_Click(sender As Object, e As EventArgs)
        Try


            lblMessage.Text = ""

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "11", txtSvcRecord.Text)


            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
                Return
            End If
            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "12", txtSvcRecord.Text)

            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "13", txtSvcRecord.Text)


            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "1", txtSvcRecord.Text)


            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno
            'RetrieveData()

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "2" + txtRcno.Text, txtSvcRecord.Text)


            GridView1.SelectedIndex = rowindex1

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "3" + txtRcno.Text, txtSvcRecord.Text)

            Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text


            txtRcno.Text = ""

            rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            txtRcno.Text = rcno.ToString()

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "4" + txtRcno.Text, txtSvcRecord.Text)

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            txtGridIndex.Text = rowindex1.ToString

            'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "5" + txtGridIndex.Text, txtSvcRecord.Text)

            If lblStatus = "O" Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.StoredProcedure
                'command.CommandText = "UPDATE tblservicerecord SET  SchServiceDate=@SchServiceDate, ServiceDate=@SchServiceDate1, LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where RecordNo = '" & txtEditRecordNo.Text & "'"
                command.CommandText = "UpdateServiceDate"

                command.Parameters.Clear()

                command.Parameters.AddWithValue("@pr_rcno", txtRcno.Text)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                command.Parameters.AddWithValue("@pr_plusminus", "plus")

                command.Parameters.Add(New MySqlParameter("@pr_RecordNo", MySqlDbType.String))
                command.Parameters("@pr_RecordNo").Direction = ParameterDirection.Output

                command.Connection = conn

                command.ExecuteNonQuery()

                Dim lRecordNo As String
                lRecordNo = command.Parameters("@pr_RecordNo").Value
                command.Dispose()

                'InsertIntoTblWebEventLog("btnEditServiceDateR_Click", "6" + lRecordNo, txtSvcRecord.Text)

                conn.Close()
                conn.Dispose()
                command.Dispose()

                If lRecordNo = "L" Then
                    lblMessage.Text = "This feature is only allowed to reschedule on the same month." & vbNewLine & " Please use the Edit Service Date feature if you want to reschedule to a different month."
                    Exit Sub
                End If
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lRecordNo, "EDITSERVICEDATER", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)



                SqlDataSource1.SelectCommand = txt.Text
                SqlDataSource1.DataBind()
                GridView1.DataBind()
                GridView1.DataSourceID = "SqlDataSource1"
                'InsertNewLog()
            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditServiceDateR_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        If lblDeleteConfirm.Text = "File" Then
            DeleteUploadedfile(txtDeleteUploadedFile.Text)
        ElseIf lblDeleteConfirm.Text = "Photo" Then
            DeleteUploadedPhoto(Convert.ToInt64(txtDeletePhoto.Text))
        ElseIf lblDeleteConfirm.Text = "LargePhoto" Then
            UpdateLargePhoto(Convert.ToInt64(txtDeletePhoto.Text))
       
        End If


    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)
        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()
    End Sub

    Protected Sub txtAccountID_TextChanged(sender As Object, e As EventArgs) Handles txtAccountID.TextChanged
        If Len(txtAccountID.Text) > 2 Then
            btnClient_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub btnFilter_Click1(sender As Object, e As EventArgs) Handles btnFilter.Click

    End Sub

    Protected Sub btnEditServInst_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditServInst.Click
        btnEditSchDate_Click(sender, e)
    End Sub

    Protected Sub ddlServiceID_TextChanged(sender As Object, e As EventArgs) Handles ddlServiceID.TextChanged

        If txtSvcMode.Text = "Add" And ddlServiceID.SelectedIndex = 0 Then
            lblAlert.Text = "PLEASE SELECT VALID SERVICE ID"
            ddlServiceDesc.Text = ""
            updPanelService1.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If
        'ddlServiceDesc.Text = ddlServiceID.SelectedValue
        ''FindServiceDesc(ddlServiceID.DataTextField.ToString)
        'FindServiceDesc(ddlServiceID.Items.FindByValue("ProductID").Text)
        FindServiceDesc(ddlServiceID.SelectedItem.Text)
    End Sub

    Private Sub FindServiceDesc(source As String)
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT ProductDesc FROM tblProduct where ProductID ='" & source & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                ddlServiceDesc.Text = dt.Rows(0)("ProductDesc").ToString()
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            'InsertIntoTblWebEventLog("SERVICE - " + Session("UserID"), "FUNCTION FindServiceDesc", ex.Message.ToString, "")
            InsertIntoTblWebEventLog("FindServiceDesc", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub
    Protected Sub btnEditServiceBy_Click(sender As Object, e As EventArgs)
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim rowindex1 As Integer = xrow1.RowIndex

        MakeMeNull()
        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

        txtRcno.Text = lblidRcno
        RetrieveData()
        ' GridView1.SelectRow(rowindex1)
        GridView1.SelectedIndex = rowindex1

        'GridView1_SelectedIndexChanged(sender, e)
        txtRcno.Text = ""

        rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
        txtRcno.Text = rcno.ToString()

        lblMessage.Text = ""
        lblAlertSchDate.Text = ""
        lblAlert.Text = ""

        txtGridIndex.Text = rowindex1.ToString


        If ddlStatus.SelectedValue.ToString = "O" Then
            txtEditTeam.Text = txtTeam.Text
            txtEditIncharge.Text = txtIncharge.Text
            txtEditSvcBy.Text = txtServiceBy.Text
            txtEditVehNo.Text = txtVehNo.Text
            txtOldSvcBy.Text = txtServiceBy.Text
            txtEditSupervisor.Text = txtSupervisor.Text

            mdlPopupEditTeam.Show()
        Else
            lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

        'Dim lblEditSchDate As String = GridView1.Rows(rowindex1).Cells(44).Text
        'Dim lblEditSchTimeIn As String = GridView1.Rows(rowindex1).Cells(8).Text
        'Dim lblEditSchTimeOut As String = GridView1.Rows(rowindex1).Cells(9).Text
        'Dim lblEditScheduleType As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(10).Text)
        'Dim lblEditRemarks As String = Server.HtmlDecode(GridView1.Rows(rowindex1).Cells(43).Text)






    End Sub

    Protected Sub targetchkAdd_TextChanged(sender As Object, e As EventArgs) Handles ddlchkTargetAdd.TextChanged
        Try
            txtTargetIDEdit.Text = ""
            txtTargetDescEdit.Text = ""
            txtReasonEdit.Text = ""

            For Each item As ListItem In ddlchkTargetEdit.Items

                If item.Selected Then
                    txtTargetDescEdit.Text += item.Value + ","

                    txtTargetIDEdit.Text += item.Text.Substring(0, item.Text.IndexOf("-")).TrimEnd + ","
                    '  txtTargetIDAdd.Text += item.Text.Substring(0, 2) + ","
                    '   txtTargetIDEdit.Text += item.Text + ","
                    txtReasonEdit.Text += item.Text.Substring(0, item.Text.IndexOf("-")).TrimEnd + ":" + item.Value + ","

                End If
            Next
            txtTargetDescEdit.Text = txtTargetDescEdit.Text.Trim().Remove(txtTargetDescEdit.Text.Length - 1)
            ' DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text = DirectCast(row.Cells(0).FindControl("txtTargetDesc"), Label).Text.TrimEnd

            txtTargetIDEdit.Text = txtTargetIDEdit.Text.Trim().Remove(txtTargetIDEdit.Text.Length - 1)

            txtReasonEdit.Text = txtReasonEdit.Text.Trim().Remove(txtReasonEdit.Text.Length - 1)

            txtReasonEdit.Text = txtReasonEdit.Text.Replace(",", vbCrLf)
        Catch ex As Exception
            InsertIntoTblWebEventLog("targetchkAdd_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnTransactions_Click(sender As Object, e As EventArgs) Handles btnTransactions.Click
        Try

            btnReCalculate_Click(sender, e)

            txtRecordNoSelected.Text = lblRecordNo.Text

            'SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.appliedbase as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P' and subcode='service' and reftype= '" & txtRecordNoSelected.Text & "' ORDER BY VoucherDate"

            SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.Valuebase as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status, tblsales.CreatedBy as CreatedBy FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P' and subcode='service' and reftype= '" & txtRecordNoSelected.Text & "' ORDER BY VoucherDate"



            SqlDSInvoiceDetails.DataBind()
            grdViewInvoiceDetails.DataBind()

            Session.Add("customerfrom", "Service")

            If grdViewInvoiceDetails.Rows.Count = 0 Then
                lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS SERVICE"

            Else
                lblAlertTransactions.Text = ""

            End If
            ModalPopupInvoice.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTransactions_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpTeamSearchNew_Click1(sender As Object, e As EventArgs) Handles btnPopUpTeamSearchNew.Click
        Try
            ' txtPopUpTeam.Text = txtPopupTeamSearch.Text
            'txtPopUpTeam.Text = "Search Here for Team, Incharge or ServiceBy"
            If txtPopUpTeamNew.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                'txtPopupTeamSearch.Text = txtPopUpTeam.Text
                ' SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                If Not String.IsNullOrEmpty(hdnTeamIDList.Value) And hdnTeamIDList.Value.Contains(",") Then

                    SqlDSTeamNew.SelectCommand = "SELECT distinct TeamId, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where rcno <>0 and (upper(TeamName) IN(" + hdnTeamIDList.Value.Trim.ToUpper + ") or upper(Inchargeid) IN(" + hdnTeamIDList.Value.Trim.ToUpper + ") or upper(TeamID) IN(" + hdnTeamIDList.Value.Trim.ToUpper + ")) and Status <> 'N' order by TeamName"
                Else
                    SqlDSTeamNew.SelectCommand = "SELECT distinct TeamId, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopUpTeamNew.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopUpTeamNew.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopUpTeamNew.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
                End If


                gvTeamNew.DataSource = Nothing
                SqlDSTeamNew.DataBind()
                gvTeamNew.DataBind()

                ' Checked the values which is entered in Team TextBox Start
                If String.IsNullOrEmpty(txtPopUpTeamNew.Text.Trim) = False Then
                    Dim team As List(Of String) = txtPopUpTeamNew.Text.Split(",").ToList()
                    For Each str As String In team
                        For Each item As GridViewRow In gvTeamNew.Rows
                            'If (item.Cells(2).Text.Trim.ToUpper()).Contains(str.ToUpper()) Then
                            If (item.Cells(2).Text.Trim.ToUpper() = str.Trim().ToUpper()) Then
                                DirectCast(item.FindControl("cbmultiTeam"), CheckBox).Checked = True
                            End If
                        Next
                    Next
                End If
                ' Checked the values which is entered in Team TextBox End


                mdlPopUpTeamNew.Show()
                txtIsPopUp.Text = "TeamNew"
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpTeamSearch_Click1", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpAssetSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpAssetSearch.Click
        Try
            If txtPopUpAsset.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Asset", "str")
            Else
                txtPopupAssetSearch.Text = txtPopUpAsset.Text

                '  SqlDSasset.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("assetCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpasset.Text.Trim.ToUpper + "%'"
                SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0 and upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%'"
                SqlDSAsset.DataBind()
                gvAsset.DataBind()
                mdlPopUpAsset.Show()
            End If
            txtPopUpAsset.Text = "Search Vehicle Here"
            mdlPopUpAsset.Show()
            txtIsPopUp.Text = "Asset"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpAssetSearch_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPopUpLocationSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpLocationSearch.Click
        If txtPopupLocation.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter search text", "str")
        Else
            txtPopupLocationSearch.Text = txtPopupLocation.Text
            Dim qry As String
            Try
                If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup FROM tblcompanylocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                    qry = "SELECT accountid, locationid, description, address1,addbuilding, addstreet,addcity,addstate,addcountry, addpostal,rcno,ServiceLocationGroup FROM tblpersonlocation where accountid='" & txtAccountID.Text & "'"

                    If String.IsNullOrEmpty(txtPopupLocationSearch.Text) = False Then
                        qry = qry + " and (locationid='" & txtPopupLocationSearch.Text & "'"
                        ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
                        qry = qry + " or description like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or address1 like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addbuilding like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addstreet like '%" + txtPopupLocationSearch.Text + "%'"
                        qry = qry + " or addpostal like '" + txtPopupLocationSearch.Text + "%')"
                    End If
                Else
                    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
                    Return
                End If

                SqlDSLocation.SelectCommand = qry
                SqlDSLocation.DataBind()
                gvLocation.DataBind()
                mdlPopupLocation.Show()
                txtIsPopUp.Text = "Location"

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnPopUpLocationSearch_Click", ex.Message.ToString, txtAccountID.Text)
            End Try
        End If

        txtPopupLocation.Text = "Search Here for Location Address, Postal Code or Description"
    End Sub

    Protected Sub btnPopUpSchedulerSearch_Click1(sender As Object, e As ImageClickEventArgs) Handles btnPopUpSchedulerSearch.Click
        Try
            If txtPopUpScheduler.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Scheduler", "str")
            Else
                txtPopupSchedulerSearch.Text = txtPopUpScheduler.Text

                '  SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where rcno <>0 and Name like '" + ViewState("SchedulerCurrentAlphabet") + "%' And upper(Name) Like '%" + txtPopUpScheduler.Text.Trim.ToUpper + "%'"
                SqlDSScheduler.SelectCommand = "SELECT distinct * From tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O' and upper(Name) Like '%" + txtPopupSchedulerSearch.Text.Trim.ToUpper + "%'"
                SqlDSScheduler.DataBind()
                gvScheduler.DataBind()
                mdlPopUpScheduler.Show()
                txtIsPopUp.Text = "Scheduler"
            End If
            txtPopUpScheduler.Text = "Search Scheduler Here"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpSchedulerSearch_Click1", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub txtSearch1Incharge_TextChanged(sender As Object, e As EventArgs) Handles txtSearch1Incharge.TextChanged
        lblAlert.Text = ""
        Dim dt As Date
        If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
            If txtSearch1SvcDate.Text = "__/__/____" Then
            Else
                If Date.TryParseExact(txtSearch1SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtSearch1SvcDate.Text = dt.ToShortDateString

                Else
                    MessageBox.Message.Alert(Page, "Search Service Date From is invalid", "str")

                    Return
                    Exit Sub

                End If
            End If
        End If

        Dim dt1 As Date
        If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
            If txtSearch2SvcDate.Text = "__/__/____" Then
            Else
                If Date.TryParseExact(txtSearch2SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt1) Then
                    txtSearch2SvcDate.Text = dt1.ToShortDateString

                Else
                    MessageBox.Message.Alert(Page, "Search Service Date To is invalid", "str")

                    Return
                    Exit Sub

                End If
            End If
        End If

        '  txtSearchSvc.Text = ""
        Dim qry As String = ""
        Dim qry1 As String
        Try

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency"
            'qry = qry + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null)"

            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno "
            'qry = qry + "  FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno where 1=1  "

            qry1 = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, A.Location, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo "
            qry = qry + "  FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1 "


            If String.IsNullOrEmpty(txtSearch1Svc.Text) = False Then
                '   txtSvcRecord.Text = txtSearchSvcRecord.Text
                qry = qry + " and recordno like '%" + txtSearch1Svc.Text.Trim + "%'"
                '  qry = qry + " and A.recordno = '" + txtSearch1Svc.Text.Trim + "'"
                '       txtSearchSvc.Text = txtSearchSvc.Text+
            End If
            If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                If txtSearch1SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate >= '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                If txtSearch2SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate <= '" + Convert.ToDateTime(txtSearch2SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If
            If txtFrom.Text = "contract" Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearch1Team.Text) = False Then
                qry = qry + " and A.TeamID like '%" + txtSearch1Team.Text.Trim + "%'"
            End If
            If String.IsNullOrEmpty(txtSearch1SvcBy.Text) = False Then
                qry = qry + " and (A.ServiceBy = '" + txtSearch1SvcBy.Text.Trim + "'"
                qry = qry + " or A.Recordno in (select recordno from tblservicerecordstaff where staffid='" + txtSearch1SvcBy.Text.Trim + "'))"
            End If
            If String.IsNullOrEmpty(txtSearch1Incharge.Text) = False Then

                'qry = qry + " and InchargeID = '" + ddlSearchIncharge.Text.Trim + "'"
                qry = qry + " and A.InchargeID = '" + txtSearch1Incharge.Text.Trim + "'"
            End If
            If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                If ddlCompanyGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and A.CompanyGroup = '" + ddlCompanyGrpSearch.Text + "'"
                End If
            End If

            If String.IsNullOrEmpty(ddlContractGrpSearch.Text) = False Then
                If ddlContractGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and B.ContractGroup = '" + ddlContractGrpSearch.Text + "'"
                End If
            End If

            If ddlSearchScheduler.SelectedIndex > 0 Then

                qry = qry + " and A.Scheduler = '" + ddlSearchScheduler.Text.Trim + "'"

            End If

            'If String.IsNullOrEmpty(txtSearch.Text) = False Then
            '    qry = qry + " and (locationid='" & txtSearch.Text & "'"
            '    ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
            '    qry = qry + " or description like '%" + txtSearch.Text + "%'"
            '    qry = qry + " or address1 like '%" + txtSearch.Text + "%'"
            '    qry = qry + " or addbuilding like '%" + txtSearch.Text + "%'"
            '    qry = qry + " or addstreet like '%" + txtSearch.Text + "%'"
            '    qry = qry + " or addpostal like '" + txtSearch.Text + "%')"
            'End If
            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                qry = qry + " and A.status in (" + YrStr + ")"

            End If
            'If String.IsNullOrEmpty(txtSearch1AccountID.Text) = False Then
            '    qry = qry + " and (AccountID like '" + txtSearch1AccountID.Text.Trim + "%'"
            '    qry = qry + " OR CustCode like '%" + txtSearch1AccountID.Text.Trim + "%')"
            'End If

            If String.IsNullOrEmpty(txtSearch1AccountID.Text.Trim) = False Then
                qry = qry + " and A.LocationID like '" + txtSearch1AccountID.Text.Trim + "%'"
            End If

            If String.IsNullOrEmpty(lblContract1.Text.Trim) = False Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If


            'If String.IsNullOrEmpty(txtSearchLocationID.Text) = False Then
            '    qry = qry + " and LocationID = '" + txtSearchLocationID.Text.Trim + "'"
            'End If

            If String.IsNullOrEmpty(txtSearch1ClientName.Text.Trim) = False Then
                txtSearch1ClientName.Text = txtSearch1ClientName.Text.Replace("'", "\\'")
                qry = qry + " and A.CustName like '%" + txtSearch1ClientName.Text.Trim + "%'"
                '   qry = qry + " and CustName like @name"
            End If

            If rdbSearchBillStatus.SelectedItem.Value = "Billed" Then
                qry = qry + " and A.Billno<>''"
            ElseIf rdbSearchBillStatus.SelectedItem.Value = "UnBilled" Then
                qry = qry + " and A.Billno=''"
            End If

            If ChkIncludeZeroValue.Checked = False Then
                qry = qry + " and A.BillAmount > 0.00"
            End If


            If ChkShowEmailSent.Checked = False Then
                qry = qry + " and A.EmailSent = False"
            End If
            Dim grdqry As String = qry
            'qry = qry + " order by ServiceDate desc,recordno limit " & txtLimit.Text
            qry = qry + " order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC limit " & txtLimit.Text
            txt.Text = qry1 + qry

            'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
            txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,a.AddStreet,a.AddCountry,a.AddPostal, b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

            txtGrid.Text = txtGrid.Text + qry


            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
            GridView1.PageIndex = 0


            If txtRowCount.Text = "0" Then
                MakeMeNull()
            End If
            '  lblMessage.Text = "SEARCH CRITERIA : " + txtSearchSvc.Text + " <br/>NUMBER OF RECORDS FOUND : " + txtRowCount.Text

            'If txtRowCount.Text < 21 Then
            '    lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text
            'Else
            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            'End If

            '''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                Dim gridcount As Int16 = GridviewCount(conn, grdqry)

                conn.Close()
                conn.Dispose()

                If gridcount > Convert.ToInt16(txtLimit.Text) Then
                    lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

                    mdlPopupMsg.Show()
                End If


                'btnQuickSearch_Click(sender, e)

                'Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                'MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"
                    txtRcno.Text = TryCast(GridView1.Rows(0).FindControl("Label1"), Label).Text
                    RetrieveData()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0

                    btnEditSchDate.Visible = True
                    btnEditTeam.Visible = True
                    btnEditServInst.Visible = True
                    btnEditRemarks.Visible = True
                    btnEditClientSign.Visible = True
                    btnEditCollectedAmount.Visible = True
                    btnEditOurRef.Visible = True

                    btnEditManualContractNo.Visible = True
                    btnEditPONo.Visible = True
                    btnEditWorkOrderNo.Visible = True

                    tableadd.Visible = False
                    tableaddHeader.Visible = False
                    tableedit.CssClass = "dummybutton"

                    CheckTab()
                    tb1.ActiveTabIndex = 0
                    'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                    AccessControl()
                    'End If

                    'GridView1_SelectedIndexChanged(sender, e)
                End If
            End If


            ''''''''''''''''''''''''''''
            chkStatusSearch.ClearSelection()
            'lblContract.Visible = False
            'lblContract1.Text = ""
            '    txtSearchSvc.Text = "Search Here"
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("txtSearch1Incharge_TextChanged", ex.Message.ToString, qry)
        End Try
    End Sub

    Private Sub InsertIntoTblWebEventLog(events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", "SERVICE - " + txtCreatedBy.Text)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
            lblAlert.Text = errorMsg
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        Catch ex As Exception
            InsertIntoTblWebEventLog("InsertIntoTblWebEventLog", ex.Message.ToString, "ERROR")
        End Try
    End Sub

    Protected Sub btnEditBillAmt_Click(sender As Object, e As EventArgs)
        If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
            lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
            Return
        End If

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            Return
        End If

        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim rowindex1 As Integer = xrow1.RowIndex

        MakeMeNull()
        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

        txtRcno.Text = lblidRcno
        RetrieveData()
        GridView1.SelectedIndex = rowindex1

        lblMessage.Text = ""
        lblAlertBillAmt.Text = ""
        lblAlert.Text = ""



        If ddlStatus.SelectedValue.ToString = "O" Then
            txtEditBillAmt.Text = txtAmtBill.Text
            mdlPopupEditBillAmt.Show()

        Else
            lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

        txtGridIndex.Text = rowindex1.ToString

    End Sub

    Protected Sub btnSaveEditBillAmt_Click(sender As Object, e As EventArgs) Handles btnSaveEditBillAmt.Click
        If txtEditBillAmt.Text = txtAmtBill.Text Then
            lblAlertBillAmt.Text = "NO CHANGES MADE"
            mdlPopupEditBillAmt.Show()
            '  Return
        End If
        Dim d As Double
        If String.IsNullOrEmpty(txtEditBillAmt.Text) = False Then
            If Double.TryParse(txtEditBillAmt.Text, d) = False Then
                '   MessageBox.Message.Alert(Page, "Amount is invalid!!!", "str")
                lblAlertBillAmt.Text = "BILL AMOUNT IS INVALID"
                Exit Sub
            End If
        End If
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "UPDATE tblservicerecord SET BillAmount=@BillAmount,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)

            command.Parameters.Clear()

            If String.IsNullOrEmpty(txtEditBillAmt.Text) Then
                command.Parameters.AddWithValue("@BillAmount", 0)
            Else
                command.Parameters.AddWithValue("@BillAmount", txtEditBillAmt.Text)
            End If
            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Connection = conn

            command.ExecuteNonQuery()


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT BILL AMT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()
            txtAmtBill.Text = txtEditBillAmt.Text

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            mdlPopupEditBillAmt.Hide()
            GridView1.SelectedIndex = Convert.ToInt16(txtGridIndex.Text)

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditBillAmt_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub


    '09.12.22
    Protected Sub btnEditBilledAmt_Click(sender As Object, e As EventArgs)
        If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
            lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
            Return
        End If

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            Return
        End If

        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim rowindex1 As Integer = xrow1.RowIndex

        MakeMeNull()
        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

        txtRcno.Text = lblidRcno
        RetrieveData()
        GridView1.SelectedIndex = rowindex1

        lblMessage.Text = ""
        lblAlertBilledAmt.Text = ""
        lblAlert.Text = ""



        If ddlStatus.SelectedValue.ToString = "O" Then
            txtEditBilledAmt.Text = txtInvoicedAmt.Text
            txtEditBillNo.Text = txtInvoiceNo.Text
            lblEditBilledAmtRecordNo.Text = txtServiceRecord.Text
            lblEditBilledAmtServiceValue.Text = txtAmtBill.Text
            mdlPopupEditBilledAmt.Show()

        Else
            lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

        txtGridIndex.Text = rowindex1.ToString

    End Sub

    Protected Sub btnSaveEditBilledAmt_Click(sender As Object, e As EventArgs) Handles btnSaveEditBilledAmt.Click
        If txtEditBilledAmt.Text = txtInvoicedAmt.Text And txtInvoiceNo.Text.Trim = txtEditBillNo.Text.Trim Then
            lblAlertBilledAmt.Text = "NO CHANGES MADE"
            mdlPopupEditBilledAmt.Show()
            Exit Sub
        End If

        If String.IsNullOrEmpty(txtEditBillNo.Text) = False Then
            If Left(txtEditBillNo.Text.Trim, 4) = "AR20" Then
                lblAlertBilledAmt.Text = "BILL NO STARTING WITH 'AR20' IS NOT ALLOWED "
                mdlPopupEditBilledAmt.Show()
                Exit Sub
            End If
        End If

        Dim d As Double
        If String.IsNullOrEmpty(txtEditBilledAmt.Text) = False Then
            If Double.TryParse(txtEditBilledAmt.Text, d) = False Then
                '   MessageBox.Message.Alert(Page, "Amount is invalid!!!", "str")
                lblAlertBilledAmt.Text = "BILLED AMOUNT IS INVALID"
                Exit Sub
            End If
        End If


        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "UPDATE tblservicerecord SET BilledAmt=@BilledAmount, BillNo = @BillNo, LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)

            command.Parameters.Clear()

            If String.IsNullOrEmpty(txtEditBilledAmt.Text) Then
                command.Parameters.AddWithValue("@BilledAmount", 0)
            Else
                command.Parameters.AddWithValue("@BilledAmount", txtEditBilledAmt.Text)
            End If

            command.Parameters.AddWithValue("@BillNo", txtEditBillNo.Text.Trim.ToUpper)

            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Connection = conn

            command.ExecuteNonQuery()


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT BILL AMT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()
            txtInvoicedAmt.Text = txtEditBilledAmt.Text
            txtInvoiceNo.Text = txtEditBillNo.Text
            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            mdlPopupEditBilledAmt.Hide()
            GridView1.SelectedIndex = Convert.ToInt16(txtGridIndex.Text)

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditBilledAmt_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub


    '09.12.22

    Protected Sub txtSvcAddressSearch_TextChanged(sender As Object, e As EventArgs) Handles txtSvcAddressSearch.TextChanged

    End Sub

    Protected Sub txtSearch1Svc_TextChanged(sender As Object, e As EventArgs) Handles txtSearch1Svc.TextChanged
        If txtSearch1Svc.Text.Length < 4 Then
            Exit Sub

        End If
        lblAlert.Text = ""
        Dim qry As String = ""
        Dim qry1 As String

        Try
            Dim dt As Date
            If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                If txtSearch1SvcDate.Text = "__/__/____" Then
                Else
                    If Date.TryParseExact(txtSearch1SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                        txtSearch1SvcDate.Text = dt.ToShortDateString

                    Else
                        MessageBox.Message.Alert(Page, "Search Service Date From is invalid", "str")

                        Return
                        Exit Sub

                    End If
                End If
            End If

            Dim dt1 As Date
            If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                If txtSearch2SvcDate.Text = "__/__/____" Then
                Else
                    If Date.TryParseExact(txtSearch2SvcDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt1) Then
                        txtSearch2SvcDate.Text = dt1.ToShortDateString

                    Else
                        MessageBox.Message.Alert(Page, "Search Service Date To is invalid", "str")

                        Return
                        Exit Sub

                    End If
                End If
            End If

            '  txtSearchSvc.Text = ""
            'qry = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, A.LockST, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency"
            'qry = qry + ",b.contractno FROM tblservicerecord as A,tblcontract as B where a.contractno=b.contractno and (b.contractno<>'' or b.contractno is not null)"

            qry1 = "SELECT A.Status, A.RecordNo, A.ServiceDate, A.ContactType, A.AccountId, A.CustName, A.Contact, A.LocationId, A.ServiceName, A.ServiceBy, A.Rcno, A.Notes, A.Address1, A.AddPostal, A.Scheduler, A.ContactPersonID, A.BillAmount, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.BilledAmt, A.BillNo, A.Description, A.Comments, A.Remarks, A.TeamId, A.serviceBy, A.ScheduleType, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, left(A.Email, 50) as Email, cast(A.Emailsent as unsigned) AS EmailSent, A.TabletDownloaded, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, A.SchServiceTime, A.SchServiceTimeOut, A.SchServiceDate, A.TabletId, A.TabletDownloadedDate, A.UploadDate, A.EmailSentDate,B.BillingFrequency, b.contractno,A.Salesman,B.ContractGroup,A.CompanyGroup,a.Location,  ifnull(left(D.JobStatus,1),'') as JobStatus, D.FollowUpRecordNo "
            qry = qry + "  FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo where 1=1 "

            If String.IsNullOrEmpty(txtSearch1Svc.Text) = False Then
                '   txtSvcRecord.Text = txtSearchSvcRecord.Text
                '  qry = qry + " and recordno like '%" + txtSearch1Svc.Text.Trim + "%'"
                If txtSearch1Svc.Text.Length >= 4 Then
                    qry = qry + " and A.recordno like '%" + txtSearch1Svc.Text.Trim + "%'"
                End If

                '       txtSearchSvc.Text = txtSearchSvc.Text+
            End If
            If String.IsNullOrEmpty(txtSearch1SvcDate.Text) = False Then
                If txtSearch1SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate >= '" + Convert.ToDateTime(txtSearch1SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtSearch2SvcDate.Text) = False Then
                If txtSearch2SvcDate.Text = "__/__/____" Then
                Else
                    qry = qry + " and A.ServiceDate <= '" + Convert.ToDateTime(txtSearch2SvcDate.Text).ToString("yyyy-MM-dd") + "'"
                End If
            End If
            If txtFrom.Text = "contract" Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearch1Team.Text) = False Then
                qry = qry + " and A.TeamID like '%" + txtSearch1Team.Text.Trim + "%'"
            End If
            If String.IsNullOrEmpty(txtSearch1SvcBy.Text) = False Then
                qry = qry + " and (A.ServiceBy = '" + txtSearch1SvcBy.Text.Trim + "'"
                qry = qry + " or A.Recordno in (select recordno from tblservicerecordstaff where staffid='" + txtSearch1SvcBy.Text.Trim + "'))"
            End If
            If String.IsNullOrEmpty(txtSearch1Incharge.Text) = False Then

                'qry = qry + " and InchargeID = '" + ddlSearchIncharge.Text.Trim + "'"
                qry = qry + " and A.InchargeID = '" + txtSearch1Incharge.Text.Trim + "'"
            End If
            If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                If ddlCompanyGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and A.CompanyGroup = '" + ddlCompanyGrpSearch.Text + "'"
                End If
            End If
            If String.IsNullOrEmpty(ddlContractGrpSearch.Text) = False Then
                If ddlContractGrpSearch.Text <> txtDDLText.Text Then
                    qry = qry + " and B.ContractGroup = '" + ddlContractGrpSearch.Text + "'"
                End If
            End If
            If ddlSearchScheduler.SelectedIndex > 0 Then

                qry = qry + " and A.Scheduler = '" + ddlSearchScheduler.Text.Trim + "'"

            End If


            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                qry = qry + " and A.status in (" + YrStr + ")"

            End If
            'If String.IsNullOrEmpty(txtSearch1AccountID.Text) = False Then
            '    qry = qry + " and (AccountID like '" + txtSearch1AccountID.Text.Trim + "%'"
            '    qry = qry + " OR CustCode like '%" + txtSearch1AccountID.Text.Trim + "%')"
            'End If

            If String.IsNullOrEmpty(txtSearch1AccountID.Text.Trim) = False Then
                qry = qry + " and A.LocationID like '" + txtSearch1AccountID.Text.Trim + "%'"
            End If

            If String.IsNullOrEmpty(lblContract1.Text.Trim) = False Then
                qry = qry + " and A.ContractNo = '" + lblContract1.Text.Trim + "'"
            End If


            'If String.IsNullOrEmpty(txtSearchLocationID.Text) = False Then
            '    qry = qry + " and LocationID = '" + txtSearchLocationID.Text.Trim + "'"
            'End If

            If String.IsNullOrEmpty(txtSearch1ClientName.Text.Trim) = False Then
                txtSearch1ClientName.Text = txtSearch1ClientName.Text.Replace("'", "\\'")
                qry = qry + " and A.CustName like '%" + txtSearch1ClientName.Text.Trim + "%'"
                '   qry = qry + " and CustName like @name"
            End If

            If rdbSearchBillStatus.SelectedItem.Value = "Billed" Then
                qry = qry + " and A.Billno<>''"
            ElseIf rdbSearchBillStatus.SelectedItem.Value = "UnBilled" Then
                qry = qry + " and A.Billno=''"
            End If

            If ChkIncludeZeroValue.Checked = False Then
                qry = qry + " and A.BillAmount > 0.00"
            End If

            If String.IsNullOrEmpty(txtSvcAddressSearch.Text.Trim) = False Then
                txtSvcAddressSearch.Text = txtSvcAddressSearch.Text.Replace("'", "\\'")

                qry = qry + " and (A.address1 like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addbuilding like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addstreet like '%" + txtSvcAddressSearch.Text + "%'"
                qry = qry + " or A.addpostal like '%" + txtSvcAddressSearch.Text + "%')"
            End If
            Dim grdqry As String = qry
            ''qry = qry + " order by ServiceDate desc,recordno limit " & txtLimit.Text
            qry = qry + " order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC limit " & txtLimit.Text
            txt.Text = qry1 + qry

            'txtGrid.Text = "Select a.Status, a.LockSt, a.EmailSent,	a.ServiceBy, a.ServiceDate, SchServiceTime,	SchServiceTimeOut,	a.ScheduleType,	LocationId,	ServiceName,	ServiceAddress,	Postal,	BillingFrequency, BillAmount as ToBillAmount,	BilledAmt,	BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,	a.RecordNo,	b.ContractNo,	b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	Email,	Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"
            txtGrid.Text = "SELECT a.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent,	a.ServiceBy, a.ServiceDate, a.SchServiceTime,	a.SchServiceTimeOut,	a.ScheduleType,	a.LocationId,	a.ServiceName,	a.Address1,a.AddBuilding,A.AddStreet,a.AddCountry,	a.AddPostal,	b.BillingFrequency, a.BillAmount as ToBillAmount,	BilledAmt,	a.BillNo,	a.Contact as ContactPerson,	a.Notes as ServiceDescription,	a.Comments as ServiceInstruction,a.Location,a.RecordNo,	b.ContractNo,a.Salesman,b.ContractGroup,	a.CompanyGroup,	a.ContactType,	a.AccountId,	a.CustName as AccountName,	a.Email,	a.Description,	a.Remarks,	a.TeamId,	a.Scheduler,	a.TimeIn,	a.TimeOut,	a.Duration,	a.OurRef, a.yourRef,	a.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate,A.CollectAmt as AmountCollected,A.Settle as PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn,	a.Rcno"

            txtGrid.Text = txtGrid.Text + qry


            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
            GridView1.PageIndex = 0


            If txtRowCount.Text = "0" Then
                MakeMeNull()
            End If
            '  lblMessage.Text = "SEARCH CRITERIA : " + txtSearchSvc.Text + " <br/>NUMBER OF RECORDS FOUND : " + txtRowCount.Text

            'If txtRowCount.Text < 21 Then
            '    lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text
            'Else
            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            'End If

            '''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                Dim gridcount As Int16 = GridviewCount(conn, grdqry)

                conn.Close()
                conn.Dispose()

                If gridcount > Convert.ToInt16(txtLimit.Text) Then
                    lblpnlConfirmMsg1.Text = "Please take note that only top " + txtLimit.Text + " service records are displayed in the list.<br/><br/>[Total number of service records : " + gridcount.ToString + "]"

                    mdlPopupMsg.Show()
                End If


                'btnQuickSearch_Click(sender, e)

                'Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                'MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"
                    txtRcno.Text = TryCast(GridView1.Rows(0).FindControl("Label1"), Label).Text
                    RetrieveData()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0

                    txtGridIndex.Text = 0

                    btnEditSchDate.Visible = True
                    btnEditTeam.Visible = True
                    btnEditServInst.Visible = True
                    btnEditRemarks.Visible = True
                    btnEditClientSign.Visible = True
                    btnEditCollectedAmount.Visible = True
                    btnEditOurRef.Visible = True

                    btnEditManualContractNo.Visible = True
                    btnEditPONo.Visible = True
                    btnEditWorkOrderNo.Visible = True


                    tableadd.Visible = False
                    tableaddHeader.Visible = False
                    tableedit.CssClass = "dummybutton"

                    CheckTab()
                    tb1.ActiveTabIndex = 0
                    'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                    AccessControl()
                    'End If

                    'GridView1_SelectedIndexChanged(sender, e)
                End If
            End If


            ''''''''''''''''''''''''''''
            chkStatusSearch.ClearSelection()
            'lblContract.Visible = False
            'lblContract1.Text = ""
            '    txtSearchSvc.Text = "Search Here"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnQuickSearch_Click", ex.Message.ToString, qry)
            lblAlert.Text = ex.Message.ToString
        End Try
    End Sub

    'Protected Sub txtCustSvcAddress_TextChanged(sender As Object, e As EventArgs) Handles txtCustSvcAddress.TextChanged
    '    If txtPopUpClient.Text.Trim = "" Then
    '        MessageBox.Message.Alert(Page, "Please enter search text", "str")
    '    Else
    '        txtPopupClientSearch.Text = txtPopUpClient.Text
    '        ' SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "' order by contname"
    '        If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
    '            SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.companygroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False and b.address1 like '%" + txtCustSvcAddress.Text + "%' order by A.Accountid, b.LocationId "

    '        ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
    '            SqlDSClient.SelectCommand = "SELECT  *, b.LocationId, b.Address1 as ServiceAddress1,b.contractgroup  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid   where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.persongroup='" + ddlCompanyGrp.Text + "' and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.contACTperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationID like '%" + txtPopupClientSearch.Text + "%') and  A.Inactive =False and b.address1 like '%" + txtCustSvcAddress.Text + "%' order by A.Accountid, b.LocationId "

    '        End If
    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '        mdlPopUpClient.Show()
    '        txtIsPopUp.Text = "Client"
    '    End If

    '    txtPopUpClient.Text = "Search Here for AccountID or Client details"

    'End Sub

    'Protected Sub txtCustPPSvcAddress_TextChanged(sender As Object, e As EventArgs) Handles txtCustPPSvcAddress.TextChanged
    '    If txtPpClientSearch.Text.Trim = "" Then
    '        MessageBox.Message.Alert(Page, "Please enter search text", "str")
    '    Else
    '        txtPpclient.Text = txtPpClientSearch.Text
    '        '    If txtClientModal.Text = "ID" Then
    '        '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and (ContID like '" + txtPpclient.Text.Trim + "%' OR ACCOUNTID Like '%" + txtPpclient.Text.Trim + "%') order by contname"
    '        'SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where AccountID like '" + txtPpclient.Text.Trim + "%' OR ID Like '%" + txtPpclient.Text.Trim + "%' or name like '" + txtPpclient.Text.Trim + "%')"
    '        '    SqlDSClientSearch.SelectCommand = "(SELECT B.Companyid as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1, B.ContractGroup, B.ServiceName  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.Companyid Like '%" + txtPpclient.Text.Trim + "%' OR A.Name Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%'  and b.address1 like '%" + txtCustPPSvcAddress.Text.Trim + "%') union (SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1, D.ContractGroup, D.ServiceName  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PersonID Like '%" + txtPpclient.Text.Trim + "%' OR C.Name Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%'  and D.address1 like '%" + txtCustPPSvcAddress.Text.Trim + "%') order BY AccountId, LocationId"
    '        SqlDSClientSearch.SelectCommand = "select * from (" + SqlDSClientSearch.SelectCommand + ") as tbl where serviceaddress1 like '%" + txtCustPPSvcAddress.Text.Trim + "%'"
    '        'Else
    '        '    '   SqlDSClientSearch.SelectCommand = "SELECT distinct * From tblContactMaster where rcno <>0 and ContName like '" + txtPpclient.Text.Trim + "%' order by contname"
    '        '    SqlDSClientSearch.SelectCommand = "(SELECT id,name,accountid,contactperson From tblCompany where name like '" + txtPpclient.Text.Trim + "%') union (SELECT id,name,accountid,contactperson From tblperson where Name like '" + txtPpclient.Text.Trim + "%')"

    '        'End If
    '        SqlDSClientSearch.DataBind()
    '        gvClientSearch.DataBind()

    '    End If

    '    txtPpClientSearch.Text = "Search Here for AccountID or Client details"
    '    mdlPpClientSearch.Show()
    '    txtIsPopUp.Text = "ClientSearch"
    'End Sub

    Protected Sub btnImgEditIncharge1_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditIncharge1.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditIncharge1"
            txtModal.Text = "EditIncharge1"

            Dim strsql As String
            strsql = ""


            If String.IsNullOrEmpty(txtEditIncharge1.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditIncharge1.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT distinct StaffID, Name From tblstaff where ((staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%') or (name like '%" + txtPopupStaffSearch.Text + "%')) "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

                strsql = "SELECT distinct StaffID, Name, Status From tblstaff where 1=1 "
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditIncharge1_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnImgEditSupervisor1_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditSupervisor1.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditSupervisor1"
            txtModal.Text = "EditSupervisor1"

            Dim strsql As String
            strsql = ""

            If String.IsNullOrEmpty(txtEditSupervisor1.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditSupervisor1.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"


                strsql = "SELECT distinct StaffID, Name From tblstaff where ((staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%') or (name like '%" + txtPopupStaffSearch.Text + "%')) "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

                strsql = "SELECT distinct StaffID, Name From tblstaff where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditSupervisor1_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnImgEditSvcBy1_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditSvcBy1.Click
        Try
            mdlPopupStaff.TargetControlID = "btnImgEditSvcBy1"
            txtModal.Text = "EditSvcBy1"

            Dim strsql As String
            strsql = ""


            If String.IsNullOrEmpty(txtEditSvcBy1.Text.Trim) = False Then
                txtPopUpStaff.Text = txtEditSvcBy1.Text
                txtPopupStaffSearch.Text = txtPopUpStaff.Text
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

                strsql = "SELECT distinct StaffID, Name From tblstaff where ((staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%') or (name like '%" + txtPopupStaffSearch.Text + "%')) "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            Else
                'SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

                strsql = "SELECT distinct StaffID, Name From tblstaff where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by staffid"
                SqlDSStaffID.SelectCommand = strsql

                SqlDSStaffID.DataBind()
                gvStaff.DataBind()
            End If
            mdlPopupStaff.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditSvcBy1_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnImgEditTeam1_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditTeam1.Click
        Try
            mdlPopUpTeam.TargetControlID = "btnImgEditTeam1"
            txtModal.Text = "ImgEditTeam1"
            ' Try

            Dim strsql As String
            strsql = ""

            If String.IsNullOrEmpty(txtEditTeam1.Text.Trim) = False Then
                txtPopupTeamSearch.Text = txtEditTeam1.Text.Trim
                txtPopUpTeam.Text = txtPopupTeamSearch.Text

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamId, TeamName, InChargeID, Vehnos, Supervisor, Status, Location  From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql


                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            Else
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"

                strsql = "SELECT distinct TeamId, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where  Status <> 'N'  "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql

                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            End If

            'Catch ex As Exception
            '    InsertIntoTblWebEventLog("btnImgEditTeam_Click", ex.Message.ToString, txtEditTeam.Text)
            'End Try
            mdlPopUpTeam.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditTeam1_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnImgEditVehNo1_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgEditVehNo1.Click
        Try
            mdlPopUpAsset.TargetControlID = "btnImgEditVehNo1"
            txtModal.Text = "EditVehNo1"

            Dim strsql As String
            strsql = ""


            If String.IsNullOrEmpty(txtEditVehNo1.Text.Trim) = False Then
                txtPopUpAsset.Text = txtEditVehNo1.Text.Trim
                txtPopupAssetSearch.Text = txtPopUpAsset.Text

                'SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0 and upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%'"


                strsql = "SELECT distinct AssetNo, AssetRegNo, InChargeID, Descrip, Type, Rcno From tblasset where upper(assetno) Like '%" + txtPopupAssetSearch.Text.Trim.ToUpper + "%' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by AssetNo"
                SqlDSAsset.SelectCommand = strsql
                SqlDSAsset.DataBind()
                gvAsset.DataBind()
            Else

                'SqlDSAsset.SelectCommand = "SELECT distinct * From tblasset where rcno <>0"

                strsql = "SELECT distinct AssetNo, AssetRegNo, InChargeID, Descrip, Type, Rcno From tblasset where 1=1 "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by AssetNo"
                SqlDSAsset.SelectCommand = strsql
                SqlDSAsset.DataBind()
                gvAsset.DataBind()
            End If

            mdlPopUpAsset.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImgEditVehNo1_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub btnEditClientSign_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditClientSign.Click

        lblMessage.Text = ""
        lblAlertSign.Text = ""
        lblAlert.Text = ""
        chkEditReqCustSign.Checked = chkReqCustSign.Checked

        mdlPopupEditSign.Show()

    End Sub

    Protected Sub btnSaveEditSign_Click(sender As Object, e As EventArgs) Handles btnSaveEditSign.Click
        If chkEditReqCustSign.Checked = chkReqCustSign.Checked Then
            lblAlertSign.Text = "NO CHANGES MADE"
            mdlPopupEditSign.Show()
            '  Return
        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "UPDATE tblservicerecord SET RequireClientSignature=@RequireClientSignature,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)

            command.Parameters.Clear()

            If chkEditReqCustSign.Checked = True Then
                command.Parameters.AddWithValue("@RequireClientSignature", 1)
            Else
                command.Parameters.AddWithValue("@RequireClientSignature", 0)
            End If
            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Connection = conn

            command.ExecuteNonQuery()


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT REQUIRE CLIENT SIGN", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()
            chkReqCustSign.Checked = chkEditReqCustSign.Checked

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
            'InsertNewLog()
            mdlPopupEditBillAmt.Hide()
            '    GridView1.SelectedIndex = Convert.ToInt16(txtGridIndex.Text)

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditSign_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub

    Public Sub FindLocation()
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT LocationId, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtLocation.Text = dt.Rows(0)("LocationId").ToString
            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("FindLocation", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnEditCollectedAmount_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditCollectedAmount.Click
        lblAlertCollection.Text = ""
        lblMsgCollection.Text = ""
        mdlPopupEditCollectedAmt.Show()
    End Sub

    Protected Sub btnSaveEditCollectedAmount_Click(sender As Object, e As EventArgs) Handles btnSaveEditCollectedAmount.Click
        lblAlertCollection.Text = ""
        lblMsgCollection.Text = ""

        If String.IsNullOrEmpty(txtEditAmountReceived.Text.Trim) = True Then
            lblAlertCollection.Text = "PLEASE ENTER COLLECTED AMOUNT"
            mdlPopupEditCollectedAmt.Show()
            Return
        End If

        If String.IsNullOrEmpty(txtEditAmountReceived.Text.Trim) = False Then
            If Convert.ToDecimal(txtEditAmountReceived.Text.Trim) = 0.0 Then
                lblAlertCollection.Text = "PLEASE ENTER COLLECTED AMOUNT"
                mdlPopupEditCollectedAmt.Show()
                Return
            End If
        End If

        If String.IsNullOrEmpty(txtEditPaymentType.Text.Trim) = True Then
            lblAlertCollection.Text = "PLEASE ENTER PAYMENT TYPE"
            mdlPopupEditCollectedAmt.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET CollectAmt = @CollectAmt, RefNo = @RefNo, Settle = @Settle,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
            command1.Parameters.Clear()

            If String.IsNullOrEmpty(txtAmountRecvd.Text.Trim) = True Then
                command1.Parameters.AddWithValue("@CollectAmt", 0)
            Else
                command1.Parameters.AddWithValue("@CollectAmt", txtEditAmountReceived.Text)
            End If
            command1.Parameters.AddWithValue("@RefNo", txtEditRefNo.Text.ToUpper)
            command1.Parameters.AddWithValue("@Settle", txtEditPaymentType.Text.ToUpper)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command1.Dispose()


            txtAmountRecvd.Text = txtEditAmountReceived.Text
            txtRefNo.Text = txtEditRefNo.Text
            txtPaymentType.Text = txtEditPaymentType.Text

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT PAYMENT INFO", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()


            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            'InsertNewLog()
            'GridView1.DataBind()

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", txtContractNo.Text, "EDITSCHEDULER", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)

            'GridView1.DataSourceID = "SqlDataSource1"
            'mdlPopupNotes.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditCollectedAmount_Click", ex.Message.ToString, txtSvcRecord.Text)
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnEditOurRef_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditOurRef.Click
        txtEditOurRef.Text = txtOurRef.Text

        txtManualContractNoEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPoNo.Text
        txtWorkOrderNoEdit.Text = txtWorkOrderNo.Text
        txtEditOurRef.Focus()
        mdlPopupManualContractPOWOEdit.Show()

        'txtEditOurRef.Text = txtOurRef.Text

        'mdlPopupEditOurRef.Show()
    End Sub

    Protected Sub btnSaveEditOurRef_Click(sender As Object, e As EventArgs) Handles btnSaveEditOurRef.Click
        lblAlertManualReportNo.Text = ""
        lblMsgManualReportNo.Text = ""

        'If String.IsNullOrEmpty(txtEditOurRef.Text.Trim) = True Then
        '    lblAlertCollection.Text = "PLEASE ENTER REPORT NO."
        '    mdlPopupEditOurRef.Show()
        '    Return
        'End If


        Try

            If String.IsNullOrEmpty(txtEditOurRef.Text) = False Then
                If CheckIfExistsManualReportNo(txtEditOurRef.Text) = True Then
                    lblAlertManualReportNo.Text = "MANUAL REPORT NO. ALREADY EXISTS"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    mdlPopupEditOurRef.Show()
                    Exit Sub

                End If
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
            command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where RecordNo = '" & txtSvcRecord.Text & "'"

            command1.Parameters.Clear()

            If String.IsNullOrEmpty(txtEditOurRef.Text.Trim) = True Then
                command1.Parameters.AddWithValue("@OurRef", "")
            Else
                command1.Parameters.AddWithValue("@OurRef", txtEditOurRef.Text)
            End If

            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command1.Dispose()


            txtOurRef.Text = txtEditOurRef.Text


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT MANUAL REPORT NO.", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()


            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()
         
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditOurRef_Click", ex.Message.ToString, txtSvcRecord.Text)
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    'Protected Sub gvUpload_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles gvUpload.RowCommand
    '    If e.CommandName = "Delete" Then

    '    End If
    'End Sub

    'Private Function GetDataSet() As DataTable
    '    Try
    '        Dim qry As String = ""

    '        qry = "SELECT A.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent, A.ServiceBy, A.ServiceDate, A.SchServiceTime, A.SchServiceTimeOut, A.ScheduleType, A.LocationId, A.ServiceName, A.Address1 AS ServiceAddress, A.AddPostal as Postal, B.BillingFrequency, A.BillAmount as ToBillAmount, A.BilledAmt, A.BillNo, A.ContactPersonID as ContactPerson, replace(replace(A.Notes, char(10), ' '), char(13), ' ') as ServiceDescription, replace(replace(A.Comments, char(10), ' '), char(13), ' ') as ServiceInstruction,"
    '        qry = qry + " A.RecordNo, b.ContractNo,B.ContractGroup,A.CompanyGroup,A.ContactType, A.AccountId, A.CustName as AccountName, replace(replace(A.Email, char(10), ' '), char(13), ' ') as Email, replace(replace(A.Description, char(10), ' '), char(13), ' ') as Description, replace(replace(A.Remarks, char(10), ' '), char(13), ' ') as Remarks, A.TeamId, A.Scheduler, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn, A.Rcno"
    '        qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo "



    '        'qry = "SELECT A.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent, A.ServiceBy, A.ServiceDate, A.SchServiceTime, A.SchServiceTimeOut, A.ScheduleType, A.LocationId, A.ServiceName, A.Address1 AS ServiceAddress, A.AddPostal as Postal, B.BillingFrequency, A.BillAmount as ToBillAmount, A.BilledAmt, A.BillNo, A.ContactPersonID as ContactPerson, replace(replace(A.Notes, char(10), ' '), char(13), ' ') as ServiceDescription, replace(replace(A.Comments, char(10), ' '), char(13), ' ') as ServiceInstruction,"
    '        'qry = qry + " A.RecordNo, b.ContractNo, A.ContactType, A.AccountId, A.CustName as AccountName, replace(replace(A.Email, char(10), ' '), char(13), ' ') as Email, replace(replace(A.Description, char(10), ' '), char(13), ' ') as Description, replace(replace(A.Remarks, char(10), ' '), char(13), ' ') as Remarks, A.TeamId, A.Scheduler, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn, A.Rcno,  ifnull(left(D.JobStatus,1),'') as JobStatus"
    '        'qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo  where  "

    '        ' qry = qry.Replace("A.Description", "replace(replace(Notes, char(10), ' '), char(13), ' ') as Notes")

    '        Dim query As String = txt.Text
    '        query = qry + query.Substring(query.IndexOf("where"))


    '        Dim dt As New DataTable()
    '        Dim conn As MySqlConnection = New MySqlConnection()
    '        Dim cmd As MySqlCommand = New MySqlCommand

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

    '        Dim sda As New MySqlDataAdapter()
    '        cmd.CommandType = CommandType.Text
    '        cmd.CommandText = query

    '        cmd.Connection = conn
    '        Try
    '            conn.Open()
    '            sda.SelectCommand = cmd
    '            sda.Fill(dt)

    '            Return dt
    '        Catch ex As Exception
    '            Throw ex
    '        Finally
    '            conn.Close()
    '            sda.Dispose()
    '            conn.Dispose()
    '        End Try
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("GetDataSet", ex.Message.ToString, txtTechRcNo.Text)
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Function

    Private Function GetDataSet() As DataTable
        Try
            Dim qry As String = ""

            InsertIntoTblWebEventLog("SERVICE - " + Session("UserID"), "FUNCTION GetDataSet", txtGrid.Text)

            Dim query As String = txtGrid.Text
            'query = qry + query.Substring(query.IndexOf("where"))


            Dim dt As New DataTable()
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim cmd As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim sda As New MySqlDataAdapter()
            cmd.CommandType = CommandType.Text
            cmd.CommandText = query

            cmd.Connection = conn
            Try
                conn.Open()
                sda.SelectCommand = cmd
                sda.Fill(dt)

                Return dt
            Catch ex As Exception
                Throw ex
            Finally
                conn.Close()
                sda.Dispose()
                conn.Dispose()
            End Try
        Catch ex As Exception
            InsertIntoTblWebEventLog("SERVICE - " + Session("UserID"), "FUNCTION GetDataSet", ex.Message.ToString)
            'InsertIntoTblWebEventLog("GetDataSet", ex.Message.ToString, txtReceiptNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function
    Public Sub WriteExcelWithNPOI(ByVal dt As DataTable, ByVal extension As String)
        Dim workbook As IWorkbook

        If extension = "xlsx" Then
            workbook = New XSSFWorkbook()
        ElseIf extension = "xls" Then
            workbook = New HSSFWorkbook()
        Else
            Throw New Exception("This format is not supported")
        End If

        Dim sheet1 As ISheet = workbook.CreateSheet("Sheet1")

        'Add Selection Criteria

        Dim row1 As IRow = sheet1.CreateRow(0)
        Dim cell1 As ICell = row1.CreateCell(0)
        '  cell1.SetCellValue(Session("Selection").ToString)
        'cell1.SetCellValue("(" + ConfigurationManager.AppSettings("DomainName").ToString() + ")" + Session("Selection").ToString)
        cell1.SetCellValue("(" + ConfigurationManager.AppSettings("DomainName").ToString() + ") - Service Listing")

        cell1.CellStyle.WrapText = True
        Dim cra = New NPOI.SS.Util.CellRangeAddress(0, 0, 0, 8)
        sheet1.AddMergedRegion(cra)

        'Add Column Heading
        row1 = sheet1.CreateRow(1)

        Dim testeStyle As ICellStyle = workbook.CreateCellStyle()
        testeStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

        testeStyle.FillForegroundColor = IndexedColors.RoyalBlue.Index
        testeStyle.FillPattern = FillPattern.SolidForeground
        '  testeStyle.FillForegroundColor = IndexedColors.White.Index
        testeStyle.Alignment = HorizontalAlignment.Center

        Dim RowFont As IFont = workbook.CreateFont()
        RowFont.Color = IndexedColors.White.Index
        RowFont.IsBold = True

        testeStyle.SetFont(RowFont)

        For j As Integer = 0 To dt.Columns.Count - 1
            Dim cell As ICell = row1.CreateCell(j)
            ' InsertIntoTblWebEventLog("WriteExcel", dt.Columns(j).GetType().ToString(), dt.Columns(j).ToString())

            Dim columnName As String = dt.Columns(j).ToString()
            cell.SetCellValue(columnName)
            ' cell.Row.RowStyle.FillBackgroundColor = IndexedColors.LightBlue.Index
            cell.CellStyle = testeStyle

        Next

        'Add details
        Dim _doubleCellStyle As ICellStyle = Nothing

        If _doubleCellStyle Is Nothing Then
            _doubleCellStyle = workbook.CreateCellStyle()
            _doubleCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            _doubleCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("#,##0.00")
        End If

        Dim _intCellStyle As ICellStyle = Nothing

        If _intCellStyle Is Nothing Then
            _intCellStyle = workbook.CreateCellStyle()
            _intCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            _intCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("#,##0")
        End If

        Dim dateCellStyle As ICellStyle = Nothing

        If dateCellStyle Is Nothing Then
            dateCellStyle = workbook.CreateCellStyle()
            dateCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            dateCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("dd-mm-yyyy")
        End If

        Dim AllCellStyle As ICellStyle = Nothing

        AllCellStyle = workbook.CreateCellStyle()
        AllCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

     
        For i As Integer = 0 To dt.Rows.Count - 1
            Dim row As IRow = sheet1.CreateRow(i + 2)

            For j As Integer = 0 To dt.Columns.Count - 1
                Dim cell As ICell = row.CreateCell(j)

                If j = 16 Or j = 17 Or j = 46 Then
                    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                        Dim d As Double = Convert.ToDouble(dt.Rows(i)(j).ToString)
                        cell.SetCellValue(d)
                    Else
                        Dim d As Double = Convert.ToDouble("0.00")
                        cell.SetCellValue(d)
                    End If

                    cell.CellStyle = _doubleCellStyle
                ElseIf j = 4 Or j = 43 Or j = 44 Or j = 45 Or j = 49 Or j = 51 Then
                    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                        Dim d As DateTime = Convert.ToDateTime(dt.Rows(i)(j).ToString())
                        cell.SetCellValue(d)
                    End If

                    cell.CellStyle = dateCellStyle
                Else
                    cell.SetCellValue(dt.Rows(i)(j).ToString)
                    cell.CellStyle = AllCellStyle

                End If
                If i = dt.Rows.Count - 1 Then
                    sheet1.AutoSizeColumn(j)
                End If
            Next
        Next

        Using exportData = New MemoryStream()
            Response.Clear()
            workbook.Write(exportData)
            '  Dim criteria As String = "_" + txtSvcDateFrom.Text + "_" + DateTime.Now.ToString("yyyyMMdd_hhmmss")
            Dim attachment As String = ""

            'attachment = "attachment; filename=PortfolioSummary" + txtCriteria.Text + "_By" + rbtnSelect.SelectedItem.Text
            attachment = "attachment; filename=Service"

            If extension = "xlsx" Then
                Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                Response.AddHeader("Content-Disposition", String.Format(attachment + ".xlsx"))
                Response.BinaryWrite(exportData.ToArray())
            ElseIf extension = "xls" Then
                Response.ContentType = "application/vnd.ms-excel"
                Response.AddHeader("Content-Disposition", String.Format("attachment;filename={0}", "PortfolioSummary.xls"))
                Response.BinaryWrite(exportData.GetBuffer())
            End If

            Response.[End]()
        End Using
    End Sub


    Protected Sub btnExportToExcel_Click(sender As Object, e As EventArgs) Handles btnExportToExcel.Click
        Try

            If String.IsNullOrEmpty(txt.Text) = False Then

                'If GetData() = True Then
                'MessageBox.Message.Alert(Page, txtQuery.Text, "str")
                'Return

                Dim dt As DataTable = GetDataSet()
                WriteExcelWithNPOI(dt, "xlsx")
                Return

                Dim attachment As String = "attachment; filename=Service.xls"
                Response.ClearContent()
                Response.AddHeader("content-disposition", attachment)
                Response.ContentType = "application/vnd.ms-excel"
                Dim tab As String = ""
                For Each dc As DataColumn In dt.Columns
                    Response.Write(tab + dc.ColumnName)
                    tab = vbTab
                Next
                Response.Write(vbLf)
                Dim i As Integer
                For Each dr As DataRow In dt.Rows
                    tab = ""
                    For i = 0 To dt.Columns.Count - 1
                        Response.Write(tab & dr(i).ToString())
                        tab = vbTab
                    Next
                    Response.Write(vbLf)
                Next
                Response.[End]()

                dt.Clear()


            Else
                lblAlert.Text = "NO DATA TO EXPORT"
            End If
            ''  ExportGridToExcel()

            'If String.IsNullOrEmpty(txt.Text) = False Then

            '    Dim dt As DataTable = GetDataSet()
            '    Dim attachment As String = "attachment; filename=Service.xls"
            '    Response.ClearContent()
            '    Response.AddHeader("content-disposition", attachment)
            '    Response.ContentType = "application/vnd.ms-excel"
            '    Response.ContentEncoding = System.Text.Encoding.GetEncoding("Windows-1252")
            '    Dim tab As String = ""
            '    For Each dc As DataColumn In dt.Columns
            '        Response.Write(tab + dc.ColumnName)
            '        tab = vbTab
            '    Next
            '    Response.Write(vbLf)
            '    Dim i As Integer
            '    For Each dr As DataRow In dt.Rows
            '        tab = ""
            '        For i = 0 To dt.Columns.Count - 1
            '            Response.Write(tab & dr(i).ToString())
            '            tab = vbTab
            '        Next
            '        Response.Write(vbLf)
            '    Next

            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", "", "btnExportToExcel_Click", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountID.Text, "", txtRcno.Text)
            '    Response.End()
            '    dt.Clear()


            '    'Response.ContentType = ContentType
            '    'Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
            '    'Response.WriteFile(filePath)
            '    'Response.End()
            'Else
            '    lblAlert.Text = "NO DATA TO EXPORT"
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnExportToExcel_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub ExportGridToExcel()
        Try
            Response.Clear()
            Response.AddHeader("content-disposition", "attachment;filename=Service.xls")
            Response.ContentType = "File/Data.xls"
            Dim StringWriter As StringWriter = New System.IO.StringWriter()
            Dim HtmlTextWriter As HtmlTextWriter = New HtmlTextWriter(StringWriter)
            GridView1.RenderControl(HtmlTextWriter)
            Response.Write(StringWriter.ToString())
            Response.[End]()
        Catch ex As Exception
            InsertIntoTblWebEventLog("ExportGridToExcel", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Public Overrides Sub VerifyRenderingInServerForm(ByVal control As Control)
    'End Sub


    Protected Sub SqlDSStaff_Selecting(sender As Object, e As SqlDataSourceSelectingEventArgs) Handles SqlDSStaff.Selecting

    End Sub

    Protected Sub btnPhotoUpload_Click(sender As Object, e As EventArgs) Handles btnPhotoUpload.Click
        'lblAlert.Text = ""
        'Try
        '    If FileUpload2.HasFile Then

        '        If FileUpload2.PostedFile.ContentLength > 3000000 Then
        '            lblAlert.Text = "PHOTO UPLOAD EXCEEDS THE MAXIMUM LIMIT"
        '            Return
        '        End If

        '        Dim fileName As String = Path.GetFileName(FileUpload2.PostedFile.FileName)
        '        Dim ext As String = Path.GetExtension(fileName)

        '        If ext = ".jpg" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".jpeg" Or ext = ".bmp" Or ext = ".BMP" Or ext = ".PNG" Or ext = ".png" Then


        '            Dim st As System.IO.Stream = FileUpload2.PostedFile.InputStream
        '            Dim original As Image = Image.FromStream(st)
        '            Dim resized As Image = ResizeImage(original, New Size(320, 240))
        '            Dim memStream As MemoryStream = New MemoryStream()
        '            resized.Save(memStream, System.Drawing.Imaging.ImageFormat.Jpeg)
        '            '  resized.Save(Server.MapPath("~/Uploads/") + Convert.ToString(Session("UserID")) + "_" + FileUpload2.FileName.ToString)

        '            ' ImgConvert()
        '            ' Return

        '            Dim conn As MySqlConnection = New MySqlConnection()
        '            Dim cmd As MySqlCommand = New MySqlCommand

        '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
        '            conn.Open()

        '            Dim command As MySqlCommand = New MySqlCommand

        '            command.CommandType = CommandType.Text

        '            command.Connection = conn
        '            command.CommandText = "Insert into tblServicePhoto(RecordNo,Photo,FileType,FileSize,CreatedBy,CreatedOn,Description) values(@RecordNo,@Photo,@FileType,@FileSize,@CreatedBy,@CreatedOn,@Description);"
        '            command.Parameters.Clear()
        '            command.Parameters.AddWithValue("@RecordNo", lblRecordNo6.Text)
        '            'Upload image
        '            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        '            ''getting length of uploaded file
        '            'Dim length As Integer = FileUpload2.PostedFile.ContentLength
        '            ''     MessageBox.Message.Alert(Page, length.ToString, "str")
        '            ''create a byte array to store the binary image data
        '            'Dim imgbyte As Byte() = New Byte(length - 1) {}
        '            ''store the currently selected file in memeory
        '            'Dim img As HttpPostedFile = FileUpload2.PostedFile
        '            ''set the binary data
        '            'img.InputStream.Read(imgbyte, 0, length)
        '            'Dim bytes As Byte() = FileUpload2.FileBytes

        '            '    Image2.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(bytes)
        '            '   VaryQualityLevel()

        '            '  Dim img As Image = Image.FromStream(memStream)

        '            'getting length of uploaded file
        '            '  Dim length As Integer = resized.

        '            '     MessageBox.Message.Alert(Page, length.ToString, "str")
        '            'create a byte array to store the binary image data
        '            '     Dim imgbyte As Byte() = New Byte(length - 1) {}
        '            'store the currently selected file in memeory
        '            '  Dim img As HttpPostedFile = FileUpload2.PostedFile
        '            'set the binary data
        '            '  img.InputStream.Read(imgbyte, 0, length)
        '            '    Dim bytes As Byte() = FileUpload2.FileBytes
        '            'Dim imgformat As String = ""
        '            'If resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Jpeg) Then
        '            '    imgformat = "image/jpeg"
        '            'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Bmp) Then
        '            '    imgformat = "image/bmp"
        '            'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Emf) Then
        '            '    imgformat = "image/emf"
        '            'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Exif) Then
        '            '    imgformat = "image/exif"
        '            'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Gif) Then
        '            '    imgformat = "image/gif"
        '            'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Icon) Then
        '            '    imgformat = "image/icon"
        '            'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Png) Then
        '            '    imgformat = "image/png"
        '            'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Tiff) Then
        '            '    imgformat = "image/tiff"
        '            'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Wmf) Then
        '            '    imgformat = "image/wmf"

        '            'End If


        '            command.Parameters.AddWithValue("@Photo", memStream.ToArray)
        '            command.Parameters.AddWithValue("@FileType", GetMimeType(original).ToString)
        '            command.Parameters.AddWithValue("@FileSize", memStream.Length.ToString)
        '            command.Parameters.AddWithValue("@CreatedBy", Convert.ToString(Session("UserID")))
        '            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        '            command.Parameters.AddWithValue("@Description", txtPhotoDescription.Text.ToUpper)

        '            command.ExecuteNonQuery()
        '            command.Dispose()
        '            conn.Close()
        '            conn.Dispose()
        '            lblAlert.Text = "IMAGE UPLOADED"
        '            BindGrid()

        '            'For Each codec As System.Drawing.Imaging.ImageCodecInfo In System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
        '            '    lblAlert.Text += codec.FormatID.ToString

        '            '    If codec.FormatID = resized.RawFormat.Guid Then
        '            '        '  lblAlert.Text = codec.FormatID.ToString + " // " + codec.MimeType.ToString

        '            '    End If

        '            'Next
        '            'lblAlert.Text += original.RawFormat.Guid.ToString
        '        End If


        '    Else
        '        lblAlert.Text = "SELECT PICTURE TO UPLOAD"

        '    End If
        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("btnPhotoUpload_Click", ex.Message.ToString, txtTechRcNo.Text)
        '    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        'End Try

        lblAlert.Text = ""
        Try
            '    InsertIntoTblWebEventLog("btnPhotoUpload_Click", FileUpload2.HasFile.ToString, txtRecordNoSelected.Text)

            If FileUpload2.HasFile Then

                Dim _HttpFileCollection As HttpFileCollection = Request.Files
                '   InsertIntoTblWebEventLog("btnPhotoUpload_Click", _HttpFileCollection.Count.ToString, txtRecordNoSelected.Text)
                For i As Integer = 0 To _HttpFileCollection.Count - 1
                    Dim _HttpPostedFile As HttpPostedFile = _HttpFileCollection(i)
                    If _HttpPostedFile.ContentLength > 0 Then _HttpPostedFile.SaveAs(Server.MapPath("~/Uploads/Photos/" & Path.GetFileName(_HttpPostedFile.FileName)))


                    If _HttpPostedFile.ContentLength > 200000000 Then
                        lblAlert.Text = "PHOTO UPLOAD EXCEEDS THE MAXIMUM LIMIT. FILENAME : " + _HttpPostedFile.FileName.ToString
                        Return
                    End If

                    Dim fileName As String = Path.GetFileName(_HttpPostedFile.FileName)
                    Dim ext As String = Path.GetExtension(fileName)

                    If ext = ".jpg" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".jpeg" Or ext = ".bmp" Or ext = ".BMP" Or ext = ".PNG" Or ext = ".png" Then


                        Dim st As System.IO.Stream = _HttpPostedFile.InputStream
                        Dim original As Image = Image.FromStream(st)
                        Dim memStream As MemoryStream = New MemoryStream()
                        If chkLargePhoto.Checked = True Then
                            original.Save(memStream, System.Drawing.Imaging.ImageFormat.Jpeg)
                        Else
                            Dim resized As Image = ResizeImage(original, New Size(320, 240))

                            resized.Save(memStream, System.Drawing.Imaging.ImageFormat.Jpeg)
                        End If

                        '  resized.Save(Server.MapPath("~/Uploads/") + Convert.ToString(Session("UserID")) + "_" + FileUpload2.FileName.ToString)

                        ' ImgConvert()
                        ' Return

                        Dim conn As MySqlConnection = New MySqlConnection()
                        Dim cmd As MySqlCommand = New MySqlCommand

                        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
                        conn.Open()

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text

                        command.Connection = conn
                        command.CommandText = "Insert into tblServicePhoto(RecordNo,Photo,FileType,FileSize,CreatedBy,CreatedOn,Description,LargePhoto) values(@RecordNo,@Photo,@FileType,@FileSize,@CreatedBy,@CreatedOn,@Description,@LargePhoto);"
                        command.Parameters.Clear()
                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo6.Text)
                        'Upload image
                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        ''getting length of uploaded file
                        'Dim length As Integer = FileUpload2.PostedFile.ContentLength
                        ''     MessageBox.Message.Alert(Page, length.ToString, "str")
                        ''create a byte array to store the binary image data
                        'Dim imgbyte As Byte() = New Byte(length - 1) {}
                        ''store the currently selected file in memeory
                        'Dim img As HttpPostedFile = FileUpload2.PostedFile
                        ''set the binary data
                        'img.InputStream.Read(imgbyte, 0, length)
                        'Dim bytes As Byte() = FileUpload2.FileBytes

                        '    Image2.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(bytes)
                        '   VaryQualityLevel()

                        '  Dim img As Image = Image.FromStream(memStream)

                        'getting length of uploaded file
                        '  Dim length As Integer = resized.

                        '     MessageBox.Message.Alert(Page, length.ToString, "str")
                        'create a byte array to store the binary image data
                        '     Dim imgbyte As Byte() = New Byte(length - 1) {}
                        'store the currently selected file in memeory
                        '  Dim img As HttpPostedFile = FileUpload2.PostedFile
                        'set the binary data
                        '  img.InputStream.Read(imgbyte, 0, length)
                        '    Dim bytes As Byte() = FileUpload2.FileBytes
                        'Dim imgformat As String = ""
                        'If resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Jpeg) Then
                        '    imgformat = "image/jpeg"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Bmp) Then
                        '    imgformat = "image/bmp"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Emf) Then
                        '    imgformat = "image/emf"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Exif) Then
                        '    imgformat = "image/exif"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Gif) Then
                        '    imgformat = "image/gif"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Icon) Then
                        '    imgformat = "image/icon"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Png) Then
                        '    imgformat = "image/png"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Tiff) Then
                        '    imgformat = "image/tiff"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Wmf) Then
                        '    imgformat = "image/wmf"

                        'End If


                        command.Parameters.AddWithValue("@Photo", memStream.ToArray)
                        command.Parameters.AddWithValue("@FileType", GetMimeType(original).ToString)
                        command.Parameters.AddWithValue("@FileSize", memStream.Length.ToString)
                        command.Parameters.AddWithValue("@CreatedBy", Convert.ToString(Session("UserID")))
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Description", txtPhotoDescription.Text.ToUpper)
                        If chkLargePhoto.Checked Then
                            command.Parameters.AddWithValue("@LargePhoto", True)
                        Else
                            command.Parameters.AddWithValue("@LargePhoto", False)
                        End If
                        command.ExecuteNonQuery()
                        command.Dispose()
                        conn.Close()
                        conn.Dispose()
                        lblAlert.Text = "IMAGE UPLOADED"
                        BindGrid()
                        DisplayNoOfPhoto()

                        'lblServicePhotosCount.Text = "Service Photos [" & gvImages.Rows.Count & "]"
                        'For Each codec As System.Drawing.Imaging.ImageCodecInfo In System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
                        '    lblAlert.Text += codec.FormatID.ToString

                        '    If codec.FormatID = resized.RawFormat.Guid Then
                        '        '  lblAlert.Text = codec.FormatID.ToString + " // " + codec.MimeType.ToString

                        '    End If

                        'Next
                        'lblAlert.Text += original.RawFormat.Guid.ToString
                    End If
                Next


            Else
                lblAlert.Text = "SELECT PICTURE TO UPLOAD"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPhotoUpload_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Public Shared Function GetMimeType(ByVal i As Image) As String
        For Each codec As System.Drawing.Imaging.ImageCodecInfo In System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
            If codec.FormatID = i.RawFormat.Guid Then Return codec.MimeType

        Next

        Return "image/unknown"
    End Function

    'Private Sub ImgConvert()

    '    Dim st As System.IO.Stream = FileUpload2.PostedFile.InputStream
    '    Dim myImage As Bitmap = System.Drawing.Image.FromStream(st)
    '    Dim newImg As Bitmap = New Bitmap(120, 120, System.Drawing.Imaging.PixelFormat.Format16bppRgb555)
    '    Dim newGraphic As Graphics = Graphics.FromImage(newImg)
    '    newGraphic.DrawImage(myImage, 0, 0, 120, 120)
    '    newGraphic.Dispose()
    '    ' Dim grst As System.Drawing.Drawing2D.GraphicsState = newGraphic.Save()
    '    ' newImg.Save("c:\TestPhoto.jpg")
    '    newImg.Save(Server.MapPath("~/Uploads/Photos/") + Convert.ToString(Session("UserID")) + "_" + FileUpload2.FileName.ToString)
    'End Sub


    'Private Sub VaryQualityLevel()
    '    ' Get a bitmap.
    '    Dim bmp1 As New Bitmap("C:\Users\Sasi\Downloads\download.jpg")

    '    'Or you can use build-in method
    '    'Dim jgpEncoder As ImageCodecInfo = GetEncoderInfo("image/jpeg");
    '    Dim jgpEncoder As System.Drawing.Imaging.ImageCodecInfo = GetEncoder(System.Drawing.Imaging.ImageFormat.Jpeg)
    '    '  Dim bmpEncoder As System.Drawing.Imaging.ImageCodecInfo = GetEncoder(System.Drawing.Imaging.ImageFormat.Bmp)

    '    ' Create an Encoder object based on the GUID
    '    ' for the Quality parameter category.
    '    Dim myEncoder As System.Drawing.Imaging.Encoder = System.Drawing.Imaging.Encoder.Quality

    '    ' Create an EncoderParameters object.
    '    ' An EncoderParameters object has an array of EncoderParameter
    '    ' objects. In this case, there is only one
    '    ' EncoderParameter object in the array.
    '    Dim myEncoderParameters As New System.Drawing.Imaging.EncoderParameters(1)

    '    Dim myEncoderParameter As New System.Drawing.Imaging.EncoderParameter(myEncoder, 50&)
    '    myEncoderParameters.Param(0) = myEncoderParameter
    '    bmp1.Save("c:\TestPhotoQualityFifty.jpg", jgpEncoder, myEncoderParameters)

    '    myEncoderParameter = New System.Drawing.Imaging.EncoderParameter(myEncoder, 100&)
    '    myEncoderParameters.Param(0) = myEncoderParameter
    '    bmp1.Save("c:\TestPhotoQualityHundred.jpg", jgpEncoder, myEncoderParameters)

    '    ' Save the bitmap as a JPG file with zero quality level compression.
    '    myEncoderParameter = New System.Drawing.Imaging.EncoderParameter(myEncoder, 0&)
    '    myEncoderParameters.Param(0) = myEncoderParameter
    '    bmp1.Save("c:\TestPhotoQualityZero.jpg", jgpEncoder, myEncoderParameters)

    '    'myEncoderParameter = New System.Drawing.Imaging.EncoderParameter(myEncoder, 50&)
    '    'myEncoderParameters.Param(0) = myEncoderParameter
    '    'bmp1.Save("c:\TestPhotoQualityFifty.bmp", bmpEncoder, myEncoderParameters)

    'End Sub 'VaryQualityLevel



    'Private Function GetEncoder(ByVal format As System.Drawing.Imaging.ImageFormat) As System.Drawing.Imaging.ImageCodecInfo

    '    Dim codecs As System.Drawing.Imaging.ImageCodecInfo() = System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()

    '    Dim codec As System.Drawing.Imaging.ImageCodecInfo
    '    For Each codec In codecs
    '        If codec.FormatID = format.Guid Then
    '            Return codec
    '        End If
    '    Next codec
    '    Return Nothing

    'End Function

    Public Shared Function ResizeImage(ByVal image As Image, ByVal size As Size, Optional ByVal preserveAspectRatio As Boolean = True) As Image
        Dim newWidth As Integer
        Dim newHeight As Integer
        If preserveAspectRatio Then
            Dim originalWidth As Integer = image.Width
            Dim originalHeight As Integer = image.Height
            Dim percentWidth As Single = CSng(size.Width) / CSng(originalWidth)
            Dim percentHeight As Single = CSng(size.Height) / CSng(originalHeight)
            Dim percent As Single = If(percentHeight < percentWidth, percentHeight, percentWidth)
            newWidth = CInt(originalWidth * percent)
            newHeight = CInt(originalHeight * percent)
        Else
            newWidth = size.Width
            newHeight = size.Height
        End If

        Dim newImage As Image = New Bitmap(newWidth, newHeight)

        Using graphicsHandle As Graphics = Graphics.FromImage(newImage)
            graphicsHandle.InterpolationMode = InterpolationMode.HighQualityBicubic
            graphicsHandle.DrawImage(image, 0, 0, newWidth, newHeight)
        End Using
        Return newImage
    End Function

    Protected Sub btnViewPhotos_Click(sender As Object, e As EventArgs) Handles btnViewPhotos.Click
        BindGrid()

    End Sub

    Protected Sub btnpnlPrintClose_Click(sender As Object, e As ImageClickEventArgs) Handles btnpnlPrintClose.Click
        Session.Remove("servicefrom")
    End Sub

    Protected Sub btnSaveSMS_Click(sender As Object, e As EventArgs) Handles btnSaveSMS.Click
        lblAlertSMS.Text = ""
        lblMsgSMS.Text = ""

        If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
            lblAlertSMS.Text = "ENTER SCHEDULE TIME TO SEND SMS"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If ddlScheduleType.Text = "CALL & FIX" Then
        Else
            lblAlertSMS.Text = "SMS ONLY IF SCHEDULE TYPE IS 'CALL & FIX'"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If
        If ddlStatus.SelectedValue.ToString = "O" Then
        Else
            lblAlertSMS.Text = "SMS ONLY FOR OPEN RECORDS"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        Dim pattern As String
        ' pattern = "^[+|0-9]\d]$"
        pattern = "^([0-9\+]*)$"
        If String.IsNullOrEmpty(txtToMobileSMS.Text) = False Then
            If Regex.IsMatch(txtToMobileSMS.Text, pattern) Then

            Else

                lblAlertSMS.Text = "INVALID PHONE NUMBER"
                mdlSMS.Show()

                Return
            End If
        End If


        Try
            txtMessageSMS.Text = txtMessageSMS.Text.Replace(txtSMSCPReplace.Text, txtSMSContactPerson.Text)

            Dim ToMobile As String = txtToMobileSMS.Text

            If ToMobile.Length = 8 Then
                ToMobile = "65" + ToMobile
            ElseIf ToMobile.First = "+" Then
                ToMobile = ToMobile.Remove(0).ToString

            End If
            '  InsertIntoTblWebEventLog("btnSaveSMS21", ToMobile, txtCustName.Text)
            '   txtMessageSMS.Text = "Ref No: SR00002239239 \n\n Dear Padma , Anticimex would like to schedule your next Pest Control service on  11th June 2021 at 10 PM. Please be available on the date to assist us. \n\n Please reply *'Y SR00002239239'* to confirm. \n Otherwise please call Amy Tan +65 890 89012 to fix an alternative schedule. \n\n *Thank You for your support."

            '   Dim postData As String = "{""userName"":""APM.apmadmin3"",""password"":""C*m!+$3c()r#d"", ""toMobile"":""" & ToMobile & """,""recipientName"":""" & txtCustName.Text & """, ""senderId"":""6582920371"",""waText"":""" & txtMessageSMS.Text & """,""waType"":""S1"",""taskName"":""T001"", ""timeOffset"":""0"", ""priority"":""3"" }"

            'Dim WhatsappAPIUserID As String = ConfigurationManager.AppSettings("WhatsappAPIUserID").ToString()
            'Dim WhatsappAPIPassword As String = ConfigurationManager.AppSettings("WhatsappAPIPassword").ToString()

            'Dim postData As String = "{""userName"":""" + WhatsappAPIUserID + """,""password"":""" + WhatsappAPIPassword + """, ""toMobile"":""" & ToMobile & """,""recipientName"":""" & txtCustName.Text & """, ""senderId"":""6582920371"",""waText"":""" & txtMessageSMS.Text & """,""waType"":""S1"",""taskName"":""T001"", ""timeOffset"":""0"", ""priority"":""3"" }"

            '' InsertIntoTblWebEventLog("btnSaveSMS21", postData, txtCustName.Text)

            'Dim webRequest As HttpWebRequest = Net.WebRequest.CreateHttp("Https://wa.CommSwift.com/Api/WAAPI.svc/WA/Post/SendWA")
            'Dim data As Byte() = Encoding.ASCII.GetBytes(postData)
            'webRequest.Accept = "application/xml" ' Accept is needed only for XML output. For JSON this line is not needed.
            'webRequest.Method = "POST"
            'webRequest.ContentType = "application/json"
            'webRequest.ContentLength = data.Length
            'Dim reqStream As System.IO.Stream = webRequest.GetRequestStream()
            'reqStream.Write(data, 0, data.Length)
            'Dim respStream = webRequest.GetResponse().GetResponseStream()
            'Dim res As String = (New StreamReader(respStream)).ReadToEnd()
            ''    InsertIntoTblWebEventLog("btnSaveSMS3", res, txtCreatedBy.Text)
            '' Dim res As String = ""



            Dim postData As String = "{""DestinationWA"":""" + ToMobile + """,""MsgBody"":""" + txtMessageSMS.Text + """,""AttachmentUrl"":[]}"
            '  Dim postData As String = "{\""DestinationWA\"":\""919600886368\"",\""MsgBody\"":\""Welcome to SINGAPORE-NEW (Beta) Login.\"",\""AttachmentUrl\"":[]}"
            '      Dim postData As String = "{""DestinationWA"":""919600886368"",""MsgBody"":""Welcome to SINGAPORE-NEW (Beta) Login."",""AttachmentUrl"":[]}"
            ServicePointManager.SecurityProtocol = 3072

            Dim webRequest As HttpWebRequest = Net.WebRequest.CreateHttp("https://api.commswift.com/api/SendMessage")
            Dim data As Byte() = Encoding.ASCII.GetBytes(postData)
            webRequest.Accept = "application/json"
            webRequest.Method = "POST"
            webRequest.ContentType = "application/json"
            webRequest.ContentLength = data.Length
            Dim bearerToken As String = ConfigurationManager.AppSettings("WhatsappAPIBearerToken").ToString()

            '    Dim bearerToken As String = "f1d43952-7d9c-4039-bf7e-7e02c8e575cf"
            webRequest.Headers.Add("Authorization", bearerToken)

            '    Try
            Dim reqStream As System.IO.Stream = webRequest.GetRequestStream()
            reqStream.Write(data, 0, data.Length)
            Dim respStream = webRequest.GetResponse().GetResponseStream()
            Dim res As String = (New StreamReader(respStream)).ReadToEnd()

            If res = "OK" Or res.Contains("OK") Then


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                '''''''''''''''''''''''''

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text
                'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
                command1.CommandText = "INSERT INTO tblservicerecordSMS (RecordNo,RefRcNo,ToMobile, Message, CreatedBy, CreatedOn,  LastModifiedBy, lastModifiedOn,Status) Values (@RecordNo, @RefRcNo, @ToMobile, @Message, @CreatedBy, @CreatedOn,  @LastModifiedBy, @LastModifiedOn,@Status) "

                command1.Parameters.Clear()


                command1.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
                command1.Parameters.AddWithValue("@RefRcNo", txtRcno.Text)
                command1.Parameters.AddWithValue("@ToMobile", txtToMobileSMS.Text)
                command1.Parameters.AddWithValue("@Message", txtMessageSMS.Text)

                command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                command1.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                command1.Parameters.AddWithValue("@Status", "Open")

                command1.Connection = conn

                command1.ExecuteNonQuery()
                command1.Dispose()

                ''''''''''''''''''''''
                conn.Close()
                conn.Dispose()
                command1.Dispose()

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "SMS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

                conn.Close()
                mdlPopupMsg1.Show()

            Else

                InsertIntoTblWebEventLog("btnSaveSMS3", res, txtCreatedBy.Text)


                'Dim conn As MySqlConnection = New MySqlConnection()

                'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'conn.Open()
                'Dim command As MySqlCommand = New MySqlCommand

                'command.CommandType = CommandType.Text

                'command.Connection = conn

                'command.CommandText = "Select * from tblsmsSetUp where Module='SERVICE1'"
                'command.Connection = conn

                'Dim dr As MySqlDataReader = command.ExecuteReader()
                'Dim dt As New DataTable
                'dt.Load(dr)

                'Dim content As String = ""

                'If dt.Rows.Count > 0 Then

                '    content = dt.Rows(0)("SMSFormat").ToString

                'End If

                ''content = content.Replace("""", "'")
                ''content = content.Replace("CHAR(10)", " ")
                ''content = content.Replace("CHAR(13)", " ")
                ''content = content.Replace("\n", " ")
                ''content = content.Replace("\r\n", " ")
                ''content = content.Replace("\r", " ")
                ' ''content = content.Replace("<br/>", " ")
                ' ''content = content.Replace("<br>", " ")
                '' content = "Hi {CUSTOMER NAME}, Anticimex would like to schedule your next Pest Control service on {SCHEDULE SERVICE DATE} at {SCHEDULE TIME FROM} - {SCHEDULE TIME TO}. Service Address: {SERVICE ADDRESS} Please reply 'Y {RcNo}' to confirm. Otherwise please call {STAFF NAME} +65{STAFF TELEPHONE NUMBER} to fix an alternative schedule."
                'content = System.Text.RegularExpressions.Regex.Replace(content, "\{\*?\\[^{}]+}|[{}]|\\\n?[A-Za-z]+\n?(?:-?\d+)?[ ]?", "")
                ''  content = content.Replace("CUSTOMER NAME", txtCustName.Text.TrimEnd)
                'content = content.Replace("CUSTOMER NAME", txtSvcCP1Contact.Text.TrimEnd)
                'content = content.Replace("SCHEDULE SERVICE DATE", txtScheduleDate.Text)
                'content = content.Replace("SCHEDULE TIME FROM", txtScheduleTimeIn.Text)
                'content = content.Replace("SCHEDULE TIME TO", txtScheduleTimeOut.Text)
                'content = content.Replace("SERVICE ADDRESS", txtAddress.Text)
                'content = content.Replace("RcNo", txtRcno.Text)
                ''content = content.Replace("COMPANY NAME", "ANTICIMEX PEST MANAGEMENT PTE. LTD.")
                ''content = content.Replace("COMPANY NAME", Configura

                Dim res1 As rapidsms.ResultCodes = New rapidsms.ResultCodes()

                Dim myapi As rapidsms.mySMS_SQLSoapClient = New rapidsms.mySMS_SQLSoapClient()

                myapi.SendSMS2("APM.Admin", "PowerToSMS0771+-", txtToMobileSMS.Text, txtCustName.Text, "+6582920371", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)

                '   myapi.SendSMS2("trial.anticimex", "pass1234", "6598140440", "admin", "user1", "this is textmsg", "EWAPI", "", "t1", 0, 3)
                '  myapi.SendSMS2("trial.anticimex", "pass1234", txtToMobileSMS.Text, txtCustName.Text, "+6598140440", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)
                '   myapi.SendSMS2("Admin", "PowerToSMS0771+-", txtToMobileSMS.Text, txtCustName.Text, "+6582920371", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)

                ' res = "OK"
                '    txtresult.text = res.ToString

                InsertIntoTblWebEventLog("btnSaveSMS4", res1, txtCreatedBy.Text)

                If res1.ToString = "OK" Then

                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    '''''''''''''''''''''''''

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
                    command1.CommandText = "INSERT INTO tblservicerecordSMS (RecordNo,RefRcNo,ToMobile, Message, CreatedBy, CreatedOn,  LastModifiedBy, lastModifiedOn,Status) Values (@RecordNo, @RefRcNo, @ToMobile, @Message, @CreatedBy, @CreatedOn,  @LastModifiedBy, @LastModifiedOn,@Status) "

                    command1.Parameters.Clear()


                    command1.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
                    command1.Parameters.AddWithValue("@RefRcNo", txtRcno.Text)
                    command1.Parameters.AddWithValue("@ToMobile", txtToMobileSMS.Text)
                    command1.Parameters.AddWithValue("@Message", txtMessageSMS.Text)

                    command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command1.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command1.Parameters.AddWithValue("@Status", "Open")

                    command1.Connection = conn

                    command1.ExecuteNonQuery()
                    command1.Dispose()

                    ''''''''''''''''''''''
                    conn.Close()
                    conn.Dispose()
                    command1.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "SMS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

                    conn.Close()
                    mdlPopupMsg1.Show()

                Else
                    Select Case res.ToString
                        Case "2"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid User) " + res.ToString
                        Case "3"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (Exceed Quota) " + res.ToString
                        Case "4"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (Error In Insert) " + res.ToString
                        Case "5"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid Group) " + res.ToString
                        Case "6"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (ExceedDivisionQuota) " + res.ToString
                        Case "7"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid Batch) " + res.ToString
                        Case "8"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidMobileNo) " + res.ToString
                        Case "9"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidSenderID) " + res.ToString
                        Case "10"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidExpiryPeriod) " + res.ToString
                        Case "11"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (ChannelNameEmpty) " + res.ToString
                        Case "12"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidMMS) " + res.ToString
                        Case "13"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (FileSizeExceeded) " + res.ToString
                        Case "14"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (MMSSubjectEmpty) " + res.ToString
                        Case "15"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (SMSTextEmptyCanNotAccept) " + res.ToString
                        Case "16"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (MMSFileNameOrSizeInvalid) " + res.ToString
                        Case "17"
                            lblAlert.Text = "MESSAGE SENDING FAILED : (MMSFileInsertFail) " + res.ToString
                        Case Else
                            lblAlert.Text = "MESSAGE SENDING FAILED : " + res.ToString
                    End Select

                End If



            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveSMS_Click", ex.Message.ToString, txtSvcRecord.Text)
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try


        '    'If String.IsNullOrEmpty(txtEditOurRef.Text) = False Then
        '    '    If CheckIfExistsManualReportNo(txtEditOurRef.Text) = True Then
        '    '        lblAlertManualReportNo.Text = "MANUAL REPORT NO. ALREADY EXISTS"
        '    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    '        mdlPopupEditOurRef.Show()
        '    '        Exit Sub

        '    '    End If
        '    'End If

        '    Dim res As rapidsms.ResultCodes = New rapidsms.ResultCodes()

        '    Dim myapi As rapidsms.mySMS_SQLSoapClient = New rapidsms.mySMS_SQLSoapClient()

        '    myapi.SendSMS2("APM.Admin", "PowerToSMS0771+-", txtToMobileSMS.Text, txtCustName.Text, "+6582920371", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)

        '    '   myapi.SendSMS2("trial.anticimex", "pass1234", "6598140440", "admin", "user1", "this is textmsg", "EWAPI", "", "t1", 0, 3)
        '    '  myapi.SendSMS2("trial.anticimex", "pass1234", txtToMobileSMS.Text, txtCustName.Text, "+6598140440", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)
        '    '   myapi.SendSMS2("Admin", "PowerToSMS0771+-", txtToMobileSMS.Text, txtCustName.Text, "+6582920371", txtMessageSMS.Text, "EWAPI", "", "t1", 0, 3)

        '    ' res = "OK"
        '    '    txtresult.text = res.ToString
        '    If res.ToString = "OK" Then

        '        Dim conn As MySqlConnection = New MySqlConnection()

        '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '        conn.Open()

        '        '''''''''''''''''''''''''

        '        Dim command1 As MySqlCommand = New MySqlCommand

        '        command1.CommandType = CommandType.Text
        '        'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
        '        command1.CommandText = "INSERT INTO tblservicerecordSMS (RecordNo,RefRcNo,ToMobile, Message, CreatedBy, CreatedOn,  LastModifiedBy, lastModifiedOn,Status) Values (@RecordNo, @RefRcNo, @ToMobile, @Message, @CreatedBy, @CreatedOn,  @LastModifiedBy, @LastModifiedOn,@Status) "

        '        command1.Parameters.Clear()


        '        command1.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text)
        '        command1.Parameters.AddWithValue("@RefRcNo", txtRcno.Text)
        '        command1.Parameters.AddWithValue("@ToMobile", txtToMobileSMS.Text)
        '        command1.Parameters.AddWithValue("@Message", txtMessageSMS.Text)

        '        command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
        '        command1.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '        command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
        '        command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
        '        command1.Parameters.AddWithValue("@Status", "Open")

        '        command1.Connection = conn

        '        command1.ExecuteNonQuery()
        '        command1.Dispose()

        '        ''''''''''''''''''''''
        '        conn.Close()
        '        conn.Dispose()
        '        command1.Dispose()

        '        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "SMS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

        '        conn.Close()
        '        mdlPopupMsg1.Show()

        '        '  lblAlert.Text = "MESSAGE SENT SUCCESSFULLY"
        '    Else
        '        Select Case res.ToString
        '            Case "2"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid User) " + res.ToString
        '            Case "3"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (Exceed Quota) " + res.ToString
        '            Case "4"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (Error In Insert) " + res.ToString
        '            Case "5"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid Group) " + res.ToString
        '            Case "6"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (ExceedDivisionQuota) " + res.ToString
        '            Case "7"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (Invalid Batch) " + res.ToString
        '            Case "8"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidMobileNo) " + res.ToString
        '            Case "9"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidSenderID) " + res.ToString
        '            Case "10"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidExpiryPeriod) " + res.ToString
        '            Case "11"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (ChannelNameEmpty) " + res.ToString
        '            Case "12"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (InvalidMMS) " + res.ToString
        '            Case "13"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (FileSizeExceeded) " + res.ToString
        '            Case "14"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (MMSSubjectEmpty) " + res.ToString
        '            Case "15"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (SMSTextEmptyCanNotAccept) " + res.ToString
        '            Case "16"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (MMSFileNameOrSizeInvalid) " + res.ToString
        '            Case "17"
        '                lblAlert.Text = "MESSAGE SENDING FAILED : (MMSFileInsertFail) " + res.ToString
        '            Case Else
        '                lblAlert.Text = "MESSAGE SENDING FAILED : " + res.ToString
        '        End Select




        '    End If
        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("btnSaveSMS_Click", ex.Message.ToString, txtSvcRecord.Text)
        '    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
        '    Exit Sub
        'End Try
    End Sub

    'Protected Sub btnConfirmOk_Click(sender As Object, e As EventArgs) Handles btnConfirmOk.Click
    '    ClientScript.RegisterStartupScript(Page.[GetType](), "test", "<script>window.close();</script>")

    'End Sub

    Protected Sub btnSendSMS_Click(sender As Object, e As EventArgs)

        'If ConfigurationManager.AppSettings("DomainName").ToString() <> "SINGAPORE" Then
        '    lblAlert.Text = "SMS FEATURE IS ENABLED ONLY IN SINGAPORE SITE"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return

        'End If

        If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
            lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return

        End If


        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim rowindex1 As Integer = xrow1.RowIndex

        MakeMeNull()
        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

        txtRcno.Text = lblidRcno
        RetrieveData()
        ''  GridView1.SelectRow(rowindex1)
        GridView1.SelectedIndex = rowindex1


        lblMessage.Text = ""
        lblAlertSMS.Text = ""
        lblAlert.Text = ""
        txtGridIndex.Text = rowindex1.ToString
        txtToMobileSMS.Text = ""

        SqlDSSMS.SelectCommand = "SELECT * FROM tblservicerecordsms where recordno = '" + txtSvcRecord.Text + "' order by createdon"
        SqlDSSMS.DataBind()
        grdSMS.DataSourceID = "SqlDSSMS"
        grdSMS.DataBind()
        'If String.IsNullOrEmpty(txtScheduleTimeIn.Text) Then
        '    lblAlert.Text = "ENTER SCHEDULE TIME TO SEND SMS"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If

        'If ddlScheduleType.Text = "CALL & FIX" Then
        'Else
        '    lblAlert.Text = "SMS ONLY IF SCHEDULE TYPE IS 'CALL & FIX'"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If
        'If ddlStatus.SelectedValue.ToString = "O" Then
        'Else
        '    lblAlert.Text = "SMS ONLY FOR OPEN RECORDS"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Return
        'End If


        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command As MySqlCommand = New MySqlCommand

        command.CommandType = CommandType.Text

        command.Connection = conn

        command.CommandText = "Select *,trim(replace(REPLACE(SMSFormat,'\r\n','\\n '),'""','''')) as SMSFormat1 from tblsmsSetUp where Module='SERVICE'"
        command.Connection = conn

        Dim dr As MySqlDataReader = command.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        Dim content As String = ""

        If dt.Rows.Count > 0 Then

            content = dt.Rows(0)("SMSFormat1").ToString

        End If

        ' content = System.Text.RegularExpressions.Regex.Replace(content, "\{\*?\\[^{}]+}|[{}]|\\\n?[A-Za-z]+\n?(?:-?\d+)?[ ]?", "")
        content = System.Text.RegularExpressions.Regex.Replace(content, "\{\*?\\[^{}]+}|[{}]|\\\?[A-Za-z]+\n?(?:-?\d+)?[ ]?", "")

        '  content = content.Replace("CUSTOMER NAME", txtCustName.Text.TrimEnd)
        content = content.Replace("CUSTOMER NAME", txtSvcCP1Contact.Text.TrimEnd)
        content = content.Replace("SCHEDULE SERVICE DATE", txtScheduleDate.Text)
        content = content.Replace("SCHEDULE TIME FROM", txtScheduleTimeIn.Text)
        content = content.Replace("SCHEDULE TIME TO", txtScheduleTimeOut.Text)
        content = content.Replace("SERVICE ADDRESS", txtAddress.Text)
        content = content.Replace("RcNo", txtRcno.Text)
        'content = content.Replace("COMPANY NAME", "ANTICIMEX PEST MANAGEMENT PTE. LTD.")
        'content = content.Replace("COMPANY NAME", ConfigurationManager.AppSettings("CompanyName").ToString())

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.Connection = conn

        command1.CommandText = "Select TelHome,TelMobile,Staffid,name from tblstaff where StaffId='" + Convert.ToString(Session("UserID")) + "'"
        command1.Connection = conn

        Dim dr1 As MySqlDataReader = command1.ExecuteReader()
        Dim dt1 As New DataTable
        dt1.Load(dr1)

        Dim telnum As String = ""
        Dim staffname As String = ""

        If dt1.Rows.Count > 0 Then
            telnum = dt1.Rows(0)("Telhome").ToString
            If String.IsNullOrEmpty(telnum) Then
                telnum = dt1.Rows(0)("TelMobile").ToString
            End If
            staffname = dt1.Rows(0)("Name").ToString

        End If

        content = content.Replace("STAFF TELEPHONE NUMBER", telnum)
        content = content.Replace("STAFF NAME", staffname)

        command.Dispose()
        command1.Dispose()

        conn.Close()
        conn.Dispose()

        txtMessageSMS.Text = content

        txtToMobileSMS.Text = txtSvcCP1Mobile.Text.Trim
        txtSMSContactPerson.Text = txtSvcCP1Contact.Text.TrimEnd
        txtSMSCPReplace.Text = txtSMSContactPerson.Text

        'txtMessageSMS.Text = "Hi Sir/Madam, Can we schedule your pest control service on " + txtScheduleDate.Text + " at " + txtScheduleTimeIn.Text + "? Please reply YES to confirm. "
        'txtMessageSMS.Text = txtMessageSMS.Text + "Otherwise please reply NO and we will contact you again."
        'txtMessageSMS.Text = txtMessageSMS.Text + "Thank you and have a good day!"
        rdbSMSContactPerson.SelectedIndex = 0


        mdlSMS.Show()

        'Else
        'lblAlertSMS.Text = "SMS ONLY FOR OPEN RECORDS!!"
        'End If



        'mdlSMS.Show()
    End Sub

    Protected Sub EditPhotoDesc(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument
            txtEditPhotoDescRcno.Text = rcno.ToString
            txtEditPhotoDesc.Text = ""

            Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

            lblQueryEditPhotoDesc.Text = "Are you sure to Edit the Photo Description? <br><br> Photo Description : " + grdrow.Cells(6).Text
            mdlPopupDeleteUploadedFile.Show()
            mdlPopupEditPhotoDesc.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("EditPhotoDesc", ex.Message.ToString, rcno)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try


    End Sub

    Protected Sub DeletePhoto(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument
            txtDeletePhoto.Text = rcno

            lblDeleteConfirm.Text = "Photo"
            ' lblEvent.Text = "Confirm DELETE"

            Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

            If tb1.ActiveTabIndex = 2 Then
                lblQuery.Text = "Are you sure to DELETE the Photo?<br><br>Pest : " + ddlPestID.Text + "<br><br> Photo Description : " + grdrow.Cells(4).Text
            ElseIf tb1.ActiveTabIndex = 6 Then
                lblQuery.Text = "Are you sure to DELETE the Photo? <br><br> Photo Description : " + grdrow.Cells(6).Text

            End If

            mdlPopupDeleteUploadedFile.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("DeletePhoto", ex.Message.ToString, txtDeletePhoto.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub DeleteUploadedPhoto(rcno As Int64)
        'File.Delete(gFilePath)
        ''  Response.Redirect(Request.Url.AbsoluteUri)
        'lblMessage.Text = "FILE DELETED"
        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Service/"))
        ''   Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtSvcRecord.Text + "_")) + "*.*")
        'Dim files As List(Of ListItem) = New List(Of ListItem)

        'For Each foundFile As FileInfo In filesInDir
        '    Dim fullName As String = foundFile.FullName
        '    files.Add(New ListItem(foundFile.Name))
        'Next
        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
        ''For Each filePath As String In filePaths
        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
        ''Next
        'gvUpload.DataSource = files
        'gvUpload.DataBind()
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblservicephoto where rcno='" + rcno.ToString + "'"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblservicephoto where rcno='" + rcno.ToString + "'"

                command.CommandText = qry

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "DELETEPHOTO", rcno, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRecord.Text)
            End If

            conn.Close()
            conn.Dispose()

            lblMessage.Text = "PHOTO DELETED"

            If tb1.ActiveTabIndex = 2 Then
                BindPestGrid()
                CountPestGrid()
            ElseIf tb1.ActiveTabIndex = 6 Then
                BindGrid()
                DisplayNoOfPhoto()

            End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("DeleteUploadedPhoto", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub

    Private Sub DeleteAllPhoto()
        'File.Delete(gFilePath)
        ''  Response.Redirect(Request.Url.AbsoluteUri)
        'lblMessage.Text = "FILE DELETED"
        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Service/"))
        ''   Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtSvcRecord.Text + "_")) + "*.*")
        'Dim files As List(Of ListItem) = New List(Of ListItem)

        'For Each foundFile As FileInfo In filesInDir
        '    Dim fullName As String = foundFile.FullName
        '    files.Add(New ListItem(foundFile.Name))
        'Next
        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
        ''For Each filePath As String In filePaths
        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
        ''Next
        'gvUpload.DataSource = files
        'gvUpload.DataBind()
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblservicephoto where recordno='" + lblRecordNo.Text + "' and (ServiceRecordRcno is null or ServiceRecordRcno='' or ServiceRecordRcno=0)"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "update tblservicephoto set recordno='" + lblRecordNo.Text + "XX' where recordno='" + lblRecordNo.Text + "' and (ServiceRecordRcno is null or ServiceRecordRcno='')"

                command.CommandText = qry

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "DELETEALLPHOTO", rcno, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", lblRecordNo.Text)
            End If

            conn.Close()
            conn.Dispose()

            lblMessage.Text = "ALL PHOTOS DELETED"

            If tb1.ActiveTabIndex = 2 Then
                BindPestGrid()
                CountPestGrid()
            ElseIf tb1.ActiveTabIndex = 6 Then
                BindGrid()
                DisplayNoOfPhoto()

            End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("DeleteUploadedPhoto", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub

    Protected Sub btnReCalculate_Click(sender As Object, e As EventArgs) Handles btnReCalculate.Click
        lblAlert.Text = ""
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandUpdateBillValues As MySqlCommand = New MySqlCommand
            commandUpdateBillValues.CommandType = CommandType.StoredProcedure
            commandUpdateBillValues.CommandText = "Update_ServiceRecord_For_BilledAmount_BillNo"

            commandUpdateBillValues.Parameters.Clear()

            commandUpdateBillValues.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            commandUpdateBillValues.Parameters.AddWithValue("@pr_RecordNo", txtSvcRecord.Text.Trim)

            commandUpdateBillValues.Connection = conn
            commandUpdateBillValues.ExecuteScalar()

            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()

            CalculateTransaction()

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnReCalculate_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnConfirmOk1_Click(sender As Object, e As EventArgs) Handles btnConfirmOk1.Click
        ClientScript.RegisterStartupScript(Page.[GetType](), "test", "<script>window.close();</script>")

    End Sub

    Protected Sub txtToMobileSMS_TextChanged(sender As Object, e As EventArgs) Handles txtToMobileSMS.TextChanged
        txtMessageSMS.Text = txtMessageSMS.Text.Replace(txtSMSCPReplace.Text, txtSMSContactPerson.Text)
        txtSMSCPReplace.Text = txtSMSContactPerson.Text
        mdlSMS.Show()

    End Sub


    Protected Sub btnUpdateSMSCP_Click(sender As Object, e As EventArgs) Handles btnUpdateSMSCP.Click
        txtMessageSMS.Text = txtMessageSMS.Text.Replace(txtSMSCPReplace.Text, txtSMSContactPerson.Text)
        txtSMSCPReplace.Text = txtSMSContactPerson.Text
        mdlSMS.Show()

    End Sub

    Protected Sub rdbSMSContactPerson_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rdbSMSContactPerson.SelectedIndexChanged
        If rdbSMSContactPerson.SelectedIndex = 0 Then
            txtToMobileSMS.Text = txtSvcCP1Mobile.Text.Trim
            txtSMSContactPerson.Text = txtSvcCP1Contact.Text.TrimEnd
        ElseIf rdbSMSContactPerson.SelectedIndex = 1 Then
            txtToMobileSMS.Text = txtSvcCP2Mobile.Text.Trim
            txtSMSContactPerson.Text = txtSvcCP2Contact.Text.TrimEnd
        End If
        mdlSMS.Show()
    End Sub


    'Protected Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
    '    'grdWorkLoad.DataBind()
    'End Sub

    Protected Sub buttonUpdate_Click(sender As Object, e As ImageClickEventArgs)
        ''SQLDSInvoice.SelectCommand = txt.Text
        'grdWorkLoad.DataSourceID = "SqlDSWorkLoad"
        ''GridView1.DataBind()
        'grdWorkLoad.DataBind()
    End Sub
    Protected Sub grdWorkLoad_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grdWorkLoad.RowDataBound

    End Sub

    Protected Sub btnUpdateWorkLoad_Click(sender As Object, e As EventArgs) Handles btnUpdateWorkLoad.Click
        Try
            UpdateWorkLoad()
            'Dim qryWorkLoad As String
            'qryWorkLoad = ""
            'qryWorkLoad = "select ServiceBy,CASE "
            'qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 2 and TotalServiceTimePreviousJob <=2 THEN '01 Very Low'"
            'qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 3 and TotalServiceTimePreviousJob <=3 THEN '02 Low'"
            'qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 4 and TotalServiceTimePreviousJob <=4 THEN '03 Medium Low'"
            'qryWorkLoad = qryWorkLoad + " ELSE '04 Medium'"
            'qryWorkLoad = qryWorkLoad + " END as LoadLevel"
            'qryWorkLoad = qryWorkLoad + " from vwDailyTeamServiceLoadSummary"
            'qryWorkLoad = qryWorkLoad + " where TotalAllocatedServiceHours < 5 and TotalServiceTimePreviousJob < 5 "
            'qryWorkLoad = qryWorkLoad + " and ServiceDate = '" + Convert.ToDateTime(Label14.Text).ToString("yyyy-MM-dd") + "'"
            'qryWorkLoad = qryWorkLoad + " order by LoadLevel,ServiceBy"

            'SqlDSWorkLoad.SelectCommand = qryWorkLoad
            'grdWorkLoad.DataSourceID = "SqlDSWorkLoad"
            'grdWorkLoad.DataBind()

            ' ''''''''''


            'Dim qryAvailableTehnician As String
            'qryAvailableTehnician = ""
            'qryAvailableTehnician = "select ServiceBy as 'Available Technicians' "
            'qryAvailableTehnician = qryAvailableTehnician + " from vwavailabletechnician"
            'qryAvailableTehnician = qryAvailableTehnician + " order by ServiceBy"

            'SqlDSAvailableTechnician.SelectCommand = qryAvailableTehnician
            'grdAvailableTechnician.DataSourceID = "SqlDSAvailableTechnician"
            'grdAvailableTechnician.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnUpdateWorkLoad_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub UpdateWorkLoad()
        '  InsertIntoTblWebEventLog("UpdateWorkload", Label14.Text, txtCreatedBy.Text)

        Dim qryWorkLoad As String
        qryWorkLoad = ""
        qryWorkLoad = "select ServiceBy,CASE "
        qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 2 and TotalServiceTimePreviousJob <=2 THEN '01 Very Low'"
        qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 3 and TotalServiceTimePreviousJob <=3 THEN '02 Low'"
        qryWorkLoad = qryWorkLoad + " WHEN TotalAllocatedServiceHours <= 4 and TotalServiceTimePreviousJob <=4 THEN '03 Medium Low'"
        qryWorkLoad = qryWorkLoad + " ELSE '04 Medium'"
        qryWorkLoad = qryWorkLoad + " END as LoadLevel"
        qryWorkLoad = qryWorkLoad + " from vwDailyTeamServiceLoadSummary"
        qryWorkLoad = qryWorkLoad + " where TotalAllocatedServiceHours < 5 and TotalServiceTimePreviousJob < 5 "
        qryWorkLoad = qryWorkLoad + " and ServiceDate = '" + Convert.ToDateTime(Label14.Text).ToString("yyyy-MM-dd") + "'"
        qryWorkLoad = qryWorkLoad + " order by LoadLevel,ServiceBy"

        SqlDSWorkLoad.SelectCommand = qryWorkLoad
        grdWorkLoad.DataSourceID = "SqlDSWorkLoad"
        grdWorkLoad.DataBind()

        ''''''''''


        Dim qryAvailableTehnician As String
        qryAvailableTehnician = ""
        qryAvailableTehnician = "select ServiceBy as 'Available Technicians' "
        qryAvailableTehnician = qryAvailableTehnician + " from vwavailabletechnician"
        qryAvailableTehnician = qryAvailableTehnician + " order by ServiceBy"

        SqlDSAvailableTechnician.SelectCommand = qryAvailableTehnician
        grdAvailableTechnician.DataSourceID = "SqlDSAvailableTechnician"
        grdAvailableTechnician.DataBind()
    End Sub
    Protected Sub btnReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnReset.Click
        btnUpdateWorkLoad_Click(sender, e)
    End Sub



    Protected Sub btnWorkLoadDateL_Click(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            Label14.Text = Convert.ToDateTime(Label14.Text).AddDays(-1)
            btnUpdateWorkLoad_Click(sender, e)

            Dim sysdate As String = Convert.ToString(Session("SysDate"))
            If Convert.ToDateTime(Label14.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(sysdate).ToString("yyyy-MM-dd") Then
                btnWorkLoadDateL.Visible = False
                btnWorkLoadDateR.Visible = True
            Else
                btnWorkLoadDateL.Visible = True
                btnWorkLoadDateR.Visible = True
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnWorkLoadDateL_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnWorkLoadDateR_Click(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""

            Label14.Text = Convert.ToDateTime(Label14.Text).AddDays(1)
            btnUpdateWorkLoad_Click(sender, e)

            Dim sysdate As String = Convert.ToString(Session("SysDate"))
            If Convert.ToDateTime(Label14.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(sysdate).AddDays(7) Then
                btnWorkLoadDateR.Visible = False
                btnWorkLoadDateL.Visible = True
            Else
                btnWorkLoadDateR.Visible = True
                btnWorkLoadDateL.Visible = True
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnWorkLoadDateR_Click", ex.Message.ToString, txtSvcRecord.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub RetrieveLastServiceDetails()
        Dim qryLastServiceDetails As String = "SELECT a.ServiceBy,a.RecordNo,a.ServiceDate,concat(a.TimeIn,' to ' ,a.TimeOut) as Time, a.Duration,a.TotalActualDuration,ScheduleType, a.rcno, b.ReportServiceStart, b.ReportServiceEnd "
        'qryLastServiceDetails = qryLastServiceDetails + " FROM tblServiceRecord a Left join  tblservicerecord2 b on a.RecordNo = b.RecordNo "
        qryLastServiceDetails = qryLastServiceDetails + " FROM tblServiceRecord a,  tblservicerecord2 b where  a.RecordNo = b.RecordNo "


        If chkDisplayforSameSite.Checked = False Then
            qryLastServiceDetails = qryLastServiceDetails + " and  a.ContractNo= '" + txtContractNo.Text.Trim + "' "
        Else
            qryLastServiceDetails = qryLastServiceDetails + " and  a.LocationID = '" + txtLocationID.Text.Trim + "'"
        End If

        'qryLastServiceDetails = qryLastServiceDetails + " and a.ScheduleType in ('FIXED','CALL & FIX') and a.Status='P' "

        qryLastServiceDetails = qryLastServiceDetails + " and a.Status='P' "

        qryLastServiceDetails = qryLastServiceDetails + " ORDER BY a.ServiceDate DESC LIMIT 5;"


        SqlDSLastServiceDetails.SelectCommand = qryLastServiceDetails
        SqlDSLastServiceDetails.DataBind()

        grdLastServiceDetails.DataBind()
    End Sub

   

    Protected Sub btnSaveopyAddress_Click(sender As Object, e As EventArgs) Handles btnSaveopyAddress.Click
        txtCopy.Text = "Yes"
        txtCopyRecordNo.Text = txtSvcRecord.Text
        txtScheduler.Text = lblUserID.Text

        txtRcno.Text = ""
        txtSvcRecord.Text = ""
        txtOurRef.Text = ""

        DisableControls()
        ddlStatus.Text = "O"
        ddlStatus.Enabled = False
        'txtMode.Text = "Add"
        txtMode.Text = "Add"
        lblMessage.Text = "ACTION: COPY - ADD RECORD"

        txtActSvcDate.Text = ""

        txtActSvcEndDate.Text = ""

        txtActSvcTimeFrom.Text = ""
        txtActSvcTimeTo.Text = ""
        txtServiceTime.Text = ""
        txtTotActualDuration.Text = ""
        txtServiceRating.Text = ""
        txtAmtBill.Text = "0.00"
        txtInvoiceNo.Text = ""
        txtInvoicedAmt.Text = "0.00"
        txtCollectAmt.Text = "0.00"
        txtAmountRecvd.Text = "0.00"
        txtPaymentType.Text = ""
        txtRefNo.Text = ""
        txtSpecificLocation.Text = ""


        txtReportServiceStart.Text = ""
        txtReportServiceStartTime.Text = ""
        txtReportServiceEnd.Text = ""
        txtReportServiceEndTime.Text = ""

        chkManualReport.Checked = False
        Image1.ImageUrl = ""
        Image2.ImageUrl = ""

        btnEditSchType.Visible = False
        btnEditSchDate.Visible = False
        btnEditTeam.Visible = False
        btnEditServInst.Visible = False
        btnEditRemarks.Visible = False
        btnEditClientSign.Visible = False
        btnEditCollectedAmount.Visible = False
        btnEditOurRef.Visible = False

        btnEditManualContractNo.Visible = False
        btnEditPONo.Visible = False
        btnEditWorkOrderNo.Visible = False

        ' txtSvcRecord.Focus()

        btnQuickSearch.Enabled = False
        btnResSearch.Enabled = False
        SqlDataSource1.SelectCommand = txt.Text
        SqlDataSource1.DataBind()
        GridView1.DataBind()

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command1 As MySqlCommand = New MySqlCommand

        If chkCustomerServiceLocation.Checked = True Then
            '''''Start: Retrieve from Customer Service Location


            '''''''''''
            Dim lSendServiceReportTo1Loc, lSendServiceReportTo2Loc, lBillEmail1SvcLoc, lBillEmail2SvcLoc As String
            txtServiceName.Text = ""

            txtAddress.Text = ""
            txtStreet.Text = ""
            txtBuilding.Text = ""

            'If dt.Rows(0)("AddCity").ToString <> "" Then
            '    ddlCity.Text = dt.Rows(0)("AddCity").ToString
            'End If

            'If dt.Rows(0)("AddCountry").ToString <> "" Then
            '    If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
            '        ddlCountry.Text = "SINGAPORE"
            '    Else
            '        ddlCountry.Text = dt.Rows(0)("AddCountry").ToString
            '    End If
            'End If
            'If dt.Rows(0)("AddState").ToString <> "" Then
            '    ddlState.Text = dt.Rows(0)("AddState").ToString
            'End If
            txtPostal.Text = ""
            'If dt.Rows(0)("LocateGrp").ToString <> "" Then
            '    ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString
            'End If


            txtSvcCP1Contact.Text = ""
            txtSvcCP1Position.Text = ""
            txtSvcCP1Telephone.Text = ""
            txtSvcCP1Fax.Text = ""
            txtSvcCP1Telephone2.Text = ""
            txtSvcCP1Mobile.Text = ""
            txtSvcCP1Email.Text = ""

            txtSvcCP2Contact.Text = ""
            txtSvcCP2Position.Text = ""
            txtSvcCP2Telephone.Text = ""
            txtSvcCP2Fax.Text = ""
            txtSvcCP2Tel2.Text = ""
            txtSvcCP2Mobile.Text = ""
            txtSvcCP2Email.Text = ""

            lBillEmail1SvcLoc = ""
            lBillEmail2SvcLoc = ""

            lSendServiceReportTo1Loc = ""
            lSendServiceReportTo2Loc = ""

            ''''''''''

            command1.CommandType = CommandType.Text
            If ddlAccountType.SelectedItem.Text = "CORPORATE" Then
                command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC, SendServiceReportTo1, SendServiceReportTo2 FROM tblcompanylocation where AccountId ='" & txtAccountID.Text & "' and LocationID = '" & txtLocationID.Text & "'"
            ElseIf ddlAccountType.SelectedItem.Text = "RESIDENTIAL" Then
                command1.CommandText = "SELECT accountid, locationid,servicename, description, address1,addbuilding, addstreet,addcity,addstate,addcountry,addpostal,locategrp,contactperson,contact1position,telephone,fax,telephone2,mobile,email,ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile, Contact2Email, BillEmail1Svc, BillEmail2svc, ServiceEmailCC, SendServiceReportTo1, SendServiceReportTo2 FROM tblpersonlocation where AccountId ='" & txtAccountID.Text & "' and LocationID = '" & txtLocationID.Text & "'"
            Else
                lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            End If
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                txtServiceName.Text = dt.Rows(0)("ServiceName").ToString

                txtAddress.Text = dt.Rows(0)("Address1").ToString
                txtStreet.Text = dt.Rows(0)("AddStreet").ToString
                txtBuilding.Text = dt.Rows(0)("AddBuilding").ToString

                If dt.Rows(0)("AddCity").ToString <> "" Then
                    ddlCity.Text = dt.Rows(0)("AddCity").ToString
                End If

                If dt.Rows(0)("AddCountry").ToString <> "" Then
                    If Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'pore" Or Server.HtmlDecode(dt.Rows(0)("AddCountry")).ToString = "S'PORE" Then
                        ddlCountry.Text = "SINGAPORE"
                    Else
                        ddlCountry.Text = dt.Rows(0)("AddCountry").ToString
                    End If
                End If
                If dt.Rows(0)("AddState").ToString <> "" Then
                    ddlState.Text = dt.Rows(0)("AddState").ToString
                End If
                txtPostal.Text = dt.Rows(0)("AddPostal").ToString
                If dt.Rows(0)("LocateGrp").ToString <> "" Then
                    ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString
                End If

                txtSvcCP1Contact.Text = dt.Rows(0)("ContactPerson").ToString
                txtSvcCP1Position.Text = dt.Rows(0)("Contact1Position").ToString
                txtSvcCP1Telephone.Text = dt.Rows(0)("Telephone").ToString
                txtSvcCP1Fax.Text = dt.Rows(0)("Fax").ToString
                txtSvcCP1Telephone2.Text = dt.Rows(0)("Telephone2").ToString
                txtSvcCP1Mobile.Text = dt.Rows(0)("Mobile").ToString
                txtSvcCP1Email.Text = dt.Rows(0)("Email").ToString

                txtSvcCP2Contact.Text = dt.Rows(0)("ContactPerson2").ToString
                txtSvcCP2Position.Text = dt.Rows(0)("Contact2Position").ToString
                txtSvcCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
                txtSvcCP2Fax.Text = dt.Rows(0)("Contact2Fax").ToString
                txtSvcCP2Tel2.Text = dt.Rows(0)("Contact2Tel2").ToString
                txtSvcCP2Mobile.Text = dt.Rows(0)("Contact2Mobile").ToString
                txtSvcCP2Email.Text = dt.Rows(0)("Contact2Email").ToString

                lBillEmail1SvcLoc = dt.Rows(0)("BillEmail1Svc").ToString
                lBillEmail2SvcLoc = dt.Rows(0)("BillEmail2Svc").ToString

                lSendServiceReportTo1Loc = dt.Rows(0)("SendServiceReportTo1").ToString
                lSendServiceReportTo2Loc = dt.Rows(0)("SendServiceReportTo2").ToString
                ''''''''''''''''''''

                Dim lOtherEmail As String
                lOtherEmail = ""

                If lSendServiceReportTo1Loc = "Y" Then
                    lOtherEmail = dt.Rows(0)("BillEmail1Svc").ToString.Trim
                End If

                If lSendServiceReportTo2Loc = "Y" Then
                    'If String.IsNullOrEmpty(lOtherEmail.Trim) = False Then
                    '    lOtherEmail = lOtherEmail.Trim() & ";" & dt.Rows(0)("BillEmail2svc").ToString.Trim()
                    'Else
                    '    lOtherEmail = dt.Rows(0)("BillEmail2svc").ToString.Trim()
                    'End If

                    If String.IsNullOrEmpty(lBillEmail2SvcLoc.Trim()) = False Then
                        If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
                            lOtherEmail = lBillEmail2SvcLoc.Trim()
                        Else
                            lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
                        End If
                    End If
                End If

                If String.IsNullOrEmpty(dt.Rows(0)("ServiceEmailCC").ToString.Trim()) = False Then
                    If String.IsNullOrEmpty(lOtherEmail) = True Then
                        lOtherEmail = dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
                    Else
                        lOtherEmail = lOtherEmail.Trim() & ";" & dt.Rows(0)("ServiceEmailCC").ToString.ToUpper.Trim()
                    End If
                End If

                txtOtherEmail.Text = lOtherEmail.Trim
                '''''''''''''''''''''
                dt.Dispose()
                dr.Close()
            End If

        End If

        conn.Close()
        conn.Dispose()
        command1.Dispose()


        ''''End: Retrive from Customer Service Location


    End Sub



    Protected Sub btnItemsIssuedSave_Click(sender As Object, e As EventArgs) Handles btnItemsIssuedSave.Click
        Dim d As Double

        If ddlItemIDItemsIssued.Text = "--SELECT--" Or ddlItemIDItemsIssued.Text = "-1" Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "SELECT ITEM TO PROCEED"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('SELECT ITEM TO PROCEED');", True)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If

        If String.IsNullOrEmpty(txtQtyItemsIssued.Text) = False Then
            If Double.TryParse(txtQtyItemsIssued.Text, d) = False Then
                ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                lblAlert.Text = "ENTER VALID QUANTITY"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID QUANTITY');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If
        Else
            txtQtyItemsIssued.Text = "0"
        End If

        If Convert.ToDecimal(txtQtyItemsIssued.Text) <= 0.0 Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER NON-ZERO POSITIVE QUANTITY"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER NON-ZERO POSITIVE QUANTITY');", True)

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Return
        End If


        If txtItemsIssuedMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno,ItemID FROM tblservicerecordIssueditem where recordno=@recordno and ItemID=@ItemID"
                command1.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
                command1.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "SELECTED ITEM ALREADY ASSIGNED FOR THIS SERVICE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblservicerecordIssueditem(ItemID,ItemName, Qty, UnitMS, Remarks,RecordNo,ContractNo, CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)VALUES(@ItemID,@ItemName,@Qty, @UnitMS, @Remarks,@RecordNo, @ContractNo, @CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then


                        'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                        'name = name.Replace("]", "")
                        'name = name.Replace("[", "")

                        command.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                        Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                        name = name.Replace("]", "")
                        name = name.Replace("[", "")

                        command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                        command.Parameters.AddWithValue("@Qty", txtQtyItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@UnitMS", txtUnitItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@Remarks", txtRemarksItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))



                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                        'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                        'name = name.Replace("]", "")
                        'name = name.Replace("[", "")


                        Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                        name = name.Replace("]", "")
                        name = name.Replace("[", "")
                        command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                        command.Parameters.AddWithValue("@Qty", txtQtyItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@UnitMS", txtUnitItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@Remarks", txtRemarksItemsIssued.Text.ToUpper)
                        command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))


                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    txtItemsIssuedRcNo.Text = command.LastInsertedId
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD SAVE ITEMS ISSUED", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtItemsIssuedRcNo.Text)

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""

                End If
                conn.Close()

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnItemsIssuedSave_Click ADD SAVE", ex.Message.ToString, txtTechRcNo.Text)
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableItemsIssuedControls()

        ElseIf txtItemsIssuedMode.Text = "Edit" Then
            If txtItemsIssuedRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT recordno,ItemID FROM tblservicerecordissueditem where recordno=@recordno and ItemID=@ItemID and rcno<>" & Convert.ToInt32(txtItemsIssuedRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
                command2.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    '   MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "SELECTED ITEM ALREADY ASSIGNED FOR THIS SERVICE"


                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT ItemID FROM tblservicerecordissueditem where rcno=" & Convert.ToInt32(txtItemsIssuedRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblservicerecordissueditem SET ItemID = @ItemID,ItemName = @ItemName,Qty = @Qty,UnitMS = @UnitMS,Remarks = @Remarks,RecordNo = @RecordNo, ContractNo=@ContractNo, LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtItemsIssuedRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                            command.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                            'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                            'name = name.Replace("]", "")
                            'name = name.Replace("[", "")

                            Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                            name = name.Replace("]", "")
                            name = name.Replace("[", "")
                            command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                            command.Parameters.AddWithValue("@Qty", txtQtyItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@UnitMS", txtUnitItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@Remarks", txtRemarksItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                            command.Parameters.AddWithValue("@ItemID", ddlItemIDItemsIssued.SelectedValue.ToString)
                            'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                            'name = name.Replace("]", "")
                            'name = name.Replace("[", "")

                            Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                            name = name.Replace("]", "")
                            name = name.Replace("[", "")
                            command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                            command.Parameters.AddWithValue("@Qty", txtQtyItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@UnitMS", txtUnitItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@Remarks", txtRemarksItemsIssued.Text.ToUpper)
                            command.Parameters.AddWithValue("@RecordNo", txtSvcRecord.Text.ToUpper)
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT SAVE ITEMS ISSUED", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                    End If
                End If

                conn.Close()
            Catch ex As Exception
                InsertIntoTblWebEventLog("btnTechSave_Click EDIT SAVE", ex.Message.ToString, txtTechRcNo.Text)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableItemsIssuedControls()

        End If

        '''''''''''''''''''''''

        'SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff ORDER BY StaffId"
        'SqlDSStaff.DataBind()

        ''''''''''''''''''''''''''

        'SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
        'SqlDSServiceStaff.DataBind()
        'GridView3.DataSourceID = "SqlDSServiceStaff"
        'GridView3.DataBind()


        SQLDSItems.SelectCommand = " SELECT ItemID, ItemName, CONCAT(ItemID, ' [', ItemName, ']') AS ItemIssuedNAME FROM tblstockitem  ORDER BY ItemID"
        SQLDSItems.DataBind()


        sqlDSItemsIssued.SelectCommand = "SELECT Rcno, RecordNo, ItemID, ItemName, Qty, UnitMS, Remarks FROM tblservicerecordissueditem where recordno = '" + txtSvcRecord.Text + "' order by ItemID"
        sqlDSItemsIssued.DataBind()
        grdViewItemsIssued.DataSourceID = "sqlDSItemsIssued"
        grdViewItemsIssued.DataBind()

        txtSelectedIndex.Text = "0"
        '    MakeTechNull()
        txtItemsIssuedMode.Text = ""
    End Sub

    Protected Sub btnItemsIssuedAdd_Click(sender As Object, e As EventArgs) Handles btnItemsIssuedAdd.Click
        Try
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            DisableItemsIssuedControls()

            MakeItemsIssuedNull()
            lblMessage.Text = "ACTION: ADD ITEMS ISSUE"

            'SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status = 'O' ORDER BY StaffId"
            'SqlDSStaff.DataBind()
            'ddlTechID.DataSourceID = "SqlDSStaff"
            'ddlTechID.DataBind()

            txtItemsIssuedMode.Text = "Add"
            ddlTechID.Focus()
            CheckTab()


            ddlTechID.Items.Clear()
            ddlTechID.Items.Add("--SELECT--")
            Dim qry As String
            qry = " SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status = 'O' ORDER BY StaffId"
            PopulateDropDownList(qry, "IDNAME", "StaffId", ddlTechID)


            'mdlPopupStatusSearch.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTechAdd_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnItemsIssuedEdit_Click(sender As Object, e As EventArgs) Handles btnItemsIssuedEdit.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        If txtItemsIssuedRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If



        If ddlStatus.Text = "O" Then
            DisableItemsIssuedControls()
            txtItemsIssuedMode.Text = "Edit"
            lblMessage.Text = "ACTION: EDIT ITEMS ISSUE"
        Else
            lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

    End Sub

    Protected Sub btnItemsIssuedDelete_Click(sender As Object, e As EventArgs) Handles btnItemsIssuedDelete.Click
        lblMessage.Text = ""

        If txtLockSt.Text = "Y" Then
            lblAlert.Text = "RECORD IS LOCKED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        If txtItemsIssuedRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE ITEMS ISSUE"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT recordno,ItemId FROM tblservicerecordissueditem where rcno=" & Convert.ToInt32(txtItemsIssuedRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblservicerecordissueditem where rcno=" & Convert.ToInt32(txtItemsIssuedRcNo.Text)

                    command.CommandText = qry

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE ITEMS ISSUED", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

            Catch ex As Exception
                InsertIntoTblWebEventLog("btnItemsIssuedDelete_Click", ex.Message.ToString, txtTechRcNo.Text)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End Try
            EnableItemsIssuedControls()

            'SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
            'SqlDSServiceStaff.DataBind()
            ''GridView3.DataBind()


            'SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
            'SqlDataSource2.DataBind()
            ''GridView2.DataBind()

            sqlDSItemsIssued.SelectCommand = "SELECT Rcno, RecordNo, ItemID, ItemName, Qty, UnitMS, Remarks FROM tblservicerecordissueditem where recordno = '" + txtSvcRecord.Text + "' order by ItemID"
            sqlDSItemsIssued.DataBind()
            grdViewItemsIssued.DataBind()
            MakeItemsIssuedNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        End If
    End Sub

    Protected Sub btnItemsIssuedCancel_Click(sender As Object, e As EventArgs) Handles btnItemsIssuedCancel.Click
        MakeItemsIssuedNull()
        EnableItemsIssuedControls()
        txtItemsIssuedMode.Text = ""
    End Sub


    Protected Sub grdViewItemsIssued_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grdViewItemsIssued.SelectedIndexChanged
        Try
            MakeItemsIssuedNull()
            Dim editindex As Integer = grdViewItemsIssued.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then
                editindex = txtSelectedIndex.Text
            Else
                editindex = grdViewItemsIssued.SelectedIndex
            End If
            '''''''''''''''''''''''
            If editindex < 0 Then

                btnItemsIssuedAdd.Enabled = True
                btnItemsIssuedAdd.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If


            'rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            'txtSvcRcNo.Text = rcno.ToString()


            '''''''''''''''''''''''''''''
            rcno = DirectCast(grdViewItemsIssued.Rows(editindex).FindControl("Label1"), Label).Text

            txtItemsIssuedRcNo.Text = rcno.ToString()
            'ddlTechID.SelectedValue = GridView3.SelectedRow.Cells(1).Text


            ddlItemIDItemsIssued.Items.Clear()
            ddlItemIDItemsIssued.Items.Add("--SELECT--")
            Dim qry As String
            qry = " SELECT ItemID, ItemName, CONCAT(ItemID, ' [', ItemName, ']') AS IDNAME FROM tblstockitem  ORDER BY ItemID"
            PopulateDropDownList(qry, "IDNAME", "ItemID", ddlItemIDItemsIssued)



            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT ItemID, ItemName, Qty, UnitMS, Remarks FROM tblservicerecordissueditem where rcno=" & Convert.ToInt32(txtItemsIssuedRcNo.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                ddlItemIDItemsIssued.Text = dt.Rows(0)("ItemID").ToString
                txtQtyItemsIssued.Text = dt.Rows(0)("Qty").ToString
                txtUnitItemsIssued.Text = dt.Rows(0)("UnitMS").ToString
                txtRemarksItemsIssued.Text = dt.Rows(0)("Remarks").ToString
                'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
                'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            End If


            '''''''''''''''''''''''
            'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
            'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            'DisableTechControls()
            If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then

            Else
                EnableItemsIssuedControls()

                btnItemsIssuedEdit.Enabled = True
                btnItemsIssuedEdit.ForeColor = System.Drawing.Color.Black
                btnItemsIssuedDelete.Enabled = True
                btnItemsIssuedDelete.ForeColor = System.Drawing.Color.Black
            End If

            If chkInactive.Checked = True Then
                btnItemsIssuedAdd.Enabled = False
                btnItemsIssuedAdd.ForeColor = System.Drawing.Color.Gray
                btnItemsIssuedEdit.Enabled = False
                btnItemsIssuedEdit.ForeColor = System.Drawing.Color.Gray
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("grdViewItemsIssued_SelectedIndexChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub OnSelectedIndexChangedgrdViewItemsIssued(sender As Object, e As EventArgs) Handles grdViewItemsIssued.SelectedIndexChanged
        Try


            For Each row As GridViewRow In grdViewItemsIssued.Rows
                If row.RowIndex = grdViewItemsIssued.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If

                If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                    If row.RowIndex = grdViewItemsIssued.SelectedIndex Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If


                Else
                    If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                        If row.RowIndex = txtSelectedIndex.Text Then
                            row.BackColor = ColorTranslator.FromHtml("#00ccff")
                            row.ToolTip = String.Empty
                            txtSelectedIndex.Text = ""
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If


                    End If

                End If
            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChangedgrdViewItemsIssued", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnRowDataBoundgrdViewItemsIssued(sender As Object, e As GridViewRowEventArgs) Handles grdViewItemsIssued.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grdViewItemsIssued, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound3", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Public Sub FindUnitMS()
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT UnitMS FROM tblstockitem where ItemID ='" & ddlItemIDItemsIssued.SelectedValue.ToString.ToUpper & "'"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtUnitItemsIssued.Text = dt.Rows(0)("UnitMS").ToString
            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("FindLocation", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub ddlItemIDItemsIssued_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlItemIDItemsIssued.SelectedIndexChanged
        FindUnitMS()
    End Sub

    Protected Sub btnOkBlankServiceDetail_Click(sender As Object, e As EventArgs) Handles btnOkBlankServiceDetail.Click
        mdlBlankServiceDetail.Hide()
    End Sub

    Protected Sub btnConfirmZeroAmountToBillNo_Click(sender As Object, e As EventArgs) Handles btnConfirmZeroAmountToBillNo.Click
        txtZeroAmountToBillYesNo.Text = "NO"
        mdlPopupZeroAmountToBill.Hide()
        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition1();</Script>", False)
        txtAmtBill.Focus()
    End Sub

    Protected Sub btnConfirmZeroAmountToBill_Click(sender As Object, e As EventArgs) Handles btnConfirmZeroAmountToBill.Click
        btnConfirmZeroAmountToBill.Enabled = False

        If ButtonPressed = "Y" Then
            Exit Sub
        End If

        ButtonPressed = "Y"

        SaveService()
        'ButtonPressed = "Y"

        'If ButtonPressed = "N" Then
        '    ButtonPressed = "Y"
        '    SaveService()
        '    ButtonPressed = "N"
        'End If

        ButtonPressed = "N"
        btnConfirmZeroAmountToBill.Enabled = True
        mdlPopupZeroAmountToBill.Hide()
    End Sub


    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try


            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno
            'RetrieveData()

            GridView1.SelectedIndex = rowindex1

            'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(27).Text
            'txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            txtGridIndex.Text = rowindex1.ToString

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditHistory_Click", ex.Message.ToString, txtTechRcNo.Text)
        End Try

    End Sub


    Protected Sub btnTimeSheet_Click(sender As Object, e As EventArgs)
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            If ddlStatus.Text = "O" Or ddlStatus.Text = "P" Then
            Else

                lblAlert.Text = "TIME SHEET CAN BE ENTERED FOR SERVICE RECORD WITH STATUS 'O' or 'P' ONLY "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            lblMessageTS.Text = ""
            lblAlertTS.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            Dim lblidRcnoTS As String = TryCast(GridView3.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcnoTS.Text = lblidRcnoTS


            GridView3.SelectedIndex = rowindex1

            Dim strStaffIdTS As String = GridView3.Rows(rowindex1).Cells(1).Text

            Dim btn2 As Button = TryCast(GridView3.Rows(rowindex1).FindControl("btnTimeSheet"), Button)

            'strButtonText.text    =TestDeviceFilter"

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtGridIndexTS.Text = rowindex1.ToString
            'Dim editindex As Integer = GridView3.SelectedIndex

            SqlDSTS2.SelectCommand = ""
            SqlDSTS2.DataBind()
            GridViewTS2.DataSourceID = "SqlDSTS2"
            GridViewTS2.DataBind()

            txtTechRcNo.Text = lblidRcnoTS.ToString()
            txtRecordNoTS.Text = txtSvcRecord.Text
            txtClientNameTS.Text = txtServiceName.Text
            txtStaffIDsTS.Text = strStaffIdTS
            txtServiceDateTS.Text = txtActSvcDate.Text
            txtLocationIDTS.Text = txtLocationID.Text
            txtServiceAddressTS.Text = txtAddress.Text

            txtActSvcDateTS.Text = txtActSvcDate.Text
            txtActSvcTimeFromTS.Text = txtActSvcTimeFrom.Text
            txtActSvcEndDateTS.Text = txtActSvcEndDate.Text
            txtActSvcTimeToTS.Text = txtActSvcTimeTo.Text
            EnableControlsTS()
            MakeMeNullTS()

            GridView3_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChanged3(New Object(), New EventArgs)


            SqlDSTS2.SelectCommand = "SELECT Rcno, RecordNo, StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut, Duration, Comments FROM tblServiceRecordStaffTimeSheet where recordno = '" + txtSvcRecord.Text + "' and StaffId='" & txtStaffIDsTS.Text & "' order by staffid,ServiceDateIn"
            SqlDSTS2.DataBind()
            GridViewTS2.DataSourceID = "SqlDSTS2"
            GridViewTS2.DataBind()

            If GridViewTS2.Rows.Count = 0 Then
                txtSelectedIndexTS.Text = "-1"
            Else
                txtSelectedIndexTS.Text = "0"
            End If

            GridViewTS2_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChangedTS2(New Object(), New EventArgs)

            If btn2.Text = "ADD TS" Then
                btnADDTS_Click(sender, e)
            End If

            mdlViewTS.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("btnTimeSheet_Click", ex.Message.ToString, txtTechRcNo.Text)
            lblAlert.Text = ex.Message.ToString
        End Try

    End Sub


    Protected Sub btnEditTimeSheet_Click(sender As Object, e As EventArgs)
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If


            lblMessageTS.Text = ""
            lblAlertTS.Text = ""

            If ddlStatus.Text = "O" Or ddlStatus.Text = "P" Then
            Else

                lblAlert.Text = "TIME SHEET CAN BE ENTERED FOR SERVICE RECORD WITH STATUS 'O' or 'P' ONLY "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            MakeMeNullTS()

            SqlDSTS2.SelectCommand = ""
            SqlDSTS2.DataBind()
            GridViewTS2.DataSourceID = "SqlDSTS2"
            GridViewTS2.DataBind()

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            Dim lblidRcnoTS As String = TryCast(GridViewTS1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcnoTS.Text = lblidRcnoTS

            GridViewTS1.SelectedIndex = rowindex1

            Dim strStaffIdTS As String = GridViewTS1.Rows(rowindex1).Cells(1).Text

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtGridIndexTS.Text = rowindex1.ToString

          
            txtRecordNoTS.Text = txtSvcRecord.Text
            txtClientNameTS.Text = txtServiceName.Text
            txtStaffIDsTS.Text = strStaffIdTS
            txtServiceDateTS.Text = txtActSvcDate.Text
            txtLocationIDTS.Text = txtLocationID.Text

            txtServiceAddressTS.Text = txtAddress.Text

            txtActSvcDateTS.Text = txtActSvcDate.Text
            txtActSvcTimeFromTS.Text = txtActSvcTimeFrom.Text
            txtActSvcEndDateTS.Text = txtActSvcEndDate.Text
            txtActSvcTimeToTS.Text = txtActSvcTimeTo.Text

            EnableControlsTS()

            'SqlDSTS2.SelectCommand = "SELECT Rcno, RecordNo, StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut, Duration, Comments FROM tblServiceRecordStaffTimeSheet where recordno = '" + txtSvcRecord.Text + "' and StaffId='" & txtStaffIDsTS.Text & "' order by staffid,ServiceDateIn"
            SqlDSTS2.SelectCommand = "SELECT Rcno, RecordNo, StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut, Duration, Comments FROM tblServiceRecordStaffTimeSheet where rcno = '" + txtRcnoTS.Text + "' order by staffid,ServiceDateIn"

            SqlDSTS2.DataBind()
            GridViewTS2.DataSourceID = "SqlDSTS2"
            GridViewTS2.DataBind()

            If GridViewTS2.Rows.Count = 0 Then
                txtSelectedIndexTS.Text = "-1"
            Else
                txtSelectedIndexTS.Text = "0"
            End If

            GridViewTS2_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChangedTS2(New Object(), New EventArgs)

            btnEditTS_Click(sender, e)
            mdlViewTS.Show()


      

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditTimeSheet_Click", ex.Message.ToString, txtTechRcNo.Text)
            lblAlert.Text = ex.Message.ToString
        End Try

    End Sub
    Protected Sub txtContractNo_TextChanged(sender As Object, e As EventArgs) Handles txtContractNo.TextChanged

        Try
            'Dim IsContractNo As Boolean
            'IsAccountId = False
            lblAlert.Text = ""
            txtContractNo.Text = txtContractNo.Text.ToUpper
            RetrieveContractGroup()


            If txtMode.Text = "Edit" Then
                If lblContractNo.Text = txtContractNo.Text Then
                    Exit Sub
                End If


                Dim connContractNo As MySqlConnection = New MySqlConnection()

                connContractNo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connContractNo.Open()

                Dim commandContractNo As MySqlCommand = New MySqlCommand
                commandContractNo.CommandType = CommandType.Text

                commandContractNo.CommandText = "SELECT ContractNo from tblContract where ContractNo ='" & txtContractNo.Text.ToUpper.Trim & "'"

                commandContractNo.Connection = connContractNo

                Dim drContractNo As MySqlDataReader = commandContractNo.ExecuteReader()
                Dim dtContractNo As New DataTable
                dtContractNo.Load(drContractNo)

                If dtContractNo.Rows.Count > 0 Then
                    mdlPopupChangeContractNo.Show()

                    'txtCustName.Text = dtContractNo.Rows(0)("CustName").ToString
                    'ddlAccountType.Text = dtContractNo.Rows(0)("ContactType").ToString
                    'txtAccountID.Text = dtContractNo.Rows(0)("AccountId").ToString
                Else
                    lblAlert.Text = "INVALID CONTRACT NUMBER"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    txtContractNo.Text = lblContractNo.Text
                    txtContractNo.Focus()
                End If
                commandContractNo.Dispose()
                connContractNo.Close()
                dtContractNo.Dispose()
            End If

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindAccountId", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try


    End Sub

    Private Sub RetrieveContractGroup()
        Try
            If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                Dim connContractNo As MySqlConnection = New MySqlConnection()

                connContractNo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connContractNo.Open()

                Dim commandContractNo As MySqlCommand = New MySqlCommand
                commandContractNo.CommandType = CommandType.Text

                commandContractNo.CommandText = "SELECT ContractGroup from tblContract where ContractNo ='" & txtContractNo.Text.Trim & "'"

                commandContractNo.Connection = connContractNo

                Dim drContractNo As MySqlDataReader = commandContractNo.ExecuteReader()
                Dim dtContractNo As New DataTable
                dtContractNo.Load(drContractNo)

                If dtContractNo.Rows.Count > 0 Then
                    txtContractGroup.Text = dtContractNo.Rows(0)("ContractGroup").ToString
                End If

                commandContractNo.Dispose()
                connContractNo.Close()
                dtContractNo.Dispose()
            End If

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            ' lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("RetrieveContractGroup", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub


    Protected Sub btnConfirmChangeContractNo_Click(sender As Object, e As EventArgs) Handles btnConfirmChangeContractNo.Click
        Try
            'Dim IsContractNo As Boolean
            'IsAccountId = False

            Dim connContractNo As MySqlConnection = New MySqlConnection()

            connContractNo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connContractNo.Open()

            Dim commandContractNo As MySqlCommand = New MySqlCommand
            commandContractNo.CommandType = CommandType.Text

            commandContractNo.CommandText = "SELECT ContractNo, AccountId, ContactType, CustName, ContractGroup from tblContract where ContractNo ='" & txtContractNo.Text & "'"

            commandContractNo.Connection = connContractNo

            Dim drContractNo As MySqlDataReader = commandContractNo.ExecuteReader()
            Dim dtContractNo As New DataTable
            dtContractNo.Load(drContractNo)

            If dtContractNo.Rows.Count > 0 Then
                txtCustName.Text = dtContractNo.Rows(0)("CustName").ToString
                ddlAccountType.Text = dtContractNo.Rows(0)("ContactType").ToString
                txtAccountID.Text = dtContractNo.Rows(0)("AccountId").ToString
                txtContractGroup.Text = dtContractNo.Rows(0)("ContractGroup").ToString
                txtLocationID.Text = ""

                'Else
                '    lblAlert.Text = "INVALID CONTRACT NUMBER"
                '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If
            commandContractNo.Dispose()
            connContractNo.Close()
            dtContractNo.Dispose()

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindAccountId", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try




    End Sub

    Protected Sub btnConfirmChangeContractNoNo_Click(sender As Object, e As EventArgs) Handles btnConfirmChangeContractNoNo.Click
        txtContractNo.Text = lblContractNo.Text

    End Sub



    Protected Sub txtEditServiceInstruction_TextChanged(sender As Object, e As EventArgs) Handles txtEditServiceInstruction.TextChanged

    End Sub

    Protected Sub txtCharCountServiceDescription_TextChanged(sender As Object, e As EventArgs) Handles txtCharCountServiceDescription.TextChanged

    End Sub

    Protected Sub btnPestCountAdd_Click(sender As Object, e As EventArgs) Handles btnPestCountAdd.Click
        Try
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            DisablePestCountControls()

            MakePestCountNull()
            lblMessage.Text = "ACTION: ADD PEST COUNT"

            'SqlDSStaff.SelectCommand = "SELECT StaffId, Name, CONCAT(StaffId, ' [', Name, ']') AS IDNAME FROM tblstaff where Status = 'O' ORDER BY StaffId"
            'SqlDSStaff.DataBind()
            'ddlTechID.DataSourceID = "SqlDSStaff"
            'ddlTechID.DataBind()

            txtPestCountMode.Text = "Add"
            ddlPestID.Focus()
            CheckTab()


            ddlPestID.Items.Clear()
            ddlPestID.Items.Add("--SELECT--")
            Dim qry As String
            qry = " SELECT PestID, Description, CONCAT(PestID, ' [', Description, ']') AS IDNAME FROM tblPest ORDER BY PestID"
            PopulateDropDownList(qry, "IDNAME", "PestID", ddlPestID)

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPestCountAdd_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPestCountEdit_Click(sender As Object, e As EventArgs) Handles btnPestCountEdit.Click
        Try
            lblAlert.Text = ""
            lblMessage.Text = ""

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If

            If txtPestCountRcNo.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"
                Return
            End If

            If ddlStatus.Text = "O" Then
                DisablePestCountControls()
                txtPestCountMode.Text = "Edit"
                lblMessage.Text = "ACTION: EDIT PEST COUNT"
            Else
                lblMessage.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPestCountEdit_Click", ex.Message.ToString, txtPestCountRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPestCountDelete_Click(sender As Object, e As EventArgs) Handles btnPestCountDelete.Click
        Try
            lblMessage.Text = ""

            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If


            If txtPestCountRcNo.Text = "" Then
                ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
                lblAlert.Text = "SELECT RECORD TO DELETE"
                Return
            End If
            lblMessage.Text = "ACTION: DELETE PEST COUNT"

            Dim confirmValue As String = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                Try
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT recordno, PestId FROM tblServiceRecordPest where rcno=" & Convert.ToInt32(txtPestCountRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "delete from tblServiceRecordPest where rcno=" & Convert.ToInt32(txtPestCountRcNo.Text)

                        command.CommandText = qry

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                        lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                    End If
                    conn.Close()
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE PEST COUNT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

                Catch ex As Exception
                    InsertIntoTblWebEventLog("btnPestCountDelete_Click", ex.Message.ToString, txtTechRcNo.Text)
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                End Try
                'EnableItemsIssuedControls()
                EnablePestCountControls()
                'SqlDSServiceStaff.SelectCommand = "SELECT Rcno, RecordNo, StaffID, StaffName, CostValue FROM tblservicerecordstaff where recordno = '" + txtSvcRecord.Text + "' order by staffid"
                'SqlDSServiceStaff.DataBind()
                ''GridView3.DataBind()


                'SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
                'SqlDataSource2.DataBind()
                ''GridView2.DataBind()

                'SqlDSPestCount.SelectCommand = "SELECT Rcno, RecordNo, PestID, Qty, Gender, Species, LifeStage, Location, LevelofInfestation, TrapType, TrapSerialNo, Remarks FROM tblservicerecordissueditem where recordno = '" + txtSvcRecord.Text + "' order by ItemID"
                SqlDSPestCount.SelectCommand = "SELECT Rcno, RecordNo, PestID, Qty, Location, TrapType, TrapSerialNo, Gender, LifeStage, Species, Remarks, LevelofInfestation FROM tblservicerecordpest where recordno = '" + txtSvcRecord.Text + "' order by PestID"

                SqlDSPestCount.DataBind()
                GrdViewPestCount.DataBind()
                MakePestCountNull()
                lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPestCountDelete_Click", ex.Message.ToString, txtPestCountRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnPestCountCancel_Click(sender As Object, e As EventArgs) Handles btnPestCountCancel.Click
        MakePestCountNull()
        EnablePestCountControls()

        txtPestCountMode.Text = ""
    End Sub

    Protected Sub btnPestCountSave_Click(sender As Object, e As EventArgs) Handles btnPestCountSave.Click
        Try
            Dim d As Double

            If ddlPestID.Text = "--SELECT--" Or ddlPestID.Text = "-1" Then
                ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
                lblAlert.Text = "SELECT PEST TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('SELECT PEST TO PROCEED');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If

            If String.IsNullOrEmpty(txtQuantityPC.Text) = False Then
                If Double.TryParse(txtQuantityPC.Text, d) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID QUANTITY"
                    ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER VALID QUANTITY');", True)

                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    Return
                End If
            Else
                txtQuantityPC.Text = "0"
            End If

            If Convert.ToDecimal(txtQuantityPC.Text) <= 0.0 Then
                ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
                lblAlert.Text = "ENTER NON-ZERO POSITIVE QUANTITY"
                ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "alertText('ENTER NON-ZERO POSITIVE QUANTITY');", True)

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Return
            End If


            If txtPestCountMode.Text = "Add" Then
                Try
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    'command1.CommandText = "SELECT recordno, PESTID FROM tblservicerecordpest where recordno=@recordno and PESTID=@PESTID and Gender=@Gender and LifeStage=@LifeStage and Species=@Species"
                    command1.CommandText = "SELECT recordno, PESTID FROM tblservicerecordpest where recordno=@recordno and PESTID=@PESTID and Gender=@Gender and LifeStage=@LifeStage and Species=@Species and TrapType=@TrapType and TrapSerialNo=@TrapSerialNo and Location=@Location and FloorPlanId =@FloorPlanId and Remarks =@Remarks"

                    command1.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
                    command1.Parameters.AddWithValue("@PESTID", ddlPestID.SelectedValue.ToString.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@Gender", ddlGender.SelectedValue.ToString.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@LifeStage", ddlLifeStage.SelectedValue.ToString.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@Species", ddlSpecies.SelectedValue.ToString.Trim.ToUpper)

                    command1.Parameters.AddWithValue("@TrapType", ddlTrapType.SelectedValue.ToString.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@Location", txtLocationPC.Text.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@FloorPlanId", ddlFloorLevel.Text.ToUpper.Trim.ToUpper)
                    command1.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text.ToUpper)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                        lblAlert.Text = "SELECTED PEST ALREADY ASSIGNED FOR THIS SERVICE"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Return

                    Else

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "INSERT INTO tblServiceRecordPest(PestID, Qty, LevelOfInfestation, Location, Traptype, TrapSerialNo, Gender, Lifestage, Species, Remarks,RecordNo, FloorPlanID,  CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)VALUES(@PestID, @Qty, @LevelOfInfestation, @Location, @Traptype, @TrapSerialNo, @Gender, @Lifestage, @Species,  @Remarks,@RecordNo, @FloorPlanID, @CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"
                        command.CommandText = qry
                        command.Parameters.Clear()
                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                            command.Parameters.AddWithValue("@PestID", ddlPestID.SelectedValue.ToString)
                            command.Parameters.AddWithValue("@Qty", txtQuantityPC.Text.ToUpper)

                            If ddlInfestationLevel.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@LevelOfInfestation", "")
                            Else
                                command.Parameters.AddWithValue("@LevelOfInfestation", ddlInfestationLevel.Text.ToUpper)
                            End If

                            If ddlTrapType.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Traptype", "")
                            Else
                                command.Parameters.AddWithValue("@Traptype", ddlTrapType.Text.ToUpper)
                            End If

                            command.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text.ToUpper)

                            If ddlGender.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Gender", "")
                            Else
                                command.Parameters.AddWithValue("@Gender", ddlGender.Text.ToUpper)
                            End If

                            If ddlLifeStage.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@LifeStage", "")
                            Else
                                command.Parameters.AddWithValue("@LifeStage", ddlLifeStage.Text.ToUpper)
                            End If

                            If ddlSpecies.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Species", "")
                            Else
                                command.Parameters.AddWithValue("@Species", ddlSpecies.Text.ToUpper)
                            End If

                            command.Parameters.AddWithValue("@Location", txtLocationPC.Text.ToUpper)
                            command.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text.ToUpper)
                            command.Parameters.AddWithValue("@RecordNo", lblRecordNoPestCount.Text.ToUpper)

                            If ddlFloorLevel.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@FloorPlanID", 0)
                            Else
                                command.Parameters.AddWithValue("@FloorPlanID", ddlFloorLevel.Text.ToUpper)
                            End If

                            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                            command.Parameters.AddWithValue("@PestID", ddlPestID.SelectedValue.ToString)
                            'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                            'name = name.Replace("]", "")
                            'name = name.Replace("[", "")


                            'Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                            'name = name.Replace("]", "")
                            'name = name.Replace("[", "")
                            'command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                            command.Parameters.AddWithValue("@Qty", txtQuantityPC.Text)


                            If ddlInfestationLevel.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@LevelOfInfestation", "")
                            Else
                                command.Parameters.AddWithValue("@LevelOfInfestation", ddlInfestationLevel.Text)
                            End If

                            If ddlTrapType.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Traptype", "")
                            Else
                                command.Parameters.AddWithValue("@Traptype", ddlTrapType.Text)
                            End If

                            If ddlGender.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Gender", "")
                            Else
                                command.Parameters.AddWithValue("@Gender", ddlGender.Text)
                            End If

                            If ddlLifeStage.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@LifeStage", "")
                            Else
                                command.Parameters.AddWithValue("@LifeStage", ddlLifeStage.Text)
                            End If

                            If ddlSpecies.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@Species", "")
                            Else
                                command.Parameters.AddWithValue("@Species", ddlSpecies.Text)
                            End If

                            command.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text)
                            command.Parameters.AddWithValue("@Location", txtLocationPC.Text)
                            command.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text)
                            command.Parameters.AddWithValue("@RecordNo", lblRecordNoPestCount.Text)

                            If ddlFloorLevel.SelectedIndex = 0 Then
                                command.Parameters.AddWithValue("@FloorPlanID", 0)
                            Else
                                command.Parameters.AddWithValue("@FloorPlanID", ddlFloorLevel.Text)
                            End If

                            command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()
                        txtPestCountRcNo.Text = command.LastInsertedId
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "ADD SAVE PEST COUNT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtItemsIssuedRcNo.Text)

                        '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                        lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                        lblAlert.Text = ""

                    End If
                    conn.Close()

                Catch ex As Exception
                    InsertIntoTblWebEventLog("btnPestCountSave_Click ADD SAVE", ex.Message.ToString, txtTechRcNo.Text)
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                End Try
                'EnableItemsIssuedControls()
                EnablePestCountControls()
            ElseIf txtPestCountMode.Text = "Edit" Then
                If txtPestCountRcNo.Text = "" Then
                    '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                    lblAlert.Text = "SELECT RECORD TO EDIT"

                    Return

                End If
                Try
                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandType = CommandType.Text
                    'command2.CommandText = "SELECT recordno,PestID FROM tblServiceRecordPest where ((recordno=@recordno) and (PestID=@PestID) and (Gender=@Gender) and (LifeStage=@LifeStage) and (Species=@Species)) and rcno<>" & Convert.ToInt32(txtPestCountRcNo.Text)
                    command2.CommandText = "SELECT recordno,PestID FROM tblServiceRecordPest where ((recordno=@recordno) and (PestID=@PestID) and (Gender=@Gender) and (LifeStage=@LifeStage) and (Species=@Species) and (TrapType=@TrapType) and (TrapSerialNo=@TrapSerialNo) and (Location=@Location) and (FloorPlanId =@FloorPlanId) and (Remarks =@Remarks)) and rcno<>" & Convert.ToInt32(txtPestCountRcNo.Text)

                    'and TrapType=@TrapType and TrapSerialNo=@TrapSerialNo and Location=@Location and FloorPlanId =@FloorPlanId
                    command2.Parameters.AddWithValue("@recordno", txtSvcRecord.Text)
                    command2.Parameters.AddWithValue("@PestID", ddlPestID.SelectedValue.ToString)
                    command2.Parameters.AddWithValue("@Gender", ddlGender.SelectedValue.ToString)
                    command2.Parameters.AddWithValue("@LifeStage", ddlLifeStage.SelectedValue.ToString)
                    command2.Parameters.AddWithValue("@Species", ddlSpecies.SelectedValue.ToString)

                    command2.Parameters.AddWithValue("@TrapType", ddlTrapType.SelectedValue.ToString.Trim.ToUpper)
                    command2.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text.Trim.ToUpper)
                    command2.Parameters.AddWithValue("@Location", txtLocationPC.Text.Trim.ToUpper)
                    command2.Parameters.AddWithValue("@FloorPlanId", ddlFloorLevel.Text.ToUpper.Trim.ToUpper)
                    command2.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text.ToUpper)
                    command2.Connection = conn

                    Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    If dt1.Rows.Count > 0 Then

                        '   MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                        lblAlert.Text = "SELECTED PEST ALREADY ASSIGNED FOR THIS SERVICE"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                        Return


                    Else

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT PestID FROM tblServiceRecordPest where rcno=" & Convert.ToInt32(txtPestCountRcNo.Text)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command As MySqlCommand = New MySqlCommand

                            command.CommandType = CommandType.Text
                            Dim qry As String = "UPDATE tblServiceRecordPest SET PestID = @PestID, Qty = @Qty,LevelOfInfestation = @LevelOfInfestation, Location = @Location, Traptype = @Traptype, TrapSerialNo = @TrapSerialNo, Gender =@Gender, Lifestage =@Lifestage, Species =@Species, Remarks = @Remarks,RecordNo = @RecordNo, FloorPlanID=@FloorPlanID, LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtPestCountRcNo.Text)

                            command.CommandText = qry
                            command.Parameters.Clear()

                            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                                command.Parameters.AddWithValue("@PestID", ddlPestID.SelectedValue.ToString)
                                'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                                'name = name.Replace("]", "")
                                'name = name.Replace("[", "")

                                'Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                                'name = name.Replace("]", "")
                                'name = name.Replace("[", "")
                                'command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                                command.Parameters.AddWithValue("@Qty", txtQuantityPC.Text)

                                If ddlInfestationLevel.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@LevelOfInfestation", "")
                                Else
                                    command.Parameters.AddWithValue("@LevelOfInfestation", ddlInfestationLevel.Text)
                                End If

                                If ddlTrapType.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Traptype", "")
                                Else
                                    command.Parameters.AddWithValue("@Traptype", ddlTrapType.Text)
                                End If

                                If ddlGender.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Gender", "")
                                Else
                                    command.Parameters.AddWithValue("@Gender", ddlGender.Text)
                                End If

                                If ddlLifeStage.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@LifeStage", "")
                                Else
                                    command.Parameters.AddWithValue("@LifeStage", ddlLifeStage.Text)
                                End If

                                If ddlSpecies.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Species", "")
                                Else
                                    command.Parameters.AddWithValue("@Species", ddlSpecies.Text.ToUpper)
                                End If


                                command.Parameters.AddWithValue("@Location", txtLocationPC.Text.ToUpper)
                                command.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text.ToUpper)

                                command.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text.ToUpper)
                                command.Parameters.AddWithValue("@RecordNo", lblRecordNoPestCount.Text.ToUpper)

                                If ddlFloorLevel.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@FloorPlanID", 0)
                                Else
                                    command.Parameters.AddWithValue("@FloorPlanID", ddlFloorLevel.Text.ToUpper)
                                End If

                                'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                                command.Parameters.AddWithValue("@PestID", ddlPestID.SelectedValue.ToString)
                                'Dim name As String = ddlTechID.SelectedItem.Text.Substring(ddlTechID.SelectedItem.Text.IndexOf("["))
                                'name = name.Replace("]", "")
                                'name = name.Replace("[", "")

                                'Dim name As String = ddlItemIDItemsIssued.SelectedItem.Text.Substring(ddlItemIDItemsIssued.SelectedItem.Text.IndexOf("["))
                                'name = name.Replace("]", "")
                                'name = name.Replace("[", "")
                                'command.Parameters.AddWithValue("@ItemName", name.ToUpper)
                                command.Parameters.AddWithValue("@Qty", txtQuantityPC.Text)

                                If ddlInfestationLevel.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@LevelOfInfestation", "")
                                Else
                                    command.Parameters.AddWithValue("@LevelOfInfestation", ddlInfestationLevel.Text)
                                End If

                                If ddlTrapType.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Traptype", "")
                                Else
                                    command.Parameters.AddWithValue("@Traptype", ddlTrapType.Text)
                                End If

                                If ddlGender.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Gender", "")
                                Else
                                    command.Parameters.AddWithValue("@Gender", ddlGender.Text)
                                End If

                                If ddlLifeStage.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@LifeStage", "")
                                Else
                                    command.Parameters.AddWithValue("@LifeStage", ddlLifeStage.Text)
                                End If

                                If ddlSpecies.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@Species", "")
                                Else
                                    command.Parameters.AddWithValue("@Species", ddlSpecies.Text)
                                End If

                                command.Parameters.AddWithValue("@Location", txtLocationPC.Text)
                                command.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text)

                                command.Parameters.AddWithValue("@Remarks", txtRemarksPC.Text)
                                command.Parameters.AddWithValue("@RecordNo", lblRecordNoPestCount.Text)

                                If ddlFloorLevel.SelectedIndex = 0 Then
                                    command.Parameters.AddWithValue("@FloorPlanID", 0)
                                Else
                                    command.Parameters.AddWithValue("@FloorPlanID", ddlFloorLevel.Text)
                                End If

                                'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                                command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            End If

                            command.Connection = conn

                            command.ExecuteNonQuery()
                            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT SAVE PEST COUNT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtTechRcNo.Text)

                            '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                            lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                            lblAlert.Text = ""
                        End If
                    End If

                    conn.Close()
                Catch ex As Exception
                    InsertIntoTblWebEventLog("btnTechSave_Click EDIT SAVE", ex.Message.ToString, txtTechRcNo.Text)
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                End Try
                'EnableItemsIssuedControls()
                EnablePestCountControls()
            End If

            'SQLDSItems.SelectCommand = " SELECT PestID, ItemName, CONCAT(ItemID, ' [', ItemName, ']') AS ItemIssuedNAME FROM tblstockitem  ORDER BY ItemID"
            'SQLDSItems.DataBind()


            SqlDSPestCount.SelectCommand = "SELECT Rcno, RecordNo, PestID, Qty, Location, TrapType, TrapSerialNo,  Remarks, Gender, Species, LifeStage, LevelofInfestation FROM tblservicerecordpest where recordno = '" + txtSvcRecord.Text + "' order by PestID"
            SqlDSPestCount.DataBind()
            GrdViewPestCount.DataSourceID = "SqlDSPestCount"
            GrdViewPestCount.DataBind()

            txtSelectedIndex.Text = "0"
            '    MakeTechNull()
            txtPestCountMode.Text = ""
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPestCountSave_Click", ex.Message.ToString, txtPestCountRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub



    Private Sub MakePestCountNull()
        ddlPestID.SelectedIndex = 0
        txtPestCountRcNo.Text = ""
        txtQuantityPC.Text = ""
        'txtUnitItemsIssued.Text = ""
        txtRemarksPC.Text = ""
        txtPestCountMode.Text = ""

        ddlInfestationLevel.SelectedIndex = 0
        ddlGender.SelectedIndex = 0
        ddlLifeStage.SelectedIndex = 0
        ddlSpecies.SelectedIndex = 0
        ddlTrapType.SelectedIndex = 0
        txtTrapSerialNo.Text = ""
        txtLocationPC.Text = ""
        txtQuantityPC.Text = 0
        ddlPestID.SelectedIndex = 0
        ddlFloorLevel.SelectedIndex = 0

    End Sub

    Private Sub EnablePestCountControls()
        btnPestCountSave.Enabled = False
        btnPestCountSave.ForeColor = System.Drawing.Color.Gray
        btnPestCountCancel.Enabled = False
        btnPestCountCancel.ForeColor = System.Drawing.Color.Gray

        btnPestCountAdd.Enabled = True
        btnPestCountAdd.ForeColor = System.Drawing.Color.Black
        btnPestCountEdit.Enabled = False
        btnPestCountEdit.ForeColor = System.Drawing.Color.Gray
        btnPestCountDelete.Enabled = False
        btnPestCountDelete.ForeColor = System.Drawing.Color.Gray

        ddlPestID.Enabled = False
        txtPestCountRcNo.Enabled = False

        txtQuantityPC.Enabled = False
        ddlInfestationLevel.Enabled = False
        ddlGender.Enabled = False
        ddlLifeStage.Enabled = False
        ddlSpecies.Enabled = False
        txtLocationPC.Enabled = False
        ddlTrapType.Enabled = False
        txtTrapSerialNo.Enabled = False
        txtRemarksPC.Enabled = False
        ddlFloorLevel.Enabled = False

    End Sub

    Private Sub DisablePestCountControls()
        btnPestCountSave.Enabled = True
        btnPestCountSave.ForeColor = System.Drawing.Color.Black
        btnPestCountCancel.Enabled = True
        btnPestCountCancel.ForeColor = System.Drawing.Color.Black

        btnPestCountAdd.Enabled = False
        btnPestCountAdd.ForeColor = System.Drawing.Color.Gray

        btnPestCountEdit.Enabled = False
        btnPestCountEdit.ForeColor = System.Drawing.Color.Gray

        btnPestCountDelete.Enabled = False
        btnPestCountDelete.ForeColor = System.Drawing.Color.Gray

        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        ddlPestID.Enabled = True
        txtPestCountRcNo.Enabled = True
        txtQuantityPC.Enabled = True
        ddlInfestationLevel.Enabled = True
        ddlGender.Enabled = True
        ddlLifeStage.Enabled = True
        ddlSpecies.Enabled = True
        txtLocationPC.Enabled = True
        ddlTrapType.Enabled = True
        txtTrapSerialNo.Enabled = True
        txtRemarksPC.Enabled = True
        ddlFloorLevel.Enabled = True
    End Sub



    Protected Sub grdViewPestCount_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GrdViewPestCount.SelectedIndexChanged
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""

            MakePestCountNull()
            BindGridEmpty()

            Dim editindex As Integer = GrdViewPestCount.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then
                editindex = txtSelectedIndex.Text
            Else
                editindex = GrdViewPestCount.SelectedIndex
            End If
            '''''''''''''''''''''''
            If editindex < 0 Then

                btnPestCountAdd.Enabled = True
                btnPestCountAdd.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If


            'rcno = DirectCast(GridView2.Rows(editindex).FindControl("lblRcno"), Label).Text
            'txtSvcRcNo.Text = rcno.ToString()


            '''''''''''''''''''''''''''''
            rcno = DirectCast(GrdViewPestCount.Rows(editindex).FindControl("Label1"), Label).Text

            txtPestCountRcNo.Text = rcno.ToString()
            'ddlTechID.SelectedValue = GridView3.SelectedRow.Cells(1).Text


            'ddlItemIDItemsIssued.Items.Clear()
            'ddlItemIDItemsIssued.Items.Add("--SELECT--")
            Dim qry As String
            'qry = " SELECT ItemID, ItemName, CONCAT(ItemID, ' [', ItemName, ']') AS IDNAME FROM tblstockitem  ORDER BY ItemID"
            'PopulateDropDownList(qry, "IDNAME", "ItemID", ddlItemIDItemsIssued)



            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT PestID, Qty, Location, Remarks, TrapType, TrapSerialNo, Gender, LifeStage, Species, LevelofInfestation, FloorPlanID FROM tblservicerecordpest where rcno=" & Convert.ToInt32(txtPestCountRcNo.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                ddlPestID.Text = dt.Rows(0)("PestID").ToString
                txtQuantityPC.Text = dt.Rows(0)("Qty").ToString
                txtLocationPC.Text = dt.Rows(0)("Location").ToString
                txtRemarksPC.Text = dt.Rows(0)("Remarks").ToString

                Dim lFloorPlanId As Long
                lFloorPlanId = dt.Rows(0)("FloorPlanID").ToString()
                'If String.IsNullOrEmpty(dt.Rows(0)("LevelofInfestation").ToString) = True Then
                '    ddlInfestationLevel.SelectedIndex = 0
                'Else
                '    ddlInfestationLevel.Text = dt.Rows(0)("LevelofInfestation").ToString
                'End If

                If String.IsNullOrEmpty(dt.Rows(0)("Traptype").ToString) = True Then
                    ddlTrapType.SelectedIndex = 0
                Else
                    ddlTrapType.Text = dt.Rows(0)("Traptype").ToString
                End If

                If String.IsNullOrEmpty(dt.Rows(0)("FloorPlanID").ToString) = True Or dt.Rows(0)("FloorPlanID").ToString = 0 Then
                    ddlFloorLevel.SelectedIndex = 0

                Else

                    '''
                    Dim sqlstr As String
                    sqlstr = ""

                    sqlstr = " SELECT FloorPlanID FROM tblcustomerlocationfloorplan where LocationID ='" & txtLocationID.Text & "' and FloorPlanID =" & lFloorPlanId & " ORDER BY FloorPlanName"

                    Dim command2 As MySqlCommand = New MySqlCommand

                    Dim conn1 As MySqlConnection = New MySqlConnection()
                    conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn1.Open()

                    command2.CommandType = CommandType.Text
                    command2.CommandText = sqlstr
                    command2.Connection = conn1

                    Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    If dt1.Rows.Count > 0 Then
                        ddlFloorLevel.Text = dt.Rows(0)("FloorPlanID").ToString
                    Else
                        ddlFloorLevel.SelectedIndex = 0
                    End If

                    conn1.Close()

                    command2.Dispose()
                    dr1.Close()
                    dt1.Dispose()
                    '''

                End If

                '''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'Code to be added by Mr.Sen - 22/10/2019
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                ddlGender.Items.Clear()
                ddlGender.Items.Add("--SELECT--")
                ddlGender.Items.Add("N.A")

                ddlLifeStage.Items.Clear()
                ddlLifeStage.Items.Add("--SELECT--")
                ddlLifeStage.Items.Add("N.A")

                ddlSpecies.Items.Clear()
                ddlSpecies.Items.Add("--SELECT--")
                ddlSpecies.Items.Add("N.A")


                qry = " SELECT Gender FROM tblPestGender where PestID = '" & ddlPestID.Text & "' ORDER BY Gender"
                PopulateDropDownList(qry, "Gender", "Gender", ddlGender)

                qry = " SELECT LifeStage FROM tblPestLifeStage where PestID = '" & ddlPestID.Text & "' ORDER BY LifeStage"
                PopulateDropDownList(qry, "LifeStage", "LifeStage", ddlLifeStage)

                qry = " SELECT Species FROM tblPestSpecies where PestID = '" & ddlPestID.Text & "' ORDER BY Species"
                PopulateDropDownList(qry, "Species", "Species", ddlSpecies)

                '''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'Code to be added by Mr.Sen - 22/10/2019
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''


                If String.IsNullOrEmpty(dt.Rows(0)("Gender").ToString) = True Then
                    ddlGender.SelectedIndex = 0
                Else
                    ddlGender.Text = dt.Rows(0)("Gender").ToString
                End If

                If String.IsNullOrEmpty(dt.Rows(0)("LifeStage").ToString) = True Then
                    ddlLifeStage.SelectedIndex = 0
                Else
                    ddlLifeStage.Text = dt.Rows(0)("LifeStage").ToString
                End If

                If String.IsNullOrEmpty(dt.Rows(0)("Species").ToString) = True Then
                    ddlSpecies.SelectedIndex = 0
                Else
                    ddlSpecies.Text = dt.Rows(0)("Species").ToString
                End If




                'ddlTrapType.Text = dt.Rows(0)("TrapType").ToString
                'ddlGender.Text = dt.Rows(0)("Gender").ToString
                'ddlSpecies.Text = dt.Rows(0)("Species").ToString
                'ddlLifeStage.Text = dt.Rows(0)("LifeStage").ToString
                txtTrapSerialNo.Text = dt.Rows(0)("TrapSerialNo").ToString
                'ddlInfestationLevel.Text = dt.Rows(0)("LevelofInfestation").ToString

                If ddlStatus.Text = "O" Then
                    If String.IsNullOrEmpty(txtTrapSerialNo.Text) = False Then
                        txtTrapSerialNo.Enabled = True
                    Else
                        txtTrapSerialNo.Enabled = False
                    End If
                End If

                'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
                'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            End If


            '''''''''''''''''''''''
            'ddlTechID.Text = GridView3.SelectedRow.Cells(1).Text
            'txtTechCostValue.Text = GridView3.SelectedRow.Cells(3).Text
            'DisableTechControls()
            If ddlStatus.Text = "P" Or ddlStatus.Text = "V" Then

            Else
                EnablePestCountControls()

                btnPestCountEdit.Enabled = True
                btnPestCountEdit.ForeColor = System.Drawing.Color.Black
                btnPestCountDelete.Enabled = True
                btnPestCountDelete.ForeColor = System.Drawing.Color.Black
            End If

            If chkInactive.Checked = True Then
                btnPestCountAdd.Enabled = False
                btnPestCountAdd.ForeColor = System.Drawing.Color.Gray
                btnPestCountEdit.Enabled = False
                btnPestCountEdit.ForeColor = System.Drawing.Color.Gray
            End If

            CountPestGrid()

        Catch ex As Exception
            InsertIntoTblWebEventLog("grdViewPestCount_SelectedIndexChanged", ex.Message.ToString, txtPestCountRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub OnSelectedIndexChangedgrdViewPestCount(sender As Object, e As EventArgs) Handles GrdViewPestCount.SelectedIndexChanged
        Try


            For Each row As GridViewRow In GrdViewPestCount.Rows
                If row.RowIndex = GrdViewPestCount.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If

                If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                    If row.RowIndex = GrdViewPestCount.SelectedIndex Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If


                Else
                    If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                        If row.RowIndex = txtSelectedIndex.Text Then
                            row.BackColor = ColorTranslator.FromHtml("#00ccff")
                            row.ToolTip = String.Empty
                            txtSelectedIndex.Text = ""
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If


                    End If

                End If
            Next
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChangedgrdViewPestCount", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub OnRowDataBoundgrdViewPestCount(sender As Object, e As GridViewRowEventArgs) Handles GrdViewPestCount.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GrdViewPestCount, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBoundgrdViewPestCount", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub




    Protected Sub ddlTrapType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlTrapType.SelectedIndexChanged
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT RequireSerialNo FROM tblTrapType where TrapType='" & ddlTrapType.Text.ToUpper & "'"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("RequireSerialNo").ToString() = True Then
                    txtTrapSerialNo.Enabled = True
                Else
                    txtTrapSerialNo.Text = ""
                    txtTrapSerialNo.Enabled = False
                End If

            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("ddlTrapType_SelectedIndexChanged", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub ddlPestID_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlPestID.SelectedIndexChanged

        Dim qry As String



        ddlGender.Items.Clear()
        ddlGender.Items.Add("--SELECT--")
        ddlGender.Items.Add("N.A")

        ddlLifeStage.Items.Clear()
        ddlLifeStage.Items.Add("--SELECT--")
        ddlLifeStage.Items.Add("N.A")

        ddlSpecies.Items.Clear()
        ddlSpecies.Items.Add("--SELECT--")
        ddlSpecies.Items.Add("N.A")

        qry = " SELECT Gender FROM tblPestGender where PestID = '" & ddlPestID.Text & "' ORDER BY Gender"
        PopulateDropDownList(qry, "Gender", "Gender", ddlGender)

        qry = " SELECT LifeStage FROM tblPestLifeStage where PestID = '" & ddlPestID.Text & "' ORDER BY LifeStage"
        PopulateDropDownList(qry, "LifeStage", "LifeStage", ddlLifeStage)

        qry = " SELECT Species FROM tblPestSpecies where PestID = '" & ddlPestID.Text & "' ORDER BY Species"
        PopulateDropDownList(qry, "Species", "Species", ddlSpecies)


    End Sub

    Protected Sub btnSaveEditPhotoDesc_Click(sender As Object, e As EventArgs) Handles btnSaveEditPhotoDesc.Click
        Try

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim cmd As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.Connection = conn
            command.CommandText = "Update tblServicePhoto set Description=@Description,LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn where rcno=@rcno"
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@rcno", Convert.ToInt64(txtEditPhotoDescRcno.Text))

            command.Parameters.AddWithValue("@LastModifiedBy", Convert.ToString(Session("UserID")))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Parameters.AddWithValue("@Description", txtEditPhotoDesc.Text.ToUpper)

            command.ExecuteNonQuery()
            command.Dispose()
            conn.Close()
            conn.Dispose()
            lblAlert.Text = "IMAGE DESCRIPTION UPDATED"

            If tb1.ActiveTabIndex = 2 Then
                BindPestGrid()
            ElseIf tb1.ActiveTabIndex = 6 Then
                BindGrid()

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveEditPhotoDesc_Click", ex.Message.ToString, txtEditPhotoDescRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnYesRequireFollowUp_Click(sender As Object, e As EventArgs) Handles btnYesRequireFollowUp.Click
        Try
            chkCustomerServiceLocation.Checked = True

            txtIsRequireFollowup.Text = "Y"

            txtIsPopUp.Text = "Y"
            mdlPopupCopyAddress.Show()
            mdlRequireFollowUp.Hide()
            'btnCopy_Click(sender, e)
            'btnCopy_Click(sender As Object, e As EventArgs)
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnOkRequireFollowUp_Click", ex.Message.ToString, txtEditPhotoDescRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnOkContractNotOpenAdd_Click(sender As Object, e As EventArgs) Handles btnOkContractNotOpenAdd.Click
        EventsForAdd()
    End Sub

    Protected Sub btnOkContractNotOpenCopy_Click(sender As Object, e As EventArgs) Handles btnOkContractNotOpenCopy.Click
        chkCustomerServiceLocation.Checked = True
        mdlPopupCopyAddress.Show()
    End Sub

    Protected Sub chkLargePhoto_CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
        lblDeleteConfirm.Text = "LargePhoto"
        '  lblEvent.Text = "Confirm "
        ' lblPhotoMessage.Text = gvImages.Rows.Count.ToString
        '  Return

        If gvImages.Rows.Count > 0 Then
            '   InsertIntoTblWebEventLog("LargePhoto0", "test", txtSvcRecord.Text)

            Dim chk As CheckBox = CType(sender, CheckBox)
            Dim gvr As GridViewRow = CType(chk.NamingContainer, GridViewRow)
            Dim rcno As String = TryCast(gvr.Cells(1).FindControl("Label1"), Label).Text()
            txtLargePhotoRcNo.Text = rcno

            Dim editindex As Integer = gvr.RowIndex

            Dim chkRow As CheckBox = TryCast(gvImages.Rows(editindex).FindControl("chkSelectLargePhotoGV"), CheckBox)
            txtCheckboxValue.Text = chkRow.Checked.ToString


            '   Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

            If chkRow.Checked Then
                lblQuery.Text = "Do you wish to make this photo large?"
            Else
                lblQuery.Text = "Do you wish to make this photo small?"
            End If

            mdlPopupDeleteUploadedFile.Show()
        End If



    End Sub

    Private Sub UpdateLargePhoto(rcno As Int64)
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text


            command1.CommandText = "SELECT * FROM tblservicephoto where rcno='" + rcno.ToString + "'"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            '  InsertIntoTblWebEventLog("UpdateLargePhoto", rcno.ToString + " " + txtCheckboxValue.Text, txtRecordNoSelected.Text)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                ' Dim qry As String = "delete from tblservicephoto where rcno='" + rcno.ToString + "'"

                ' command.CommandText = qry
                If txtCheckboxValue.Text = "True" Then
                    command.CommandText = "Update tblservicephoto set LargePhoto=0 where rcno = '" + rcno.ToString + "'"

                Else
                    command.CommandText = "Update tblservicephoto set LargePhoto=1 where rcno = '" + rcno.ToString + "'"

                End If
                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "DELETEPHOTO", rcno, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtSvcRecord.Text)
            End If

            conn.Close()
            conn.Dispose()

            lblMessage.Text = "LARGE PHOTO FIELD UPDATED"

            BindGrid()



        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdateLargePhoto", ex.Message.ToString, txtSvcRecord.Text)
        End Try


        'Try
        '    If gvImages.Rows.Count > 0 Then
        '        '   InsertIntoTblWebEventLog("LargePhoto0", "test", txtSvcRecord.Text)

        '        'Dim chk As CheckBox = CType(sender, CheckBox)
        '        'Dim gvr As GridViewRow = CType(chk.NamingContainer, GridViewRow)
        '        ''Dim rcno As String = TryCast(gvr.Cells(1).FindControl("Label1"), Label).Text()
        '        ' ''   InsertIntoTblWebEventLog("LargePhoto1", rcno, txtSvcRecord.Text)

        '        'Dim editindex As Integer = gvr.RowIndex

        '        'Dim chkRow As CheckBox = TryCast(gvImages.Rows(editindex).FindControl("chkSelectLargePhotoGV"), CheckBox)

        '        ''  InsertIntoTblWebEventLog("LargePhoto2", chkRow.Checked.ToString, txtSvcRecord.Text)

        '        Dim qry As String = ""

        '        Dim conn As MySqlConnection = New MySqlConnection()

        '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
        '        conn.Open()

        '        Dim command As MySqlCommand = New MySqlCommand

        '        command.CommandType = CommandType.Text

        '        If txtCheckboxValue.Text = "True" Then
        '            command.CommandText = "Update tblservicephoto set LargePhoto=1 where rcno = '" + txtLargePhotoRcNo.Text + "'"

        '        Else
        '            command.CommandText = "Update tblservicephoto set LargePhoto=0 where rcno = '" + txtLargePhotoRcNo.Text + "'"

        '        End If
        '        '  InsertIntoTblWebEventLog("LargePhoto3", qry, txtSvcRecord.Text)


        '        command.Connection = conn

        '        command.ExecuteNonQuery()
        '        command.Dispose()

        '        conn.Close()
        '        conn.Dispose()
        '        lblPhotoMessage.Text = "LARGE PHOTO FIELD UPDATED"

        '    End If

        '    BindGrid()

        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("LargePhoto", ex.Message.ToString, txtSvcRecord.Text)
        'End Try

    End Sub


    'Protected Sub btnConfirmDeleteNo_Click(sender As Object, e As EventArgs) Handles btnConfirmDeleteNo.Click
    ' If lblDeleteConfirm.Text = "LargePhoto" Then
    '        BindGrid()

    '    End If

    '    mdlPopupDeleteUploadedFile.Hide()

    'End Sub

    Protected Sub UpdateLargePhotoField(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument
            txtDeletePhoto.Text = rcno

            lblDeleteConfirm.Text = "LargePhoto"
            ' lblEvent.Text = "Confirm DELETE"

            Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

            '  lblQuery.Text = "Are you sure to DELETE the Photo? <br><br> Photo Description : " + grdrow.Cells(6).Text

            ' Dim chkRow As CheckBox = TryCast(gvImages.Rows(editindex).FindControl("chkSelectLargePhotoGV"), CheckBox)
            Dim chkRow As CheckBox = TryCast(grdrow.FindControl("chkSelectLargePhotoGV"), CheckBox)
            txtCheckboxValue.Text = chkRow.Checked.ToString

            If chkRow.Checked Then
                lblQuery.Text = "Do you wish to make this photo small?"
            Else
                lblQuery.Text = "Do you wish to make this photo large?"
            End If

            mdlPopupDeleteUploadedFile.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("UpdateLargePhoto", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

        'lblDeleteConfirm.Text = "LargePhoto"
        ''  lblEvent.Text = "Confirm "
        '' lblPhotoMessage.Text = gvImages.Rows.Count.ToString
        ''  Return

        'If gvImages.Rows.Count > 0 Then
        '    '   InsertIntoTblWebEventLog("LargePhoto0", "test", txtSvcRecord.Text)

        '    Dim chk As CheckBox = CType(sender, CheckBox)
        '    Dim gvr As GridViewRow = CType(chk.NamingContainer, GridViewRow)
        '    Dim rcno As String = TryCast(gvr.Cells(1).FindControl("Label1"), Label).Text()
        '    txtLargePhotoRcNo.Text = rcno

        '    Dim editindex As Integer = gvr.RowIndex

        '    Dim chkRow As CheckBox = TryCast(gvImages.Rows(editindex).FindControl("chkSelectLargePhotoGV"), CheckBox)
        '    txtCheckboxValue.Text = chkRow.Checked.ToString


        '    '   Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

        '    If chkRow.Checked Then
        '        lblQuery.Text = "Do you wish to make this photo large?"
        '    Else
        '        lblQuery.Text = "Do you wish to make this photo small?"
        '    End If

        '    mdlPopupDeleteUploadedFile.Show()
        'End If

    End Sub



    Private Sub BindGrid()
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            con.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text

            'command.CommandText = "update tblservicephoto set LargePhoto=0 where recordno='" & lblRecordNo.Text & "' and largephoto is null"

            'command.Connection = con

            'command.ExecuteNonQuery()
            'command.Dispose()

            Dim cmd As MySqlCommand = New MySqlCommand

            cmd.CommandType = CommandType.Text

            cmd.CommandText = "SELECT * FROM tblservicephoto where recordno='" & lblRecordNo.Text & "' and (ServiceRecordRcno is null or ServiceRecordRcno='' or ServiceRecordRcno=0)"
            cmd.Connection = con

            Using sda As New MySqlDataAdapter(cmd)
                Dim dt As New DataTable()
                sda.Fill(dt)
                gvImages.DataSource = dt
                gvImages.DataBind()
                dt.Clear()
                sda.Dispose()
                dt.Dispose()
            End Using

            cmd.Dispose()
            con.Close()
            con.Dispose()

            For j = 0 To gvImages.Rows.Count - 1
                Dim chkRow As CheckBox = TryCast(gvImages.Rows(j).FindControl("chkSelectLargePhotoGV"), CheckBox)
                Dim btnUpdatePhoto As LinkButton = TryCast(gvImages.Rows(j).FindControl("lnkUpdateLargePhoto"), LinkButton)

                If chkRow.Checked = True Then
                    btnUpdatePhoto.Text = "Make Small"
                Else
                    btnUpdatePhoto.Text = "Make Large"
                End If
            Next


        Catch ex As Exception
            InsertIntoTblWebEventLog("BindGrid", ex.Message.ToString, lblRecordNo.Text)
        End Try
    End Sub

    Private Sub BindPestGrid()
        '   InsertIntoTblWebEventLog("BindPestGrid", txtPestCountRcNo.Text, lblRecordNo.Text)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            con.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text

            'command.CommandText = "update tblservicephoto set LargePhoto=0 where recordno='" & lblRecordNo.Text & "' and largephoto is null"

            'command.Connection = con

            'command.ExecuteNonQuery()
            'command.Dispose()

            Dim cmd As MySqlCommand = New MySqlCommand

            cmd.CommandType = CommandType.Text

            cmd.CommandText = "SELECT * FROM tblservicephoto where recordno='" & lblRecordNo.Text & "' and ServiceRecordRcno='" & txtPestCountRcNo.Text & "'"
            cmd.Connection = con

            Using sda As New MySqlDataAdapter(cmd)
                Dim dt As New DataTable()
                sda.Fill(dt)

                gvPestImages.DataSource = dt
                gvPestImages.DataBind()
                If dt.Rows.Count > 0 Then
                    btnPestCountPhotos.Text = "View Uploaded Photos [" + dt.Rows.Count.ToString + "]"
                Else
                    btnPestCountPhotos.Text = "View Uploaded Photos"

                End If
                dt.Clear()
                sda.Dispose()
                dt.Dispose()
            End Using

            cmd.Dispose()
            con.Close()
            con.Dispose()



        Catch ex As Exception
            InsertIntoTblWebEventLog("BindGrid", ex.Message.ToString, lblRecordNo.Text)
        End Try
    End Sub

    Private Sub CountPestGrid()
        '   InsertIntoTblWebEventLog("BindPestGrid", txtPestCountRcNo.Text, lblRecordNo.Text)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            con.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text

            'command.CommandText = "update tblservicephoto set LargePhoto=0 where recordno='" & lblRecordNo.Text & "' and largephoto is null"

            'command.Connection = con

            'command.ExecuteNonQuery()
            'command.Dispose()

            Dim cmd As MySqlCommand = New MySqlCommand

            cmd.CommandType = CommandType.Text

            cmd.CommandText = "SELECT * FROM tblservicephoto where recordno='" & lblRecordNo.Text & "' and ServiceRecordRcno='" & txtPestCountRcNo.Text & "'"
            cmd.Connection = con

            Using sda As New MySqlDataAdapter(cmd)
                Dim dt As New DataTable()
                sda.Fill(dt)


                If dt.Rows.Count > 0 Then
                    btnPestCountPhotos.Text = "View Uploaded Photos [" + dt.Rows.Count.ToString + "]"
                Else
                    btnPestCountPhotos.Text = "View Uploaded Photos"

                End If
                dt.Clear()
                sda.Dispose()
                dt.Dispose()
            End Using

            cmd.Dispose()
            con.Close()
            con.Dispose()



        Catch ex As Exception
            InsertIntoTblWebEventLog("BindGrid", ex.Message.ToString, lblRecordNo.Text)
        End Try
    End Sub

    Private Sub BindGridEmpty()
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            con.Open()

            Dim cmd As MySqlCommand = New MySqlCommand

            cmd.CommandType = CommandType.Text

            cmd.CommandText = "SELECT * FROM tblservicephoto where rcno=0"
            cmd.Connection = con

            Using sda As New MySqlDataAdapter(cmd)
                Dim dt As New DataTable()
                sda.Fill(dt)
                gvImages.DataSource = dt
                gvImages.DataBind()
                ' gvImages.AllowPaging = True
                ' gvImages.PageSize = 10
                gvPestImages.DataSource = dt
                gvPestImages.DataBind()

                dt.Clear()
                sda.Dispose()
                dt.Dispose()

            End Using

            cmd.Dispose()
            con.Close()
            con.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("BindGrid", ex.Message.ToString, lblRecordNo.Text)
        End Try
    End Sub

    Protected Sub RotateImage(ByVal sender As Object, ByVal e As EventArgs)

        Try
            Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument


            Dim grdrow As GridViewRow = CType((CType(sender, LinkButton)).NamingContainer, GridViewRow)

            '   Dim image As Image = grdrow.FindControl("ImageView")


            Dim conn As MySqlConnection = New MySqlConnection()
            Dim cmd As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblservicephoto where rcno='" + rcno.ToString + "'"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'For Each row As DataRow In DataTable dt
                '    Dim imgBytes As Byte() = (bytep)
                '    row("savedImage")
                '    Dim imgStream As MemoryStream = New MemoryStream(imgBytes)
                '    Dim myImage As System.Drawing.Image = System.Drawing.Image.FromStream(imgStream)
                'Next

                If IsDBNull(dt.Rows(0)("Photo")) = False Then
                    Dim theImage As System.Drawing.Image = Nothing

                    Dim bytes As Byte() = DirectCast(dt.Rows(0)("Photo"), Byte())

                    Image1.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(bytes)
                    Dim ms As New IO.MemoryStream(CType(bytes, Byte()))
                    Dim returnImage As Image = Image.FromStream(ms)
                    theImage = returnImage

                    theImage.RotateFlip(RotateFlipType.Rotate90FlipNone)

                    Dim imgbyte As Byte() = CType((New ImageConverter()).ConvertTo(theImage, GetType(Byte())), Byte())





                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text

                    command.Connection = conn
                    command.CommandText = "Update tblServicePhoto set photo=@photo where rcno=@rcno"
                    command.Parameters.Clear()
                    command.Parameters.AddWithValue("@rcno", rcno)

                    command.Parameters.AddWithValue("@Photo", imgbyte)

                    command.ExecuteNonQuery()
                    command.Dispose()
                    conn.Close()
                    conn.Dispose()
                End If

            End If

            If tb1.ActiveTabIndex = 2 Then
                BindPestGrid()
            ElseIf tb1.ActiveTabIndex = 6 Then
                BindGrid()
            End If

        Catch ex As Exception
            Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument

            InsertIntoTblWebEventLog("RotateImage", ex.Message.ToString, rcno.ToString)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub



    Protected Sub btnDownloadPhotos_Click(sender As Object, e As EventArgs) Handles btnDownloadPhotos.Click
        Dim conn As MySqlConnection = New MySqlConnection()
        Dim cmd As MySqlCommand = New MySqlCommand

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT * FROM tblservicephoto where recordno='" + lblRecordNo.Text + "' and (ServiceRecordRcno is null or ServiceRecordRcno='' or ServiceRecordRcno=0)"
        command1.Connection = conn
        command1.Dispose()

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            Dim FilePath As String = ""
            Using zip As New ZipFile()
                zip.AlternateEncodingUsage = ZipOption.AsNecessary
                '  zip.AddDirectoryByName("Images")
                For i = 0 To dt.Rows.Count - 1

                    If IsDBNull(dt.Rows(i)("Photo")) = False Then
                        Dim theImage As System.Drawing.Image = Nothing

                        Dim bytes As Byte() = DirectCast(dt.Rows(i)("Photo"), Byte())

                        Dim filetype As String = dt.Rows(i)("FileType")
                        filetype = filetype.Substring(filetype.IndexOf("/") + 1)


                        Dim picturename As String = Convert.ToString(dt.Rows(i)("RcNo")) + "." + filetype

                        zip.AddEntry(picturename, bytes)

                    End If
                Next


                Response.Clear()
                Response.BufferOutput = False
                Dim zipName As String = [String].Format("Zip_{0}.zip", DateTime.Now.ToString("yyyy-MMM-dd_") + lblRecordNo.Text)
                Response.ContentType = "application/zip"
                Response.AddHeader("content-disposition", Convert.ToString("attachment; filename=") & zipName)
                zip.Save(Response.OutputStream)
                Response.[End]()
            End Using
        End If

        dt.Clear()
        dt.Dispose()
        dr.Close()
        command1.Dispose()

        conn.Close()
        conn.Dispose()
    End Sub

    Protected Sub OnPageIndexChanging(sender As Object, e As GridViewPageEventArgs)
        gvImages.PageIndex = e.NewPageIndex
        Me.BindGrid()
    End Sub

    Private Sub ChangedDisplayRadioButton()
        'gridListing.Visible = False
        If rdoListView.Checked = True Then
            GridView1.Visible = True
            divWholeCalendars.Visible = False
            divlegendshow.Visible = False
            divbuttonsShow.Visible = False
        ElseIf rdoCalendarView.Checked Then
            If txtSearch1Team.Text <> "" Then
                If hdnqueryselected.Value <> "" Then
                    'ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
                    divlegendshow.Visible = True
                    divbuttonsShow.Visible = True
                End If
                GridView1.Visible = False
                divWholeCalendars.Visible = True
            Else
                GridView1.Visible = False
                ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "showAlert", "showAlertSelectTeamID();", True)
            End If
        End If
    End Sub

    <System.Web.Services.WebMethod()>
    Public Shared Function GetCalendarDateDetails(ByVal Selected As String) As String

        Dim sdata As String = ""

        Dim list1 As New List(Of servicerecordtest)
        'Dim recordNoList As String = ""

        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand()
                cmd.CommandType = CommandType.Text
                cmd.CommandText = Selected
                cmd.CommandTimeout = 0
                cmd.Connection = con
                If con.State = ConnectionState.Open Then
                    con.Close()
                End If
                con.Open()
                Dim reader As MySqlDataReader = cmd.ExecuteReader()
                Do While reader.Read()

                    Dim item As New servicerecordtest()

                    If Not IsDBNull(reader("RcNo")) Then
                        item.RcNo = CType(reader("RcNo"), Integer)
                    Else
                        item.RcNo = ""
                    End If

                    If Not IsDBNull(reader("ServiceBy")) Then
                        item.ServiceBy = CType(reader("ServiceBy"), String)
                    Else
                        item.ServiceBy = ""
                    End If

                    If Not IsDBNull(reader("ServiceDate")) Then
                        Dim serviceDate1 = CType(reader("ServiceDate"), DateTime)
                        item.ServiceDate = serviceDate1
                        item.ServiceDateText = serviceDate1.ToString("yyyy-MM-dd HH:mm:ss")
                    End If

                    If Not IsDBNull(reader("Address1")) Then
                        item.Address1 = CType(reader("Address1"), String)
                    Else
                        item.Address1 = ""
                    End If

                    'If Not IsDBNull(reader("RecordNo")) Then
                    '    item.RecordNo = CType(reader("RecordNo"), String)
                    '    If recordNoList.Contains(item.RecordNo) Then
                    '    Else
                    '        recordNoList = recordNoList + "'" + item.RecordNo + "',"
                    '    End If

                    'Else
                    '    item.RecordNo = ""
                    'End If

                    If Not IsDBNull(reader("SchServiceTime")) Then
                        item.TimeIn = CType(reader("SchServiceTime"), String)
                    Else
                        item.TimeIn = ""
                    End If

                    If Not IsDBNull(reader("SchServiceTimeOut")) Then
                        item.TimeOut = CType(reader("SchServiceTimeOut"), String)
                    Else
                        item.TimeOut = ""
                    End If

                    If Not IsDBNull(reader("ServiceName")) Then
                        item.ServiceName = CType(reader("ServiceName"), String)
                    Else
                        item.ServiceName = ""
                    End If

                    If Not IsDBNull(reader("Status")) Then
                        item.Status = CType(reader("Status"), String)
                    Else
                        item.Status = ""
                    End If

                    If Not IsDBNull(reader("TeamId")) Then
                        item.TeamID = CType(reader("TeamId"), String)
                    Else
                        item.TeamID = ""
                    End If

                    If Not IsDBNull(reader("ContractNo")) Then
                        item.contractno = CType(reader("ContractNo"), String)
                    Else
                        item.contractno = ""
                    End If

                    list1.Add(item)

                Loop
                con.Close()
            End Using
        End Using

        'If recordNoList <> "" Then
        '    recordNoList = recordNoList.TrimEnd(",")
        'End If

        Dim eventCountlist = (From queryItem In list1
                            Group By ServiceDate = queryItem.ServiceDate, TeamID = queryItem.TeamID Into SIds = Group
                            Select New servicerecordtest With { _
                                .ServiceDate = ServiceDate, _
                                .TeamID = TeamID, _
                                .Count = SIds.Count()}).ToList()


        Dim eventCountPerDay As Integer
        For Each item As servicerecordtest In list1
            Dim TotalActiveDevices As Integer = list1.Where(Function(x) x.ServiceDate = item.ServiceDate).Count()
            eventCountPerDay = eventCountlist.Where(Function(x) x.TeamID = item.TeamID And x.ServiceDate = item.ServiceDate).Sum(Function(x) x.Count)
            item.Count = eventCountPerDay
            'item.Count = eventCountlist.Where(Function(x) x.TeamID = item.TeamID And x.ServiceDate = item.ServiceDate).ToString()
        Next

        If Not eventCountlist Is Nothing And eventCountlist.Count > 0 Then
            'Dim eventCount As Integer = list1.Select(Function(x) x.TeamID).Count()

            sdata = "["
            For Each item As servicerecordtest In eventCountlist

                Dim statusSummary As String = ""
                Dim statusText As String = ""
                Dim statusCount As String = ""

                'To get the status summary of the day
                Using con As New MySqlConnection(constr)
                    Using cmd As New MySqlCommand()
                        cmd.CommandType = CommandType.Text
                        Dim insQuery As String = ""
                        insQuery = "SELECT count(A.Rcno) as statusCount, A.Status" & _
                                    " FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D" & _
                                    " on A.RecordNo =D.RecordNo where 1=1 and  CAST(A.ServiceDate AS date) = '" + item.ServiceDate.ToString("yyyy-MM-dd") + "' and A.TeamID IN('" + item.TeamID.ToString().Trim() + "') and A.status in ('O','P','H')  group by A.Status order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC  limit 500"

                        cmd.CommandText = insQuery
                        cmd.CommandTimeout = 0
                        cmd.Connection = con
                        con.Open()
                        Dim reader As MySqlDataReader = cmd.ExecuteReader()
                        Do While reader.Read()

                            statusCount = ""
                            statusText = ""

                            If Not IsDBNull(reader("statusCount")) Then
                                statusCount = CType(reader("statusCount"), Integer)
                            End If

                            If Not IsDBNull(reader("Status")) Then
                                statusText = CType(reader("Status"), String)
                            End If

                            If (statusCount > 0) Then
                                If statusText = "O" Then
                                    statusText = "Open"
                                ElseIf statusText = "P" Then
                                    statusText = "Completed"
                                ElseIf statusText = "H" Then
                                    statusText = "On Hold "
                                ElseIf statusText = "C" Then
                                    statusText = "Cancelled"
                                ElseIf statusText = "T" Then
                                    statusText = "Terminated"
                                ElseIf statusText = "V" Then
                                    statusText = "Void"
                                ElseIf statusText = "B" Then
                                    statusText = "Job cannot complete"
                                End If

                                statusSummary += "<span style='font-size: 12px !important;'>" + statusText + " - " + statusCount + " </span><br/> "
                            End If

                        Loop
                        con.Close()
                    End Using
                End Using

                If statusSummary <> "" Then
                    item.statusSummary = statusSummary
                Else
                    item.statusSummary = ""
                End If

                sdata += "{""EventCount"":"""
                'sdata += item.RcNo.ToString()

                'sdata += """,""EventCount"":"""
                sdata += item.Count.ToString()

                'sdata += """,""ServiceBy"":"""
                'sdata += item.ServiceBy.ToString().Trim()
                'If Not item.ServiceDate Is Nothing Then
                sdata += """,""ServiceDateDay"":"""
                sdata += item.ServiceDate.Day.ToString()
                sdata += """,""ServiceDateMonth"":"""
                sdata += item.ServiceDate.Month.ToString()
                sdata += """,""ServiceDateYear"":"""
                sdata += item.ServiceDate.Year.ToString()
                sdata += """,""statusSummary"":"""
                sdata += item.statusSummary
                'Else
                'End If
                'sdata += """,""RecordNoList"":"""
                'sdata += recordNoList
                'sdata += """,""ServiceName"":"""
                'sdata += item.ServiceName.ToString().Trim()
                'sdata += """,""Address"":"""
                'sdata += RemoveSpecialCharacter(item.Address1).Trim()
                'sdata += """,""SchServiceTime"":"""
                'sdata += item.TimeIn.ToString().Trim()
                'sdata += """,""SchServiceTimeOut"":"""
                'sdata += item.TimeOut.ToString().Trim()
                'sdata += """,""Status"":"""
                'sdata += item.Status.ToString().Trim()
                sdata += """,""TeamId"":"""
                sdata += item.TeamID.ToString().Trim()
                sdata += """,""RemovedTeamIdSpecialCharacter"":"""
                sdata += RemoveTeamIDSpecialCharacter(item.TeamID).ToString()
                'sdata += """,""ContractNo"":"""
                'sdata += item.contractno.ToString().Trim()
                sdata += """},"
            Next

            sdata = sdata.TrimEnd(",")
            sdata = sdata + "]"
        End If

        Return sdata
    End Function

    <System.Web.Services.WebMethod()>
    Public Shared Function GetEventsdetails(ByVal ServiceDate As String, ByVal TeamId As String, ByVal ServiceMonth As String, ByVal ServiceYear As String) As String
        'Public Shared Function GetEventsdetails(ByVal ServiceDate As String, ByVal TeamId As String, ByVal ServiceName As String, ByVal ServiceBy As String, ByVal ServiceMonth As String, ByVal ServiceYear As String, ByVal RcNo As Integer) As String - Final
        'Public Shared Function GetEventsdetails(ByVal SchServiceDate As String, ByVal TeamId As String, ByVal ServiceName As String, ByVal ServiceBy As String, ByVal SchServiceMonth As String, ByVal SchServiceYear As String, ByVal RecordList As String) As String

        Dim sdata As String = ""

        Dim RepServiceDate As String = ServiceYear & "-" & ServiceMonth & "-" & ServiceDate

        Dim list1 As New List(Of servicerecordtest)

        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

        Try

            Using con As New MySqlConnection(constr)
                Using cmd As New MySqlCommand()
                    cmd.CommandType = CommandType.Text
                    Dim insQuery As String = ""

                    'insQuery = "SELECT ServiceDate, RecordNo,ServiceBy,ServiceName,Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = '" & ServiceName & "' AND servicedate='" & RepServiceDate & "' AND RecordNo IN " & RecordList & ""
                    'insQuery = "SELECT ServiceDate,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = """ & ServiceName & """ AND ServiceBy = """ & ServiceBy & """ AND ServiceDate='" & RepServiceDate & "' AND TeamId='" & TeamId & "' GROUP BY ServiceDate,TRIM(ServiceBy),TRIM(ServiceName),TRIM(Address1),SchServiceTime,SchServiceTimeOut"
                    'insQuery = "SELECT ServiceDate,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = """ & ServiceName & """ AND ServiceBy = """ & ServiceBy & """ AND ServiceDate='" & RepServiceDate & "' AND TeamId='" & TeamId & "'"
                    ' '' ''insQuery = "SELECT Status, ServiceDate,RecordNo,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE RcNo = " & RcNo - Final one
                    insQuery = "SELECT A.Rcno, A.Status, A.ServiceDate,  A.RecordNo, TRIM(A.ServiceBy) as ServiceBy, TRIM(A.ServiceName) as ServiceName, TRIM(A.Address1) AS Address1, A.SchServiceTime, A.SchServiceTimeOut, TRIM(A.TeamID) as TeamID, A.Notes, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, b.contractno" & _
                                " FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D" & _
                                " on A.RecordNo =D.RecordNo where 1=1 and CAST(A.ServiceDate AS date)  = '" + RepServiceDate + "' and A.TeamID IN('" + TeamId + "') and A.status in ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC  limit 500"

                    'insQuery = "SELECT SchServiceDate, RecordNo,ServiceBy,ServiceName,Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = '" & ServiceName & "' AND SchServiceDate='" & RepServiceDate & "'"
                    cmd.CommandText = insQuery
                    cmd.CommandTimeout = 0
                    cmd.Connection = con
                    con.Open()
                    Dim reader As MySqlDataReader = cmd.ExecuteReader()
                    Do While reader.Read()

                        Dim item As New servicerecordtest()

                        If Not IsDBNull(reader("RcNo")) Then
                            item.RcNo = CType(reader("RcNo"), Integer)
                        Else
                            item.RcNo = ""
                        End If

                        If Not IsDBNull(reader("Status")) Then
                            item.Status = CType(reader("Status"), String)
                        Else
                            item.Status = ""
                        End If

                        Dim serviceDate1 = CType(reader("ServiceDate"), DateTime)
                        item.ServiceDate = serviceDate1
                        item.ServiceDateText = serviceDate1.ToString("yyyy-MM-dd HH:mm:ss")

                        If Not IsDBNull(reader("RecordNo")) Then
                            item.RecordNo = CType(reader("RecordNo"), String)
                        Else
                            item.RecordNo = ""
                        End If

                        If Not IsDBNull(reader("ServiceBy")) Then
                            item.ServiceBy = CType(reader("ServiceBy"), String)
                        Else
                            item.ServiceBy = ""
                        End If

                        If Not IsDBNull(reader("ServiceName")) Then
                            item.ServiceName = CType(reader("ServiceName"), String)
                        Else
                            item.ServiceName = ""
                        End If

                        If Not IsDBNull(reader("Address1")) Then
                            item.Address1 = CType(reader("Address1"), String)
                        Else
                            item.Address1 = ""
                        End If

                        If Not IsDBNull(reader("SchServiceTime")) Then
                            item.TimeIn = CType(reader("SchServiceTime"), String)
                        Else
                            item.TimeIn = ""
                        End If

                        If Not IsDBNull(reader("SchServiceTimeOut")) Then
                            item.TimeOut = CType(reader("SchServiceTimeOut"), String)
                        Else
                            item.TimeOut = ""
                        End If

                        If Not IsDBNull(reader("TeamId")) Then
                            item.TeamID = CType(reader("TeamId"), String)
                        Else
                            item.TeamID = ""
                        End If

                        If Not IsDBNull(reader("Notes")) Then
                            item.ServiceDescription = CType(reader("Notes"), String)
                        Else
                            item.ServiceDescription = ""
                        End If

                        If Not IsDBNull(reader("LockSt")) Then
                            item.LockSt = CType(reader("LockSt"), String)
                        Else
                            item.LockSt = ""
                        End If

                        If Not IsDBNull(reader("ContractNo")) Then
                            item.contractno = CType(reader("ContractNo"), String)
                        Else
                            item.contractno = ""
                        End If

                        list1.Add(item)
                    Loop
                    con.Close()
                End Using
            End Using

            If Not list1 Is Nothing And list1.Count > 0 Then

                sdata = "["
                For Each item As servicerecordtest In list1
                    Dim duration As TimeSpan
                    Dim totMinutes As Double
                    If item.TimeIn <> "" And item.TimeOut <> "" Then
                        Dim startTime As TimeSpan = TimeSpan.Parse(item.TimeIn.ToString())
                        Dim endTime As TimeSpan = TimeSpan.Parse(item.TimeOut.ToString())
                        duration = endTime - startTime
                        'duration = TimeSpan.Parse(duration.TotalMinutes)
                        totMinutes = duration.TotalMinutes
                    End If

                    'Dim duration As TimeSpan = TimeIn.Subtract(TimeOut)
                    sdata += "{""RcNo"":"""
                    sdata += item.RcNo.ToString()

                    'sdata += "{""ServiceDateDay"":"""
                    sdata += """,""ServiceDateDay"":"""
                    sdata += item.ServiceDate.Day.ToString()
                    sdata += """,""ServiceDateMonth"":"""
                    sdata += item.ServiceDate.Month.ToString()
                    sdata += """,""ServiceDateYear"":"""
                    sdata += item.ServiceDate.Year.ToString()
                    sdata += """,""RecordNo"":"""
                    sdata += item.RecordNo.ToString()
                    sdata += """,""ServiceBy"":"""
                    sdata += item.ServiceBy.ToString().Trim()
                    sdata += """,""ServiceName"":"""
                    sdata += item.ServiceName.ToString().Trim()
                    sdata += """,""Address1"":"""
                    sdata += RemoveSpecialCharacter(item.Address1).Trim()
                    sdata += """,""SchServiceTime"":"""
                    sdata += item.TimeIn.ToString()
                    sdata += """,""SchServiceTimeOut"":"""
                    sdata += item.TimeOut.ToString()
                    sdata += """,""TimeDifference"":"""
                    sdata += totMinutes.ToString()

                    sdata += """,""TeamId"":"""
                    sdata += item.TeamID.ToString().Trim()
                    sdata += """,""RemovedTeamIdSpecialCharacter"":"""
                    sdata += RemoveTeamIDSpecialCharacter(item.TeamID).ToString()

                    sdata += """,""ContractNo"":"""
                    sdata += item.contractno.ToString().Trim()

                    sdata += """,""LockSt"":"""
                    sdata += item.LockSt.ToString()

                    sdata += """,""ServiceDescription"":"""
                    sdata += RemoveSpecialCharacter(item.ServiceDescription)

                    sdata += """,""Status1"":"""
                    sdata += item.Status.ToString().Trim()

                    sdata += """,""Status"":"""

                    If item.Status = "O" Then
                        item.Status = "Open"
                    ElseIf item.Status = "P" Then
                        item.Status = "Completed"
                    ElseIf item.Status = "H" Then
                        item.Status = "On Hold "
                    ElseIf item.Status = "C" Then
                        item.Status = "Cancelled"
                    ElseIf item.Status = "T" Then
                        item.Status = "Terminated"
                    ElseIf item.Status = "V" Then
                        item.Status = "Void"
                    ElseIf item.Status = "B" Then
                        item.Status = "Job cannot complete"
                    End If

                    sdata += item.Status.ToString()
                    sdata += """},"
                Next
                sdata = sdata.TrimEnd(",")
                sdata = sdata + "]"
            End If

        Catch ex As Exception
            ex.ToString()
        End Try
        Return sdata
    End Function

    <System.Web.Services.WebMethod()>
    Public Shared Function GetSeriesofEvents(ByVal ContractNo As String, ByVal Status As String, ByVal TeamId As String) As String
        Dim sdata As String = ""
        Dim list1 As New List(Of servicerecordtest)
        'Dim recordNoList As String = ""
        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Dim isDataExists As Boolean = False

        Using con As New MySqlConnection(constr)
            Dim query As String = "SELECT * FROM tblServiceRecord WHERE ContractNo='" & ContractNo & "' AND Status = 'O' AND TeamId='" & TeamId & "' ORDER BY ServiceDate"
            'Dim query As String = "SELECT count(*) FROM tblServiceRecord WHERE ContractNo='" & ContractNo & "' AND Status = 'O' AND TeamId='" & TeamId & "' ORDER BY ServiceDate"
            Using cmd As New MySqlCommand()
                cmd.CommandType = CommandType.Text
                cmd.CommandText = query
                cmd.CommandTimeout = 0
                cmd.Connection = con
                If con.State = ConnectionState.Open Then
                    con.Close()
                End If
                con.Open()
                Dim reader As MySqlDataReader = cmd.ExecuteReader()
                Do While reader.Read()
                    'isDataExists = True
                    Dim item As New servicerecordtest()

                    If Not IsDBNull(reader("RcNo")) Then
                        item.RcNo = CType(reader("RcNo"), String)
                    Else
                        item.RcNo = ""
                    End If

                    If Not IsDBNull(reader("Status")) Then
                        item.Status = CType(reader("Status"), String)
                    Else
                        item.Status = ""
                    End If

                    Dim ServiceDate1 = CType(reader("ServiceDate"), DateTime)
                    item.ServiceDate = ServiceDate1
                    item.ServiceDateText = ServiceDate1.ToString("yyyy-MM-dd HH:mm:ss")

                    If Not IsDBNull(reader("SchServiceTime")) Then
                        item.TimeIn = CType(reader("SchServiceTime"), String)
                    Else
                        item.TimeIn = ""
                    End If

                    If Not IsDBNull(reader("SchServiceTimeOut")) Then
                        item.TimeOut = CType(reader("SchServiceTimeOut"), String)
                    Else
                        item.TimeOut = ""
                    End If

                    If Not IsDBNull(reader("ServiceName")) Then
                        item.ServiceName = CType(reader("ServiceName"), String)
                    Else
                        item.ServiceName = ""
                    End If

                    If Not IsDBNull(reader("contractno")) Then
                        item.contractno = CType(reader("contractno"), String)
                    Else
                        item.contractno = ""
                    End If

                    list1.Add(item)
                Loop

                con.Close()
            End Using
        End Using

        If Not list1 Is Nothing And list1.Count > 0 Then
            sdata = "["
            For Each item As servicerecordtest In list1
                sdata += "{""RcNo"":"""
                sdata += item.RcNo.ToString()
                sdata += """,""Status"":"""
                sdata += item.Status.ToString()
                sdata += """,""ServiceDateDay"":"""
                sdata += item.ServiceDate.Day.ToString()
                sdata += """,""ServiceDateMonth"":"""
                sdata += item.ServiceDate.Month.ToString()
                sdata += """,""ServiceDateYear"":"""
                sdata += item.ServiceDate.Year.ToString()
                sdata += """,""SchServiceTime"":"""
                sdata += item.TimeIn.ToString()
                sdata += """,""SchServiceTimeOut"":"""
                sdata += item.TimeOut.ToString()
                sdata += """,""ServiceName"":"""
                sdata += item.ServiceName.ToString().Trim()
                sdata += """,""contractno"":"""
                sdata += item.contractno.ToString()
                sdata += """},"
            Next
            sdata = sdata.TrimEnd(",")
            sdata = sdata + "]"
        End If
        Return sdata
    End Function



    <System.Web.Services.WebMethod()>
    Public Shared Function GetCalendarViewForDayAndWeekDetails(ByVal Selected As String) As String

        Dim sdata As String = ""

        Dim list1 As New List(Of servicerecordtest)
        'Dim recordNoList As String = ""

        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand()
                cmd.CommandType = CommandType.Text
                cmd.CommandText = Selected
                cmd.CommandTimeout = 0
                cmd.Connection = con
                If con.State = ConnectionState.Open Then
                    con.Close()
                End If
                con.Open()
                Dim reader As MySqlDataReader = cmd.ExecuteReader()
                Do While reader.Read()

                    Dim item As New servicerecordtest()

                    If Not IsDBNull(reader("RcNo")) Then
                        item.RcNo = CType(reader("RcNo"), Integer)
                    Else
                        item.RcNo = ""
                    End If

                    If Not IsDBNull(reader("ServiceBy")) Then
                        item.ServiceBy = CType(reader("ServiceBy"), String)
                    Else
                        item.ServiceBy = ""
                    End If

                    If Not IsDBNull(reader("ServiceDate")) Then
                        Dim serviceDate1 = CType(reader("ServiceDate"), DateTime)
                        item.ServiceDate = serviceDate1
                        item.ServiceDateText = serviceDate1.ToString("yyyy-MM-dd HH:mm:ss")
                    End If

                    If Not IsDBNull(reader("Address1")) Then
                        item.Address1 = CType(reader("Address1"), String)
                    Else
                        item.Address1 = ""
                    End If

                    'If Not IsDBNull(reader("RecordNo")) Then
                    '    item.RecordNo = CType(reader("RecordNo"), String)
                    '    If recordNoList.Contains(item.RecordNo) Then
                    '    Else
                    '        recordNoList = recordNoList + "'" + item.RecordNo + "',"
                    '    End If

                    'Else
                    '    item.RecordNo = ""
                    'End If

                    If Not IsDBNull(reader("SchServiceTime")) Then
                        item.TimeIn = CType(reader("SchServiceTime"), String)
                    Else
                        item.TimeIn = ""
                    End If

                    If Not IsDBNull(reader("SchServiceTimeOut")) Then
                        item.TimeOut = CType(reader("SchServiceTimeOut"), String)
                    Else
                        item.TimeOut = ""
                    End If

                    If Not IsDBNull(reader("ServiceName")) Then
                        item.ServiceName = CType(reader("ServiceName"), String)
                    Else
                        item.ServiceName = ""
                    End If

                    If Not IsDBNull(reader("Status")) Then
                        item.Status = CType(reader("Status"), String)
                    Else
                        item.Status = ""
                    End If

                    If Not IsDBNull(reader("TeamId")) Then
                        item.TeamID = CType(reader("TeamId"), String)
                    Else
                        item.TeamID = ""
                    End If

                    If Not IsDBNull(reader("ContractNo")) Then
                        item.contractno = CType(reader("ContractNo"), String)
                    Else
                        item.contractno = ""
                    End If

                    list1.Add(item)
                Loop
                con.Close()
            End Using
        End Using

        'If recordNoList <> "" Then
        '    recordNoList = recordNoList.TrimEnd(",")
        'End If

        If Not list1 Is Nothing And list1.Count > 0 Then

            sdata = "["
            For Each item As servicerecordtest In list1

                'To get the status summary of the day
                Using con As New MySqlConnection(constr)
                    Using cmd As New MySqlCommand()
                        cmd.CommandType = CommandType.Text
                        Dim insQuery As String = ""
                        insQuery = "SELECT count(A.Rcno) as AppointmentsCount" & _
                                    " FROM tblservicerecord as A Left OUTER join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D" & _
                                    " on A.RecordNo =D.RecordNo where 1=1 and CAST(A.ServiceDate AS date)  = '" + item.ServiceDate.ToString("yyyy-MM-dd") + "' and A.TeamID IN('" + item.TeamID.ToString().Trim() + "') and A.status in ('O','P','H') order by A.ServiceDate DESC, A.SchServiceTime ASC, A.ServiceName ASC, A.RecordNo ASC  limit 500"

                        cmd.CommandText = insQuery
                        cmd.CommandTimeout = 0
                        cmd.Connection = con
                        con.Open()

                        item.appointmentsCount = (cmd.ExecuteScalar())

                        con.Close()
                    End Using
                End Using

                sdata += "{""RcNo"":"""
                sdata += item.RcNo.ToString()
                sdata += """,""ServiceBy"":"""
                sdata += item.ServiceBy.ToString().Trim()
                'If Not item.ServiceDate Is Nothing Then
                sdata += """,""ServiceDateDay"":"""
                sdata += item.ServiceDate.Day.ToString()
                sdata += """,""ServiceDateMonth"":"""
                sdata += item.ServiceDate.Month.ToString()
                sdata += """,""ServiceDateYear"":"""
                sdata += item.ServiceDate.Year.ToString()
                'Else
                'End If
                'sdata += """,""RecordNoList"":"""
                'sdata += recordNoList
                sdata += """,""ServiceName"":"""
                sdata += item.ServiceName.ToString().Trim()
                sdata += """,""Address"":"""
                sdata += RemoveSpecialCharacter(item.Address1).Trim()
                sdata += """,""SchServiceTime"":"""
                sdata += item.TimeIn.ToString().Trim()
                sdata += """,""SchServiceTimeOut"":"""
                sdata += item.TimeOut.ToString().Trim()
                sdata += """,""Status"":"""
                sdata += item.Status.ToString().Trim()
                sdata += """,""appointmentsCount"":"""
                sdata += item.appointmentsCount.ToString().Trim()
                sdata += """,""TeamId"":"""
                sdata += item.TeamID.ToString().Trim()
                sdata += """,""RemovedTeamIdSpecialCharacter"":"""
                sdata += RemoveTeamIDSpecialCharacter(item.TeamID).ToString()
                sdata += """,""ContractNo"":"""
                sdata += item.contractno.ToString().Trim()
                sdata += """},"
            Next
            sdata = sdata.TrimEnd(",")
            sdata = sdata + "]"
        End If

        Return sdata
    End Function

    <System.Web.Services.WebMethod()>
    Public Shared Function GetEventsdetailsForDayAndWeekView(ByVal ServiceDate As String, ByVal TeamId As String, ByVal ServiceName As String, ByVal ServiceBy As String, ByVal ServiceMonth As String, ByVal ServiceYear As String, ByVal RcNo As Integer) As String
        'Public Shared Function GetEventsdetails(ByVal SchServiceDate As String, ByVal TeamId As String, ByVal ServiceName As String, ByVal ServiceBy As String, ByVal SchServiceMonth As String, ByVal SchServiceYear As String, ByVal RecordList As String) As String

        Dim sdata As String = ""

        Dim RepServiceDate As String = ServiceYear & "-" & ServiceMonth & "-" & ServiceDate

        Dim list1 As New List(Of servicerecordtest)

        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

        Try

            Using con As New MySqlConnection(constr)
                Using cmd As New MySqlCommand()
                    cmd.CommandType = CommandType.Text
                    Dim insQuery As String = ""

                    'insQuery = "SELECT ServiceDate, RecordNo,ServiceBy,ServiceName,Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = '" & ServiceName & "' AND servicedate='" & RepServiceDate & "' AND RecordNo IN " & RecordList & ""
                    'insQuery = "SELECT ServiceDate,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = """ & ServiceName & """ AND ServiceBy = """ & ServiceBy & """ AND ServiceDate='" & RepServiceDate & "' AND TeamId='" & TeamId & "' GROUP BY ServiceDate,TRIM(ServiceBy),TRIM(ServiceName),TRIM(Address1),SchServiceTime,SchServiceTimeOut"
                    'insQuery = "SELECT ServiceDate,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = """ & ServiceName & """ AND ServiceBy = """ & ServiceBy & """ AND ServiceDate='" & RepServiceDate & "' AND TeamId='" & TeamId & "'"
                    insQuery = "SELECT Status, ServiceDate,RecordNo,TRIM(ServiceBy) AS ServiceBy,TRIM(ServiceName) AS ServiceName,TRIM(Address1) AS Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE RcNo = " & RcNo
                    'insQuery = "SELECT SchServiceDate, RecordNo,ServiceBy,ServiceName,Address1,SchServiceTime,SchServiceTimeOut FROM tblservicerecord WHERE ServiceName = '" & ServiceName & "' AND SchServiceDate='" & RepServiceDate & "'"
                    cmd.CommandText = insQuery
                    cmd.CommandTimeout = 0
                    cmd.Connection = con
                    con.Open()
                    Dim reader As MySqlDataReader = cmd.ExecuteReader()
                    Do While reader.Read()

                        Dim item As New servicerecordtest()

                        If Not IsDBNull(reader("RecordNo")) Then
                            item.RecordNo = CType(reader("RecordNo"), String)
                        Else
                            item.RecordNo = ""
                        End If

                        If Not IsDBNull(reader("Status")) Then
                            item.Status = CType(reader("Status"), String)
                        Else
                            item.Status = ""
                        End If

                        If Not IsDBNull(reader("ServiceBy")) Then
                            item.ServiceBy = CType(reader("ServiceBy"), String)
                        Else
                            item.ServiceBy = ""
                        End If

                        If Not IsDBNull(reader("ServiceName")) Then
                            item.ServiceName = CType(reader("ServiceName"), String)
                        Else
                            item.ServiceName = ""
                        End If

                        'Dim Servicedate1 = CType(reader("ServiceDate"), DateTime)
                        'item.ServiceDate = Servicedate1
                        'item.ServiceDateText = Servicedate1.ToString("yyyy-MM-dd HH:mm:ss")

                        Dim serviceDate1 = CType(reader("ServiceDate"), DateTime)
                        item.ServiceDate = serviceDate1
                        item.ServiceDateText = serviceDate1.ToString("yyyy-MM-dd HH:mm:ss")

                        If Not IsDBNull(reader("Address1")) Then
                            item.Address1 = CType(reader("Address1"), String)
                        Else
                            item.Address1 = ""
                        End If

                        If Not IsDBNull(reader("SchServiceTime")) Then
                            item.TimeIn = CType(reader("SchServiceTime"), String)
                        Else
                            item.TimeIn = ""
                        End If

                        If Not IsDBNull(reader("SchServiceTimeOut")) Then
                            item.TimeOut = CType(reader("SchServiceTimeOut"), String)
                        Else
                            item.TimeOut = ""
                        End If

                        list1.Add(item)
                    Loop
                    con.Close()
                End Using
            End Using

            If Not list1 Is Nothing And list1.Count > 0 Then

                sdata = "["
                For Each item As servicerecordtest In list1
                    sdata += "{""RecordNo"":"""
                    sdata += item.RecordNo.ToString()
                    'sdata += "{""ServiceDateDay"":"""
                    sdata += """,""ServiceDateDay"":"""
                    sdata += item.ServiceDate.Day.ToString()
                    sdata += """,""ServiceDateMonth"":"""
                    sdata += item.ServiceDate.Month.ToString()
                    sdata += """,""ServiceDateYear"":"""
                    sdata += item.ServiceDate.Year.ToString()
                    sdata += """,""ServiceBy"":"""
                    sdata += item.ServiceBy.ToString().Trim()
                    sdata += """,""ServiceName"":"""
                    sdata += item.ServiceName.ToString().Trim()
                    sdata += """,""Address1"":"""
                    sdata += RemoveSpecialCharacter(item.Address1).Trim()
                    sdata += """,""SchServiceTime"":"""
                    sdata += item.TimeIn.ToString()
                    sdata += """,""SchServiceTimeOut"":"""
                    sdata += item.TimeOut.ToString()
                    sdata += """,""Status"":"""

                    If item.Status = "O" Then
                        item.Status = "Open"
                    ElseIf item.Status = "P" Then
                        item.Status = "Completed"
                    ElseIf item.Status = "H" Then
                        item.Status = "Hold"
                    ElseIf item.Status = "C" Then
                        item.Status = "Cancelled"
                    ElseIf item.Status = "T" Then
                        item.Status = "Terminated"
                    ElseIf item.Status = "V" Then
                        item.Status = "Void"
                    ElseIf item.Status = "B" Then
                        item.Status = "Job cannot complete"
                    End If

                    sdata += item.Status.ToString()
                    sdata += """},"
                Next
                sdata = sdata.TrimEnd(",")
                sdata = sdata + "]"
            End If

        Catch ex As Exception
            ex.ToString()
        End Try
        Return sdata
    End Function


    <System.Web.Services.WebMethod()>
    Public Shared Function UpdateEventsdetails(ByVal DraggedToDate As String, ByVal DraggedFromTime As String, ByVal DraggedToTime As String, ByVal RcNo As Integer) As String
        Dim sdata As String = ""
        Dim list1 As New List(Of servicerecordtest)
        Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        Try
            Using con As New MySqlConnection(constr)
                Dim query As String = "UPDATE tblserviceRecord SET ServiceDate = @ServiceDate,SchServiceTime =@SchServiceTime,SchServiceTimeOut = @SchServiceTimeOut  WHERE RcNo = @RcNo"
                Using cmd As New MySqlCommand(query)
                    cmd.Connection = con
                    cmd.Parameters.AddWithValue("@ServiceDate", DraggedToDate)
                    cmd.Parameters.AddWithValue("@SchServiceTime", DraggedFromTime)
                    cmd.Parameters.AddWithValue("@SchServiceTimeOut", DraggedToTime)
                    cmd.Parameters.AddWithValue("@RcNo", RcNo)
                    'cmd.Parameters.AddWithValue("@TeamID", TeamID)
                    cmd.CommandTimeout = 0
                    con.Open()
                    cmd.ExecuteNonQuery()
                    con.Close()
                End Using
            End Using
            sdata = "Updated"
        Catch ex As Exception
        End Try
        Return sdata
    End Function

    Protected Sub btnEditAppointment_Click(sender As Object, e As EventArgs)
        Try
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
                Return
            End If
            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If

            'Dim btn1 As ImageButton = DirectCast(sender, ImageButton)
            'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            'Dim rowindex1 As Integer = xrow1.RowIndex

            MakeMeNull()
            'Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            'txtRcno.Text = lblidRcno
            txtRcno.Text = hdnRcNo.Value
            RetrieveData()
            'GridView1.SelectedIndex = rowindex1

            txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            txtRcno.Text = hdnRcNo.Value

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString

            If ddlStatus.SelectedValue.ToString = "O" Then
                txtCharCountEditRemarks.Visible = True
                txtCharCountEditSI.Visible = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this);</Script>", False)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this);</Script>", False)

                txtEditSchDate.Text = txtScheduleDate.Text
                txtEditSchTimeIn.Text = txtScheduleTimeIn.Text
                txtEditSchTimeOut.Text = txtScheduleTimeOut.Text
                txtEditRemarks.Text = txtRemarks.Text
                ddlEditScheduleType.Text = ddlScheduleType.Text
                txtEditServiceInstruction.Text = txtInstruction.Text

                txtEditTeam1.Text = txtTeam.Text
                txtEditIncharge1.Text = txtIncharge.Text
                txtEditSvcBy1.Text = txtServiceBy.Text
                txtEditVehNo1.Text = txtVehNo.Text
                txtOldSvcBy.Text = txtServiceBy.Text
                txtEditSupervisor1.Text = txtSupervisor.Text

                txtEditRecordNo.Text = txtSvcRecord.Text
                txtEditClientName.Text = txtServiceName.Text
                txtEditServiceAddress.Text = txtAddress.Text & ", " & txtPostal.Text
                mdlPopupSchDate.Show()
            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If

            mdlPopupSeriesAlert.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditServiceDate_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub
    Public Shared Function RemoveSpecialCharacter(ByVal Comments As String) As String
        Comments = Comments.Trim()
        Comments = Comments.Replace(vbCr, "").Replace(vbLf, "")
        Comments = Replace(Comments, """", "")
        Comments = Replace(Comments, "[", "")
        Comments = Replace(Comments, "]", "")
        Comments = Replace(Comments, ")", "")
        Comments = Replace(Comments, "(", "")
        Return Comments
    End Function
    Public Shared Function RemoveTeamIDSpecialCharacter(ByVal Comments As String) As String
        Comments = Comments.Trim()
        Comments = Comments.Replace(vbCr, "").Replace(vbLf, "")
        Comments = Replace(Comments, "`", " ")
        Comments = Replace(Comments, "!", " ")
        Comments = Replace(Comments, "@", " ")
        Comments = Replace(Comments, "#", " ")
        Comments = Replace(Comments, "$", " ")
        Comments = Replace(Comments, "%", " ")
        Comments = Replace(Comments, "^", " ")
        Comments = Replace(Comments, "&", " ")
        Comments = Replace(Comments, "*", " ")
        Comments = Replace(Comments, """", " ")
        Comments = Replace(Comments, "''", " ")
        Comments = Replace(Comments, "[", " ")
        Comments = Replace(Comments, "]", " ")
        Comments = Replace(Comments, "(", " ")
        Comments = Replace(Comments, ")", " ")
        Comments = Replace(Comments, " ", " ")
        Comments = Replace(Comments, ".", " ")
        Comments = Replace(Comments, "{", " ")
        Comments = Replace(Comments, "}", " ")
        Comments = Replace(Comments, ";", " ")
        Return Comments
    End Function

    Protected Sub rdoListView_CheckedChanged(sender As Object, e As EventArgs)
        ChangedDisplayRadioButton()
    End Sub

    Protected Sub rdoCalendarView_CheckedChanged(sender As Object, e As EventArgs)

        'txtCalendarDisplay.Text = txtSearch1SvcDate.Text
        ChangedDisplayRadioButton()
    End Sub
    Protected Sub tb1_ActiveTabChanged1(sender As Object, e As EventArgs)
        ChangedDisplayRadioButton()
    End Sub
    Protected Sub btnselectmultiTeam_Click(sender As Object, e As EventArgs) Handles btnselectmultiTeam.Click
        Dim team As String = ""
        For Each item As GridViewRow In gvTeamNew.Rows
            If (DirectCast(item.FindControl("cbmultiTeam"), CheckBox).Checked = True) Then
                team = team & item.Cells(2).Text & ","
            End If
        Next
        team = team.TrimEnd(",")
        txtSearch1Team.Text = team
        mdlPopUpTeamNew.Hide()
    End Sub
    'Protected Sub txtCalendarDisplay_TextChanged(sender As Object, e As EventArgs)

    '    Dim startDate As DateTime
    '    startDate = DateTime.ParseExact(txtCalendarDisplay.Text, "dd/MM/yyyy", CultureInfo.InvariantCulture)
    '    Dim startDateDay As String
    '    Dim startDateMonth As String
    '    Dim startDateWeekStart As String
    '    Dim startDateWeekEnd As String

    '    If hdnCalDisplayView.Value = "agendaDay" Then
    '        startDateDay = startDate.Day
    '        hdnCalDisplayFormat.Value = startDateDay
    '    ElseIf hdnCalDisplayView.Value = "agendaWeek" Then

    '    ElseIf hdnCalDisplayView.Value = "month" Then
    '        startDateMonth = startDate.Month
    '        hdnCalDisplayFormat.Value = startDateMonth
    '    End If
    'End Sub

    Protected Sub btnDayDisplay_Click(sender As Object, e As EventArgs)
        hdnCalDisplayView.Value = "agendaDay"
        'ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar('agendaDay');", True)
        ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
    End Sub
    Protected Sub btnWeekDisplay_Click(sender As Object, e As EventArgs)
        hdnCalDisplayView.Value = "agendaWeek"
        'ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar('agendaWeek');", True)
        ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
    End Sub
    Protected Sub btnMonthDisplay_Click(sender As Object, e As EventArgs)
        hdnCalDisplayView.Value = "month"
        'ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar('month');", True)
        ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowCalendar", "onclickCalendar();", True)
    End Sub


    Protected Sub btnJustThisOne_Click(sender As Object, e As EventArgs)

        Try
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO UPDATE"
                Return
            End If
            'btnEditServiceDate_Click()
            If txtLockSt.Text = "Y" Then
                lblAlert.Text = "RECORD IS LOCKED"
                Return
            End If

            'Dim btn1 As ImageButton = DirectCast(sender, ImageButton)
            'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            'Dim rowindex1 As Integer = xrow1.RowIndex

            MakeMeNull()
            'Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            'txtRcno.Text = lblidRcno
            txtRcno.Text = hdnRcNo.Value
            Try
                RetrieveData()
            Catch ex As Exception
                Dim data As String = ""
            End Try

            'GridView1.SelectedIndex = rowindex1

            txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            txtRcno.Text = hdnRcNo.Value

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString

            If ddlStatus.SelectedValue.ToString = "O" Then
                txtCharCountEditRemarks.Visible = True
                txtCharCountEditSI.Visible = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditRemarks(this);</Script>", False)
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateCharsEditSI(this);</Script>", False)

                txtEditSchDate.Text = txtScheduleDate.Text
                txtEditSchTimeIn.Text = txtScheduleTimeIn.Text
                txtEditSchTimeOut.Text = txtScheduleTimeOut.Text
                txtEditRemarks.Text = txtRemarks.Text
                ddlEditScheduleType.Text = ddlScheduleType.Text
                txtEditServiceInstruction.Text = txtInstruction.Text

                txtEditTeam1.Text = txtTeam.Text
                txtEditIncharge1.Text = txtIncharge.Text
                txtEditSvcBy1.Text = txtServiceBy.Text
                txtEditVehNo1.Text = txtVehNo.Text
                txtOldSvcBy.Text = txtServiceBy.Text
                txtEditSupervisor1.Text = txtSupervisor.Text

                txtEditRecordNo.Text = txtSvcRecord.Text
                txtEditClientName.Text = txtServiceName.Text
                txtEditServiceAddress.Text = txtAddress.Text & ", " & txtPostal.Text
                mdlPopupSchDate.Show()
            Else
                lblAlert.Text = "ONLY OPEN RECORDS CAN BE EDITED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If

            mdlPopupSeriesAlert.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditServiceDate_Click", ex.Message.ToString, txtSvcRecord.Text)
        End Try
    End Sub
    Protected Sub SqlDataSource1_Selecting(sender As Object, e As SqlDataSourceSelectingEventArgs)
        e.Command.CommandTimeout = 0
    End Sub

    'old team popup start
    Protected Sub txtPopUpTeam_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpTeam.TextChanged
        Try
            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                Dim strsql As String
                strsql = ""

                txtPopupTeamSearch.Text = txtPopUpTeam.Text

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"

                strsql = "SELECT TeamID, TeamName, InChargeID, Vehnos, Supervisor, Status, Location From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql

                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopUp.Text = "Team"
            End If
            txtPopUpTeam.Text = "Search Here for Team, Incharge or ServiceBy"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtPopUpTeam_TextChanged", ex.Message.ToString, txtTechRcNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Protected Sub btnTeamSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnTeamSearch.Click
    '    Try

    '        Dim strsql As String
    '        strsql = ""

    '        mdlPopUpTeam.TargetControlID = "btnTeamSearch"
    '        txtModal.Text = "TeamSearch"
    '        If String.IsNullOrEmpty(txtSearch1Team.Text.Trim) = False Then
    '            txtPopupTeamSearch.Text = txtSearch1Team.Text.Trim
    '            txtPopUpTeam.Text = txtPopupTeamSearch.Text

    '            strsql = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

    '            If txtDisplayRecordsLocationwise.Text = "Y" Then
    '                strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
    '            End If
    '            strsql = strsql + " order by TeamName"
    '            SqlDSTeam.SelectCommand = strsql

    '            'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
    '            SqlDSTeam.DataBind()
    '            gvTeam.DataBind()
    '        Else
    '            'txtPopUpTeam.Text = ""
    '            'txtPopupTeamSearch.Text = ""

    '            'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName"
    '            strsql = "SELECT TeamId, TeamName, InChargeId, Vehnos, Supervisor, Status, Location From tblTeam where Status <> 'N' "

    '            If txtDisplayRecordsLocationwise.Text = "Y" Then
    '                strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
    '            End If
    '            strsql = strsql + " order by TeamName"
    '            SqlDSTeam.SelectCommand = strsql

    '            SqlDSTeam.DataBind()
    '            gvTeam.DataBind()
    '        End If
    '        mdlPopUpTeam.Show()

    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("btnTeamSearch_Click", ex.Message.ToString, txtSearch1Team.Text)
    '    End Try
    'End Sub


    Protected Sub btnPopUpTeamSearch_Click1(sender As Object, e As EventArgs) Handles btnPopUpTeamSearch.Click
        Try
            ' txtPopUpTeam.Text = txtPopupTeamSearch.Text

            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter search text", "str")
            Else
                '  txtPopupTeamSearch.Text = txtPopUpTeam.Text
                ' SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where rcno <>0 and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopUp.Text = "Team"
            End If
            txtPopUpTeam.Text = "Search Here for Team, Incharge or ServiceBy"
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPopUpTeamSearch_Click1", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub
    'end team popup start

    Protected Sub hiddenrandomnumber_ValueChanged(sender As Object, e As EventArgs)
        btnJustThisOne_Click(sender, e)
    End Sub

    Protected Sub btnPestPhotoUpload_Click(sender As Object, e As EventArgs) Handles btnPestPhotoUpload.Click
        lblAlert.Text = ""
        Try
            '    InsertIntoTblWebEventLog("btnPhotoUpload_Click", FileUpload2.HasFile.ToString, txtRecordNoSelected.Text)

            If FileUpload3.HasFile Then

                Dim _HttpFileCollection As HttpFileCollection = Request.Files
                '   InsertIntoTblWebEventLog("btnPhotoUpload_Click", _HttpFileCollection.Count.ToString, txtRecordNoSelected.Text)
                For i As Integer = 0 To _HttpFileCollection.Count - 1
                    Dim _HttpPostedFile As HttpPostedFile = _HttpFileCollection(i)
                    If _HttpPostedFile.ContentLength > 0 Then _HttpPostedFile.SaveAs(Server.MapPath("~/Uploads/Photos/" & Path.GetFileName(_HttpPostedFile.FileName)))


                    If _HttpPostedFile.ContentLength > 200000000 Then
                        lblAlert.Text = "PHOTO UPLOAD EXCEEDS THE MAXIMUM LIMIT. FILENAME : " + _HttpPostedFile.FileName.ToString
                        Return
                    End If

                    Dim fileName As String = Path.GetFileName(_HttpPostedFile.FileName)
                    Dim ext As String = Path.GetExtension(fileName)

                    If ext = ".jpg" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".jpeg" Or ext = ".bmp" Or ext = ".BMP" Or ext = ".PNG" Or ext = ".png" Then


                        Dim st As System.IO.Stream = _HttpPostedFile.InputStream
                        Dim original As Image = Image.FromStream(st)
                        Dim memStream As MemoryStream = New MemoryStream()
                        If chkLargePhoto.Checked = True Then
                            original.Save(memStream, System.Drawing.Imaging.ImageFormat.Jpeg)
                        Else
                            Dim resized As Image = ResizeImage(original, New Size(320, 240))

                            resized.Save(memStream, System.Drawing.Imaging.ImageFormat.Jpeg)
                        End If

                        '  resized.Save(Server.MapPath("~/Uploads/") + Convert.ToString(Session("UserID")) + "_" + FileUpload2.FileName.ToString)

                        ' ImgConvert()
                        ' Return

                        Dim conn As MySqlConnection = New MySqlConnection()
                        Dim cmd As MySqlCommand = New MySqlCommand

                        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
                        conn.Open()

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text

                        command.Connection = conn
                        command.CommandText = "Insert into tblServicePhoto(RecordNo,Photo,FileType,FileSize,CreatedBy,CreatedOn,Description,LargePhoto,TrapType,TrapSerialNo,FloorPlanID,ServiceRecordRcNo) values(@RecordNo,@Photo,@FileType,@FileSize,@CreatedBy,@CreatedOn,@Description,@LargePhoto,@TrapType,@TrapSerialNo,@FloorPlanID,@ServiceRecordRcNo);"
                        command.Parameters.Clear()
                        command.Parameters.AddWithValue("@RecordNo", lblRecordNo6.Text)
                        'Upload image
                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        ''getting length of uploaded file
                        'Dim length As Integer = FileUpload2.PostedFile.ContentLength
                        ''     MessageBox.Message.Alert(Page, length.ToString, "str")
                        ''create a byte array to store the binary image data
                        'Dim imgbyte As Byte() = New Byte(length - 1) {}
                        ''store the currently selected file in memeory
                        'Dim img As HttpPostedFile = FileUpload2.PostedFile
                        ''set the binary data
                        'img.InputStream.Read(imgbyte, 0, length)
                        'Dim bytes As Byte() = FileUpload2.FileBytes

                        '    Image2.ImageUrl = "data:image/png;base64," + Convert.ToBase64String(bytes)
                        '   VaryQualityLevel()

                        '  Dim img As Image = Image.FromStream(memStream)

                        'getting length of uploaded file
                        '  Dim length As Integer = resized.

                        '     MessageBox.Message.Alert(Page, length.ToString, "str")
                        'create a byte array to store the binary image data
                        '     Dim imgbyte As Byte() = New Byte(length - 1) {}
                        'store the currently selected file in memeory
                        '  Dim img As HttpPostedFile = FileUpload2.PostedFile
                        'set the binary data
                        '  img.InputStream.Read(imgbyte, 0, length)
                        '    Dim bytes As Byte() = FileUpload2.FileBytes
                        'Dim imgformat As String = ""
                        'If resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Jpeg) Then
                        '    imgformat = "image/jpeg"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Bmp) Then
                        '    imgformat = "image/bmp"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Emf) Then
                        '    imgformat = "image/emf"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Exif) Then
                        '    imgformat = "image/exif"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Gif) Then
                        '    imgformat = "image/gif"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Icon) Then
                        '    imgformat = "image/icon"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Png) Then
                        '    imgformat = "image/png"
                        'ElseIf resized.RawFormat.Guid.Equals(System.Drawing.Imaging.ImageFormat.Tiff) Then
                        '    imgformat = "image/tiff"
                        'ElseIf resized.RawFormat.Equals(System.Drawing.Imaging.ImageFormat.Wmf) Then
                        '    imgformat = "image/wmf"

                        'End If


                        command.Parameters.AddWithValue("@Photo", memStream.ToArray)
                        command.Parameters.AddWithValue("@FileType", GetMimeType(original).ToString)
                        command.Parameters.AddWithValue("@FileSize", memStream.Length.ToString)
                        command.Parameters.AddWithValue("@CreatedBy", Convert.ToString(Session("UserID")))
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Description", txtPestPhotoDesc.Text.ToUpper)

                        command.Parameters.AddWithValue("@TrapType", ddlTrapType.SelectedValue.ToString.Trim.ToUpper)
                        command.Parameters.AddWithValue("@TrapSerialNo", txtTrapSerialNo.Text.Trim.ToUpper)
                        If ddlFloorLevel.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@FloorPlanID", 0)
                        Else
                            command.Parameters.AddWithValue("@FloorPlanID", ddlFloorLevel.Text.ToUpper)
                        End If

                        command.Parameters.AddWithValue("@LargePhoto", False)
                        command.Parameters.AddWithValue("@ServiceRecordRcNo", Convert.ToInt32(txtPestCountRcNo.Text.ToUpper))

                        command.ExecuteNonQuery()
                        command.Dispose()
                        conn.Close()
                        conn.Dispose()
                        lblAlert.Text = "IMAGE UPLOADED"
                        BindPestGrid()


                        'lblServicePhotosCount.Text = "Service Photos [" & gvImages.Rows.Count & "]"
                        'For Each codec As System.Drawing.Imaging.ImageCodecInfo In System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
                        '    lblAlert.Text += codec.FormatID.ToString

                        '    If codec.FormatID = resized.RawFormat.Guid Then
                        '        '  lblAlert.Text = codec.FormatID.ToString + " // " + codec.MimeType.ToString

                        '    End If

                        'Next
                        'lblAlert.Text += original.RawFormat.Guid.ToString
                    End If
                Next


            Else
                lblAlert.Text = "SELECT PICTURE TO UPLOAD"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnPestPhotoUpload_Click", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnPestCountPhotos_Click(sender As Object, e As EventArgs) Handles btnPestCountPhotos.Click
        BindPestGrid()

    End Sub

    Protected Sub gvPestImages_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvPestImages.PageIndexChanging
        gvPestImages.PageIndex = e.NewPageIndex
        Me.BindPestGrid()
    End Sub

    Protected Sub gvPestImages_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles gvPestImages.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                Dim bytes As Byte() = TryCast(TryCast(e.Row.DataItem, DataRowView)("Photo"), Byte())
                Dim base64String As String = Convert.ToBase64String(bytes, 0, bytes.Length)
                TryCast(e.Row.FindControl("PestImageView"), System.Web.UI.WebControls.Image).ImageUrl = Convert.ToString("data:image/png;base64,") & base64String
                TryCast(e.Row.FindControl("PestImageButton1"), System.Web.UI.WebControls.ImageButton).ImageUrl = Convert.ToString("data:image/png;base64,") & base64String
                '  TryCast(e.Row.FindControl("ImageButton1"), System.Web.UI.WebControls.ImageButton).Attributes.Add("onclick", "javascript: LoadDiv ('" & Convert.ToString("data:image/png;base64,") & base64String & "');")
                '   iframe1.Attributes.Add("src", Convert.ToString("data:image/png;base64,") & base64String)
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvPestImages, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound1", ex.Message.ToString, txtTechRcNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvPestImages_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvPestImages.SelectedIndexChanged
        Dim editindex As Integer = gvPestImages.SelectedIndex
        '  If editindex = 1 Then
        '   iframe1.Attributes.Add("src", DirectCast(gvImages.Rows(editindex).FindControl("ImageView"), System.Web.UI.WebControls.Image).ImageUrl)
        ImageEnlarge.ImageUrl = DirectCast(gvPestImages.Rows(editindex).FindControl("PestImageView"), System.Web.UI.WebControls.Image).ImageUrl
        mdlPopupImage.Show()

        ' End If


        For Each row As GridViewRow In gvPestImages.Rows
            If row.RowIndex = gvPestImages.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub



    Protected Sub SqlDataSource2_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDataSource2.Selected
        If e.AffectedRows >= 0 Then

            lblSvcDetailsCount.Text = "Service Details [" & e.AffectedRows.ToString & "]"
        Else
            lblSvcDetailsCount.Text = "Service Details"
        End If
    End Sub

    Protected Sub SqlDSPestCount_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDSPestCount.Selected
        If e.AffectedRows >= 0 Then

            lblPestRowCount.Text = "Pest Count [" & e.AffectedRows.ToString & "]"
        Else
            lblPestRowCount.Text = "Pest Count"
        End If
    End Sub

    Protected Sub SqlDSServiceStaff_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDSServiceStaff.Selected
        If e.AffectedRows >= 0 Then

            lblSvcTechCount.Text = "Service Technician [" & e.AffectedRows.ToString & "]"
        Else
            lblSvcTechCount.Text = "Service Technician"
        End If
    End Sub

    Protected Sub sqlDSItemsIssued_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles sqlDSItemsIssued.Selected
        If e.AffectedRows >= 0 Then

            lblItemCount.Text = "Items Issued [" & e.AffectedRows.ToString & "]"
        Else
            lblItemCount.Text = "Items Issued"
        End If
    End Sub

    Protected Sub SqlDSServiceArea_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDSServiceArea.Selected
        If e.AffectedRows >= 0 Then

            lblSvcAreaCount.Text = "Service Area [" & e.AffectedRows.ToString & "]"
        Else
            lblSvcAreaCount.Text = "Service Area"
        End If
    End Sub

    Protected Sub SqlDSNotesMaster_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SqlDSNotesMaster.Selected
        If e.AffectedRows >= 0 Then

            lblNotesCount.Text = "Notes [" & e.AffectedRows.ToString & "]"
        Else
            lblNotesCount.Text = "Notes"
        End If
    End Sub

    Protected Sub btnDeleteAllPhotos_Click(sender As Object, e As EventArgs) Handles btnDeleteAllPhotos.Click
        Try

            '  txtDeletePhoto.Text = lblRecordNo.Text

            '  lblDeleteConfirm.Text = "AllPhotos"
            ' lblEvent.Text = "Confirm DELETE"
            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
            connLocation.Open()
            Dim PhotoCount As String = ""

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT count(Rcno) as NoOfPhoto FROM tblservicephoto where recordno='" & txtSvcRecord.Text.Trim & "' and (ServiceRecordRcNo is null or ServiceRecordRcNo='' or ServiceRecordRcno=0)"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'dt.Rows(0)("LocationId").ToString
            If dt.Rows.Count > 0 Then
                PhotoCount = dt.Rows(0)("NoOfPhoto").ToString
            Else
                PhotoCount = 0


            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()

            If PhotoCount = 0 Then
                lblMessage.Text = "NO PHOTOS TO DELETE"
            Else
                lblQueryDeleteAll.Text = "Do you wish to delete all the " + PhotoCount + "photos for this service report?<br><br>Please enter " + txtRcno.Text + " in the box below to confirm."
                mdlDeleteAllPhotos.Show()


            End If




        Catch ex As Exception
            InsertIntoTblWebEventLog("DeleteAllPhotos", ex.Message.ToString, txtDeletePhoto.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnConfirmDeleteAllPhotos_Click(sender As Object, e As EventArgs) Handles btnConfirmDeleteAllPhotos.Click
        lblWarningAlert.Text = ""

        If String.IsNullOrEmpty(txtConfirmationCode.Text.Trim) = True Then
            lblWarningAlert.Text = "Please Enter Confirmation Code"
            mdlDeleteAllPhotos.Show()
            Exit Sub
        End If

        If txtConfirmationCode.Text.Trim <> txtRcno.Text.Trim Then
            lblWarningAlert.Text = "Confirmation Code does not match"
            mdlDeleteAllPhotos.Show()

            Exit Sub
        End If

        DeleteAllPhoto()

    End Sub

    Protected Sub btnConfirmOk_Click(sender As Object, e As EventArgs) Handles btnConfirmOk.Click
        mdlPopupMsg.Hide()

    End Sub

    Protected Function CheckRequestStatus(conn As MySqlConnection, requestno As String) As Boolean
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT Status FROM tblcustomerrequest where requestno='" + requestno + "'"
        command1.Connection = conn
        command1.Dispose()

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)
        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("Status").ToString = "SCHEDULED" Or dt.Rows(0)("Status").ToString = "ASSIGNED" Then
                Return True
            Else
                Return False
            End If
        End If
        Return False

    End Function

    Protected Sub btnCustRequestUpdate_Click(sender As Object, e As EventArgs) Handles btnCustRequestUpdate.Click
        'If ddlCustRequestStatus.Text = "OPEN" Or ddlCustRequestStatus.Text = "RE-OPEN" Then
        '    lblMessageCustRequest.Text = "UPDATE REQUEST STATUS"
        '    mdlPopupCustRequest.Show()
        '    Exit Sub
        'End If
        'Try
        '    Dim conn As MySqlConnection = New MySqlConnection()

        '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '    conn.Open()
        '    Dim command1 As MySqlCommand = New MySqlCommand

        '    command1.CommandType = CommandType.Text


        '    command1.CommandText = "SELECT * FROM tblcustomerrequest where requestno='" + txtCustRequestNo.Text + "'"
        '    command1.Connection = conn
        '    command1.Dispose()

        '    Dim dr As MySqlDataReader = command1.ExecuteReader()
        '    Dim dt As New DataTable
        '    dt.Load(dr)
        '    If dt.Rows.Count > 0 Then

        '        Dim command As MySqlCommand = New MySqlCommand

        '        command.CommandType = CommandType.Text
        '        command.CommandText = "Update tblcustomerrequest set Status=@STATUS where requestno='" + txtCustRequestNo.Text + "'"
        '        command.Parameters.Clear()
        '        command.Parameters.AddWithValue("@STATUS", ddlCustRequestStatus.Text)
        '        command.Connection = conn

        '        command.ExecuteNonQuery()
        '        command.Dispose()

        '        Dim commandT As MySqlCommand = New MySqlCommand

        '        commandT.CommandType = CommandType.Text
        '        commandT.CommandText = "insert into tblcustomerrequesttransaction(RequestNo,Status,Comments,ActionBy,ActionDateTime) Values(@RequestNo,@status,@comments,@ActionBy,@actiondatetime);"
        '        commandT.Parameters.Clear()
        '        commandT.Parameters.AddWithValue("@RequestNo", txtCustRequestNo.Text.ToUpper())
        '        commandT.Parameters.AddWithValue("@status", "SCHEDULED")
        '        commandT.Parameters.AddWithValue("@comments", "Service [" + lblRecordNo1.Text.ToUpper + "] is scheduled for the request [" + txtCustRequestNo.Text + "].")

        '        commandT.Parameters.AddWithValue("@ActionBy", txtCreatedBy.Text)
        '        commandT.Parameters.AddWithValue("@actiondatetime", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"))

        '        commandT.Connection = conn

        '        commandT.ExecuteNonQuery()
        '        commandT.Dispose()

        '        If String.IsNullOrEmpty(txtServiceBy2.Text) = False Then

        '            Dim commandT1 As MySqlCommand = New MySqlCommand

        '            commandT1.CommandType = CommandType.Text
        '            commandT1.CommandText = "insert into tblcustomerrequesttransaction(RequestNo,Status,Comments,ActionBy,ActionDateTime) Values(@RequestNo,@status,@comments,@ActionBy,@actiondatetime);"
        '            commandT1.Parameters.Clear()
        '            commandT1.Parameters.AddWithValue("@RequestNo", txtCustRequestNo.Text.ToUpper())
        '            commandT1.Parameters.AddWithValue("@status", "ASSIGNED")
        '            commandT1.Parameters.AddWithValue("@comments", "The job [" + lblRecordNo1.Text.ToUpper + "] is assigned to [" + txtServiceBy2.Text + "].")

        '            commandT1.Parameters.AddWithValue("@ActionBy", txtCreatedBy.Text)
        '            commandT1.Parameters.AddWithValue("@actiondatetime", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"))

        '            commandT1.Connection = conn

        '            commandT1.ExecuteNonQuery()
        '            commandT1.Dispose()
        '        End If


        '        '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
        '        '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "DELETEPHOTO", rcno, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtSvcRecord.Text)
        '    End If

        '    conn.Close()
        '    conn.Dispose()

        '    lblMessageCustRequest.Text = "REQUEST STATUS UPDATED"

        '    RetrieveGrdCustRequest()

        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("UpdateCustRequestStatus", ex.Message.ToString, txtSvcRecord.Text)
        'End Try
    End Sub

    Protected Sub RetrieveGrdCustRequest()

        '   If SearchCustRequestText = "" Then
        Dim qryCustRequest As String = "select * from tblcustomerrequest where status IN ('OPEN','RE-OPEN') order by rcno"

        SqlDSCustRequest.SelectCommand = qryCustRequest
        SqlDSCustRequest.DataBind()

        grdCustRequest.DataBind()

        If grdCustRequest.Rows.Count = 0 Then
            pnlCustomerRequest.Visible = False
            btnClientImport.Visible = False
        Else
            pnlCustomerRequest.Visible = True
            btnClientImport.Visible = True
        End If
        SearchCustRequest = False


        'Else
        ''  SearchCustRequest = True
        ''  txtSearchCustRequest1.Text = txtSearchCustRequest.Text

        'Dim searchstring As String = SearchCustRequestText
        ''  InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged", searchstring, txtCreatedBy.Text)

        ''  txtPopupClientSearch.Text = txtPopUpClient.Text
        'Dim qryCustRequest As String = "select * from tblcustomerrequest where status in ('OPEN','RE-OPEN')"
        'qryCustRequest = qryCustRequest + " and (RequestNo LIKE '%" + searchstring + "%'"
        'qryCustRequest = qryCustRequest + " or RequesterID LIKE '%" + searchstring + "%'"
        'qryCustRequest = qryCustRequest + " or ServiceAddress LIKE '%" + searchstring + "%'"
        'qryCustRequest = qryCustRequest + " or RequiredServices LIKE '%" + searchstring + "%'"
        'qryCustRequest = qryCustRequest + ") order by rcno"

        'SqlDSCustRequest.SelectCommand = qryCustRequest
        'SqlDSCustRequest.DataBind()

        'grdCustRequest.DataBind()

        'SearchCustRequest = True

        If grdCustRequest.Rows.Count = 0 Then
            pnlCustomerRequest.Visible = False
        End If

        txtSearchCustRequest.Text = "Search Here for Request details"
        '  SearchCustRequestText = ""


        '   End If


    End Sub

    Protected Sub RetrieveGrdImportCustRequest()
        Dim qryCustRequest As String = "select * from tblcustomerrequest where status IN ('OPEN','RE-OPEN') order by rcno"

        SqlDSImportCustRequest.SelectCommand = qryCustRequest
        SqlDSImportCustRequest.DataBind()

        grdImportClientRequest.DataBind()


    End Sub
    Protected Sub ViewCustRequest(ByVal sender As Object, ByVal e As EventArgs)
        txtCustRequestNo.Text = ""
        txtCustRequestName.Text = ""
        txtCustRequestSvcAddr.Text = ""
        chkCustRequestUrgent.Checked = False

        txtCustRequestSvcType.Text = ""
        txtCustRequestRequiredDate.Text = ""
        txtCustRequestRequiredTime.Text = ""
        txtCustRequestRequiredServices.Text = ""
        txtCustRequestInstructions.Text = ""
        txtCustRequestNotifications.Text = ""

        Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument
        '   InsertIntoTblWebEventLog("ViewCustRequest", rcno.ToString, "")
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblcustomerrequest where rcno='" + rcno.ToString + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            '   InsertIntoTblWebEventLog("ViewCustRequest", rcno.ToString, dt.Rows.Count.ToString)

            If dt.Rows.Count > 0 Then

                txtCustRequestNo.Text = dt.Rows(0)("RequestNo").ToString
                txtCustRequestName.Text = dt.Rows(0)("Name").ToString
                txtCustRequestSvcAddr.Text = dt.Rows(0)("ServiceAddress").ToString
                lblCustRequestSvcAddress.Text = ValidateCustRequestSvcAddress(conn, dt.Rows(0)("RequesterID").ToString)
                If String.IsNullOrEmpty(dt.Rows(0)("UrgentService").ToString) Then
                    chkCustRequestUrgent.Checked = False
                Else
                    chkCustRequestUrgent.Checked = dt.Rows(0)("UrgentService")
                End If
                txtCustRequestSvcType.Text = dt.Rows(0)("ServiceType").ToString
                If dt.Rows(0)("RequiredDate").ToString = DBNull.Value.ToString Then
                Else
                    txtCustRequestRequiredDate.Text = Convert.ToDateTime(dt.Rows(0)("RequiredDate")).ToString("dd/MM/yyyy")
                End If
                If dt.Rows(0)("RequiredTime").ToString = DBNull.Value.ToString Then
                Else
                    txtCustRequestRequiredTime.Text = Convert.ToDateTime(dt.Rows(0)("RequiredTime").ToString).ToString("HH:mm")
                End If
                txtCustRequestRequiredServices.Text = dt.Rows(0)("RequiredServices").ToString
                txtCustRequestInstructions.Text = dt.Rows(0)("InstructionsAndComments").ToString
                txtCustRequestNotifications.Text = dt.Rows(0)("SendNotificationsToEmail").ToString
                '   ddlCustRequestStatus.SelectedValue = "OPEN"
                ' lblMessageCustRequest.Text = txtCustRequestNo.Text
                ' lblMessage.Text = txtCustRequestName.Text

            End If

            dt.Clear()
            dt.Dispose()
            dr.Close()
            command1.Dispose()
            conn.Close()
            conn.Dispose()
            mdlPopupCustRequest.Show()

            '  InsertIntoTblWebEventLog("ViewCustRequest1", txtCustRequestNo.Text, txtCustRequestSvcType.Text)

        Catch ex As Exception
            InsertIntoTblWebEventLog("ViewCustRequest", ex.Message.ToString, rcno)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Function ValidateCustRequestSvcAddress(conn As MySqlConnection, RequesterID As String) As String
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT Address1 FROM tblcustomerportaluseraccesslocation where UserID = '" & RequesterID + "'"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)
        '  InsertIntoTblWebEventLog("UpdateLargePhoto", rcno.ToString + " " + txtCheckboxValue.Text, txtRecordNoSelected.Text)

        If dt.Rows.Count > 0 Then
            For i As Int16 = 0 To dt.Rows.Count - 1
                If txtCustRequestSvcAddr.Text = dt.Rows(i)("Address1").ToString Then
                    Return ""
                Else
                    Return "Service Address does not exist in the database"
                End If
            Next
        End If
        dt.Clear()
        dt.Dispose()
        dr.Close()
        command1.Dispose()
        Return ""
    End Function

    Protected Sub btnClientImport_Click(sender As Object, e As EventArgs) Handles btnClientImport.Click
        'Dim qryCustRequest As String = "select * from tblcustomerrequest where status IN ('OPEN','RE-OPEN') order by rcno"

        'SqlDSImportCustRequest.SelectCommand = qryCustRequest
        'SqlDSImportCustRequest.DataBind()

        'grdImportClientRequest.DataBind()
        'grdImportClientRequest.SelectedIndex = 0

        txtImportRequestNo.Text = ""
        txtImportRequestorName.Text = ""
        txtImportRequestSvcAddr.Text = ""
        chkImportRequestUrgent.Checked = False
        txtImportRequestSvcType.Text = ""
        txtImportRequestRequiredDate.Text = ""
        txtImportRequestRequiredTime.Text = ""
        txtImportRequestReqSvcs.Text = ""
        txtImportRequestInstructions.Text = ""
        txtImportRequestEmailNotifications.Text = ""

        lblAlertImportRequest.Text = ""
        lblMessageImportRequest.Text = ""

        btnImportCustRequestDetails.Enabled = True

        RetrieveGrdImportCustRequest()

        mdlPopupImportCustRequest.Show()

    End Sub

    Protected Sub ImportCustRequest(ByVal sender As Object, ByVal e As EventArgs)
        txtImportRequestNo.Text = ""
        txtImportRequestorName.Text = ""
        txtImportRequestSvcAddr.Text = ""
        lblImportRequestSvcAddr.Text = ""
        chkImportRequestUrgent.Checked = False
        txtImportRequestSvcType.Text = ""
        txtImportRequestRequiredDate.Text = ""
        txtImportRequestRequiredTime.Text = ""
        txtImportRequestReqSvcs.Text = ""
        txtImportRequestInstructions.Text = ""
        txtImportRequestEmailNotifications.Text = ""
        txtImportRequestRcNo.Text = ""

        Dim rcno As Int64 = CType(sender, LinkButton).CommandArgument
        txtImportRequestRcNo.Text = rcno.ToString

        '   InsertIntoTblWebEventLog("ViewCustRequest", rcno.ToString, "")
        ' Try
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT * FROM tblcustomerrequest where rcno='" + rcno.ToString + "'"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)
        '   InsertIntoTblWebEventLog("ViewCustRequest", rcno.ToString, dt.Rows.Count.ToString)

        If dt.Rows.Count > 0 Then

            txtImportRequestNo.Text = dt.Rows(0)("RequestNo").ToString
            txtImportRequestorName.Text = dt.Rows(0)("Name").ToString
            txtImportRequestSvcAddr.Text = dt.Rows(0)("ServiceAddress").ToString
            lblImportRequestSvcAddr.Text = ValidateCustRequestSvcAddress(conn, dt.Rows(0)("RequesterID").ToString)

            If String.IsNullOrEmpty(dt.Rows(0)("UrgentService").ToString) Then
                chkImportRequestUrgent.Checked = False
            Else
                chkImportRequestUrgent.Checked = dt.Rows(0)("UrgentService")
            End If
            txtImportRequestSvcType.Text = dt.Rows(0)("ServiceType").ToString
            If dt.Rows(0)("RequiredDate").ToString = DBNull.Value.ToString Then
            Else
                txtImportRequestRequiredDate.Text = Convert.ToDateTime(dt.Rows(0)("RequiredDate")).ToString("dd/MM/yyyy")
            End If
            If dt.Rows(0)("RequiredTime").ToString = DBNull.Value.ToString Then
            Else
                txtImportRequestRequiredTime.Text = Convert.ToDateTime(dt.Rows(0)("RequiredTime").ToString).ToString("HH:mm")
            End If

            txtImportRequestReqSvcs.Text = dt.Rows(0)("RequiredServices").ToString
            txtImportRequestInstructions.Text = dt.Rows(0)("InstructionsAndComments").ToString
            txtImportRequestEmailNotifications.Text = dt.Rows(0)("SendNotificationsToEmail").ToString


        End If

        dt.Clear()
        dt.Dispose()
        dr.Close()
        command1.Dispose()
        conn.Close()
        conn.Dispose()
        mdlPopupImportCustRequest.Show()


        '  InsertIntoTblWebEventLog("ViewCustRequest1", txtCustRequestNo.Text, txtCustRequestSvcType.Text)

        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("ViewCustRequest", ex.Message.ToString, rcno)
        '    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        'End Try
    End Sub

    Protected Sub btnImportCustRequestDetails_Click(sender As Object, e As EventArgs) Handles btnImportCustRequestDetails.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim ServiceID As String = ""
            Dim ProductServices As String = ""

            Dim TargetID As String = ""
            Dim TargetDesc As String = ""

            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text

            command2.CommandText = "select Productid,ProductDesc from tblproduct where productid in (SELECT defaultserviceid FROM tblcontractgroup where contractgroup in (select contractgroup from tblcontract where contractno='" & txtContractNo.Text.Trim & "'));"
            command2.Connection = conn

            Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            ' InsertIntoTblWebEventLog("btnImportCustRequestDetails_Click", dt2.Rows.Count.ToString, "1")

            If dt2.Rows.Count > 0 Then
                If String.IsNullOrEmpty(dt2.Rows(0)("Productid")) Then
                    ServiceID = ""
                Else
                    ServiceID = dt2.Rows(0)("Productid").ToString
                End If
                If String.IsNullOrEmpty(dt2.Rows(0)("ProductDesc")) Then
                    ProductServices = ""
                Else
                    ProductServices = dt2.Rows(0)("ProductDesc").ToString
                End If
            End If

            dt2.Clear()
            dt2.Dispose()
            dr2.Close()
            command2.Dispose()

            If String.IsNullOrEmpty(ServiceID) Then
                Dim command11 As MySqlCommand = New MySqlCommand

                command11.CommandType = CommandType.Text

                command11.CommandText = "select contractgroup from tblcontract where contractno='" & txtContractNo.Text.Trim & "';"
                command11.Connection = conn

                Dim dr11 As MySqlDataReader = command11.ExecuteReader()
                Dim dt11 As New DataTable
                dt11.Load(dr11)

                If dt11.Rows.Count > 0 Then
                    mdlPopupImportCustRequest.Show()

                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowStatus", "showRequestFailure('" + dt11.Rows(0)("contractgroup") + "');", True)
                End If
                mdlPopupImportCustRequest.Show()
                Exit Sub

            End If

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblcustomerrequestdetail where requestno='" + txtImportRequestNo.Text + "' group by ServiceFrequency"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            '   InsertIntoTblWebEventLog("ViewCustRequest", rcno.ToString, dt.Rows.Count.ToString)
            '   InsertIntoTblWebEventLog("btnImportCustRequestDetails_Click", dt.Rows.Count.ToString, "2")

            If dt.Rows.Count > 0 Then


                For i As Int16 = 0 To dt.Rows.Count - 1
                    TargetID = ""
                    TargetDesc = ""

                    Dim command3 As MySqlCommand = New MySqlCommand

                    command3.CommandType = CommandType.Text

                    command3.CommandText = "SELECT * FROM tblcustomerrequestdetail where requestno='" + txtImportRequestNo.Text + "' and ServiceFrequency='" + dt.Rows(i)("ServiceFrequency").ToString + "'"
                    command3.Connection = conn

                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt3 As New DataTable
                    dt3.Load(dr3)
                    ' InsertIntoTblWebEventLog("btnImportCustRequestDetails_Click", dt3.Rows.Count.ToString, "3")
                    '  InsertIntoTblWebEventLog("RetrieveTargetID", RetrieveTargetID(conn, TargetID), RetrieveTargetDesc(conn, TargetDesc))
                    If dt3.Rows.Count > 0 Then
                        For j As Int16 = 0 To dt3.Rows.Count - 1
                            If TargetID = "" Then
                                TargetID = dt3.Rows(j)("TargetID").ToString
                            Else
                                TargetID = TargetID + "," + dt3.Rows(j)("TargetID").ToString

                            End If
                            If TargetDesc = "" Then
                                TargetDesc = dt3.Rows(j)("Targetdescription").ToString
                            Else
                                TargetDesc = TargetDesc + "," + dt3.Rows(j)("Targetdescription").ToString
                            End If
                        Next
                    End If

                    dt3.Clear()
                    dt3.Dispose()
                    dr3.Close()
                    command3.Dispose()
                    'Dim t As String = RetrieveTargetID(conn, TargetID)
                    'Dim t1 As String = RetrieveTargetDesc(conn, TargetDesc)

                    'InsertIntoTblWebEventLog("RetrieveTargetID", t, t1)


                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text

                    command.Connection = conn
                    command.CommandText = "INSERT INTO tblservicerecorddet(contractno,WARRANTY,Reason,status,ServiceID,ProductServices,frequency, TargetID,RecordNo,Action,RemarkOffice,RemarkClient,ServiceArea,PricePerServiceArea,AreaCompleted,PriceOfAreaCompleted,BaitStationInstalled,PricePerBaitStation,TotalPriceForBaitStation,Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn,TargetDescription,JobOrder) VALUES(@contractno,@WARRANTY,@Reason,@status,@ServiceID, @ProductServices,@Frequency,@TargetID,@RecordNo,@Action,@RemarkOffice,@RemarkClient,@ServiceArea,@PricePerServiceArea,@AreaCompleted,@PriceOfAreaCompleted,@BaitStationInstalled,@PricePerBaitStation,@TotalPriceForBaitStation,@Material, @CreatedBy, @CreatedOn, @lastModifiedBy, @lastModifiedOn,@TargetDescription,@JobOrder)"
                    command.Parameters.Clear()
                    command.Parameters.AddWithValue("@contractno", txtContractNo.Text.ToUpper)
                    command.Parameters.AddWithValue("@status", "O")
                    command.Parameters.AddWithValue("@WARRANTY", dt.Rows(i)("ServiceFrequency").ToString + " - " + TargetDesc)

                    command.Parameters.AddWithValue("@Reason", "")
                    command.Parameters.AddWithValue("@ServiceID", ServiceID)

                    command.Parameters.AddWithValue("@ProductServices", ProductServices)
                    command.Parameters.AddWithValue("@Frequency", dt.Rows(i)("ServiceFrequency").ToString)

                    command.Parameters.AddWithValue("@TargetID", RetrieveTargetID(conn, TargetID))
                    command.Parameters.AddWithValue("@TargetDescription", TargetDesc)
                    command.Parameters.AddWithValue("@Action", "")
                    command.Parameters.AddWithValue("@RemarkOffice", "")
                    command.Parameters.AddWithValue("@RemarkClient", txtImportRequestInstructions.Text)
                    command.Parameters.AddWithValue("@Material", "")

                    command.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text.ToUpper)

                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@ServiceArea", 0)
                    command.Parameters.AddWithValue("@PricePerServiceArea", 0)
                    command.Parameters.AddWithValue("@AreaCompleted", 0)
                    command.Parameters.AddWithValue("@PriceOfAreaCompleted", 0)
                    command.Parameters.AddWithValue("@BaitStationInstalled", 0)
                    command.Parameters.AddWithValue("@PricePerBaitStation", 0)
                    command.Parameters.AddWithValue("@TotalPriceForBaitStation", 0)
                    command.Parameters.AddWithValue("@JobOrder", txtImportRequestNo.Text)

                    command.ExecuteNonQuery()
                    command.Dispose()
                    '  UpdatePriceRateSchedule(conn, "ADD SAVE", command.LastInsertedId)
                    txtSvcRcNo.Text = command.LastInsertedId

                    UpdatePrice(conn, "ADD SAVE")
                    UpdatePriceRateSchedule(conn, "ADD SAVE", command.LastInsertedId)
                Next

                CustRequestUpdateScheduledStatus(conn)

                lblMessageImportRequest.Text = "DETAILS IMPORTED"
                lblMessage.Text = "DETAILS IMPORTED"
                mdlPopupImportCustRequest.Hide()

                ' btnImportCustRequestDetails.Enabled = False
            Else
                lblAlertImportRequest.Text = "NO DETAILS TO IMPORT"
                mdlPopupImportCustRequest.Show()
            End If
            '   UpdatePrice(conn, "ADD SAVE")

            conn.Close()
            conn.Dispose()

            SqlDataSource2.SelectCommand = "SELECT Rcno, RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn  FROM tblservicerecorddet where recordno = '" + txtSvcRecord.Text + "'"
            SqlDataSource2.DataBind()

            GridView2.DataBind()


            EnableSvcControls()

            For i As Int32 = 0 To GridView2.Rows.Count - 1
                If GridView2.Rows(i).Cells(6).Text = txtSvcRcNo.Text Then
                    GridView2.SelectedIndex = i
                End If
            Next

        Catch ex As Exception
            InsertIntoTblWebEventLog("btnImportCustRequestDetails_Click", ex.Message.ToString, txtCreatedBy.Text)
            lblAlertImportRequest.Text = ex.Message.ToString

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Function RetrieveTargetID(conn As MySqlConnection, rcno As String) As String
        Dim command3 As MySqlCommand = New MySqlCommand

        command3.CommandType = CommandType.Text


        command3.CommandText = "SELECT group_concat(targetid) as TargetID FROM tbltarget where rcno in (" & rcno & ")"
        command3.Connection = conn
        Dim dr3 As MySqlDataReader = command3.ExecuteReader()
        Dim dt3 As New DataTable
        dt3.Load(dr3)
        Dim Target As String = ""
        If dt3.Rows.Count > 0 Then
            Target = dt3.Rows(0)("TargetID").ToString
        End If
        dt3.Clear()
        dt3.Dispose()
        dr3.Close()
        command3.Dispose()
        Return Target
    End Function

    Private Function RetrieveTargetDesc(conn As MySqlConnection, rcno As String) As String
        Dim command3 As MySqlCommand = New MySqlCommand

        command3.CommandType = CommandType.Text


        command3.CommandText = "SELECT group_concat(Descrip1) as TargetDesc FROM tbltarget where rcno in (" & rcno & ")"
        command3.Connection = conn

        Dim dr3 As MySqlDataReader = command3.ExecuteReader()
        Dim dt3 As New DataTable
        dt3.Load(dr3)
        Dim Target As String = ""
        If dt3.Rows.Count > 0 Then
            Target = dt3.Rows(0)("TargetDesc").ToString
        End If
        dt3.Clear()
        dt3.Dispose()
        dr3.Close()
        command3.Dispose()
        Return Target
    End Function



    Protected Sub txtSearchCustRequest_TextChanged(sender As Object, e As EventArgs) Handles txtSearchCustRequest.TextChanged
        Try
            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged1", txtSearchCustRequest.Text, txtCreatedBy.Text)

            txtSearchCustRequest1.Text = txtSearchCustRequest.Text
            SearchCustRequestText = txtSearchCustRequest.Text

            '  SearchCustRequest = True

            'If txtSearchCustRequest.Text.Trim = "" Then
            'Else
            '   
            '  txtSearchCustRequest1.Text = txtSearchCustRequest.Text

            Dim searchstring As String = SearchCustRequestText
            '  InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", searchstring, txtCreatedBy.Text)

            '  txtPopupClientSearch.Text = txtPopUpClient.Text
            Dim qryCustRequest As String = "select * from tblcustomerrequest where status in ('OPEN','RE-OPEN')"
            qryCustRequest = qryCustRequest + " and (RequestNo LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or RequesterID LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or Name LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or ServiceAddress LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or RequiredServices LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + ") order by rcno"
            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", qryCustRequest, txtCreatedBy.Text)

            SqlDSCustRequest.SelectCommand = qryCustRequest
            SqlDSCustRequest.DataBind()

            grdCustRequest.DataBind()

            If grdCustRequest.Rows.Count = 0 Then
                pnlCustomerRequest.Visible = False

            End If

            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", grdCustRequest.Rows.Count.ToString, txtCreatedBy.Text)

            'End If

            txtSearchCustRequest.Text = "Search Here for Request details"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged", ex.Message.ToString, txtCreatedBy.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub CustRequestUpdateScheduledStatus(conn As MySqlConnection)
        Try

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text


            command1.CommandText = "SELECT * FROM tblcustomerrequest where requestno='" + txtImportRequestNo.Text + "'"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "Update tblcustomerrequest set Status=@STATUS where requestno='" + txtImportRequestNo.Text + "'"
                command.Parameters.Clear()
                command.Parameters.AddWithValue("@STATUS", "SCHEDULED")
                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                Dim commandT As MySqlCommand = New MySqlCommand

                commandT.CommandType = CommandType.Text
                commandT.CommandText = "insert into tblcustomerrequesttransaction(RequestNo,Status,Comments,ActionBy,ActionDateTime,RecordNo) Values(@RequestNo,@status,@comments,@ActionBy,@actiondatetime,@RecordNo);"
                commandT.Parameters.Clear()
                commandT.Parameters.AddWithValue("@RequestNo", txtImportRequestNo.Text.ToUpper())
                commandT.Parameters.AddWithValue("@status", "SCHEDULED")
                commandT.Parameters.AddWithValue("@comments", "Service " + lblRecordNo1.Text.ToUpper + " is scheduled for the request " + txtImportRequestNo.Text + ".")

                commandT.Parameters.AddWithValue("@ActionBy", txtCreatedBy.Text)
                commandT.Parameters.AddWithValue("@actiondatetime", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"))
                commandT.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text.ToUpper)

                commandT.Connection = conn

                commandT.ExecuteNonQuery()
                commandT.Dispose()


                Dim mailsub As String = ""
                Dim mailbody As String = ""
                Dim toemail As String = ""

                mailsub += "SCHEDULED - " + txtImportRequestNo.Text.ToUpper() + " - " + txtImportRequestSvcAddr.Text
                'mail body 
                mailbody += "Status Update: SCHEDULED <br/>"
                mailbody += "Request No.: " + txtImportRequestNo.Text.ToUpper() + "<br/>"
                mailbody += "Requester's Name: " + txtImportRequestorName.Text + "<br/>"
                mailbody += "Comments: " + "Service " + lblRecordNo1.Text.ToUpper + " is scheduled for the request " + txtImportRequestNo.Text + "." + "<br/>"
                mailbody += "Action By: " + txtCreatedBy.Text + "<br/>"
                mailbody += "Send Notifications To:" + txtImportRequestEmailNotifications.Text + "<br/>"

                toemail = txtImportRequestEmailNotifications.Text

                SendEmail(conn, toemail, mailbody, mailsub)

                'If String.IsNullOrEmpty(txtServiceBy2.Text) = False Then

                '    Dim command2 As MySqlCommand = New MySqlCommand

                '    command2.CommandType = CommandType.Text
                '    command2.CommandText = "Update tblcustomerrequest set Status=@STATUS where requestno='" + txtImportRequestNo.Text + "'"
                '    command2.Parameters.Clear()
                '    command2.Parameters.AddWithValue("@STATUS", "ASSIGNED")
                '    command2.Connection = conn

                '    command2.ExecuteNonQuery()
                '    command2.Dispose()


                '    Dim commandT1 As MySqlCommand = New MySqlCommand

                '    commandT1.CommandType = CommandType.Text
                '    commandT1.CommandText = "insert into tblcustomerrequesttransaction(RequestNo,Status,Comments,ActionBy,ActionDateTime,RecordNo) Values(@RequestNo,@status,@comments,@ActionBy,@actiondatetime,@RecordNo);"
                '    commandT1.Parameters.Clear()
                '    commandT1.Parameters.AddWithValue("@RequestNo", txtImportRequestNo.Text.ToUpper())
                '    commandT1.Parameters.AddWithValue("@status", "ASSIGNED")
                '    commandT1.Parameters.AddWithValue("@comments", "The job " + lblRecordNo1.Text.ToUpper + " is assigned to " + txtServiceBy2.Text + ".")

                '    commandT1.Parameters.AddWithValue("@ActionBy", txtCreatedBy.Text)
                '    commandT1.Parameters.AddWithValue("@actiondatetime", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"))
                '    commandT1.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text.ToUpper)

                '    commandT1.Connection = conn

                '    commandT1.ExecuteNonQuery()
                '    commandT1.Dispose()

                '    mailsub = ""
                '    mailbody = ""
                '    toemail = ""

                '    mailsub += "ASSIGNED - " + txtImportRequestNo.Text.ToUpper() + " - " + txtImportRequestSvcAddr.Text
                '    'mail body 
                '    mailbody += "Status Update: ASSIGNED <br/>"
                '    mailbody += "Request No.: " + txtImportRequestNo.Text.ToUpper() + "<br/>"
                '    mailbody += "Requester's Name: " + txtImportRequestorName.Text + "<br/>"
                '    mailbody += "Comments: " + "The job " + lblRecordNo1.Text.ToUpper + " is assigned to " + txtServiceBy2.Text + "." + "<br/>"
                '    mailbody += "Action By: " + txtCreatedBy.Text + "<br/>"
                '    mailbody += "Send Notifications To:" + txtImportRequestEmailNotifications.Text + "<br/>"

                '    toemail = txtImportRequestEmailNotifications.Text
                '    '   System.Threading.Thread.Sleep(1000)


                '    SendEmail(conn, toemail, mailbody, mailsub)
                'End If


                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "DELETEPHOTO", rcno, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtSvcRecord.Text)
            End If

            'conn.Close()
            'conn.Dispose()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CustRequestUpdateScheduledStatus", ex.Message.ToString, txtCustRequestNo.Text)
        End Try
    End Sub

    Protected Sub CustRequestUpdateOpenStatus(RequestNo As String)
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            SvcDelete(conn)

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "Update tblcustomerrequest set Status=@STATUS where requestno='" + RequestNo + "'"
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@STATUS", "OPEN")
            command.Connection = conn

            command.ExecuteNonQuery()
            command.Dispose()

            Dim commandT As MySqlCommand = New MySqlCommand

            commandT.CommandType = CommandType.Text
            commandT.CommandText = "insert into tblcustomerrequesttransaction(RequestNo,Status,Comments,ActionBy,ActionDateTime,RecordNo) Values(@RequestNo,@status,@comments,@ActionBy,@actiondatetime,@RecordNo);"
            commandT.Parameters.Clear()
            commandT.Parameters.AddWithValue("@RequestNo", RequestNo)
            commandT.Parameters.AddWithValue("@status", "OPEN")
            commandT.Parameters.AddWithValue("@comments", "The request " + RequestNo + " is changed to status OPEN by an update to " + lblRecordNo1.Text.ToUpper + ".")

            commandT.Parameters.AddWithValue("@ActionBy", txtCreatedBy.Text)
            commandT.Parameters.AddWithValue("@actiondatetime", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"))
            commandT.Parameters.AddWithValue("@RecordNo", lblRecordNo1.Text.ToUpper)

            commandT.Connection = conn

            commandT.ExecuteNonQuery()
            commandT.Dispose()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text


            command1.CommandText = "SELECT * FROM tblcustomerrequest where requestno='" + RequestNo + "'"
            command1.Connection = conn
            command1.Dispose()

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            Dim toemail As String = ""

            If dt.Rows.Count > 0 Then
                toemail = dt.Rows(0)("SendNotificationsToEmail").ToString
            End If

            Dim mailsub As String = ""
            Dim mailbody As String = ""

            mailsub += "OPEN - " + RequestNo
            mailbody += "Status Update: OPEN <br/>"
            mailbody += "Request No.: " + RequestNo + "<br/>"
            mailbody += "Comments: " + "The request " + RequestNo + " is changed to status OPEN by an update to " + lblRecordNo1.Text.ToUpper + "." + "<br/>"
            mailbody += "Action By: " + txtCreatedBy.Text + "<br/>"

            SendEmail(conn, toemail, mailbody, mailsub)

            conn.Close()
            conn.Dispose()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CustRequestUpdateScheduledStatus", ex.Message.ToString, txtCustRequestNo.Text)
        End Try
    End Sub

    Protected Sub CustRequestUpdateReScheduledStatus(conn As MySqlConnection)
        ' Try
        Dim RequestNo As String = ""

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT rcno,joborder FROM tblservicerecorddet where RecordNo = '" & lblRecordNo.Text & "' and (joborder is not null or joborder <> '')"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            ' Dim RequestScheduled As Boolean = False
            RequestNo = dt.Rows(0)("JobOrder").ToString

            Dim command11 As MySqlCommand = New MySqlCommand

            command11.CommandType = CommandType.Text


            command11.CommandText = "SELECT * FROM tblcustomerrequest where requestno='" + RequestNo + "'"
            command11.Connection = conn
            command11.Dispose()

            Dim dr11 As MySqlDataReader = command11.ExecuteReader()
            Dim dt11 As New DataTable
            dt11.Load(dr11)
            If dt11.Rows.Count > 0 Then

                Dim mailsub As String = ""
                Dim mailbody As String = ""
                Dim toemail As String = ""

                mailsub += "SCHEDULED - " + RequestNo.ToUpper() + " - " + dt11.Rows(0)("ServiceAddress").ToString
                'mail body 
                mailbody += "Status Update: SCHEDULED <br/>"
                mailbody += "Request No.: " + RequestNo.ToUpper() + "<br/>"
                mailbody += "Requester's Name: " + dt11.Rows(0)("Name").ToString + "<br/>"
                '  mailbody += "Comments: " + "Service " + lblRecordNo.Text.ToUpper + " is scheduled for the request " + txtImportRequestNo.Text + "." + "<br/>"
                mailbody += "Comments: " + "The job " + lblRecordNo.Text + " is assigned to " + txtEditSvcBy1.Text
                mailbody += " and scheduled on " + txtEditSchDate.Text + IIf(String.IsNullOrEmpty(txtEditSchTimeIn.Text), "", " from " + txtEditSchTimeIn.Text + IIf(String.IsNullOrEmpty(txtEditSchTimeOut.Text), "", " to " + txtEditSchTimeOut.Text)) + "." + "<br/>"

                mailbody += "Action By: " + txtCreatedBy.Text + "<br/>"

                toemail = dt11.Rows(0)("SendNotificationsToEmail").ToString

                SendEmail(conn, toemail, mailbody, mailsub)


            End If
            dt11.Clear()
            dr11.Close()
            command11.Dispose()

        End If
        dt.Clear()
        dr.Close()
        command1.Dispose()


        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("CustRequestUpdateReScheduledStatus", ex.Message.ToString, txtCustRequestNo.Text)
        'End Try
    End Sub


    Protected Sub SvcDelete(conn As MySqlConnection)

        Try

            '  InsertIntoTblWebEventLog("btnSvcDelete", dt.Rows(0)("JobOrder").ToString, RequestScheduled)


            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "delete from tblservicerecorddet where rcno=" & Convert.ToInt32(txtSvcRcNo.Text)

            command.CommandText = qry

            command.Connection = conn

            command.ExecuteNonQuery()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "DELETE SVC", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtSvcRcNo.Text)

            'Update tblservicerecord 

            UpdatePrice(conn, "DELETE")

            UpdatePriceRateSchedule(conn, "DELETE", 0)

            EnableSvcControls()
            SqlDataSource2.SelectCommand = "SELECT rcno,RecordNo, ServiceID, ProductServices, Frequency, TargetID, Reason, Action, RemarkOffice, RemarkClient,ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation,TotalPriceForBaitStation, Material, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn FROM tblservicerecorddet where recordno = '" & lblRecordNo1.Text & "'"

            '   SqlDataSource2.SelectCommand = "SELECT ServiceID,ServiceDescription,ServiceFrequency,TargetID,TargetDescription,rcno,Action,RemarkOffice,RemarkClient,ServiceArea,PricePerServiceArea,AreaCompleted,PriceOfAreaCompleted,BaitStationInstalled FROM tblservicerecorddet where recordno = '" & lblRecordNo1.Text & "'"

            SqlDataSource2.DataBind()
            GridView2.DataBind()
            MakeSvcNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
            ScriptManager.RegisterStartupScript(Me, Page.GetType(), "Show Different Text", "messageText('DELETE: RECORD SUCCESSFULLY DELETED');", True)

        Catch ex As Exception
            InsertIntoTblWebEventLog("SvcDelete", ex.Message.ToString, txtSvcRequestNo.Text + " " + txtSvcRcNo.Text)
        End Try
    End Sub


    Private Sub SendNotificationEmail(conn As MySqlConnection, ToEmail As String, bodystr As String, substr As String)
        Try
            ' InsertIntoTblWebEventLog("SendEmail", substr, ToEmail)

            Dim oMail As New SmtpMail(ConfigurationManager.AppSettings("EmailLicense").ToString())
            Dim oSmtp As New SmtpClient()
            ToEmail = ValidateEmail(ToEmail)

            If ToEmail.Last.ToString = ";" Then
                ToEmail = ToEmail.Remove(ToEmail.Length - 1)
            End If

            If ToEmail.First.ToString = ";" Then
                ToEmail = ToEmail.Remove(0)
            End If

            Dim pattern As String
            pattern = "^([0-9a-zA-Z]([-\.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$"

            If String.IsNullOrEmpty(ToEmail) = False Then
                Dim ToAddress As String() = ToEmail.Split(";"c)
                If ToAddress.Count() > 0 Then
                    For i As Integer = 0 To ToAddress.Count() - 1
                        If Regex.IsMatch(ToAddress(i).ToString.Trim, pattern) Then

                        Else
                            InsertIntoTblWebEventLog("SchDate Update Notification Email", "Invalid Email address" + " (" + ToAddress(i).ToString() + ")", "str")
                            Return
                        End If
                        oMail.[To].Add(New MailAddress(ToAddress(i).ToString.Trim))
                    Next
                End If
            End If

            oMail.From = ConfigurationManager.AppSettings("EmailFrom").ToString()
            oMail.Subject = substr
            oMail.HtmlBody = bodystr

            Dim oServer As New SmtpServer(ConfigurationManager.AppSettings("EmailSMTP").ToString())
            oServer.Port = ConfigurationManager.AppSettings("EmailPort").ToString()
            oServer.ConnectType = SmtpConnectType.ConnectDirectSSL
            oServer.User = ConfigurationManager.AppSettings("EmailFrom").ToString()
            oServer.Password = ConfigurationManager.AppSettings("EmailPassword").ToString()

            oSmtp.SendMail(oServer, oMail)
            oSmtp.Close()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SendNotificationEmail", ex.Message.ToString, getBCCmail(conn))
        End Try
    End Sub

    Private Function getNotificationEmail(con As MySqlConnection) As String
        '  Dim bccmail As String = "Christian.Reyes@anticimex.com.sg"

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        command1.CommandText = "SELECT EmailsforNotificationofScheduleChange FROM tblservicerecordmastersetup limit 1"
        command1.Connection = con
        command1.Dispose()

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        Dim tomail As String = ""

        If dt.Rows.Count > 0 Then
            tomail = dt.Rows(0)("EmailsforNotificationofScheduleChange").ToString
        End If
        dt.Clear()
        dr.Close()
        command1.Dispose()

        Return tomail

    End Function

    Private Sub SendEmail(conn As MySqlConnection, ToEmail As String, bodystr As String, substr As String)
        Try
            ' InsertIntoTblWebEventLog("SendEmail", substr, ToEmail)

            Dim oMail As New SmtpMail(ConfigurationManager.AppSettings("EmailLicense").ToString())
            Dim oSmtp As New SmtpClient()
            ToEmail = ValidateEmail(ToEmail)

            If ToEmail.Last.ToString = ";" Then
                ToEmail = ToEmail.Remove(ToEmail.Length - 1)
            End If

            If ToEmail.First.ToString = ";" Then
                ToEmail = ToEmail.Remove(0)
            End If

            Dim pattern As String
            pattern = "^([0-9a-zA-Z]([-\.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$"

            If String.IsNullOrEmpty(ToEmail) = False Then
                Dim ToAddress As String() = ToEmail.Split(";"c)
                If ToAddress.Count() > 0 Then
                    For i As Integer = 0 To ToAddress.Count() - 1
                        If Regex.IsMatch(ToAddress(i).ToString.Trim, pattern) Then

                        Else
                            InsertIntoTblWebEventLog("StatusUpdate SendEmail", "Invalid Email address" + " (" + ToAddress(i).ToString() + ")", "str")
                            Return
                        End If
                        oMail.[To].Add(New MailAddress(ToAddress(i).ToString.Trim))
                    Next
                End If
            End If
            '   InsertIntoTblWebEventLog("SendEmail", substr, getBCCmail(conn))
            '   oMail.Bcc = getBCCmail(conn)

            Dim bccmail As String = getBCCmail(conn)
            If String.IsNullOrEmpty(bccmail) = False Then
                oMail.Bcc = bccmail
            End If

            oMail.From = ConfigurationManager.AppSettings("NotificationsEmailFrom").ToString()
            oMail.Subject = substr
            oMail.HtmlBody = bodystr

            Dim oServer As New SmtpServer(ConfigurationManager.AppSettings("EmailSMTP").ToString())
            oServer.Port = ConfigurationManager.AppSettings("EmailPort").ToString()
            oServer.ConnectType = SmtpConnectType.ConnectDirectSSL
            oServer.User = ConfigurationManager.AppSettings("NotificationsEmailFrom").ToString()
            oServer.Password = ConfigurationManager.AppSettings("NotificationsEmailPassword").ToString()

            oSmtp.SendMail(oServer, oMail)
            oSmtp.Close()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SendEmail", ex.Message.ToString, getBCCmail(conn))
        End Try
    End Sub

    Private Function getBCCmail(con As MySqlConnection) As String
        '  Dim bccmail As String = "Christian.Reyes@anticimex.com.sg"

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        command1.CommandText = "SELECT CustomerPortalEmailNotificationRecipient FROM tblservicerecordmastersetup limit 1"
        command1.Connection = con
        command1.Dispose()

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        Dim bccmail As String = ""

        If dt.Rows.Count > 0 Then
            bccmail = dt.Rows(0)("CustomerPortalEmailNotificationRecipient").ToString
        End If
        dt.Clear()
        dr.Close()
        command1.Dispose()

        Return bccmail

    End Function

    Protected Function ValidateEmail(ByVal EmailId As String) As String
        Dim resEmail As String = ""
        If EmailId.Contains(","c) Then EmailId = EmailId.Replace(","c, ";"c)
        If EmailId.Contains("/"c) Then EmailId = EmailId.Replace("/"c, ";"c)
        If EmailId.Contains(":"c) Then EmailId = EmailId.Replace(":"c, ";"c)
        resEmail = EmailId.TrimEnd(";"c)
        Return resEmail
    End Function

    Protected Sub btnRequestSvcDetailConfirm_Click(sender As Object, e As EventArgs) Handles btnRequestSvcDetailConfirm.Click
        CustRequestUpdateOpenStatus(txtSvcRequestNo.Text)
    End Sub

    Protected Sub btnResetCustRequest_Click(sender As Object, e As ImageClickEventArgs) Handles btnResetCustRequest.Click
        RetrieveGrdCustRequest()

    End Sub

    Protected Sub txtSearchImportCustRequest_TextChanged(sender As Object, e As EventArgs) Handles txtSearchImportCustRequest.TextChanged
        Try
            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged1", txtSearchCustRequest.Text, txtCreatedBy.Text)

            txtSearchImportCustRequest1.Text = txtSearchImportCustRequest.Text
            ' SearchCustRequestText = txtSearchCustRequest.Text

            '  SearchCustRequest = True

            'If txtSearchCustRequest.Text.Trim = "" Then
            'Else
            '   
            '  txtSearchCustRequest1.Text = txtSearchCustRequest.Text

            Dim searchstring As String = txtSearchImportCustRequest1.Text
            '  InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", searchstring, txtCreatedBy.Text)

            '  txtPopupClientSearch.Text = txtPopUpClient.Text
            Dim qryCustRequest As String = "select * from tblcustomerrequest where status in ('OPEN','RE-OPEN')"
            qryCustRequest = qryCustRequest + " and (RequestNo LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or RequesterID LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or Name LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or ServiceAddress LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + " or RequiredServices LIKE '%" + searchstring + "%'"
            qryCustRequest = qryCustRequest + ") order by rcno"
            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", qryCustRequest, txtCreatedBy.Text)

            SqlDSImportCustRequest.SelectCommand = qryCustRequest
            SqlDSImportCustRequest.DataBind()

            grdImportClientRequest.DataBind()

            If grdImportClientRequest.Rows.Count = 0 Then
                Panel1.Visible = False

            End If
            mdlPopupImportCustRequest.Show()

            ' InsertIntoTblWebEventLog("txtSearchCustRequest_TextChanged2", grdCustRequest.Rows.Count.ToString, txtCreatedBy.Text)

            'End If

            txtSearchImportCustRequest.Text = "Search Here for Request details"
        Catch ex As Exception
            InsertIntoTblWebEventLog("txtSearchImportCustRequest_TextChanged", ex.Message.ToString, txtCreatedBy.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnResetImportCustRequest_Click(sender As Object, e As ImageClickEventArgs) Handles btnResetImportCustRequest.Click
        RetrieveGrdImportCustRequest()
        mdlPopupImportCustRequest.Show()

    End Sub

    Protected Sub btnSaveTS_Click(sender As Object, e As EventArgs) Handles btnSaveTS.Click
        Try
            lblAlertTS.Text = ""

            If String.IsNullOrEmpty(txtTimeInDateTS.Text) Then
                lblAlertTS.Text = "ENTER TIME IN DATE"
                mdlViewTS.Show()
                Return
            End If

           

            If String.IsNullOrEmpty(txtTimeInTS.Text) Or txtTimeInTS.Text = "__:__" Then
                lblAlertTS.Text = "ENTER TIME IN"
                mdlViewTS.Show()
                Return
            End If

            If String.IsNullOrEmpty(txtTimeOutDateTS.Text) Then
                lblAlertTS.Text = "ENTER TIME OUT DATE"
                mdlViewTS.Show()
                Return
            End If

            If String.IsNullOrEmpty(txtTimeOutTS.Text) Or txtTimeOutTS.Text = "__:__" Then
                lblAlertTS.Text = "ENTER TIME OUT"
                mdlViewTS.Show()
                Return
            End If


            If ValidationTS() = False Then
                mdlViewTS.Show()
                Return
            End If

            If Convert.ToDecimal(txtDurationTS.Text) < 0 Then
                lblAlertTS.Text = "END DATE & TIME SHOULD BE LATER THAN THE START DATE"
                txtTimeOutDateTS.Focus()
                mdlViewTS.Show()
                Return
            End If


            Dim ServiceStartdatetime As String
            Dim ServiceEnddatetime As String

            Dim startdatetime As String
            Dim enddatetime As String

            ServiceStartdatetime = txtActSvcDateTS.Text + " " + txtActSvcTimeFromTS.Text + ":00"
            ServiceEnddatetime = txtActSvcEndDateTS.Text + " " + txtActSvcTimeToTS.Text + ":00"

            startdatetime = txtTimeInDateTS.Text + " " + txtTimeInTS.Text + ":00"
            enddatetime = txtTimeOutDateTS.Text + " " + txtTimeOutTS.Text + ":00"

            If Convert.ToDateTime(startdatetime) > Convert.ToDateTime(enddatetime) Then
                lblAlertTS.Text = "START DATE SHOULD BE LESS THAN END DATE"
                mdlViewTS.Show()
                Return
            End If

            If Convert.ToDateTime(startdatetime) < Convert.ToDateTime(ServiceStartdatetime) Then
                lblAlertTS.Text = "TIME IN SHOULD BE WITHIN SERVICE START DATE AND TIME"
                mdlViewTS.Show()
                Return
            End If

            If Convert.ToDateTime(enddatetime) > Convert.ToDateTime(ServiceEnddatetime) Then
                lblAlertTS.Text = "TIME OUT SHOULD BE WITHIN SERVICE END DATE AND TIME"
                mdlViewTS.Show()
                Return
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'If IfExists() = True Then
            '    lblAlertTS.Text = "END DATE AND TIME SHOULD BE WITIN SERVICE END DATE AND TIME"
            '    mdlViewTS.Show()
            '    Return
            'End If


            Dim commandIfExists As MySqlCommand = New MySqlCommand

            commandIfExists.CommandType = CommandType.Text

            If txtModeTS.Text = "New" Then
                commandIfExists.CommandText = "SELECT ServiceDateIn,TimeIn,ServiceDateOut, TimeOut FROM tblServiceRecordStaffTimeSheet where RecordNo=@RecordNo and StaffID=@StaffID"
            Else
                commandIfExists.CommandText = "SELECT ServiceDateIn,TimeIn,ServiceDateOut, TimeOut FROM tblServiceRecordStaffTimeSheet where RecordNo=@RecordNo and StaffID=@StaffID and Rcno <> " & txtRcnoTS.Text

            End If

            commandIfExists.Parameters.AddWithValue("@recordno", txtRecordNoTS.Text)
            commandIfExists.Parameters.AddWithValue("@StaffID", txtStaffIDsTS.Text.ToUpper)

            commandIfExists.Connection = conn

            Dim drIfExists As MySqlDataReader = commandIfExists.ExecuteReader()
            Dim dtIfExists As New DataTable
            dtIfExists.Load(drIfExists)

            If dtIfExists.Rows.Count > 0 Then

                ServiceStartdatetime = Convert.ToDateTime(dtIfExists.Rows(0)("ServiceDateIn")).ToString("dd/MM/yyyy") + " " + dtIfExists.Rows(0)("TimeIn").ToString + ":00"
                ServiceEnddatetime = Convert.ToDateTime(dtIfExists.Rows(0)("ServiceDateOut")).ToString("dd/MM/yyyy") + " " + dtIfExists.Rows(0)("TimeOut").ToString + ":00"

                If Convert.ToDateTime(startdatetime) >= Convert.ToDateTime(ServiceStartdatetime) And Convert.ToDateTime(startdatetime) <= Convert.ToDateTime(ServiceEnddatetime) Then
                    lblAlertTS.Text = "RECORD/S ALREADY EXIST WITHIN THE SAME TIME RANGE"
                    mdlViewTS.Show()
                    Return
                End If

                If Convert.ToDateTime(enddatetime) >= Convert.ToDateTime(ServiceStartdatetime) And Convert.ToDateTime(enddatetime) <= Convert.ToDateTime(ServiceEnddatetime) Then
                    lblAlertTS.Text = "RECORD/S ALREADY EXIST WITHIN THE SAME TIME RANGE"
                    mdlViewTS.Show()
                    Return
                End If

            End If



            If txtModeTS.Text = "New" Then

                'Dim command1 As MySqlCommand = New MySqlCommand

                'command1.CommandType = CommandType.Text

                'command1.CommandText = "SELECT ServiceDateIn,TimeIn,ServiceDateOut, TimeOut FROM tblServiceRecordStaffTimeSheet where RecordNo=@RecordNo and StaffID=@StaffID"
                'command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                'command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                'command1.Connection = conn

                'Dim dr As MySqlDataReader = command1.ExecuteReader()
                'Dim dt As New DataTable
                'dt.Load(dr)

                'If dt.Rows.Count > 0 Then

                '    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                '    lblAlert.Text = "NOTES ALREADY EXISTS"

                'Else

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "INSERT INTO tblServiceRecordStaffTimeSheet(RecordNo,StaffID,ServiceDateIn,TimeIn,ServiceDateOut, TimeOut,Duration,Comments,CreatedOn, CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@RecordNo,@StaffID,@ServiceDateIn, @TimeIn,@ServiceDateOut, @TimeOut,@Duration,@Comments,@CreatedOn,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                command.CommandText = qry
                command.Parameters.Clear()
                If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                    command.Parameters.AddWithValue("@RecordNo", txtRecordNoTS.Text)
                    command.Parameters.AddWithValue("@StaffID", txtStaffIDsTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceDateIn", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                    command.Parameters.AddWithValue("@TimeIn", txtTimeInTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceDateOut", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                    command.Parameters.AddWithValue("@TimeOut", txtTimeOutTS.Text)
                    command.Parameters.AddWithValue("@Duration", txtDurationTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@Comments", txtCommentsTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                    command.Parameters.AddWithValue("@RecordNo", txtRecordNoTS.Text)
                    command.Parameters.AddWithValue("@StaffID", txtStaffIDsTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceDateIn", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                    command.Parameters.AddWithValue("@TimeIn", txtTimeInTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceDateOut", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                    command.Parameters.AddWithValue("@TimeOut", txtTimeOutTS.Text)
                    command.Parameters.AddWithValue("@Duration", txtDurationTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@Comments", txtCommentsTS.Text.ToUpper)
                    command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                End If


                command.Connection = conn

                command.ExecuteNonQuery()
                txtRcnoTS.Text = command.LastInsertedId

                '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")


            ElseIf txtModeTS.Text = "Edit" Then
                If txtRcnoTS.Text = "" Then
                    '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                    lblAlertTS.Text = "SELECT RECORD TO EDIT"

                    Return

                End If



                'Dim command2 As MySqlCommand = New MySqlCommand

                'command2.CommandType = CommandType.Text
                'command2.CommandText = "SELECT KEYFIELD FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                'command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                'command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                'command2.Connection = conn

                'Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                'Dim dt1 As New DataTable
                'dt1.Load(dr1)

                'If dt1.Rows.Count > 0 Then

                '    lblAlertTS.Text = "NOTES ALREADY EXISTS"



                'Else

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT Staffid FROM tblServiceRecordStaffTimeSheet where rcno=" & Convert.ToInt32(txtRcnoTS.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "UPDATE tblServiceRecordStaffTimeSheet SET ServiceDateIn=@ServiceDateIn,TimeIn = @TimeIn, ServiceDateOut=@ServiceDateOut, TimeOut = @TimeOut, Duration = @Duration, Comments = @Comments ,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtRcnoTS.Text)

                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        'command.Parameters.AddWithValue("@RecordNo", txtRecordNoTS.Text)
                        'command.Parameters.AddWithValue("@StaffID", txtStaffIDsTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceDateIn", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@TimeIn", txtTimeInTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceDateOut", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@TimeOut", txtTimeOutTS.Text)
                        command.Parameters.AddWithValue("@Duration", txtDurationTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@Comments", txtCommentsTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        'command.Parameters.AddWithValue("@RecordNo", txtRecordNoTS.Text)
                        'command.Parameters.AddWithValue("@StaffID", txtStaffIDsTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceDateIn", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@TimeIn", txtTimeInTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceDateOut", Convert.ToDateTime(txtTimeInDateTS.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@TimeOut", txtTimeOutTS.Text)
                        command.Parameters.AddWithValue("@Duration", txtDurationTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@Comments", txtCommentsTS.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    End If

                    command.Connection = conn

                    command.ExecuteNonQuery()

                    '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")


                End If
            End If
            'End If



            If txtModeTS.Text = "New" Then
                lblMessageTS.Text = "ADD: TIME SHEET SUCCESSFULLY ADDED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV-TS", lblRecordNo.Text, "ADD SAVE TIME SHEET", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcnoTS.Text)
            ElseIf txtModeTS.Text = "Edit" Then
                lblMessageTS.Text = "EDIT: TIME SHEET SUCCESSFULLY UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV-TS", lblRecordNo.Text, "EDIT SAVE TIME SHEET", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcnoTS.Text)
            End If


            EnableControlsTS()
            txtModeTS.Text = ""
            conn.Close()
            lblAlertTS.Text = ""

            SqlDSTS1.SelectCommand = "select * from tblservicerecordstafftimesheet where RecordNo = '" + txtSvcRecord.Text + "' order by StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut"
            SqlDSTS1.DataBind()
            GridViewTS1.DataSourceID = "SqlDSTS1"
            GridViewTS1.DataBind()

            SqlDSTS2.SelectCommand = "select * from tblservicerecordstafftimesheet where RecordNo = '" + txtSvcRecord.Text + "' and StaffId='" & txtStaffIDsTS.Text & "'"
            SqlDSTS2.DataBind()
            GridViewTS2.DataSourceID = "SqlDSTS2"
            GridViewTS2.DataBind()



            ''
            CalculateTotalDurationTS()
            'Dim commandTotalDuration As MySqlCommand = New MySqlCommand

            'commandTotalDuration.CommandType = CommandType.Text

            'commandTotalDuration.CommandText = "SELECT sum(ifnull(Duration),0) as totalduration FROM tblServiceRecordStaffTimeSheetwhere RecordNo = '" + txtSvcRecord.Text + "'"
            'commandTotalDuration.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
            ''command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
            'commandTotalDuration.Connection = conn

            'Dim drTotalDuration As MySqlDataReader = commandTotalDuration.ExecuteReader()
            'Dim dtTotalDuration As New DataTable
            'dtTotalDuration.Load(drTotalDuration)

            'If dtTotalDuration.Rows.Count > 0 Then
            '    txtSumTotalDuration.Text = dtTotalDuration.Rows(0)("totalduration").ToString
            'End If


            ' ''
            'conn.Close()
            'conn.Dispose()
            'SqlDSTS2.SelectCommand = "select * from tblservicerecordstafftimesheet where RecordNo = '" + txtSvcRecord.Text + "' and StaffId='" & txtStaffIDsTS.Text & "'"
            'SqlDSTS2.DataBind()
            'GridViewTS2.DataBind()


            'mdlViewTS.Show()
            mdlViewTS.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("btnSaveTS_Click ADD SAVE", ex.Message.ToString, txtSvcRecord.Text)
            lblAlertTS.Text = ex.Message.ToString
            mdlViewTS.Show()
        End Try
    End Sub

    Private Sub CalculateTotalDurationTS()

        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
       
        Dim commandTotalDuration As MySqlCommand = New MySqlCommand

        commandTotalDuration.CommandType = CommandType.Text

            commandTotalDuration.CommandText = "SELECT ifnull(sum(ifnull(Duration,0)),0) as totalduration FROM tblServiceRecordStaffTimeSheet where RecordNo = '" + txtSvcRecord.Text + "'"
        commandTotalDuration.Parameters.AddWithValue("@recordno", lblRecordNo.Text)
        'command2.Parameters.AddWithValue("@desc", txtAreaDescription.Text)
        commandTotalDuration.Connection = conn

        Dim drTotalDuration As MySqlDataReader = commandTotalDuration.ExecuteReader()
        Dim dtTotalDuration As New DataTable
        dtTotalDuration.Load(drTotalDuration)

        If dtTotalDuration.Rows.Count > 0 Then
            txtSumTotalDuration.Text = dtTotalDuration.Rows(0)("totalduration").ToString
        End If


        ''
        conn.Close()
            conn.Dispose()
            drTotalDuration.Close()
            dtTotalDuration.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CalculateTotalDurationTS ADD SAVE", ex.Message.ToString, txtSvcRecord.Text)
            lblAlertTS.Text = ex.Message.ToString
            mdlViewTS.Show()
        End Try
    End Sub

    Protected Sub OnRowDataBoundTS2(sender As Object, e As GridViewRowEventArgs) Handles GridViewTS2.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridViewTS2, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnRowDataBound3", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub OnSelectedIndexChangedTS2(sender As Object, e As EventArgs) Handles GridViewTS2.SelectedIndexChanged
        Try


            For Each row As GridViewRow In GridViewTS2.Rows
                If row.RowIndex = GridViewTS2.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If

                If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                    If row.RowIndex = GridViewTS2.SelectedIndex Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If


                Else
                    If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                        If row.RowIndex = txtSelectedIndex.Text Then
                            row.BackColor = ColorTranslator.FromHtml("#00ccff")
                            row.ToolTip = String.Empty
                            txtSelectedIndex.Text = ""
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If


                    End If

                End If
            Next

            mdlViewTS.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("OnSelectedIndexChangedTS2", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnADDTS_Click(sender As Object, e As EventArgs) Handles btnADDTS.Click
        MakeMeNullTS()
        txtModeTS.Text = "New"
        DisableControlsTS()
        lblMessageTS.Text = "ACTION: ADD RECORD"

        txtTimeInTS.Focus()
        mdlViewTS.Show()
    End Sub

    Protected Sub btnEditTS_Click(sender As Object, e As EventArgs) Handles btnEditTS.Click
        If txtRcnoTS.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        DisableControlsTS()
        txtModeTS.Text = "Edit"
        lblMessageTS.Text = "ACTION: EDIT RECORD"
        txtSelectedIndexTS.Text = 0
        mdlViewTS.Show()
    End Sub

    Public Sub MakeMeNullTS()
        lblMessageTS.Text = ""
        lblAlertTS.Text = ""
        txtModeTS.Text = ""
        txtTimeInTS.Text = ""
        txtTimeOutTS.Text = ""
        txtDurationTS.Text = ""
        txtCommentsTS.Text = ""
        ' ddlcountry.Text = ""
        txtRcnoTS.Text = ""

        txtTimeInDateTS.Text = ""
        txtTimeOutDateTS.Text = ""
        'txtCreatedBy.Text = ""
        'txtCreatedOn.Text = ""
        '' txtLastModifiedBy.Text = ""
        'txtLastModifiedOn.Text = ""

    End Sub

    Private Sub EnableControlsTS()
        btnSaveTS.Enabled = False
        btnSaveTS.ForeColor = System.Drawing.Color.Gray
        'btnCancelTS.Enabled = False
        'btnCancelTS.ForeColor = System.Drawing.Color.Gray

        btnADDTS.Enabled = True
        btnADDTS.ForeColor = System.Drawing.Color.Black

        btnEditTS.Enabled = False
        btnEditTS.ForeColor = System.Drawing.Color.Gray
        btnDeleteTS.Enabled = False
        btnDeleteTS.ForeColor = System.Drawing.Color.Gray

        'btnQuit.Enabled = True
        'btnQuit.ForeColor = System.Drawing.Color.Black

        txtServiceDateTS.Enabled = False
        txtLocationIDTS.Enabled = False
        txtTimeInTS.Enabled = False
        txtTimeOutTS.Enabled = False
        txtDurationTS.Enabled = False
        txtCommentsTS.Enabled = False
        txtTimeInDateTS.Enabled = False
        txtTimeOutDateTS.Enabled = False


        txtActSvcDateTS.Enabled = False
        txtActSvcTimeFromTS.Enabled = False
        txtActSvcEndDateTS.Enabled = False
        txtActSvcTimeToTS.Enabled = False
        AccessControl()
    End Sub

    Private Sub DisableControlsTS()
        btnSaveTS.Enabled = True
        btnSaveTS.ForeColor = System.Drawing.Color.Black
        btnCancelTS.Enabled = True
        btnCancelTS.ForeColor = System.Drawing.Color.Black

        btnADDTS.Enabled = False
        btnADDTS.ForeColor = System.Drawing.Color.Gray

        btnEditTS.Enabled = False
        btnEditTS.ForeColor = System.Drawing.Color.Gray

        btnDeleteTS.Enabled = False
        btnDeleteTS.ForeColor = System.Drawing.Color.Gray

        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        txtTimeInTS.Enabled = True
        txtTimeOutTS.Enabled = True
        'txtDurationTS.Enabled = True
        txtCommentsTS.Enabled = True
        txtTimeInDateTS.Enabled = True
        txtTimeOutDateTS.Enabled = True
        'AccessControl()
    End Sub

    Protected Sub btnDeleteTS_Click(sender As Object, e As EventArgs) Handles btnDeleteTS.Click
        lblMessageTS.Text = ""
        If txtRcnoTS.Text = "" Then
            '  MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlertTS.Text = "SELECT RECORD TO DELETE"
            Return

        End If
        lblMessageTS.Text = "ACTION: DELETE RECORD"
        mdlPopupDeleteRecord.Show()
        mdlViewTS.Show()

        ''Dim confirmValue As String = Request.Form("confirm_value")
        ''If confirmValue = "Yes" Then



        ''   MessageBox.Message.Confirm(Page, "Do you want to delete the selected record?", "str", vbYesNo)
        ''If txtExists.Text = "True" Then
        ''    '  MessageBox.Message.Alert(Page, "Record is in use, cannot be deleted!!!", "str")
        ''    lblAlert.Text = "RECORD IS IN USE, CANNOT BE DELETED"
        ''    Return
        ''End If

        'Try
        '    Dim conn As MySqlConnection = New MySqlConnection()

        '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '    conn.Open()

        '    Dim command1 As MySqlCommand = New MySqlCommand

        '    command1.CommandType = CommandType.Text

        '    command1.CommandText = "SELECT * FROM tblcity where rcno=" & Convert.ToInt32(txtRcnoTS.Text)
        '    command1.Connection = conn

        '    Dim dr As MySqlDataReader = command1.ExecuteReader()
        '    Dim dt As New DataTable
        '    dt.Load(dr)

        '    If dt.Rows.Count > 0 Then

        '        Dim command As MySqlCommand = New MySqlCommand

        '        command.CommandType = CommandType.Text
        '        Dim qry As String = "delete from tblServiceRecordStaffTimeSheet where rcno=" & Convert.ToInt32(txtRcnoTS.Text)

        '        command.CommandText = qry
        '        command.Connection = conn
        '        command.ExecuteNonQuery()

        '        '   MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
        '        lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        '    End If
        '    conn.Close()
        '    conn.Dispose()
        '    dt.Dispose()
        '    dr.Close()
        '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "TIMESHEET", txtRecordNoTS.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtRcnoTS.Text)
        'Catch ex As Exception
        '    lblAlertTS.Text = ex.Message.ToString
        'End Try
        'EnableControlsTS()


        'GridViewTS2.DataSourceID = "SqlDSTS2"
        'MakeMeNullTS()
        'lblMessageTS.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        ''End If
    End Sub

    Protected Sub btnCancelTS_Click(sender As Object, e As EventArgs) Handles btnCancelTS.Click
        MakeMeNullTS()
        EnableControlsTS()
        mdlViewTS.Hide()
    End Sub

    Protected Sub txtTimeOutTS_TextChanged(sender As Object, e As EventArgs) Handles txtTimeOutTS.TextChanged
        'Dim dateTime1 As Date = Convert.ToDateTime(txtTimeOutTS.Text)
        'Dim dateTime2 As Date = Convert.ToDateTime(txtTimeInTS.Text)
        'Dim timeSpan As TimeSpan = dateTime1.Subtract(dateTime2)
        'txtDurationTS.Text = timeSpan.ToString

        Dim dFrom As DateTime
        Dim dTo As DateTime
        Dim sDateFrom As String = txtTimeInDateTS.Text & " " & txtTimeInTS.Text 'In your case get the time from the TextBox
        Dim sDateTo As String = txtTimeOutDateTS.Text & " " & txtTimeOutTS.Text
        If DateTime.TryParse(sDateFrom, dFrom) AndAlso DateTime.TryParse(sDateTo, dTo) Then
            Dim TS As TimeSpan = dTo - dFrom
            Dim hourts As Integer = TS.Hours
            Dim minsts As Integer = TS.Minutes
            Dim secsts As Integer = TS.Seconds
            txtDurationTS.Text = (hourts * 60 + minsts)
        End If


        mdlViewTS.Show()
    End Sub

    Protected Sub btnConfirmDeleteRecordTS_Click(sender As Object, e As EventArgs) Handles btnConfirmDeleteRecordTS.Click
        Try
            'mdlViewTS.Show()
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT Staffid FROM tblServiceRecordStaffTimeSheet where rcno=" & Convert.ToInt32(txtRcnoTS.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblServiceRecordStaffTimeSheet where rcno=" & Convert.ToInt32(txtRcnoTS.Text)

                command.CommandText = qry
                command.Connection = conn
                command.ExecuteNonQuery()

            End If
            conn.Close()
            conn.Dispose()
            dt.Dispose()
            dr.Close()
            CalculateTotalDurationTS()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "TIMESHEET", txtRecordNoTS.Text, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcnoTS.Text)
        Catch ex As Exception
            lblAlertTS.Text = ex.Message.ToString
        End Try
        EnableControlsTS()


        MakeMeNullTS()
        lblMessageTS.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        SqlDSTS1.SelectCommand = "select * from tblservicerecordstafftimesheet where RecordNo = '" + txtSvcRecord.Text + "' order by StaffID, ServiceDateIn, TimeIn, ServiceDateOut, TimeOut"
        SqlDSTS1.DataBind()
        GridViewTS1.DataSourceID = "SqlDSTS1"
        GridViewTS1.DataBind()

        SqlDSTS2.SelectCommand = "select * from tblservicerecordstafftimesheet where RecordNo = '" + txtSvcRecord.Text + "' and StaffId='" & txtStaffIDsTS.Text & "'"
        SqlDSTS2.DataBind()
        GridViewTS2.DataSourceID = "SqlDSTS2"
        GridViewTS2.DataBind()
        mdlViewTS.Show()

        'End If
    End Sub

    Protected Sub txtTimeInTS_TextChanged(sender As Object, e As EventArgs) Handles txtTimeInTS.TextChanged
        'Dim dateTime1 As Date = Convert.ToDateTime(txtTimeOutTS.Text)
        'Dim dateTime2 As Date = Convert.ToDateTime(txtTimeInTS.Text)
        'Dim timeSpan As TimeSpan = dateTime1.Subtract(dateTime2)
        'txtDurationTS.Text = timeSpan.ToString

        Dim dFrom As DateTime
        Dim dTo As DateTime
        'Dim sDateFrom As String = txtTimeInTS.Text 'In your case get the time from the TextBox
        'Dim sDateTo As String = txtTimeOutTS.Text

        Dim sDateFrom As String = txtTimeInDateTS.Text & " " & txtTimeInTS.Text 'In your case get the time from the TextBox
        Dim sDateTo As String = txtTimeOutDateTS.Text & " " & txtTimeOutTS.Text

        If DateTime.TryParse(sDateFrom, dFrom) AndAlso DateTime.TryParse(sDateTo, dTo) Then
            Dim TS As TimeSpan = dTo - dFrom
            Dim hourts As Integer = TS.Hours
            Dim minsts As Integer = TS.Minutes
            Dim secsts As Integer = TS.Seconds
            txtDurationTS.Text = (hourts * 60 + minsts)
        End If


        mdlViewTS.Show()
    End Sub


    Private Function ValidationTS() As Boolean
        Dim t As DateTime
        Dim d As Double
        Dim dt As Date
        Try
            If String.IsNullOrEmpty(txtTimeInDateTS.Text) = False Then
                If Date.TryParseExact(txtTimeInDateTS.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtTimeInDateTS.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                    lblAlertTS.Text = "TIME IN DATE IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtTimeOutDateTS.Text) = False Then
                If Date.TryParseExact(txtTimeOutDateTS.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtTimeOutDateTS.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Actual Service Date is invalid", "str")
                    lblAlertTS.Text = "TIME OUT DATE IS INVALID"
                    Return False
                    Exit Function
                End If
            End If

            If String.IsNullOrEmpty(txtTimeInTS.Text) = False Then
                If (DateTime.TryParse(txtTimeInTS.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                    lblAlertTS.Text = "TIME IN IS INVALID"
                    Return False
                    Exit Function
                End If
            End If
            If String.IsNullOrEmpty(txtTimeOutTS.Text) = False Then
                If (DateTime.TryParse(txtTimeOutTS.Text, t) = True) Then
                Else
                    'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                    lblAlertTS.Text = "TIME OUT IS INVALID"
                    Return False
                    Exit Function
                End If
            End If

          
          
            Return True
        Catch ex As Exception
            InsertIntoTblWebEventLog("ValidationTS", ex.Message.ToString, txtTechRcNo.Text)
            lblAlertTS.Text = ex.Message.ToString
            mdlViewTS.Show()
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function


    Protected Sub btnViewActionDone_Click(sender As Object, e As EventArgs)
        Try


            'If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
            '    lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
            '    Return
            'End If

            'lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            'lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(grdLastServiceDetails.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcnoAction.Text = lblidRcno

            Dim lsql As String
            lsql = ""
            lsql = "Select warranty, Reason, Material, Action, RemarkOffice, RemarkClient, ServiceArea, PricePerServiceArea, AreaCompleted, PriceOfAreaCompleted, BaitStationInstalled, PricePerBaitStation, TotalPriceForBaitStation  from tblservicerecorddet where RecordNo = (Select RecordNo from tblServiceRecord where Rcno = " & txtRcnoAction.Text.Trim & ")"


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = lsql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
              

                txtActionView.Text = dt.Rows(0)("Action").ToString
                txtRemarkOfficeView.Text = dt.Rows(0)("RemarkOffice").ToString
                txtRemarkClientView.Text = dt.Rows(0)("RemarkClient").ToString

                txtServiceAreaView.Text = dt.Rows(0)("ServiceArea").ToString
                txtPricePerServiceAreaView.Text = dt.Rows(0)("PricePerServiceArea").ToString
                txtAreaCompleted1View.Text = dt.Rows(0)("AreaCompleted").ToString
                txtTotalPriceOfAreaCompletedView.Text = dt.Rows(0)("PriceOfAreaCompleted").ToString
                txtNoofBaitStationView.Text = dt.Rows(0)("BaitStationInstalled").ToString
                txtPricePerBaitStaionView.Text = dt.Rows(0)("PricePerBaitStation").ToString
                txtTotalPriceofBaitStationView.Text = dt.Rows(0)("TotalPriceForBaitStation").ToString
                txtMaterialsView.Text = dt.Rows(0)("Material").ToString
            End If


            conn.Close()
            conn.Dispose()

            'updPanelService1.Update()
            ''RetrieveData()

            'GridView1.SelectedIndex = rowindex1

            ''Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
            'Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(27).Text


            'lblMessage.Text = ""

            'lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString

            'sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            'sqlDSViewEditHistory.DataBind()

            'grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            'grdViewEditHistory.DataBind()

            mdlViewActionDetails.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("btnEditHistory_Click", ex.Message.ToString, txtTechRcNo.Text)
        End Try

    End Sub

    Protected Sub chkDisplayforSameSite_CheckedChanged(sender As Object, e As EventArgs) Handles chkDisplayforSameSite.CheckedChanged
        RetrieveLastServiceDetails()
    End Sub

    Protected Sub grdLastServiceDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grdLastServiceDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                Dim txtName1 As Label = CType(e.Row.FindControl("txtReportDuration"), Label)

                'If ((String.IsNullOrEmpty(e.Row.Cells(4).Text) = True) Or (IsDBNull(e.Row.Cells(4).Text) = True)) Or ((String.IsNullOrEmpty(e.Row.Cells(5).Text) = True) Or (IsDBNull(e.Row.Cells(5).Text) = True)) Then
                If ((IsDate(e.Row.Cells(4).Text) = True)) And ((IsDate(e.Row.Cells(5).Text) = True)) Then

                  
                    Dim currentdate As DateTime = Convert.ToDateTime(e.Row.Cells(5).Text)
                    Dim currenthour As Integer = currentdate.Hour
                    Dim currentsecond As Integer = currentdate.Second
                    Dim currentminute As Integer = currentdate.Minute
                    Dim enddate As DateTime = Convert.ToDateTime(e.Row.Cells(4).Text)
                    Dim day1 As Integer = currentdate.Day
                    Dim day2 As Integer = enddate.Day
                    Dim totalday As Integer = day1 - day2
                    Dim endhour As Integer = enddate.Hour
                    Dim endminute As Integer = enddate.Minute
                    Dim endsecond As Integer = enddate.Second
                    Dim diffhour As Integer = currenthour - endhour
                    Dim diffminute As Integer = currentminute - endminute
                    Dim diffsecond As Integer = currentsecond - endsecond
                    'Dim totaldiff As String = totalday & ":" & diffhour & ":" & diffminute & ":" & diffsecond
                    Dim totaldiff As Integer = (totalday * 24 * 60) + diffhour * 60 + diffminute

                    Dim cell As TableCell = New TableCell()
                    cell.Text = totaldiff
                    txtName1.Text = cell.Text & ":00"
                Else
                    txtName1.Text = "00:00"

                End If


            End If
            'If e.Row.RowType = DataControlRowType.DataRow Then

            '    'TextBox txt1 = (Textbox)e.Row.FindControl("txtDateGVB");

            '    Dim txtName1 As TextBox = CType(e.Row.FindControl("txtDateGV"), TextBox)
            '    Dim txtName13 As TextBox = CType(e.Row.FindControl("txtDayGV"), TextBox)

            '    Dim txtName2 As TextBox = CType(e.Row.FindControl("txtMaxDateforEntryGV"), TextBox)

            '    Dim txtName3 As DropDownList = CType(e.Row.FindControl("ddlPartnerGV"), DropDownList)
            '    Dim txtName4 As ImageButton = CType(e.Row.FindControl("BtnCustomerGV"), ImageButton)
            '    Dim txtName5 As DropDownList = CType(e.Row.FindControl("txtForMonthQtrGV"), DropDownList)
            '    Dim txtName6 As DropDownList = CType(e.Row.FindControl("txtYearPeriodGV"), DropDownList)
            '    Dim txtName7 As DropDownList = CType(e.Row.FindControl("ddlJobTypeGV"), DropDownList)
            '    Dim txtName8 As DropDownList = CType(e.Row.FindControl("ddlJobDescriptionGV"), DropDownList)
            '    Dim txtName9 As TextBox = CType(e.Row.FindControl("txtRemarksGV"), TextBox)
            '    Dim txtName10 As TextBox = CType(e.Row.FindControl("txtJobHoursGV"), TextBox)

            '    Dim txtName11 As TextBox = CType(e.Row.FindControl("txtIsHolidayGV"), TextBox)
            '    Dim txtName12 As TextBox = CType(e.Row.FindControl("txtIsLeaveGV"), TextBox)


            'If Convert.ToDateTime(Now.ToString("dd/MM/yyyy")) > Convert.ToDateTime(txtName2.Text) Then
            '    txtName3.Enabled = False
            '    txtName4.Enabled = False
            '    txtName5.Enabled = False
            '    txtName6.Enabled = False
            '    txtName7.Enabled = False
            '    txtName8.Enabled = False
            '    txtName9.Enabled = False
            '    txtName10.Enabled = False
            'Else
            '    txtName3.Enabled = True
            '    txtName4.Enabled = True
            '    txtName5.Enabled = True
            '    txtName6.Enabled = True
            '    txtName7.Enabled = True
            '    txtName8.Enabled = True
            '    txtName9.Enabled = True
            '    txtName10.Enabled = True
            'End If

            ''If Convert.ToDateTime(Now.ToString("dd/MM/yyyy")) < Convert.ToDateTime(txtName1.Text) Then
            ''    txtName3.Enabled = False
            ''    txtName4.Enabled = False
            ''    txtName5.Enabled = False
            ''    txtName6.Enabled = False
            ''    txtName7.Enabled = False
            ''    txtName8.Enabled = False
            ''    txtName9.Enabled = False
            ''    txtName10.Enabled = False
            ''End If

            'If txtName11.Text = "H" Then
            '    txtName7.Text = "HOLIDAY"
            'End If

            'If txtName12.Text = "L" Then
            '    txtName7.Text = "LEAVE"
            'End If


            'If txtName11.Text = "H" Or txtName12.Text = "L" Or txtName7.Text = "LEAVE" Or txtName7.Text = "HOLIDAY" Or txtName7.Text = "ICAI Course" Then
            '    txtName1.ForeColor = Color.Red
            '    txtName13.ForeColor = Color.Red
            '    txtName7.ForeColor = Color.Red
            'End If

            'If txtName13.Text = "Sun" Then
            '    txtName1.ForeColor = Color.Red
            '    txtName13.ForeColor = Color.Red
            '    'txtName7.ForeColor = Color.Red
            'End If
            ''txtComments.Text = txtComments.Text + txtName1.Text

            'If txtIsSaturDayHoliday.Text = "Y" Then
            '    If txtName13.Text = "Sat" Then
            '        txtName1.ForeColor = Color.Red
            '        txtName13.ForeColor = Color.Red
            '        'txtName7.ForeColor = Color.Red
            '    End If
            'End If

            'updPnlBillingRecsNew.Update()
            'updpnlBillingDetails.Update()

            'For Each cell As DataControlFieldCell In e.Row.Cells
            '    ' check all cells in one row
            '    For Each control As Control In cell.Controls

            '        Dim button As ImageButton = TryCast(control, ImageButton)
            '        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
            '            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
            '            button.OnClientClick = "Confirm()"
            '        End If
            '    Next control

            'Next cell


            'End If



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub btnDownloadPestPhotos_Click(sender As Object, e As EventArgs) Handles btnDownloadPestPhotos.Click
        Dim conn As MySqlConnection = New MySqlConnection()
        Dim cmd As MySqlCommand = New MySqlCommand

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataImagesConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT * FROM tblservicephoto where recordno='" & lblRecordNo.Text & "' and ServiceRecordRcno='" & txtPestCountRcNo.Text & "'"

         command1.Connection = conn
        command1.Dispose()

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            Dim FilePath As String = ""
            Using zip As New ZipFile()
                zip.AlternateEncodingUsage = ZipOption.AsNecessary
                '  zip.AddDirectoryByName("Images")
                For i = 0 To dt.Rows.Count - 1

                    If IsDBNull(dt.Rows(i)("Photo")) = False Then
                        Dim theImage As System.Drawing.Image = Nothing

                        Dim bytes As Byte() = DirectCast(dt.Rows(i)("Photo"), Byte())

                        Dim filetype As String = dt.Rows(i)("FileType")
                        filetype = filetype.Substring(filetype.IndexOf("/") + 1)


                        Dim picturename As String = Convert.ToString(dt.Rows(i)("RcNo")) + "." + filetype

                        zip.AddEntry(picturename, bytes)

                    End If
                Next


                Response.Clear()
                Response.BufferOutput = False
                Dim zipName As String = [String].Format("Zip_{0}.zip", DateTime.Now.ToString("yyyy-MMM-dd_") + lblRecordNo.Text + "_" + txtPestCountRcNo.Text)
                Response.ContentType = "application/zip"
                Response.AddHeader("content-disposition", Convert.ToString("attachment; filename=") & zipName)
                zip.Save(Response.OutputStream)
                Response.[End]()
            End Using
        End If

        dt.Clear()
        dt.Dispose()
        dr.Close()
        command1.Dispose()

        conn.Close()
        conn.Dispose()
    End Sub

    Protected Sub btnEditManualContractNo_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditManualContractNo.Click
        txtEditOurRef.Text = txtOurRef.Text

        txtManualContractNoEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPoNo.Text
        txtWorkOrderNoEdit.Text = txtWorkOrderNo.Text
        txtManualContractNoEdit.Focus()

        mdlPopupManualContractPOWOEdit.Show()
    End Sub

    Protected Sub btnManualContractPoWoEditSave_Click(sender As Object, e As EventArgs) Handles btnManualContractPoWoEditSave.Click
        lblAlertManualContractPOWO.Text = ""
        lblMsgManualContractPOWO.Text = ""

        Try

            If String.IsNullOrEmpty(txtManualContractNoEdit.Text) = False Then
                If CheckIfExistsManualReportNo(txtManualContractNoEdit.Text) = True Then
                    lblAlertManualReportNo.Text = "MANUAL CONTRACT NO. ALREADY EXISTS"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    mdlPopupManualContractPOWOEdit.Show()
                    Exit Sub

                End If
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
            command1.CommandText = "UPDATE tblServiceRecord SET OurRef =@OurRef,  YourRef = @YourRef, PONo = @PONo, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where RecordNo = '" & txtSvcRecord.Text & "'"

            command1.Parameters.Clear()

            If String.IsNullOrEmpty(txtEditOurRef.Text.Trim) = True Then
                command1.Parameters.AddWithValue("@OurRef", "")
            Else
                command1.Parameters.AddWithValue("@OurRef", txtEditOurRef.Text.ToUpper)
            End If

            If String.IsNullOrEmpty(txtManualContractNoEdit.Text.Trim) = True Then
                command1.Parameters.AddWithValue("@YourRef", "")
            Else
                command1.Parameters.AddWithValue("@YourRef", txtManualContractNoEdit.Text.ToUpper)
            End If

            If String.IsNullOrEmpty(txtPONoEdit.Text.Trim) = True Then
                command1.Parameters.AddWithValue("@PONo", "")
            Else
                command1.Parameters.AddWithValue("@PONo", txtPONoEdit.Text.ToUpper)
            End If

            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()



            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text
            'command1.CommandText = "UPDATE tblServiceRecord SET OurRef = @OurRef,LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and Status = 'O'"
            command2.CommandText = "UPDATE tblServiceRecord2 SET WorkOrderNo = @WorkOrderNo where RecordNo = '" & txtSvcRecord.Text & "'"

            command2.Parameters.Clear()

            If String.IsNullOrEmpty(txtWorkOrderNoEdit.Text.Trim) = True Then
                command2.Parameters.AddWithValue("@WorkOrderNo", "")
            Else
                command2.Parameters.AddWithValue("@WorkOrderNo", txtWorkOrderNoEdit.Text.ToUpper)
            End If

        
            'command2.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command2.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            command2.Connection = conn

            command2.ExecuteNonQuery()
            command2.Dispose()
            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command1.Dispose()

            txtOurRef.Text = txtEditOurRef.Text.ToUpper
            txtYourRef.Text = txtManualContractNoEdit.Text.ToUpper
            txtPoNo.Text = txtPONoEdit.Text.ToUpper
            txtWorkOrderNo.Text = txtWorkOrderNoEdit.Text.ToUpper

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERV", lblRecordNo.Text, "EDIT MANUAL Contract, PO, Work Order No.", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtRcno.Text)

            conn.Close()


            SqlDataSource1.SelectCommand = txt.Text
            SqlDataSource1.DataBind()
            GridView1.DataBind()



        Catch ex As Exception
            InsertIntoTblWebEventLog("btnManualContractPoWoEditSave_Click", ex.Message.ToString, txtSvcRecord.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditPONo_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditPONo.Click
        txtEditOurRef.Text = txtOurRef.Text

        txtManualContractNoEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPoNo.Text
        txtWorkOrderNoEdit.Text = txtWorkOrderNo.Text
        txtPONoEdit.Focus()
        mdlPopupManualContractPOWOEdit.Show()
    End Sub

    Protected Sub btnEditWorkOrderNo_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditWorkOrderNo.Click
        txtEditOurRef.Text = txtOurRef.Text
        txtManualContractNoEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPoNo.Text
        txtWorkOrderNoEdit.Text = txtWorkOrderNo.Text
        txtWorkOrderNoEdit.Focus()
        mdlPopupManualContractPOWOEdit.Show()
    End Sub
End Class


Public Class servicerecordtest
    Public Property ServiceBy() As String
    Public Property SchServiceDate() As Date
    Public Property SchServiceDateText() As Date
    Public Property ServiceDate() As Date
    Public Property ServiceDateText() As Date
    Public Property TimeIn() As String
    Public Property TimeOut() As String
    Public Property ServiceName() As String
    Public Property Comments() As String
    Public Property Notes() As String
    Public Property RecordNo() As String
    Public Property Address1() As String
    Public Property Status() As String
    Public Property contractno() As String
    Public Property RcNo() As Integer
    Public Property Count() As Integer
    Public Property TeamID() As String
    Public Property ServiceDescription() As String
    Public Property LockSt() As String
    Public Property statusSummary() As String
    Public Property appointmentsCount() As Integer
End Class
Public Class ServiceByModel
    Public Property Count() As Integer
    Public Property ServiceBy() As String
End Class
Public Class TeamSeach
    Public Property TeamId() As String
    Public Property TeamName() As String
    Public Property InChargeId() As String
    Public Property Vehnos() As String
    Public Property Supervisor() As String
    Public Property Status() As String
    Public Property Location() As String
End Class

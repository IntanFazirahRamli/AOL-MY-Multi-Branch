Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Web.UI.WebControls
Imports System.Web
Imports System.Drawing
Imports System.Text
' Include this namespace if it is not already there

Imports System.Globalization
Imports System.Threading

Imports NPOI.HSSF.UserModel
Imports NPOI.SS.UserModel
Imports NPOI.SS.Util
Imports NPOI.XSSF.UserModel

Imports Microsoft.VisualBasic
Imports System
Imports System.Collections
Imports System.ComponentModel
Imports System.Reflection

Imports System.Web.Services
Imports System.Net
Imports System.IO
Imports System.Net.Http
Imports System.Net.Http.Headers
Imports System.Security.Cryptography
Imports System.Web.Script.Serialization
Imports System.Security.Cryptography.X509Certificates
Imports System.Threading.Tasks
Imports EInvoicing.EInvoice
Imports Microsoft.IdentityModel.Clients.ActiveDirectory
Imports Newtonsoft.Json
Imports Newtonsoft.Json.Serialization


Partial Class CN1
    Inherits System.Web.UI.Page
    Public rcno As String
    Private Shared GridSelected As String = String.Empty
    Private Shared gScheduler, gddlvalue As String
    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String
    'Public rcno As String

    Public TotDetailRecords As Integer

    Dim gSeq As String
    Dim gServiceDate As Date

    Dim rowdeleted As String
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer

    Dim mode As String
    Dim vStrStatus As String

    Public HasDuplicateTarget As Boolean
    Public HasDuplicateLocaion As Boolean
    Public HasDuplicateServices As Boolean
    Public HasDuplicateFrequency As Boolean
    Public xgrvBillingDetails As GridViewRow
    Public sqltext As String

    Public lGLCode As String
    Public lGLDescription As String
    Public lCreditAmount As Decimal

    Public IsSuccess As Boolean

    Public Message As String = String.Empty
    ' To store the Error or Message

    Private Word As Microsoft.Office.Interop.Word.ApplicationClass
    ' The Interop Object for Word
    Private Excel As Microsoft.Office.Interop.Excel.ApplicationClass
    ' The Interop Object for Excel
    Private Unknown As Object = Type.Missing
    ' For passing Empty values
    Public Enum StatusType
        SUCCESS
        FAILED
    End Enum
    ' To Specify Success or Failure Types
    Public Status As StatusType
    Shared random As New Random()

    Protected Sub Page_Init(sender As Object, e As EventArgs) Handles Me.Init
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1))
        Response.Cache.SetNoStore()
    End Sub

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        'Dim Query As String

        'Restrict users manual date entries

        'txtAccountIdBilling.Attributes.Add("readonly", "readonly")
        Try
            txtAccountName.Attributes.Add("readonly", "readonly")
            'txtContactPerson.Attributes.Add("readonly", "readonly")

            txtBillAddress.Attributes.Add("readonly", "readonly")
            txtBillBuilding.Attributes.Add("readonly", "readonly")
            txtBillStreet.Attributes.Add("readonly", "readonly")
            txtBillCity.Attributes.Add("readonly", "readonly")
            txtBillState.Attributes.Add("readonly", "readonly")

            txtBillCountry.Attributes.Add("readonly", "readonly")
            txtBillPostal.Attributes.Add("readonly", "readonly")
            'txtTotal.Attributes.Add("readonly", "readonly")
            'txtTaxRatePct.Attributes.Add("readonly", "readonly")

            txtCNNo.Attributes.Add("readonly", "readonly")
            txtReceiptPeriod.Attributes.Add("readonly", "readonly")
            txtCompanyGroup.Attributes.Add("readonly", "readonly")
            ddlContactType.Attributes.Add("readonly", "readonly")
            'txtSalesman.Attributes.Add("readonly", "readonly")
            'txtBankGLCode.Attributes.Add("readonly", "readonly")
            'txtChequeNo.Attributes.Add("readonly", "readonly")
            'txtChequeDate.Attributes.Add("readonly", "readonly")

            'txtInvoiceAmount.Attributes.Add("readonly", "readonly")
            'txtDiscountAmount.Attributes.Add("readonly", "readonly")
            'txtAmountWithDiscount.Attributes.Add("readonly", "readonly")

            'txtGSTAmount.Attributes.Add("readonly", "readonly")
            'txtNetAmount.Attributes.Add("readonly", "readonly")

            'txtCreatedOn.Attributes.Add("readonly", "readonly")
            'txtServTimeOut.Attributes.Add("onchange", "getTheDiffTime()")
            txtCreditDays.Attributes.Add("readonly", "readonly")

            txtCNDate.Attributes.Add("readonly", "readonly")

            txtCNAmount.Attributes.Add("readonly", "readonly")
            txtCNGSTAmount.Attributes.Add("readonly", "readonly")
            txtGST1.Attributes.Add("readonly", "readonly")
            btnTop.Attributes.Add("onclick", "javascript:scroll(0,0);return false;")
        
            If Not Page.IsPostBack Then
                mdlPopUpClient.Hide()
                mdlImportInvoices.Hide()
                'mdlImportServices.Hide()
                mdlPopupGL.Hide()

                tb1.ActiveTabIndex = 0

                Dim Query As String


                Query = "SELECT companygroup FROM tblcompanygroup order by companygroup"
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrp)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpSearch)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpII)

                Query = "Select StaffID from tblStaff where Status = 'O' and Roles <> 'TECHNICAL'"
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchEditedBy)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchCreatedBy)

                Query = "Select TaxType from tbltaxtype where ARIN = True order by taxtype"
                PopulateDropDownList(Query, "TaxType", "TaxType", txtGST)


                Query = "SELECT Terms FROM tblTerms ORDER BY Seq"
                PopulateDropDownList(Query, "Terms", "Terms", ddlCreditTerms)

                'SELECT UPPER(Terms) FROM tblTerms ORDER BY Seq
                Query = "SELECT StaffId FROM tblstaff where roles= 'SALES MAN' ORDER BY STAFFID"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanBilling)

                'SELECT StaffId FROM tblstaff where roles= 'SALES MAN' ORDER BY STAFFID
                Query = "SELECT contractgroup FROM tblcontractgroup where Active = 'Y'  ORDER BY contractgroup"
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupBilling)
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroup)
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupIS)


                Query = "SELECT contractgroup FROM tblcontractgroup ORDER BY contractgroup"
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupBilling)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroup)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupIS)

                'SELECT UPPER(contractgroup) FROM tblcontractgroup ORDER BY contractgroup
                Query = "SELECT Frequency FROM tblServiceFrequency order by Frequency"
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlServiceFrequency)


                Query = "SELECT Frequency FROM tblFrequency  order by Frequency "
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFrequency)


                SqlDSGL.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts order by COACode"
                SqlDSGL.DataBind()

                'SELECT Frequency FROM tblFrequency  order by Frequency 
                'SELECT Frequency FROM tblServiceFrequency order by Frequency 

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                'Dim sql As String
                'sql = ""
                ''sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"

                'If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) = "SINGAPORE" Then
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                '    txtGST.Text = "SR"
                'Else
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                '    txtGST.Text = "ZR"
                'End If

                'txtGSTSelected.Text = txtGST.Text

                'Dim command1 As MySqlCommand = New MySqlCommand
                'command1.CommandType = CommandType.Text
                'command1.CommandText = sql
                'command1.Connection = conn

                'Dim dr As MySqlDataReader = command1.ExecuteReader()

                'Dim dt As New DataTable
                'dt.Load(dr)

                'If dt.Rows.Count > 0 Then
                '    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                'End If
                Dim sql As String


                sql = ""
                sql = "Select COACode, COADescription from tblbillingproducts where ProductCode = 'CN-REVENUE'"

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = sql
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()

                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("COACode").ToString <> "" Then : txtGLCodeIS.Text = dt2.Rows(0)("COACode").ToString : End If
                    If dt2.Rows(0)("COACode").ToString <> "" Then : txtGLCodeII.Text = dt2.Rows(0)("COACode").ToString : End If

                    If dt2.Rows(0)("COADescription").ToString <> "" Then : txtLedgerNameIS.Text = dt2.Rows(0)("COADescription").ToString : End If
                    If dt2.Rows(0)("COADescription").ToString <> "" Then : txtLedgerNameII.Text = dt2.Rows(0)("COADescription").ToString : End If
                End If



                ''''''''''''''''''''''''''''''''''''''''''''''''
                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                commandServiceRecordMasterSetup.CommandText = "SELECT ShowCNOnScreenLoad, CNRecordMaxRec,DisplayRecordsLocationWise,PostCN, CreditNoteOnlyEditableByCreator, DebitNoteOnlyEditableByCreator, DefaultTaxCode,AutoEmailCreditNote,AutoEmailDebitNote,DisabledEInvoicing,MalaysiaEinvoicing FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("CNRecordMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString
                txtPostUponSave.Text = dtServiceRecordMasterSetup.Rows(0)("PostCN").ToString
                txtOnlyEditableByCreatorCN.Text = dtServiceRecordMasterSetup.Rows(0)("CreditNoteOnlyEditableByCreator").ToString
                txtOnlyEditableByCreatorDN.Text = dtServiceRecordMasterSetup.Rows(0)("DebitNoteOnlyEditableByCreator").ToString
                txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode").ToString
                If dtServiceRecordMasterSetup.Rows(0)("AutoEmailCreditNote").ToString = "1" Then
                    txtAutoEmailCreditNote.Text = "True"
                Else
                    txtAutoEmailCreditNote.Text = "False"
                End If
                If dtServiceRecordMasterSetup.Rows(0)("AutoEmailDebitNote").ToString = "1" Then
                    txtAutoEmailDebitNote.Text = "True"
                Else
                    txtAutoEmailDebitNote.Text = "False"
                End If
                '''''''''''''''

                txtDisabledEInvoicing.Text = dtServiceRecordMasterSetup.Rows(0)("DisabledEInvoicing").ToString
                txtMalaysiaEinvoicing.Text = dtServiceRecordMasterSetup.Rows(0)("MalaysiaEinvoicing").ToString

                sql = ""


                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                txtGST.Text = txtDefaultTaxCode.Text

                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                'txtGST.Text = "ZR"


                txtGSTSelected.Text = txtGST.Text

                sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                End If


                '''''''''''''


                conn.Close()
                conn.Dispose()

                command1.Dispose()
                command2.Dispose()
                dt.Dispose()
                dt2.Dispose()
                dtServiceRecordMasterSetup.Dispose()

                dr.Close()
                dr2.Close()
                ''''''''''''''''''''''''''''''''''''''''''
                'conn.Close()

                '''''''''''''''''''''''

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    Query = "select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "' order by LocationID"
                    'PopulateDropDownList(query, "locationID", "locationID", txtLocation)
                    PopulateComboBoxSaplin(Query, "locationID", "locationID", ddlLocationSearch)


                    Query = "select Status from tblinvoicestatus where rcno <> 0"
                    'PopulateDropDownList(query, "locationID", "locationID", txtLocation)
                    PopulateComboBoxSaplin(Query, "Status", "Status", ddlInvoiceStatusSearch)

                    lblBranch1.Visible = True
                    txtLocation.Visible = True

                    lblBranch.Visible = True
                    ddlBranch.Visible = False
                    ddlLocationSearch.Visible = True
                    ddlInvoiceStatusSearch.Visible = True

                Else
                    lblBranch1.Visible = False
                    txtLocation.Visible = False

                    lblBranch.Visible = False
                    ddlBranch.Visible = False
                    ddlLocationSearch.Visible = False
                    ddlInvoiceStatusSearch.Visible = False

                End If


                ''''''''''''''''''''''''''''''''''
                MakeMeNull()
                DisableControls()
                PopulateArCode()
                txt.Text = SQLDSCN.SelectCommand

                txtGroupAuthority.Text = Session("SecGroupAuthority")
                txtSearch1Status.Text = "O,P"
                '''''''''''''''''''''''
                Session.Add("customerfrom", Request.QueryString("CustomerFrom"))
                If String.IsNullOrEmpty(Session("customerfrom")) = False Then
                    Session.Add("invoiceno", Request.QueryString("VoucherNumber"))
                    If Request.QueryString("VoucherNumber") <> "" Then
                        txtReceiptnoSearch.Text = Session("invoiceno")
                        txtFrom.Text = Session("customerfrom")

                        btnQuickSearch_Click(sender, e)
                        Session.Remove("invoiceno")
                        Session.Remove("customerfrom")

                        btnQuit.Text = "BACK"
                        ''''' Retrieve rcno for the Invoice 

                        ''''' Retrieve rcno for the Invoice 
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                    End If
                    Exit Sub
                End If

                ''''''''''''''''''''''''''
                If Session("receiptfrom") = "invoice" Then
                    'txtInvoiceNoSearch.Text = Session("invoiceno")
                    'sqltext = "SELECT A.PostStatus, A.BankStatus, A.GlStatus, A.CNNumber, A.CNDate, A.AccountId, A.AppliedBase, A.GSTAmount, A.BaseAmount, A.CustomerName,  A.NetAmount, A.GlPeriod, A.CompanyGroup, A.ContactType, A.Cheque, A.ChequeDate, A.BankId,  A.LedgerCode, A.LedgerName, A.Comments, A.PaymentType, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno FROM tblCN A, tblCNdet B where A.CNNumber = B.CNNumber and B.InvoiceNo = '" & txtReceiptnoSearch.Text & "' ORDER BY Rcno DESC, CustomerName"
                    'SQLDSCN.SelectCommand = sqltext
                    'btnBack.Visible = True
                    'btnQuit.Visible = False
                ElseIf Session("cnfrom") = "invoice" Then
                    txtInvoiceNoSearch.Text = Session("invoiceno")
                    'txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo,   Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, LedgerCode, LedgerName, PrintCounter FROM tblsales  WHERE 1=1  "
                    'txtCondition.Text = " and (DocType='ARCN' or DocType='ARDN')  AND (PostStatus = 'O' OR PostStatus = 'P') and  InvoiceNumber = '" & txtReceiptnoSearch.Text & "'"


                    txt.Text = "SELECT distinct a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1,    "
                    txt.Text = txt.Text + " a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.ValueBase, a.ValueOriginal, a.GstBase, a.GstOriginal, a.AppliedBase,    "
                    txt.Text = txt.Text + " a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.YourRef, a.Terms, a.DiscountAmount,    "
                    txt.Text = txt.Text + " a.GSTAmount, a.NetAmount, a.GlPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Comments, a.AmountWithDiscount,    "
                    txt.Text = txt.Text + " a.TermsDay, a.RecurringInvoice, a.ReceiptBase, a.CreditBase, a.BalanceBase, a.StaffCode, a.CustAddress1, a.CustAddCountry,    "
                    txt.Text = txt.Text + " a.CustAddPostal, a.LedgerCode, a.LedgerName, a.CreatedBy, a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.rcno, a.BillSchedule, a.PrintCounter, a.Location,a.TaxIdentificationNo,a.SalesTaxRegistrationNo, a.EI, a.EInvoiceStatus, a.UUID,a.SubmissionDate,a.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), a.submissiondate))>0),(71-HOUR(TIMEDIFF(now(), a.submissiondate))),0) as TimeToCancel "
                    'txt.Text = txt.Text + " FROM tblsales a, tblSalesDetail b WHERE 1=1   "
                    txt.Text = txt.Text + " FROM tblsales a Left OUTER join  tblSalesDetail b on a.InvoiceNumber=b.InvoiceNumber WHERE 1=1   "

                    txtCondition.Text = " and (a.DocType='ARCN' or a.DocType='ARDN')  "
                    txtCondition.Text = txtCondition.Text & " and a.InvoiceNumber = b.InvoiceNumber  "
                    txtCondition.Text = txtCondition.Text & " AND (a.PostStatus = 'O' OR a.PostStatus = 'P') and "
                    txtCondition.Text = txtCondition.Text & " AND b.SourceInvoice= '" & txtInvoiceNoSearch.Text & "' "

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') "

                    End If
                    txtOrderBy.Text = " ORDER BY Rcno DESC, CustName "

                    txt.Text = txt.Text + txtCondition.Text + txtOrderBy.Text
                    sqltext = txt.Text


                    txtFrom.Text = Session("cnfrom")

                    btnQuickSearch_Click(sender, e)
                    Session.Remove("invoiceno")
                    Session.Remove("cnfrom")

                    btnQuit.Text = "BACK"
                    ''''' Retrieve rcno for the Invoice 

                    ''''' Retrieve rcno for the Invoice 
                    GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                Else
                    'sqltext = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman  Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, LedgerCode, LedgerName FROM tblsales WHERE (DocType='ARCN' or DocType='ARDN')  AND (PostStatus = 'O' OR PostStatus = 'P') and  GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) ORDER BY Rcno DESC, CustName;"
                    'SQLDSCN.SelectCommand = sqltext
                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("ShowCNOnScreenLoad")) = False Then
                        txt.Text = ""
                        SQLDSCN.SelectCommand = ""
                        GridView1.DataSourceID = "SQLDSCN"
                        GridView1.DataBind()
                    Else
                        txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman  Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, LedgerCode, LedgerName, PrintCounter, Location,TaxIdentificationNo,SalesTaxRegistrationNo, EI, EInvoiceStatus, UUID,SubmissionDate,SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel  FROM tblsales a WHERE 1=1  "

                        'txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman  Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, LedgerCode, LedgerName, PrintCounter, Location   "
                        'txt.Text = txt.Text + " FROM tblsales a Left OUTER join  tblSalesDetail b on a.InvoiceNumber=b.InvoiceNumber WHERE 1=1   "

                        txtCondition.Text = " and (DocType='ARCN' or DocType='ARDN')  AND (PostStatus = 'O' OR PostStatus = 'P') and  GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) "

                        If txtDisplayRecordsLocationwise.Text = "Y" Then
                            txtCondition.Text = txtCondition.Text & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') "

                        End If
                        txtOrderBy.Text = " ORDER BY Rcno DESC, CustName "

                        txt.Text = txt.Text + txtCondition.Text + txtOrderBy.Text
                        sqltext = txt.Text

                        SQLDSCN.SelectCommand = sqltext
                        CalculateTotal()
                    End If

                End If

                SQLDSCN.DataBind()
                GridView1.DataBind()

                '19.12.22
                'FindGSTPct()
                FindDefaultGSTPct()
                '19.12.22

                If String.IsNullOrEmpty(txt.Text) = True And String.IsNullOrEmpty(txt.Text) = True Then
                    SqlDSMultiPrint.SelectCommand = ""

                    grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    grdViewMultiPrint.DataBind()

                Else
                    SqlDSMultiPrint.SelectCommand = txt.Text

                    grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    grdViewMultiPrint.DataBind()

                End If


                txtLocation.Attributes.Add("disabled", "true")
                txtCreatedBy.Text = Session("userid")
                'FindLocation()

                'updPnlBillingRecs.Update()
            Else
                If txtIsPopup.Text = "Team" Then
                    txtIsPopup.Text = "N"
                    'mdlPopUpTeam.Show()
                ElseIf txtIsPopup.Text = "Client" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient.Show()
                End If

                If txtSearch.Text = "ImportService" Then
                    mdlPopUpClient.Show()
                End If

                If txtIsPopup.Text = "ContractNo" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpContractNo.Show()
                End If

                If txtSearch.Text = "ImportInvoice" Then
                    mdlPopUpClient.Show()
                End If
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "Page_Load", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindGSTPct()
        Try
            Dim sql As String

            sql = ""

            'sql = "Select GSTRate from tblperiod where GStType = '" & txtDefaultTaxCode.Text & "' and AccountingPeriod = '" & txtReceiptPeriod.Text & "'"

            If String.IsNullOrEmpty(txtGST.Text) = True Then
                sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Else
                sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtGST.Text & "'"
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandGSTPct As MySqlCommand = New MySqlCommand
            commandGSTPct.CommandType = CommandType.Text
            commandGSTPct.CommandText = sql
            commandGSTPct.Connection = conn

            Dim drGSTPct As MySqlDataReader = commandGSTPct.ExecuteReader()

            Dim dtGSTPct As New DataTable
            dtGSTPct.Load(drGSTPct)

            If dtGSTPct.Rows.Count > 0 Then
                If dtGSTPct.Rows(0)("GSTRate").ToString <> "" Then : txtTaxRatePct.Text = dtGSTPct.Rows(0)("GSTRate").ToString : End If
                txtGST1.Text = txtTaxRatePct.Text
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FindGSTPct", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub CalculateTotal()
        Try
            Dim sqlstr As String
            sqlstr = ""

            'sqlstr = "SELECT ifnull(Sum(b.AppliedBase),0) as totalamount FROM tblSales a, tblSalesDetail b where 1=1 " + txtCondition.Text

            sqlstr = "SELECT ifnull(Sum(a.AppliedBase),0) as totalamount FROM tblsales a WHERE 1=1  " + txtCondition.Text

            'strsql = strsql + " FROM tblsales a Left OUTER join  tblSalesDetail b on a.InvoiceNumber=b.InvoiceNumber WHERE 1=1   "

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)
            'Convert.ToDecimal(tot.ToString()).ToString("N2")
            If dt.Rows.Count > 0 Then
                txtTotalInvoiceAmount.Text = Convert.ToDecimal(dt.Rows(0)("totalamount").ToString()).ToString("N2")
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "CalculateTotal", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        '      InsertIntoTblWebEventLog("CN", "RowDataBound", "1", txtCreatedBy.Text)
        If e.Row.RowType = DataControlRowType.DataRow Then
            If e.Row.Cells(11).Text = "COMPANY" Then
                e.Row.Cells(11).Text = "CORPORATE"
            Else
                e.Row.Cells(11).Text = "RESIDENTIAL"
            End If
        End If
        '    InsertIntoTblWebEventLog("CN", "RowDataBound", "2", txtCreatedBy.Text)

    End Sub

    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        ''Dim cultureInfo As CultureInfo = Thread.CurrentThread.CurrentCulture
        ''Dim objTextInfo As TextInfo = cultureInfo.TextInfo


        lblAlert.Text = ""
        lblMessage.Text = ""



        If txtMode.Text = "NEW" Or txtMode.Text = "EDIT" Then
            lblAlert.Text = "CANNOT SELECT RECORD IN ADD/EDIT MODE. SAVE OR CANCEL TO PROCEED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If

        '    Try
        Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
        MakeMeNull()
        MakeMeNullBillingDetails()

        txtMode.Text = "View"

        'grvBillingDetails.ShowHeader = False
        'grvBillingDetails.Visible = False

        'btnSvcEdit.Enabled = False
        'btnSvcDelete.Enabled = False

        'btnSvcEdit.Enabled = False
        'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        'btnSvcDelete.Enabled = False
        'btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        Dim editindex As Integer = GridView1.SelectedIndex

        '
        txtRcno.Text = 0

        If txtFrom.Text = "Corporate" Or txtFrom.Text = "Residential" Then
            'txtRcno.Text = Session("rcnoinv")
            'Session.Remove("rcnoinv")
            ''txtRcno.Text = Session("rcnoinv")
            FindRcno(txtReceiptnoSearch.Text)
            'Session.Remove("customerfrom")
            ddlSalesmanBilling.SelectedIndex = -1
            ddlCreditTerms.SelectedIndex = -1
        Else
            'rcno = DirectCast(GridView1.Rows(editindex).FindControl("Label1"), Label).Text
            'txtComments.Text = GridView1.SelectedRow.Cells(1).Text.Trim


            If GridView1.Rows.Count > 0 Then
                txtRcno.Text = GridView1.SelectedRow.Cells(1).Text.Trim
            Else
                Exit Sub
            End If
            'txtRcno.Text = GridView1.SelectedRow.Cells(1).Text.Trim
        End If



        PopulateRecord()
        If tb1.ActiveTabIndex = 1 Then
            tb1.ActiveTabIndex = 0
        End If

        InsertIntoTblWebEventLog("PopulateRecord1", txtDisabledEInvoicing.Text, txtECNStatus.Text, txtCreatedBy.Text)
        InsertIntoTblWebEventLog("PopulateRecord2", txtTimeToCancel.Text, txtTIN.Text, txtEI.Text)

        If String.IsNullOrEmpty(txtTIN.Text) = False Then
            UpdateEInvoiceEI(txtCNNo.Text)

        End If

        InsertIntoTblWebEventLog("PopulateRecord2", txtEI.Text, txtTIN.Text, txtCreatedBy.Text)


        If txtDisabledEInvoicing.Text = True Then
            '  btnPostECN.Visible = False
        Else
            '  btnPostECN.Visible = True

            If txtECNStatus.Text = "VALID" Then
                btnPostECN.Text = "CANCEL E-CN/DN"
                InsertIntoTblWebEventLog("PopulateRecord3", txtTimeToCancel.Text, txtECNStatus.Text, txtCreatedBy.Text)
                If Convert.ToInt16(txtTimeToCancel.Text) = 0 Then
                    btnPostECN.Enabled = False
                    btnPostECN.Forecolor = System.Drawing.Color.Gray
                Else
                    btnPostECN.Enabled = True
                    btnPostECN.Forecolor = System.Drawing.Color.Black
                End If
                btnPrint.Enabled = True
                btnPrint.Forecolor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.Forecolor = System.Drawing.Color.Black

                btnReverse.Enabled = False
                btnReverse.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

            ElseIf txtECNStatus.Text = "APPROVED" Then
                btnPostECN.Text = "SUBMIT E-CN/DN"
                InsertIntoTblWebEventLog("PopulateRecord31", txtTimeToCancel.Text, txtECNStatus.Text, txtCreatedBy.Text)

                btnPostECN.Enabled = False
                btnPostECN.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

            ElseIf txtECNStatus.Text = "INVALID" Then
                btnPostECN.Text = "SUBMIT E-CN/DN"
                InsertIntoTblWebEventLog("PopulateRecord31", txtTimeToCancel.Text, txtECNStatus.Text, txtCreatedBy.Text)

                btnPostECN.Enabled = True
                btnPostECN.Forecolor = System.Drawing.Color.Black

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

            ElseIf txtECNStatus.Text = "POSTED NOT YET APPROVED" Then
                InsertIntoTblWebEventLog("PopulateRecord4", txtEI.Text, txtECNStatus.Text, txtCreatedBy.Text)

                btnPostECN.Enabled = False
                btnPostECN.Forecolor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

            ElseIf txtECNStatus.Text = "CANCELLED" Then
                InsertIntoTblWebEventLog("PopulateRecord7", txtEI.Text, txtECNStatus.Text, txtCreatedBy.Text)

                btnPostECN.Enabled = False
                btnPostECN.Forecolor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray


            Else
                If txtEI.Text = "Y" Then
                    InsertIntoTblWebEventLog("PopulateRecord5", txtEI.Text, txtECNStatus.Text, txtCreatedBy.Text)

                    btnPostECN.Text = "SUBMIT E-CN/DN"
                    '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtECNStatus.Text, txtCreatedBy.Text)

                    btnPostECN.Enabled = True
                    btnPostECN.Forecolor = System.Drawing.Color.Black

                    btnPrint.Enabled = False
                    btnPrint.Forecolor = System.Drawing.Color.Gray

                    btnMultiPrint.Enabled = False
                    btnMultiPrint.Forecolor = System.Drawing.Color.Gray
                Else
                    InsertIntoTblWebEventLog("PopulateRecord6", txtEI.Text, txtECNStatus.Text, txtCreatedBy.Text)

                    btnPostECN.Text = "SUBMIT E-CN/DN"

                    btnPostECN.Enabled = False
                    btnPostECN.Forecolor = System.Drawing.Color.Gray


                    '    '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtECNStatus.Text, txtCreatedBy.Text)
                    '    btnPrint.Enabled = False
                    '    btnPrint.Forecolor = System.Drawing.Color.Gray

                    '    btnMultiPrint.Enabled = False
                    '    btnMultiPrint.Forecolor = System.Drawing.Color.Gray
                End If


            End If
        End If

        'If grvBillingDetailsNew.Rows.Count = 0 Then
        '    'grvBillingDetailsNew.Visible = False
        '    grvBillingDetails.ShowHeader = True

        'Else
        '    grvBillingDetailsNew.Visible = True
        '    'grvBillingDetails.ShowHeader = False

        'End If

        'updpnlBillingDetails.Update()

        'If grvBillingDetailsNew.Rows.Count = 0 Then
        '    'grvBillingDetailsNew.Visible = False
        '    grvBillingDetails.ShowHeader = True

        'Else
        '    grvBillingDetailsNew.Visible = True
        '    grvBillingDetails.ShowHeader = False

        'End If
        updPanelCN.Update()
        lblFileUploadCount.Text = "File Upload"
        '   tb1.ActiveTabIndex = 0

        'Catch ex As Exception
        '    Dim exstr As String
        '    exstr = ex.Message.ToString
        '    lblAlert.Text = exstr
        '    InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "GridView1_SelectedIndexChanged", ex.Message.ToString, "")
        '    Exit Sub
        'End Try
    End Sub

    Private Sub UpdateEInvoiceEI(CNNumber As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set EI='Y' where InvoiceNumber=@invoicenumber"
            InsertIntoTblWebEventLog("CN", "UPDATEINVOICEEI1", sqlUpdateInvoice, txtCreatedBy.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", CNNumber)
            InsertIntoTblWebEventLog("CN", "UPDATEINVOICEEI2", CNNumber, txtCreatedBy.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            txtEI.Text = "Y"
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN", "UPDATEINVOICEEI", ex.Message.ToString, txtCreatedBy.Text)

        End Try
    End Sub


    Private Sub IsDetailBlank()
        Dim TextBoxItemTypeNew As TextBox
        Dim TextBoxItemType As DropDownList

        Dim rownew As String
        Dim rowold As Integer
        Dim rowoldstr As String
        rownew = "0"
        rowold = 0

        If grvBillingDetailsNew.Rows.Count > 0 Then
            TextBoxItemTypeNew = CType(grvBillingDetailsNew.Rows(0).Cells(0).FindControl("txtItemTypeGVB"), TextBox)
            rownew = String.IsNullOrEmpty(TextBoxItemTypeNew.Text)
            If String.IsNullOrEmpty(rownew) = "False" Then
                rownew = "1"
            End If
        End If

        If grvBillingDetails.Rows.Count > 0 Then
            TextBoxItemType = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
            rowoldstr = TextBoxItemType.Text
            If rowoldstr = "-1" Then
                rowold = 0
            Else
                rowold = 1
            End If
        End If
        'txtComments.Text = rownew & rowold

        'If rownew = "0" And rowold = 0 Then
        '    'grvBillingDetails.ShowHeader = True
        '    grvBillingDetailsNew.Visible = False
        '    grvBillingDetails.Visible = True
        '    FirstGridViewRowBillingDetailsRecs()
        '    grvBillingDetails.ShowHeader = True
        '    updPanelCN.Update()
        'ElseIf rownew = "1" And rowold = 0 Then
        '    'grvBillingDetails.ShowHeader = True
        '    grvBillingDetailsNew.Visible = True
        '    grvBillingDetails.Visible = False
        '    updPanelCN.Update()
        '    'FirstGridViewRowBillingDetailsRecs()
        'ElseIf rownew = "0" And rowold = 1 Then
        '    'grvBillingDetails.ShowHeader = True
        '    grvBillingDetailsNew.Visible = False
        '    FirstGridViewRowBillingDetailsRecs()
        '    grvBillingDetails.Visible = True
        '    updPanelCN.Update()
        '    'FirstGridViewRowBillingDetailsRecs()
        'ElseIf rownew = "1" And rowold = 1 Then
        '    'grvBillingDetails.ShowHeader = True
        '    grvBillingDetailsNew.Visible = True
        '    grvBillingDetails.Visible = True
        '    'FirstGridViewRowBillingDetailsRecs()
        '    updPanelCN.Update()
        'End If

        If rownew = "1" And rowold = 0 Then
            'grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False
            'FirstGridViewRowBillingDetailsRecs()
            'grvBillingDetails.ShowHeader = True

            'UpdatePanel2.Update()
            updPanelCN.Update()
            'updPanelInvoice.Update()
        End If

        If rownew = "0" And rowold = 0 Then
            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True
            FirstGridViewRowBillingDetailsRecs()
            grvBillingDetails.ShowHeader = True
            'updPanelInvoice.Update()
        End If

    End Sub

    Private Sub FindRcno(source As String)

        Dim sqlstr As String
        sqlstr = ""

        sqlstr = "SELECT Rcno FROM tblSales where InvoiceNumber ='" & source & "'"

        Dim command As MySqlCommand = New MySqlCommand

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        command.CommandType = CommandType.Text
        command.CommandText = sqlstr
        command.Connection = conn

        Dim dr As MySqlDataReader = command.ExecuteReader()
        Dim dt As New System.Data.DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtRcno.Text = dt.Rows(0)("Rcno").ToString()
        End If
        conn.Close()
        conn.Dispose()
        command.Dispose()
        dt.Dispose()
        dr.Close()
    End Sub

    Private Sub PopulateRecord()
        Try
            grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False

            lblAlertBillingDetails.Text = ""
            lblAlertBillingName.Text = ""
            lblAlertStatus.Text = ""
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim sql As String
            sql = ""
            sql = "Select PostStatus, DocType,  GLStatus, InvoiceNumber, SalesDate, GLPeriod, CompanyGroup, AccountId, ContactType, CustName, BillAddress1, BillBuilding, BillStreet, BillCity, BillState,  BillPostal, BillCountry, "
            sql = sql + " Salesman, PONo, OurRef, YourRef, Terms, TermsDay, BatchNo, Comments, RecurringInvoice, BillSchedule, ContractGroup, "
            sql = sql + " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, DiscountAmount, AmountWithDiscount, GSTAmount, NetAmount, InvoiceType, "
            'sql = sql + " TotalReceiptAmount, TotalCNAmount, (AppliedBase - TotalReceiptAmount- TotalCNAmount) as OSAmount, "
            sql = sql + " Receiptbase, Creditbase, balanceBase, CustAddress1, StaffCode, CustAddBuilding, CustAddStreet, CustAddCity, CustAddState,  CustAddCountry, CustAddPostal, CustAttention, GST, GSTRate, Location, Internal,  "
            sql = sql + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, ReasonChSt,TaxIdentificationNo,SalesTaxRegistrationNo, "
            sql = sql & " ServiceAddress, ReasonChSt,EI, EInvoiceStatus, UUID,LongID,SubmissionDate,SubmissionBy,SubmissionID,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            sql = sql + " FROM tblsales "
            sql = sql + "where rcno = " & Convert.ToInt64(txtRcno.Text)

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            'command1.CommandText = "SELECT * FROM tblcontract where rcno=" & Convert.ToInt64(txtRcno.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()


            Dim dt As New DataTable
            dt.Load(dr)
            'Convert.ToDateTime(dt.Rows(0)("ContractDate")).ToString("dd/MM/yyyy")
            If dt.Rows.Count > 0 Then

                ddlCreditTerms.SelectedIndex = -1
                ddlSalesmanBilling.SelectedIndex = -1
                'If dt.Rows(0)("InvoiceType").ToString = "M" Then
                '    rbtInvoiceType.SelectedIndex = 0
                'Else
                '    rbtInvoiceType.SelectedIndex = 1
                'End If

                'If dt.Rows(0)("DocType").ToString = "ARCN" Then
                '    ddlDocType.Text = "CREDIT NOTE"
                'ElseIf dt.Rows(0)("DocType").ToString = "ARDN" Then
                '    ddlDocType.Text = "DEBIT NOTE"
                'End If



                ddlDocType.Text = dt.Rows(0)("DocType").ToString

                If dt.Rows(0)("PostStatus").ToString <> "" Then : txtPostStatus.Text = dt.Rows(0)("PostStatus").ToString : End If
                If dt.Rows(0)("InvoiceNumber").ToString <> "" Then : txtCNNo.Text = dt.Rows(0)("InvoiceNumber").ToString : End If
                'If dt.Rows(0)("InvoiceNumber").ToString <> "" Then : txtCNNoSelected.Text = dt.Rows(0)("InvoiceNumber").ToString : End If
                If dt.Rows(0)("SalesDate").ToString <> "" Then : txtCNDate.Text = Convert.ToDateTime(dt.Rows(0)("SalesDate")).ToString("dd/MM/yyyy") : End If

                If dt.Rows(0)("GLPeriod").ToString <> "" Then : txtReceiptPeriod.Text = dt.Rows(0)("GLPeriod").ToString : End If
                If dt.Rows(0)("CompanyGroup").ToString <> "" Then : txtCompanyGroup.Text = dt.Rows(0)("CompanyGroup").ToString : End If
                If dt.Rows(0)("AccountId").ToString <> "" Then : txtAccountIdBilling.Text = dt.Rows(0)("AccountId").ToString : End If
                'If dt.Rows(0)("ContactType").ToString <> "" Then : txtAccountType.Text = dt.Rows(0)("ContactType").ToString : End If
                If dt.Rows(0)("ContactType").ToString <> "" Then : ddlContactType.Text = dt.Rows(0)("ContactType").ToString : End If
                If dt.Rows(0)("CustName").ToString <> "" Then : txtAccountName.Text = dt.Rows(0)("CustName").ToString : End If
                txtBillingNameEdit.Text = txtAccountName.Text
                If dt.Rows(0)("TaxIdentificationNo").ToString <> "" Then : txtTIN.Text = dt.Rows(0)("TaxIdentificationNo").ToString : End If
                If dt.Rows(0)("SalesTaxRegistrationNo").ToString <> "" Then : txtSSTNo.Text = dt.Rows(0)("SalesTaxRegistrationNo").ToString : End If

                'If dt.Rows(0)("BillAddress1").ToString <> "" Then : txtBillAddress.Text = dt.Rows(0)("BillAddress1").ToString : End If
                'If dt.Rows(0)("BillStreet").ToString <> "" Then : txtBillStreet.Text = dt.Rows(0)("BillStreet").ToString : End If

                'If dt.Rows(0)("BillBuilding").ToString <> "" Then : txtBillBuilding.Text = dt.Rows(0)("BillBuilding").ToString : End If
                'If dt.Rows(0)("BillPostal").ToString <> "" Then : txtBillPostal.Text = dt.Rows(0)("BillPostal").ToString : End If

                'If dt.Rows(0)("CustAddress1").ToString <> "" Then : txtBillAddress.Text = dt.Rows(0)("CustAddress1").ToString : End If
                ''If dt.Rows(0)("CustAddCountry").ToString <> "" Then : txtBillStreet.Text = dt.Rows(0)("CustAddCountry").ToString : End If
                'If dt.Rows(0)("CustAddPostal").ToString <> "" Then : txtBillPostal.Text = dt.Rows(0)("CustAddPostal").ToString : End If

                'Command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text)
                'Command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text)
                'Command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text)

                If dt.Rows(0)("CustAddress1").ToString <> "" Then : txtBillAddress.Text = dt.Rows(0)("CustAddress1").ToString : End If
                If dt.Rows(0)("CustAddStreet").ToString <> "" Then : txtBillStreet.Text = dt.Rows(0)("CustAddStreet").ToString : End If
                If dt.Rows(0)("CustAddBuilding").ToString <> "" Then : txtBillBuilding.Text = dt.Rows(0)("CustAddBuilding").ToString : End If

                If dt.Rows(0)("CustAddCity").ToString <> "" Then : txtBillCity.Text = dt.Rows(0)("CustAddCity").ToString : End If
                If dt.Rows(0)("CustAddState").ToString <> "" Then : txtBillState.Text = dt.Rows(0)("CustAddState").ToString : End If

                If dt.Rows(0)("CustAddCountry").ToString <> "" Then : txtBillCountry.Text = dt.Rows(0)("CustAddCountry").ToString : End If
                If dt.Rows(0)("CustAddPostal").ToString <> "" Then : txtBillPostal.Text = dt.Rows(0)("CustAddPostal").ToString : End If
                If dt.Rows(0)("CustAttention").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("CustAttention").ToString : End If

                'txtComments.Text = dt.Rows(0)("Salesman").ToString
                'If String.IsNullOrEmpty(dt.Rows(0)("Salesman").ToString) = True Then
                '    ddlSalesmanBilling.SelectedIndex = 0
                'Else
                '    ddlSalesmanBilling.Text = dt.Rows(0)("Salesman").ToString
                'End If


                'If dt.Rows(0)("SalesMan").ToString <> "" Then
                '    Dim gSalesman As String

                '    gSalesman = dt.Rows(0)("SalesMan").ToString.ToUpper()

                '    If ddlSalesmanBilling.Items.FindByValue(gSalesman) Is Nothing Then
                '        ddlSalesmanBilling.Items.Add(gSalesman)
                '        ddlSalesmanBilling.Text = gSalesman
                '    Else
                '        ddlSalesmanBilling.Text = dt.Rows(0)("SalesMan").ToString.Trim().ToUpper()
                '    End If
                'End If


                If dt.Rows(0)("StaffCode").ToString <> "" Then
                    'Dim gSalesman As String

                    gddlvalue = dt.Rows(0)("StaffCode").ToString.ToUpper()

                    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanBilling.Items.Add(gddlvalue)
                        ddlSalesmanBilling.Text = gddlvalue
                    Else
                        ddlSalesmanBilling.Text = dt.Rows(0)("StaffCode").ToString.Trim().ToUpper()
                    End If
                End If


                'If dt.Rows(0)("CustAddCountry").ToString <> "" Then : txtBillCountry.Text = dt.Rows(0)("CustAddCountry").ToString : End If

                If dt.Rows(0)("PONo").ToString <> "" Then : txtPONo.Text = dt.Rows(0)("PONo").ToString : End If
                If dt.Rows(0)("OurRef").ToString <> "" Then : txtOurReference.Text = dt.Rows(0)("OurRef").ToString : End If
                If dt.Rows(0)("YourRef").ToString <> "" Then : txtYourReference.Text = dt.Rows(0)("YourRef").ToString : End If


                If dt.Rows(0)("Terms").ToString <> "" Then
                    'Dim gSalesman As String

                    gddlvalue = dt.Rows(0)("Terms").ToString.ToUpper()

                    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlCreditTerms.Items.Add(gddlvalue)
                        ddlCreditTerms.Text = gddlvalue
                    Else
                        ddlCreditTerms.Text = dt.Rows(0)("Terms").ToString.Trim().ToUpper()
                    End If
                End If


                If dt.Rows(0)("ContractGroup").ToString <> "" Then

                    gddlvalue = dt.Rows(0)("ContractGroup").ToString.ToUpper()

                    If ddlContractGroupBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlContractGroupBilling.Items.Add(gddlvalue)
                        ddlContractGroupBilling.Text = gddlvalue
                    Else
                        ddlContractGroupBilling.Text = dt.Rows(0)("ContractGroup").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("BatchNo").ToString <> "" Then : txtBatchNo.Text = dt.Rows(0)("BatchNo").ToString : End If
                If dt.Rows(0)("Comments").ToString <> "" Then : txtComments.Text = dt.Rows(0)("Comments").ToString : End If
                If dt.Rows(0)("TermsDay").ToString <> "" Then : txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString : End If
                'If dt.Rows(0)("RecurringInvoice").ToString = "N" Then : chkRecurringInvoice.Text = dt.Rows(0)("RecurringInvoice").ToString : End If

                If dt.Rows(0)("ValueBase").ToString <> "" Then : txtCNAmount.Text = dt.Rows(0)("ValueBase").ToString : End If
                'If dt.Rows(0)("ValueOriginal").ToString <> "" Then : txtInvoiceAmount.Text = dt.Rows(0)("ValueOriginal").ToString : End If
                If dt.Rows(0)("GSTBase").ToString <> "" Then : txtCNGSTAmount.Text = dt.Rows(0)("GSTBase").ToString : End If
                'If dt.Rows(0)("GSTOriginal").ToString <> "" Then : txtInvoiceAmount.Text = dt.Rows(0)("GSTOriginal").ToString : End If
                If dt.Rows(0)("AppliedBase").ToString <> "" Then : txtCNNetAmount.Text = dt.Rows(0)("AppliedBase").ToString : End If
                If dt.Rows(0)("GST").ToString <> "" Then : txtGST.Text = dt.Rows(0)("GST").ToString : End If
                'If dt.Rows(0)("GST").ToString <> "" Then : txtGST.Text = dt.Rows(0)("GST").ToString : End If
                If dt.Rows(0)("GSTRate").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("GSTRate").ToString : End If

                If dt.Rows(0)("Location").ToString <> "" Then : txtLocation.Text = dt.Rows(0)("Location").ToString : End If
                txtRecordCreatedBy.Text = dt.Rows(0)("CreatedBy").ToString

                txtReasonChSt.Text = dt.Rows(0)("ReasonChSt").ToString.Trim
                chkInternal.Checked = dt.Rows(0)("Internal").ToString.Trim

                If dt.Rows(0)("EI").ToString <> "" Then
                    txtEI.Text = dt.Rows(0)("EI").ToString
                Else
                    txtEI.Text = ""
                End If

                If String.IsNullOrEmpty(dt.Rows(0)("EInvoiceStatus").ToString) = False Then
                    txtECNStatus.Text = dt.Rows(0)("EInvoiceStatus").ToString
                Else
                    txtECNStatus.Text = ""
                End If

                '   InsertIntoTblWebEventLog("PopulateRecord4", dt.Rows(0)("EInvoiceStatus").ToString, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                If dt.Rows(0)("UUID").ToString <> "" Then
                    txtUUID.Text = dt.Rows(0)("UUID").ToString
                Else
                    txtUUID.Text = ""
                End If
                If dt.Rows(0)("SubmissionID").ToString <> "" Then
                    txtSubmissionID.Text = dt.Rows(0)("SubmissionID").ToString
                Else
                    txtSubmissionID.Text = ""
                End If

                If dt.Rows(0)("LongID").ToString <> "" Then
                    txtLongID.Text = dt.Rows(0)("LongID").ToString
                Else
                    txtLongID.Text = ""
                End If
                If dt.Rows(0)("SubmissionBy").ToString <> "" Then : txtLastPostedBy.Text = dt.Rows(0)("SubmissionBy").ToString : End If
                If dt.Rows(0)("SubmissionDate").ToString <> "" Then : txtLastPostedDate.Text = Convert.ToDateTime(dt.Rows(0)("SubmissionDate")).ToString("dd/MM/yyyy") : End If
                If dt.Rows(0)("TimeToCancel").ToString <> "" Then : txtTimetoCancel.Text = dt.Rows(0)("TimeToCancel").ToString : End If

                txtCancelInvoiceNo.Text = txtCNNo.Text
                txtCancelLastPosted.Text = txtLastPostedDate.Text
                txtCancelLastPostedBy.Text = txtLastPostedBy.Text

                txtContactPersonEdit.Text = txtContactPerson.Text
                txtBillAddressEdit.Text = txtBillAddress.Text
                txtBillBuildingEdit.Text = txtBillBuilding.Text
                txtBillStreetEdit.Text = txtBillStreet.Text

                txtBillCityEdit.Text = txtBillCity.Text
                txtBillStateEdit.Text = txtBillState.Text

                txtBillPostalEdit.Text = txtBillPostal.Text
                txtBillCountryEdit.Text = txtBillCountry.Text

                '   tb1.ActiveTabIndex = 0

            End If


            ''''''''''''''''''''''''''

            Dim commandDetailTotal As MySqlCommand = New MySqlCommand

            commandDetailTotal.CommandType = CommandType.Text
            commandDetailTotal.CommandText = "SELECT sum(ValueBase) as TotalwithDisc, sum(GSTBase) as TotalGST, sum(AppliedBase) as Totalappliedbase FROM tblSalesDetail  where InvoiceNumber ='" & txtCNNo.Text & "'"
            commandDetailTotal.Connection = conn

            Dim drDetailTotal As MySqlDataReader = commandDetailTotal.ExecuteReader()
            Dim dtDetailTotal As New DataTable
            dtDetailTotal.Load(drDetailTotal)

            If dtDetailTotal.Rows.Count > 0 Then
                txtTotalWithDiscAmt.Text = dtDetailTotal.Rows(0)("TotalwithDisc").ToString
                txtTotalGSTAmt.Text = dtDetailTotal.Rows(0)("TotalGST").ToString
                txtTotalWithGST.Text = dtDetailTotal.Rows(0)("Totalappliedbase").ToString

            End If
            commandDetailTotal.Dispose()
            dtDetailTotal.Dispose()

            ''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()


            '
            'updpnlBillingDetails.Update()


            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                btnCopy.Enabled = True
                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = True
                btnRecalculate.ForeColor = System.Drawing.Color.Black

            Else
                btnEdit.Enabled = True
                btnEdit.ForeColor = System.Drawing.Color.Black
                btnCopy.Enabled = True
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                btnDelete.ForeColor = System.Drawing.Color.Gray
                btnChangeStatus.Enabled = True
                btnChangeStatus.ForeColor = System.Drawing.Color.Black

                btnDelete.Enabled = True
                btnDelete.ForeColor = System.Drawing.Color.Black

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = True
                btnPost.ForeColor = System.Drawing.Color.Black

                btnRecalculate.Enabled = True
                btnRecalculate.ForeColor = System.Drawing.Color.Black
            End If

            btnEditBillingName.Visible = True
            btnEditBillingDetails.Visible = True


            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                If ddlDocType.Text = "ARCN" Then
                    If txtOnlyEditableByCreatorCN.Text = "1" Then
                        If txtRecordCreatedBy.Text.Trim <> txtCreatedBy.Text.Trim Then
                            btnEdit.Enabled = False
                            btnPost.Enabled = False
                            btnReverse.Enabled = False
                        End If
                    End If
                End If

                If ddlDocType.Text = "ARDN" Then
                    If txtOnlyEditableByCreatorDN.Text = "1" Then
                        If txtRecordCreatedBy.Text.Trim <> txtCreatedBy.Text.Trim Then
                            btnEdit.Enabled = False
                            btnPost.Enabled = False
                            btnReverse.Enabled = False
                            btnCopy.Enabled = False
                        End If
                    End If
                End If
            End If
            updPnlMsg.Update()

            'PopulateArCode()
            DisplayGLGrid()

            'SqlDSSalesDetail.SelectCommand = "SELECT InvoiceNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, InvoiceType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode, SourceInvoice from tblsalesdetail where InvoiceNumber= @InvoiceNumber"
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()
            IsDetailBlank()

            updpnlBillingDetails.Update()
            updPanelSave.Update()
            updPnlBillingRecs.Update()
            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                AccessControl()
            End If


            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnPostECN.Enabled = True
                btnPostECN.ForeColor = System.Drawing.Color.Black
            Else
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnPostECN.Enabled = False
                btnPostECN.ForeColor = System.Drawing.Color.Gray
            End If

            Session.Add("RecordNo", txtCNNo.Text)
            Session.Add("Title", ddlDocType.SelectedItem.Text)

            If txtDisabledEInvoicing.Text = True Then
                '  btnPostEInvoice.Visible = False
            Else
                '  btnPostEInvoice.Visible = True

                If txtECNStatus.Text = "APPROVED" Or txtECNStatus.Text = "" Then
                    btnPostECN.Text = "SUBMIT E-CN/DN"
                    btnPrint.Enabled = False
                    btnPrint.Forecolor = System.Drawing.Color.Gray
                Else
                    btnPostECN.Text = "CANCEL E-CN/DN"
                    'btnPrint.Enabled = True
                    'btnPrint.Forecolor = System.Drawing.Color.Black
                End If
            End If

            Dim IsLock = FindCNPeriod(txtReceiptPeriod.Text)

            If IsLock = "Y" Then
                'lblAlert.Text = "PERIOD IS LOCKED"
                'updPnlMsg.Update()
                'txtInvoiceDate.Focus()
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                'btnSaveInvoice.Enabled = False
                'btnSaveInvoice.ForeColor = System.Drawing.Color.Gray
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PopulateRecord", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    'Function

    Private Sub GenerateCNNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtCNDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")

            If ddlDocType.Text = "ARCN" Then
                lInvoiceNo = "DC" + lPrefix + "-"
                lMonth = Right(lPrefix, 2)
                lYear = Left(lPrefix, 4)
                lPrefix = "DC" + lYear
            Else
                lInvoiceNo = "DD" + lPrefix + "-"
                lMonth = Right(lPrefix, 2)
                lYear = Left(lPrefix, 4)
                lPrefix = "DD" + lYear
            End If


            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                If lMonth = "01" Then
                    lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "02" Then
                    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "03" Then
                    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "04" Then
                    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "05" Then
                    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "06" Then
                    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "07" Then
                    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "08" Then
                    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "09" Then
                    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "10" Then
                    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "11" Then
                    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "12" Then
                    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)
            Else

                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If

                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                            "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1


            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtCNNo.Text = lInvoiceNo + lSuffix

            conn.Close()
            conn.Dispose()

            commandDocControl.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "GenerateCNNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Public Sub MakeMeNull()
        Try

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""
            lblAlertStatus.Text = ""
            'txtSearch1Status.Text = "O,P"
            'txtMode.Text = "NEW"
            txtRcno.Text = "0"
            txtLogDocNo.Text = ""


            txtPopUpClient.Text = ""
            ddlCompanyGrpII.SelectedIndex = 0
            ddlCompanyGrp.SelectedIndex = 0

            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True

            grvServiceRecDetails.DataSourceID = ""
            grvServiceRecDetails.DataBind()

            grvInvoiceRecDetails.DataSourceID = ""
            grvInvoiceRecDetails.DataBind()

            btnEdit.Enabled = False
            btnCopy.Enabled = False
            btnReverse.Enabled = False

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnPrint.Enabled = False
            btnPost.Enabled = False
            btnDelete.Enabled = False
            updPnlMsg.Update()

            DisableControls()
            'Dim query As String

            'query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            'PopulateDropDownList(Query, "ProductCode", "ProductCode", ddlItemCode)

            FirstGridViewRowBillingDetailsRecs()
            'FirstGridViewRowServiceRecs()

            Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimeinvoice();", True)
            'updpnlServiceRecs.Update()
            updPnlBillingRecs.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AccessControl()
        If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                'command.CommandText = "SELECT X0256,  X0256Add, X0256Edit, X0256Delete, X0256Print FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                command.CommandText = "SELECT X0256,  X0256Add, X0256Edit, X0256Delete, X0256Print, X0256Post, X0256Reverse, x0256EditCompanyName, x0256EditBillingAddress,x0256FileUpload,x0256SubmitECNDN,x0256CancelECNDN FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"

                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)
                conn.Close()

                If dt.Rows.Count > 0 Then
                    If Not IsDBNull(dt.Rows(0)("X0256")) Then
                        If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("X0256"))) = False Then
                            If Convert.ToBoolean(dt.Rows(0)("X0256")) = False Then
                                Response.Redirect("Home.aspx")
                            End If
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("X0256Add")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("X0256Add")) = False Then
                            Me.btnADD.Enabled = dt.Rows(0)("X0256Add").ToString()
                        End If
                    End If


                    If txtMode.Text = "View" Then
                        If Not IsDBNull(dt.Rows(0)("X0256Edit")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256Edit")) = False Then
                                Me.btnEdit.Enabled = dt.Rows(0)("X0256Edit").ToString()
                                btnEditBillingName.Enabled = dt.Rows(0)("X0256Edit").ToString()
                                btnEditBillingDetails.Enabled = dt.Rows(0)("X0256Edit").ToString()

                                btnEditBillingName.Visible = dt.Rows(0)("x0256EditCompanyName").ToString()
                                btnEditBillingDetails.Visible = dt.Rows(0)("x0256EditBillingAddress").ToString()
                                'btnEditPONo.Enabled = dt.Rows(0)("x0252EditOurRef").ToString()
                                'btnEditSalesman.Enabled = dt.Rows(0)("x0252EditSalesman").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("X0256Delete")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256Delete")) = False Then
                                Me.btnDelete.Enabled = dt.Rows(0)("X0256Delete").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("X0256Print")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256Print")) = False Then
                                Me.btnPrint.Enabled = dt.Rows(0)("X0256Print").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("X0256Post")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256Post")) = False Then
                                Me.btnPost.Enabled = dt.Rows(0)("X0256Post").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("X0256Reverse")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256Reverse")) = False Then
                                Me.btnReverse.Enabled = dt.Rows(0)("X0256Reverse").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("x0256FileUpload")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("x0256FileUpload")) = False Then
                                txtFileUpload.Text = dt.Rows(0)("x0256FileUpload").ToString()
                                btnUpload.Enabled = dt.Rows(0)("x0256FileUpload").ToString()
                                FileUpload1.Enabled = dt.Rows(0)("x0256FileUpload").ToString()
                            Else
                                txtFileUpload.Text = "0"
                            End If
                        Else
                            txtFileUpload.Text = "0"
                        End If

                        If btnPostECN.Text = "SUBMIT E-CN/DN" Then
                            If Not IsDBNull(dt.Rows(0)("X0256SubmitECNDN")) Then
                                If String.IsNullOrEmpty(dt.Rows(0)("X0256SubmitECNDN")) = False Then
                                    Me.btnPostECN.Enabled = dt.Rows(0)("X0256SubmitECNDN").ToString()
                                End If
                            End If
                        End If


                        If btnPostECN.Text = "CANCEL E-CN/DN" Then
                            If Not IsDBNull(dt.Rows(0)("X0256CancelECNDN")) Then
                                If String.IsNullOrEmpty(dt.Rows(0)("X0256CancelECNDN")) = False Then
                                    Me.btnPostECN.Enabled = dt.Rows(0)("X0256CancelECNDN").ToString()
                                End If
                            End If
                        End If

                    Else
                        Me.btnEdit.Enabled = False
                        Me.btnDelete.Enabled = False
                        Me.btnPrint.Enabled = False
                        Me.btnPost.Enabled = False
                        Me.btnReverse.Enabled = False
                    End If

                    'If String.IsNullOrEmpty(dt.Rows(0)("X0256Print")) = False Then
                    '    Me.btnDelete.Enabled = dt.Rows(0)("X0256Print").ToString()
                    'End If

                    If btnADD.Enabled = True Then
                        btnADD.ForeColor = System.Drawing.Color.Black
                    Else
                        btnADD.ForeColor = System.Drawing.Color.Gray
                    End If

                    If btnEdit.Enabled = True Then
                        btnEdit.ForeColor = System.Drawing.Color.Black
                    Else
                        btnEdit.ForeColor = System.Drawing.Color.Gray
                    End If

                    If btnDelete.Enabled = True Then
                        btnDelete.ForeColor = System.Drawing.Color.Black
                    Else
                        btnDelete.ForeColor = System.Drawing.Color.Gray
                    End If

                    If btnPrint.Enabled = True Then
                        btnPrint.ForeColor = System.Drawing.Color.Black
                    Else
                        btnPrint.ForeColor = System.Drawing.Color.Gray
                    End If

                    If btnPost.Enabled = True Then
                        btnPost.ForeColor = System.Drawing.Color.Black
                    Else
                        btnPost.ForeColor = System.Drawing.Color.Gray
                    End If

                    If btnReverse.Enabled = True Then
                        btnReverse.ForeColor = System.Drawing.Color.Black
                    Else
                        btnReverse.ForeColor = System.Drawing.Color.Gray
                    End If
                End If
                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "AccessControl", ex.Message.ToString, "")
                Exit Sub
            End Try
        End If
    End Sub

    Private Sub DisableControls()
        'btnSave.Enabled = False
        'btnSave.ForeColor = System.Drawing.Color.Gray
        btnCancel.Enabled = False
        btnCancel.ForeColor = System.Drawing.Color.Gray

        btnADD.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black


        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black

        'btnClient.Visible = False
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        ddlDocType.Enabled = False

        txtCNNo.Enabled = False
        txtCNDate.Enabled = False
        txtReceiptPeriod.Enabled = False
        txtCompanyGroup.Enabled = False
        txtAccountIdBilling.Enabled = False
        ddlContactType.Enabled = False
        txtAccountName.Enabled = False
        txtContactPerson.Enabled = False
        'txtBankGLCode.Enabled = False

        'ddlBankCode.Enabled = True
        'txtBankGLCode.Enabled = True
        'ddlPaymentMode.Enabled = True
        'txtChequeNo.Enabled = True
        'txtChequeDate.Enabled = True
        ddlSalesmanBilling.Enabled = False

        txtOurReference.Enabled = False
        txtYourReference.Enabled = False
        txtPONo.Enabled = False
        ddlCreditTerms.Enabled = False
        txtComments.Enabled = False

        txtTIN.Enabled = False
        txtSSTNo.Enabled = False


        txtCNAmount.Enabled = False
        txtCNGSTAmount.Enabled = False
        txtCNNetAmount.Enabled = False
        ddlContractGroupBilling.Enabled = False
        txtGST.Enabled = False
        'ddlContractNoCN.Enabled = False
        'ddlItemCode.Enabled = False
        'txtARDescription10.Enabled = False

        btnShowInvoices.Enabled = False
        btnShowServices.Enabled = False

        btnSave.Enabled = False
        'btnShowRecords.Enabled = False

        grvBillingDetails.Enabled = False
        grvBillingDetailsNew.Enabled = False
        btnDelete.Enabled = False
        btnClient.Visible = False


        txtReceiptnoSearch.Enabled = True
        txtInvoiceNoSearch.Enabled = True
        txtInvoiceDateFromSearch.Enabled = True
        txtInvoiceDateToSearch.Enabled = True
        ddlCompanyGrpSearch.Enabled = True
        ddlContactTypeSearch.Enabled = True
        txtAccountIdSearch.Enabled = True
        txtSearch1Status.Enabled = True
        btnQuickSearch.Enabled = True
        btnQuickReset.Enabled = True
        'txtCommentsSearch.Enabled = True
        txtClientNameSearch.Enabled = True
        btnSearch1Status.Enabled = True
        'btnClientSearch0.Enabled = True
        btnClientSearch.Enabled = True
        'rdbSearchPaidStatus.Enabled = True
        'ddlBankIDSearch.Enabled = True
        'txtChequeNoSearch.Enabled = True

        btnPostECN.Enabled = False
        btnPostECN.ForeColor = System.Drawing.Color.Gray

        btnFilter.Enabled = True
        chkInternal.Enabled = False
        btnEditBillingName.Visible = False
        btnEditBillingDetails.Visible = False
        updPnlSearch.Update()
        AccessControl()
    End Sub

    Private Sub EnableControls()
        'btnSave.Enabled = True
        'btnSave.ForeColor = System.Drawing.Color.Black
        btnCancel.Enabled = True
        btnCancel.ForeColor = System.Drawing.Color.Black
        'btnClient.Visible = True
        btnADD.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnQuit.Enabled = False
        btnQuit.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        btnRecalculate.Enabled = False
        btnRecalculate.ForeColor = System.Drawing.Color.Gray

        'rdbAll.Attributes.Remove("disabled")
        'rdbCompleted.Attributes.Add("readonly", "readonly")
        'rdbNotCompleted.Attributes.Add("readonly", "readonly")

        'rdbAll.Enabled = True
        'rdbCompleted.Enabled = True
        'rdbNotCompleted.Enabled = True
        ddlDocType.Enabled = True
        txtCNNo.Enabled = True
        txtCNDate.Enabled = True
        txtReceiptPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        'txtAccountId.Enabled = True
        ddlContactType.Enabled = True
        txtAccountIdBilling.Enabled = True
        txtAccountName.Enabled = True
        txtContactPerson.Enabled = True
        'ddlBankCode.Enabled = True
        'txtBankGLCode.Enabled = True
        'ddlPaymentMode.Enabled = True

        'txtChequeNo.Enabled = True
        'txtChequeDate.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtComments.Enabled = True

        txtTIN.Enabled = True
        txtSSTNo.Enabled = True

        txtCNAmount.Enabled = True
        txtCNGSTAmount.Enabled = True
        ddlContractGroupBilling.Enabled = True
        txtGST.Enabled = True
        'ddlContractNoCN.Enabled = True
        'ddlItemCode.Enabled = True
        'txtARDescription10.Enabled = True

        btnShowInvoices.Enabled = True
        btnShowServices.Enabled = True
        btnSave.Enabled = True
        'btnShowRecords.Enabled = True

        'ddlContactType.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'txtAccountId.Enabled = True
        'txtContractNo.Enabled = True
        'txtClientName.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractGrp.Enabled = True

        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True


        btnDelete.Enabled = True

        txtReceiptnoSearch.Enabled = False
        txtInvoiceNoSearch.Enabled = False
        txtInvoiceDateFromSearch.Enabled = False
        txtInvoiceDateToSearch.Enabled = False

        If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) <> "SINGAPORE" Then
            'txtBillCity.Enabled = True
            'txtBillState.Enabled = True

            txtBillCityEdit.Enabled = True
            txtBillStateEdit.Enabled = True
        End If

        ddlCompanyGrpSearch.Enabled = False
        ddlContactTypeSearch.Enabled = False
        txtAccountIdSearch.Enabled = False
        txtSearch1Status.Enabled = False
        btnQuickSearch.Enabled = False
        btnQuickReset.Enabled = False
        'txtCommentsSearch.Enabled = True
        txtClientNameSearch.Enabled = False
        btnSearch1Status.Enabled = False
        'btnClientSearch0.Enabled = True
        btnClientSearch.Enabled = False
        'rdbSearchPaidStatus.Enabled = True
        'ddlBankIDSearch.Enabled = True
        'txtChequeNoSearch.Enabled = True
        chkInternal.Enabled = True

        btnFilter.Enabled = False
        updPnlSearch.Update()

        grvBillingDetails.Enabled = True
        'grvServiceRecDetails.Enabled = True
        updPnlBillingRecs.Update()
        'updpnlServiceRecs.Update()
        updpnlBillingDetails.Update()
        updPanelSave.Update()
        'updPanelSearchServiceRec.Update()

        btnClient.Visible = True
        btnEditBillingName.Visible = False
        btnEditBillingDetails.Visible = False

        btnPostECN.Enabled = False
        btnPostECN.ForeColor = System.Drawing.Color.Gray
        AccessControl()

    End Sub



    'Function

    'Button-click
    Protected Sub ShowMessage(sender As Object, e As EventArgs, message As String)

        'Dim message As String = "alert('Hello! Mudassar.')"

        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try
            'txtInvoiceDate.Text = ""
            MakeMeNullBillingDetails()
            MakeMeNull()

            EnableControls()

            updPanelCN.Update()
            txtSearch1Status.Text = "O,P"
            txtMode.Text = "NEW"
            lblMessage.Text = "ACTION: ADD RECORD"
            txtReceiptPeriod.Text = Year(Convert.ToDateTime(txtCNDate.Text)) & Format(Month(Convert.ToDateTime(txtCNDate.Text)), "00")




        Catch ex As Exception
            lblAlert.Text = ex.Message
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnAdd_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    'Button clic


    'Pop-up



    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
            End Using
            'End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PopulateDropDownList", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As AjaxControlToolkit.ComboBox)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub

    Public Sub PopulateComboBoxSaplin(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As Saplin.Controls.DropDownCheckBoxes)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            cmd.CommandTimeout = 0
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub


    'Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
    ''MessageBox.Message.Alert(Page, ddlSearchStatus.Text + " " + txtDDLText.Text, "str")
    ''Return
    'MakeMeNull()
    'Dim qry As String
    'qry = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, "
    'qry = qry + " Scheduler, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno from tblcontract where 1 =1 "

    'If String.IsNullOrEmpty(txtSearchID.Text) = False Then
    '    'txtID.Text = txtSearchID.Text
    '    qry = qry + " and contractno like '%" + txtSearchID.Text + "%'"
    'End If
    'If (ddlSearchStatus.Text) <> "-1" Then
    '    If ddlSearchStatus.Text <> txtDDLText.Text Then
    '        'ddlStatus.Text = ddlSearchStatus.Text
    '        qry = qry + " and status = '" + ddlSearchStatus.Text + "'"
    '    End If
    'Else
    '    qry = qry + " and status = 'O'"
    'End If


    ''If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
    ''    'txtNameE.Text = txtSearchCompany.Text
    ''    qry = qry + " and custcode like '%" + txtSearchCustCode.Text + "%'"
    ''End If

    'If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
    '    'txtNameE.Text = txtSearchCompany.Text
    '    qry = qry + " and Accountid like '%" + txtSearchCustCode.Text + "%'"
    'End If

    'If String.IsNullOrEmpty(txtSearchCompany.Text) = False Then
    '    'txtNameE.Text = txtSearchCompany.Text
    '    qry = qry + " and custname like '%" + txtSearchCompany.Text + "%'"
    'End If
    'If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then

    '    qry = qry + " and (custaddr like '%" + txtSearchAddress.Text + "%')"
    '    'qry = qry + " or addbuilding like '%" + txtSearchAddress.Text + "%'"
    '    'qry = qry + " or addstreet like '%" + txtSearchAddress.Text + "%')"
    'End If

    'If String.IsNullOrEmpty(txtSearchContactNo.Text) = False Then
    '    'txtNameE.Text = txtSearchCompany.Text
    '    qry = qry + " and (telephone = '" + txtSearchContactNo.Text + "'"
    '    qry = qry + " or contactpersonmobile = '" + txtSearchContactNo.Text + "')"
    'End If

    'If String.IsNullOrEmpty(txtSearchPostal.Text) = False Then
    '    'txtPostal.Text = txtSearchPostal.Text
    '    qry = qry + " and postal  = '" + txtSearchPostal.Text + "'"
    'End If
    'If String.IsNullOrEmpty(txtSearchContact.Text) = False Then
    '    qry = qry + " and contact like '%" + txtSearchContact.Text + "%'"

    'End If
    'If (ddlSearchSalesman.Text) <> "-1" Then

    '    qry = qry + " and salesman  = '" + ddlSearchSalesman.Text.Trim + "'"
    'End If
    'If (ddlSearchContactType.Text) <> "-1" Then
    '    'If ddlSearchContactType.Text <> txtDDLText.Text Then
    '    qry = qry + " and ContactType  = '" + ddlSearchContactType.Text + "'"
    '    'End If
    'End If
    'If (ddlSearchScheduler.Text) <> "-1" Then
    '    qry = qry + " and Scheduler  = '" + ddlSearchScheduler.Text + "'"
    'End If


    'If (ddlSearchInChargeId.Text) <> "-1" Then
    '    qry = qry + " and Inchargeid = '" + ddlSearchInChargeId.Text + "'"
    'End If

    'If (ddlSearchContractGroup.Text) <> "-1" Then
    '    qry = qry + " and ContractGroup  = '" + ddlSearchContractGroup.Text + "'"
    'End If

    'If (ddlSearchCompanyGroup.Text) <> "-1" Then
    '    qry = qry + " and CompanyGroup  = '" + ddlSearchCompanyGroup.Text + "'"
    'End If

    'If (ddlSearchLocationGroup.Text) <> "-1" Then
    '    qry = qry + " and LocateGRp  = '" + ddlSearchLocationGroup.Text + "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
    '    'txtPostal.Text = txtSearchPostal.Text
    '    qry = qry + " and ourreference  = '" + txtSearchOurRef.Text + "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
    '    qry = qry + " and yourreference  = '" + txtSearchYourRef.Text + "'"
    'End If



    'If String.IsNullOrEmpty(txtSearchContractDateFrom.Text) = False And IsDate(txtSearchContractDateFrom.Text) Then
    '    qry = qry + " and ContractDate>= '" + Convert.ToDateTime(txtSearchContractDateFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchContractDateTo.Text) = False And IsDate(txtSearchContractDateTo.Text) Then
    '    qry = qry + " and ContractDate  <= '" + Convert.ToDateTime(txtSearchContractDateTo.Text).ToString("yyyy-MM-dd") & "'"

    'End If


    'If String.IsNullOrEmpty(txtSearchStartDateFrom.Text) = False And IsDate(txtSearchStartDateFrom.Text) Then
    '    qry = qry + " and StartDate  >= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchStartDateTo.Text) = False And IsDate(txtSearchStartDateTo.Text) Then
    '    qry = qry + " and StartDate  <= '" + Convert.ToDateTime(txtSearchStartDateTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchEndDateFrom.Text) = False And IsDate(txtSearchEndDateFrom.Text) Then
    '    qry = qry + " and EndDate  >= '" + Convert.ToDateTime(txtSearchEndDateFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchEndDateTo.Text) = False And IsDate(txtSearchEndDateTo.Text) Then
    '    qry = qry + " and EndDate  <= '" + Convert.ToDateTime(txtSearchEndDateTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If



    'If String.IsNullOrEmpty(txtSearchServiceStartFrom.Text) = False And IsDate(txtSearchServiceStartFrom.Text) Then
    '    qry = qry + " and ServiceStart  >= '" + Convert.ToDateTime(txtSearchServiceStartFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchServiceStartTo.Text) = False And IsDate(txtSearchServiceStartTo.Text) Then
    '    qry = qry + " and ServiceStart  <= '" + Convert.ToDateTime(txtSearchServiceStartTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchServiceEndFrom.Text) = False And IsDate(txtSearchServiceEndFrom.Text) Then
    '    qry = qry + " and ServiceEnd  >= '" + Convert.ToDateTime(txtSearchServiceEndFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchServiceEndTo.Text) = False And IsDate(txtSearchServiceEndTo.Text) Then
    '    qry = qry + " and ServiceEnd  <= '" + Convert.ToDateTime(txtSearchServiceEndTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
    '    qry = qry + " and ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
    '    qry = qry + " and ActualEnd  <= '" + Convert.ToDateTime(txtSearchActualEndTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If


    'If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
    '    qry = qry + " and ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
    '    qry = qry + " and ActualEnd  <= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If



    'If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And IsDate(txtSearchEntryDateFrom.Text) Then
    '    qry = qry + " and EntryDate  >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") & "'"
    'End If

    'If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And IsDate(txtSearchEntryDateTo.Text) Then
    '    qry = qry + " and EntryDate  <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") & "'"
    'End If



    'qry = qry + " order by custname;"
    'txt.Text = qry

    'SQLDSInvoice.SelectCommand = qry
    'SQLDSInvoice.DataBind()
    'GridView1.DataBind()
    'txtSearchID.Text = ""
    'GridSelected = "SQLDSContract"

    'txtSearchCustCode.Text = ""
    'txtSearchCompany.Text = ""
    'txtSearchAddress.Text = ""
    'txtSearchContact.Text = ""
    'txtSearchContactNo.Text = ""
    'txtSearchPostal.Text = ""

    'txtSearchOurRef.Text = ""
    'txtSearchYourRef.Text = ""

    'ddlSearchSalesman.ClearSelection()
    'ddlSearchScheduler.ClearSelection()
    'ddlSearchStatus.ClearSelection()
    'ddlSearchContractGroup.ClearSelection()
    'ddlSearchCompanyGroup.ClearSelection()
    'ddlSearchLocationGroup.ClearSelection()
    'ddlSearchRenewalStatus.ClearSelection()
    'ddlSearchInChargeId.ClearSelection()

    'txtSearchContractDateFrom.Text = ""
    'txtSearchContractDateTo.Text = ""
    'txtSearchServiceStartFrom.Text = ""
    'txtSearchServiceStartTo.Text = ""
    'txtSearchServiceEndFrom.Text = ""
    'txtSearchServiceEndTo.Text = ""
    'txtSearchActualEndFrom.Text = ""
    'txtSearchActualEndTo.Text = ""

    'txtSearchStartDateFrom.Text = ""
    'txtSearchStartDateTo.Text = ""

    'txtSearchEndDateFrom.Text = ""
    'txtSearchEndDateTo.Text = ""
    'txtSearchEntryDateFrom.Text = ""
    'txtSearchEntryDateTo.Text = ""

    'End Sub


    Protected Sub btnQuit_Click(sender As Object, e As EventArgs) Handles btnQuit.Click
        'Response.Redirect("Home.aspx")

        If String.IsNullOrEmpty(txtFrom.Text) = True Then
            Response.Redirect("Home.aspx")
        End If

        'If txtFrom.Text = "schedule" Then
        '    Session("invoiceno") = lblInvoiceId1.Text
        '    Response.Redirect("InvoiceSchedule.aspx")
        'End If

        If txtFrom.Text = "Corporate" Then
            Session.Add("customerfrom", "Corporate")
            Session.Add("armodule", "armodule")
            Response.Redirect("Company.aspx")
        End If

        If txtFrom.Text = "Residential" Then
            Session.Add("customerfrom", "Residential")
            Session.Add("armodule", "armodule")
            Response.Redirect("Person.aspx")
        End If

        If txtFrom.Text = "invoice" Then
            'Session.Add("customerfrom", "Residential")
            'Session.Add("armodule", "armodule")
            'Response.Redirect("Person.aspx")

            Session("cnfrom") = "invoice"
            Response.Redirect("Invoice.aspx")
        End If


    End Sub


    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        GridView1.PageIndex = e.NewPageIndex

        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If

        SQLDSCN.SelectCommand = txt.Text
        'GridView1.DataBind()
        GridView1.DataBind()
    End Sub


    'Protected Sub BtnChSt_Click(sender As Object, e As EventArgs) Handles BtnChSt.Click
    'Try


    '            Dim confirmValue As String
    '            confirmValue = ""

    '            confirmValue = Request.Form("confirm_valueChSt")
    '            If Right(confirmValue, 3) = "Yes" Then

    '                Dim strdate As DateTime
    '                Dim conn As MySqlConnection = New MySqlConnection()

    '                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '                'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '                conn.Open()


    '                ''''''''''''''''''E
    '                If Left(ddlStatusChSt.Text, 1) = "E" Then
    '                    Dim commandE1 As MySqlCommand = New MySqlCommand

    '                    commandE1.CommandType = CommandType.Text
    '                    commandE1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                    commandE1.Connection = conn

    '                    Dim drservice As MySqlDataReader = commandE1.ExecuteReader()
    '                    Dim dtservice As New DataTable
    '                    dtservice.Load(drservice)

    '                    If dtservice.Rows.Count > 0 Then
    '                        Dim commandE2 As MySqlCommand = New MySqlCommand
    '                        commandE2.CommandType = CommandType.Text
    '                        'Exit Sub
    '                        commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                        commandE2.Connection = conn
    '                        commandE2.ExecuteNonQuery()

    '                    End If
    '                    '''

    '                    Dim commandE As MySqlCommand = New MySqlCommand
    '                    commandE.CommandType = CommandType.Text

    '                    Dim qry As String = "UPDATE tblContract SET  Status ='E', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "


    '                    commandE.CommandText = qry
    '                    commandE.Parameters.Clear()


    '                    If txtActualEndChSt.Text = "" Then
    '                        commandE.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '                    Else
    '                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
    '                        commandE.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '                    End If

    '                    commandE.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
    '                    commandE.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '                    commandE.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '                    commandE.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '                    commandE.Connection = conn
    '                    commandE.ExecuteNonQuery()


    '                    'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")


    '                    conn.Close()
    '                    'Dim message As String = "alert('Contract Updated successfully!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '                    ''''''
    '                    GridView1.DataBind()
    '                    'txtServInst.Text = txtCommentChSt.Text
    '                    txtStatus.Text = "E"

    '                    '''''''''''''''''''E

    '                    '''''''''''''''''''T
    '                ElseIf Left(ddlStatusChSt.Text, 1) = "T" Then
    '                    Dim commandT1 As MySqlCommand = New MySqlCommand

    '                    commandT1.CommandType = CommandType.Text
    '                    commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                    commandT1.Connection = conn

    '                    Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
    '                    Dim dtserviceT As New DataTable
    '                    dtserviceT.Load(drserviceT)

    '                    If dtserviceT.Rows.Count > 0 Then
    '                        Dim commandT2 As MySqlCommand = New MySqlCommand
    '                        commandT2.CommandType = CommandType.Text
    '                        'Exit Sub
    '                        commandT2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                        commandT2.Connection = conn
    '                        commandT2.ExecuteNonQuery()
    '                    End If

    '                    Dim commandT As MySqlCommand = New MySqlCommand
    '                    commandT.CommandType = CommandType.Text

    '                    Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "


    '                    commandT.CommandText = qryT
    '                    commandT.Parameters.Clear()


    '                    If txtActualEndChSt.Text = "" Then
    '                        commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '                    Else
    '                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
    '                        commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '                    End If


    '                    commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)

    '                    commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '                    commandT.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '                    commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '                    commandT.Connection = conn
    '                    commandT.ExecuteNonQuery()

    '                    'Dim message As String = "alert('Contract Terminated successfully!!!!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '                    conn.Close()
    '                    'Dim messageT As String = "alert('Contract Updated successfully!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", messageT, True)

    '                    GridView1.DataBind()
    '                    'txtServInst.Text = txtCommentChSt.Text
    '                    txtStatus.Text = "T"

    '                    ''''''''''''''''''T

    '                    '''''''''''''''''''X
    '                ElseIf Left(ddlStatusChSt.Text, 1) = "X" Then
    '                    Dim commandX1 As MySqlCommand = New MySqlCommand

    '                    commandX1.CommandType = CommandType.Text
    '                    commandX1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                    commandX1.Connection = conn

    '                    Dim drserviceX As MySqlDataReader = commandX1.ExecuteReader()
    '                    Dim dtserviceX As New DataTable
    '                    dtserviceX.Load(drserviceX)

    '                    If dtserviceX.Rows.Count > 0 Then
    '                        Dim commandX2 As MySqlCommand = New MySqlCommand
    '                        commandX2.CommandType = CommandType.Text
    '                        'Exit Sub
    '                        commandX2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                        commandX2.Connection = conn
    '                        commandX2.ExecuteNonQuery()
    '                    End If

    '                    Dim commandX As MySqlCommand = New MySqlCommand
    '                    commandX.CommandType = CommandType.Text

    '                    Dim qryX As String = "UPDATE tblContract SET  Status ='X', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "

    '                    commandX.CommandText = qryX
    '                    commandX.Parameters.Clear()


    '                    If txtActualEndChSt.Text = "" Then
    '                        commandX.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '                    Else
    '                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
    '                        commandX.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '                    End If

    '                    commandX.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
    '                    commandX.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '                    commandX.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '                    commandX.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '                    commandX.Connection = conn
    '                    commandX.ExecuteNonQuery()
    '                    'Dim message As String = "alert('Contract Cancelled successfully!!!!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '                    conn.Close()
    '                    'Dim messageX As String = "alert('Contract Updated successfully!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", messageX, True)

    '                    GridView1.DataBind()
    '                    'txtServInst.Text = txtCommentChSt.Text
    '                    txtStatus.Text = "X"


    '                    ''''''''''''''''''X

    '                Else
    '                    Dim command1 As MySqlCommand = New MySqlCommand

    '                    command1.CommandType = CommandType.Text
    '                    command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                    command1.Connection = conn

    '                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
    '                    Dim dtserviceE As New DataTable
    '                    dtserviceE.Load(drserviceE)

    '                    If dtserviceE.Rows.Count > 0 Then
    '                        Dim command2 As MySqlCommand = New MySqlCommand
    '                        command2.CommandType = CommandType.Text

    '                        Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

    '                        command2.CommandText = qry1
    '                        command2.Parameters.Clear()

    '                        If ddlStatusChSt.SelectedIndex <> "-1" Then
    '                            command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
    '                        Else
    '                            command2.Parameters.AddWithValue("@Status", txtStatus.Text)
    '                        End If

    '                        command2.Connection = conn
    '                        command2.ExecuteNonQuery()
    '                    End If



    '                    ''Contract

    '                    Dim command As MySqlCommand = New MySqlCommand
    '                    command.CommandType = CommandType.Text

    '                    Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "


    '                    command.CommandText = qryE
    '                    command.Parameters.Clear()

    '                    If ddlStatusChSt.SelectedIndex <> "-1" Then
    '                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
    '                    Else
    '                        command.Parameters.AddWithValue("@Status", txtStatus.Text)
    '                    End If

    '                    If ddlRenewalStatus.SelectedIndex <> "0" Then
    '                        command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
    '                    Else
    '                        command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
    '                    End If



    '                    If txtActualEndChSt.Text = "" Then
    '                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '                    Else
    '                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
    '                        command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '                    End If


    '                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
    '                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '                    command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '                    command.Connection = conn
    '                    command.ExecuteNonQuery()
    '                    ''Dim message As String = "alert('Contract Status Changed successfully!!!!!!')"
    '                    ''ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '                    conn.Close()
    '                    'Dim messageE As String = "alert('Contract Updated successfully!!!')"
    '                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", messageE, True)


    '                    GridView1.DataBind()
    '                    'txtServInst.Text = txtCommentChSt.Text
    '                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

    '                    If ddlRenewalStatus.SelectedIndex <> "0" Then
    '                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
    '                    End If



    '                End If '  If Left(ddlStatusChSt.Text, 1) = "E" Then

    '                ddlStatusChSt.SelectedIndex = 0
    '                txtActualEndChSt.Text = ""
    '                txtCommentChSt.Text = ""

    '                GridView1.DataBind()
    '                ModalPopupExtender5.Hide()
    '                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
    '                lblAlert.Text = ""
    '            Else
    '                ModalPopupExtender5.Show()
    '            End If

    'InvalidStatus:
    '            If txtChangeStatus.Text = "000" Then
    '                lblAlert.Text = "SELECTED STATUS IS SAME AS CURRENT STATUS"
    '            ElseIf txtChangeStatus.Text = "001" Then
    '                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
    '            ElseIf txtChangeStatus.Text = "002" Then
    '                lblAlert.Text = "PLEASE SELECT VALID STATUS"
    '            ElseIf txtChangeStatus.Text = "003" Then
    '                lblAlert.Text = "ACTUAL END DATE CANNOT BE BLANK"

    '            End If

    '            ModalPopupExtender5.Hide()
    '        Catch ex As Exception
    '            Dim exstr As String
    '            exstr = ex.Message.ToString
    '            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '        End Try
    'End Sub

    Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        lblAlert.Text = ""
        Try
            If txtPostStatus.Text = "P" Then
                lblAlert.Text = "Credit Note has already been POSTED.. Cannot be DELETED"
                'Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

                Exit Sub
            End If

            If txtPostStatus.Text = "V" Then
                lblAlert.Text = "Credit Note is VOID.. Cannot be DELETED"
                'Dim message2 As String = "alert('Contract is VOID.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message2, True)

                Exit Sub
            End If

            lblAlert.Text = ""
            lblMessage.Text = "ACTION: DELETE RECORD"


            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                Dim qry1 As String = "DELETE from tblCN where Rcno= @Rcno "

                command1.CommandText = qry1
                command1.Parameters.Clear()

                command1.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                command1.Connection = conn
                command1.ExecuteNonQuery()



                'Dim command3 As MySqlCommand = New MySqlCommand
                'command3.CommandType = CommandType.Text

                'Dim qry3 As String = "DELETE from tblCNDet where ReceiptNumber= @ReceiptNumber "

                'command3.CommandText = qry3
                'command3.Parameters.Clear()

                'command3.Parameters.AddWithValue("@ReceiptNumber", txtCNNo.Text)
                'command3.Connection = conn
                'command3.ExecuteNonQuery()


                'Start:Loop thru' Credit values

                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                commandValues.CommandText = "SELECT *  FROM tblcndet where CNNumber ='" & txtCNNo.Text.Trim & "'"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                Dim lTotalReceiptAmt As Decimal
                Dim lInvoiceAmt As Decimal
                'Dim lReceptAmtAdjusted As Decimal

                lTotalReceiptAmt = 0.0
                lInvoiceAmt = 0.0

                lTotalReceiptAmt = dtValues.Rows(0)("CNValue").ToString
                Dim rowindex = 0

                For Each row As DataRow In dtValues.Rows

                    Dim lContractNo As String
                    Dim lServiceRecordNo As String
                    Dim lServiceDate As String

                    If Convert.ToDecimal(row("CNValue")) > 0.0 Then

                        Dim commandUpdateInvoiceValue As MySqlCommand = New MySqlCommand

                        commandUpdateInvoiceValue.CommandType = CommandType.Text
                        'commandUpdateInvoiceValue.CommandText = "SELECT *  FROM tblservicebillingdetailitem where rcno = " & row("RcnoServiceBillingItem")
                        commandUpdateInvoiceValue.CommandText = "SELECT *  FROM tblSalesDetail where rcno = " & row("RcnoServiceBillingItem")

                        commandUpdateInvoiceValue.Connection = conn

                        Dim drInvoiceValue As MySqlDataReader = commandUpdateInvoiceValue.ExecuteReader()
                        Dim dtInvoiceValue As New DataTable
                        dtInvoiceValue.Load(drInvoiceValue)

                        lContractNo = ""
                        lServiceRecordNo = ""
                        lServiceDate = ""

                        For Each row1 As DataRow In dtInvoiceValue.Rows

                            Dim command3 As MySqlCommand = New MySqlCommand
                            command3.CommandType = CommandType.Text

                            Dim qry3 As String = "DELETE from tblCNDet where rcno= @rcno "

                            command3.CommandText = qry3
                            command3.Parameters.Clear()

                            command3.Parameters.AddWithValue("@rcno", row("Rcno"))
                            command3.Connection = conn
                            command3.ExecuteNonQuery()

                            'Updatetblservicebillingdetailitem(row("RcnoServiceBillingItem"), row("ServiceRecordNo"))



                        Next row1
                    End If
                Next row

                ''''''''''''''''''''''''''''''''''

                conn.Close()
                conn.Dispose()
                calculateTotalCN()

                'conn.Close()



                'btnADD_Click(sender, e)

                'txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit 50"
                SQLDSCN.SelectCommand = txt.Text
                SQLDSCN.DataBind()
                'GridView1.DataSourceID = "SqlDSContract"

                lblMessage.Text = "DELETE: CREDIT NOTE SUCCESSFULLY DELETED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)


                MakeMeNull()
                MakeMeNullBillingDetails()
                FirstGridViewRowGL()
                GridView1.DataBind()

                'Dim message As String = "alert('Contract is deleted Successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                updPnlMsg.Update()
                updPnlSearch.Update()
                'updpnlServiceRecs.Update()
                'GridView1.DataBind()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnDelete_Click", ex.Message.ToString, "")
            Exit Sub


        End Try
    End Sub


    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting

        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If

        'GridView1.DataBind()

        SQLDSCN.SelectCommand = txt.Text
        GridView1.DataBind()
    End Sub




    ''''''' Start: Service Details



    Protected Sub btnReset_Click(sender As Object, e As EventArgs) Handles btnReset.Click
        'Session("serviceschedulefrom") = ""
        'Session("contractno") = ""
        'Session("contractdetailfrom") = ""

        'txt.Text = "SELECT * From tblCN where (1=1)  and Status ='O' order by rcno desc, CustName limit 50"

        txtAccountIdSearch.Text = ""
        'txtBillingPeriodSearch.Text = ""
        'txtInvoiceNoSearch.Text = ""
        txtClientNameSearch.Text = ""
        'txtBillingPeriodSearch.Text = ""
        'ddlSalesmanSearch.SelectedIndex = 0
        txtSearch1Status.Text = "O,P"
        ddlCompanyGrpSearch.SelectedIndex = 0
        'btnSearch1Status_Click(sender, e)
        'SQLDSInvoice.SelectCommand = txt.Text
        'SQLDSInvoice.DataBind()
        btnQuickSearch_Click(sender, e)

        'GridView1.DataSourceID = "SQLDSCN"

        'GridView1.DataBind()


    End Sub


    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        lblMessage.Text = ""
        lblAlert.Text = ""
        'If txtStatus.Text = "O" Then
        '    'btnSave.Enabled = True
        'Else
        '    'btnSave.Enabled = False
        '    lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
        '    Exit Sub
        'End If
        grvBillingDetailsNew.Enabled = True
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return
        End If

        lblMessage.Text = "ACTION: EDIT RECORD"

        txtMode.Text = "EDIT"

        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnPost.Enabled = False
        btnPost.ForeColor = System.Drawing.Color.Gray

        'btnQuit.Enabled = False
        'btnQuit.ForeColor = System.Drawing.Color.Gray

        EnableControls()


        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black
        grvBillingDetails.Visible = True



        If grvBillingDetailsNew.Rows.Count = 0 Then
            'grvBillingDetailsNew.Visible = False
            grvBillingDetails.ShowHeader = True

        Else
            grvBillingDetailsNew.Visible = True
            grvBillingDetails.ShowHeader = False

        End If
        updPanelCN.Update()
    End Sub


    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click

        'lblMessage.Text = ""
        'If txtRcno.Text = "" Then
        '    lblAlert.Text = "SELECT RECORD TO COPY"
        '    Return

        'End If
        ''DisableControls()
        ''txtMode.Text = "EDIT"
        'lblMessage.Text = "ACTION: COPY RECORD"

        'txtMode.Text = "NEW"
        'EnableControls()
        ''btnDelete.Enabled = True
        ''btnDelete.ForeColor = System.Drawing.Color.Black
        'btnQuit.Enabled = True
        'btnQuit.ForeColor = System.Drawing.Color.Black


        ''If Not (txtStatus.Text = "O" Or txtStatus.Text = "P" Or txtStatus.Text = "E" Or txtStatus.Text = "T" Or txtStatus.Text = "C") Then
        ''    Dim message As String = "alert('Contract Status should be [O/C/E/P/T]!!!')"
        ''    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        ''    Exit Sub
        ''End If



        'txtContractNo.Text = ""
        'txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
        'txtConDetVal.Text = "0.00"
        'txtAgreeVal.Text = "0.00"
        'txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")

        ''txtContractEnd.Text = ""
        'txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
        'txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString()
        ''txtServEnd.Text = ""
        ''txtServEndDay.Text = ""
        ''TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
        'txtServTimeIn.Text = ""
        'txtServTimeOut.Text = ""
        'txtAllocTime.Text = "0"
        ' ''txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")
        ''txtWarrEnd.Text = ""
        'txtValPerMnth.Text = ""
        ''txtContractNotes.Text = ""
        ''txtServInst.Text = ""
        'txtStatus.Text = "O"
        'txtRs.Text = "O"
        'txtNS.Text = "O"
        'txtProspectId.Text = ""
        'txtGS.Text = "O"
        ''txtRemarks.Text = ""
        'txtPrintBody.Text = ""
        ''txtClient.Text = ""
        ''txtContactPerson.Text = ""


    End Sub

    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", "1", "")
            Dim strsql As String

            'strsql = "SELECT distinct a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1, a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.ValueBase, a.ValueOriginal, a.GstBase, a.GstOriginal, a.AppliedBase, a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.YourRef, a.Terms, a.DiscountAmount, a.GSTAmount, a.NetAmount, a.GlPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Salesman a.Comments, a.AmountWithDiscount, a.TermsDay, a.RecurringInvoice, a.ReceiptBase, a.CreditBase, a.BalanceBase, a.StaffCode, a.CustAddress1, a.CustAddCountry, a.CustAddPostal, a.LedgerCode, a.LedgerName, a.CreatedBy, a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.rcno, a.BillSchedule, a.PrintCounter FROM tblsales a WHERE 1=1   "

            strsql = "SELECT distinct a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1,    "
            strsql = strsql + " a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.ValueBase, a.ValueOriginal, a.GstBase, a.GstOriginal, a.AppliedBase,    "
            strsql = strsql + " a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.YourRef, a.Terms, a.DiscountAmount,    "
            strsql = strsql + " a.GSTAmount, a.NetAmount, a.GlPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Comments, a.AmountWithDiscount,    "
            strsql = strsql + " a.TermsDay, a.RecurringInvoice, a.ReceiptBase, a.CreditBase, a.BalanceBase, a.StaffCode, a.CustAddress1, a.CustAddCountry,    "
            strsql = strsql + " a.CustAddPostal, a.LedgerCode, a.LedgerName, a.CreatedBy, a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.rcno, a.BillSchedule, a.PrintCounter, a.Location,a.TaxIdentificationNo,a.SalesTaxRegistrationNo, a.EI, a.EInvoiceStatus, a.UUID,a.SubmissionDate,a.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), a.submissiondate))>0),(71-HOUR(TIMEDIFF(now(), a.submissiondate))),0) as TimeToCancel    "
            'strsql = strsql + " FROM tblsales a, tblSalesDetail b WHERE 1=1   "

            strsql = strsql + " FROM tblsales a Left OUTER join  tblSalesDetail b on a.InvoiceNumber=b.InvoiceNumber WHERE 1=1   "

            txtCondition.Text = " and (a.DocType='ARCN' or a.DocType='ARDN')  "
            'txtCondition.Text = txtCondition.Text & " and a.InvoiceNumber = b.InvoiceNumber  "

            'inner join tblContractdet B on A.ContractNo=B.ContractNo
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "2")


            'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                txtCondition.Text = txtCondition.Text & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & Session("SecGroupAuthority") & "') "

                'If ddlBranch.SelectedIndex > 0 Then
                '    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                '        txtCondition.Text = txtCondition.Text & " and a.location = '" & ddlBranch.Text.Trim + "'"
                '    End If
                'End If


                '17.01.24

                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    txtCondition.Text = txtCondition.Text + " and a.location in (" + YrStr + ")"

                Else
                    txtCondition.Text = txtCondition.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                Dim YrStrList2 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlInvoiceStatusSearch.Items
                    If item.Selected Then

                        YrStrList2.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList2.Count > 0 Then

                    Dim YrStr2 As [String] = [String].Join(",", YrStrList2.ToArray)
                    txtCondition.Text = txtCondition.Text + " and a.EInvoiceStatus in (" + YrStr2 + ")"

                End If
                '17.01.24
            End If

            If chkEInvoiceSearch.Checked = True Then
                txtCondition.Text = txtCondition.Text & " and a.EI = 'Y'"
            End If

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str.ToUpper)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                txtCondition.Text = txtCondition.Text & " and a.PostStatus in (" + YrStr + ")"

            End If


            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    'txtCondition.Text = txtCondition.Text + " and Location = '" & txtLocation.Text & "'"
            '    txtCondition.Text = txtCondition.Text & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            'End If

            If String.IsNullOrEmpty(txtInvoiceNoSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and b.SourceInvoice = '" & txtInvoiceNoSearch.Text.Trim + "'"
            End If

            If ddlCompanyGrpSearch.SelectedIndex > 0 Then
                If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                    txtCondition.Text = txtCondition.Text & " and a.CompanyGroup = '" & ddlCompanyGrpSearch.Text.Trim + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtInvoiceDateFromSearch.Text) = False And txtInvoiceDateFromSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateFromSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateToSearch.Text) = False And txtInvoiceDateToSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateToSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtReceiptnoSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.InvoiceNumber like '%" & txtReceiptnoSearch.Text.Trim + "%'"
            End If


            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and (a.AccountId like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
            End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.CustName like ""%" & txtClientNameSearch.Text & "%"""
            End If


            txtOrderBy.Text = " order by rcno desc, CustName "
            txt.Text = strsql
            'txtComments.Text = strsql

            'SQLDSCN.SelectCommand = strsql
            'SQLDSCN.DataBind()
            'GridView1.DataBind()

            strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            txt.Text = strsql

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "3")

            SQLDSCN.SelectCommand = strsql
            SQLDSCN.DataBind()

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "3")

            GridView1.DataBind()
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "3")

            CalculateTotal()

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "4")


            If GridView1.Rows.Count > 0 Then
                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                MakeMeNull()
                MakeMeNullBillingDetails()
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                GridView1.SelectedIndex = 0
                'GridView1_SelectedIndexChanged(sender, e)
            End If

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            updPnlMsg.Update()

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "4")

            SqlDSMultiPrint.SelectCommand = ""
            SqlDSMultiPrint.SelectCommand = txt.Text

            'SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
            grdViewMultiPrint.DataBind()

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", strsql, "5")


            InsertIntoTblWebEventLog("QuickSearch", txtDisabledEInvoicing.Text, txtECNStatus.Text, txtCreatedBy.Text)

            If txtDisabledEInvoicing.Text = True Then
                '  btnPostECN.Visible = False
            Else
                '  btnPostECN.Visible = True

                If txtECNStatus.Text = "APPROVED" Or txtECNStatus.Text = "VALID" Then
                    btnPostECN.Text = "CANCEL E-CN/DN"
                    '  InsertIntoTblWebEventLog("PopulateRecord1", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
                    InsertIntoTblWebEventLog("PopulateRecord3", txtTimeToCancel.Text, txtECNStatus.Text, txtCreatedBy.Text)
                    If Convert.ToInt16(txtTimeToCancel.Text) = 0 Then
                        btnPostECN.Enabled = False
                        btnPostECN.Forecolor = System.Drawing.Color.Gray
                    Else
                        btnPostECN.Enabled = True
                        btnPostECN.Forecolor = System.Drawing.Color.Black
                    End If
                Else
                    If txtEI.Text = "Y" Then
                        btnPostECN.Text = "SUBMIT E-CN/DN"
                        '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
                        btnPrint.Enabled = False
                        btnPrint.Forecolor = System.Drawing.Color.Gray
                    Else
                        btnPostECN.Text = "SUBMIT E-CN/DN"
                        '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
                        btnPrint.Enabled = False
                        btnPrint.Forecolor = System.Drawing.Color.Gray
                        btnPostECN.Enabled = False
                        btnPostECN.Forecolor = System.Drawing.Color.Gray
                    End If

                End If
            End If
            'GridSelected = "SQLDSContract"
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnQuickSearch_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Protected Sub ImageButton2_Click(sender As Object, e As ImageClickEventArgs)
        lblAlert.Text = ""

        'txtContType1.Text = "CORPORATE"
        'txtContType2.Text = "COMPANY"
        'txtContType3.Text = "RESIDENTIAL"
        'txtContType4.Text = "PERSON"

        'mdlPopUpClient.Show()
    End Sub

    Protected Sub btnShowRecords_Click(sender As Object, e As EventArgs)
        'PopulateServiceGrid()
        'btnSave.Enabled = True
        'updPanelSave.Update()
    End Sub

    Private Sub PopulateServiceGrid()

        Try
            Dim sql As String
            sql = ""
            'If ddlContactTypeIS.SelectedIndex = 1 Then
            '    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup, "
            '    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '    'sql = sql + " FROM tblservicerecord A, tblCompany B, tblContract C "
            '    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

            '    If ddlServiceFrequency.Text.Trim = "-1" Then
            '        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '        sql = sql + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
            '        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
            '        sql = sql + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0 and  (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId   and A.ContactType = '" & ddlContactType.Text.Trim & "'"
            '    Else
            '        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '        sql = sql + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
            '        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
            '        sql = sql + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0 and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo  and A.ContactType = '" & ddlContactType.Text.Trim & "'"
            '    End If

            'ElseIf ddlContactTypeIS.SelectedIndex = 2 Then
            '    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, "
            '    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '    'sql = sql + " FROM tblservicerecord A, tblPerson B, tblContract C "
            '    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

            '    If ddlServiceFrequency.Text.Trim = "-1" Then
            '        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '        sql = sql + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
            '        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
            '        sql = sql + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0  and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContactType = '" & ddlContactType.Text.Trim & "'"
            '    Else
            '        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
            '        sql = sql + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
            '        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
            '        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
            '        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
            '        sql = sql + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0  and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and  A.ContactType = '" & ddlContactType.Text.Trim & "'"
            '    End If
            'End If

            'sql = sql + "Select A.Rcno,  A.RecordNo, A.AccountID, A.ContractNo, A.CustName,   A.BillNo,  A.CompanyGroup, A.LocationID , A.BillAmount, A.ServiceDate, A.BilledAmt  FROM tblServiceRecord A  where (Billno is not null and Billno <> '')  "

            If ddlDocType.Text = "ARCN" Then
                sql = sql + "Select A.Rcno,  A.RecordNo, A.AccountID, A.ContractNo, A.CustName,   A.BillNo,  A.CompanyGroup, A.LocationID , A.BillAmount, A.ServiceDate, A.BilledAmt  FROM tblServiceRecord A  where (Billno is not null and Billno <> '')  "
            Else
                sql = sql + "Select A.Rcno,  A.RecordNo, A.AccountID, A.ContractNo, A.CustName,   A.BillNo,  A.CompanyGroup, A.LocationID , A.BillAmount, A.ServiceDate, A.BilledAmt  FROM tblServiceRecord A  where 1 = 1  "
            End If
          
            If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                sql = sql + " and  A.AccountID = '" & txtAccountId.Text & "'"
            Else
                If String.IsNullOrEmpty(txtClientName.Text) = False Then
                    sql = sql + " and  A.ServiceName like ""%" & txtClientName.Text & "%"""
                End If
            End If

            If ddlCompanyGrp.Text.Trim <> "--SELECT--" Then
                sql = sql + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
            End If

            'If ddlContractNo.Text.Trim <> "-1" Then
            If String.IsNullOrEmpty(ddlContractNo.Text) = False Then
                sql = sql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
            End If

            If String.IsNullOrEmpty(txtDateFrom.Text) = False And String.IsNullOrEmpty(txtDateTo.Text) = True Then
                sql = sql + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateTo.Text) = False And String.IsNullOrEmpty(txtDateFrom.Text) = True Then
                sql = sql + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFrom.Text) = False And String.IsNullOrEmpty(txtDateTo.Text) = False Then
                sql = sql + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtLocationId.Text) = False Then
                sql = sql + " and   A.LocationId = '" & txtLocationId.Text & "'"
            End If

            If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                sql = sql + " and   A.BillNo = '" & txtInvoiceNo.Text & "'"
            End If

            'If ddlServiceFrequency.Text.Trim <> "-1" Then
            '    sql = sql + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
            'End If

            'If ddlBillingFrequency.Text.Trim <> "-1" Then
            '    sql = sql + " and   C.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
            'End If

            'If ddlContractGroup.Text.Trim <> "-1" Then
            '    sql = sql + " and   C.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
            'End If


            'If String.IsNullOrEmpty(txtServiceBy.Text) = False Then
            '    sql = sql + " and   A.ServiceBy like '%" & txtServiceBy.Text & "%'"
            'End If

            If rdbCompleted.Checked = True Then
                sql = sql + " and  A.Status = 'P' "
            End If

            If rdbNotCompleted.Checked = True Then
                sql = sql + " and  A.Status = 'O' "
            End If


            SqlDSServices.SelectCommand = sql
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            Label6.Text = "SERVICE BILLING DETAILS : Total Records: " & grvServiceRecDetails.Rows.Count.ToString
            'If ChkServicesAll.Checked = True Then
            '    sql = sql + " and  A.Status = 'C'"
            'End If

            'If rbtServicestatus.SelectedValue = "C" Then
            '    sql = sql + " and  A.Status = 'P'"
            'End If

            'If rbtServicestatus.SelectedValue = "N" Then
            '    sql = sql + " and  A.Status = 'O'"
            'End If
            'txtInchargeSearch.Text = sql

            'End If

            'If rdbGrouping.SelectedIndex = 0 Then
            '    Sql = Sql + " order by A.ContractNo, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 1 Then
            '    Sql = Sql + " order by A.AccountID, A.LocationId"
            'ElseIf rdbGrouping.SelectedIndex = 2 Then
            '    Sql = Sql + " order by A.AccountID, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 3 Then
            'End If
            'End: Service Recods


        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PopulateServiceGrid", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    '''''''''' Start: Service Record




    'Start: Billing Details Grid


    Private Sub FirstGridViewRowBillingDetailsRecs()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing

            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            'dt.Columns.Add(New DataColumn("SelRec", GetType(String)))

            dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemCode", GetType(String)))
            dt.Columns.Add(New DataColumn("Description", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Qty", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerUOM", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPrice", GetType(String)))

            dt.Columns.Add(New DataColumn("DiscPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("DiscAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("PriceWithDisc", GetType(String)))

            dt.Columns.Add(New DataColumn("TaxType", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPriceWithGST", GetType(String)))

            dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecordDetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceBillingDetailItem", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("OtherCode", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))

            dt.Columns.Add(New DataColumn("BillingFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceBy", GetType(String)))

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceLocationGroup", GetType(String)))


            dr = dt.NewRow()

            dr("ItemType") = String.Empty
            dr("ItemCode") = String.Empty
            dr("Description") = String.Empty
            dr("ItemDescription") = String.Empty
            dr("GLDescription") = String.Empty

            dr("UOM") = String.Empty
            dr("Qty") = 0
            dr("PricePerUOM") = 0.0
            dr("TotalPrice") = 0
            dr("DiscPerc") = 0.0
            dr("DiscAmount") = 0
            dr("PriceWithDisc") = 0
            dr("TaxType") = String.Empty
            dr("GSTPerc") = 0.0
            dr("GSTAmt") = 0
            dr("TotalPriceWithGST") = 0
            dr("RcnoServiceRecord") = 0
            dr("RcnoInvoice") = 0
            dr("InvoiceNo") = String.Empty
            dr("ContractNo") = String.Empty
            dr("OtherCode") = 0
            dr("ServiceRecordNo") = String.Empty
            dr("ServiceDate") = String.Empty
            dr("BillingFrequency") = String.Empty
            dr("ServiceBy") = String.Empty
            dr("LocationId") = String.Empty
            dr("ServiceLocationGroup") = String.Empty


            dt.Rows.Add(dr)

            ViewState("CurrentTableBillingDetailsRec") = dt

            grvBillingDetails.DataSource = dt
            grvBillingDetails.DataBind()

            Dim btnAdd As Button = CType(grvBillingDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FirstGridViewRowBillingDetailsRecs", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowBillingDetailsRecs()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        'Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGV"), TextBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        'Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N2")

                        If String.IsNullOrEmpty(TextBoxQty.Text.Trim) = True Then
                            TextBoxQty.Text = "1"
                        End If

                        If ddlDocType.Text = "ARCN" Then
                            If TextBoxQty.Text > 0 Then
                                TextBoxQty.Text = TextBoxQty.Text * (-1)
                            End If

                            'Else
                            '    TextBoxQty.Text = "1.00"
                        End If

                        TextBoxOtherCode.Text = txtGLCodeIS.Text
                        TextBoxGLDescription.Text = txtLedgerNameIS.Text

                        'Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                        'dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text

                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxTargetDesc1 As TextBox = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        'Query = "Select TaxType from tbltaxtype"
                        'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)

                        Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtItemCodeGV"), DropDownList)

                        TextBoxItemCode1.Items.Clear()
                        Query = "Select * from tblbillingproducts where InActive = False "
                        PopulateDropDownList(Query, "Description", "Description", TextBoxItemCode1)

                        'Dim Query As String
                        'Query = "Select * from tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

                        Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Query = "Select * from tblunitms order by UnitMs"
                        PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM1)


                        'Dim TextBoxRecordNo As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtServiceRecordGV"), DropDownList)
                        'Query = "Select RecordNo from tblServiceRecord where  AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                        'PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo)

                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)

                        Dim TextBoxInvoiceNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
                        Dim TextBoxContractNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxItemServiceNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordGV"), TextBox)


                        'If TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxQty1.Enabled = False
                        '    TextBoxItemCode1.Enabled = False

                        '    TextBoxInvoiceNo1.Enabled = True
                        '    TextBoxContractNo1.Enabled = True
                        '    TextBoxItemServiceNo1.Enabled = True
                        'Else
                        '    TextBoxInvoiceNo1.Enabled = False
                        '    TextBoxContractNo1.Enabled = False
                        '    TextBoxItemServiceNo1.Enabled = False
                        'End If

                        If TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxQty1.Enabled = False
                            TextBoxItemCode1.Enabled = False

                            TextBoxInvoiceNo1.Enabled = True
                            TextBoxContractNo1.Enabled = True
                            TextBoxItemServiceNo1.Enabled = True
                        Else
                            TextBoxInvoiceNo1.Enabled = False
                            TextBoxContractNo1.Enabled = False
                            TextBoxItemServiceNo1.Enabled = False
                        End If

                        'If ddl1.Text = "OTHERS" Then
                        '    lblid2.Enabled = False
                        '    lblid3.Enabled = False
                        '    lblid4.Enabled = False
                        'Else
                        '    lblid2.Enabled = True
                        '    lblid3.Enabled = True
                        '    lblid4.Enabled = True
                        'End If
                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    'Private Sub AddNewRowWithDetailRecBillingDetailsRecs()
    '    Try
    '        Dim rowIndex As Integer = 0
    '        'Dim Query As String
    '        If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
    '            Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
    '            Dim drCurrentRow As DataRow = Nothing
    '            If TotDetailRecords > 0 Then
    '                For i As Integer = 1 To (dtCurrentTable.Rows.Count)

    '                    'Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("chkSelectGV"), CheckBox)
    '                    Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGV"), TextBox)
    '                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
    '                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
    '                    Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
    '                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
    '                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
    '                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
    '                    Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
    '                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

    '                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
    '                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
    '                    Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

    '                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
    '                    Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
    '                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

    '                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

    '                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
    '                    Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
    '                    'Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
    '                    'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
    '                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
    '                    Dim TextBoxTaxType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), DropDownList)
    '                    Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

    '                    Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
    '                    Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
    '                    Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
    '                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

    '                    Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
    '                    Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)



    '                    drCurrentRow = dtCurrentTable.NewRow()

    '                    'dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
    '                    dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
    '                    dtCurrentTable.Rows(i - 1)("InvoiceDate") = TextBoxInvoiceDate.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceNo") = TextBoxServiceNo.Text
    '                    dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
    '                    dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
    '                    dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
    '                    'dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
    '                    'dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
    '                    'dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
    '                    'dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
    '                    'dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
    '                    'dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text
    '                    dtCurrentTable.Rows(i - 1)("TotalReceiptAmt") = TextBoxTotalReceiptAmt.Text
    '                    'dtCurrentTable.Rows(i - 1)("TotalCrediteNoteAmt") = TextBoxBalanceAmt.Text

    '                    dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("CNGSTAmt") = TextBoxCNGSTAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("RcnoReceipt") = TextBoxRcnoReceipt.Text
    '                    dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
    '                    dtCurrentTable.Rows(i - 1)("ARCode") = TextBoxARCode.Text
    '                    dtCurrentTable.Rows(i - 1)("GSTCode") = TextBoGSTCode.Text
    '                    dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
    '                    dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
    '                    rowIndex += 1

    '                Next i
    '                dtCurrentTable.Rows.Add(drCurrentRow)
    '                ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable

    '                grvBillingDetails.DataSource = dtCurrentTable
    '                grvBillingDetails.DataBind()
    '            End If
    '        Else
    '            Response.Write("ViewState is null")
    '        End If
    '        SetPreviousDataBillingDetailsRecs()
    '    Catch ex As Exception
    '        Throw ex
    '    End Try
    'End Sub

    Private Sub SetPreviousDataBillingDetailsRecs()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGV"), TextBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        'Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)


                        TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxItemCode.Text = dt.Rows(i)("ItemCode").ToString()
                        TextBoxDescription.Text = dt.Rows(i)("Description").ToString()
                        TextBoxItemDescription.Text = dt.Rows(i)("ItemDescription").ToString()
                        TextBoxUOM.Text = dt.Rows(i)("UOM").ToString()
                        TextBoxQty.Text = dt.Rows(i)("Qty").ToString()
                        TextBoxPricePerUOM.Text = dt.Rows(i)("PricePerUOM").ToString()
                        TextBoxTotalPrice.Text = dt.Rows(i)("TotalPrice").ToString()

                        TextBoxDiscPerc.Text = dt.Rows(i)("DiscPerc").ToString()
                        TextBoxDiscAmount.Text = dt.Rows(i)("DiscAmount").ToString()
                        TextBoxPriceWithDisc.Text = dt.Rows(i)("PriceWithDisc").ToString()

                        TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxGSTPerc.Text = dt.Rows(i)("GSTPerc").ToString()
                        TextBoxGSTAmt.Text = dt.Rows(i)("GSTAmt").ToString()
                        TextBoxTotalPriceWithGST.Text = dt.Rows(i)("TotalPriceWithGST").ToString()

                        TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        'TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxOtherCode.Text = dt.Rows(i)("OtherCode").ToString()
                        'TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()

                        TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
                        TextBoxServiceBy.Text = dt.Rows(i)("ServiceBy").ToString()
                        TextBoxBillingFrequency.Text = dt.Rows(i)("BillingFrequency").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString

                        TextBoxLocationID.Text = dt.Rows(i)("LocationID").ToString
                        TextBoxserviceLocationGroup.Text = dt.Rows(i)("serviceLocationGroup").ToString

                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()



                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxTaxType1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtTaxTypeGV"), TextBox)

                        Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)

                        '''''''''''''
                        Dim Query As String
                        Dim TextBoxRcnoInvoice1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxRecordNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)



                        '---- 14.07.17
                        'If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                        '    TextBoxRecordNo1.Enabled = False
                        'ElseIf TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxRecordNo1.Enabled = True
                        'End If
                        '---- 14.07.17

                        If txtMode.Text = "View" Then

                            'If TextBoxItemType1.Text <> "-1" Then
                            '    Query = "Select RecordNo from tblServiceRecord where AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                            '    TextBoxRecordNo1.Items.Clear()
                            '    TextBoxRecordNo1.Items.Add("--SELECT--")
                            '    PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                            '    TextBoxRecordNo1.Enabled = False
                            'End If

                        Else
                            If TextBoxItemType1.Text <> "-1" Then
                                If String.IsNullOrEmpty(TextBoxRcnoInvoice1.Text) = False Then
                                    'Query = "Select RecordNo from tblServiceRecord where AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")
                                    'PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    'TextBoxRecordNo1.Enabled = False

                                    If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                        'TextBoxRecordNo1.Enabled = False
                                    ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                        'TextBoxRecordNo1.Enabled = True
                                    End If

                                Else
                                    'Query = "Select RecordNo from tblServiceRecord where BillYN= 'N' and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'Query = "Select RecordNo from tblServiceRecord where (BillAmount - BilledAmt - TotalCreditAmount) > 0 and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")

                                    'If TextBoxItemType1.Text = "SERVICE" Then
                                    '    PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    'End If


                                    '----------- 14.07.17
                                    'TextBoxRecordNo1.Enabled = True

                                    'If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                    '    TextBoxRecordNo1.Enabled = False
                                    'ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                    '    TextBoxRecordNo1.Enabled = True
                                    'End If

                                    '---------- 14.07.17
                                End If


                            End If



                            If TextBoxItemType1.Enabled = False Then
                                'TextBoxRecordNo1.Enabled = False
                            End If
                        End If

                        'Query = "Select RecordNo from tblServiceRecord where AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                        'PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo)

                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim rowIndex2 As Integer = 0
                        Dim j As Integer = 1
                        Do While j <= (rowIndex)

                            Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            Query = "Select * from tblunitms order by UnitMs"
                            PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM1)

                            'Dim TextBoxSelect2 As CheckBox = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("chkSelectRecGV"), CheckBox)
                            'TextBoxSelect2.Checked = True



                            rowIndex2 += 1
                            j += 1
                        Loop


                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        If TextBoxItemType1.Text <> "-1" Then
                            'Dim query As String

                            '30.05.17

                            Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                            'query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                            'TextBoxItemCode2.Items.Clear()
                            'TextBoxItemCode2.Items.Add("--SELECT--")

                            If TextBoxItemCode2.Items.Count = 1 Then
                                Query = "Select * from tblbillingproducts where InActive = False "
                                PopulateDropDownList(Query, "Description", "Description", TextBoxItemCode2)
                            End If

                            '12.01.17
                            'Dim TextBoxTaxCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                            'Query = "Select * from tbltaxType order by taxType"
                            'PopulateDropDownList(Query, "taxType", "taxType", TextBoxTaxCode1)
                            '12.01.17
                            '30.05.17

                            'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            'query = "Select * from tblunitms "
                            'PopulateDropDownList(query, "UnitMs", "UnitMs", TextBoxUOM)

                            Dim TextBoxInvoiceNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
                            Dim TextBoxContractNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                            Dim TextBoxItemServiceNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordGV"), TextBox)


                            If TextBoxItemType1.Text = "SERVICE" Then
                                TextBoxQty1.Enabled = False
                                TextBoxItemCode1.Enabled = False

                                TextBoxInvoiceNo1.Enabled = True
                                TextBoxContractNo1.Enabled = True
                                TextBoxItemServiceNo1.Enabled = True
                            Else
                                'TextBoxInvoiceNo1.Enabled = False
                                TextBoxContractNo1.Enabled = False
                                TextBoxItemServiceNo1.Enabled = False
                            End If

                        End If

                        rowIndex += 1
                    Next i
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SetRowDataBillingDetailsRecs()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGV"), TextBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        'Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text

                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Throw ex
        End Try

    End Sub

    'End: Biling Details Grid

    'Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs)
    '    lblAlert.Text = ""
    '    If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
    '        '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
    '        lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
    '        Exit Sub
    '    End If


    '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
    '        txtPopUpClient.Text = txtAccountId.Text
    '        txtPopupClientSearch.Text = txtPopUpClient.Text

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contactperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contACTperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        End If

    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    Else

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1  order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where 1=1  order by name"
    '        End If


    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    End If
    '    mdlPopUpClient.Show()
    'End Sub

    'Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs)
    'If txtPopUpClient.Text.Trim = "" Then
    '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
    'Else
    '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
    '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

    '    SqlDSClient.DataBind()
    '    gvClient.DataBind()
    '    mdlPopUpClient.Show()
    'End If
    'End Sub

    'Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging

    '    gvClient.PageIndex = e.NewPageIndex




    '    If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON order by name"
    '        End If
    '    Else
    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and (upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or accountid like '" + txtPopUpClient.Text + "%' or contactperson like '%" + txtPopUpClient.Text + "%') order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON where 1=1 and (upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or accountid like '" + txtPopUpClient.Text + "%' or contACTperson like '%" + txtPopUpClient.Text + "%') order by name"
    '        End If

    '        'SqlDSClient.DataBind()
    '        'gvClient.DataBind()
    '        'mdlPopUpClient.Show()
    '    End If

    '    SqlDSClient.DataBind()
    '    gvClient.DataBind()
    '    mdlPopUpClient.Show()
    '    'End If

    'End Sub



    Private Sub CalculatePrice()
        Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
        Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
        Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGV"), TextBox)

        Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGV"), TextBox)
        Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGV"), TextBox)
        Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGV"), TextBox)

        Dim lblid10 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)

        Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
        Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGV"), TextBox)
        Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGV"), TextBox)

        Dim dblQty As String
        Dim dblPricePerUOM As String
        Dim dblTotalPrice As String

        Dim dblDiscPerc As String
        Dim dblDisAmount As String
        Dim dblPriceWithDisc As String

        Dim dblGSTPerc As String
        Dim dblGSTAmt As String
        Dim dblTotalPriceWithGST As String


        If String.IsNullOrEmpty(lblid1.Text) = True Then
            lblid1.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid2.Text) = True Then
            lblid2.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid3.Text) = True Then
            lblid3.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid4.Text) = True Then
            lblid4.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid5.Text) = True Then
            lblid5.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid6.Text) = True Then
            lblid6.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid7.Text) = True Then
            lblid7.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid8.Text) = True Then
            lblid8.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid9.Text) = True Then
            lblid9.Text = "0.00"
        End If


        'If lblid10.Text = "SR" Then
        '    lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")
        'Else
        '    lblid7.Text = "0.00"
        'End If


        lblid10.Text = txtGST.Text
        lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

        dblQty = (lblid1.Text)
        dblPricePerUOM = (lblid2.Text)
        dblTotalPrice = (lblid3.Text)

        dblDiscPerc = (lblid4.Text)
        dblDisAmount = (lblid5.Text)
        dblPriceWithDisc = (lblid6.Text)

        dblGSTPerc = (lblid7.Text)
        dblGSTAmt = (lblid8.Text)
        dblTotalPriceWithGST = (lblid9.Text)

        lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
        lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
        lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))
        lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
        lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

        CalculateTotalPrice()


    End Sub

    Private Sub CalculateTotalPrice()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0
            Dim TotalPrice As Decimal = 0.0

            'If txtMode.Text = "EDIT" Then
            txtCNAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            txtCNGSTAmount.Text = "0.00"
            txtCNNetAmount.Text = "0.00"
            'End If

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0


            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        'txtTotalPriceGVB
                        If ddlDocType.Text = "ARCN" Then
                            If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                                TextBoxQty.Text = "-1"
                            End If
                        Else
                            If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                                TextBoxQty.Text = "1"
                            End If
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                            TextBoxPricePerUOMGV.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                            TextBoxTotalPrice.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                            TextBoxDiscAmount.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                            TextBoxDiscPerc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                            TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        If TextBoxUOM.SelectedIndex = 0 Then
                            TextBoxUOM.Text = "UNIT"
                        End If

                        txtGST.Text = TextBoxTaxCode.Text

                        If txtGST.Text = "SR" Or txtGST.Text = "SR8" Or txtGST.Text = "DSP" Or txtGST.Text = "SR9" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtCNGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtCNNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)).ToString("N2")
                        Else
                            'txtGST1.Text = "0.00"
                            txtCNGSTAmount.Text = "0.00"
                            txtCNNetAmount.Text = txtCNAmount.Text
                        End If

                        If TextBoxTaxCode.Text = "SR" Or TextBoxTaxCode.Text = "SR8" Or TextBoxTaxCode.Text = "DSP" Or TextBoxTaxCode.Text = "SR9" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxTotalPrice.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")

                        TotalPrice = TotalPrice + (Convert.ToDecimal(TextBoxTotalPrice.Text))
                        'GSTGV = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)
                        'txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                        'UpdatePanel3.Update()
                    End If
                Next i
            End If



            '' start of GVB
            If txtMode.Text = "EDIT" Then
                Dim gvbRecords, j As Long
                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                            TextBoxQtyGVB.Text = "1"
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                            TextBoxPricePerUOMGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                            TextBoxTotalPriceGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                            TextBoxDiscAmountGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                            TextBoxDiscPercGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                            TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        If TextBoxUOMGVB.SelectedIndex = 0 Then
                            TextBoxUOMGVB.Text = "UNIT"
                        End If

                        'txtGST.Text = TextBoxTaxCodeGVB.Text

                        If txtGST.Text = "SR" Or txtGST.Text = "SR8" Or txtGST.Text = "DSP" Or txtGST.Text = "SR9" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtCNGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtCNNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)).ToString("N2")
                        Else
                            'txtGST1.Text = "0.00"
                            txtCNGSTAmount.Text = "0.00"
                            txtCNNetAmount.Text = txtCNAmount.Text
                        End If

                        If TextBoxTaxCodeGVB.Text = "SR" Or TextBoxTaxCodeGVB.Text = "SR8" Or TextBoxTaxCodeGVB.Text = "DSP" Or TextBoxTaxCodeGVB.Text = "SR9" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)

                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        'txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        ''txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")

                        ''txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        ''txtGSTAmount.Text = (Convert.ToDecimal(txtGSTAmount.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")
                        ''txtNetAmount.Text = (Convert.ToDecimal(txtNetAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)).ToString("N2")

                        ''txtGSTAmount.Text = (Convert.ToDecimal(GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
                        'GSTGVB = (Convert.ToDecimal(GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

                        ''txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                        'GSTGVB = Convert.ToDecimal(txtGSTAmount.Text)

                        'txtCNAmount.Text = Convert.ToDecimal(TotalPrice.ToString("N2"))
                        'txtCNGSTAmount.Text = GSTGVB + GSTGV
                        'txtCNAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)
                        txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                    End If
                Next
            End If



            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            ' ''''''''''''''''''''''''''''''''''''''  ORIGINAL ''''''''''''''''''''''''''''''''''''''''
            ' '' GVB
            'If txtMode.Text = "EDIT" Then
            '    Dim gvbRecords, j As Long
            '    gvbRecords = grvBillingDetailsNew.Rows.Count()

            '    For j = 0 To gvbRecords - 1

            '        Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
            '        Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)

            '        If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
            '            Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
            '            Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
            '            Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
            '            Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
            '            Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
            '            Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
            '            Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '            Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
            '            Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
            '            Dim TextBoxTaxCodeGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), DropDownList)

            '            If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
            '                TextBoxQtyGVB.Text = "1"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
            '                TextBoxPricePerUOMGVB.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
            '                TextBoxTotalPriceGVB.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
            '                TextBoxDiscAmountGVB.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
            '                TextBoxDiscPercGVB.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
            '                TextBoxPriceWithDiscGVB.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
            '                TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
            '            End If

            '            If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
            '                TextBoxGSTAmtGVB.Text = "0.00"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
            '                TextBoxTotalPriceWithGSTGVB.Text = "0.00"
            '            End If

            '            If TextBoxUOMGVB.SelectedIndex = 0 Then
            '                TextBoxUOMGVB.Text = "NO"
            '            End If

            '            If TextBoxTaxCodeGVB.Text = "SR" Then
            '                GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)
            '            End If

            '            'txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
            '            ''txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")

            '            ''txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
            '            ''txtGSTAmount.Text = (Convert.ToDecimal(txtGSTAmount.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")
            '            ''txtNetAmount.Text = (Convert.ToDecimal(txtNetAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)).ToString("N2")

            '            ''txtGSTAmount.Text = (Convert.ToDecimal(GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            '            GSTGVB = (Convert.ToDecimal(GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            '            ''txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
            '            'GSTGVB = Convert.ToDecimal(txtGSTAmount.Text)

            '            'txtCNAmount.Text = Convert.ToDecimal(TotalPrice.ToString("N2"))
            '            'txtCNGSTAmount.Text = GSTGVB + GSTGV
            '            'txtCNAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)

            '            txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
            '        End If
            '    Next
            'End If



            ' '' GVB

            'Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            'Dim GSTable As Decimal = 0.0

            'If (table.Rows.Count > 0) Then

            '    For i As Integer = 0 To (table.Rows.Count) - 1
            '        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

            '        If TextBoxItemType.SelectedValue <> "-1" Then
            '            Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
            '            Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
            '            Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
            '            Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
            '            Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
            '            Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '            Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
            '            Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
            '            Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
            '            Dim TextBoxTaxCode As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)

            '            If ddlDocType.Text = "ARCN" Then
            '                If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
            '                    TextBoxQty.Text = "-1"
            '                End If
            '            Else
            '                If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
            '                    TextBoxQty.Text = "1"
            '                End If
            '            End If

            '            If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
            '                TextBoxPricePerUOMGV.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
            '                TextBoxTotalPrice.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
            '                TextBoxDiscAmount.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
            '                TextBoxDiscPerc.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
            '                TextBoxPriceWithDisc.Text = "0"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
            '                TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
            '            End If

            '            If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
            '                TextBoxGSTAmt.Text = "0.00"
            '            End If

            '            If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
            '                TextBoxTotalPriceWithGST.Text = "0.00"
            '            End If

            '            If TextBoxUOM.SelectedIndex = 0 Then
            '                TextBoxUOM.Text = "NO"
            '            End If

            '            If TextBoxTaxCode.Text = "SR" Then
            '                GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
            '            End If

            '            txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
            '            'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
            '            'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")

            '            TotalPrice = TotalPrice + (Convert.ToDecimal(TextBoxTotalPrice.Text))
            '            GSTGV = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            '            'txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
            '            'UpdatePanel3.Update()
            '        End If

            '        ''''''''''''''''''''''''''''''
            '    Next i

            'End If
            ' ''''''''''''''''''''''''''''''''''''''  ORIGINAL ''''''''''''''''''''''''''''''''''''''''
            'txtGSTAmount.Text = GSTGVB + txtGSTAmount.Text
            'txtCNAmount.Text = Convert.ToDecimal(TotalPrice.ToString("N2"))

            'txtCNGSTAmount.Text = GSTGV
            'txtCNNetAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)

            txtTotalWithDiscAmt.Text = txtCNAmount.Text
            txtTotalGSTAmt.Text = GSTGVB + GSTGV
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)
            txtCNGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")

            txtCNNetAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)
            'txtCNGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            ' ''''''''''''''''''''''''''


            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0
            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtCNGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtCNGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ' ''''''''''''''''''''''''''''

            'txtCNNetAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)


            'UpdatePanel3.Update()

            updPnlBillingRecs.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            updPanelSave.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "CalculateTotalPrice", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AdjustGStAmount()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                        '    TextBoxQty.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                        '    TextBoxPricePerUOMGV.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                        '    TextBoxTotalPrice.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                        '    TextBoxDiscAmount.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                        '    TextBoxDiscPerc.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                        '    TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                        '    TextBoxGSTAmt.Text = "0.00"
                        'End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        'If TextBoxUOM.Items.Count = 1 Then
                        '    TextBoxUOM.Items.Add("NO")
                        'Else
                        '    TextBoxUOM.Text = "NO"
                        'End If

                        If TextBoxTaxCode.Text = "SR" Or TextBoxTaxCode.Text = "SR8" Or TextBoxTaxCode.Text = "DSP" Or TextBoxTaxCode.Text = "SR9" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        'GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        'Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        'Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        'Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        'Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        'Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        'Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                        '    TextBoxQtyGVB.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                        '    TextBoxPricePerUOMGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                        '    TextBoxTotalPriceGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                        '    TextBoxDiscAmountGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                        '    TextBoxDiscPercGVB.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                        '    TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        'End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        'If TextBoxUOMGVB.SelectedIndex = 0 Then
                        '    TextBoxUOMGVB.Text = "NO"
                        'End If

                        If TextBoxTaxCodeGVB.Text = "SR" Or TextBoxTaxCodeGVB.Text = "SR8" Or TextBoxTaxCodeGVB.Text = "DSP" Or TextBoxTaxCodeGVB.Text = "SR9" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If

            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            txtCNGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtCNNetAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ''''''''''''''''''''''''''

            Dim GSTDiff As Decimal
            GSTDiff = 0.0

            Dim GSTCalc As Decimal
            GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            GSTCalc = GSTGVB + GSTGV
            GSTDiff = Convert.ToDecimal(txtCNGSTAmount.Text) - GSTCalc
            'GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            If GSTDiff <> 0.0 Then

                'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

                If lGSTadjustedRecNo > 0 Then
                    Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                    adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

                ElseIf lGSTadjustedRecNoNew > 0 Then
                    Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                    Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

                    adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                End If

                txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
                txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            End If

            ''''''''''''''''''''''''''''

            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            'lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'UpdatePanel3.Update()

            UpdatePanel2.Update()
            'UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub txtGSTAmtGV_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            'CalculateTotalGSTNetPrice()
            'updpnlBillingDetails.Update()

            CalculatePrice()
            updPanelCN.Update()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "txtGSTAmtGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub txtGSTAmtGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGVB"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            CalculateTotalGSTNetPrice()
            'updpnlBillingDetails.Update()
            updPanelCN.Update()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "txtGSTAmtGVB_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub
    Private Sub CalculateTotalGSTNetPrice()
        Try


            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            'txtCNGSTAmount.Text = "0.00"
            'txtCNNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)


                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If


                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                    End If
                Next
            End If

            'txtCNGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")
            txtTotalGSTAmt.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")
            ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtGSTAmount.Text)
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ''''''''''''''''''''''''''''

            'txtCNNetAmount.Text = Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)
            UpdatePanel2.Update()
            updPanelSave.Update()
            table.Dispose()
            'updpnlServiceRecs.Update()

            'lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'UpdatePanel3.Update()

            'updPanelInvoice.Update()
            'updpnlBillingDetails.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            'updPanelSave.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Protected Sub txtQtyGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

        If ddlDocType.Text = "ARCN" Then
            If btn1.Text > 0 Then
                btn1.Text = btn1.Text * (-1)
            End If
        End If
        CalculatePrice()
    End Sub

    Protected Sub txtPricePerUOMGV_TextChanged(sender As Object, e As EventArgs)
        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

        CalculatePrice()
    End Sub

    Protected Sub txtDiscAmountGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        'CalculatePrice()
    End Sub

    Protected Sub txtDiscPercGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        'CalculatePrice()
    End Sub


    Private Sub MakeMeNullBillingDetails()
        ddlDocType.SelectedIndex = 0
        txtCNNo.Text = ""
        'txtCNNoSelected.Text = ""
        txtPostStatus.Text = ""
        ddlContactType.SelectedIndex = 0
        txtBillAddress.Text = ""
        txtBillBuilding.Text = ""
        txtBillStreet.Text = ""

        txtBillCity.Text = ""
        txtBillState.Text = ""

        txtContactPerson.Text = ""

        txtBillCountry.Text = ""
        txtBillPostal.Text = ""
        txtCreditDays.Text = ""
        ddlCreditTerms.SelectedIndex = 0
        txtComments.Text = ""

        'txtInvoiceDate.Text = ""
        txtAccountIdBilling.Text = ""
        txtAccountName.Text = ""
        txtCompanyGroup.Text = ""

        txtOurReference.Text = ""
        txtYourReference.Text = ""
        txtPONo.Text = ""

        txtTIN.Text = ""
        txtSSTNo.text = ""

        'ddlBankCode.SelectedIndex = 0
        'txtBankName.Text = ""
        'txtBankGLCode.Text = ""
        grvBillingDetails.ShowHeader = True

        txtTotalWithGST.Text = "0.00"
        txtTotalGSTAmt.Text = "0.00"
        'txtTotalDiscAmt.Text = "0.00"
        txtTotalWithDiscAmt.Text = "0.00"
        txtTotalCNAmt.Text = "0.00"
        txtTotalGSTAmt.Text = "0.00"
        txtCNNetAmount.Text = "0.00"
        'ddlContractNoCN.Items.Clear()
        'ddlContractNoCN.Items.Add("--SELECT--")
        txtCNAmount.Text = "0.00"
        txtCNGSTAmount.Text = "0.00"

        txtGST.Text = txtDefaultTaxCode.Text
        FindDefaultGSTPct()
        'txtGST1.Text = txtDefaultTaxRate.Text
        txtGST1.Text = txtDefaultTaxRate.Text
        txtTaxRatePct.Text = txtGST1.Text  '09.03.23

        'txtGST.Text = "SR"
        'txtGST1.Text = txtTaxRatePct.Text

        ddlSalesmanBilling.SelectedIndex = 0
        ddlContractGroupBilling.SelectedIndex = 0
        txtLocation.Text = ""
        chkInternal.Checked = False
        FirstGridViewRowGL()
        'Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimeinvoice();", True)
        'updPnlBillingRecs.Update()
        'updPnlBillingRecs.Update()
    End Sub


    Private Sub FindDefaultGSTPct()
        Try
            Dim sql As String

            sql = ""

            'sql = "Select GSTRate from tblperiod where GStType = '" & txtDefaultTaxCode.Text & "' and AccountingPeriod = '" & txtBillingPeriod.Text & "'"


            sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtDefaultTaxCode.Text & "'"



            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandGSTPct As MySqlCommand = New MySqlCommand
            commandGSTPct.CommandType = CommandType.Text
            commandGSTPct.CommandText = sql
            commandGSTPct.Connection = conn

            Dim drGSTPct As MySqlDataReader = commandGSTPct.ExecuteReader()

            Dim dtGSTPct As New DataTable
            dtGSTPct.Load(drGSTPct)

            If dtGSTPct.Rows.Count > 0 Then
                If dtGSTPct.Rows(0)("GSTRate").ToString <> "" Then : txtDefaultTaxRate.Text = dtGSTPct.Rows(0)("GSTRate").ToString : End If

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FindGSTPct", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)
        'If TotDetailRecords > 0 Then
        '    AddNewRowWithDetailRecBillingDetailsRecs()
        'Else
        AddNewRowBillingDetailsRecs()
        'End If
    End Sub


    Protected Sub PopulateGLCodes()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim sql As String
            sql = ""

            Dim command21 As MySqlCommand = New MySqlCommand

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            command21.CommandType = CommandType.Text
            command21.CommandText = sql
            command21.Connection = conn

            Dim dr21 As MySqlDataReader = command21.ExecuteReader()

            Dim dt21 As New DataTable
            dt21.Load(dr21)

            If dt21.Rows.Count > 0 Then
                If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
            End If

            '''''''''''''''''''''''''''''''''''
            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If

            updPnlBillingRecs.Update()

            conn.Close()
            conn.Dispose()

            command21.Dispose()
            dt21.Dispose()
            dr21.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PopulateGLCode", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub InsertIntoTblSales()

        Dim rowselected As Integer
        rowselected = 0

        Dim ToBillAmt As Decimal
        Dim DiscAmount As Decimal
        Dim GSTAmount As Decimal
        Dim NetAmount As Decimal
        'Dim ToBillAmt As Decimal

        ToBillAmt = 0.0
        DiscAmount = 0.0
        GSTAmount = 0.0
        NetAmount = 0.0

        Try

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
            End If
            conn.Open()


            '''''''''tblSales

            If txtMode.Text = "NEW" Then

                qry = "INSERT INTO tblSales(DocType,InvoiceNumber, CustAttention, CustName, AccountId, BillAddress1, BillBuilding, BillStreet, BillPostal, BillCountry, BillCity, BillState, "
                qry = qry + "  ServiceRecordNo, SalesDate, OurRef,YourRef, PoNo, RcnoServiceRecord,   Salesman,  Terms, TermsDay, "
                qry = qry + "  ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, "
                qry = qry + "  DiscountAmount, GSTAmount, NetAmount, Comments, ContactType, CompanyGroup, GLPeriod, AmountWithDiscount, BatchNo, RecurringInvoice, InvoiceType, "
                qry = qry + "  StaffCode, CustAddress1, custAddBuilding, CustAddStreet, CustAddCity, CustAddState, CustAddCountry, CustAddPostal, LedgerCode, LedgerName, Location, GST, GSTRate, ContractGroup, Internal,  "
                qry = qry + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn,TaxIdentificationNo,SalesTaxRegistrationNo) VALUES "
                qry = qry + "(@DocType, @InvoiceNumber, @CustAttention, @ClientName, @AccountId, @BillAddress1, @BillBuilding, @BillStreet, @BillPostal, @BillCountry, @BillCity, @BillState,"
                qry = qry + " @ServiceRecordNo, @SalesDate, @ourRef, @YourRef,  @PoNo, @RcnoServiceRecord,  @Salesman,  @Terms, @TermsDay, "
                qry = qry + " @ValueBase, @ValueOriginal, @GSTBase, @GSTOriginal, @AppliedBase, @AppliedOriginal, @BalanceBase, @BalanceOriginal, "
                qry = qry + " @DiscountAmount, @GSTAmount, @NetAmount, @Comments, @ContactType, @CompanyGroup, @GLPeriod, @AmountWithDiscount, @BatchNo, @RecurringInvoice, @InvoiceType,"
                qry = qry + " @StaffCode, @CustAddress1, @custAddBuilding, @CustAddStreet, @CustAddCity, @CustAddState,  @CustAddCountry,@CustAddPostal, @LedgerCode, @LedgerName, @Location, @GST, @GSTRate, @ContractGroup, @Internal, "
                qry = qry + "@CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn,@TaxIdentificationNo,@SalesTaxRegistrationNo);"

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@DocType", ddlDocType.Text.Trim)
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text.Trim)
                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.Trim)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.Trim)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.Trim)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.Trim)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text.Trim)
                If txtCNDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text.Trim)
                'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                command.Parameters.AddWithValue("@RcnoServiceRecord", 0)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtCNAmount.Text.Trim))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtCNAmount.Text.Trim))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtCNGSTAmount.Text.Trim))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtCNGSTAmount.Text.Trim))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtCNNetAmount.Text.Trim))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtCNNetAmount.Text.Trim))

                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtCNNetAmount.Text.Trim))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtCNNetAmount.Text.Trim))

                'command.Parameters.AddWithValue("@BalanceBase", 0.0)
                'command.Parameters.AddWithValue("@BalanceOriginal", 0.0)
                command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                command.Parameters.AddWithValue("@AmountWithDiscount", 0.0)
                command.Parameters.AddWithValue("@GSTAmount", 0.0)
                command.Parameters.AddWithValue("@NetAmount", 0.0)

                command.Parameters.AddWithValue("@ContactType", ddlContactType.Text.Trim)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.Trim)
                command.Parameters.AddWithValue("@GLPeriod", txtReceiptPeriod.Text.Trim)
                command.Parameters.AddWithValue("@BatchNo", "")

                If ddlSalesmanBilling.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text.Trim)
                End If

                'If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                '    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text)
                'Else
                command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text.Trim)
                'End If
                'If chkRecurringInvoice.Checked = True Then
                '    command.Parameters.AddWithValue("@RecurringInvoice", "Y")
                'Else
                command.Parameters.AddWithValue("@RecurringInvoice", "")
                'End If

                'If rbtInvoiceType.SelectedIndex = 0 Then
                '    command.Parameters.AddWithValue("@InvoiceType", "M")
                'Else
                command.Parameters.AddWithValue("@InvoiceType", "")
                'End If


                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text.Trim)
                End If

                'If txtDueDate.Text.Trim = "" Then
                '    command.Parameters.AddWithValue("@DueDate", DBNull.Value)
                'Else
                '    command.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtDueDate.Text).ToString("yyyy-MM-dd"))
                'End If

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text.Trim)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.Trim)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.Trim)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text.Trim)

                command.Parameters.AddWithValue("@LedgerCode", txtARCode.Text)
                command.Parameters.AddWithValue("@LedgerName", txtARDescription.Text.Trim)
                command.Parameters.AddWithValue("@Location", txtLocation.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@GST", txtGST.Text)

                'If txtGST.Text = "SR" Then
                '    command.Parameters.AddWithValue("@GSTRate", txtTaxRatePct.Text)
                'Else
                '    command.Parameters.AddWithValue("@GSTRate", 0.0)
                'End If

                'If Convert.ToDecimal(txtCNGSTAmount.Text) = 0 Then
                '    command.Parameters.AddWithValue("@GST", "NA")
                'Else
                '    command.Parameters.AddWithValue("@GST", "SR")
                'End If
                'command.Parameters.AddWithValue("@GST", "SR")

                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@Internal", chkInternal.Checked)

                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text.Trim)
                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                command.Parameters.AddWithValue("@TaxIdentificationNo", txtTIN.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@SalesTaxRegistrationNo", txtSSTNo.Text.ToUpper.Trim)

                GenerateCNNo()

                If String.IsNullOrEmpty(txtCNNo.Text.Trim) = True Then
                    lblAlert.Text = "CREDIT NOTE NUMBER CANNOT BE BLANK"
                    updPnlMsg.Update()
                    Exit Sub
                End If

                command.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)

                command.Connection = conn
                command.ExecuteNonQuery()

                Dim sqlLastId As String
                sqlLastId = "SELECT last_insert_id() from tblSales"

                Dim commandRcno As MySqlCommand = New MySqlCommand
                commandRcno.CommandType = CommandType.Text
                commandRcno.CommandText = sqlLastId
                commandRcno.Parameters.Clear()
                commandRcno.Connection = conn
                txtRcno.Text = commandRcno.ExecuteScalar()
                'txtCNNoSelected.Text = txtCNNo.Text
            Else

                qry = "Update tblSales set InvoiceNumber = @InvoiceNumber, CustAttention = @CustAttention, CustName =@ClientName, AccountId =@AccountId, BillAddress1 =@BillAddress1, BillBuilding =@BillBuilding,   "
                qry = qry + " BillStreet = @BillStreet, BillPostal= @BillPostal, BillCountry= @BillCountry, ServiceRecordNo = @ServiceRecordNo,  SalesDate =@SalesDate,   "
                qry = qry + " OurRef = @ourRef, YourRef =@YourRef, PONo = @PONo,   StaffCode = @StaffCode,  Terms =@Terms, TermsDay =@TermsDay, "
                qry = qry + " ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, Comments = @Comments, ContactType = @ContactType, CompanyGroup = @CompanyGroup,  GLPeriod = @GLPeriod, AmountWithDiscount = @AmountWithDiscount, RecurringInvoice = @RecurringInvoice, "
                qry = qry + " CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding,  CustAddCity = @CustAddCity, CustAddState=@CustAddState,  CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal, GST=@GST, GSTrate=@GSTrate, ContractGroup =@ContractGroup, Internal=@Internal,"
                qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn,TaxIdentificationNo=@TaxIdentificationNo,SalesTaxRegistrationNo=@SalesTaxRegistrationNo "
                qry = qry + " where Rcno = @Rcno;"

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))
                command.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text.Trim)
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text.Trim)
                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.Trim)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.Trim)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.Trim)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.Trim)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text.Trim)
                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text.Trim)

                If txtCNDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper.Trim)
                If ddlSalesmanBilling.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text.Trim)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text.Trim)
                End If

                'If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                '    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text)
                'Else
                command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text)

                'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                'command.Parameters.AddWithValue("@RcnoServiceRecord", 0)

                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtCNAmount.Text.Trim))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtCNAmount.Text.Trim))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtCNGSTAmount.Text.Trim))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtCNGSTAmount.Text.Trim))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtCNNetAmount.Text.Trim))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtCNNetAmount.Text.Trim))

                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtCNNetAmount.Text.Trim))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtCNNetAmount.Text.Trim))

                'command.Parameters.AddWithValue("@BalanceBase", 0.0)
                'command.Parameters.AddWithValue("@BalanceOriginal", 0.0)
                command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                command.Parameters.AddWithValue("@AmountWithDiscount", 0.0)
                command.Parameters.AddWithValue("@GSTAmount", 0.0)
                command.Parameters.AddWithValue("@NetAmount", 0.0)

                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@ContactType", ddlContactType.Text.Trim)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.Trim)
                command.Parameters.AddWithValue("@GLPeriod", txtReceiptPeriod.Text)
                'command.Parameters.AddWithValue("@BatchNo", "")

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text.Trim)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.Trim)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.Trim)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text.Trim)
                'End If
                'If chkRecurringInvoice.Checked = True Then
                '    command.Parameters.AddWithValue("@RecurringInvoice", "Y")
                'Else
                command.Parameters.AddWithValue("@RecurringInvoice", "")
                command.Parameters.AddWithValue("@GST", txtGST.Text)

                'If txtGST.Text = "SR" Then
                '    command.Parameters.AddWithValue("@GSTRate", txtTaxRatePct.Text)
                'Else
                '    command.Parameters.AddWithValue("@GSTRate", 0.0)
                'End If
                'End If

                'If rbtInvoiceType.SelectedIndex = 0 Then
                '    command.Parameters.AddWithValue("@InvoiceType", "M")
                'Else
                'command.Parameters.AddWithValue("@InvoiceType", "")
                'End If

                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@Internal", chkInternal.Checked)
                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text)
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                command.Parameters.AddWithValue("@TaxIdentificationNo", txtTIN.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@SalesTaxRegistrationNo", txtSSTNo.Text.ToUpper.Trim)

                command.Connection = conn
                command.ExecuteNonQuery()
            End If


            ''''''''tblSales

            'Dim commandtblSalesDetail As MySqlCommand = New MySqlCommand

            'commandtblSalesDetail.CommandType = CommandType.Text
            ''Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
            'Dim qrycommandtblSalesDetail As String = "DELETE from tblSalesdetail where invoiceNumber = '" & txtCNNo.Text & "'"

            'commandtblSalesDetail.CommandText = qrycommandtblSalesDetail
            'commandtblSalesDetail.Parameters.Clear()
            'commandtblSalesDetail.Connection = conn
            'commandtblSalesDetail.ExecuteNonQuery()

            ''txtCNNoSelected.Text = ""
            'updPanelCN.Update()


            ' GVB----------------------------

            Dim gvbRecords, i As Long
            gvbRecords = grvBillingDetailsNew.Rows.Count()

            For i = 0 To gvbRecords - 1
                ''Dim lblItemCodeGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemCodeGVB"), DropDownList)
                'Dim contractNoGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtContractNoGVB"), TextBox)
                'txtComments.Text = contractNoGVB.Text


                Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemTypeGVB"), TextBox)
                Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtOtherCodeGVB"), TextBox)
                Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoInvoiceGVB"), TextBox)

                If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                    Dim lblidItemCodeGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemCodeGVB"), DropDownList)
                    Dim lblidServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceRecordGVB"), TextBox)
                    Dim lblItemDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemDescriptionGVB"), TextBox)
                    Dim lblDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDescriptionGVB"), TextBox)
                    Dim lblGLDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGLDescriptionGVB"), TextBox)

                    'Dim lblid6 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGV"), TextBox)
                    Dim lblidRcnoServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoServiceRecordGVB"), TextBox)

                    If String.IsNullOrEmpty(lblidRcnoServiceRecordGVB.Text) = True Then
                        lblidRcnoServiceRecordGVB.Text = 0
                    End If

                    'Dim lblid8 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDeptGV"), TextBox)
                    Dim lblidServiceStatusGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGVB"), TextBox)

                    Dim lblidContractNoGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtContractNoGVB"), TextBox)
                    'Dim lblid12 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceAddressGV"), TextBox)
                    'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                    Dim lblidUnitMsGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtUOMGVB"), DropDownList)
                    Dim lblidQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtQtyGVB"), TextBox)
                    Dim lblidPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPricePerUOMGVB"), TextBox)
                    Dim lblidTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceGVB"), TextBox)
                    Dim lblidDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscPercGVB"), TextBox)
                    'Dim lblidDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscAmountGVB"), TextBox)
                    Dim lblidPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPriceWithDiscGVB"), TextBox)

                    Dim lblidGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTaxTypeGVB"), TextBox)
                    Dim lblidGSTRate As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTPercGVB"), TextBox)
                    Dim lblidGSTBaseGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGVB"), TextBox)
                    'Dim lblidGSTAmt As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGV"), TextBox)
                    Dim lblidNetAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceWithGSTGVB"), TextBox)

                    'Dim lblidServiceStatus As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGV"), TextBox)
                    Dim lblidLocationIdGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtLocationIdGVB"), TextBox)
                    Dim lblidServiceLocationGroupGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceLocationGroupGVB"), TextBox)
                    'Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGV"), TextBox)
                    'Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceByGV"), TextBox)
                    'Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoInvoiceGV"), TextBox)
                    'Dim lblid1GLDescription As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGLDescriptionGV"), TextBox)


                    Dim lblidBillingFrequencyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGVB"), TextBox)
                    Dim lblidServiceByGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceByGVB"), TextBox)
                    Dim lblidServiceDateGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceDateGVB"), TextBox)
                    Dim lblSourceInvoiceGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtInvoiceNoGVB"), TextBox)

                    Dim lContractGroup As String
                    lContractGroup = ""

                    If String.IsNullOrEmpty(lblidContractNoGVB.Text) = False Then
                        Dim commandCG As MySqlCommand = New MySqlCommand
                        commandCG.CommandType = CommandType.Text

                        commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNoGVB.Text & "'"
                        'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                        commandCG.Connection = conn

                        Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                        Dim dtCG As New DataTable
                        dtCG.Load(drCG)


                        lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                    End If

                    Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                    commandSalesDetail.CommandType = CommandType.Text


                    'Dim qryDetail As String = "INSERT INTO tblSalesDetail(InvoiceNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                    'qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                    'qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                    'qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, InvoiceTYpe, ItemDescription, ContractGroup, SourceInvoice,  "
                    'qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, @SourceInvoice, "
                    'qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    Dim qryDetail As String = "UPDATE tblSalesDetail SET InvoiceNumber = @InvoiceNumber, Sequence=@Sequence, SubCode=@SubCode, LedgerCode=@LedgerCode, LedgerName=@LedgerName, SubLedgerCode=@SubLedgerCode, SONUMBER=@SONUMBER, RefType=@RefType, Gst=@Gst, "
                    qryDetail = qryDetail + " GstRate=@GstRate, ExchangeRate=@ExchangeRate, Currency=@Currency, Quantity=@Quantity, UnitMs=@UnitMs, UnitOriginal=@UnitOriginal, UnitBase=@UnitBase,  DiscP=@DiscP, TaxBase=@TaxBase, GstOriginal=@GstOriginal,"
                    qryDetail = qryDetail + " GstBase=@GstBase, ValueOriginal=@ValueOriginal, ValueBase=@ValueBase, AppliedOriginal=@AppliedOriginal, AppliedBase=@AppliedBase, Description=@Description, Comments=@Comments, GroupId=@GroupId, "
                    qryDetail = qryDetail + " DetailID=@DetailID, GrpDetName=@GrpDetName, SoCode=@SoCode, ItemCode=@ItemCode, AvgCost=@AvgCost, CostValue=@CostValue, COSTCODE=@COSTCODE, ServiceStatus=@ServiceStatus, DiscAmount=@DiscAmount, TotalPrice=@TotalPrice, LocationId=@LocationId, ServiceLocationGroup=@ServiceLocationGroup, RcnoServiceRecord=@RcnoServiceRecord, ServiceBy=@ServiceBy, ServiceDate=@ServiceDate, BillingFrequency=@BillingFrequency, InvoiceTYpe=@InvoiceTYpe, ItemDescription=@ItemDescription, ContractGroup=@ContractGroup, SourceInvoice=@SourceInvoice,  "
                    qryDetail = qryDetail + " LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn "
                    qryDetail = qryDetail + " where Rcno = " & lblid14.Text
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, @SourceInvoice, "
                    'qryDetail = qryDetail + " @LastModifiedBy, @LastModifiedOn "

                    commandSalesDetail.CommandText = qryDetail
                    commandSalesDetail.Parameters.Clear()

                    commandSalesDetail.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)
                    commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)
                    commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCodeGVB.Text)
                    'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescriptionGVB.Text.ToUpper)

                    commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                    commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                    'If (lblidServiceRecordGVB.SelectedIndex) = 0 Then
                    '    'If String.IsNullOrEmpty(lblidServiceRecord.Text) = "--SELECT--" Then
                    '    commandSalesDetail.Parameters.AddWithValue("@RefType", "")
                    'Else
                    commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecordGVB.Text.Trim)
                    'End If

                    commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGSTGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@GstRate", Convert.ToDecimal(lblidGSTRate.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                    commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                    commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQtyGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMsGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    'commandSalesDetail.Parameters.AddWithValue("@DiscP", lblidDiscPercGVB.Text)

                    'If String.IsNullOrEmpty(lblidDiscPercGVB.Text) = True Then
                    commandSalesDetail.Parameters.AddWithValue("@DiscP", 0.0)
                    'Else
                    '    commandSalesDetail.Parameters.AddWithValue("@DiscP", lblidDiscPercGVB.Text)
                    'End If

                    commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))

                    commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidTotalPriceGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidTotalPriceGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPriceGVB.Text))

                    commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescriptionGVB.Text.ToUpper.Trim)
                    commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCodeGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Description", lblDescriptionGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                    commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                    commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                    commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")

                    commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNoGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatusGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@DiscAmount", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDiscGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationIdGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroupGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecordGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceByGVB.Text)

                    If String.IsNullOrEmpty(lblidServiceDateGVB.Text.Trim) = True Then
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDateGVB.Text).ToString("yyyy-MM-dd"))
                    End If

                    'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                    commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequencyGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@InvoiceType", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                    commandSalesDetail.Parameters.AddWithValue("@SourceInvoice", lblSourceInvoiceGVB.Text.Trim)

                    'commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'commandSalesDetail.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandSalesDetail.Connection = conn
                    commandSalesDetail.ExecuteNonQuery()

                    'Start : Update UUID in tblsalesdetail

                 

                    If String.IsNullOrEmpty(lblSourceInvoiceGVB.Text.Trim) = False Then
                        Dim qryUpdateUUID As String
                        qryUpdateUUID = ""

                        qryUpdateUUID = "Update tblsalesdetail b, tblsales a  SET b.uuid = a.uuid where a.invoicenumber = b.SourceInvoice and b.SourceInvoice =@SourceInvoice and b.Invoicenumber =@Invoicenumber "


                        Dim commandUpdateUUID As MySqlCommand = New MySqlCommand

                        commandUpdateUUID.CommandType = CommandType.Text
                        commandUpdateUUID.CommandText = qryUpdateUUID
                        commandUpdateUUID.Parameters.Clear()

                        commandUpdateUUID.Parameters.AddWithValue("@SourceInvoice", lblSourceInvoiceGVB.Text.Trim)
                        commandUpdateUUID.Parameters.AddWithValue("@Invoicenumber", txtCNNo.Text.Trim)
                        commandUpdateUUID.Connection = conn
                        commandUpdateUUID.ExecuteNonQuery()

                    End If

                    'End : Update UUID in tblsalesdetail
                End If


            Next

            'Exit Sub

            'GVB -----------------------------

            ''''''''''''''''''
            SetRowDataBillingDetailsRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then
                '''''''''''''''''''''''''''''''''''''''''''''''''''''
                PopulateGLCodes()
                ''''''''''''''''''''''''''''''''''''''''''''''''
                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)


                    If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                        Dim lblidItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                        Dim lblidServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceRecordGV"), TextBox)
                        Dim lblItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim lblDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDescriptionGV"), TextBox)
                        Dim lblGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim lblSourceInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtInvoiceNoGV"), TextBox)

                        'Dim lblid6 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim lblidRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtRcnoServiceRecordGV"), TextBox)

                        If String.IsNullOrEmpty(lblidRcnoServiceRecord.Text) = True Then
                            lblidRcnoServiceRecord.Text = 0
                        End If

                        'Dim lblid8 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDeptGV"), TextBox)
                        Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                        Dim lblidContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                        'Dim lblid12 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceAddressGV"), TextBox)
                        'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                        Dim lblidUnitMs As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                        Dim lblidQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtQtyGV"), TextBox)
                        Dim lblidPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim lblidTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                        Dim lblidDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                        Dim lblidDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                        Dim lblidPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim lblidGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                        Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                        Dim lblidGSTBase As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        'Dim lblidGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        'Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)
                        Dim lblidLocationId As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtLocationIdGV"), TextBox)
                        Dim lblidServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceLocationGroupGV"), TextBox)
                        'Dim lblid14 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                        'Dim lblid14 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceByGV"), TextBox)
                        'Dim lblid14 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtRcnoInvoiceGV"), TextBox)
                        'Dim lblid1GLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)


                        Dim lblidBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim lblidServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceByGV"), TextBox)
                        Dim lblidServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceDateGV"), TextBox)

                        'If lblidItemType.SelectedValue = "SERVICE" Then
                        '    Dim command1 As MySqlCommand = New MySqlCommand
                        '    command1.CommandType = CommandType.Text

                        '    If lblidServiceStatus.Text = "P" Then
                        '        command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-SRV'"
                        '    ElseIf lblidServiceStatus.Text = "O" Then
                        '        command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                        '    End If

                        '    'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"

                        '    command1.Connection = conn

                        '    Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                        '    Dim dt1 As New DataTable
                        '    dt1.Load(dr1)
                        'End If

                        'Dim lLedgerName As String
                        'lLedgerName = ""

                        'If String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                        '    Dim command1 As MySqlCommand = New MySqlCommand
                        '    command1.CommandType = CommandType.Text

                        '    command1.CommandText = "SELECT Description FROM tblchartofaccounts where  COACode = '" & lblidOtherCode.Text & "'"
                        '    'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                        '    command1.Connection = conn

                        '    Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                        '    Dim dt1 As New DataTable
                        '    dt1.Load(dr1)

                        '    lLedgerName = dt1.Rows(0)("Description").ToString
                        'End If


                        Dim lContractGroup As String
                        lContractGroup = ""

                        If String.IsNullOrEmpty(lblidContractNo.Text) = False Then
                            Dim commandCG As MySqlCommand = New MySqlCommand
                            commandCG.CommandType = CommandType.Text

                            commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNo.Text & "'"
                            'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                            commandCG.Connection = conn

                            Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                            Dim dtCG As New DataTable
                            dtCG.Load(drCG)


                            lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                        End If

                        Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                        commandSalesDetail.CommandType = CommandType.Text
                        'Dim qryDetail As String = "INSERT INTO tblServiceBillingDetailItem(RcnoServiceBillingDetail,Itemtype, ItemCode, Itemdescription, UOM, Qty,  "
                        'qryDetail = qryDetail + " PricePerUOM, TotalPrice,DiscPerc, DiscAmount, PriceWithDisc, GSTPerc, GSTAmt, TotalPriceWithGST, TaxType, ARCode, GSTCode, OtherCode, GLDescription,  RcnoServiceRecord, BatchNo,  CompanyGroup, ContractNo, ServiceStatus, ContractGroup, ServiceRecordNo, ServiceDate, InvoiceType, "
                        'qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                        'qryDetail = qryDetail + "(@RcnoServiceBillingDetail, @Itemtype, @ItemCode, @Itemdescription, @UOM, @Qty,"
                        'qryDetail = qryDetail + " @PricePerUOM, @TotalPrice, @DiscPerc, @DiscAmount, @PriceWithDisc, @GSTPerc, @GSTAmt, @TotalPriceWithGST, @TaxType, @ARCode, @GSTCode,  @OtherCode,@GLDescription, @RcnoServiceRecord, @BatchNo, @CompanyGroup, @ContractNo,  @ServiceStatus, @ContractGroup, @ServiceRecordNo, @ServiceDate, @InvoiceType, "
                        'qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                        Dim qryDetail As String = "INSERT INTO tblSalesDetail(InvoiceNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                        qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                        qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                        qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, InvoiceTYpe, ItemDescription, ContractGroup, SourceInvoice,  "
                        qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                        qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                        qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                        qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                        qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, @SourceInvoice, "
                        qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                        commandSalesDetail.CommandText = qryDetail
                        commandSalesDetail.Parameters.Clear()

                        commandSalesDetail.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)
                        commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)

                        'If lblidItemType.Text = "SERVICE" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@SubCode", "SERV")
                        'ElseIf lblidItemType.Text = "STOCK" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@SubCode", "STCK")
                        'ElseIf lblidItemType.Text = "OTHERS" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@SubCode", "DIST")
                        'End If

                        'If lblidItemType.Text = "SERVICE" Then
                        commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemType.Text)
                        'ElseIf lblidItemType.Text = "STOCK" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@SubCode", "STCK")
                        'ElseIf lblidItemType.Text = "OTHERS" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@SubCode", "DIST")
                        'End If

                        commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCode.Text)
                        'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescription.Text.ToUpper)

                        commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                        commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                        'If (lblidServiceRecord.SelectedIndex) = 0 Then
                        '    'If String.IsNullOrEmpty(lblidServiceRecord.Text) = "--SELECT--" Then
                        '    commandSalesDetail.Parameters.AddWithValue("@RefType", "")
                        'Else
                        '    commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecord.Text)
                        'End If

                        'If String.IsNullOrEmpty(lblidServiceRecord.Text.Trim) = True Then
                        '    commandSalesDetail.Parameters.AddWithValue("@RefType", "")
                        'Else
                        commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecord.Text.Trim)
                        'End If

                        commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGST.Text)
                        commandSalesDetail.Parameters.AddWithValue("@GstRate", Convert.ToDecimal(lblidGSTRate.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                        commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                        commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQty.Text))
                        commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMs.Text)
                        commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOM.Text))
                        commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOM.Text))

                        If String.IsNullOrEmpty(lblidDiscPerc.Text.Trim) = True Then
                            commandSalesDetail.Parameters.AddWithValue("@DiscP", 0.0)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@DiscP", Convert.ToDecimal(lblidDiscPerc.Text))
                        End If

                        commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBase.Text))
                        commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBase.Text))
                        commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBase.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidPriceWithDisc.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidPriceWithDisc.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmount.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmount.Text))
                        commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPrice.Text))

                        commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescription.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCode.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@Description", lblDescription.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                        commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                        commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                        commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")

                        commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)


                        commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                        commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                        commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNo.Text)
                        commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatus.Text)

                        If String.IsNullOrEmpty(lblidDiscAmount.Text.Trim) = True Then
                            commandSalesDetail.Parameters.AddWithValue("@DiscAmount", 0.0)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@DiscAmount", lblidDiscAmount.Text)
                        End If



                        commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDisc.Text)
                        commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationId.Text)
                        commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroup.Text)

                        commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecord.Text)

                        commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceBy.Text)

                        If String.IsNullOrEmpty(lblidServiceDate.Text.Trim) = True Then
                            commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                        commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequency.Text)
                        commandSalesDetail.Parameters.AddWithValue("@InvoiceType", lblidItemType.Text)
                        commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                        commandSalesDetail.Parameters.AddWithValue("@SourceInvoice", lblSourceInvoice.Text.Trim)

                        commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        commandSalesDetail.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        commandSalesDetail.Connection = conn
                        commandSalesDetail.ExecuteNonQuery()


                        ''Start: Update tblServiceRecord

                        'If Convert.ToInt32(lblidRcnoServiceRecord.Text) > 0 Then
                        '    Dim command4 As MySqlCommand = New MySqlCommand
                        '    command4.CommandType = CommandType.Text

                        '    Dim qry4 As String = "Update tblservicerecord Set BillYN = 'Y', BilledAmt = " & Convert.ToDecimal(txtAmountWithDiscount.Text) & ", BillNo = '" & txtInvoiceNo.Text & "' where Rcno= @Rcno "
                        '    'Dim qry4 As String = "Update tblservicerecord Set BillYN = 'Y' where Rcno= @Rcno "

                        '    command4.CommandText = qry4
                        '    command4.Parameters.Clear()

                        '    command4.Parameters.AddWithValue("@Rcno", lblidRcnoServiceRecord.Text)
                        '    command4.Connection = conn
                        '    command4.ExecuteNonQuery()
                        'End If

                        'If lblidServiceRecord.Text <> "--SELECT--" Then
                        '    UpdateServiceRecord(lblidServiceRecord.Text, 0, "Edit")
                        'End If


                        If String.IsNullOrEmpty(lblidTotalPrice.Text.Trim) = False Then
                            ToBillAmt = ToBillAmt + Convert.ToDecimal(lblidTotalPrice.Text)
                        End If

                        If String.IsNullOrEmpty(lblidDiscAmount.Text.Trim) = False Then
                            DiscAmount = DiscAmount + Convert.ToDecimal(lblidDiscAmount.Text)
                        End If

                        If String.IsNullOrEmpty(lblidGSTBase.Text.Trim) = False Then
                            GSTAmount = GSTAmount + Convert.ToDecimal(lblidGSTBase.Text)
                        End If

                        If String.IsNullOrEmpty(lblidNetAmount.Text.Trim) = False Then
                            NetAmount = NetAmount + Convert.ToDecimal(lblidNetAmount.Text)
                        End If



                        'ToBillAmtTot = ToBillAmtTot + lblidTotalPrice()

                        'End: Update tblServiceRecord

                        'command.Parameters.AddWithValue("@RcnoServiceBillingDetail", Convert.ToInt64(txtRcnotblServiceBillingDetail.Text))
                        'command.Parameters.AddWithValue("@Itemtype", "SERVICE")
                        'command.Parameters.AddWithValue("@ItemCode", "IN-SRV")
                        'command.Parameters.AddWithValue("@Itemdescription", dt1.Rows(0)("Description").ToString())
                        'command.Parameters.AddWithValue("@UOM", "")
                        'command.Parameters.AddWithValue("@Qty", 1)
                        'command.Parameters.AddWithValue("@PricePerUOM", Convert.ToDecimal(lblid23.Text))
                        ''command.Parameters.AddWithValue("@BillAmount", 0.0)
                        'command.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblid23.Text))
                        'command.Parameters.AddWithValue("@DiscPerc", 0.0)
                        'command.Parameters.AddWithValue("@DiscAmount", 0.0)
                        'command.Parameters.AddWithValue("@PriceWithDisc", Convert.ToDecimal(lblid23.Text))
                        'command.Parameters.AddWithValue("@GSTPerc", Convert.ToDecimal(txtTaxRatePct.Text))
                        'command.Parameters.AddWithValue("@GSTAmt", Convert.ToDecimal(lblid23.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01)
                        'command.Parameters.AddWithValue("@TotalPriceWithGST", Convert.ToDecimal(lblid23.Text) + (Convert.ToDecimal(lblid23.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01))
                        'command.Parameters.AddWithValue("@TaxType", "SR")
                        'command.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(lblid7.Text))
                        'command.Parameters.AddWithValue("@ARCode", "")
                        'command.Parameters.AddWithValue("@GSTCode", "")
                        'command.Parameters.AddWithValue("@OtherCode", dt1.Rows(0)("COACode").ToString())
                        'command.Parameters.AddWithValue("@GLDescription", dt1.Rows(0)("COADescription").ToString())
                        'command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                        ''command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        'command.Parameters.AddWithValue("@ContractNo", lblid20.Text)
                        'command.Parameters.AddWithValue("@ServiceStatus", lblid9.Text)
                        'command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                        'command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)

                        'command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                        'command.Parameters.AddWithValue("@InvoiceType", "SERVICE")
                        'If lblid5.Text.Trim = "" Then
                        '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                        'Else
                        '    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                        'End If
                        'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Connection = conn
                        'command.ExecuteNonQuery()


                        'Start : Update UUID in tblsalesdetail
                        If String.IsNullOrEmpty(lblSourceInvoice.Text.Trim) = False Then
                            Dim qryUpdateUUID As String
                            qryUpdateUUID = ""

                        
                            qryUpdateUUID = "Update tblsalesdetail b, tblsales a  SET b.uuid = a.uuid where a.invoicenumber = b.SourceInvoice and b.SourceInvoice =@SourceInvoice and b.Invoicenumber =@Invoicenumber "

                            Dim commandUpdateUUID As MySqlCommand = New MySqlCommand

                            commandUpdateUUID.CommandType = CommandType.Text
                            commandUpdateUUID.CommandText = qryUpdateUUID
                            commandUpdateUUID.Parameters.Clear()

                            commandUpdateUUID.Parameters.AddWithValue("@SourceInvoice", lblSourceInvoice.Text.Trim)
                            commandUpdateUUID.Parameters.AddWithValue("@Invoicenumber", txtCNNo.Text.Trim)
                            commandUpdateUUID.Connection = conn
                            commandUpdateUUID.ExecuteNonQuery()

                        End If

                        'End : Update UUID in tblsalesdetail
                    End If


                  
                Next rowIndex



                'txtCNNoSelected.Text = txtCNNo.Text

                grvBillingDetailsNew.DataBind()
                updPanelCN.Update()
                'txtInvoiceAmount.Text = Convert.ToDecimal(ToBillAmt)
                'txtDiscountAmount.Text = Convert.ToDecimal(DiscAmount)
                'txtAmountWithDiscount.Text = (Convert.ToDecimal(ToBillAmt) - Convert.ToDecimal(DiscAmount)).ToString("N2")
                'txtGSTAmount.Text = Convert.ToDecimal(GSTAmount)
                'txtNetAmount.Text = Convert.ToDecimal(NetAmount)

                DisplayGLGrid()
                'UpdatePanel3.Update()
            End If

            conn.Close()
            conn.Dispose()
            '            ToBillAmt = ToBillAmt + Convert.ToDecimal(lblidTotalPrice.Text)
            '            DiscAmount = DiscAmount + Convert.ToDecimal(lblidDiscAmount.Text)
            '            GSTAmount = GSTAmount + Convert.ToDecimal(lblidGSTBase.Text)
            '            NetAmount()

            'txtInvoiceAmount.Text = Convert.ToDecimal(ToBillAmt)
            'txtDiscountAmount.Text = Convert.ToDecimal(DiscAmount)
            'txtAmountWithDiscount.Text = (Convert.ToDecimal(ToBillAmt) - Convert.ToDecimal(DiscAmount)).ToString("N2")
            'txtGSTAmount.Text = Convert.ToDecimal(GSTAmount)
            'txtNetAmount.Text = Convert.ToDecimal(NetAmount)
            ''txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString
            'UpdatePanel3.Update()

            'InsertNewLogDetail()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "InsertIntoSales", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Function FindAccountId() As Boolean
        Dim IsAccountId As Boolean
        Try

            IsAccountId = False

            Dim connIsAccountId As MySqlConnection = New MySqlConnection()

            connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsAccountId.Open()

            Dim commandIsAccountId As MySqlCommand = New MySqlCommand
            commandIsAccountId.CommandType = CommandType.Text

            If ddlContactType.Text = "COMPANY" Or ddlContactType.Text = "CORPORATE" Then
                commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblCompany where AccountId ='" & txtAccountIdBilling.Text & "'"
            ElseIf ddlContactType.Text = "PERSON" Or ddlContactType.Text = "RESIDENTIAL" Then
                commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblPerson where AccountId ='" & txtAccountIdBilling.Text & "'"
            End If

            'If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
            '    commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblCompany where AccountId ='" & txtAccountIdBilling.Text & "'"
            'ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
            '    commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblPerson where AccountId ='" & txtAccountIdBilling.Text & "'"
            'End If


            commandIsAccountId.Connection = connIsAccountId

            Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
            Dim dtIsAccountId As New DataTable
            dtIsAccountId.Load(drIsAccountId)

            If dtIsAccountId.Rows.Count > 0 Then
                If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                    IsAccountId = True
                End If
            End If

            commandIsAccountId.Dispose()
            connIsAccountId.Close()
            connIsAccountId.Dispose()
            dtIsAccountId.Dispose()
            drIsAccountId.Close()
            Return IsAccountId
        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "InsertIntoSales", ex.Message.ToString, "")
            Return IsAccountId
            Exit Function
        End Try
    End Function

    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Dim rowselected As Integer
        rowselected = 0
        lblAlert.Text = ""

        btnSave.Enabled = False

        If String.IsNullOrEmpty(txtCNDate.Text) = True Then
            lblAlert.Text = "PLEASE ENTER VOUCHER DATE"
            updPnlMsg.Update()
            txtCNDate.Focus()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If ddlContactType.SelectedIndex = 0 Then
            lblAlert.Text = "Please Select Account Type"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        Dim IsLock = FindCNPeriod(txtReceiptPeriod.Text)
        If IsLock = "Y" Then
            lblAlert.Text = "PERIOD IS LOCKED"
            updPnlMsg.Update()
            txtCNDate.Focus()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
            lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
            updPnlMsg.Update()
            txtAccountIdBilling.Focus()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = True Then
            lblAlert.Text = "INVALID COMPANY GROUP"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If
        '''''''''''''''''''''

        Dim IsAccountIdExist As Boolean = FindAccountId()

        If IsAccountIdExist = False Then
            lblAlert.Text = "INVALID ACCOUNT ID"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If
        '''''''''''''''''''''

        If (ddlCreditTerms.SelectedIndex) = 0 Then
            lblAlert.Text = "PLEASE SELECT CREDIT TERMS"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If (ddlSalesmanBilling.SelectedIndex) = 0 Then
            lblAlert.Text = "PLEASE SELECT SALESMAN"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If


        If IsNumeric(txtCreditDays.Text) = False Then
            lblAlert.Text = "CREDIT DAYS SHOULD BE NUMERIC ONLY"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If


        If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtCNGSTAmount.Text.Trim).ToString("N2") Then
            AdjustGStAmount()
        End If



        If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtCNGSTAmount.Text.Trim).ToString("N2") Then
            lblAlert.Text = "GST AMOUNTS DO NOT MATCH"
            updPnlMsg.Update()
            btnSave.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        Try

            'PopulateArCode()
            'Dim conn As MySqlConnection = New MySqlConnection()
            Dim totalRows, totalRows2, totalRows3 As Long
            totalRows = 0
            totalRows2 = 0
            totalRows3 = 0

            Dim totalRows1 As Long
            totalRows1 = 0
            totalRows1 = grvBillingDetailsNew.Rows.Count

            SetRowDataBillingDetailsRecs()
            'SetRowDataServiceRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                If tableAdd.Rows.Count > 0 Then
                    Dim lblidOtherCode1 As TextBox = CType(grvBillingDetails.Rows(0).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType1 As DropDownList = CType(grvBillingDetails.Rows(0).FindControl("txtItemTypeGV"), DropDownList)

                    If String.IsNullOrEmpty(lblidOtherCode1.Text) = True And lblidItemType1.Text = "-1" And totalRows1 = 0 Then
                        totalRows = totalRows + 1
                        lblAlert.Text = "PLEASE ENTER DETAILS RECORD"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSave.Enabled = True
                        'btnShowInvoices.Enabled = False
                        updPnlMsg.Update()

                        Exit Sub
                    End If

                End If

                'SetRowDataServiceRecs()
                totalRows = 0

                Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

                If tableAdd1 IsNot Nothing Then

                    For rowIndex1 As Integer = 0 To tableAdd1.Rows.Count - 1
                        Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtOtherCodeGV"), TextBox)
                        Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtItemTypeGV"), DropDownList)
                        Dim lblidServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtServiceRecordGV"), TextBox)
                        Dim lblidTaxTypeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtTaxTypeGV"), TextBox)


                        If lblidItemType.Text = "SERVICE" And String.IsNullOrEmpty(lblidServiceRecordNo.Text.Trim) = True Then
                            lblAlert.Text = "PLEASE ENTER SERVICE RECORD NO. FOR ALL SERVICE ITEM TYPE"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            updPnlMsg.Update()
                            btnSave.Enabled = True
                            Exit Sub
                        End If

                        If String.IsNullOrEmpty(lblidOtherCode.Text) = True And lblidItemType.Text <> "-1" Then
                            totalRows = totalRows + 1
                        End If

                        If ((String.IsNullOrEmpty(lblidTaxTypeGV.Text) = True)) And lblidItemType.Text <> "-1" Then
                            totalRows2 = totalRows2 + 1
                        End If

                        If lblidItemType.Text <> "-1" Then
                            If ((lblidTaxTypeGV.Text) <> (txtGST.Text)) Then
                                totalRows3 = totalRows3 + 1
                            End If
                        End If

                    Next rowIndex1
                End If


                If totalRows > 0 Then
                    lblAlert.Text = "PLEASE SELECT GL CODE "
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    lblAlert.Focus()
                    updPnlMsg.Update()
                    btnSave.Enabled = True
                    Exit Sub
                End If


                If totalRows2 > 0 Then
                    lblAlert.Text = "PLEASE SELECT GST CODE "
                    lblAlert.Focus()
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If

                If totalRows3 > 0 Then
                    lblAlert.Text = "HEADER AND DETAIL TAX CODE DO NOT MATCH "
                    lblAlert.Focus()
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If

                '''''''''''''''''''
                InsertIntoTblSales()

                CalculateTotal()

            End If
            'End If



            'conn.Close()

            DisableControls()

            'If rowselected = 0 Then
            '    lblAlert.Text = "PLEASE SELECT A RECORD"
            '    btnShowInvoices.Enabled = False
            '    updPnlMsg.Update()
            '    Exit Sub
            'End If

            'InsertNewLogDetail()

            If txtMode.Text = "NEW" Then
                lblMessage.Text = "ADD: CREDIT NOTE RECORD SUCCESSFULLY ADDED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)


                '''''''''''''''''''''''''
                If txtPostUponSave.Text = "1" Then

                    IsSuccess = PostCN()

                    If IsSuccess = True Then

                        lblAlert.Text = ""
                        updPnlSearch.Update()
                        updPnlMsg.Update()
                        updpnlBillingDetails.Update()
                        'updpnlServiceRecs.Update()
                        updpnlBillingDetails.Update()

                        btnQuickSearch_Click(sender, e)
                        lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

                        btnReverse.Enabled = True
                        btnReverse.ForeColor = System.Drawing.Color.Black

                        btnEdit.Enabled = False
                        btnEdit.ForeColor = System.Drawing.Color.Gray

                        btnDelete.Enabled = False
                        btnDelete.ForeColor = System.Drawing.Color.Gray

                        btnPost.Enabled = False
                        btnPost.ForeColor = System.Drawing.Color.Gray

                        'InsertNewLog()
                    End If

                Else
                    mdlPopupConfirmSavePost.Show()
                End If

                If txtAutoEmailCreditNote.Text = "True" Then
                    mdlConfirmMultiPrint.Show()

                End If

                '''''''''''''''''''''''''''

            Else
                lblMessage.Text = "EDIT: CREDIT NOTE RECORD SUCCESSFULLY UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            End If


            If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman  Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, LedgerCode, LedgerName, PrintCounter, TaxIdentificationNo,SalesTaxRegistrationNo,EI, EInvoiceStatus, UUID,SubmissionDate,SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel  FROM tblsales  WHERE 1=1 and InvoiceNumber = '" & txtCNNo.Text & "'"
            End If

            SQLDSCN.SelectCommand = txt.Text
            SQLDSCN.DataBind()
            GridView1.DataSourceID = "SQLDSCN"
            GridView1.DataBind()

            txtMode.Text = "View"

            lblAlert.Text = ""
            btnPost.Enabled = True
            grvBillingDetails.Visible = False


            'grvBillingDetails.Visible = False
            FirstGridViewRowBillingDetailsRecs()


            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black
            'txtRcno.Text = command.LastInsertedId
            ' End If

            'FirstGridViewRowServiceRecs()

            updPnlMsg.Update()
            updPnlSearch.Update()
            updPnlBillingRecs.Update()
            'updpnlServiceRecs.Update()

            Session.Add("RecordNo", txtCNNo.Text)
            Session.Add("Title", ddlDocType.SelectedItem.Text)



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnSave_Click", ex.Message.ToString, txtCNNo.Text)
            Exit Sub
        End Try
    End Sub

    'Private Sub InsertNewLog()

    '    Try

    '        ' Start: Insert NEW Log table

    '        Dim conn As MySqlConnection = New MySqlConnection()
    '        Dim command As MySqlCommand = New MySqlCommand

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()

    '        command.CommandType = CommandType.Text
    '        command.CommandText = "SELECT EnableLogforCNDN FROM tblservicerecordmastersetup where rcno=1"
    '        command.Connection = conn

    '        Dim dr As MySqlDataReader = command.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
    '            If dt.Rows(0)("EnableLogforCNDN").ToString = "1" Then
    '                Dim connLog As MySqlConnection = New MySqlConnection()

    '                connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
    '                If connLog.State = ConnectionState.Open Then
    '                    connLog.Close()
    '                    connLog.Dispose()
    '                End If
    '                connLog.Open()

    '                Dim commandInsertLog As MySqlCommand = New MySqlCommand
    '                commandInsertLog.CommandType = CommandType.StoredProcedure
    '                commandInsertLog.CommandText = "InsertLog_sitadatadb"

    '                commandInsertLog.Parameters.Clear()

    '                commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "CNDN")
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtCNNo.Text.Trim)

    '                commandInsertLog.Connection = connLog
    '                commandInsertLog.ExecuteScalar()

    '                connLog.Close()
    '                commandInsertLog.Dispose()
    '            End If
    '        End If

    '        ' End: Insert NEW Log table
    '    Catch ex As Exception
    '        lblAlert.Text = ex.Message.ToString
    '        InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub


    'Private Sub InsertNewLogDetail()

    '    Try

    '        ' Start: Insert NEW Log table

    '        Dim conn As MySqlConnection = New MySqlConnection()
    '        Dim command As MySqlCommand = New MySqlCommand

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()

    '        command.CommandType = CommandType.Text
    '        command.CommandText = "SELECT EnableLogforCNDN FROM tblservicerecordmastersetup where rcno=1"
    '        command.Connection = conn

    '        Dim dr As MySqlDataReader = command.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
    '            If dt.Rows(0)("EnableLogforCNDN").ToString = "1" Then


    '                Dim connLog As MySqlConnection = New MySqlConnection()

    '                connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
    '                If connLog.State = ConnectionState.Open Then
    '                    connLog.Close()
    '                    connLog.Dispose()
    '                End If
    '                connLog.Open()

    '                Dim commandInsertLog As MySqlCommand = New MySqlCommand
    '                commandInsertLog.CommandType = CommandType.StoredProcedure
    '                commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

    '                commandInsertLog.Parameters.Clear()

    '                commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "CNDN")
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtCNNo.Text.Trim)
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", "")

    '                commandInsertLog.Connection = connLog
    '                commandInsertLog.ExecuteScalar()

    '                connLog.Close()
    '                commandInsertLog.Dispose()

    '            End If
    '        End If
    '        ' End: Insert NEW Log table
    '    Catch ex As Exception
    '        lblAlert.Text = ex.Message.ToString
    '        InsertIntoTblWebEventLog("COMPANY - " + Session("UserID"), "FUNCTION InsertLogDetail", ex.Message.ToString, txtAccountId.Text)
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    Protected Sub Updatetblservicebillingdetailitem(TextBoxRcnoInvoice As Long, TextBoxServiceRecordNo As String)
        Try
            Dim lRcoInvoice As Long = TextBoxRcnoInvoice
            Dim lServiceRecordNo As String = TextBoxServiceRecordNo

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            'update  tblSalesDetail
            Dim cmdCNSum As MySqlCommand = New MySqlCommand
            cmdCNSum.CommandType = CommandType.Text
            cmdCNSum.CommandText = "SELECT sum(CNValue) as cnsum  FROM tblcndet where  RcnoServiceBillingItem = " & Convert.ToInt64(lRcoInvoice)
            cmdCNSum.Connection = conn

            Dim drCNSum As MySqlDataReader = cmdCNSum.ExecuteReader()
            Dim dtCNSum As New DataTable
            dtCNSum.Load(drCNSum)

            Dim lReceiptSum As Decimal

            If dtCNSum.Rows.Count = 0 Then
                lReceiptSum = 0.0
            ElseIf IsDBNull(dtCNSum.Rows(0)("cnsum")) = True Then
                lReceiptSum = 0.0
            Else
                lReceiptSum = Convert.ToDecimal(dtCNSum.Rows(0)("cnsum"))
            End If



            Dim commandUpdateInvoiceValue1 As MySqlCommand = New MySqlCommand
            commandUpdateInvoiceValue1.CommandType = CommandType.Text
            'Dim sqlUpdateInvoiceValue1 As String = "Update tblservicebillingdetailitem set ReceiptAmount = " & Convert.ToDecimal(lReceptAmtAdjusted) & " where Rcno = " & row1("Rcno")
            'Dim sqlUpdateInvoiceValue1 As String = "Update tblservicebillingdetailitem set CreditAmount  = " & lReceiptSum & " where Rcno = " & Convert.ToInt64(lRcoInvoice)
            Dim sqlUpdateInvoiceValue1 As String = "Update tblSalesDetail set CreditAmount  = " & lReceiptSum & " where Rcno = " & Convert.ToInt64(lRcoInvoice)
            commandUpdateInvoiceValue1.CommandText = sqlUpdateInvoiceValue1
            commandUpdateInvoiceValue1.Parameters.Clear()
            commandUpdateInvoiceValue1.Connection = conn
            commandUpdateInvoiceValue1.ExecuteNonQuery()

            'End: Update  tblServiceRecord

            'update  tblServiceRecord
            Dim cmdCNSumServiceRecord As MySqlCommand = New MySqlCommand
            cmdCNSumServiceRecord.CommandType = CommandType.Text
            cmdCNSumServiceRecord.CommandText = "SELECT sum(CNValue) as cnsum  FROM tblcndet where ServiceRecordNo = '" & lServiceRecordNo & "'"
            cmdCNSumServiceRecord.Connection = conn

            Dim drCNSumServiceRecord As MySqlDataReader = cmdCNSumServiceRecord.ExecuteReader()
            Dim dtCNSumServiceRecord As New DataTable
            dtCNSumServiceRecord.Load(drCNSumServiceRecord)

            Dim lReceiptSumServiceRecord As Decimal

            If dtCNSumServiceRecord.Rows.Count = 0 Then
                lReceiptSumServiceRecord = 0.0
            ElseIf IsDBNull(dtCNSumServiceRecord.Rows(0)("cnsum")) = True Then
                lReceiptSumServiceRecord = 0.0
            Else
                lReceiptSumServiceRecord = Convert.ToDecimal(dtCNSumServiceRecord.Rows(0)("cnsum"))
            End If



            Dim commandUpdateServiceRecord As MySqlCommand = New MySqlCommand
            commandUpdateServiceRecord.CommandType = CommandType.Text
            'Dim sqlUpdateInvoiceValue1 As String = "Update tblservicebillingdetailitem set ReceiptAmount = " & Convert.ToDecimal(lReceptAmtAdjusted) & " where Rcno = " & row1("Rcno")
            'Dim sqlUpdateInvoiceValue1 As String = "Update tblservicebillingdetailitem set CreditAmount  = " & lReceiptSum & " where Rcno = " & Convert.ToInt64(lRcoInvoice)
            Dim sqlUpdateServiceRecord As String = "Update tblServiceRecord set TotalCreditAmount  = " & lReceiptSumServiceRecord & " where RecordNo = '" & lServiceRecordNo & "'"
            commandUpdateServiceRecord.CommandText = sqlUpdateServiceRecord
            commandUpdateServiceRecord.Parameters.Clear()
            commandUpdateServiceRecord.Connection = conn
            commandUpdateServiceRecord.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            commandUpdateInvoiceValue1.Dispose()
            cmdCNSum.Dispose()
            dtCNSumServiceRecord.Dispose()
            dtCNSum.Dispose()
            drCNSum.Close()
            drCNSumServiceRecord.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "Updatetblservicebillingdetailitem", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnShowInvoices_Click(sender As Object, e As EventArgs) Handles btnShowInvoices.Click
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()
            'lblMessage.Text = ""
            'If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
            '    lblAlert.Text = "Please Select Account Id"
            '    updPnlMsg.Update()
            '    Exit Sub
            'End If

            If ddlDocType.SelectedIndex = 0 Then
                lblAlert.Text = "PLEASE SELECT VOUCHER TYPE "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                lblAlert.Focus()

                updPnlMsg.Update()
                Exit Sub
            End If



            If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = False Then
                ddlCompanyGrpII.Text = txtCompanyGroup.Text
            End If

            If String.IsNullOrEmpty(ddlContactType.Text.Trim) = False Then
                ddlContactTypeIS.Text = ddlContactType.Text
            End If
            txtAccountIdII.Text = txtAccountIdBilling.Text
            txtClientNameII.Text = txtAccountName.Text
            ''''''''''''''''''
            mdlImportInvoices.Show()
            'Start: Billing Details

            'Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            'Dim drCurrentRowLoc As DataRow = Nothing

            'For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
            '    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
            '    drCurrentRowLoc = dtScdrLoc.NewRow()
            '    ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
            '    grvBillingDetails.DataSource = dtScdrLoc
            '    grvBillingDetails.DataBind()

            '    SetPreviousDataBillingDetailsRecs()
            'Next i

            'FirstGridViewRowBillingDetailsRecs()

            ''Start: From tblBillingDetailItem

            'Dim Total As Decimal
            'Dim TotalWithGST As Decimal
            'Dim TotalDiscAmt As Decimal
            'Dim TotalGSTAmt As Decimal
            'Dim TotalPriceWithDiscountAmt As Decimal


            'Total = 0.0
            'TotalWithGST = 0.0
            'TotalDiscAmt = 0.0
            'TotalGSTAmt = 0.0
            'TotalPriceWithDiscountAmt = 0.0

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand
            'cmdServiceBillingDetailItem.CommandType = CommandType.Text
            ''cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblsales where Rcnoservicebillingdetail=" & Convert.ToInt32(txtRcnoservicebillingdetail.Text)

            ''If String.IsNullOrEmpty(ddlContractNo.Text) = True Then
            ''    cmdServiceBillingDetailItem.CommandText = "SELECT ContractNo, ContractDate, AgreeValue, RetentionValue FROM tblContract where Status = 'O' and CompanyGroup ='" & txtCompanyGroup.Text & "' and ContractGroup <> 'ST'  and AccountId = '" & txtAccountIdBilling.Text & "'"
            ''Else
            ''    cmdServiceBillingDetailItem.CommandText = "SELECT ContractNo, ContractDate, AgreeValue, RetentionValue FROM tblContract where Status = 'O' and CompanyGroup ='" & txtCompanyGroup.Text & "' and ContractGroup <> 'ST'  and AccountId = '" & txtAccountIdBilling.Text & "' and ContractNo ='" & ddlContractNo.Text & "'"
            ''End If

            ''cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblsales a, tblservicebillingdetailitem b where a.rcnoServiceRecord = b.RcnoServiceRecord and a.PaidStatus <> 'F' and a.GLStatus = 'P' and a.CompanyGroup ='" & txtCompanyGroup.Text & "' and a.ContactType = '" & ddlContactType.Text & "'  and a.AccountId = '" & txtAccountIdBilling.Text & "' order by a.Salesdate"

            ''cmdServiceBillingDetailItem.CommandText = "SELECT a.InvoiceNumber, a.SalesDate, b.TotalPriceWithGST, a.TotalReceiptAmount, a.TotalCNAmount, b.ItemType, b.ItemCode, b.ItemDescription, b.OtherCode, b.GLDescription, b.rcno, b.ReceiptAmount, b.CreditAmount FROM tblsales a, tblservicebillingdetailitem b where a.rcnoServiceRecord = b.RcnoServiceRecord and b.Contractno = '" & ddlContractNo.Text & "' and  a.PaidStatus <> 'F' and a.GLStatus = 'P' and STBilling = 'N' and a.CompanyGroup ='" & txtCompanyGroup.Text & "' and a.AccountId = '" & txtAccountIdBilling.Text & "' order by a.Salesdate, b.rcno"
            ''cmdServiceBillingDetailItem.CommandText = "SELECT a.InvoiceNumber, a.SalesDate, b.TotalPriceWithGST, a.TotalReceiptAmount, a.TotalCNAmount, b.ServiceRecordNo, b.ContractNo, b.TaxType, b.GSTPerc, b.GSTAmt, b.PriceWithDisc, b.InvoiceType,  b.ItemType, b.ItemCode, b.ItemDescription, b.OtherCode, b.GLDescription, b.rcno, b.ReceiptAmount, b.CreditAmount FROM tblsales a, tblservicebillingdetailitem b where a.BatchNo = b.BatchNo and b.Contractno = '" & ddlContractNo.Text & "' and  a.PaidStatus <> 'F' and a.GLStatus = 'P' and STBilling = 'N' and a.CompanyGroup ='" & txtCompanyGroup.Text & "' and a.AccountId = '" & txtAccountIdBilling.Text & "' order by a.Salesdate, b.rcno"
            ''cmdServiceBillingDetailItem.CommandText = "SELECT a.InvoiceNumber, a.SalesDate, b.TotalPriceWithGST, a.TotalReceiptAmount, a.TotalCNAmount, b.ServiceRecordNo, b.ContractNo, b.TaxType, b.GSTPerc, b.GSTAmt, b.PriceWithDisc, b.InvoiceType,  b.ItemType, b.ItemCode, b.ItemDescription, b.OtherCode, b.GLDescription, b.rcno, b.ReceiptAmount, b.CreditAmount FROM tblsales a, tblservicebillingdetailitem b where a.BatchNo = b.BatchNo and b.Contractno = '" & ddlContractNo.Text & "' and  a.PaidStatus <> 'F' and a.GLStatus = 'P' and STBilling = 'N' and a.CompanyGroup ='" & txtCompanyGroup.Text & "' and a.AccountId = '" & txtAccountIdBilling.Text & "' order by a.Salesdate, b.rcno"
            'cmdServiceBillingDetailItem.CommandText = "SELECT a.InvoiceNumber, a.SalesDate, b.AppliedBase, a.TotalReceiptAmount, a.TotalCNAmount, b.RefType, b.CostCode, b.GST, b.GSTRate, b.GSTBase, b.ValueBase,   b.SubCode,  b.Description, b.LedgerCode, b.LedgerName, b.InvoiceType, b.ReceiptAmount, b.CreditAmount, b.rcno FROM tblsales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber  and  a.PaidStatus <> 'F' and b.Costcode = '" & ddlContractNo.Text & "' and a.GLStatus = 'P' and a.CompanyGroup ='" & txtCompanyGroup.Text & "' and a.AccountId = '" & txtAccountIdBilling.Text & "' order by a.Salesdate, b.rcno"

            'cmdServiceBillingDetailItem.Connection = conn

            'Dim drcmdServiceBillingDetailItem As MySqlDataReader = cmdServiceBillingDetailItem.ExecuteReader()
            'Dim dtServiceBillingDetailItem As New DataTable
            'dtServiceBillingDetailItem.Load(drcmdServiceBillingDetailItem)

            'Dim TotDetailRecordsLoc = dtServiceBillingDetailItem.Rows.Count
            'If dtServiceBillingDetailItem.Rows.Count > 0 Then

            '    Dim rowIndex = 0

            '    'PopulateArCode()
            '    For Each row As DataRow In dtServiceBillingDetailItem.Rows
            '        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
            '            AddNewRowBillingDetailsRecs()
            '            'AddNewRow()
            '        End If


            '        Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
            '        TextBoxtxtInvoiceNoGV.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("InvoiceNumber"))

            '        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceDateGV"), TextBox)
            '        'TextBoxInvoiceDate.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("SalesDate"))
            '        TextBoxInvoiceDate.Text = Convert.ToDateTime(dtServiceBillingDetailItem.Rows(rowIndex)("SalesDate")).ToString("dd/MM/yyyy")
            '        'Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd")

            '        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
            '        'TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("NetAmount"))
            '        TextBoxTotalPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ValueBase"))

            '        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        'TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("NetAmount"))
            '        TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTBase"))

            '        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
            '        TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("AppliedBase"))

            '        Dim TextBoxtxtServiceNoGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceNoGV"), TextBox)
            '        TextBoxtxtServiceNoGV.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("RefType"))

            '        Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalReceiptAmtGV"), TextBox)
            '        TextBoxTotalTotalReceiptAmt.Text = Convert.ToString(Convert.ToDecimal(dtServiceBillingDetailItem.Rows(rowIndex)("ReceiptAmount")))



            '        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalCreditNoteAmtGV"), TextBox)
            '        TextBoxBalanceAmt.Text = Convert.ToString(Convert.ToDecimal(dtServiceBillingDetailItem.Rows(rowIndex)("CreditAmount")))


            '        'Dim TextBoxItemType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), TextBox)
            '        'TextBoxItemType.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemType")))

            '        'Dim TextBoxItemCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
            '        'TextBoxItemCode.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode")))

            '        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
            '        'TextBoxItemDescription.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemDescription")))

            '        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
            '        'TextBoxOtherCode.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("LedgerCode")))
            '        TextBoxOtherCode.Text = txtARCode10.Text


            '        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            '        TextBoxGLDescription.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("LedgerName")))



            '        ''''''''''''''''''''''''''''''
            '        Dim TextBoxItemCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
            '        TextBoxItemCode.Text = txtARProductCode10.Text

            '        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
            '        TextBoxItemDescription.Text = txtARDescription10.Text

            '        'Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
            '        'TextBoxOtherCode.Text = txtARCode10.Text

            '        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            '        'TextBoxGLDescription.Text = txtARDescription10.Text


            '        '''''''''''''''''''''''''''''''

            '        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
            '        TextBoxRcnoInvoice.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Rcno")))

            '        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
            '        'TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("NetAmount"))
            '        TextBoxTaxType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GST"))

            '        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTPercGV"), TextBox)
            '        'TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("NetAmount"))
            '        TextBoxGSTPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTRate"))

            '        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceTypeGV"), TextBox)

            '        If Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("SubCode"))) = "SERV" Then
            '            TextBoxInvoiceType.Text = "SERVICE"
            '            'TextBoxItemType.Enabled = False
            '        ElseIf Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("SubCode"))) = "STCK" Then
            '            TextBoxInvoiceType.Text = "STOCK"
            '            'TextBoxItemType.Enabled = False
            '        ElseIf Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("SubCode"))) = "DIST" Then
            '            TextBoxInvoiceType.Text = "OTHERS"
            '            'TextBoxItemType.Enabled = False
            '        End If

            '        'TextBoxInvoiceType.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("InvoiceType")))


            '        'Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
            '        'TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
            '        'TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
            '        ''txtAmountWithDiscount.Text = Total - TotalDiscAmt
            '        'TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
            '        'TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

            '        'Dim Query As String

            '        'Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
            '        'Query = "Select * from tblbillingproducts"
            '        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

            '        'Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
            '        'Query = "Select * from tblunitms"
            '        'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


            '        'Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
            '        'Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

            '        'If TextBoxItemType1.Text = "SERVICE" Then
            '        '    TextBoxQty1.Enabled = False
            '        '    TextBoxQty1.Text = 1
            '        '    TextBoxItemType1.Enabled = False
            '        'End If

            '        rowIndex += 1

            '    Next row

            '    'txtTotal.Text = Total.ToString("N2")

            '    'txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")


            '    'txtTotalDiscAmt.Text = 0.0
            '    'txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
            '    'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
            '    'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
            'Else
            '    FirstGridViewRowBillingDetailsRecs()
            '    'FirstGridViewRowTarget()
            '    'Dim Query As String
            '    'Dim TextBoxTargetDesc As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '    'Query = "Select * from tblTarget"

            '    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            'End If

            ''End: Detail Records


            ''End: From tblBillingDetailItem
            ''End If

            ''AddNewRowBillingDetailsRecs()

            btnSave.Enabled = True
            'updpnlServiceRecs.Update()
            updpnlBillingDetails.Update()
            'End: Billing Details
            updPanelSave.Update()
            'End: Populate the grid
            updPnlBillingRecs.Update()


            '''''''''''''''''''
            'Dim rowselected As Integer
            'rowselected = 0
            '

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnShowInvoices_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    'Protected Sub txtTaxTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)


    '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGV"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGV"), TextBox)


    '        'lTargetDesciption = lblid1.Text

    '        'Dim rowindex1 As Integer = ddl1.RowIndex

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString

    '            CalculatePrice()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '        conn1.Dispose()
    '        commandGST.Dispose()
    '        dtGST.Dispose()
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtTaxTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
    '        Exit Sub
    '    End Try
    'End Sub


    Protected Sub txtItemTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)



            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)

            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtInvoiceNoGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtServiceRecordGV"), TextBox)

            If (ddlDocType.SelectedIndex = 0) Then
                lblAlert.Text = "PLEASE ENTER VOUCHER TYPE"
                updPnlMsg.Update()
                ddlDocType.Focus()
                lblid1.SelectedIndex = 0
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If lblid1.Text = "SERVICE" Then
                lblid2.Enabled = True
                lblid3.Enabled = True
                lblid4.Enabled = True
            Else
                lblid2.Text = ""
                lblid3.Text = ""
                lblid4.Text = ""
                'lblid2.Enabled = False
                lblid3.Enabled = False
                lblid4.Enabled = False
            End If

            Dim rowindex1 As Integer = xrow1.RowIndex
            If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
                btnAddDetail_Click(sender, e)
                'txtRecordAdded.Text = "Y"
            End If

            'CalculateTotalPrice()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtItemTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub txtItemCodeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xgrvBillingDetails As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)

            Dim lblid1 As DropDownList = CType(xgrvBillingDetails.FindControl("txtItemCodeGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)

            'lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex

            'Get Item desc, price Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            'command1.CommandText = "SELECT * FROM tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "' and  ProductCode = '" & lblid1.Text & "'"
            command1.CommandText = "SELECT * FROM tblbillingproducts  where   ProductCode = '" & lblid1.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("Description").ToString
                lblid3.Text = dt.Rows(0)("Price").ToString
                lblid4.Text = 1
                lblid5.Text = dt.Rows(0)("COACode").ToString
                lblid6.Text = dt.Rows(0)("TaxType").ToString
                lblid7.Text = dt.Rows(0)("TaxRate").ToString
                'CalculatePrice()
            End If

            conn.Close()
            conn.Dispose()

            command1.Dispose()
            dt.Dispose()
            dr.Close()
            'If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
            '    btnAddDetail_Click(sender, e)
            '    'txtRecordAdded.Text = "Y"
            'End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtItemCodeGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles grvBillingDetails.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                SetRowDataBillingDetailsRecs()
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)


                'Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                'Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceGV"), TextBox)

                'InvoiceNumber()


                'Dim TextBoxRcnoCNDet As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)

                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                ''Dim TextBoxRcno As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoServiceBillingDetailItemGV"), TextBox)
                'If (String.IsNullOrEmpty(TextBoxRcnoInvoice.Text) = False) Then
                '    If (Convert.ToInt32(TextBoxRcnoInvoice.Text) > 0) Then

                '        'Dim conn As MySqlConnection = New MySqlConnection(constr)
                '        conn.Open()

                '        Dim commandUpdGS As MySqlCommand = New MySqlCommand
                '        commandUpdGS.CommandType = CommandType.Text
                '        commandUpdGS.CommandText = "Delete from tblSalesDetail where rcno = " & TextBoxInvoiceNo.Text
                '        commandUpdGS.Connection = conn
                '        commandUpdGS.ExecuteNonQuery()



                '        'Updatetblservicebillingdetailitem(Convert.ToInt64(TextBoxRcnoInvoice.Text))
                '    End If
                'End If
                'conn.Close()
                If dt.Rows.Count > 0 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTableBillingDetailsRec") = dt
                    grvBillingDetails.DataSource = dt
                    grvBillingDetails.DataBind()

                    rowdeleted = "Y"
                    SetPreviousDataBillingDetailsRecs()

                    calculateTotalCN()

                    'CalculatePrice()
                    rowdeleted = "N"

                    If dt.Rows.Count = 0 Then
                        FirstGridViewRowBillingDetailsRecs()
                    End If

                    'Dim commandUpdRecv As MySqlCommand = New MySqlCommand
                    'commandUpdRecv.CommandType = CommandType.Text
                    'commandUpdRecv.CommandText = "Update tblcn set NetAmount =" & Convert.ToDecimal(txtCNAmount.Text) & " where CNNumber = '" & txtCNNo.Text & "'"
                    'commandUpdRecv.Connection = conn
                    'commandUpdRecv.ExecuteNonQuery()

                    'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
                End If

                'CalculateTotalPrice()
                'CalculatePrice()
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "grvBillingDetails_RowDeleting", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvBillingDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "grvBillingDetails_RowDataBound", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        mdlPopupStatusSearch.Show()
    End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs)
        'Try
        '    Dim YrStrList As List(Of [String]) = New List(Of String)()

        '    'If rdbStatusSearch.SelectedValue = "ALL" Then
        '    '    For Each item As ListItem In chkStatusSearch.Items
        '    '        YrStrList.Add(item.Value)
        '    '    Next
        '    'Else
        '    For Each item As ListItem In chkStatusSearch.Items
        '        If item.Selected Then
        '            YrStrList.Add(item.Value)
        '        End If
        '    Next

        '    Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

        '    txtSearch1Status.Text = YrStr
        'Catch ex As Exception
        '    Dim exstr As String
        '    exstr = ex.Message.ToString
        '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        '    lblAlert.Text = exstr
        '    'Dim message As String = "alert('" + exstr + "')"
        '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        'End Try
    End Sub

    Protected Sub txtAccountId_TextChanged(sender As Object, e As EventArgs)
        'Dim query As String
        'query = "Select ContractNo from tblContract where AccountId = '" & txtAccountId.Text & "'"
        'PopulateDropDownList(query, "ContractNo", "ContractNo", ddlContractNo)
    End Sub

    Protected Sub btnQuickReset_Click(sender As Object, e As EventArgs) Handles btnQuickReset.Click
        txtReceiptnoSearch.Text = ""
        txtAccountIdSearch.Text = ""
        'txtBillingPeriodSearch.Text = ""
        txtClientNameSearch.Text = ""
        ddlCompanyGrpSearch.SelectedIndex = 0
        'ddlSalesmanSearch.SelectedIndex = 0
        txtSearch1Status.Text = "O,P"
        ddlCompanyGrpSearch.SelectedIndex = 0
        ddlBranch.SelectedIndex = 0

        'btnQuickSearch_Click(sender, e)


        'btnSearch1Status_Click(sender, e)
    End Sub

    Protected Sub chkSelectGV_CheckedChanged(sender As Object, e As EventArgs)
        Try
            Dim chk1 As CheckBox = DirectCast(sender, CheckBox)
            xgrvBillingDetails = CType(chk1.NamingContainer, GridViewRow)


            Dim lblid1 As TextBox = CType(chk1.FindControl("txtPriceWithDiscGV"), TextBox)
            Dim lblid2 As TextBox = CType(chk1.FindControl("txtTotalReceiptAmtGV"), TextBox)
            Dim lblid3 As TextBox = CType(chk1.FindControl("txtTotalCreditNoteAmtGV"), TextBox)
            Dim lblid4 As TextBox = CType(chk1.FindControl("txtReceiptAmtGV"), TextBox)
            Dim lblid5 As TextBox = CType(chk1.FindControl("txtCNGSTAmtGV"), TextBox)
            Dim lblid6 As TextBox = CType(chk1.FindControl("txtGSTPercGV"), TextBox)


            'If chk1.Checked = True Then
            '    lblid3.Text = lblid2.Text
            'Else
            '    lblid3.Text = "0.00"
            'End If
            ''lblid2.Text = lblid1.Text


            If String.IsNullOrEmpty(lblid1.Text) = True Then
                lblid1.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid2.Text) = True Then
                lblid2.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid3.Text) = True Then
                lblid3.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid4.Text) = True Then
                lblid4.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid5.Text) = True Then
                lblid5.Text = "0.00"
            End If



            If chk1.Checked = True Then
                lblid4.Text = lblid1.Text - lblid2.Text - lblid3.Text
            Else
                lblid4.Text = "0.00"
            End If

            lblid4.Text = Convert.ToDecimal(lblid4.Text).ToString("N2")

            lblid5.Text = Convert.ToDecimal(Convert.ToDecimal(lblid4.Text).ToString("N2") * Convert.ToDecimal(lblid6.Text).ToString("N2") * 0.01).ToString("N2")
            calculateTotalCN()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "chkSelectGV_CheckedChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub calculateTotalCN()
        Try



            '''''''''''''''''''''''''
            Dim TotalCNAmtGVB As Decimal = 0
            Dim TotalGSTAmtGVB As Decimal = 0
            '' start of GVB
            If txtMode.Text = "EDIT" Then


                Dim gvbRecords, j As Long
                gvbRecords = grvBillingDetailsNew.Rows.Count()

                'For j = gvbRecords - 1 To 0 Step -1
                For i As Integer = 0 To gvbRecords - 1

                    'Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("chkSelectGVB"), CheckBox)
                    Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsNew.Rows(i).Cells(7).FindControl("txtTotalPriceGVB"), TextBox)
                    Dim TextBoxCNGSTAmt As TextBox = CType(grvBillingDetailsNew.Rows(i).Cells(7).FindControl("txtGSTAmtGVB"), TextBox)

                    If String.IsNullOrEmpty(TextBoxReceiptAmt.Text) = True Then
                        TextBoxReceiptAmt.Text = "0.00"
                    End If

                    If String.IsNullOrEmpty(TextBoxCNGSTAmt.Text) = True Then
                        TextBoxCNGSTAmt.Text = "0.00"
                    End If


                    'If TextBoxSelect.Checked = True Then
                    TotalCNAmtGVB = TotalCNAmtGVB + Convert.ToDecimal(TextBoxReceiptAmt.Text)
                    'txtCNAmount.Text = TotalCNAmtGVB

                    TotalGSTAmtGVB = TotalGSTAmtGVB + Convert.ToDecimal(TextBoxCNGSTAmt.Text)
                    'txtCNGSTAmount.Text = TotalGSTAmtGVB
                Next
            End If



            '''''''''''''''



            Dim TotalCNAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)


            If (table.Rows.Count > 0) Then

                For i As Integer = 0 To (table.Rows.Count) - 1

                    Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)
                    Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtTotalPriceGV"), TextBox)
                    Dim TextBoxCNGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtGSTAmtGV"), TextBox)

                    If String.IsNullOrEmpty(TextBoxReceiptAmt.Text) = True Then
                        TextBoxReceiptAmt.Text = "0.00"
                    End If

                    If String.IsNullOrEmpty(TextBoxCNGSTAmt.Text) = True Then
                        TextBoxCNGSTAmt.Text = "0.00"
                    End If


                    'If TextBoxSelect.Checked = True Then
                    TotalCNAmt = TotalCNAmt + Convert.ToDecimal(TextBoxReceiptAmt.Text)
                    txtCNAmount.Text = TotalCNAmt

                    TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxCNGSTAmt.Text)
                    txtCNGSTAmount.Text = TotalGSTAmt
                    'txtCNAmount.Text = TotalGSTAmt
                    'End If
                Next i

            End If

            txtCNAmount.Text = (TotalCNAmt + TotalCNAmtGVB).ToString("N2")
            txtCNGSTAmount.Text = (TotalGSTAmt + TotalGSTAmtGVB).ToString("N2")
            txtCNNetAmount.Text = (TotalCNAmt + TotalCNAmtGVB + TotalGSTAmt + TotalGSTAmtGVB).ToString("N2")


            txtTotalWithDiscAmt.Text = (TotalCNAmt + TotalCNAmtGVB).ToString("N2")
            txtTotalGSTAmt.Text = (TotalGSTAmt + TotalGSTAmtGVB).ToString("N2")
            txtTotalWithGST.Text = (TotalCNAmt + TotalCNAmtGVB + TotalGSTAmt + TotalGSTAmtGVB).ToString("N2")

            updPanelSave.Update()
            updPnlBillingRecs.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "calculateTotalCN", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub txtReceiptAmtGV_TextChanged(sender As Object, e As EventArgs)

        Dim txt1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

        Dim lblid1 As CheckBox = CType(txt1.FindControl("chkSelectGV"), CheckBox)
        Dim lblid2 As TextBox = CType(txt1.FindControl("txtReceiptAmtGV"), TextBox)
        'Dim lblid3 As TextBox = CType(txt1.FindControl("txtBalanceAmtGV"), TextBox)

        Dim lblid5 As TextBox = CType(txt1.FindControl("txtCNGSTAmtGV"), TextBox)
        Dim lblid6 As TextBox = CType(txt1.FindControl("txtGSTPercGV"), TextBox)


        If Convert.ToDecimal(lblid2.Text) > 0.0 Then
            lblid1.Checked = True
        Else
            lblid1.Checked = False

        End If

        lblid5.Text = Convert.ToDecimal(Convert.ToDecimal(lblid2.Text).ToString("N2") * Convert.ToDecimal(lblid6.Text).ToString("N2") * 0.01).ToString("N2")
        'If Convert.ToDecimal(lblid2.Text) > Convert.ToDecimal(lblid3.Text) Then
        '    lblid2.Text = lblid3.Text
        'End If

        lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")
        calculateTotalCN()
    End Sub


    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        'If txtPopUpClient.Text.Trim = "" Then
        '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

        '    SqlDSClient.DataBind()
        '    gvClient.DataBind()
        '    mdlPopUpClient.Show()
        'End If
    End Sub

    Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging
        Try
            gvClient.PageIndex = e.NewPageIndex

            'If txtPopUpClient.Text.Trim = "" Then
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster "
            'Else
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            'End If
            'SqlDSClient.DataBind()
            'gvClient.DataBind()
            'mdlPopUpClient.Show()


            'If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and  (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "' or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and  (Upper(ContType) = '" + txtContType2.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"


            'Else
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and (upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or accountid like '" + txtPopUpClient.Text + "%' or contperson like '%" + txtPopUpClient.Text + "%') and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "' or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and (upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or accountid like '" + txtPopUpClient.Text + "%' or contperson like '%" + txtPopUpClient.Text + "%') and (Upper(ContType) = '" + txtContType2.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"
            'End If


            'If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany order by name"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON order by name"
            '    End If
            'Else
            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contactperson like '%" + txtPopUpClient.Text + "%') order by name"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON where 1=1 and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contACTperson like '%" + txtPopUpClient.Text + "%') order by name"
            '    End If

            '    'SqlDSClient.DataBind()
            '    'gvClient.DataBind()
            '    'mdlPopUpClient.Show()
            'End If

            If txtSearch.Text = "ImportService" Or txtSearch.Text = "ImportInvoice" Then
                SqlDSClient.SelectCommand = txtImportService.Text
            End If

            If txtSearch.Text = "CustomerSearch" Then
                SqlDSClient.SelectCommand = txtCustomerSearch.Text
            End If

            If txtSearch.Text = "InvoiceSearch" Then
                SqlDSClient.SelectCommand = txtInvoiceSearch.Text
            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "gvClient_PageIndexChanging", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
        ''please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        ''select another alphabet ---records are not selected

        'Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        'ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
        'Me.GenerateClientAlphabets()
        'gvClient.PageIndex = 0
        ''If txtPopUpClient.Text.Trim = "" Then
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''Else
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''End If

        'If txtPopUpClient.Text.Trim = "" Then
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    End If

        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    End If
        'End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
    End Sub

    Protected Sub txtAccountIdBilling_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdBilling.TextChanged
        If ddlContactType.SelectedIndex > 0 Then
            If Len(txtAccountIdBilling.Text) > 2 Then
                btnClient_Click(sender, New ImageClickEventArgs(0, 0))
            End If
        Else
            lblAlert.Text = "Please Select Account Type"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End If

    End Sub

    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        Try
            lblAlert.Text = ""
            txtSearch.Text = ""
            txtPopUpClient.Text = ""

            txtSearch.Text = "CustomerSearch"

            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountIdBilling.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"

                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"

                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by AccountID,  LocationId, ServiceName"

                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by AccountID,  LocationId, ServiceName"

                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            txtCustomerSearch.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnClient_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateTblSales(strInvoiceNo As String, strRecordNo As String, dblCNAmt As Decimal, strSubCode As String)
        Try
            Dim lTotalReceipt As Decimal
            Dim lInvoiceAmount As Decimal
            Dim lTotalcn As Decimal
            lTotalReceipt = 0.0
            lInvoiceAmount = 0.0
            lTotalcn = 0.0
            'Get Item desc, price Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text

            'command1.CommandText = "SELECT AppliedBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            'command1.Connection = conn

            'Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            'Dim dt1 As New DataTable
            'dt1.Load(dr1)

            'If dt1.Rows.Count > 0 Then
            '    lInvoiceAmount = dt1.Rows(0)("AppliedBase").ToString
            'End If

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()


            'Dim command2 As MySqlCommand = New MySqlCommand
            'command2.CommandType = CommandType.Text

            ''command2.CommandText = "UPDATE tblSales SET CreditBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblSalesDetail A, tblSales B WHERE " & _
            ''      "A.InvoiceNumber=B.InvoiceNumber AND A.SubCode = 'ARIN'  AND A.SourceInvoice = tblSales.InvoiceNumber AND " & _
            ''      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "

            'command2.CommandText = "SELECT  ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) as totalcn FROM tblSalesDetail A, tblSales B WHERE " & _
            '    "A.InvoiceNumber=B.InvoiceNumber AND (B.DocType = 'ARCN' or B.DocType = 'ARDN')  and B.PostStatus = 'P' and A.SourceInvoice = '" & strInvoiceNo & "'"

            'command2.Connection = conn

            ''command4.Connection = conn
            ''command2.ExecuteNonQuery()

            'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    lTotalReceipt = dt2.Rows(0)("totalcn").ToString
            'End If
            ' ''''''''''''''''''''''''


            'Dim command21 As MySqlCommand = New MySqlCommand
            'command21.CommandType = CommandType.Text

            'command21.CommandText = "UPDATE tblSales SET CreditBase = '" & lTotalReceipt * (-1) & "' WHERE InvoiceNumber = '" & strInvoiceNo & "'"
            'command21.Connection = conn

            ''command4.Connection = conn
            'command21.ExecuteNonQuery()
            ' ''''''''''''''''''''''''
            'Dim lbalance As Decimal
            'Dim command3 As MySqlCommand = New MySqlCommand
            'command3.CommandType = CommandType.Text
            'command3.CommandText = "SELECT ValueBase, GSTBase , ReceiptBase, CreditBase, CreditBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            ''command3.CommandText = "UPDATE tblSales SET ReceiptOriginal = (SELECT SUM(A.ValueOriginal+A.GstOriginal) FROM tblRecvDet A, tblRecv B WHERE " & _
            ''"A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN' AND A.RefType = tblSales.InvoiceNumber AND " & _
            ''"B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "
            'command3.Connection = conn

            ''command4.Connection = conn
            'command3.ExecuteNonQuery()

            'Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            'Dim dt3 As New DataTable
            'dt3.Load(dr3)

            'If dt3.Rows.Count > 0 Then

            '    If String.IsNullOrEmpty(dt3.Rows(0)("ValueBase").ToString) = False Then
            '        lbalance = dt3.Rows(0)("ValueBase").ToString
            '    Else
            '        lbalance = 0.0
            '    End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("GSTBase").ToString) = False Then
            '        lbalance = lbalance + dt3.Rows(0)("GSTBase").ToString
            '    Else
            '        'lbalance = 0.0
            '    End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
            '        lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
            '    Else
            '        'lbalance = 0.0
            '    End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
            '        lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
            '    Else
            '        'lbalance = 0.0
            '    End If
            '    'lbalance = Convert.ToDecimal(dt3.Rows(0)("ValueBase").ToString) + Convert.ToDecimal(dt3.Rows(0)("GSTBase").ToString) - Convert.ToDecimal(dt3.Rows(0)("ReceiptBase").ToString)
            '    'If String.IsNullOrEmpty(dt3.Rows(0)("totalcn").ToString) = True Then
            '    '    lTotalcn = 0.0
            '    'Else
            '    '    lTotalcn = dt3.Rows(0)("totalcn").ToString
            '    'End If
            'End If




            'Dim command4 As MySqlCommand = New MySqlCommand
            'command4.CommandType = CommandType.Text

            ' ''Dim qry4 As String = "Update tblSales Set PaidStatus = '" & lstatus & "', TotalReceiptAmount = " & lTotalReceipt & " where InvoiceNumber = @InvoiceNumber "
            'Dim qry4 As String = "Update tblSales Set BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            'command4.CommandText = qry4
            'command4.Parameters.Clear()

            'command4.Parameters.AddWithValue("@InvoiceNumber", strInvoiceNo)
            'command4.Connection = conn
            'command4.ExecuteNonQuery()

            '    'End: Update tblSales


            '''''''''''''' 01.12.18

            Dim commandCN As MySqlCommand = New MySqlCommand
            commandCN.CommandType = CommandType.Text


            commandCN.CommandText = "SELECT  ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) as totalcn FROM tblSalesDetail A, tblSales B WHERE " & _
                "A.InvoiceNumber=B.InvoiceNumber AND (B.DocType = 'ARCN' or B.DocType = 'ARDN')  and B.PostStatus = 'P' and A.SourceInvoice = '" & strInvoiceNo.Trim & "'"

            commandCN.Connection = conn


            Dim dr2 As MySqlDataReader = commandCN.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            If dt2.Rows.Count > 0 Then
                lTotalcn = dt2.Rows(0)("totalcn").ToString
            End If
            'lTotalcn = lTotalcn * (-1)

            commandCN.Dispose()
            ''''''''''''''''''''''''


            '''''''''''''' Journal

            Dim lTotalJV As Decimal
            Dim commandJournal As MySqlCommand = New MySqlCommand
            commandJournal.CommandType = CommandType.Text

            commandJournal.CommandText = "SELECT   ifnull(SUM(ifnull(A.DebitBase,0)),0) as debitbase, ifnull(SUM(ifnull(A.CreditBase,0)),0) as creditbase  FROM tbljrnvdet A, tbljrnv B WHERE " & _
               "A.VoucherNumber=B.VoucherNumber AND  B.PostStatus = 'P'  and A.RefType = '" & strInvoiceNo.Trim & "' "

            commandJournal.Connection = conn

            Dim drJournal As MySqlDataReader = commandJournal.ExecuteReader()
            Dim dtJournal As New DataTable
            dtJournal.Load(drJournal)

            If dtJournal.Rows.Count > 0 Then
                'If dtJournal.Rows(0)("debitbase").ToString > 0.0 Then
                '    lTotalJV = dtJournal.Rows(0)("debitbase").ToString
                'Else
                '    lTotalJV = dtJournal.Rows(0)("creditbase").ToString
                'End If
                lTotalJV = Convert.ToDecimal(dtJournal.Rows(0)("debitbase").ToString - dtJournal.Rows(0)("creditbase").ToString)
            End If

            ''''''''''''''' Journal

            Dim lbalance As Decimal
            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text
            command3.CommandText = "SELECT ValueBase, GSTBase , AppliedBase , ReceiptBase, CreditBase, CreditBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo.Trim & "'"

            command3.Connection = conn
            command3.ExecuteNonQuery()

            Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            Dim dt3 As New DataTable
            dt3.Load(dr3)

            If dt3.Rows.Count > 0 Then


                If String.IsNullOrEmpty(dt3.Rows(0)("AppliedBase").ToString) = False Then
                    lbalance = dt3.Rows(0)("AppliedBase").ToString
                Else
                    lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
                    lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
                Else
                    'lbalance = 0.0
                End If

                lbalance = lbalance + lTotalcn + lTotalJV
                'If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
                '    lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
                'Else
                '    'lbalance = 0.0
                'End If

            End If

            ''''''''''' Journal




            Dim lcredbal As Decimal
            lcredbal = 0.0
            lcredbal = (lTotalcn + lTotalJV) * (-1)

            Dim command4 As MySqlCommand = New MySqlCommand
            command4.CommandType = CommandType.Text

            Dim qry4 As String = "Update tblSales Set CreditBase = " & lcredbal & ", BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            command4.CommandText = qry4
            command4.Parameters.Clear()

            command4.Parameters.AddWithValue("@InvoiceNumber", strInvoiceNo)
            command4.Connection = conn
            command4.ExecuteNonQuery()

            '    'End: Update tblSales

            '''''''''''''' 01.12.18

            ''Update tblServiceRecord
            'If String.IsNullOrEmpty(strRecordNo) = False Then

            '    '''''''''''''''''''
            '    Dim command22 As MySqlCommand = New MySqlCommand
            '    command22.CommandType = CommandType.Text
            '    command22.CommandText = "SELECT BilledAmt FROM tblServiceRecord where RecordNo = '" & strRecordNo & "'"
            '    command22.Connection = conn

            '    command22.ExecuteNonQuery()

            '    Dim dr22 As MySqlDataReader = command22.ExecuteReader()
            '    Dim dt22 As New DataTable
            '    dt22.Load(dr22)
            '    Dim lBilledamt As Decimal = 0.0
            '    If dt22.Rows.Count > 0 Then


            '        If String.IsNullOrEmpty(dt22.Rows(0)("BilledAmt").ToString) = False Then
            '            lBilledamt = dt22.Rows(0)("BilledAmt").ToString
            '            'Else
            '            '    lbalance = 0.0
            '        End If
            '    End If

            '    '''''''''''''''''''
            '    Dim command23 As MySqlCommand = New MySqlCommand
            '    command23.CommandType = CommandType.Text

            '    If lBilledamt = dblCNAmt Then
            '        command23.CommandText = "UPDATE tblServiceRecord SET BillNo = '', BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & strRecordNo & "'"
            '    Else
            '        command23.CommandText = "UPDATE tblServiceRecord SET BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & strRecordNo & "'"
            '    End If
            '    command23.Connection = conn

            '    command23.ExecuteNonQuery()

            '    command22.Dispose()
            '    command23.Dispose()
            'End If

            ''End Update Service Record
            conn.Close()
            conn.Dispose()

            'command1.Dispose()
            'command2.Dispose()
            'command21.Dispose()
            'command3.Dispose()
            'command4.Dispose()

            'dt1.Dispose()
            'dt2.Dispose()
            'dt3.Dispose()

            'dr1.Close()
            'dr2.Close()
            'dr3.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "UpdateTblSales", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Function PostCN() As Boolean
        Try

            Dim IsSuccess As Boolean = False
            Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()



            'Dim conn As MySqlConnection = New MySqlConnection()
            '''''''''''''''''''''''''''''''''''''''

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            '''''''''''''''''''''''''''''''''''''''''''
            Dim lStatusIsHeaderDetailEqual As String
            Dim commandIsHeaderDetailEqual As MySqlCommand = New MySqlCommand

            commandIsHeaderDetailEqual.CommandType = CommandType.StoredProcedure
            commandIsHeaderDetailEqual.CommandText = "IsHeaderDetailEqual"
            'commandIsExists.Connection = conn
            commandIsHeaderDetailEqual.Parameters.Clear()

            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_Module", "CN")
            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_DocumentNo", txtCNNo.Text.Trim)

            commandIsHeaderDetailEqual.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            commandIsHeaderDetailEqual.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandIsHeaderDetailEqual.Connection = conn
            commandIsHeaderDetailEqual.ExecuteScalar()

            lStatusIsHeaderDetailEqual = commandIsHeaderDetailEqual.Parameters("@pr_status").Value

            commandIsHeaderDetailEqual.Dispose()
            'conn.Close()
            'conn.Dispose()

            If lStatusIsHeaderDetailEqual = "F" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "CREDIT NOTE AMOUNT AND SUM OF APPLIED CREDIT NOTES SHOULD BE EQUAL.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If


            If lStatusIsHeaderDetailEqual = "V" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If
            ''''''''''''''''''''''''''''''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblSales set PostStatus = 'P'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()

            '''''''''''''''''''''

            'Dim command5 As MySqlCommand = New MySqlCommand
            'command5.CommandType = CommandType.Text

            'Dim qry5 As String = "DELETE from tblAR where VoucherNumber = '" & txtCNNo.Text & "'"

            'command5.CommandText = qry5
            ''command1.Parameters.Clear()
            'command5.Connection = conn
            'command5.ExecuteNonQuery()

            Dim qryAR As String
            Dim commandAR As MySqlCommand = New MySqlCommand
            commandAR.CommandType = CommandType.Text

            If Convert.ToDecimal(txtCNNetAmount.Text) > 0.0 Then
                'qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, BillingPeriod, "
                'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @BillingPeriod,"
                'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                'commandAR.CommandText = qryAR
                'commandAR.Parameters.Clear()
                'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                'If txtCNDate.Text.Trim = "" Then
                '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                'Else
                '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                'End If
                'commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriod.Text)
                'commandAR.Parameters.AddWithValue("@ContractNo", "")
                'commandAR.Parameters.AddWithValue("@InvoiceNumber", "")
                'commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
                'commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
                ''commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtReceivedAmount.Text))
                'commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
                'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                'commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                'commandAR.Connection = conn
                'commandAR.ExecuteNonQuery()
            End If


            'Start:Loop thru' Credit values

            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT SourceInvoice, RefType, ValueBase, SubCode  FROM tblSalesDetail where InvoiceNumber ='" & txtCNNo.Text.Trim & "'"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)


            Dim lTotalReceiptAmt As Decimal
            Dim lInvoiceAmt As Decimal
            Dim lReceptAmtAdjusted As Decimal

            lTotalReceiptAmt = 0.0
            lInvoiceAmt = 0.0

            'lTotalReceiptAmt = dtValues.Rows(0)("ReceiptValue").ToString
            Dim rowindex = 0


            For Each row As DataRow In dtValues.Rows


                'qryAR = "INSERT INTO tblAR(VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, ServiceRecordNo, ServiceDate, BillingPeriod, Salesman, InvoiceType, GLType,  "
                'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @ServiceRecordNo, @ServiceDate,  @BillingPeriod, @Salesman, @InvoiceType, @GLType,"
                'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                'commandAR.CommandText = qryAR
                'commandAR.Parameters.Clear()
                'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                'If txtCNDate.Text.Trim = "" Then
                '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                'Else
                '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                'End If
                'commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriod.Text)
                'commandAR.Parameters.AddWithValue("@ContractNo", row("ContractNo"))
                'commandAR.Parameters.AddWithValue("@InvoiceNumber", row("InvoiceNo"))
                'commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
                'commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
                'commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)

                ''commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ReceiptValue")))
                'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(dtValues.Rows(rowindex)("ReceiptValue").ToString))

                'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                'commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                'commandAR.Parameters.AddWithValue("@GLType", "Debtor")
                'commandAR.Parameters.AddWithValue("@ServiceRecordNo", row("ServiceRecordNo"))

                'commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                ''Else
                ''commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lServiceDate).ToString("yyyy-MM-dd"))
                ''End If


                ''commandAR.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                'commandAR.Parameters.AddWithValue("@InvoiceType", row("InvoiceType"))

                'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                'commandAR.Connection = conn
                'commandAR.ExecuteNonQuery()


                ''Start: Update tblSales

                ' ''''''''''''''''''''

                If String.IsNullOrEmpty(row("SourceInvoice")) = False Then
                    UpdateTblSales(row("SourceInvoice"), row("RefType"), row("ValueBase") * (-1), row("SubCode"))
                End If



                ''''''''''''''''''''
                'Private Sub UpdateTblSales(strInvoiceNo As String, strRecordNo As String, dblCNAmt As Decimal, strSubCode As String)
                'Update tblServiceRecord
                Dim dblCNAmt As Decimal
                dblCNAmt = row("ValueBase") * (-1)
                If String.IsNullOrEmpty(row("RefType")) = False Then

                    '''''''''''''''''''
                    Dim command22 As MySqlCommand = New MySqlCommand
                    command22.CommandType = CommandType.Text
                    command22.CommandText = "SELECT BilledAmt FROM tblServiceRecord where RecordNo = '" & row("RefType") & "'"
                    command22.Connection = conn

                    command22.ExecuteNonQuery()

                    Dim dr22 As MySqlDataReader = command22.ExecuteReader()
                    Dim dt22 As New DataTable
                    dt22.Load(dr22)
                    Dim lBilledamt As Decimal = 0.0
                    If dt22.Rows.Count > 0 Then


                        If String.IsNullOrEmpty(dt22.Rows(0)("BilledAmt").ToString) = False Then
                            lBilledamt = dt22.Rows(0)("BilledAmt").ToString
                            'Else
                            '    lbalance = 0.0
                        End If
                    End If

                    '''''''''''''''''''
                    Dim command23 As MySqlCommand = New MySqlCommand
                    command23.CommandType = CommandType.Text

                    If lBilledamt = dblCNAmt Then
                        command23.CommandText = "UPDATE tblServiceRecord SET BillNo = '', BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & row("RefType") & "'"
                    Else
                        command23.CommandText = "UPDATE tblServiceRecord SET BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & row("RefType") & "'"
                    End If
                    command23.Connection = conn

                    command23.ExecuteNonQuery()

                    command22.Dispose()
                    command23.Dispose()
                End If

                'End


                ''''''''''''''''''''
                rowindex = rowindex + 1
            Next row



            '''''''''''''''''''''''''''''''''''''''
            Dim cmdUpdateCNBalance As MySqlCommand = New MySqlCommand
            cmdUpdateCNBalance.CommandType = CommandType.Text

            ''cmdUpdateCNBalance.CommandText = "UPDATE tblSales SET BalanceBase = " & Convert.ToDecimal(txtCNNetAmount.Text) & " - (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblSalesDetail A  " & _
            ''      " WHERE A.SubCode = 'SERVICE' AND InvoiceNumber = '" & txtCNNo.Text & "') WHERE PostStatus = 'P' and InvoiceNumber = '" & txtCNNo.Text & "'"

            cmdUpdateCNBalance.CommandText = "UPDATE tblSales SET BalanceBase = " & Convert.ToDecimal(txtCNNetAmount.Text) & " - (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblSalesDetail A  " & _
            " WHERE InvoiceNumber = '" & txtCNNo.Text & "' and ((SourceInvoice is not null) and (SourceInvoice <>''))) WHERE PostStatus = 'P' and InvoiceNumber = '" & txtCNNo.Text & "'"

            cmdUpdateCNBalance.Connection = conn
            cmdUpdateCNBalance.ExecuteNonQuery()
            cmdUpdateCNBalance.Dispose()


            '''''''''''''''''''''''''''''''''''''''



            GridView1.DataBind()
            conn.Close()
            conn.Dispose()

            commandAR.Dispose()
            commandUpdateInvoice.Dispose()
            commandValues.Dispose()

            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PostCN", ex.Message.ToString, txtCNNo.Text)
            IsSuccess = False
            Return IsSuccess
            Exit Function
        End Try

    End Function

    Private Function ReverseCN() As Boolean
        Try
            'Dim confirmValue As String
            'confirmValue = ""


            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            ''''''''''''''' Insert tblAR

            ''''''''''''''''''''
            'PopulateArCode()

            '''''''''''''''''''''''''
            Dim IsSuccess As Boolean = False

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command5 As MySqlCommand = New MySqlCommand
            command5.CommandType = CommandType.Text

            Dim qry5 As String = "DELETE from tblAR where BatchNo = '" & txtCNNo.Text & "'"

            command5.CommandText = qry5
            'command1.Parameters.Clear()
            command5.Connection = conn
            command5.ExecuteNonQuery()


            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblSales set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()


            ''''''''''''''''''''''''''''''''

            'Start:Loop thru' Credit values

            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT *  FROM tblSalesdetail where InvoiceNumber ='" & txtCNNo.Text.Trim & "'"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)


            'Dim lTotalReceiptAmt As Decimal
            'Dim lInvoiceAmt As Decimal
            'Dim lReceptAmtAdjusted As Decimal

            'lTotalReceiptAmt = 0.0
            'lInvoiceAmt = 0.0

            'lTotalReceiptAmt = dtValues.Rows(0)("ReceiptValue").ToString
            'Dim rowindex = 0

            For Each row As DataRow In dtValues.Rows

                ''Start: Update tblSales

                ' ''''''''''''''''''''
                If IsDBNull(row("SourceInvoice")) = False Then
                    If String.IsNullOrEmpty(row("SourceInvoice")) = False Then
                        UpdateTblSales(row("SourceInvoice"), row("RefType"), row("ValueBase"), row("SubCode"))
                    End If
                End If

                ''''''''''''''''''''
                'Private Sub UpdateTblSales(strInvoiceNo As String, strRecordNo As String, dblCNAmt As Decimal, strSubCode As String)
                'Update tblServiceRecord
                Dim dblCNAmt As Decimal
                dblCNAmt = row("ValueBase")
                If String.IsNullOrEmpty(row("RefType")) = False Then

                    '''''''''''''''''''
                    Dim command22 As MySqlCommand = New MySqlCommand
                    command22.CommandType = CommandType.Text
                    command22.CommandText = "SELECT BilledAmt FROM tblServiceRecord where RecordNo = '" & row("RefType") & "'"
                    command22.Connection = conn

                    command22.ExecuteNonQuery()

                    Dim dr22 As MySqlDataReader = command22.ExecuteReader()
                    Dim dt22 As New DataTable
                    dt22.Load(dr22)
                    Dim lBilledamt As Decimal = 0.0
                    If dt22.Rows.Count > 0 Then


                        If String.IsNullOrEmpty(dt22.Rows(0)("BilledAmt").ToString) = False Then
                            lBilledamt = dt22.Rows(0)("BilledAmt").ToString
                            'Else
                            '    lbalance = 0.0
                        End If
                    End If

                    '''''''''''''''''''
                    Dim command23 As MySqlCommand = New MySqlCommand
                    command23.CommandType = CommandType.Text

                    If lBilledamt = dblCNAmt Then
                        command23.CommandText = "UPDATE tblServiceRecord SET BillNo = '', BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & row("RefType") & "'"
                    Else
                        command23.CommandText = "UPDATE tblServiceRecord SET BilledAmt = '" & lBilledamt - dblCNAmt & "' WHERE RecordNo = '" & row("RefType") & "'"
                    End If
                    command23.Connection = conn

                    command23.ExecuteNonQuery()

                    command22.Dispose()
                    command23.Dispose()
                End If

                'End

            Next


            '''''''''''''''''''''''''''''''''''''''
            Dim cmdUpdateCNBalance As MySqlCommand = New MySqlCommand
            cmdUpdateCNBalance.CommandType = CommandType.Text

            cmdUpdateCNBalance.CommandText = "UPDATE tblSales SET BalanceBase = " & Convert.ToDecimal(txtCNNetAmount.Text) & " WHERE InvoiceNumber = '" & txtCNNo.Text & "'"

            cmdUpdateCNBalance.Connection = conn
            cmdUpdateCNBalance.ExecuteNonQuery()
            cmdUpdateCNBalance.Dispose()


            '''''''''''''''''''''''''''''''''''''''

            conn.Close()
            conn.Dispose()
            command5.Dispose()
            '''''''''''''''''''''''''''''''''
            'GridView1.DataBind()


            'lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"
            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "RECEIPT", txtReceiptNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            'lblAlert.Text = ""
            'updPnlSearch.Update()
            'updPnlMsg.Update()
            'updpnlBillingDetails.Update()
            ''updpnlServiceRecs.Update()
            'updpnlBillingDetails.Update()

            'btnQuickSearch_Click(sender, e)

            'btnChangeStatus.Enabled = False
            'btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            'btnEdit.Enabled = True
            'btnEdit.ForeColor = System.Drawing.Color.Black

            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black

            'btnPost.Enabled = True
            'btnPost.ForeColor = System.Drawing.Color.Black
            'End If


            'End: Loop thru' Credit Values


            ''''''''''''''' Insert tblAR

            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ReverseCN", ex.Message.ToString, txtCNNo.Text)

            Dim IsSuccess As Boolean

            IsSuccess = False
            Return IsSuccess
            Exit Function
        End Try
    End Function

    Protected Sub btnPost_Click(sender As Object, e As EventArgs) Handles btnPost.Click
        Try
            lblAlert.Text = ""
            lblMessage.Text = ""


            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If

            Dim IsLock = FindCNPeriod(txtReceiptPeriod.Text)
            If IsLock = "Y" Then
                lblAlert.Text = "PERIOD IS LOCKED"
                updPnlMsg.Update()
                txtCNDate.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            mdlPopupConfirmPost.Show()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnPost_Click", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click

        '''
        If String.IsNullOrEmpty(txtCNNo.Text) = False Then
            Dim totalRows, totalRows1 As Long
            totalRows = 0
            totalRows1 = 0
            totalRows1 = grvBillingDetailsNew.Rows.Count

            SetRowDataBillingDetailsRecs()
            'SetRowDataServiceRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                If tableAdd.Rows.Count > 0 Then
                    Dim lblidOtherCode1 As TextBox = CType(grvBillingDetails.Rows(0).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType1 As DropDownList = CType(grvBillingDetails.Rows(0).FindControl("txtItemTypeGV"), DropDownList)

                    If String.IsNullOrEmpty(lblidOtherCode1.Text) = True And lblidItemType1.Text = "-1" And totalRows1 = 0 Then
                        totalRows = totalRows + 1
                        lblAlert.Text = "PLEASE ENTER DETAILS RECORD"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSave.Enabled = True
                        'btnShowInvoices.Enabled = False
                        updPnlMsg.Update()

                        Exit Sub
                    End If

                End If
            End If
        End If


        ''''
        txtMode.Text = ""
        'txtMode.Text = "View"
        MakeMeNullBillingDetails()
        MakeMeNull()
        DisableControls()
    End Sub

    Protected Sub btnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        Session("receiptfrom") = "invoice"
        'Session("cnfrom") = "invoice"
        Response.Redirect("Invoice.aspx")
    End Sub

    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        Dim strsql As String
        strsql = ""


        If txtPopUpClient.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter client name", "str")
            Exit Sub
        End If


        Try

            If txtSearch.Text = "ImportService" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                txtImportService.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"
            End If

            If txtSearch.Text = "ImportInvoice" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                txtImportService.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"
            End If

            If txtSearch.Text = "CustomerSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by ServiceName"
                    End If
                End If

                txtCustomerSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If

            If txtSearch.Text = "InvoiceSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like '%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like '%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by ServiceName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtPopUpClient_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub DisplayGLGrid()
        Try

            ''''''''''''''''' Start: Display GL Grid

            FirstGridViewRowGL()

            updPnlBillingRecs.Update()

            'Start: GL Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvGL.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableGL") = dtScdrLoc
                grvGL.DataSource = dtScdrLoc
                grvGL.DataBind()


                SetPreviousDataGL()
            Next i

            FirstGridViewRowGL()

            Dim rowIndex3 = 0

            ''AR Values

            AddNewRowGL()


            ''AR values

            Dim TextBoxGLCodeAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeAR.Text = txtARCode.Text

            Dim TextBoxGLDescriptionAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionAR.Text = txtARDescription.Text

            If ddlDocType.Text = "ARCN" Then

                Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmountAR.Text = (0.0).ToString("N2")

                Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmountAR.Text = Convert.ToDecimal(txtCNNetAmount.Text).ToString("N2")
            Else
                Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmountAR.Text = Convert.ToDecimal(txtCNNetAmount.Text).ToString("N2")

                Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmountAR.Text = (0.0).ToString("N2")
            End If



            ''GST values

            rowIndex3 += 1
            AddNewRowGL()
            Dim TextBoxGLCodeGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeGST.Text = txtGSTOutputCode.Text

            Dim TextBoxGLDescriptionGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionGST.Text = txtGSTOutputDescription.Text

            If ddlDocType.Text = "ARCN" Then
                Dim TextBoxDebitAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmountGST.Text = Convert.ToDecimal(txtCNGSTAmount.Text).ToString("N2")

                Dim TextBoxCreditAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmountGST.Text = (0.0).ToString("N2")

            Else
                Dim TextBoxDebitAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmountGST.Text = (0.0).ToString("N2")

                Dim TextBoxCreditAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmountGST.Text = Convert.ToDecimal(txtCNGSTAmount.Text).ToString("N2")
            End If

            ''GST Values



            rowIndex3 += 1
            AddNewRowGL()
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
            End If
            conn.Open()

            Dim cmdGL As MySqlCommand = New MySqlCommand
            cmdGL.CommandType = CommandType.Text
            'cmdGL.CommandText = "SELECT OtherCode, GLDescription, PriceWithDisc   FROM tblsalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "' and InvoiceNo ='" & txtInvoiceNo.Text & "' order by OtherCode"
            cmdGL.CommandText = "SELECT LedgerCode, LedgerName, ValueBase  FROM tblsalesDetail where InvoiceNumber ='" & txtCNNo.Text.Trim & "' order by LedgerCode"

            'cmdGL.CommandText = "SELECT * FROM tblAR where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            cmdGL.Connection = conn

            Dim drcmdGL As MySqlDataReader = cmdGL.ExecuteReader()
            Dim dtGL As New DataTable
            dtGL.Load(drcmdGL)

            'FirstGridViewRowGL()


            Dim TotDetailRecordsLoc = dtGL.Rows.Count
            If dtGL.Rows.Count > 0 Then

                lGLCode = ""
                lGLDescription = ""
                lCreditAmount = 0.0


                lGLCode = dtGL.Rows(0)("LedgerCode").ToString()
                lGLDescription = dtGL.Rows(0)("LedgerName").ToString()
                lCreditAmount = 0.0

                Dim rowIndex4 = 0

                For Each row As DataRow In dtGL.Rows

                    If lGLCode = row("LedgerCode") Then
                        lCreditAmount = lCreditAmount + row("ValueBase")
                    Else


                        If (TotDetailRecordsLoc > (rowIndex4 + 1)) Then
                            AddNewRowGL()
                        End If

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        TextBoxGLCode.Text = lGLCode

                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                        TextBoxGLDescription.Text = lGLDescription

                        If ddlDocType.Text = "ARCN" Then
                            Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                            TextBoxDebitAmount.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

                            Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                            TextBoxCreditAmount.Text = (0.0).ToString("N2")
                        Else
                            Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                            TextBoxDebitAmount.Text = (0.0).ToString("N2")

                            Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                            TextBoxCreditAmount.Text = (0.0).ToString("N2")
                        End If

                        lGLCode = row("LedgerCode")
                        lGLDescription = row("LedgerName")
                        lCreditAmount = row("ValueBase")

                        rowIndex3 += 1
                        rowIndex4 += 1
                    End If
                Next row

            End If


            'AddNewRowGL()

            Dim TextBoxGLCode1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCode1.Text = lGLCode

            Dim TextBoxGLDescription1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescription1.Text = lGLDescription

            If ddlDocType.Text = "ARCN" Then
                Dim TextBoxDebitAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmount1.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

                Dim TextBoxCreditAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmount1.Text = (0.0).ToString("N2")
            Else
                Dim TextBoxDebitAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                TextBoxDebitAmount1.Text = (0.0).ToString("N2")

                Dim TextBoxCreditAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                TextBoxCreditAmount1.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")
            End If


            SetRowDataGL()
            Dim dtScdrLoc1 As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc1 As DataRow = Nothing

            dtScdrLoc1.Rows.Remove(dtScdrLoc1.Rows(rowIndex3 + 1))
            drCurrentRowLoc1 = dtScdrLoc1.NewRow()
            ViewState("CurrentTableGL") = dtScdrLoc1
            grvGL.DataSource = dtScdrLoc1
            grvGL.DataBind()
            SetPreviousDataGL()
            conn.Close()
            conn.Dispose()


            cmdGL.Dispose()
            dtGL.Dispose()
            drcmdGL.Close()
            ''''''''''''''''' End: Display GL Grid
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "DisplayGLGrid", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FirstGridViewRowGL()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("GLCode", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("DebitAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("CreditAmount", GetType(String)))

            dr = dt.NewRow()

            dr("GLCode") = String.Empty
            dr("GLDescription") = String.Empty
            dr("DebitAmount") = String.Empty
            dr("CreditAmount") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableGL") = dt

            grvGL.DataSource = dt
            grvGL.DataBind()

            'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FirstGridViewRowGL", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub




    Private Sub AddNewRowGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvGL.DataSource = dtCurrentTable
                    grvGL.DataBind()


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SetPreviousDataGL()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        TextBoxGLCode.Text = dt.Rows(i)("GLCode").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxDebitAmount.Text = dt.Rows(i)("DebitAmount").ToString()
                        TextBoxCreditAmount.Text = dt.Rows(i)("CreditAmount").ToString()


                        rowIndex += 1
                    Next i
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SetRowDataGL()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text


                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableGL") = dtCurrentTable


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Throw ex
        End Try

    End Sub


    Protected Sub PopulateArCode()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim sql As String
            sql = ""

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()

            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                If dt1.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt1.Rows(0)("COACode").ToString : End If
                If dt1.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt1.Rows(0)("Description").ToString : End If
            End If


            '''''''''''''''''''''''''''''''''''

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='OTHER DEBTORS'"

            'Dim command122 As MySqlCommand = New MySqlCommand
            'command122.CommandType = CommandType.Text
            'command122.CommandText = sql
            'command122.Connection = conn

            'Dim dr22 As MySqlDataReader = command122.ExecuteReader()

            'Dim dt22 As New DataTable
            'dt22.Load(dr22)

            'If dt22.Rows.Count > 0 Then
            '    If dt22.Rows(0)("COACode").ToString <> "" Then : txtARCode10.Text = dt22.Rows(0)("COACode").ToString : End If
            '    If dt22.Rows(0)("Description").ToString <> "" Then : txtARDescription10.Text = dt22.Rows(0)("Description").ToString : End If
            'End If


            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()


            'Dim sql As String
            sql = ""
            'sql = "Select Description, COACode, COADescription from tblbillingproducts where ProductCode = 'CN-RET' and CompanyGroup = '" & txtCompanyGroup.Text & "'"
            sql = "Select ProductCode, Description, COACode, COADescription from tblbillingproducts where ProductCode = 'IN-CRN'"

            Dim command10 As MySqlCommand = New MySqlCommand
            command10.CommandType = CommandType.Text
            command10.CommandText = sql
            command10.Connection = conn

            Dim dr10 As MySqlDataReader = command10.ExecuteReader()

            Dim dt10 As New DataTable
            dt10.Load(dr10)

            If dt10.Rows.Count > 0 Then
                If dt10.Rows(0)("ProductCode").ToString <> "" Then : txtARProductCode10.Text = dt10.Rows(0)("ProductCode").ToString : End If
                If dt10.Rows(0)("Description").ToString <> "" Then : txtARDescription10.Text = dt10.Rows(0)("Description").ToString : End If
                If dt10.Rows(0)("COACode").ToString <> "" Then : txtARCode10.Text = dt10.Rows(0)("COACode").ToString : End If
            End If

            '''''''''''''''''''''''''''''''''''
            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If

            updPnlBillingRecs.Update()

            conn.Close()
            conn.Dispose()

            command1.Dispose()
            command10.Dispose()
            command23.Dispose()

            dt1.Dispose()
            dt10.Dispose()
            dt23.Dispose()

            dr1.Close()
            dr10.Close()
            dr23.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "PopulateARCode", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_Sorted(sender As Object, e As EventArgs) Handles GridView1.Sorted

    End Sub

    Protected Sub txtCNDate_TextChanged(sender As Object, e As EventArgs) Handles txtCNDate.TextChanged
        txtReceiptPeriod.Text = Year(Convert.ToDateTime(txtCNDate.Text)) & Format(Month(Convert.ToDateTime(txtCNDate.Text)), "00")



    End Sub

    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click
        Try
            txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"


            If txtSearch.Text = "InvoiceSearch" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by AccountID,  LocationId, ServiceName"
                    End If
                End If

            End If

            If txtSearch.Text = "CustomerSearch" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                End If

            End If

            If txtClientFrom.Text = "ImportInvoice" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                End If

            End If


            If txtSearch.Text = "ImportService" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                End If

            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            txtIsPopup.Text = "Client"
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click
        Session.Add("RecordNo", txtCNNo.Text)
        Session.Add("Title", ddlDocType.SelectedItem.Text)
        Session.Add("PrintType", "Print")
        'Response.Redirect("RV_CreditNote.aspx")
        mdlConfirmMultiPrint.Show()


    End Sub

    Protected Sub btnClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnClientSearch.Click
        lblAlert.Text = ""
        txtSearch.Text = ""
        txtPopUpClient.Text = ""

        'If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
        '    '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
        '    lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
        '    Exit Sub
        'End If

        Try
            txtSearch.Text = "InvoiceSearch"
            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountIdSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%""  or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"

                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%""  or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"

                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()

                updPanelCN.Update()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.PersonID  like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelCN.Update()
            End If
            txtInvoiceSearch.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnClientSearch_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub gvClient_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        Try
            lblAlert.Text = ""

            txtIsPopup.Text = ""
            'Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            'txtAccountIdBilling.Text = ""


            If txtSearch.Text = "InvoiceFilter" Then
                txtSearchAccountID.Text = ""
                'txtAccountId.Text = ""


                'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                '    ddlSearchCompanyGrp.Text = ""
                'Else
                '    ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(21).Text.Trim
                'End If


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlSearchContactType.Text = ""
                Else
                    ddlSearchContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtSearchAccountID.Text = ""
                Else
                    txtSearchAccountID.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                    txtSearchClientName.Text = ""
                Else
                    txtSearchClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                End If


                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtLocationId.Text = ""
                'Else
                '    txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If

                updPanelCN.Update()
                txtSearch.Text = "N"
                'mdlImportServices.Show()
                mdlPopupSearch.Show()

            End If

            If txtClientFrom.Text = "ImportInvoice" Then
                txtAccountIdII.Text = ""
                txtAccountIdII.Text = ""

                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeII.Text = ""
                Else
                    ddlContactTypeII.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountIdII.Text = ""
                Else
                    txtAccountIdII.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If


                If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                    txtClientNameII.Text = ""
                Else
                    txtClientNameII.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                End If

                'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                '    ddlCompanyGrpII.Text = ""
                'Else
                '    ddlCompanyGrpII.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                'End If

                If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                    ddlCompanyGrpII.Text = ""
                Else
                    ddlCompanyGrpII.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                End If


                'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '    txtAccountIdII.Text = ""
                'Else
                '    txtAccountIdII.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtClientNameII.Text = ""
                'Else
                '    txtClientNameII.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(3).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(9).Text = "&nbsp;") Then
                '    ddlCompanyGrpII.Text = ""
                'Else
                '    ddlCompanyGrpII.Text = gvClient.SelectedRow.Cells(9).Text.Trim
                'End If
                txtSearch.Text = ""
                mdlImportInvoices.Show()
                'If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                '    txtSalesman.Text = ""
                'Else
                '    txtSalesman.Text = gvClient.SelectedRow.Cells(23).Text.Trim
                'End If

            End If



            If txtSearch.Text = "ImportService" Then
                txtAccountId.Text = ""
                txtClientName.Text = ""


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeIS.Text = ""
                Else
                    ddlContactTypeIS.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountId.Text = ""
                Else
                    txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If


                If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                    txtClientName.Text = ""
                Else
                    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                End If

                'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                '    ddlCompanyGrp.Text = ""
                'Else
                '    ddlCompanyGrp.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                'End If

                If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                    ddlCompanyGrp.Text = ""
                Else
                    ddlCompanyGrp.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                End If


                'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '    txtAccountId.Text = ""
                'Else
                '    txtAccountId.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                'End If


                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtClientName.Text = ""
                'Else
                '    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(3).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(9).Text = "&nbsp;") Then
                '    ddlCompanyGrp.Text = ""
                'Else
                '    ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(9).Text.Trim
                'End If
                txtSearch.Text = ""
                mdlImportServices.Show()
            End If

            If txtClientFrom.Text = "" Then
                If txtSearch.Text = "CustomerSearch" Then
                    txtAccountIdBilling.Text = ""
                    txtAccountIdBilling.Text = ""

                    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                        ddlContactType.Text = ""
                    Else
                        ddlContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                    End If


                    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                        txtAccountIdBilling.Text = ""
                    Else
                        txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                    End If


                    If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                        txtAccountName.Text = ""
                    Else
                        txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                    End If

                    'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                    '    txtCompanyGroup.Text = ""
                    'Else
                    '    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                    'End If

                    If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                        txtCompanyGroup.Text = ""
                    Else
                        txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                    End If


                    If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                        txtContactPerson.Text = ""
                    Else
                        txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                    End If


                    If (gvClient.SelectedRow.Cells(9).Text = "&nbsp;") Then
                        txtBillAddress.Text = ""
                    Else
                        txtBillAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(9).Text.Trim)
                    End If

                    'If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                    '    txtBillStreet.Text = ""
                    'Else
                    '    txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                    'End If

                    'If (gvClient.SelectedRow.Cells(17).Text = "&nbsp;") Then
                    '    txtBillBuilding.Text = ""
                    'Else
                    '    txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.Trim)
                    'End If


                    If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
                        txtBillStreet.Text = ""
                    Else
                        txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim)
                    End If

                    If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
                        txtBillBuilding.Text = ""
                    Else
                        txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim)
                    End If



                    ''''''''''''
                    If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                        txtBillCity.Text = ""
                    Else
                        txtBillCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                    End If


                    If (gvClient.SelectedRow.Cells(17).Text = "&nbsp;") Then
                        txtBillState.Text = ""
                    Else
                        txtBillState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.Trim)
                    End If

                    '''''''''''''
                    If (gvClient.SelectedRow.Cells(18).Text = "&nbsp;") Then
                        txtBillCountry.Text = ""
                    Else
                        txtBillCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(18).Text.Trim)
                    End If

                    If (gvClient.SelectedRow.Cells(19).Text = "&nbsp;") Then
                        txtBillPostal.Text = ""
                    Else
                        txtBillPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(19).Text.Trim)
                    End If

                    If (gvClient.SelectedRow.Cells(20).Text = "&nbsp;") Then
                        txtTIN.Text = ""
                    Else
                        txtTIN.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(20).Text.Trim)
                    End If
                    If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                        txtSSTNo.Text = ""
                    Else
                        txtSSTNo.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                    End If
                    If (gvClient.SelectedRow.Cells(25).Text = "&nbsp;") Then
                        txtLocation.Text = ""
                    Else
                        txtLocation.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(25).Text.Trim)
                    End If

                    'If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
                    '    ddlSalesmanBilling.SelectedIndex = 0
                    'Else
                    '    ddlSalesmanBilling.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim)
                    'End If

                    If gvClient.SelectedRow.Cells(13).Text <> "" Then
                        'Dim gSalesman As String

                        gddlvalue = gvClient.SelectedRow.Cells(13).Text

                        If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                            ddlSalesmanBilling.Items.Add(gddlvalue)
                            ddlSalesmanBilling.Text = gddlvalue
                        Else
                            ddlSalesmanBilling.Text = gvClient.SelectedRow.Cells(13).Text
                        End If
                    End If

                    If gvClient.SelectedRow.Cells(12).Text <> "" Then
                        'Dim gSalesman As String

                        gddlvalue = gvClient.SelectedRow.Cells(12).Text

                        If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                            ddlCreditTerms.Items.Add(gddlvalue)
                            ddlCreditTerms.Text = gddlvalue
                        Else
                            ddlCreditTerms.Text = gvClient.SelectedRow.Cells(12).Text
                        End If
                    End If

                    'If (gvClient.SelectedRow.Cells(12).Text = "&nbsp;") Then
                    '    ddlCreditTerms.SelectedIndex = 0
                    'Else
                    '    ddlCreditTerms.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(12).Text.Trim)
                    'End If

                    If ddlCreditTerms.SelectedIndex > 0 Then
                        ddlCreditTerms_SelectedIndexChanged(sender, e)
                    End If

                    'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    '    txtAccountIdBilling.Text = ""
                    'Else
                    '    txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                    'End If

                    'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    '    txtAccountName.Text = ""
                    'Else
                    '    txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(3).Text.Trim)
                    'End If

                    'If (gvClient.SelectedRow.Cells(9).Text = "&nbsp;") Then
                    '    txtCompanyGroup.Text = ""
                    'Else
                    '    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(9).Text.Trim)
                    'End If

                    'If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                    '    ddlSalesmanBilling.SelectedIndex = 0
                    'Else
                    '    ddlSalesmanBilling.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(23).Text.Trim)
                    'End If

                    If (gvClient.SelectedRow.Cells(26).Text = "&nbsp;") Then
                        ddlContractGroupBilling.SelectedIndex = 0
                    Else
                        ddlContractGroupBilling.Text = gvClient.SelectedRow.Cells(26).Text.Trim
                    End If


                    UpdateTaxCodeRate()

                    'txtSearch.Text = ""
                ElseIf txtSearch.Text = "InvoiceSearch" Then
                    txtAccountIdSearch.Text = ""
                    txtClientNameSearch.Text = ""
                    'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    '    txtAccountIdSearch.Text = ""
                    'Else
                    '    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                    'End If


                    'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    '    txtClientNameSearch.Text = ""
                    'Else
                    '    txtClientNameSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(3).Text.Trim)
                    'End If
                    'txtSearch.Text = ""

                    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                        ddlContactTypeSearch.Text = ""
                    Else
                        ddlContactTypeSearch.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                    End If

                    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                        txtAccountIdSearch.Text = ""
                    Else
                        txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                    End If


                    If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                        txtClientNameSearch.Text = ""
                    Else
                        txtClientNameSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                    End If

                    'If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                    '    ddlCompanyGrpSearch.Text = ""
                    'Else
                    '    ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                    'End If

                    If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                        ddlCompanyGrpSearch.Text = ""
                    Else
                        ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                    End If

                    updPnlSearch.Update()
                End If
            End If
            'PopulateArCode()


            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim sql As String
            'sql = ""

            ''sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"
            'sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text
            'command1.CommandText = sql
            'command1.Connection = conn

            'Dim dr1 As MySqlDataReader = command1.ExecuteReader()

            'Dim dt1 As New DataTable
            'dt1.Load(dr1)

            'If dt1.Rows.Count > 0 Then
            '    If dt1.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt1.Rows(0)("COACode").ToString : End If
            '    If dt1.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt1.Rows(0)("Description").ToString : End If
            'End If


            '''''''''''''''''''''''''''''''''''

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='OTHER DEBTORS'"

            'Dim command122 As MySqlCommand = New MySqlCommand
            'command122.CommandType = CommandType.Text
            'command122.CommandText = sql
            'command122.Connection = conn

            'Dim dr22 As MySqlDataReader = command122.ExecuteReader()

            'Dim dt22 As New DataTable
            'dt22.Load(dr22)

            'If dt22.Rows.Count > 0 Then
            '    If dt22.Rows(0)("COACode").ToString <> "" Then : txtARCode10.Text = dt22.Rows(0)("COACode").ToString : End If
            '    If dt22.Rows(0)("Description").ToString <> "" Then : txtARDescription10.Text = dt22.Rows(0)("Description").ToString : End If
            'End If


            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()


            ''Dim sql As String
            'sql = ""
            'sql = "Select Description, COACode, COADescription from tblbillingproducts where ProductCode <> 'CN-RET' and CompanyGroup = '" & txtCompanyGroup.Text & "'"

            'Dim command10 As MySqlCommand = New MySqlCommand
            'command10.CommandType = CommandType.Text
            'command10.CommandText = sql
            'command10.Connection = conn

            'Dim dr10 As MySqlDataReader = command10.ExecuteReader()

            'Dim dt10 As New DataTable
            'dt10.Load(dr10)

            'If dt10.Rows.Count > 0 Then
            '    If dt10.Rows(0)("Description").ToString <> "" Then : txtARDescription10.Text = dt10.Rows(0)("Description").ToString : End If
            '    If dt10.Rows(0)("COACode").ToString <> "" Then : txtARCode10.Text = dt10.Rows(0)("COACode").ToString : End If
            'End If

            '''''''''''''''''''''''''''''''''''
            'Dim query As String

            'ddlContractNo.Items.Clear()
            'ddlContractNo.Items.Add("--SELECT--")

            'sql = ""
            ''sql = "Select ContractNo from tblContract where Status = 'O' and GST = 'P' and CompanyGroup ='" & txtCompanyGroup.Text & "' and AccountId = '" & txtAccountIdBilling.Text & "' and ContractGroup <> 'ST'"

            'sql = "Select ContractNo from tblContract where   CompanyGroup ='" & txtCompanyGroup.Text & "' and AccountId = '" & txtAccountIdBilling.Text & "'"

            'Dim command11 As MySqlCommand = New MySqlCommand
            'command11.CommandType = CommandType.Text
            'command11.CommandText = sql
            'command11.Connection = conn

            'Dim dr11 As MySqlDataReader = command11.ExecuteReader()

            'Dim dt11 As New DataTable
            'dt11.Load(dr11)

            'If dt11.Rows.Count > 0 Then

            '    'query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            '    PopulateDropDownList(sql, "ContractNo", "ContractNo", ddlContractNo)

            '    'If dt11.Rows(0)("ContractNo").ToString <> "" Then : ddlContractNo.Text = dt11.Rows(0)("ContractNo").ToString : End If
            '    'If dt11.Rows(0)("ContractNo").ToString <> "" Then : txtComments.Text = dt11.Rows(0)("ContractNo").ToString : End If
            '    'If dt11.Rows(0)("COACode").ToString <> "" Then : txtARCode10.Text = dt11.Rows(0)("COACode").ToString : End If
            'End If

            '''''''''''''''''''''''''''''''''''

            'ddlItemCode.Items.Add("CN-RET")
            'ddlItemCode.Items.Clear()
            'query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode <> 'CN-RET'"
            'PopulateDropDownList(query, "ProductCode", "ProductCode", ddlItemCode)

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "gvClient_SelectedIndexChanged", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnGLGVB_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "InvoiceB"
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()
        mdlPopupGL.Show()
    End Sub

    Protected Sub btnGL_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "Invoice"
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()
        mdlPopupGL.Show()
    End Sub

    Protected Sub GrdViewGL_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GrdViewGL.SelectedIndexChanged
        Try

            If txtGLFrom.Text = "InvoiceSearch" Then
                txtGLCodeII.Text = GrdViewGL.SelectedRow.Cells(1).Text
                txtLedgerNameII.Text = GrdViewGL.SelectedRow.Cells(2).Text
                txtGLFrom.Text = ""
                mdlPopupGL.Hide()
                mdlImportInvoices.Show()
            ElseIf txtGLFrom.Text = "ServiceSearch" Then
                txtGLCodeIS.Text = GrdViewGL.SelectedRow.Cells(1).Text
                txtLedgerNameIS.Text = GrdViewGL.SelectedRow.Cells(2).Text
                txtGLFrom.Text = ""
                mdlPopupGL.Hide()
                mdlImportServices.Show()
            Else

                If txtGLFrom.Text = "InvoiceB" Then
                    Dim xrowNumber1 = txtxRow.Text
                    Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtOtherCodeGVB"), TextBox)
                    Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtGLDescriptionGVB"), TextBox)

                    If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                        lblid1.Text = " "
                    Else
                        lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
                    End If

                    If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                        lblid2.Text = " "
                    Else
                        lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
                    End If



                Else
                    Dim xrowNumber1 = txtxRow.Text
                    Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtGLDescriptionGV"), TextBox)

                    If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                        lblid1.Text = " "
                    Else
                        lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
                    End If

                    If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                        lblid2.Text = " "
                    Else
                        lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
                    End If
                End If

            End If
            'txtIsPopup.Text = "Location"
            'mdlImportServices.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "GrdViewGL_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub CheckUncheckAllInvoice(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvInvoiceRecDetails.HeaderRow.Cells(0).FindControl("chkSelectInvoiceGV"), CheckBox)
        For Each row As GridViewRow In grvInvoiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGVII"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub


    Protected Sub CheckUncheckAll(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvServiceRecDetails.HeaderRow.Cells(0).FindControl("chkSelectGV"), CheckBox)
        For Each row As GridViewRow In grvServiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGV"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub
    Protected Sub CheckUncheckAllservice(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvServiceRecDetails.HeaderRow.Cells(0).FindControl("chkSelectServiceGV"), CheckBox)
        For Each row As GridViewRow In grvServiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGV"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub
    Protected Sub btnShowServices_Click(sender As Object, e As EventArgs) Handles btnShowServices.Click
        lblAlert.Text = ""
        updPnlMsg.Update()

        If ddlDocType.SelectedIndex = 0 Then
            lblAlert.Text = "PLEASE SELECT VOUCHER TYPE "
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            lblAlert.Focus()
            updPnlMsg.Update()
            Exit Sub
        End If

        If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = False Then
            ddlCompanyGrp.Text = txtCompanyGroup.Text
        End If

        If String.IsNullOrEmpty(ddlContactType.Text.Trim) = False Then
            ddlContactTypeIS.Text = ddlContactType.Text
        End If

        txtAccountId.Text = txtAccountIdBilling.Text
        txtClientName.Text = txtAccountName.Text
        mdlImportServices.Show()
    End Sub

    Protected Sub btnShowRecordsII_Click(sender As Object, e As EventArgs) Handles btnShowRecordsII.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim strsql As String

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand

            'strsql = "SELECT a.rcno, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, a.SalesDate, b.LocationID, a.valuebase, a.gstbase, "
            'strsql = strsql + " a.AppliedBase, a.TotalReceiptAmount, a.TotalCNAmount, a.Terms, (a.AppliedBase - a.TotalReceiptAmount - a.TotalCNAmount) as OSAmount "
            'strsql = strsql + " FROM tblsales a Left join tblSalesDetail B on  a.InvoiceNumber = b.InvoiceNumber "
            'strsql = strsql + " where  a.PaidStatus <> 'F' and a.GLStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrp.Text & "'"
            'strsql = strsql + " and (a.AppliedBase - a.TotalReceiptAmount - a.TotalCNAmount) > 0"

            strsql = "SELECT a.rcno, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, a.SalesDate,  a.valuebase, a.gstbase,  a.Receiptbase, a.Creditbase, "
            strsql = strsql + " a.AppliedBase, a.Terms, a.BalanceBase as OSAmount "
            strsql = strsql + " FROM tblsales a  "
            strsql = strsql + " where  DocType = 'ARIN' and a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            strsql = strsql + " and a.BalanceBase > 0"

            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                strsql = strsql + " and a.AccountId = '" & txtAccountIdII.Text & "' "
            End If

            If String.IsNullOrEmpty(txtClientNameII.Text.Trim) = False Then
                strsql = strsql + " and a.CustName = '" & txtClientNameII.Text & "' "
            End If


            If String.IsNullOrEmpty(txtDateFromII.Text) = False Then
                strsql = strsql + " and   A.Salesdate >= '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.Salesdate <= '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFromII.Text) = False And String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.Salesdate between '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If


            'If ddlContractNo.Text.Trim <> "-1" Then
            '    strsql = strsql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
            'End If

            'If String.IsNullOrEmpty(txtLocationId.Text) = False Then
            '    strsql = strsql + " and   b.LocationId = '" & txtLocationId.Text & "'"
            'End If

            strsql = strsql + " order by a.Salesdate"


            cmdServiceBillingDetailItem.CommandText = strsql

            SqlDSOSInvoice.SelectCommand = strsql
            grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
            grvInvoiceRecDetails.DataBind()


            conn.Close()


            btnImportInvoiceII.Enabled = True

            mdlImportInvoices.Show()

            'TextBoxCompanyGroup.Text = Convert.ToString(dt.Rows(rowIndex)("CompanyGroup"))

            If grvInvoiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvInvoiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGVII"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
            End If

            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnShowRecordsII_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton1_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton1.Click
        Try
            lblAlert1.Text = ""
            txtSearch.Text = "ImportInvoice"
            'If String.IsNullOrEmpty(ddlContactTypeII.Text) Or ddlContactTypeII.Text = "--SELECT--" Then
            '    '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
            '    lblAlert1.Text = "SELECT CUSTOMER TYPE TO PROCEED"
            '    mdlImportInvoices.Show()
            '    Exit Sub
            'End If

            txtClientFrom.Text = "ImportInvoice"
            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountIdII.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                End If
            

                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeII.Text = "CORPORATE" Or ddlContactTypeII.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeII.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeII.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                End If
               

                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ImageButton1_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click
        txtClientFrom.Text = ""
        mdlImportServices.Hide()
    End Sub

    Protected Sub ImageButton2_Click1(sender As Object, e As ImageClickEventArgs) Handles ImageButton2.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = "ImportService"
        Try
            'If String.IsNullOrEmpty(ddlContactTypeIS.Text) Or ddlContactTypeIS.Text = "--SELECT--" Then
            '    '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
            '    lblAlert2.Text = "SELECT CUSTOMER TYPE TO PROCEED"
            '    mdlImportServices.Show()
            '    Exit Sub
            'End If


            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtAccountId.Text.Trim
                txtPopupClientSearch.Text = txtPopUpClient.Text
                'UpdatePanel1.Update()

           
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                End If
              

                SqlDSClient.DataBind()
                gvClient.DataBind()
                'updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""
           

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeIS.Text = "CORPORATE" Or ddlContactTypeIS.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeIS.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeIS.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD  From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                End If
               

                SqlDSClient.DataBind()
                gvClient.DataBind()
                'updPanelInvoice.Update()
            End If
            txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ImageButton2_Click1", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnShowRecords_Click1(sender As Object, e As EventArgs) Handles btnShowRecords.Click

        lblAlert.Text = ""

        'FirstGridViewRowServiceRecs()


        'updPanelInvoice.Update()

        PopulateServiceGrid()

        btnImportService.Enabled = True

        mdlImportServices.Show()
    End Sub

    Protected Sub btnImportInvoiceII_Click(sender As Object, e As EventArgs) Handles btnImportInvoiceII.Click
        Try
            txtClientFrom.Text = ""
            Dim totalRows As Long
            totalRows = 0


            For rowIndex1 As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                    GoTo insertRec1
                End If
            Next rowIndex1



            If totalRows = 0 Then
                mdlImportInvoices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If

insertRec1:
            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                txtCompanyGroup.Text = ddlCompanyGrpII.Text
                ddlContactType.Text = ddlContactTypeII.Text
                txtAccountIdBilling.Text = txtAccountIdII.Text
                txtAccountName.Text = txtClientNameII.Text

                ddlCompanyGrpII.Enabled = False
                ddlContactTypeII.Enabled = False
                txtAccountIdII.Enabled = False
                txtClientNameII.Enabled = False
                btnClient.Visible = False
            Else
                'ddlCompanyGrp.Text = txtCompanyGroup.Text
                'txtAccountId.Text = txtAccountIdBilling.Text
                'txtClientName.Text = txtAccountName.Text

                'ddlCompanyGrp.Enabled = True
                'ddlContactType.Enabled = True
                'txtAccountId.Enabled = True
                'txtClientName.Enabled = True
                'btnClient.Visible = True

            End If
            'System.Threading.Thread.Sleep(5000)

            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            'Start: From tblBillingDetailItem

            txtCNAmount.Text = "0.00"
            txtCNGSTAmount.Text = "0.00"
            txtCNNetAmount.Text = "0.00"

            Dim rowselected As Integer
            rowselected = 0

            For rowIndex As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                'string txSpareId = row.ItemArray[0] as string;
                Dim TextBoxchkSelect As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGVII"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then
                    AddNewRowBillingDetailsRecs()
                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    'Header
                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGVII"), TextBox)
                    Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGVII"), TextBox)
                    Dim InvoiceDate As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesDateGVII"), TextBox)

                    Dim InvoiceAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtValueBaseGVII"), TextBox)
                    'Dim InvoiceAmmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAppliedBaseGVII"), TextBox)
                    Dim TotalReceiptAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalReceiptAmountGVII"), TextBox)
                    Dim TotalCNAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalCNAmountGVII"), TextBox)
                    Dim TotalOSAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOSAmountGVII"), TextBox)

                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)
                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    TextBoxItemType.Text = "INVOICE"

                    Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
                    TextBoxtxtInvoiceNoGV.Text = Convert.ToString(InvoiceNumber.Text)

                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = "UNIT"

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    'TextBoxOtherCode.Text = txtARCode.Text
                    TextBoxOtherCode.Text = txtGLCodeII.Text

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    'TextBoxGLDescription.Text = txtARDescription.Text
                    TextBoxGLDescription.Text = txtLedgerNameII.Text

                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                    TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N2")
                    'TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                    Dim gstCalc As Decimal
                    Dim CNDNAmt As Decimal

                    If ddlDocType.Text = "ARCN" Then

                        'Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'TextBoxTotalPricePerUOM.Text = Convert.ToString(TotalOSAmount.Text) * (-1)

                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'TextBoxTotalPrice.Text = Convert.ToString(TotalOSAmount.Text) * (-1)

                        'Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        'TextBoxTotalPriceWithDisc.Text = Convert.ToString(TotalOSAmount.Text) * (-1)

                        'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        'TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(TotalOSAmount.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")) * (-1)
                        'gstCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'TextBoxTotalPriceWithGST.Text = Convert.ToString((Convert.ToDecimal(TotalOSAmount.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)) * (-1))


                        Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'TextBoxTotalPricePerUOM.Text = Convert.ToString(TotalOSAmount.Text)
                        TextBoxTotalPricePerUOM.Text = Convert.ToString(InvoiceAmount.Text)

                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = (Convert.ToDecimal(-1).ToString("N2"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = (Convert.ToDecimal(InvoiceAmount.Text).ToString("N2")) * Convert.ToDecimal(TextBoxQty.Text).ToString("N2")

                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxTotalPriceWithDisc.Text = Convert.ToDecimal(TextBoxTotalPrice.Text).ToString("N2")
                        CNDNAmt = TextBoxTotalPriceWithDisc.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(InvoiceAmount.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01 * (-1)).ToString("N2"))
                        gstCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString((Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)))

                    Else
                        'Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'TextBoxTotalPricePerUOM.Text = Convert.ToString(TotalOSAmount.Text)

                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'TextBoxTotalPrice.Text = Convert.ToString(TotalOSAmount.Text)

                        'Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        'TextBoxTotalPriceWithDisc.Text = Convert.ToString(TotalOSAmount.Text)

                        'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        'TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(TotalOSAmount.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
                        'gstCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TotalOSAmount.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                        Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxTotalPricePerUOM.Text = Convert.ToString(InvoiceAmount.Text)

                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = (Convert.ToDecimal(1).ToString("N2"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = (Convert.ToDecimal(InvoiceAmount.Text).ToString("N2")) * Convert.ToDecimal(TextBoxQty.Text).ToString("N2")

                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxTotalPriceWithDisc.Text = Convert.ToDecimal(TextBoxTotalPrice.Text).ToString("N2")
                        CNDNAmt = TextBoxTotalPriceWithDisc.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(InvoiceAmount.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
                        gstCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString((Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)))


                    End If

                  
                    ''''''''''''''''''''''''''''''
                    txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(CNDNAmt)).ToString("N2")
                    txtCNGSTAmount.Text = (Convert.ToDecimal(txtCNGSTAmount.Text) + Convert.ToDecimal(gstCalc)).ToString("N2")
                    txtCNNetAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)).ToString("N2")

                    ''Dim TextBoxItemCodeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
                    ''TextBoxItemCodeGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode")))

                    'Dim TextBoxTermsGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtARCodeGV"), TextBox)
                    'TextBoxTermsGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Terms")))



                    'rowIndex += 1

                    'Next row


                    'txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                    'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    ''Else
                    'FirstGridViewRowBillingDetailsRecs()

                End If

                'End: Detail Records
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString

                'Button1.Enabled = False
                'Timer1.Enabled = True
                'Thread.Sleep(1000)
                'Dim workerThread As New Thread(New ThreadStart(AddressOf ProcessRecords))
                'workerThread.Start()


                'textbox6.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
            Next

            btnSave.Enabled = True
            updpnlBillingDetails.Update()
            updPanelSave.Update()
            updPnlBillingRecs.Update()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnImportInvoiceII_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnImportService_Click(sender As Object, e As EventArgs) Handles btnImportService.Click
        Try
            txtClientFrom.Text = ""
            Dim totalRows As Long
            totalRows = 0


            For rowIndex1 As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                    GoTo insertRec2
                End If
            Next rowIndex1



            If totalRows = 0 Then
                mdlImportServices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If


insertRec2:


            'If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            '    txtCompanyGroup.Text = ddlCompanyGrpII.Text
            '    'ddlContactType.Text = txtAccountType.Text
            '    txtAccountIdBilling.Text = txtAccountIdII.Text
            '    txtAccountName.Text = txtClientNameII.Text

            '    ddlCompanyGrpII.Enabled = False
            '    ddlContactType.Enabled = False
            '    txtAccountIdII.Enabled = False
            '    txtClientNameII.Enabled = False
            '    btnClient.Visible = False
            'Else
            '    'ddlCompanyGrp.Text = txtCompanyGroup.Text
            '    'txtAccountId.Text = txtAccountIdBilling.Text
            '    'txtClientName.Text = txtAccountName.Text

            '    'ddlCompanyGrp.Enabled = True
            '    'ddlContactType.Enabled = True
            '    'txtAccountId.Enabled = True
            '    'txtClientName.Enabled = True
            '    'btnClient.Visible = True

            'End If
            'System.Threading.Thread.Sleep(5000)

            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            'Start: From tblBillingDetailItem

            txtCNAmount.Text = "0.00"
            txtCNGSTAmount.Text = "0.00"
            txtCNNetAmount.Text = "0.00"

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim rowselected As Integer
            rowselected = 0

            For rowIndex As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                'string txSpareId = row.ItemArray[0] as string;
                Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then

                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim ServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)

                    '''''''''''''''''''''''''
                    If String.IsNullOrEmpty(txtCNNo.Text.Trim) = False Then
                        'Dim conn As MySqlConnection = New MySqlConnection()

                        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        'conn.Open()
                        Dim command11 As MySqlCommand = New MySqlCommand

                        command11.CommandType = CommandType.Text

                        'command1.CommandText = "SELECT * FROM tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "' and  ProductCode = '" & lblid1.Text & "'"
                        command11.CommandText = "SELECT count(*) as totcount FROM tblSalesDetail where RefType = '" & ServiceRecordNo.Text & "' and  InvoiceNumber = '" & txtCNNo.Text & "'"
                        command11.Connection = conn

                        Dim dr As MySqlDataReader = command11.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then
                            If dt.Rows(0)("totcount").ToString() > 0 Then
                                GoTo nextrec
                            End If
                        End If

                        'conn.Close()
                        command11.Dispose()
                        dt.Dispose()
                    End If

                    ''''''''''''''''''''''''''

                    AddNewRowBillingDetailsRecs()
                    'Header
                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                    Dim InvoiceNumber As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
                    'Dim ServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                    Dim ContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    Dim BillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                    Dim LocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    Dim BillAmount As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillAmountGV"), TextBox)


                    'Dim TotalReceiptAmount As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalReceiptAmountGVII"), TextBox)
                    'Dim TotalCNAmount As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalCNAmountGVII"), TextBox)
                    'Dim TotalOSAmount As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOSAmountGVII"), TextBox)

                    ''Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)
                    ''Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    TextBoxItemType.Text = "SERVICE"

                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = "UNIT"

                    Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceNoGV"), TextBox)
                    TextBoxtxtInvoiceNoGV.Text = Convert.ToString(InvoiceNumber.Text)


                    Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                    TextBoxServiceRecord.Text = Convert.ToString(ServiceRecordNo.Text)
                    TextBoxServiceRecord.Enabled = False

                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(ContractNo.Text)

                    Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(LocationId.Text)

                    Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                    TextBoxTaxCode.Text = txtGST.Text

                    'Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceDateGV"), TextBox)
                    'TextBoxInvoiceDate.Text = Convert.ToDateTime(InvoiceDate.Text).ToString("dd/MM/yyyy")

                    Dim GSTCalc As Decimal
                    Dim CNDNAmt As Decimal

                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                    'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N2")
                    TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                    If ddlDocType.Text = "ARCN" Then
                        Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxTotalPricePerUOM.Text = (Convert.ToDecimal(BillAmt.Text).ToString("N2"))

                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = (Convert.ToDecimal(-1).ToString("N2"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = (Convert.ToDecimal(BillAmt.Text).ToString("N2")) * Convert.ToDecimal(TextBoxQty.Text).ToString("N2")

                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxTotalPriceWithDisc.Text = Convert.ToDecimal(TextBoxTotalPrice.Text).ToString("N2")
                        CNDNAmt = TextBoxTotalPriceWithDisc.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(BillAmt.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01 * (-1)).ToString("N2"))
                        GSTCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString((Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)))

                    Else
                        Dim TextBoxTotalPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)

                        If Convert.ToDecimal(BillAmt.Text).ToString("N2") = 0.0 Then
                            TextBoxTotalPricePerUOM.Text = (Convert.ToDecimal(BillAmount.Text).ToString("N2"))
                        Else
                            TextBoxTotalPricePerUOM.Text = (Convert.ToDecimal(BillAmt.Text).ToString("N2"))
                        End If

                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = (Convert.ToDecimal(1).ToString("N2"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)

                        If Convert.ToDecimal(BillAmt.Text).ToString("N2") = 0.0 Then
                            TextBoxTotalPrice.Text = (Convert.ToDecimal(BillAmount.Text).ToString("N2")) * Convert.ToDecimal(TextBoxQty.Text).ToString("N2")
                        Else
                            TextBoxTotalPrice.Text = (Convert.ToDecimal(BillAmt.Text).ToString("N2")) * Convert.ToDecimal(TextBoxQty.Text).ToString("N2")
                        End If

                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxTotalPriceWithDisc.Text = Convert.ToDecimal(TextBoxTotalPrice.Text).ToString("N2")
                        CNDNAmt = TextBoxTotalPriceWithDisc.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)

                        If Convert.ToDecimal(BillAmt.Text).ToString("N2") = 0.0 Then
                            TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(BillAmount.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
                        Else
                            TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(BillAmt.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
                        End If

                        GSTCalc = Convert.ToDecimal(TextBoxGSTAmt.Text)

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString((Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)))

                    End If


                    txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(CNDNAmt)).ToString("N2")
                    txtCNGSTAmount.Text = (Convert.ToDecimal(txtCNGSTAmount.Text) + Convert.ToDecimal(GSTCalc)).ToString("N2")
                    txtCNNetAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)).ToString("N2")

                    'TextBoxTotalPriceWithGST.Text = "0.00"

                    'Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    'TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(InvoiceAmmount.Text)).ToString("N2")

                    ''Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    ''TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTBase"))


                    'Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalReceiptAmtGV"), TextBox)
                    'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(TotalReceiptAmount.Text)).ToString("N2")

                    'Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalCreditNoteAmtGV"), TextBox)
                    'TextBoxTotalCNAmt.Text = (Convert.ToDecimal(TotalCNAmount.Text)).ToString("N2")

                    ''Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    ''TextBoxRcnoInvoice.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Rcno")))

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    TextBoxOtherCode.Text = txtGLCodeIS.Text

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    TextBoxGLDescription.Text = txtLedgerNameIS.Text

                    'Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtReceiptAmtGV"), TextBox)
                    'TextBoxReceiptAmt.Text = TotalOSAmount.Text


                    'txtCNAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(TotalOSAmount.Text)).ToString("N2")
                    ' ''Dim TextBoxItemCodeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
                    ' ''TextBoxItemCodeGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode")))

                    ''Dim TextBoxTermsGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtARCodeGV"), TextBox)
                    ''TextBoxTermsGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Terms")))



                    'rowIndex += 1

                    'Next row


                    'txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                    'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    ''Else
                    'FirstGridViewRowBillingDetailsRecs()

                End If
nextrec:

                'End: Detail Records
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString

                'Button1.Enabled = False
                'Timer1.Enabled = True
                'Thread.Sleep(1000)
                'Dim workerThread As New Thread(New ThreadStart(AddressOf ProcessRecords))
                'workerThread.Start()


                'textbox6.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
            Next

            conn.Close()
            conn.Dispose()
            CalculateTotalPrice()

            AdjustGStAmount()


            grvBillingDetails.Visible = True

            btnSave.Enabled = True
            updpnlBillingDetails.Update()
            updPanelSave.Update()
            updPnlBillingRecs.Update()



        Catch ex As Exception
            lblAlert1.Text = ex.Message
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnImportService_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlDocType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlDocType.SelectedIndexChanged
        If ddlDocType.Text = "ARCN" Then
            Label47.Text = "CREDIT NOTE INFORMATION"
            Label5.Text = "CREDIT NOTE DETAILS"
        Else
            Label47.Text = "DEBIT NOTE INFORMATION"
            Label5.Text = "DEBIT NOTE DETAILS"
        End If
    End Sub

    Protected Sub ddlCreditTerms_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlCreditTerms.SelectedIndexChanged
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
            End If
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT TermsDay FROM tblterms where Terms='" & ddlCreditTerms.Text & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString
            End If

            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If

            commandDocControl.Dispose()
            dt.Dispose()
            dr.Close()
            'conn.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ddlCreditTerms_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    '' GVB

    Protected Sub txtQtyGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtPricePerUOMGVB_TextChanged(sender As Object, e As EventArgs)
        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

        CalculatePriceGVB()
    End Sub

    Protected Sub txtDiscAmountGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtDiscPercGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub


    Private Sub CalculatePriceGVB()
        Try
            Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGVB"), TextBox)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGVB"), TextBox)
            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGVB"), TextBox)

            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGVB"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGVB"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGVB"), TextBox)

            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGVB"), TextBox)
            Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGVB"), TextBox)
            Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

            Dim dblQty As String
            Dim dblPricePerUOM As String
            Dim dblTotalPrice As String

            Dim dblDiscPerc As String
            Dim dblDisAmount As String
            Dim dblPriceWithDisc As String

            Dim dblGSTPerc As String
            Dim dblGSTAmt As String
            Dim dblTotalPriceWithGST As String


            If String.IsNullOrEmpty(lblid1.Text) = True Then
                lblid1.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid2.Text) = True Then
                lblid2.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid3.Text) = True Then
                lblid3.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid4.Text) = True Then
                lblid4.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid5.Text) = True Then
                lblid5.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid6.Text) = True Then
                lblid6.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid7.Text) = True Then
                lblid7.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid8.Text) = True Then
                lblid8.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid9.Text) = True Then
                lblid9.Text = "0.00"
            End If


            dblQty = (lblid1.Text)
            dblPricePerUOM = (lblid2.Text)
            dblTotalPrice = (lblid3.Text)

            dblDiscPerc = (lblid4.Text)
            dblDisAmount = (lblid5.Text)
            dblPriceWithDisc = (lblid6.Text)

            dblGSTPerc = (lblid7.Text)
            dblGSTAmt = (lblid8.Text)
            dblTotalPriceWithGST = (lblid9.Text)

            lblid3.Text = (Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
            lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))
            lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
            lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

            CalculateTotalPrice()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "CalculatePriceGVB", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    'Protected Sub txtTaxTypeGVB_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)


    '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGVB"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGVB"), TextBox)


    '        'lTargetDesciption = lblid1.Text

    '        'Dim rowindex1 As Integer = ddl1.RowIndex

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString
    '            lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")
    '            CalculatePriceGVB()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtTaxTypeGVB_SelectedIndexChanged", ex.Message.ToString, "")
    '        Exit Sub
    '    End Try
    'End Sub
    ' GVB

    Protected Sub ImageButton6_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton6.Click
        txtGLFrom.Text = ""
        txtGLFrom.Text = "InvoiceSearch"
        mdlPopupGL.Show()
    End Sub



    Protected Sub ImageButton7_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton7.Click
        txtGLFrom.Text = ""
        txtGLFrom.Text = "ServiceSearch"
        mdlPopupGL.Show()
    End Sub

    Protected Sub OnRowDataBoundg1(sender As Object, e As GridViewRowEventArgs)
        '    InsertIntoTblWebEventLog("CN1", "ONROWDATABOUND1", e.Row.RowIndex.ToString, txtCreatedBy.Text)

        If e.Row.RowType = DataControlRowType.DataRow Then
            '    InsertIntoTblWebEventLog("CN1", "ONROWDATABOUND2", e.Row.RowIndex.ToString, txtCreatedBy.Text)


            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
            '     InsertIntoTblWebEventLog("CN1", "ONROWDATABOUND3", e.Row.Cells(5).Text.Trim, txtCreatedBy.Text)

            If txtDisplayRecordsLocationwise.Text = "N" Then
                e.Row.Cells(20).Visible = False
                GridView1.HeaderRow.Cells(20).Visible = False
            ElseIf txtDisplayRecordsLocationwise.Text = "Y" Then
                e.Row.Cells(20).Visible = True
                GridView1.HeaderRow.Cells(20).Visible = True
            End If

            Dim ch As CheckBox = CType(e.Row.FindControl("chkEI"), CheckBox)

            InsertIntoTblWebEventLog("INVOICE-ROWDATABOUND", e.Row.Cells(6).Text.Trim, e.Row.Cells(32).Text.Trim, e.Row.Cells(22).Text.Trim)
            If e.Row.Cells(22).Text.Trim = "VALID" Then
                e.Row.Cells(4).BackColor = Color.YellowGreen
                e.Row.Cells(4).ForeColor = Color.YellowGreen
            ElseIf e.Row.Cells(22).Text.Trim = "CANCELLED" Then
                e.Row.Cells(4).BackColor = Color.Purple
                e.Row.Cells(4).ForeColor = Color.Purple
            ElseIf e.Row.Cells(22).Text.Trim = "INVALID" Then
                e.Row.Cells(4).BackColor = Color.RED
                e.Row.Cells(4).ForeColor = Color.RED
                e.Row.ForeColor = Color.Red
            ElseIf e.Row.Cells(22).Text.Trim = "APPROVED" Then
                e.Row.Cells(4).BackColor = Color.PINK
                e.Row.Cells(4).ForeColor = Color.PINK
            Else
                '  InsertIntoTblWebEventLog("INVOICE", "ROWDATABOUND", e.Row.Cells(32).Text.Trim, txtCreatedBy.Text)
                If e.Row.Cells(32).Text.Trim = "&nbsp;" Or String.IsNullOrEmpty(e.Row.Cells(32).Text.Trim) Then
                    e.Row.Cells(4).BackColor = Color.WHITE
                    e.Row.Cells(4).ForeColor = Color.WHITE
                    ch.Checked = False
                Else


                    e.Row.Cells(4).BackColor = Color.YELLOW
                    e.Row.Cells(4).ForeColor = Color.YELLOW
                    ch.Checked = True

                End If

            End If
        Else
            InsertIntoTblWebEventLog("CN1", "ONROWDATABOUND0", e.Row.RowIndex.ToString, txtCreatedBy.Text)

        End If
    End Sub

    Protected Sub OnSelectedIndexChangedg1(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        For Each row As GridViewRow In GridView1.Rows
            'If row.RowIndex = GridView1.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If
            If row.RowIndex = GridView1.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next
    End Sub

    Protected Sub btnConfirmYes_Click(sender As Object, e As EventArgs) Handles btnConfirmYes.Click
        IsSuccess = PostCN()

        If IsSuccess = True Then
          
            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()
            updpnlBillingDetails.Update()
            'updpnlServiceRecs.Update()
            updpnlBillingDetails.Update()

            btnQuickSearch_Click(sender, e)
            lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            btnReverse.Enabled = True
            btnReverse.ForeColor = System.Drawing.Color.Black

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            If txtAutoEmailCreditNote.Text = "True" Then
                mdlConfirmMultiPrint.Show()

            End If
            'InsertNewLog()
        End If
    End Sub

    Protected Sub btnConfirmYesReverse_Click(sender As Object, e As EventArgs) Handles btnConfirmYesReverse.Click
        IsSuccess = ReverseCN()

        If IsSuccess = True Then
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()
            updpnlBillingDetails.Update()
            'updpnlServiceRecs.Update()
            updpnlBillingDetails.Update()

            btnQuickSearch_Click(sender, e)

            lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black

            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black

            btnPost.Enabled = True
            btnPost.ForeColor = System.Drawing.Color.Black

            'InsertNewLog()

        End If
    End Sub

    Protected Sub btnReverse_Click(sender As Object, e As EventArgs) Handles btnReverse.Click
        Try
            lblAlert.Text = ""
            lblMessage.Text = ""


            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If


            mdlPopupConfirmReverse.Show()

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                ''''''''''''''' Insert tblAR

                'PopulateArCode()
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command5 As MySqlCommand = New MySqlCommand
                command5.CommandType = CommandType.Text

                Dim qry5 As String = "DELETE from tblAR where BatchNo = '" & txtCNNo.Text & "'"

                command5.CommandText = qry5
                'command1.Parameters.Clear()
                command5.Connection = conn
                command5.ExecuteNonQuery()

                'Dim qryAR As String
                'Dim commandAR As MySqlCommand = New MySqlCommand
                'commandAR.CommandType = CommandType.Text

                'If Convert.ToDecimal(txtCNAmount.Text) > 0.0 Then

                '    '''''''''''''''''''''''''''''

                '    qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName,  "
                '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName,"
                '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"


                '    'Dim conn As MySqlConnection = New MySqlConnection()
                '    'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                '    'conn.Open()

                '    Dim cmdGL As MySqlCommand = New MySqlCommand
                '    cmdGL.CommandType = CommandType.Text
                '    cmdGL.CommandText = "SELECT LedgerCode, LedgerName, CNValue, InvoiceNo   FROM tblcndet where CNNumber ='" & txtCNNo.Text.Trim & "' order by LedgerCode"
                '    cmdGL.Connection = conn

                '    Dim drcmdGL As MySqlDataReader = cmdGL.ExecuteReader()
                '    Dim dtGL As New DataTable
                '    dtGL.Load(drcmdGL)

                '    'FirstGridViewRowGL()


                '    Dim TotDetailRecordsLoc = dtGL.Rows.Count
                '    If dtGL.Rows.Count > 0 Then

                '        lGLCode = ""
                '        lGLDescription = ""
                '        lCreditAmount = 0.0


                '        lGLCode = dtGL.Rows(0)("LedgerCode").ToString()
                '        lGLDescription = dtGL.Rows(0)("LedgerName").ToString()
                '        lCreditAmount = 0.0

                '        Dim rowIndex4 = 0

                '        For Each row As DataRow In dtGL.Rows

                '            'If lGLCode = row("LedgerCode") Then
                '            '    lCreditAmount = lCreditAmount + row("CNValue")
                '            'Else

                '            commandAR.CommandText = qryAR
                '            commandAR.Parameters.Clear()
                '            commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '            commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '            commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '            If txtCNDate.Text.Trim = "" Then
                '                commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '            Else
                '                commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '            End If
                '            commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                '            commandAR.Parameters.AddWithValue("@InvoiceNumber", "")
                '            commandAR.Parameters.AddWithValue("@GLCode", dtGL.Rows(rowIndex4)("LedgerCode").ToString())
                '            commandAR.Parameters.AddWithValue("@GLDescription", dtGL.Rows(rowIndex4)("LedgerName").ToString())
                '            commandAR.Parameters.AddWithValue("@DebitAmount", (0.0).ToString("N2"))
                '            commandAR.Parameters.AddWithValue("@CreditAmount", dtGL.Rows(rowIndex4)("CNValue").ToString())
                '            commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '            commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '            commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                '            commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '            commandAR.Connection = conn
                '            commandAR.ExecuteNonQuery()



                '            commandAR.CommandText = qryAR
                '            commandAR.Parameters.Clear()
                '            commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '            commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '            commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '            If txtCNDate.Text.Trim = "" Then
                '                commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '            Else
                '                commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '            End If
                '            commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                '            commandAR.Parameters.AddWithValue("@InvoiceNumber", dtGL.Rows(rowIndex4)("InvoiceNo").ToString())
                '            commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
                '            commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
                '            'commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(lCreditAmount).ToString("N2"))
                '            'commandAR.Parameters.AddWithValue("@CreditAmount", (0.0).ToString("N2"))
                '            commandAR.Parameters.AddWithValue("@DebitAmount", dtGL.Rows(rowIndex4)("CNValue").ToString())
                '            commandAR.Parameters.AddWithValue("@CreditAmount", (0.0).ToString("N2"))
                '            commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '            commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '            commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                '            commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '            commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '            commandAR.Connection = conn
                '            commandAR.ExecuteNonQuery()
                '            'If (TotDetailRecordsLoc > (rowIndex4 + 1)) Then
                '            '    AddNewRowGL()
                '            'End If



                '            'lGLCode = row("LedgerCode")
                '            'lGLDescription = row("LedgerName")
                '            'lCreditAmount = row("CNValue")

                '            rowIndex4 += 1
                '            'rowIndex4 += 1
                '            'End If
                '        Next row


                '        'commandAR.CommandText = qryAR
                '        'commandAR.Parameters.Clear()
                '        'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '        'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '        'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '        'If txtCNDate.Text.Trim = "" Then
                '        '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '        'Else
                '        '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '        'End If
                '        'commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                '        'commandAR.Parameters.AddWithValue("@InvoiceNumber", dtGL.Rows(0)("InvoiceNo").ToString())
                '        'commandAR.Parameters.AddWithValue("@GLCode", lGLCode)
                '        'commandAR.Parameters.AddWithValue("@GLDescription", lGLDescription)
                '        'commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(lCreditAmount).ToString("N2"))
                '        'commandAR.Parameters.AddWithValue("@CreditAmount", (0.0).ToString("N2"))
                '        'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '        'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '        'commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                '        'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '        ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '        'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '        'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '        ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '        'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '        'commandAR.Connection = conn
                '        'commandAR.ExecuteNonQuery()
                '    End If


                '    'AddNewRowGL()

                '    'Dim TextBoxGLCode1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                '    'TextBoxGLCode1.Text = lGLCode

                '    'Dim TextBoxGLDescription1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                '    'TextBoxGLDescription1.Text = lGLDescription

                '    'Dim TextBoxDebitAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                '    'TextBoxDebitAmount1.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

                '    'Dim TextBoxCreditAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                '    'TextBoxCreditAmount1.Text = (0.0).ToString("N2")

                '    'commandAR.CommandText = qryAR
                '    'commandAR.Parameters.Clear()
                '    'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '    'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '    'If txtCNDate.Text.Trim = "" Then
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '    'Else
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '    'End If
                '    'commandAR.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                '    'commandAR.Parameters.AddWithValue("@InvoiceNumber", dtGL.Rows(0)("InvoiceNo").ToString())
                '    'commandAR.Parameters.AddWithValue("@GLCode", lGLCode)
                '    'commandAR.Parameters.AddWithValue("@GLDescription", lGLDescription)
                '    'commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(lCreditAmount).ToString("N2"))
                '    'commandAR.Parameters.AddWithValue("@CreditAmount", (0.0).ToString("N2"))
                '    'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '    'commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                '    'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '    'commandAR.Connection = conn
                '    'commandAR.ExecuteNonQuery()

                '    ''''''''''''''''''''

                '    ''AR values

                '    'Dim TextBoxGLCodeAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                '    'TextBoxGLCodeAR.Text = txtARCode.Text

                '    'Dim TextBoxGLDescriptionAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                '    'TextBoxGLDescriptionAR.Text = txtARDescription.Text

                '    'Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                '    'TextBoxDebitAmountAR.Text = (0.0).ToString("N2")

                '    'Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                '    'TextBoxCreditAmountAR.Text = Convert.ToDecimal(txtCNAmount.Text).ToString("N2")


                '    'commandAR.CommandText = qryAR
                '    'commandAR.Parameters.Clear()
                '    'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '    'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '    'If txtCNDate.Text.Trim = "" Then
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '    'Else
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '    'End If
                '    'commandAR.Parameters.AddWithValue("@ContractNo", "")
                '    'commandAR.Parameters.AddWithValue("@InvoiceNumber", "")
                '    'commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
                '    'commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
                '    'commandAR.Parameters.AddWithValue("@DebitAmount", (0.0).ToString("N2"))
                '    'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtCNAmount.Text).ToString("N2"))
                '    'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '    'commandAR.Parameters.AddWithValue("@ModuleName", "CN")
                '    'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '    'commandAR.Connection = conn
                '    'commandAR.ExecuteNonQuery()



                '    'Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableGL"), DataTable)

                '    'If tableAdd IsNot Nothing Then

                '    '    For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                '    '        Dim TextBoxGLCodeAR As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                '    '        Dim TextBoxGLDescriptionAR As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                '    '        Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                '    '        Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtCreditAmountGV"), TextBox)

                '    '        commandAR.CommandText = qryAR
                '    '        commandAR.Parameters.Clear()
                '    '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '    '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '    '        commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '    '        If txtCNDate.Text.Trim = "" Then
                '    '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '    '        Else
                '    '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '    '        End If
                '    '        commandAR.Parameters.AddWithValue("@ContractNo", "")
                '    '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)
                '    '        commandAR.Parameters.AddWithValue("@GLCode", TextBoxGLCodeAR.Text)
                '    '        commandAR.Parameters.AddWithValue("@GLDescription", TextBoxGLDescriptionAR.Text)
                '    '        commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(TextBoxDebitAmountAR.Text))
                '    '        commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(TextBoxCreditAmountAR.Text))
                '    '        commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '    '        commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '    '        commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
                '    '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    '        commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '    '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '    '        commandAR.Connection = conn
                '    '        commandAR.ExecuteNonQuery()
                '    '    Next
                '    'End If


                '    ''''''''''''''''''''

                '    'qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName,  "
                '    'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                '    'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName,"
                '    'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                '    'commandAR.CommandText = qryAR
                '    'commandAR.Parameters.Clear()
                '    'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '    'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '    'If txtCNDate.Text.Trim = "" Then
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '    'Else
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '    'End If
                '    'commandAR.Parameters.AddWithValue("@ContractNo", "")
                '    'commandAR.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@GLCode", txtARCode10.Text)
                '    'commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription10.Text)
                '    'commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtReceiptAmt.Text))
                '    'commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
                '    'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '    'commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
                '    'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '    'commandAR.Connection = conn
                '    'commandAR.ExecuteNonQuery()



                '    'qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, GLtype, "
                '    'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                '    'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @GLtype,"
                '    'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                '    'commandAR.CommandText = qryAR
                '    'commandAR.Parameters.Clear()
                '    'commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                '    'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                '    'If txtCNDate.Text.Trim = "" Then
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '    'Else
                '    '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '    'End If
                '    'commandAR.Parameters.AddWithValue("@ContractNo", "")
                '    'commandAR.Parameters.AddWithValue("@InvoiceNumber", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
                '    'commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
                '    'commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
                '    'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtReceiptAmt.Text))
                '    'commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '    'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '    'commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
                '    'commandAR.Parameters.AddWithValue("@GLType", "Debtor")

                '    'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '    ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '    'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '    'commandAR.Connection = conn
                '    'commandAR.ExecuteNonQuery()
                'End If



                Dim commandUpdateCN As MySqlCommand = New MySqlCommand
                commandUpdateCN.CommandType = CommandType.Text
                Dim sqlUpdateCN As String = "Update tblCN set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

                commandUpdateCN.CommandText = sqlUpdateCN
                commandUpdateCN.Parameters.Clear()
                commandUpdateCN.Connection = conn
                commandUpdateCN.ExecuteNonQuery()

                GridView1.DataBind()

                '    'Start:Loop thru' Credit values

                '    Dim commandValues As MySqlCommand = New MySqlCommand

                '    commandValues.CommandType = CommandType.Text
                '    commandValues.CommandText = "SELECT *  FROM tblrecvdet where ReceiptNumber ='" & txtCNNo.Text.Trim & "'"
                '    commandValues.Connection = conn

                '    Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                '    Dim dtValues As New DataTable
                '    dtValues.Load(drValues)


                '    Dim lTotalReceiptAmt As Decimal
                '    Dim lInvoiceAmt As Decimal
                '    Dim lReceptAmtAdjusted As Decimal

                '    lTotalReceiptAmt = 0.0
                '    lInvoiceAmt = 0.0

                '    lTotalReceiptAmt = dtValues.Rows(0)("ReceiptValue").ToString


                '    For Each row As DataRow In dtValues.Rows

                '        If Convert.ToDecimal(row("ReceiptValue")) > 0.0 Then

                '            ''''''''''''''''''''

                '            Dim commandUpdateInvoiceValue As MySqlCommand = New MySqlCommand

                '            commandUpdateInvoiceValue.CommandType = CommandType.Text
                '            commandUpdateInvoiceValue.CommandText = "SELECT *  FROM tblservicebillingdetailitem where InvoiceNo ='" & row("InvoiceNo") & "' order by ServiceDate"
                '            commandUpdateInvoiceValue.Connection = conn

                '            Dim drInvoiceValue As MySqlDataReader = commandUpdateInvoiceValue.ExecuteReader()
                '            Dim dtInvoiceValue As New DataTable
                '            dtInvoiceValue.Load(drInvoiceValue)

                '            For Each row1 As DataRow In dtInvoiceValue.Rows

                '                '''''''''''''''''''''''''''

                '                lInvoiceAmt = row1("TotalPriceWithGST")

                '                If lTotalReceiptAmt = lInvoiceAmt Then
                '                    lReceptAmtAdjusted = lInvoiceAmt
                '                ElseIf lTotalReceiptAmt > lInvoiceAmt Then
                '                    lReceptAmtAdjusted = lInvoiceAmt
                '                ElseIf lTotalReceiptAmt < lInvoiceAmt Then
                '                    lReceptAmtAdjusted = lInvoiceAmt - lTotalReceiptAmt
                '                End If

                '                lTotalReceiptAmt = lTotalReceiptAmt - lReceptAmtAdjusted

                '                Dim commandUpdateInvoiceValue1 As MySqlCommand = New MySqlCommand
                '                commandUpdateInvoiceValue1.CommandType = CommandType.Text
                '                Dim sqlUpdateInvoiceValue1 As String = "Update tblservicebillingdetailitem set ReceiptAmount = " & Convert.ToDecimal(lReceptAmtAdjusted) & " where Rcno = " & row1("Rcno")

                '                commandUpdateInvoiceValue1.CommandText = sqlUpdateInvoiceValue1
                '                commandUpdateInvoiceValue1.Parameters.Clear()
                '                commandUpdateInvoiceValue1.Connection = conn
                '                commandUpdateInvoiceValue1.ExecuteNonQuery()

                '                ''''''''''''''''''''''''''''''


                '                '''''''''''''''''''''

                '                qryAR = "INSERT INTO tblAR(VoucherNumber,  AccountId, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, ServiceRecordNo, ServiceDate,  "
                '                qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                '                qryAR = qryAR + " (@VoucherNumber, @AccountId, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @ServiceRecordNo, @ServiceDate, "
                '                qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                '                commandAR.CommandText = qryAR
                '                commandAR.Parameters.Clear()
                '                commandAR.Parameters.AddWithValue("@VoucherNumber", txtCNNo.Text)
                '                commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)

                '                If txtCNDate.Text.Trim = "" Then
                '                    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                '                Else
                '                    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd"))
                '                End If

                '                commandAR.Parameters.AddWithValue("@ContractNo", row1("ContractNo"))
                '                commandAR.Parameters.AddWithValue("@InvoiceNumber", row("InvoiceNo"))
                '                commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
                '                commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
                '                commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)

                '                'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ReceiptValue")))
                '                commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(lReceptAmtAdjusted))

                '                commandAR.Parameters.AddWithValue("@BatchNo", txtCNNo.Text)
                '                commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                '                commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")

                '                commandAR.Parameters.AddWithValue("@ServiceRecordNo", row1("ServiceRecordNo"))


                '                'commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                '                'Else
                '                commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(row1("ServiceDate")).ToString("yyyy-MM-dd"))
                '                'End If

                '                commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                '                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '                commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '                commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                '                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                '                commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                '                commandAR.Connection = conn
                '                commandAR.ExecuteNonQuery()

                '            Next row1
                '        End If

                '    Next row
                ''End: Loop thru' Credit Values


                'Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
                'commandUpdateInvoice.CommandType = CommandType.Text
                'Dim sqlUpdateInvoice As String = "Update tblcn set GLStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

                'commandUpdateInvoice.CommandText = sqlUpdateInvoice
                'commandUpdateInvoice.Parameters.Clear()
                'commandUpdateInvoice.Connection = conn
                'commandUpdateInvoice.ExecuteNonQuery()

                'GridView1.DataBind()

                lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

                lblAlert.Text = ""
                updPnlSearch.Update()
                updPnlMsg.Update()
                updpnlBillingDetails.Update()
                'updpnlServiceRecs.Update()
                updpnlBillingDetails.Update()

                btnQuickSearch_Click(sender, e)

                conn.Close()
                conn.Dispose()


                command5.Dispose()
                commandUpdateCN.Dispose()
            End If

            ''''''''''''''' Insert tblAR
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnReverse_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnChangeStatus_Click(sender As Object, e As EventArgs) Handles btnChangeStatus.Click
        lblAlertStatus.Text = ""

        mdlPopupStatus.Show()
    End Sub

    Protected Sub btnUpdateStatus_Click(sender As Object, e As EventArgs) Handles btnUpdateStatus.Click
        lblAlertStatus.Text = ""

        If ddlNewStatus.SelectedIndex = 0 Then
            lblAlertStatus.Text = "PLEASE SELECT STATUS"
            mdlPopupStatus.Show()
            Return
        End If


        If ddlNewStatus.Text = txtDDLText.Text Then
            lblAlertStatus.Text = "PLEASE SELECT NEW STATUS"
            mdlPopupStatus.Show()
            Return
        End If

        If ddlNewStatus.Text = txtPostStatus.Text Then
            lblAlertStatus.Text = "STATUS ALREADY UPDATED"
            mdlPopupStatus.Show()
            Return
        End If

        If String.IsNullOrEmpty(txtReasonChSt.Text) = True Then
            lblAlertStatus.Text = "PLEASE ENTER REASON"
            txtReasonChSt.Focus()
            mdlPopupStatus.Show()
            Return
        End If

        Try
            If ddlNewStatus.SelectedIndex > 0 Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "UPDATE tblSales SET PostStatus='" + ddlNewStatus.SelectedValue + "', ReasonChSt ='" & txtReasonChSt.Text.Trim & "' where rcno=" & Convert.ToInt32(txtRcno.Text)
                command.Connection = conn
                command.ExecuteNonQuery()

                '   UpdateContractActSvcDate(conn)

                conn.Close()
                conn.Dispose()
                command.Dispose()
                'ddlStatus.Text = ddlNewStatus.Text
                txtPostStatus.Text = ddlNewStatus.SelectedValue
                ddlNewStatus.SelectedIndex = 0

                lblMessage.Text = "ACTION: STATUS UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)


                SQLDSCN.SelectCommand = txt.Text
                SQLDSCN.DataBind()
                GridView1.DataBind()

                'InsertNewLog()
                'GridView1.DataSourceID = "SqlDataSource1"
                mdlPopupStatus.Hide()
            End If

        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnUpdateStatus_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub SQLDSCN_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SQLDSCN.Selected
        txtRowCount.Text = e.AffectedRows.ToString
    End Sub

    Protected Sub OnRowDataBoundgClient(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        For Each row As GridViewRow In gvClient.Rows
            If row.RowIndex = gvClient.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgGL(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GrdViewGL, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgGL(sender As Object, e As EventArgs)
        For Each row As GridViewRow In GrdViewGL.Rows
            If row.RowIndex = GrdViewGL.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub txtReceiptnoSearch_TextChanged(sender As Object, e As EventArgs) Handles txtReceiptnoSearch.TextChanged
        If Len(txtReceiptnoSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            'Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            'MakeMeNull()
            'MakeMeNullBillingDetails()

            'If GridView1.Rows.Count > 0 Then
            '    txtMode.Text = "View"
            '    txtRcno.Text = GridView1.Rows(0).Cells(1).Text
            '    PopulateRecord()
            '    'GridView1_SelectedIndexChanged(sender, e)
            'End If
        End If
    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)

        GridView1.DataBind()
    End Sub


    Protected Sub btnConfirmYesSavePost_Click(sender As Object, e As EventArgs) Handles btnConfirmYesSavePost.Click
        IsSuccess = PostCN()

        If IsSuccess = True Then

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), txtCNAmount.Text, txtCNGSTAmount.Text, txtCNNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            'updpnlServiceRecs.Update()


            btnQuickSearch_Click(sender, e)

            lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
            updPnlMsg.Update()

            btnReverse.Enabled = True
            btnReverse.ForeColor = System.Drawing.Color.Black

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            'If txtAutoEmailCreditNote.Text = "True" Then
            '    mdlConfirmMultiPrint.Show()

            'End If
            'InsertNewLog()
        End If
    End Sub

    Public Function FindCNPeriod(BillingPeriod As String) As String
        Dim IsLock As String
        IsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        ''''''''''''
        If txtMode.Text = "NEW" Then
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT CNLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT CNLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If
        Else
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT CNLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT CNLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If

        End If


        '''''''''''''

        'If txtMode.Text = "NEW" Then
        '    command1.CommandText = "SELECT CNLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'Else
        '    command1.CommandText = "SELECT CNLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'End If
        'command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        command1.Connection = connPeriod

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If txtMode.Text = "NEW" Then
                IsLock = dt.Rows(0)("CNLock").ToString
            Else
                IsLock = dt.Rows(0)("CNLocke").ToString
            End If
        End If

        connPeriod.Close()
        connPeriod.Dispose()
        command1.Dispose()
        dt.Dispose()

        Return IsLock
    End Function

    Protected Sub txtAccountIdII_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdII.TextChanged
        If Len(txtAccountIdII.Text) > 2 Then
            ImageButton1_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub txtAccountId_TextChanged1(sender As Object, e As EventArgs) Handles txtAccountId.TextChanged
        If Len(txtAccountId.Text) > 2 Then
            ImageButton2_Click1(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub txtAccountIdSearch_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdSearch.TextChanged
        If Len(txtAccountIdSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()
                updPanelSave.Update()
                'UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If
    End Sub


    Protected Sub btnDeleteDetail_Click(sender As Object, e As EventArgs)
        Try
            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            lblMessage.Text = ""
            lblAlert.Text = ""

            Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowindex1).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)

            If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                    Dim conn As MySqlConnection = New MySqlConnection(constr)
                    conn.Open()

                    Dim command4 As MySqlCommand = New MySqlCommand
                    command4.CommandType = CommandType.Text

                    'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                    Dim qry4 As String = "Delete from tblsalesdetail where rcno = " & TextBoxRcno.Text
                    'Dim qry4 As String = "Delete from tblsalesdetail "
                    command4.CommandText = qry4
                    command4.Connection = conn
                    command4.ExecuteNonQuery()
                    command4.Dispose()

                    SqlDSSalesDetail.DataBind()
                    grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                    grvBillingDetailsNew.DataBind()

                    '''''''''''''''''''''''''
                    'CalculateTotal()
                    'CalculateTotalPrice()

                    'calculateTotalCN()

                    calculateTotalCN()
                    updPanelCN.Update()

                    'Exit Sub
                    Dim command5 As MySqlCommand = New MySqlCommand
                    command5.CommandType = CommandType.Text

                    Dim qry As String
                    qry = "Update tblSales set ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                    qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount  "
                    'qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                    qry = qry + " where Rcno = @Rcno;"

                    command5.CommandText = qry
                    command5.Parameters.Clear()

                    command5.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))

                    command5.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtCNAmount.Text))
                    command5.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtCNAmount.Text))
                    command5.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtCNGSTAmount.Text))
                    command5.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtCNGSTAmount.Text))
                    command5.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtCNNetAmount.Text))
                    command5.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtCNNetAmount.Text))
                    command5.Parameters.AddWithValue("@BalanceBase", 0.0)
                    command5.Parameters.AddWithValue("@BalanceOriginal", 0.0)
                    command5.Parameters.AddWithValue("@DiscountAmount", 0.0)
                    command5.Parameters.AddWithValue("@AmountWithDiscount", 0.0)
                    command5.Parameters.AddWithValue("@GSTAmount", 0.0)
                    command5.Parameters.AddWithValue("@NetAmount", 0.0)

                    'command5.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command5.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command5.Connection = conn
                    command5.ExecuteNonQuery()

                    '''''''''''''''''''''''
                    conn.Close()
                    conn.Dispose()
                    command5.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtCNNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", TextBoxRcno.Text)

                    GridView1.DataBind()

                    DisplayGLGrid()
                    'CalculatePrice()
                    IsDetailBlank()
                    updPanelCN.Update()
                End If
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub txtInvoiceNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)


            Dim lblid0 As TextBox = CType(txt1.FindControl("txtInvoiceNoGV"), TextBox)
            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceStatusGV"), TextBox)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid6 As TextBox = CType(txt1.FindControl("txtLocationIdGV"), TextBox)
            Dim lblid7 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            'Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid11 As DropDownList = CType(txt1.FindControl("txtItemCodeGV"), DropDownList)
            Dim lblid12 As TextBox = CType(txt1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblid13 As TextBox = CType(txt1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid14 As TextBox = CType(txt1.FindControl("txtGLDescriptionGV"), TextBox)
            Dim lblid15 As TextBox = CType(txt1.FindControl("txtDescriptionGV"), TextBox)


            Dim lblid16 As TextBox = CType(txt1.FindControl("txtQtyGV"), TextBox)
            Dim lblid18 As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid19 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)
            Dim lblid20 As DropDownList = CType(txt1.FindControl("txtUOMGV"), DropDownList)

            Dim lblid21 As TextBox = CType(txt1.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid22 As TextBox = CType(txt1.FindControl("txtGSTPercGV"), TextBox)

            lblAlert.Text = ""
            updPnlMsg.Update()


            '''''''''''''''''''''''''''''''''''

            If String.IsNullOrEmpty(lblid0.Text) = False Then
                If lblid2.Text = "SERVICE" Then
                    'lblid0.Text = 0.0
                    lblid1.Text = 0.0
                    lblid3.Text = 0.0
                    'lblid8.Text = 0.0
                    lblid9.Text = 0.0
                    lblid10.Text = 0.0
                    lblid4.Text = ""
                    lblid5.Text = ""
                    lblid6.Text = ""
                    'lblid16.Text = ""
                    lblid7.Text = ""

                    Dim IsInvDet As Boolean
                    IsInvDet = False
                    Dim lService As String
                    lService = ""

                    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

                    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsInvDet.Open()

                    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
                    commandIsInvDet.CommandType = CommandType.Text
                    'commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
                    commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where RefType = '" & lblid1.Text.Trim & "'"
                    commandIsInvDet.Connection = connIsInvDet

                    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
                    Dim dtIsInvDet As New DataTable
                    dtIsInvDet.Load(drIsInvDet)

                    If dtIsInvDet.Rows.Count > 0 Then
                        lService = dtIsInvDet.Rows(0)("InvoiceNumber").ToString
                        lblid0.Text = lService.Trim
                    End If

                    connIsInvDet.Close()
                    connIsInvDet.Dispose()
                    ''''''''''''''''''''''

                    Dim IsServiceRecord As Boolean
                    IsServiceRecord = False

                    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsServiceRecord.Open()

                    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                    commandIsServiceRecord.CommandType = CommandType.Text
                    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"
                    commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lblid1.Text.Trim & "'"

                    commandIsServiceRecord.Connection = connIsServiceRecord

                    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                    Dim dtIsServiceRecord As New DataTable
                    dtIsServiceRecord.Load(drIsServiceRecord)

                    If dtIsServiceRecord.Rows.Count > 0 Then
                        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                            lblid1.Text = ""
                            lblAlert.Text = "SERVICE RECORD NUMBER NOT FOUND"
                            updPnlMsg.Update()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                                lblid1.Text = ""
                                lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
                                updPnlMsg.Update()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                            lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
                            lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                            lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                            lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
                            CalculatePrice()
                            updpnlBillingDetails.Update()
                        End If
                    Else
                        lblid1.Text = ""
                        lblAlert.Text = "INVALID INVOICE NUMBER"
                        updPnlMsg.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub

                    End If

                    commandIsServiceRecord.Dispose()
                    connIsServiceRecord.Close()
                    connIsServiceRecord.Dispose()
                End If


                If lblid2.Text = "OTHERS" Then

                    'lblid0.Text = 0.0
                    lblid1.Text = ""
                    lblid3.Text = 0.0
                    'lblid8.Text = 0.0
                    lblid9.Text = 0.0
                    lblid10.Text = 0.0
                    lblid4.Text = ""
                    lblid5.Text = ""
                    lblid6.Text = ""
                    'lblid16.Text = ""
                    lblid7.Text = ""

                    lblid18.Text = 0.0
                    lblid19.Text = 0.0

                    Dim IsInvDet As Boolean
                    IsInvDet = False
                    Dim lService As String
                    lService = ""

                    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

                    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsInvDet.Open()

                    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
                    commandIsInvDet.CommandType = CommandType.Text
                    'commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
                    commandIsInvDet.CommandText = "SELECT InvoiceNumber, ValueBase from tblsales where accountid ='" & txtAccountIdBilling.Text & "' and  InvoiceNumber = '" & lblid0.Text.Trim & "'  and PostStatus ='P'"
                    commandIsInvDet.Connection = connIsInvDet

                    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
                    Dim dtIsInvDet As New DataTable
                    dtIsInvDet.Load(drIsInvDet)

                    If dtIsInvDet.Rows.Count > 0 Then
                        lblid3.Text = dtIsInvDet.Rows(0)("ValueBase").ToString
                        lblid9.Text = Convert.ToDecimal(lblid16.Text) * dtIsInvDet.Rows(0)("ValueBase").ToString
                        lblid10.Text = Convert.ToDecimal(lblid16.Text) * dtIsInvDet.Rows(0)("ValueBase").ToString

                        lblid20.Text = "UNIT"

                        lblid21.Text = txtGST.Text
                        lblid22.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        lblid18.Text = Convert.ToDecimal(Convert.ToDecimal(lblid22.Text) * Convert.ToDecimal(lblid9.Text) * 0.01).ToString("N2")
                        lblid19.Text = Convert.ToDecimal(Convert.ToDecimal(lblid18.Text) + Convert.ToDecimal(lblid9.Text)).ToString("N2")

                        'lblid0.Text = lService.Trim
                    Else
                        lblAlert.Text = "INVALID INVOICE NUMBER"
                        lblid0.Text = ""

                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If

                    CalculatePrice()
                    connIsInvDet.Close()
                    connIsInvDet.Dispose()
                    ''''''''''''''''''''''

                    'Dim IsServiceRecord As Boolean
                    'IsServiceRecord = False

                    'Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                    'connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'connIsServiceRecord.Open()

                    'Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                    'commandIsServiceRecord.CommandType = CommandType.Text
                    ''commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"
                    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lblid1.Text.Trim & "'"

                    'commandIsServiceRecord.Connection = connIsServiceRecord

                    'Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                    'Dim dtIsServiceRecord As New DataTable
                    'dtIsServiceRecord.Load(drIsServiceRecord)

                    'If dtIsServiceRecord.Rows.Count > 0 Then
                    '    If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                    '        lblid1.Text = ""
                    '        lblAlert.Text = "SERVICE RECORD NUMBER NOT FOUND"
                    '        updPnlMsg.Update()
                    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '        Exit Sub
                    '    Else
                    '        If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                    '            lblid1.Text = ""
                    '            lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
                    '            updPnlMsg.Update()
                    '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '            Exit Sub
                    '        End If

                    '        lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
                    '        lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                    '        lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                    '        lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
                    '        CalculatePrice()
                    '        updpnlBillingDetails.Update()
                    '    End If
                    'Else
                    '    lblid1.Text = ""
                    '    lblAlert.Text = "INVALID INVOICE NUMBER"
                    '    updPnlMsg.Update()
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub

                    'End If

                    'commandIsServiceRecord.Dispose()
                    'connIsServiceRecord.Close()
                    'connIsServiceRecord.Dispose()
                End If
                '''''''''''''''''''''''''''''''''''''
            End If


            'If lblid2.Text = "SERVICE" Then
            '    'lblid0.Text = 0.0
            '    lblid1.Text = 0.0
            '    lblid3.Text = 0.0
            '    'lblid8.Text = 0.0
            '    lblid9.Text = 0.0
            '    lblid10.Text = 0.0
            '    lblid4.Text = ""
            '    lblid5.Text = ""
            '    lblid6.Text = ""
            '    'lblid16.Text = ""
            '    lblid7.Text = ""


            '    ''''''''''''''''''''''
            '    Dim IsInvDet As Boolean
            '    IsInvDet = False
            '    Dim lService As String
            '    lService = ""

            '    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

            '    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsInvDet.Open()

            '    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
            '    commandIsInvDet.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text & " and AccountId ='" & txtAccountIdBilling.Text & "'"
            '    commandIsInvDet.CommandText = "SELECT RefType from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
            '    'commandIsServiceRecord.CommandText = "SELECT InvoiceNumber, ValueBase, RefType, CostCode, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text.Trim & "'"

            '    commandIsInvDet.Connection = connIsInvDet

            '    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
            '    Dim dtIsInvDet As New DataTable
            '    dtIsInvDet.Load(drIsInvDet)

            '    If dtIsInvDet.Rows.Count > 0 Then
            '        lService = dtIsInvDet.Rows(0)("RefType").ToString
            '    End If

            '    connIsInvDet.Close()
            '    connIsInvDet.Dispose()
            '    ''''''''''''''''''''''

            '    Dim IsServiceRecord As Boolean
            '    IsServiceRecord = False

            '    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

            '    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsServiceRecord.Open()

            '    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
            '    commandIsServiceRecord.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text & " and AccountId ='" & txtAccountIdBilling.Text & "'"
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text.Trim & "'"
            '    commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"

            '    commandIsServiceRecord.Connection = connIsServiceRecord

            '    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
            '    Dim dtIsServiceRecord As New DataTable
            '    dtIsServiceRecord.Load(drIsServiceRecord)

            '    If dtIsServiceRecord.Rows.Count > 0 Then
            '        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("BillNo").ToString) = True Then
            '            lblid1.Text = ""
            '            lblAlert.Text = "INVOICE NUMBER NOT FOUND FOR THE SERVICE RECORD"
            '            updPnlMsg.Update()
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            Exit Sub

            '        Else
            '            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
            '                lblid1.Text = ""
            '                lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
            '                updPnlMsg.Update()
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If

            '            'If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("ContractNo").ToString.Trim) = True Then
            '            '    lblid1.Text = ""
            '            '    lblAlert.Text = "INVALID CONTRACT NUMBER"
            '            '    updPnlMsg.Update()
            '            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '    Exit Sub
            '            'Else
            '            '    Dim commandIsContract As MySqlCommand = New MySqlCommand
            '            '    commandIsContract.CommandType = CommandType.Text
            '            '    commandIsContract.CommandText = "SELECT ContractGroup from tblContract where ContractNo ='" & dtIsServiceRecord.Rows(0)("ContractNo").ToString & "'"
            '            '    commandIsContract.Connection = connIsServiceRecord
            '            '    Dim drIsContract As MySqlDataReader = commandIsContract.ExecuteReader()
            '            '    Dim dtIsContract As New DataTable
            '            '    dtIsContract.Load(drIsContract)

            '            '    If dtIsContract.Rows.Count > 0 Then
            '            '        If dtIsContract.Rows(0)("ContractGroup").ToString <> ddlContractGroupBilling.Text.Trim Then
            '            '            lblAlert.Text = "SERVICE RECORD [" & lblid1.Text & "] DOES NOT BELONG TO CONTRACT GROUP [" & ddlContractGroupBilling.Text & "]"
            '            '            updPnlMsg.Update()
            '            '            lblid1.Text = ""
            '            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '            Exit Sub
            '            '        End If
            '            '    Else
            '            '        lblid1.Text = ""
            '            '        lblAlert.Text = "INVALID CONTRACT GROUP"
            '            '        updPnlMsg.Update()
            '            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '        Exit Sub
            '            '    End If
            '            'End If

            '            lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
            '            lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            'lblid8.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            'lblid4.Text = dtIsServiceRecord.Rows(0)("Status").ToString
            '            lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
            '            lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
            '            'lblid16.Text = dtIsServiceRecord.Rows(0)("ServiceBy").ToString
            '            lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
            '            CalculatePrice()
            '            updpnlBillingDetails.Update()

            '            '''''''''''''''''''''''
            '            'Dim commandOtherInfo As MySqlCommand = New MySqlCommand
            '            'If lblid4.Text = "P" Then
            '            '    commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
            '            'ElseIf lblid4.Text = "O" Then
            '            '    commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
            '            'End If
            '            'commandOtherInfo.Connection = connIsServiceRecord

            '            'Dim dr1 As MySqlDataReader = commandOtherInfo.ExecuteReader()
            '            'Dim dt1 As New DataTable
            '            'dt1.Load(dr1)

            '            'lblid11.Text = dt1.Rows(0)("Description").ToString()
            '            'lblid12.Text = dt1.Rows(0)("ProductCode").ToString()
            '            'lblid13.Text = dt1.Rows(0)("COACode").ToString()
            '            'lblid14.Text = dt1.Rows(0)("COADescription").ToString()
            '            'lblid15.Text = lblid1.Text & ", " & lblid7.Text & ", " & dtIsServiceRecord.Rows(0)("Notes").ToString()

            '            '''''''''''''''''''''''
            '            'End If
            '        End If
            '    Else
            '        lblid1.Text = ""
            '        lblAlert.Text = "INVALID INVOICE NUMBER"
            '        updPnlMsg.Update()
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub

            '    End If

            '    commandIsServiceRecord.Dispose()
            '    connIsServiceRecord.Close()
            '    connIsServiceRecord.Dispose()
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtInvoiceNoGV_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    ''
    Protected Sub txtInvoiceNoGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)


            Dim lblid0 As TextBox = CType(txt1.FindControl("txtInvoiceNoGVB"), TextBox)
            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGVB"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtItemTypeGVB"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGVB"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceStatusGVB"), TextBox)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGVB"), TextBox)
            Dim lblid6 As TextBox = CType(txt1.FindControl("txtLocationIdGVB"), TextBox)
            Dim lblid7 As TextBox = CType(txt1.FindControl("txtServiceDateGVB"), TextBox)
            'Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGVB"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)

            Dim lblid11 As DropDownList = CType(txt1.FindControl("txtItemCodeGVB"), DropDownList)
            Dim lblid12 As TextBox = CType(txt1.FindControl("txtItemDescriptionGVB"), TextBox)
            Dim lblid13 As TextBox = CType(txt1.FindControl("txtOtherCodeGVB"), TextBox)
            Dim lblid14 As TextBox = CType(txt1.FindControl("txtGLDescriptionGVB"), TextBox)
            Dim lblid15 As TextBox = CType(txt1.FindControl("txtDescriptionGVB"), TextBox)


            Dim lblid16 As TextBox = CType(txt1.FindControl("txtQtyGVB"), TextBox)
            Dim lblid18 As TextBox = CType(txt1.FindControl("txtGSTAmtGVB"), TextBox)
            Dim lblid19 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            Dim lblid20 As DropDownList = CType(txt1.FindControl("txtUOMGVB"), DropDownList)

            Dim lblid21 As TextBox = CType(txt1.FindControl("txtTaxTypeGVB"), TextBox)
            Dim lblid22 As TextBox = CType(txt1.FindControl("txtGSTPercGVB"), TextBox)

            lblAlert.Text = ""
            updPnlMsg.Update()


            '''''''''''''''''''''''''''''''''''

            If String.IsNullOrEmpty(lblid0.Text) = False Then
                If lblid2.Text = "SERVICE" Then
                    'lblid0.Text = 0.0
                    lblid1.Text = 0.0
                    lblid3.Text = 0.0
                    'lblid8.Text = 0.0
                    lblid9.Text = 0.0
                    lblid10.Text = 0.0
                    lblid4.Text = ""
                    lblid5.Text = ""
                    lblid6.Text = ""
                    'lblid16.Text = ""
                    lblid7.Text = ""

                    Dim IsInvDet As Boolean
                    IsInvDet = False
                    Dim lService As String
                    lService = ""

                    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

                    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsInvDet.Open()

                    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
                    commandIsInvDet.CommandType = CommandType.Text
                    'commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
                    commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where RefType = '" & lblid1.Text.Trim & "'"
                    commandIsInvDet.Connection = connIsInvDet

                    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
                    Dim dtIsInvDet As New DataTable
                    dtIsInvDet.Load(drIsInvDet)

                    If dtIsInvDet.Rows.Count > 0 Then
                        lService = dtIsInvDet.Rows(0)("InvoiceNumber").ToString
                        lblid0.Text = lService.Trim
                    End If

                    connIsInvDet.Close()
                    connIsInvDet.Dispose()
                    ''''''''''''''''''''''

                    Dim IsServiceRecord As Boolean
                    IsServiceRecord = False

                    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsServiceRecord.Open()

                    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                    commandIsServiceRecord.CommandType = CommandType.Text
                    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"
                    commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lblid1.Text.Trim & "'"

                    commandIsServiceRecord.Connection = connIsServiceRecord

                    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                    Dim dtIsServiceRecord As New DataTable
                    dtIsServiceRecord.Load(drIsServiceRecord)

                    If dtIsServiceRecord.Rows.Count > 0 Then
                        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                            lblid1.Text = ""
                            lblAlert.Text = "SERVICE RECORD NUMBER NOT FOUND"
                            updPnlMsg.Update()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                                lblid1.Text = ""
                                lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
                                updPnlMsg.Update()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                            lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
                            lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                            lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                            lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                            lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
                            CalculatePrice()
                            updpnlBillingDetails.Update()
                        End If
                    Else
                        lblid1.Text = ""
                        lblAlert.Text = "INVALID INVOICE NUMBER"
                        updPnlMsg.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub

                    End If

                    commandIsServiceRecord.Dispose()
                    connIsServiceRecord.Close()
                    connIsServiceRecord.Dispose()
                End If


                If lblid2.Text = "OTHERS" Then

                    'lblid0.Text = 0.0
                    lblid1.Text = 0.0
                    lblid3.Text = 0.0
                    'lblid8.Text = 0.0
                    lblid9.Text = 0.0
                    lblid10.Text = 0.0
                    lblid4.Text = ""
                    lblid5.Text = ""
                    lblid6.Text = ""
                    'lblid16.Text = ""
                    lblid7.Text = ""

                    lblid18.Text = 0.0
                    lblid19.Text = 0.0

                    Dim IsInvDet As Boolean
                    IsInvDet = False
                    Dim lService As String
                    lService = ""

                    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

                    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsInvDet.Open()

                    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
                    commandIsInvDet.CommandType = CommandType.Text
                    'commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
                    commandIsInvDet.CommandText = "SELECT InvoiceNumber, ValueBase from tblsales where accountid ='" & txtAccountIdBilling.Text & "' and  InvoiceNumber = '" & lblid0.Text.Trim & "' and PostStatus ='P'"
                    commandIsInvDet.Connection = connIsInvDet

                    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
                    Dim dtIsInvDet As New DataTable
                    dtIsInvDet.Load(drIsInvDet)

                    If dtIsInvDet.Rows.Count > 0 Then
                        lblid3.Text = dtIsInvDet.Rows(0)("ValueBase").ToString
                        lblid9.Text = Convert.ToDecimal(lblid16.Text) * dtIsInvDet.Rows(0)("ValueBase").ToString
                        lblid10.Text = Convert.ToDecimal(lblid16.Text) * dtIsInvDet.Rows(0)("ValueBase").ToString

                        lblid20.Text = "UNIT"

                        lblid21.Text = txtGST.Text
                        lblid22.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        lblid18.Text = Convert.ToDecimal(Convert.ToDecimal(lblid22.Text) * Convert.ToDecimal(lblid9.Text) * 0.01).ToString("N2")
                        lblid19.Text = Convert.ToDecimal(Convert.ToDecimal(lblid18.Text) + Convert.ToDecimal(lblid9.Text)).ToString("N2")

                        'lblid0.Text = lService.Trim
                    Else
                        lblAlert.Text = "INVALID INVOICE NUMBER"
                        lblid0.Text = ""

                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If
                    CalculatePriceGVB()
                    'CalculatePrice()
                    connIsInvDet.Close()
                    connIsInvDet.Dispose()
                    ''''''''''''''''''''''

                    'Dim IsServiceRecord As Boolean
                    'IsServiceRecord = False

                    'Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                    'connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'connIsServiceRecord.Open()

                    'Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                    'commandIsServiceRecord.CommandType = CommandType.Text
                    ''commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"
                    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lblid1.Text.Trim & "'"

                    'commandIsServiceRecord.Connection = connIsServiceRecord

                    'Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                    'Dim dtIsServiceRecord As New DataTable
                    'dtIsServiceRecord.Load(drIsServiceRecord)

                    'If dtIsServiceRecord.Rows.Count > 0 Then
                    '    If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                    '        lblid1.Text = ""
                    '        lblAlert.Text = "SERVICE RECORD NUMBER NOT FOUND"
                    '        updPnlMsg.Update()
                    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '        Exit Sub
                    '    Else
                    '        If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                    '            lblid1.Text = ""
                    '            lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
                    '            updPnlMsg.Update()
                    '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '            Exit Sub
                    '        End If

                    '        lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
                    '        lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                    '        lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                    '        lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                    '        lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
                    '        CalculatePrice()
                    '        updpnlBillingDetails.Update()
                    '    End If
                    'Else
                    '    lblid1.Text = ""
                    '    lblAlert.Text = "INVALID INVOICE NUMBER"
                    '    updPnlMsg.Update()
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub

                    'End If

                    'commandIsServiceRecord.Dispose()
                    'connIsServiceRecord.Close()
                    'connIsServiceRecord.Dispose()
                End If
                '''''''''''''''''''''''''''''''''''''
            End If


            'If lblid2.Text = "SERVICE" Then
            '    'lblid0.Text = 0.0
            '    lblid1.Text = 0.0
            '    lblid3.Text = 0.0
            '    'lblid8.Text = 0.0
            '    lblid9.Text = 0.0
            '    lblid10.Text = 0.0
            '    lblid4.Text = ""
            '    lblid5.Text = ""
            '    lblid6.Text = ""
            '    'lblid16.Text = ""
            '    lblid7.Text = ""


            '    ''''''''''''''''''''''
            '    Dim IsInvDet As Boolean
            '    IsInvDet = False
            '    Dim lService As String
            '    lService = ""

            '    Dim connIsInvDet As MySqlConnection = New MySqlConnection()

            '    connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsInvDet.Open()

            '    Dim commandIsInvDet As MySqlCommand = New MySqlCommand
            '    commandIsInvDet.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text & " and AccountId ='" & txtAccountIdBilling.Text & "'"
            '    commandIsInvDet.CommandText = "SELECT RefType from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
            '    'commandIsServiceRecord.CommandText = "SELECT InvoiceNumber, ValueBase, RefType, CostCode, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text.Trim & "'"

            '    commandIsInvDet.Connection = connIsInvDet

            '    Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
            '    Dim dtIsInvDet As New DataTable
            '    dtIsInvDet.Load(drIsInvDet)

            '    If dtIsInvDet.Rows.Count > 0 Then
            '        lService = dtIsInvDet.Rows(0)("RefType").ToString
            '    End If

            '    connIsInvDet.Close()
            '    connIsInvDet.Dispose()
            '    ''''''''''''''''''''''

            '    Dim IsServiceRecord As Boolean
            '    IsServiceRecord = False

            '    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

            '    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsServiceRecord.Open()

            '    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
            '    commandIsServiceRecord.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text & " and AccountId ='" & txtAccountIdBilling.Text & "'"
            '    'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where BillNo = '" & lblid0.Text.Trim & "'"
            '    commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"

            '    commandIsServiceRecord.Connection = connIsServiceRecord

            '    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
            '    Dim dtIsServiceRecord As New DataTable
            '    dtIsServiceRecord.Load(drIsServiceRecord)

            '    If dtIsServiceRecord.Rows.Count > 0 Then
            '        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("BillNo").ToString) = True Then
            '            lblid1.Text = ""
            '            lblAlert.Text = "INVOICE NUMBER NOT FOUND FOR THE SERVICE RECORD"
            '            updPnlMsg.Update()
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            Exit Sub

            '        Else
            '            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
            '                lblid1.Text = ""
            '                lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
            '                updPnlMsg.Update()
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If

            '            'If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("ContractNo").ToString.Trim) = True Then
            '            '    lblid1.Text = ""
            '            '    lblAlert.Text = "INVALID CONTRACT NUMBER"
            '            '    updPnlMsg.Update()
            '            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '    Exit Sub
            '            'Else
            '            '    Dim commandIsContract As MySqlCommand = New MySqlCommand
            '            '    commandIsContract.CommandType = CommandType.Text
            '            '    commandIsContract.CommandText = "SELECT ContractGroup from tblContract where ContractNo ='" & dtIsServiceRecord.Rows(0)("ContractNo").ToString & "'"
            '            '    commandIsContract.Connection = connIsServiceRecord
            '            '    Dim drIsContract As MySqlDataReader = commandIsContract.ExecuteReader()
            '            '    Dim dtIsContract As New DataTable
            '            '    dtIsContract.Load(drIsContract)

            '            '    If dtIsContract.Rows.Count > 0 Then
            '            '        If dtIsContract.Rows(0)("ContractGroup").ToString <> ddlContractGroupBilling.Text.Trim Then
            '            '            lblAlert.Text = "SERVICE RECORD [" & lblid1.Text & "] DOES NOT BELONG TO CONTRACT GROUP [" & ddlContractGroupBilling.Text & "]"
            '            '            updPnlMsg.Update()
            '            '            lblid1.Text = ""
            '            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '            Exit Sub
            '            '        End If
            '            '    Else
            '            '        lblid1.Text = ""
            '            '        lblAlert.Text = "INVALID CONTRACT GROUP"
            '            '        updPnlMsg.Update()
            '            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            '        Exit Sub
            '            '    End If
            '            'End If

            '            lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString
            '            lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            'lblid8.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
            '            'lblid4.Text = dtIsServiceRecord.Rows(0)("Status").ToString
            '            lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
            '            lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
            '            'lblid16.Text = dtIsServiceRecord.Rows(0)("ServiceBy").ToString
            '            lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
            '            CalculatePrice()
            '            updpnlBillingDetails.Update()

            '            '''''''''''''''''''''''
            '            'Dim commandOtherInfo As MySqlCommand = New MySqlCommand
            '            'If lblid4.Text = "P" Then
            '            '    commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
            '            'ElseIf lblid4.Text = "O" Then
            '            '    commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
            '            'End If
            '            'commandOtherInfo.Connection = connIsServiceRecord

            '            'Dim dr1 As MySqlDataReader = commandOtherInfo.ExecuteReader()
            '            'Dim dt1 As New DataTable
            '            'dt1.Load(dr1)

            '            'lblid11.Text = dt1.Rows(0)("Description").ToString()
            '            'lblid12.Text = dt1.Rows(0)("ProductCode").ToString()
            '            'lblid13.Text = dt1.Rows(0)("COACode").ToString()
            '            'lblid14.Text = dt1.Rows(0)("COADescription").ToString()
            '            'lblid15.Text = lblid1.Text & ", " & lblid7.Text & ", " & dtIsServiceRecord.Rows(0)("Notes").ToString()

            '            '''''''''''''''''''''''
            '            'End If
            '        End If
            '    Else
            '        lblid1.Text = ""
            '        lblAlert.Text = "INVALID INVOICE NUMBER"
            '        updPnlMsg.Update()
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub

            '    End If

            '    commandIsServiceRecord.Dispose()
            '    connIsServiceRecord.Close()
            '    connIsServiceRecord.Dispose()
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtInvoiceNoGVB_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    ''



    Protected Sub txtServiceRecordGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)


            Dim lblid0 As TextBox = CType(txt1.FindControl("txtInvoiceNoGV"), TextBox)
            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceStatusGV"), TextBox)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid6 As TextBox = CType(txt1.FindControl("txtLocationIdGV"), TextBox)
            Dim lblid7 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            'Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid11 As DropDownList = CType(txt1.FindControl("txtItemCodeGV"), DropDownList)
            Dim lblid12 As TextBox = CType(txt1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblid13 As TextBox = CType(txt1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid14 As TextBox = CType(txt1.FindControl("txtGLDescriptionGV"), TextBox)
            Dim lblid15 As TextBox = CType(txt1.FindControl("txtDescriptionGV"), TextBox)
            'Dim lblid16 As TextBox = CType(txt1.FindControl("txtServiceByGV"), TextBox)

            Dim lblid16 As TextBox = CType(txt1.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid17 As TextBox = CType(txt1.FindControl("txtGSTPercGV"), TextBox)

            lblAlert.Text = ""
            updPnlMsg.Update()


            lblid16.Text = txtGST.Text
            'lblid7.Text = txtTaxRatePct.Text
            lblid17.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

            '''''''''''''''''''''''''''''''''''
            If lblid2.Text = "SERVICE" Then
                'lblid0.Text = 0.0
                'lblid1.Text = 0.0
                lblid3.Text = 0.0
                'lblid8.Text = 0.0
                lblid9.Text = 0.0
                lblid10.Text = 0.0
                lblid4.Text = ""
                lblid5.Text = ""
                lblid6.Text = ""
                'lblid16.Text = ""
                lblid7.Text = ""

                Dim IsInvDet As Boolean
                IsInvDet = False
                Dim lService As String
                lService = ""

                Dim connIsInvDet As MySqlConnection = New MySqlConnection()

                connIsInvDet.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsInvDet.Open()

                Dim commandIsInvDet As MySqlCommand = New MySqlCommand
                commandIsInvDet.CommandType = CommandType.Text
                'commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where InvoiceNumber = '" & lblid0.Text.Trim & "'"
                commandIsInvDet.CommandText = "SELECT RefType, InvoiceNumber from tblsalesdetail where RefType = '" & lblid1.Text.Trim & "' order by rcno desc"
                commandIsInvDet.Connection = connIsInvDet

                Dim drIsInvDet As MySqlDataReader = commandIsInvDet.ExecuteReader()
                Dim dtIsInvDet As New DataTable
                dtIsInvDet.Load(drIsInvDet)

                If dtIsInvDet.Rows.Count > 0 Then
                    lService = dtIsInvDet.Rows(0)("InvoiceNumber").ToString
                    lblid0.Text = lService.Trim
                End If

                connIsInvDet.Close()
                connIsInvDet.Dispose()
                ''''''''''''''''''''''

                Dim IsServiceRecord As Boolean
                IsServiceRecord = False

                Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsServiceRecord.Open()

                Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                commandIsServiceRecord.CommandType = CommandType.Text
                'commandIsServiceRecord.CommandText = "SELECT BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lService.Trim & "'"
                commandIsServiceRecord.CommandText = "SELECT BillAmount,BillNo, BilledAmt, RecordNo, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where RecordNo = '" & lblid1.Text.Trim & "'"

                commandIsServiceRecord.Connection = connIsServiceRecord

                Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                Dim dtIsServiceRecord As New DataTable
                dtIsServiceRecord.Load(drIsServiceRecord)

                If dtIsServiceRecord.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                        lblid1.Text = ""
                        lblAlert.Text = "SERVICE RECORD NUMBER NOT FOUND"
                        updPnlMsg.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    Else
                        If ddlDocType.Text = "ARCN" Then
                            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                                lblid1.Text = ""
                                lblAlert.Text = "SERVICE RECORD HAS NOT BEEN BILLED"
                                updPnlMsg.Update()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If
                        ElseIf ddlDocType.Text = "ARDN" Then
                            If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("BilledAmt").ToString) = 0.0 Then
                                lblid3.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                                lblid9.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                                lblid10.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                                GoTo populateOtherInfo
                            End If


                        End If
                        lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                        lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                        lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
populateOtherInfo:

                        lblid1.Text = dtIsServiceRecord.Rows(0)("RecordNo").ToString

                       

                        'If ddlDocType.Text = "CREDIT NOTE" Then
                        '    lblid3.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                        '    lblid9.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                        '    lblid10.Text = dtIsServiceRecord.Rows(0)("BilledAmt").ToString
                        'Else
                        '    lblid3.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                        '    lblid9.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                        '    lblid10.Text = dtIsServiceRecord.Rows(0)("BillAmount").ToString
                        'End If
                    
                        lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                        lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                        lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")
                        CalculatePrice()
                        updpnlBillingDetails.Update()
                    End If
                Else
                    lblid1.Text = ""
                    lblAlert.Text = "INVALID INVOICE NUMBER"
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub

                End If

                commandIsServiceRecord.Dispose()
                connIsServiceRecord.Close()
                connIsServiceRecord.Dispose()
            End If

        
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtInvoiceNoGV_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton8_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton8.Click
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNo"
        Try

            If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If

                SqlDSClient.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelCN.Update()
            ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If
                'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

                SqlDSContractNo.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelCN.Update()
            End If

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ImageButton8_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub txtPopUpContractNo_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpContractNo.TextChanged
        Try
            If txtPopUpContractNo.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter ContractNo/CustName", "str")
            Else
                SqlDSContractNo.SelectCommand = "SELECT  ContractNo, CustName from tblContract where (ContractNo like '%" & txtPopUpContractNo.Text & "%' or CustName like '%" & txtPopUpContractNo.Text & "%') and  (Status = 'O' or Status = 'P') order by ContractNo"


                'txtImportService.Text = SqlDSClient.SelectCommand
                SqlDSContractNo.DataBind()
                gvPopUpContractNo.DataBind()
                mdlPopUpContractNo.Show()
                txtIsPopup.Text = "ContractNo"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "txtPopUpContractNo_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub gvPopUpContractNo_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvPopUpContractNo.SelectedIndexChanged

        Try

      
        txtIsPopup.Text = ""
        If (gvPopUpContractNo.SelectedRow.Cells(1).Text = "&nbsp;") Then
            ddlContractNo.Text = ""
        Else
            ddlContractNo.Text = gvPopUpContractNo.SelectedRow.Cells(1).Text.Trim
        End If

        txtIsPopup.Text = "N"
        mdlPopUpContractNo.Hide()
            mdlImportServices.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "gvPopUpContractNo_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub gvPopUpContractNo_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvPopUpContractNo.PageIndexChanging
        Try
            gvPopUpContractNo.PageIndex = e.NewPageIndex

            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            End If

            SqlDSClient.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelCN.Update()

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "gvPopUpContractNo_PageIndexChanging", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton10_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton10.Click
        Try
            'txtPopUpContractNo.Text = ""
            'SqlDSContractNo.SelectCommand = "SELECT ContractNo, CustName From tblContract where (Status = 'O' or Status = 'P')"
            'SqlDSContractNo.DataBind()
            'gvPopUpContractNo.DataBind()
            'mdlPopUpContractNo.Show()

            'If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
            'txtPopUpContractNo.Text = ddlContractNo.Text
            'txtIsPopup.Text = ""
            txtPopUpContractNo.Text = ""
            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P')  order by ContractNo"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            End If

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelCN.Update()
            mdlPopUpContractNo.Show()
            'ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
            'txtPopUpContractNo.Text = ddlContractNo.Text

            'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            'Else
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            'End If
            ''SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            'SqlDSContractNo.DataBind()
            'gvPopUpContractNo.DataBind()
            'updPanelInvoice.Update()
            'End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ImageButton10_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Public Sub InsertIntoTblWebEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception

        End Try
    End Sub

    Public Sub InsertIntoTblEInvoiceEventLog(events As String, errorMsg As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblEInvoiceEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", txtCNNo.Text)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", Session("UserID"))
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub btnFilter_Click(sender As Object, e As EventArgs) Handles btnFilter.Click
        mdlPopupSearch.Show()
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        Try
            lblMessage.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""

            Dim strsql As String

            ''strsql = SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, 
            'strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            ''strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            'strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            'strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter,"
            'strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno "
            'strsql = strsql & " from tblSales where 1=1 "


            strsql = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman  Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, LedgerCode, LedgerName, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, rcno, BillSchedule, PrintCounter,TaxIdentificationNo,SalesTaxRegistrationNo FROM tblsales WHERE 1=1   "

            'txtCondition.Text = " and (DocType='ARCN' or DocType='ARDN')  "

            txtCondition.Text = " and (DocType='ARCN' or DocType='ARDN')  "
            'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                'txtCondition.Text = txtCondition.Text + " and Location = '" & txtLocation.Text & "'"
                txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            End If


            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch0.Items
                If item.Selected Then
                    YrStrList.Add("'" & item.Value & "'")
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())


            txtCondition.Text = txtCondition.Text & " and PostStatus in (" & (YrStr) & ") "


            If String.IsNullOrEmpty(txtSearchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and InvoiceNumber like '%" & txtSearchInvoiceNo.Text.Trim + "%'"
            End If


            If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
                'strsql = strsql & " and (AccountId like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"

            End If

            If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and CustName like ""%" & txtSearchClientName.Text.Trim & "%"""
            End If


            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and OurRef like ""%" & txtSearchOurRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and YourRef like ""%" & txtSearchYourRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and PoNo like ""%" & txtSearchPONo.Text.Trim & "%"""
            End If

            'If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
            '    txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            'End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If


            If (ddlSearchSalesman.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and StaffCode like '%" & ddlSearchSalesman.Text.Trim + "%'"
            End If


            If rdbSearchPaidStatus0.SelectedItem.Value = "Fully Paid" Then
                txtCondition.Text = txtCondition.Text + " and BalanceBase = 0 and ValueBase <> 0 "
            ElseIf rdbSearchPaidStatus0.SelectedItem.Value = "O/S" Then
                txtCondition.Text = txtCondition.Text + " and BalanceBase <>  0"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If String.IsNullOrEmpty(txtSearchEditEndFrom.Text) = False And txtSearchEditEndFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and LastModifiedOn >= '" + Convert.ToDateTime(txtSearchEditEndFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEditEndTo.Text) = False And txtSearchEditEndTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and LastModifiedOn <= '" + Convert.ToDateTime(txtSearchEditEndTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearchComments.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and Comments like '%" & txtSearchComments.Text.Trim & "%'"
            End If

            txtOrderBy.Text = " order by rcno desc, custname "

            strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            txt.Text = strsql
            'txtComments.Text = strsql
            SQLDSCN.SelectCommand = strsql
            SQLDSCN.DataBind()
            GridView1.DataBind()

            CalculateTotal()

            ''''''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


                MakeMeNull()
                MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"

                    If String.IsNullOrEmpty(txtRcnoSelected.Text.Trim) = False Then
                        If txtRcnoSelected.Text > 0 Then
                            txtRcno.Text = txtRcnoSelected.Text
                            txtRcnoSelected.Text = 0
                        Else
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                        End If
                    Else
                        txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                    End If

                    'txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0
                    updPanelSave.Update()
                    'UpdatePanel3.Update()

                    'GridView1_SelectedIndexChanged(sender, e)
                Else
                    MakeMeNull()
                    MakeMeNullBillingDetails()
                End If
            End If

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '+ "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '''''''''''''''''''''''''''''


            updPnlMsg.Update()
            updPanelCN.Update()
            'SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'GridSelected = "SQLDSContract"



            txtSearchAccountID.Text = ""
            txtSearchClientName.Text = ""
            'txtSearchAddress.Text = ""
            'txtSearchContact.Text = ""
            'txtSearchContactNo.Text = ""
            'txtSearchPostal.Text = ""

            txtSearchOurRef.Text = ""
            txtSearchYourRef.Text = ""

            ddlSearchSalesman.ClearSelection()
            'ddlSearchScheduler.ClearSelection()
            'ddlSearchStatus.ClearSelection()
            'ddlSearchContractGroup.ClearSelection()
            'ddlSearchCompanyGroup.ClearSelection()
            'ddlSearchLocationGroup.ClearSelection()
            'ddlSearchRenewalStatus.ClearSelection()
            'ddlSearchInChargeId.ClearSelection()

            txtInvoiceDateSearchFrom.Text = ""
            txtInvoiceDateSearchTo.Text = ""
            'txtSearchServiceStartFrom.Text = ""
            'txtSearchServiceStartTo.Text = ""
            'txtSearchServiceEndFrom.Text = ""
            'txtSearchServiceEndTo.Text = ""
            txtSearchEditEndFrom.Text = ""
            txtSearchEditEndTo.Text = ""

            'txtSearchStartDateFrom.Text = ""
            'txtSearchStartDateTo.Text = ""

            'txtSearchEndDateFrom.Text = ""
            'txtSearchEndDateTo.Text = ""
            txtSearchEntryDateFrom.Text = ""
            txtSearchEntryDateTo.Text = ""

        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "btnSearch_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient2_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient2.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = ""
        txtClientFrom.Text = ""

        txtClientFrom.Text = "InvoiceFilter"
        txtSearch.Text = "InvoiceFilter"
        Try

            If String.IsNullOrEmpty(txtSearchAccountID.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtSearchAccountID.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text
                'UpdatePanel1.Update()


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelCN.Update()
            Else
                txtPopUpClient.Text = ""


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelCN.Update()
            End If

            'txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
            'txtImportService.Text = SqlDSClient.SelectCommand
            'mdlPopupSearch.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClient2_Click", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Public Sub FindLocation()
        Dim IsLock As String
        IsLock = ""

        Dim connLocation As MySqlConnection = New MySqlConnection()

        connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connLocation.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT LocationID, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
        command1.Connection = connLocation

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtLocation.Text = dt.Rows(0)("LocationID").ToString
        End If

        connLocation.Close()
        connLocation.Dispose()
        command1.Dispose()
        dt.Dispose()
    End Sub


    Protected Sub txtGST_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtGST.SelectedIndexChanged

        mdlUpdateGSTCode.Show()

       
    End Sub

    Protected Sub grvBillingDetails_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvBillingDetails.SelectedIndexChanged

    End Sub

    Protected Sub btnMultiPrint_Click(sender As Object, e As EventArgs) Handles btnMultiPrint.Click
        Dim strsql As String
        strsql = ""

        strsql = strsql + txt.Text
        'txt.Text = strsql

        SqlDSMultiPrint.SelectCommand = strsql

        'SqlDSMultiPrint.SelectCommand = txt.Text


        SqlDSMultiPrint.DataBind()
        grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
        grdViewMultiPrint.DataBind()

        mdlPopupMultiPrint.Show()
    End Sub

    Protected Sub txtClientNameSearch_TextChanged(sender As Object, e As EventArgs) Handles txtClientNameSearch.TextChanged

    End Sub

    Protected Sub chkShowUnprinted_CheckedChanged(sender As Object, e As EventArgs) Handles chkShowUnprinted.CheckedChanged
        Dim strsql As String
        strsql = ""
        'If chkShowUnprinted.Checked = True Then
        '    strsql = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule FROM tblsales WHERE 1=1  "
        '    strsql = strsql + " and (DocType ='ARIN') AND PrintCounter > 0 AND  (PostStatus = 'O' OR PostStatus = 'P') and GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) "
        '    strsql = strsql + " ORDER BY Rcno DESC, CustName"
        '    strsql = strsql + " limit " & txtLimit.Text
        'Else
        '    'strsql = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule FROM tblsales WHERE 1=1  "
        '    'strsql = strsql + " and (DocType ='ARIN') AND ((PrintCounter = '0') or (PrintCounter is null) or (PrintCounter = '')) AND (PostStatus = 'O' OR PostStatus = 'P')  "
        '    'strsql = strsql + " ORDER BY Rcno DESC, CustName"
        '    'strsql = strsql + " limit " & txtLimit.Text

        '    strsql = txt.Text

        'End If

        '''''''''''''''''''

        strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
        'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
        strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
        strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter,"
        strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
        strsql = strsql & " from tblSales where 1=1 "

        strsql = strsql & " and ((DocType='ARCN') or (DocType='ARDN'))  "

        'If chkShowUnprinted.Checked = False Then

        '    strsql = strsql & txtCondition.Text & " AND PrintCounter > 0 "

        'Else

        '    strsql = strsql & txtCondition.Text & " AND ((PrintCounter = '0') or (PrintCounter is null) or (PrintCounter = ''))  "
        'End If


        strsql = strsql + txtOrderBy.Text + " limit " & txtLimit.Text


        ''''''''''''''''''


        SqlDSMultiPrint.SelectCommand = strsql
        grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
        grdViewMultiPrint.DataBind()

        mdlPopupMultiPrint.Show()
    End Sub

    Protected Sub btnPrintMultiPrint_Click(sender As Object, e As EventArgs) Handles btnPrintMultiPrint.Click
        lblAlert.Text = ""
        Dim invcheck As String = ""
        Session("PrintType") = "MultiPrint"

        Session("gridsqlinvoiceprint") = txt.Text
        Session("servicefrom") = "serviceprint"
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewMultiPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewMultiPrint.Rows

                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectMultiPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() + """")

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'Dim conn As MySqlConnection = New MySqlConnection()

                        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        'conn.Open()

                        'Dim sql As String
                        'sql = ""
                        'sql = "Select PrintCounter from tblSales where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'Dim command1 As MySqlCommand = New MySqlCommand
                        'command1.CommandType = CommandType.Text
                        'command1.CommandText = sql
                        'command1.Connection = conn

                        'Dim dr As MySqlDataReader = command1.ExecuteReader()

                        'Dim dt As New DataTable
                        'dt.Load(dr)

                        'Dim lPrincounter As Integer
                        'lPrincounter = 0

                        'If dt.Rows.Count > 0 Then
                        '    If dt.Rows(0)("PrintCounter").ToString <> "" Then : lPrincounter = Convert.ToInt32(dt.Rows(0)("PrintCounter").ToString) : End If
                        'End If

                        'command1.Dispose()


                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'lPrincounter = lPrincounter + 1

                        'Dim qry As String
                        'qry = ""
                        ''Dim conn As MySqlConnection = New MySqlConnection()
                        'Dim command As MySqlCommand = New MySqlCommand
                        'command.CommandType = CommandType.Text

                        ''conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        ''conn.Open()

                        'qry = "Update tblSales set    "
                        ''qry = qry + " PrintCounter = @PrintCounter, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
                        'qry = qry + " PrintCounter = @PrintCounter "
                        'qry = qry + " where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'command.CommandText = qry
                        'command.Parameters.Clear()
                        ''command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        'command.Parameters.AddWithValue("@PrintCounter", lPrincounter)
                        ''command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        ''command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Connection = conn
                        'command.ExecuteNonQuery()

                        'conn.Close()
                        'conn.Dispose()
                        'command.Dispose()
                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        'SQLDSInvoice.SelectCommand = txt.Text
                        'GridView1.DataSourceID = "SQLDSInvoice"
                        'GridView1.DataBind()
                        '''''''''''''''''''''''''''''''''''''''''''''''''''

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            Else
                lblAlert.Text = "SELECT RECORD TO PRINT"
                Return

            End If
            Session("RecordNo") = invcheck

        End If
        'Session("InvoiceNo") = "CN/DN"


        'Session.Add("RecordNo", txtCNNo.Text)
        Session.Add("Title", ddlDocType.SelectedItem.Text)
        mdlConfirmMultiPrint.Show()


        ' btn.Attributes.Add("onclick")
        ''mdlPopupPrint.Show()
    End Sub

  
   
    Protected Sub grvServiceRecDetails_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvServiceRecDetails.SelectedIndexChanged

    End Sub

    Protected Sub btnStatusSearch_Click1(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    YrStrList.Add(item.Value)
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            txtSearch1Status.Text = YrStr
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnEditBillingNameSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingNameSave.Click
        Try

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " CustName = @CustName, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustName", txtBillingNameEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            SQLDSCN.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSCN"
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtInvoiceNo.Text, "EDITBILLINGNAME", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, txtAccountName.Text + " - " + txtBillingNameEdit.Text.ToUpper, txtRcno.Text)
            txtAccountName.Text = txtBillingNameEdit.Text.ToUpper

            'InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnEditBillingNameSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditBillingDetailsSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingDetailsSave.Click
        Try

            If String.IsNullOrEmpty(txtBillAddressEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILLING ADDRESS (1ST LINE)"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtBillCountryEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILL COUNTRY"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " CustAttention = @CustAttention,   "
            qry = qry + " CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding, CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustAttention", txtContactPersonEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddress1", txtBillAddressEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuildingEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddStreet", txtBillStreetEdit.Text.ToUpper())

            command.Parameters.AddWithValue("@CustAddCity", txtBillCityEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddState", txtBillStateEdit.Text.ToUpper())

            command.Parameters.AddWithValue("@CustAddPostal", txtBillPostalEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddCountry", txtBillCountryEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtContactPerson.Text = txtContactPersonEdit.Text.ToUpper()
            txtBillAddress.Text = txtBillAddressEdit.Text.ToUpper()
            txtBillBuilding.Text = txtBillBuildingEdit.Text.ToUpper()
            txtBillStreet.Text = txtBillStreetEdit.Text.ToUpper()

            txtBillCity.Text = txtBillCityEdit.Text.ToUpper()
            txtBillState.Text = txtBillStateEdit.Text.ToUpper()

            txtBillPostal.Text = txtBillPostalEdit.Text.ToUpper()
            txtBillCountry.Text = txtBillCountryEdit.Text.ToUpper()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CNOTE", txtInvoiceNo.Text, "EDITBILLINGDETAILS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            'InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnEditBillingDetailsSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditBillingDetails_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingDetails.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingDetails.Show()
    End Sub

    Protected Sub btnEditBillingName_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingName.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingName.Show()
    End Sub

    Private Sub UpdateGStCode()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then

                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTPercGV"), TextBox)

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)

                        TextBoxTaxCode.Text = txtGST.Text
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        TextBoxGSTAmt.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) * Convert.ToDecimal(TextBoxGSTPerc.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then

                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)
                        Dim TextBoxGSTPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTPercGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0.00"
                        End If

                        TextBoxTaxCodeGVB.Text = txtGST.Text
                        TextBoxGSTPercGVB.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        'TextBoxGSTAmtGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) * Convert.ToDecimal(TextBoxGSTPercGVB.Text) * 0.01).ToString("N2")
                        'TextBoxTotalPriceWithGSTGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)).ToString("N2")
                        TextBoxGSTAmtGVB.Text = (Convert.ToDecimal(TextBoxTotalPriceGVB.Text) * Convert.ToDecimal(TextBoxGSTPercGVB.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGSTGVB.Text = (Convert.ToDecimal(TextBoxTotalPriceGVB.Text) + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)).ToString("N2")



                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        '    GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                        '    If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                        '        lGSTadjustedRecNoNew = j
                        '    End If
                        'End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        'GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If

            txtTotalGSTAmt.Text = (Convert.ToDecimal(GSTGV + GSTGVBNew)).ToString("N2")
            txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithDiscAmt.Text) + txtTotalGSTAmt.Text).ToString("N2")

            ''totalrecords = totalrecords + gvbRecords

            '' '' end of GVB
            ' ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ' ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            ''GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            'GSTCalc = GSTGVB + GSTGV
            'GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If

            '    txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
            '    txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            'End If

            ''''''''''''''''''''''''''''


            'UpdatePanel3.Update()

            UpdatePanel2.Update()
            'UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FUNCTION UpdateGStCode", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnConfirmYesUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmYesUpdateGSTCode.Click
        Dim sql As String
        sql = ""
        sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtGST.Text & "'"

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand
        command1.CommandType = CommandType.Text
        command1.CommandText = sql
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()

        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            FindGSTPct()
            If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString : End If
            txtCNGSTAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtCNNetAmount.Text = (Convert.ToDecimal(txtCNAmount.Text) + Convert.ToDecimal(txtCNGSTAmount.Text)).ToString("N2")
        End If

        txtGSTSelected.Text = txtGST.Text

        UpdateGStCode()

        conn.Close()
        conn.Dispose()
        command1.Dispose()
        dt.Dispose()
        dr.Close()
    End Sub

    Protected Sub btnConfirmNoUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmNoUpdateGSTCode.Click
        txtGST.Text = txtGSTSelected.Text
    End Sub


    Public Sub UpdateCNBal(InvNo As String)
        Try


            Dim conn As MySqlConnection = New MySqlConnection()
            '''''''''''''''''''''''''''''''''''''''

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '14.05.23
            Dim commandUpdateCNBalance As MySqlCommand = New MySqlCommand
            commandUpdateCNBalance.CommandType = CommandType.StoredProcedure
            commandUpdateCNBalance.CommandText = "UpdateCNRecalculate"
            commandUpdateCNBalance.Parameters.Clear()
            commandUpdateCNBalance.Parameters.AddWithValue("@pr_InvoiceNumber", InvNo.Trim)
            commandUpdateCNBalance.Connection = conn
            commandUpdateCNBalance.ExecuteScalar()

            '14.05.23



            'Dim qryAR As String
            'Dim commandAR As MySqlCommand = New MySqlCommand
            'commandAR.CommandType = CommandType.Text


            ''Start:Loop thru' Credit values

            'Dim commandValues As MySqlCommand = New MySqlCommand

            'commandValues.CommandType = CommandType.Text
            'commandValues.CommandText = "SELECT SourceInvoice, RefType, ValueBase, SubCode  FROM tblSalesDetail where InvoiceNumber ='" & InvNo.Trim & "'"
            'commandValues.Connection = conn

            'Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            'Dim dtValues As New DataTable
            'dtValues.Load(drValues)

            'Dim lTotalReceiptAmt As Decimal
            'Dim lInvoiceAmt As Decimal
            ''Dim lReceptAmtAdjusted As Decimal

            'lTotalReceiptAmt = 0.0
            'lInvoiceAmt = 0.0

            ' '''''''''''''''''''''''''''''''''''''''
            'Dim cmdUpdateCNBalance As MySqlCommand = New MySqlCommand
            'cmdUpdateCNBalance.CommandType = CommandType.Text

            ' ''cmdUpdateCNBalance.CommandText = "UPDATE tblSales SET BalanceBase = " & Convert.ToDecimal(txtCNNetAmount.Text) & " - (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblSalesDetail A  " & _
            ' ''      " WHERE A.SubCode = 'SERVICE' AND InvoiceNumber = '" & InvNo & "') WHERE PostStatus = 'P' and InvoiceNumber = '" & InvNo & "'"

            'cmdUpdateCNBalance.CommandText = "UPDATE tblSales SET BalanceBase = " & Convert.ToDecimal(txtCNNetAmount.Text) & " - (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblSalesDetail A  " & _
            ' " WHERE  InvoiceNumber = '" & InvNo & "' and ((SourceInvoice is not null) and (SourceInvoice <>''))) WHERE PostStatus = 'P' and InvoiceNumber = '" & InvNo & "'"

            'cmdUpdateCNBalance.Connection = conn
            'cmdUpdateCNBalance.ExecuteNonQuery()
            'cmdUpdateCNBalance.Dispose()

            ' '''''''''''''''''''''''''''''''''''''''

            ''GridView1.DataBind()


            'commandAR.Dispose()
            'cmdUpdateCNBalance.Dispose()
            'commandValues.Dispose()

            commandUpdateCNBalance.Dispose()
            conn.Close()
            conn.Dispose()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "UpdateCNBal", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Protected Sub btnRecalculate_Click(sender As Object, e As EventArgs) Handles btnRecalculate.Click
        Try
            UpdateCNBal(txtCNNo.Text.Trim)

            SQLDSCN.SelectCommand = txt.Text
            SQLDSCN.DataBind()
            GridView1.DataSourceID = "SQLDSCN"
            GridView1.DataBind()
            updPnlSearch.Update()

            'SQLDSInvoice.SelectCommand = txt.Text
            'SQLDSInvoice.DataBind()
            'GridView1.DataBind()
            'updPanelInvoice.Update()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "ReCalculate", ex.Message.ToString, "")
            Exit Sub
        End Try



        '===============================
    End Sub

    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try


            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno

            GridView1.SelectedIndex = rowindex1

            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(5).Text
            txtLogDocNo.Text = strRecordNo
         
            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()

            updPanelCN.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, txtRcno.Text)

        End Try

    End Sub

    Protected Sub grdViewEditHistory_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdViewEditHistory.PageIndexChanging
        Try
            grdViewEditHistory.PageIndex = e.NewPageIndex

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & txtLogDocNo.Text & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()
            mdlViewEditHistory.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "GridView1_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub UpdateTaxCodeRate()
        Try
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If Convert.ToDateTime(txtCNDate.Text).ToString("yyyy-MM-dd") < "2024-04-01" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST.Text = "NA"
                    txtGST1.Text = "0.00"
                    txtGSTSelected.Text = txtGST.Text
                    GoTo UpdateValues
                    'Exit Sub
                    'FindDefaultTaxCodeandPctFromPeriod(txtReceiptPeriod.Text)
                End If
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            'conn.Close()
            'Dim Query As String

            Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
            commandServiceRecordMasterSetup.CommandType = CommandType.Text
            commandServiceRecordMasterSetup.CommandText = "SELECT  DefaultTaxCode, CorporateApplyTax, ResidentialApplyTax FROM tblservicerecordmastersetup"
            commandServiceRecordMasterSetup.Connection = conn

            Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
            Dim dtServiceRecordMasterSetup As New DataTable
            dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

            txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode").ToString
            txtApplyCorporateTax.Text = dtServiceRecordMasterSetup.Rows(0)("CorporateApplyTax").ToString
            txtApplyResidentialTax.Text = dtServiceRecordMasterSetup.Rows(0)("ResidentialApplyTax").ToString


            If ddlContactType.Text = "COMPANY" Or ddlContactType.Text = "CORPORATE" Then
                If txtApplyCorporateTax.Text = "0" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST.Text = "NA"
                    txtGST1.Text = "0.00"
                    GoTo UpdateValues
                    'Exit Sub
                End If
            End If

            If ddlContactType.Text = "PERSON" Or ddlContactType.Text = "RESIDENTIAL" Then
                If txtApplyResidentialTax.Text = "0" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST1.Text = "0.00"

                    txtGST.Text = txtDefaultTaxCode.Text

                    txtGSTSelected.Text = txtGST.Text
                    txtTaxRatePct.Text = "0.00"
                    GoTo UpdateValues
                    'Exit Sub
                End If
            End If

            'Start : From Contract Group Master

            If ddlContractGroupBilling.SelectedIndex > 0 Then
                Dim commandContractGroup As MySqlCommand = New MySqlCommand
                commandContractGroup.CommandType = CommandType.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ddlContractGroupBilling.Text.Trim & "'"
                Else
                    commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ddlContractGroupBilling.Text.Trim & "'"
                End If

                commandContractGroup.Connection = conn

                Dim drcommandContractGroup As MySqlDataReader = commandContractGroup.ExecuteReader()
                Dim dtcommandContractGroup As New DataTable
                dtcommandContractGroup.Load(drcommandContractGroup)

                If String.IsNullOrEmpty(dtcommandContractGroup.Rows(0)("TaxType").ToString) = False Then
                    txtDefaultTaxCode.Text = dtcommandContractGroup.Rows(0)("TaxType").ToString
                    'Else
                    '    FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
                End If
            End If

            'End:  From Contract Group Master


            Dim sql As String
            sql = ""

            txtGST.Text = txtDefaultTaxCode.Text

            txtGSTSelected.Text = txtGST.Text

            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString
            End If



UpdateValues:

            UpdateGStCode()

            CalculateTotalPrice()

            AdjustGStAmount()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "UpdateTaxCodeRate", ex.Message.ToString, ddlContractGroupBilling.Text)

            Exit Sub
        End Try
    End Sub

    Private Sub FindDefaultTaxCodeandPctFromPeriod(BillingPeriod As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim commandPeriod As MySqlCommand = New MySqlCommand
            commandPeriod.CommandType = CommandType.Text

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                commandPeriod.CommandText = "SELECT GStType, GSTRate FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                commandPeriod.CommandText = "SELECT GStType, GSTRate FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

            commandPeriod.Connection = conn

            Dim drPeriod As MySqlDataReader = commandPeriod.ExecuteReader()
            Dim dtPeriod As New DataTable
            dtPeriod.Load(drPeriod)

            If String.IsNullOrEmpty(dtPeriod.Rows(0)("GStType").ToString) = False Then
                txtDefaultTaxCode.Text = dtPeriod.Rows(0)("GStType").ToString
            End If
            'txtDefaultTaxCode.Text = dtPeriod.Rows(0)("GStType").ToString


            ''''''''''''''''''''''''''''''''''''''''''

            Dim sql As String
            sql = ""


            'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
            txtGST.Text = txtDefaultTaxCode.Text

            'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
            'txtGST.Text = "ZR"


            txtGSTSelected.Text = txtGST.Text

            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FindDefaultTaxCodeandPctFromPeriod", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlContactType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlContactType.SelectedIndexChanged
        UpdateTaxCodeRate()
    End Sub

    Protected Sub ddlContractGroupBilling_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlContractGroupBilling.SelectedIndexChanged
        UpdateTaxCodeRate()
    End Sub

    Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If String.IsNullOrEmpty(lblFileUploadCNNo.Text) Then
                lblAlert.Text = "SELECT CN/DN TO UPLOAD FILE"
                Return

            End If

            If String.IsNullOrEmpty(txtFileDescription.Text) Then
                lblAlert.Text = "ENTER FILE DESCRIPTION TO UPLOAD FILE"
                Exit Sub

            End If
            InsertIntoTblWebEventLog("CN - UPLOAD1", "BTNUPLOAD", FileUpload1.HasFile.ToString, txtCNNo.Text)

            If FileUpload1.HasFile Then

                Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
                Dim ext As String = Path.GetExtension(fileName)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                InsertIntoTblWebEventLog("CN - UPLOAD2", "BTNUPLOAD", ext, txtCNNo.Text)

                If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then
                    Dim strFilePath As String = Server.MapPath("~/Uploads/Accounts/CN/")

                    strFilePath = strFilePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")


                    If File.Exists(strFilePath + txtCNNo.Text + "_" + fileName) Then

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtCNNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            '  MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                            lblAlert.Text = "FILE ALREADY EXISTS"
                            conn.Close()

                            Exit Sub
                        End If
                    Else
                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtCNNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text

                            command2.CommandText = "delete from fileupload where filenamelink='" + txtCNNo.Text + "_" + fileName + "'"

                            command2.Connection = conn

                            command2.ExecuteNonQuery()
                        End If
                    End If
                    FileUpload1.PostedFile.SaveAs(strFilePath + txtCNNo.Text + "_" + fileName)

                    'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
                    'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
                    'Dim files As List(Of ListItem) = New List(Of ListItem)

                    'For Each foundFile As FileInfo In filesInDir
                    '    Dim fullName As String = foundFile.FullName
                    '    files.Add(New ListItem(foundFile.Name))
                    'Next
                    ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                    ''For Each filePath As String In filePaths
                    ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                    ''Next

                    'ADD FILE UPLOAD INFORMATION TO DATABASE INORDER TO STORE FILES WITH DESCRIPTION - 20170930

                    InsertIntoTblWebEventLog("CN - UPLOAD3", "BTNUPLOAD", ext, txtCNNo.Text)


                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblfileupload(FileGroup,FileRef,FileName,FileDescription,FileType,FileNameLink,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                    qry = qry + "VALUES(@FileGroup,@FileRef,@FileName,@FileDescription,@FileType,@FileNameLink,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"


                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        If ddlDocType.Text = "ARCN" Then
                            command.Parameters.AddWithValue("@FileGroup", "ARCN")
                        Else
                            command.Parameters.AddWithValue("@FileGroup", "ARDN")

                        End If
                        command.Parameters.AddWithValue("@FileRef", txtCNNo.Text)
                        command.Parameters.AddWithValue("@FileName", fileName.ToUpper)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtCNNo.Text + "_" + fileName.ToUpper)

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        If ddlDocType.Text = "ARCN" Then
                            command.Parameters.AddWithValue("@FileGroup", "ARCN")
                        Else
                            command.Parameters.AddWithValue("@FileGroup", "ARDN")

                        End If
                        command.Parameters.AddWithValue("@FileRef", txtCNNo.Text)
                        command.Parameters.AddWithValue("@FileName", fileName)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtCNNo.Text + "_" + fileName)

                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    conn.Close()
                    conn.Dispose()
                    command.Dispose()

                    InsertIntoTblWebEventLog("CN - UPLOAD4", "BTNUPLOAD", ext, txtCNNo.Text)


                    SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtCNNo.Text + "'"
                    gvUpload.DataSourceID = "SqlDSUpload"
                    gvUpload.DataBind()
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtCNNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", txtCNNo.Text + "_" + fileName, txtCNNo.Text)

                    '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtAccountID.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtAccountID.Text + "_" + fileName)

                    txtFileDescription.Text = ""

                    lblMessage.Text = "FILE UPLOADED"
                    lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
                    InsertIntoTblWebEventLog("CN - UPLOAD5", "BTNUPLOAD", ext, txtCNNo.Text)

                Else
                    lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
                    Return
                End If
            Else
                lblAlert.Text = "SELECT FILE TO UPLOAD"
            End If
            '  Response.Redirect(Request.Url.AbsoluteUri)
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "Upload File", ex.Message.ToString, txtCNNo.Text + "-" + FileUpload1.PostedFile.FileName)
        End Try
    End Sub

    'Protected Sub btnEditFileDesc_Click(sender As Object, e As EventArgs)
    '    Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

    '    Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '    Dim rowindex1 As Integer = xrow1.RowIndex



    '    Dim rcnofile = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
    '    txtfilercno.Text = rcnofile.ToString

    '    lblMessage.Text = ""
    '    lblAlert.Text = ""

    '    txtEditFileName.Text = GridView1.Rows(rowindex1).Cells(0).Text
    '    txtEditFileDescription.Text = GridView1.Rows(rowindex1).Cells(1).Text

    '    mdlPopupEditFileDesc.Show()


    'End Sub


    Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            filePath = Server.MapPath("~/Uploads/Accounts/CN/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            Response.ContentType = ContentType
            Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
            Response.WriteFile(filePath)
            Response.End()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "DownloadFile", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub DeleteFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            txtFileLink.Text = filePath

            filePath = Server.MapPath("~/Uploads/Accounts/CN/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            txtDeleteUploadedFile.Text = filePath
            iframeid.Attributes.Add("src", "about:blank")

            lblQuery.Text = "Are you sure to DELETE the File? <br><br> File Name : " + txtFileLink.Text

            mdlPopupDeleteUploadedFile.Show()

            'File.Delete(filePath)
            ''  Response.Redirect(Request.Url.AbsoluteUri)
            'lblMessage.Text = "FILE DELETED"
            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "DeleteFile", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub PreviewFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            If ConfigurationManager.AppSettings("DomainName") = "MALAYSIA PRE-PRODUCTION" Then
                Dim filepath1 As String = Server.MapPath("Uploads\Accounts\CN\") + txtFileLink.Text
                Dim filepath2 As String = "E:\WEBSITE FILES\MalaysiaPreproduction\Uploads\Accounts\CN\" + txtFileLink.Text

                File.Copy(filepath1, filepath2)

            End If



            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Dim ext As String = Path.GetExtension(filePath)
            filePath = "Uploads/Accounts/CN/" + filePath
            ext = ext.ToLower

            '  filePath = Server.MapPath("~/Uploads/") + filePath
            '    frmWord.Attributes["src"] = http://localhost/MyApp/resume.doc;
            ' iframeid.Attributes.Add("src", Server.HtmlDecode("D:\1_CWBInfotech\A_Sitapest\Program\Sitapest\Uploads\10000145_photo (1).JPG"))
            If ext = ".doc" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Then
                Dim strFilePath As String = Server.MapPath("Uploads\Accounts\CN\")
                Dim strFile As String = CType(sender, LinkButton).CommandArgument
                Dim File As String() = strFile.Split("."c)
                Dim strExtension As String = ext
                Dim strUrl As String = "http://" + Request.Url.Authority + "/WordinIFrame/ConvertedLocation/"

                Dim Filename As String = strFilePath + strFile.Split("."c)(0) & Convert.ToString(".html")

                If System.IO.File.Exists(Filename) Then
                    System.IO.File.Delete(Filename)
                End If

                If ext = ".doc" Or ext = ".docx" Then
                    ConvertHTMLFromWord(strFilePath & strFile, strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html"))

                ElseIf ext = ".xls" Or ext = ".xlsx" Then
                    ConvertHtmlFromExcel(strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
                End If

                iframeid.Attributes("src") = "Uploads/Accounts/CN/A" + strFile.Split("."c)(0) & Convert.ToString(".html")

            Else
                iframeid.Attributes.Add("src", filePath)

            End If

           
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "PreviewFile", ex.Message.ToString, "")
        End Try
    End Sub

    Public Sub ConvertHTMLFromWord(Source As Object, Target As Object)
        If Word Is Nothing Then
            ' Check for the prior instance of the OfficeWord Object
            Word = New Microsoft.Office.Interop.Word.ApplicationClass()
        End If

        Try
            ' To suppress window display the following code will help
            Word.Visible = False
            Word.Application.Visible = False
            Word.WindowState = Microsoft.Office.Interop.Word.WdWindowState.wdWindowStateMinimize



            Word.Documents.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Word.WdSaveFormat.wdFormatHTML

            Word.ActiveDocument.SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS
            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Word IsNot Nothing Then
                Word.Documents.Close(Unknown, Unknown, Unknown)
                Word.Quit(Unknown, Unknown, Unknown)
            End If
        End Try
    End Sub

    Public Sub ConvertHtmlFromExcel(Source As String, Target As String)
        If Excel Is Nothing Then
            Excel = New Microsoft.Office.Interop.Excel.ApplicationClass()
        End If

        Try
            Excel.Visible = False
            Excel.Application.Visible = False
            Excel.WindowState = Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized

            Excel.Workbooks.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            Excel.Workbooks(1).SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, Unknown, Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS

            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Excel IsNot Nothing Then
                Excel.Workbooks.Close()
                Excel.Quit()
            End If
        End Try
    End Sub

    'Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '        filePath = Server.MapPath("~/Uploads/Service/") + filePath
    '        'lblMessage.Text = filePath
    '        'Return

    '        Response.ContentType = ContentType
    '        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '        Response.WriteFile(filePath)
    '        Response.End()
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("Invoice", "DownloadFile", ex.Message.ToString, txtInvoiceNo.Text)
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Sub

    Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Session.Add("FileName", filePath)
            filePath = Server.MapPath("~/Uploads/Accounts/CN/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            'lblMessage.Text = filePath
            'Return
            Session.Add("FilePath", filePath)

            '    Response.Redirect("Email.aspx?Type=FileUpload")
            Dim Url As String = "Email.aspx?Type=FileUpload"
            Response.Write("<script language='javascript'>window.open('" & Url & "','_blank','');")
            Response.Write("</script>")
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN", "EmailFile", ex.Message.ToString, txtCNNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        ' InsertIntoTblWebEventLog("FILEDELETE1", "ConfirmDelete", "1", txtInvoiceNo.Text)

        Dim deletefilepath1 As String = Server.MapPath("~/Uploads/Accounts/CN/DeletedFiles/") + txtFileLink.Text
        Dim deletefilepath As String = Server.MapPath("~/Uploads/Accounts/CN/DeletedFiles/") + Path.GetFileNameWithoutExtension(deletefilepath1) + "_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh") + Path.GetExtension(deletefilepath1)
        deletefilepath = deletefilepath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

        deletefilepath1 = deletefilepath1.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

        File.Move(txtDeleteUploadedFile.Text, deletefilepath)


        'File.Delete(txtDeleteUploadedFile.Text)
        '  Response.Redirect(Request.Url.AbsoluteUri)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblfileupload where filenamelink='" + txtFileLink.Text + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblfileupload where filenamelink='" + txtFileLink.Text + "'"

                command.CommandText = qry

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOADDELETE", txtFileLink.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtFileLink.Text)

            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            lblMessage.Text = "FILE DELETED"

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtCNNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "FILE DELETE", ex.Message.ToString, txtCNNo.Text + " " + txtFileLink.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged
        lblAlert.Text = ""
        '  lblAlert.Text = tb1.ActiveTabIndex.ToString

        If tb1.ActiveTabIndex = 1 Then
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtCNNo.Text) Then
                lblAlert.Text = "Select a CN/DN to Proceed"

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            'If GridView1.Rows.Count = 0 Then
            '    txtSelectedIndex.Text = "-1"
            'Else
            '    txtSelectedIndex.Text = "0"
            'End If

            'GridView1.SelectedIndex = 0
            'GridView1_SelectedIndexChanged(New Object(), New EventArgs)
            'OnSelectedIndexChangedg1(New Object(), New EventArgs)
        End If

        If tb1.ActiveTabIndex = 1 Then

            lblFileUploadCNNo.Text = txtCNNo.Text
            ' lblFileUploadAccountID.Text = txtAccountId.Text
            lblFileUploadName.Text = txtAccountName.Text

            iframeid.Attributes.Add("src", "about:blank")

            'View Uploaded files

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next


            'gvUpload.DataSource = files
            'gvUpload.DataBind()

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtCNNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
        End If


    End Sub

    Protected Sub btnPostECN_Click(sender As Object, e As EventArgs) Handles btnPostECN.Click
        InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, txtECNStatus.Text, txtRcNo.Text, txtCNNo.Text)
        If txtECNStatus.Text = "APPROVED" Or txtECNStatus.Text = "VALID" Then

            ' txtReasonCancelEInvoice.Visible = False
            txtCancelCode.Text = ""
            lblRCNO.Text = "(" & txtRcNo.Text & ")"
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, txtLastPostedDate.Text, txtLastPostedBy.Text, txtCNNo.Text)
            'lblRCNO.Text = txtInvoiceNo.Text
            'InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, txtEInvoiceStatus.Text, lblRcNo.Text, txtInvoiceNo.Text)
            ddlReasonforCancellation.SelectedIndex = 0
            '  ddlReasonforCancellation_SelectedIndexChanged(sender,e)
            reasonother.Visible = False
            txtReasonCancelEInvoice.Text = ""

            txtCancelInvoiceNo.Text = txtCNNo.Text
            txtCancelLastPosted.Text = txtLastPostedDate.Text
            txtCancelLastPostedBy.Text = txtLastPostedBy.Text
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, txtCancelInvoiceNo.Text, txtLastPostedBy.Text, txtCNNo.Text)

            mdlConfirmCancelEInvoice.Show()
        Else

            If Date.Compare(CDate(txtCNDate.Text), CDate(txtEInvoiceStartDate.Text)) < 0 Then
                lblAlert.Text = "ONLY DOCUMENTS STARTING " & txtEInvoiceStartDate.Text & " CAN BE POSTED TO PORTAL"
                Return
            End If

            mdlEInvoiceConfirm.Show()

        End If

        '  mdlEInvoiceConfirm.Show()
    End Sub

    Protected Function EInvoiceCancelValidation() As Boolean
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT SubmissionDate FROM tblsales where InvoiceNumber='" & txtCNNo.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If String.IsNullOrEmpty(dt.rows(0)("SubmissionDate").tostring) = False Then
                    Dim hours As Long = DateDiff(DateInterval.Hour, dt.rows(0)("SubmissionDate"), DateTime.Now)
                    InsertIntoTblWebEventLog("CN", "EInvoiceCancelValidation", hours.ToString, txtInvoiceNo.Text)
                    If hours > 71 Then
                        Return False
                    Else
                        Return True
                    End If
                End If
            End If

            dt.Dispose()
            dr.Close()
            command1.Dispose()
            conn.Close()
            conn.Dispose()
            Return True

        Catch ex As Exception
            InsertIntoTblWebEventLog("CN", "EInvoiceCancelValidation", ex.Message.ToString, txtCNNo.Text)
            Return False
        End Try
    End Function



    Protected Sub btnConfirmCancelEInvoice_Click(sender As Object, e As EventArgs) Handles btnConfirmCancelEInvoice.Click

        If String.IsNullOrEmpty(txtReasonCancelEInvoice.Text) Then
            lblAlertCancelEInvoice.Text = "ENTER CANCELLATION REASON"
            mdlConfirmCancelEInvoice.Show()
            Return
        End If
        If String.IsNullOrEmpty(txtCancelCode.Text) Then
            lblAlertCancelEInvoice.Text = "ENTER RCNO AS CONFIRMATION CODE FOR CANCELLATION"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If

        Dim CancelValidate As Boolean = EInvoiceCancelValidation()
        If CancelValidate = False Then
            lblAlertCancelEInvoice.Text = "CANCELLATION CANNOT BE DONE AFTER 71 HOURS OF EINVOICE SUBMISSION"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If


        If txtCancelCode.Text <> txtRcNo.Text Then
            lblAlertCancelEInvoice.Text = "ENTER A VALID CONFIRMATION CODE"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If
        '  InsertIntoTblWebEventLog("EInvoiceConfirmYes1", txtSubmissionDate.Text, txtCancelCode.Text, Session("UserID").ToString)


        Dim token = GetToken()
        Dim tokenno As String = ""
        tokenno = AccessToken
        InsertIntoTblWebEventLog("CN2", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                Try

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes1", txtUUID.Text, tokenno, Session("UserID").ToString)

                    Dim Success As String = DocumentCancellation()

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes2", Success, txtCNNo.Text, Session("UserID").ToString)
                    If Success = "SUCCESS" Then


                        UpdateEInvoiceCancellation(txtCNNo.Text)
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes3", txtECNStatus.Text, txtCNNo.Text, Session("UserID").ToString)

                        If txtECNStatus.Text = "APPROVED" Or txtECNStatus.Text = "VALID" Then
                            btnPostECN.Text = "CANCEL E-INVOICE"
                        Else
                            btnPostECN.Text = "SUBMIT E-INVOICE"

                        End If

                        Try
                            '   CType(Me.Master, MasterPage).UpdateInvoiceBal(txtCNNo.Text)

                            updPanelCN.Update()
                        Catch ex As Exception
                            InsertIntoTblWebEventLog("CN - " + Session("UserID"), "CancellationReCalculate", ex.Message.ToString, "")
                            '   Exit Sub
                        End Try


                        SQLDSCN.SelectCommand = txt.Text
                        SQLDSCN.DataBind()

                        GridView1.DataBind()

                        '   lblMessage.Text = "Document Cancelled Successfully <br/> Status : " & Status
                        lblMessage.Text = "CN '" & txtCNNo.Text & "' is Cancelled and Voided Successfully."
                    Else
                        lblMessage.Text = "Error in submitting the document"
                    End If
                Catch ex As Exception
                    lblMessage.Text = "Error in submitting the document" & ex.Message.ToString

                End Try

            End If

        End Using

    End Sub

    Private Sub UpdateEInvoiceCancellation(CNNumber As String)
        ' Try
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()


        '''''''''''''''

        Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
        commandUpdateInvoice.CommandType = CommandType.Text
        Dim sqlUpdateInvoice As String = "Update tblsales set EInvoiceStatus=@EInvoiceStatus,CancellationDate=@CancellationDate,CancellationReason=@CancellationReason,PostStatus='V', ReasonChSt =@CancellationReason where InvoiceNumber=@invoicenumber"
        InsertIntoTblWebEventLog("CN", "UPDATECNCancellation1", sqlUpdateInvoice, txtCreatedBy.Text)

        commandUpdateInvoice.CommandText = sqlUpdateInvoice
        commandUpdateInvoice.Parameters.Clear()
        commandUpdateInvoice.Parameters.AddwithValue("@EInvoiceStatus", "CANCELLED")
        InsertIntoTblWebEventLog("CN", "UPDATECNCancellation2", txtECNStatus.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Parameters.AddwithValue("@invoiceNumber", CNNumber)
        InsertIntoTblWebEventLog("CN", "UPDATECNCancellation3", CNNumber, txtCreatedBy.Text)

        '    commandUpdateInvoice.Parameters.AddwithValue("@CancellationDate", Convert.ToDateTime((txtCancellationDate.Text).ToString("yyyy-MM-dd")))
        commandUpdateInvoice.Parameters.AddwithValue("@CancellationDate", Convert.ToDateTime(txtCancellationDate.Text))

        InsertIntoTblWebEventLog("CN", "UPDATECNCancellation4", txtCancellationDate.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Parameters.AddwithValue("@CancellationReason", txtReasonCancelEInvoice.Text)

        InsertIntoTblWebEventLog("CN", "UPDATECNCancellation5", txtReasonCancelEInvoice.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Connection = conn
        commandUpdateInvoice.ExecuteNonQuery()
        commandUpdateInvoice.Dispose()
        conn.Close()
        conn.Dispose()
        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("INVOICE", "UPDATECNCancellation", ex.Message.ToString, txtCreatedBy.Text)

        'End Try
    End Sub

    '  Private AccessToken As String = "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk2RjNBNjU2OEFEQzY0MzZDNjVBNDg1MUQ5REM0NTlFQTlCM0I1NTRSUzI1NiIsIng1dCI6Imx2T21Wb3JjWkRiR1draFIyZHhGbnFtenRWUSIsInR5cCI6ImF0K2p3dCJ9.eyJpc3MiOiJodHRwczovL3ByZXByb2QtaWRlbnRpdHkubXlpbnZvaXMuaGFzaWwuZ292Lm15IiwibmJmIjoxNzM0MzM2MDMxLCJpYXQiOjE3MzQzMzYwMzEsImV4cCI6MTczNDMzOTYzMSwiYXVkIjpbIkludm9pY2luZ0FQSSIsImh0dHBzOi8vcHJlcHJvZC1pZGVudGl0eS5teWludm9pcy5oYXNpbC5nb3YubXkvcmVzb3VyY2VzIl0sInNjb3BlIjpbIkludm9pY2luZ0FQSSJdLCJjbGllbnRfaWQiOiIwZmNhYTU3Yy04YTJkLTQxOTQtODU3Mi0xOTM4YzJjY2M2MjgiLCJJc1RheFJlcHJlcyI6IjEiLCJJc0ludGVybWVkaWFyeSI6IjAiLCJJbnRlcm1lZElkIjoiMCIsIkludGVybWVkVElOIjoiIiwiSW50ZXJtZWRST0IiOiIiLCJJbnRlcm1lZEVuZm9yY2VkIjoiMiIsIm5hbWUiOiJDMTE1MzI2NTIwOTA6MGZjYWE1N2MtOGEyZC00MTk0LTg1NzItMTkzOGMyY2NjNjI4IiwiU1NJZCI6IjNlMjM3OTI2LTU4NmMtOTUzZS1iZjBiLWQ5NjI3ZmVmNjIwMCIsInByZWZlcnJlZF91c2VybmFtZSI6IkFPTCBCZXRhIiwiVGF4SWQiOiIzNDYwMSIsIlRheHBheWVyVElOIjoiQzExNTMyNjUyMDkwIiwiVGF4VGluIjoiQzExNTMyNjUyMDkwIiwiUHJvZklkIjoiNDMyMjciLCJJc1RheEFkbWluIjoiMCIsIklzU3lzdGVtIjoiMSJ9.VGRpp7B8A1X9yT4E32sj-1eedQhqTuciyvOf1XZRuCx9_6qjw6nwDyQymLFwSxOwnEaGJdNNzLDZrleV9zcvdGX50xMzytLP8nZpnQJAqPm5uU-HcNpEkI1lKaUby-zv01QZ3tEcUqS5kKY_b6iyb_ijfw414btJQN4WsaSWcP77dymma7EQvMYkcwRnEW8iGq8GyS8148ed_QhT8dcBR_ghM8JfnOz6evNAbaWDZWN-xyspAfeOJzVznmgo5HrBhY6MxH8ObZDlkNsyXl4XXUs6H3izX8AzGRTxhvH_68hQ6Ho9UDp_Au8Y6hRv4F1baOHpnuGebouXlv54zM-B1A"
    Private AccessToken As String '= '"eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk2RjNBNjU2OEFEQzY0MzZDNjVBNDg1MUQ5REM0NTlFQTlCM0I1NTRSUzI1NiIsIng1dCI6Imx2T21Wb3JjWkRiR1draFIyZHhGbnFtenRWUSIsInR5cCI6ImF0K2p3dCJ9.eyJpc3MiOiJodHRwczovL3ByZXByb2QtaWRlbnRpdHkubXlpbnZvaXMuaGFzaWwuZ292Lm15IiwibmJmIjoxNzM1Mjk5OTM4LCJpYXQiOjE3MzUyOTk5MzgsImV4cCI6MTczNTMwMzUzOCwiYXVkIjpbIkludm9pY2luZ0FQSSIsImh0dHBzOi8vcHJlcHJvZC1pZGVudGl0eS5teWludm9pcy5oYXNpbC5nb3YubXkvcmVzb3VyY2VzIl0sInNjb3BlIjpbIkludm9pY2luZ0FQSSJdLCJjbGllbnRfaWQiOiIwZmNhYTU3Yy04YTJkLTQxOTQtODU3Mi0xOTM4YzJjY2M2MjgiLCJJc1RheFJlcHJlcyI6IjEiLCJJc0ludGVybWVkaWFyeSI6IjAiLCJJbnRlcm1lZElkIjoiMCIsIkludGVybWVkVElOIjoiIiwiSW50ZXJtZWRST0IiOiIiLCJJbnRlcm1lZEVuZm9yY2VkIjoiMiIsIm5hbWUiOiJDMTE1MzI2NTIwOTA6MGZjYWE1N2MtOGEyZC00MTk0LTg1NzItMTkzOGMyY2NjNjI4IiwiU1NJZCI6IjZkMjNiOGNhLTFiODgtZmExNy1kZTU2LTZlYTJiYTFmZmIwMCIsInByZWZlcnJlZF91c2VybmFtZSI6IkFPTCBCZXRhIiwiVGF4SWQiOiIzNDYwMSIsIlRheHBheWVyVElOIjoiQzExNTMyNjUyMDkwIiwiVGF4VGluIjoiQzExNTMyNjUyMDkwIiwiUHJvZklkIjoiNDMyMjciLCJJc1RheEFkbWluIjoiMCIsIklzU3lzdGVtIjoiMSJ9.nLz_PadiyijqN9KW4qyybga4YRZDAwXiJhodK8rDiHPg1AvzwO17zw9Ularr69I0cKmUk5AVDncbp9VbilwZAXRgy34rKyvvg09RZH73Y9k5NfrC7N6ztk91eXepO7duDiPdAEIWIAjHGBa282rt5R3Do-nYiiskkfqoLZPjLcAuEBUysOSuj0MuzUGbzfqfF0kiJX6ORnTTjB8EpcFtl5r9Za0MPKR27XRCaHlPCwdfi_akQ3YSTC7yYjEQ14UFuWivDLDzBIJLANAvABKM2ijhNijJl2aatxCyz5kMg139EPwokr1rr2ZONneerrBXVy5yQ4si9YW9ZSj-ygRCSQ"

    Private schedule As System.Threading.Timer
    Private apitoken As String = ""
    Private token As AuthenticationResult

    Private Async Function GetToken() As Task
        Get_API_Token().Wait()
    End Function

    Private Function Get_API_Token() As Task
        Dim clientId As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientId")
        Dim clientSecret As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientSecret")
        Dim grant_type As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicegrant_type")
        Dim scope As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicescope")
        Dim tokenURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceToken")

        Return Task.Run(Async Function()

                            Dim token As String = ""
                            Using client = New HttpClient()
                                Try

                                    Dim data = {
                                             New KeyValuePair(Of String, String)("client_id", clientId),
                                             New KeyValuePair(Of String, String)("client_secret", clientSecret),
                                             New KeyValuePair(Of String, String)("grant_type", grant_type),
                                             New KeyValuePair(Of String, String)("scope", scope)
                                         }

                                    Dim apiGetToken As String = tokenURL
                                    System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                                    Dim response As HttpResponseMessage = client.PostAsync(apiGetToken, New FormUrlEncodedContent(data)).Result
                                    Dim responseString = response.Content.ReadAsStringAsync().Result
                                    If response.IsSuccessStatusCode Then
                                        Dim jObject = Newtonsoft.Json.Linq.JObject.Parse(responseString)
                                        AccessToken = jObject("access_token").ToString()
                                    End If
                                Catch ex As Exception

                                    Dim test As String = ""

                                End Try

                            End Using
                        End Function)

    End Function

    Protected Sub EInvoiceConfirmYes_Click(sender As Object, e As EventArgs) Handles EInvoiceConfirmYes.Click

        Dim token = GetToken()
        Dim tokenno As String = ""
        tokenno = AccessToken
        InsertIntoTblWebEventLog("CN2", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                '  Try

                'Dim Name = txtAccountName.Text ' "C11532652090"
                'Dim IDType = "BRN"
                'Dim IDvalue = "200701041254"  '"199801017599"


                'Dim TinValiDate = SearchTin(TinNumber, IDType, IDvalue)

                '       InsertIntoTblWebEventLog("EInvoiceConfirmYes", TinNumber.ToString, TinValiDate.ToString, Session("UserID").ToString)

                Dim TinNumber As String = ""
                Dim IDType As String = ""
                Dim IDvalue As String = ""
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()
                Dim dt As New datatable
                InsertIntoTblWebEventLog("TIN", txtAccountID.Text, txtAccountIDBilling.Text, Session("UserID").ToString)

                dt = RetrieveCustomerTable(conn)
                InsertIntoTblWebEventLog("TIN", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                If dt.rows.count > 0 Then
                    InsertIntoTblWebEventLog("TIN1", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then

                        InsertIntoTblWebEventLog("TIN11", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)
                        If String.IsNullOrEmpty(dt.rows(0)("TaxIdentificationNo").ToString) = False Then
                            TinNumber = dt.rows(0)("TaxIdentificationNo")
                            IDType = "BRN"
                            IDvalue = dt.rows(0)("RocNos")
                            InsertIntoTblWebEventLog("TIN2", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                        End If

                    ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then

                        TinNumber = dt.rows(0)("TaxIdentificationNo")
                        IDType = "NRIC"
                        IDvalue = "NA"
                    End If
                End If
                InsertIntoTblWebEventLog("TIN3", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                If String.IsNullOrEmpty(txtTIN.Text) Then
                    InsertIntoTblWebEventLog("TIN Blank", TinNumber.ToString, txtTIN.Text, Session("UserID").ToString)

                    txtTIN.Text = TinNumber

                End If
                conn.Close()
                InsertIntoTblWebEventLog("TIN4", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                'Dim TinNumber = "EI00000000010"
                'Dim IDType = "NRIC"
                'Dim IDvalue = "NA"
                If String.IsNullOrEmpty(TinNumber) Then
                    lblMessage.Text = "Enter Tin Number <br/>"
                Else
                    Dim TinValiDate = ValiDateTin(TinNumber, IDType, IDvalue)

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes", TinNumber.ToString, TinValiDate.ToString, Session("UserID").ToString)
                    'Dim tin = SearchTin("", "BRN", "199901007530")
                    'InsertIntoTblWebEventLog("SearchTIN", TinNumber.ToString, tin.ToString, Session("UserID").ToString)

                    If TinValiDate = True Then
                        lblMessage.Text = "Tin Number valid <br/>"
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes0", lblMessage.Text, TinValiDate.ToString, Session("UserID").ToString)

                        Dim RESULT = submitDocument_without_Certificate(tokenno)
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes1", RESULT.ToString, TinValiDate.ToString, Session("UserID").ToString)
                        If Not String.IsNullOrEmpty(RESULT) Then
                            If RESULT = "error message" Then
                                lblMessage.Text = "Document Submission Failed"
                            Else
                                InsertIntoTblWebEventLog("EInvoiceConfirmYes1", RESULT.ToString, TinValiDate.ToString, Session("UserID").ToString)
                                'lblMessage.Text = "Document Submitted Successfully <br/>"
                                'Return

                                'mdlEInvoiceConfirm.Hide()
                                'mdlpopupmsg.Show()
                                'Thread.Sleep(30000)

                                Dim submissionid = GetSubmission()

                                If submissionid = "ERROR" Then
                                    txtECNStatus.Text = "REJECTED"
                                    txtSubmissionID.Text = ""
                                    txtUUID.Text = ""
                                    txtLongID.Text = ""
                                    lblMessage.Text = "Document Submission Failed : Portal Error"
                                    Return
                                Else
                                    InsertIntoTblWebEventLog("ECNStatus1", txtUUID.Text, txtECNStatus.Text, Session("UserID").ToString)

                                    txtECNStatus.Text = GetDocument(txtUUID.Text)
                                    InsertIntoTblWebEventLog("ECNStatus2", txtUUID.Text, txtECNStatus.Text, Session("UserID").ToString)


                                End If
                                InsertIntoTblWebEventLog("EInvoiceConfirmYes2", submissionid.ToString, txtCNNo.Text, Session("UserID").ToString)

                                UpdateEInvoiceSubmission(txtCNNo.Text)

                                InsertIntoTblWebEventLog("EInvoiceConfirmYes3", txtSubmissionDate.Text, txtCNNo.Text, Session("UserID").ToString)

                                InsertIntoTblEInvoiceEventLog("SUBMISSION", txtUUID.Text)


                                '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "EINVOICE", txtCNNo.Text, "", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                                '  CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "EINVOICE", txtCNNo.Text, "SUBMISSION", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtSubmissionID.Text, "", txtRcno.Text)
                                '  CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtCNNo.Text, "DELETE", Convert.ToDateTime(txt), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                                SQLDSCN.SelectCommand = txt.Text
                                SQLDSCN.DataBind()

                                GridView1.DataBind()

                                'Dim result = submitDocument()
                                ' lblMessage.Text = "Document Submitted Successfully <br/> Response From API: </br> " + RESULT + "<br/> Submission ID : " & submissionid
                                lblMessage.Text = "Document Submitted Successfully <br/> Submission ID : " & submissionid

                            End If

                        Else

                        End If

                    Else
                        lblMessage.Text = "Tin Number Not valid <br/>"
                    End If

                    'Catch ex As Exception
                    '    lblMessage.Text = "Error in submitting the document" & ex.Message.ToString

                    'End Try

                End If

            End If

        End Using
    End Sub


    Private Function RetrieveCompanyInfoTable(conn As MySqlConnection) As DataTable
        Try
            'Dim Command As MySqlCommand = New MySqlCommand

            'Command.CommandType = CommandType.Text
            'Command.CommandText = "SELECT *,AccountName as CompanyName FROM tbllocation where locationid = @location;"
            'Command.Parameters.AddWithValue("@location", txtLocation.Text)
            'Command.Connection = conn

            'Dim dr As MySqlDataReader = Command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    Return dt
            'Else
            Dim Command1 As MySqlCommand = New MySqlCommand

            Command1.CommandType = CommandType.Text
            Command1.CommandText = "SELECT * FROM tblcompanyinfo where rcno=1;"
            Command1.Connection = conn

            Dim dr1 As MySqlDataReader = Command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                Return dt1

            End If
            '  End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveCompanyInfoTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveEInvoiceMalaysiaCodeTable(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Command.CommandText = "SELECT * FROM tbleinvoicemalaysiasicode where rcno=1;"
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveEInvoiceMalaysiaCodeTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function


    Private Function RetrieveCustomerTable(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""
            InsertIntoTblWebEventLog("RetrieveCustomerTable", "ContactType", ddlContactType.Text, Session("UserID").ToString)

            ' If ddlContactType.SelectedIndex = 0 Then
            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then

                qry = "SELECT AccountID,Name,Name2,RocNos,TaxIdentificationNo,SalesTaxRegistrationNo,Address1,AddStreet,AddBuilding,"
                qry = qry + "AddState,AddCity,AddCountry,AddPostal,Telephone,Mobile,Email,TaxIdentificationNo,SalesTaxRegistrationNo,RocNos FROM tblcompany where accountid=@accountid;"

                '  ElseIf ddlContactType.SelectedIndex = 1 Then
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then

                qry = "SELECT AccountID,Name,Name2,TaxIdentificationNo,NRIC,SalesTaxRegistrationNo,Address1,AddStreet,AddBuilding,"
                qry = qry + "AddState,AddCity,AddCountry,AddPostal,TelHome as Telephone,TelMobile as Mobile,Email,TaxIdentificationNo,SalesTaxRegistrationNo FROM tblPERSON where accountid=@accountid;"
            End If
            Command.CommandText = qry
            Command.Parameters.AddWithValue("@accountid", txtAccountIdBilling.Text)
            Command.Connection = conn
            InsertIntoTblWebEventLog("RetrieveCustomerTable1", txtAccountIdBilling.Text, "", Session("UserID").ToString)

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                InsertIntoTblWebEventLog("RetrieveCustomerTable2", dt.Rows.Count.ToString, "", Session("UserID").ToString)

                Return dt
            Else
                InsertIntoTblWebEventLog("RetrieveCustomerTable3", txtAccountIdBilling.Text, "", Session("UserID").ToString)

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveCustomerTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveSalesTable(conn As MySqlConnection, InvoiceNumber As String) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""

            qry = "SELECT InvoiceNumber,SalesDate,CreatedOn,Currency,GlPeriod,AccountId,CustAddPostal,CustAddCity,"
            qry = qry + "BillAddress1, BillBuilding, BillCity, BillCountry, BillStreet, BillPostal, Comments, Terms, GstBase, ExchangeRate,"
            qry = qry + "ValueBase,AppliedBase"
            qry = qry + " FROM tblsales where invoicenumber=@invoicenumber;"


            Command.CommandText = qry
            Command.Parameters.AddWithValue("@invoicenumber", InvoiceNumber)
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSalesTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try


    End Function

    Private Function RetrieveSetUpInfo(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Command.CommandText = "SELECT ARCurrency FROM tblservicerecordmastersetup where rcno=1;"
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSetUpInfo", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveSalesDetailTable(conn As MySqlConnection, InvoiceNumber As String) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""

            qry = "SELECT *"
            qry = qry + " FROM tblsalesdetail where invoicenumber=@invoicenumber;"


            Command.CommandText = qry
            Command.Parameters.AddWithValue("@invoicenumber", InvoiceNumber)
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSalesTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try
    End Function

    Protected Function submitDocument_without_Certificate(tokenno As String)
        InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)

        Dim serializer As JavaScriptSerializer = New JavaScriptSerializer()
        'Dim tokenno As String = ""
        'tokenno = AccessToken
        InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)

        InsertIntoTblWebEventLog("SubmitDoc1", "", "", Session("UserID").ToString)

        Dim DocumentPayload As String = ""
        Dim DocumentHashcode As String = ""
        Dim DocumentFormat As String = ""
        Dim DocumentPayloadbase64 As String = ""
        Dim SubmitDocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")
        Dim CNNumber = txtCNNo.Text '"CI6210502938017"
        '   Dim invoiceNumber = "CI6210502938017"
        InsertIntoTblWebEventLog("SubmitDoc2", SubmitDocumentURL, tokenno, Session("UserID").ToString)
        Try
            Using client = New HttpClient()
                InsertIntoTblWebEventLog("SubmitDoc3", CNNumber, tokenno, Session("UserID").ToString)

                If Not String.IsNullOrWhiteSpace(tokenno) Then
                    InsertIntoTblWebEventLog("SubmitDoc4", CNNumber, tokenno, Session("UserID").ToString)

                    client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)

                    InsertIntoTblWebEventLog("SubmitDoc5", CNNumber, tokenno, Session("UserID").ToString)

                    DocumentPayload = AssignJsonvalue_Without_certificate(CNNumber)

                    InsertIntoTblWebEventLog("SubmitDoc6", CNNumber, DocumentPayload.Length.ToString, Session("UserID").ToString)

                    If Not String.IsNullOrEmpty(DocumentPayload) Then
                        InsertIntoTblWebEventLog("SubmitDoc7", CNNumber, tokenno, Session("UserID").ToString)

                        DocumentHashcode = GetSHA256Hash(DocumentPayload)
                        DocumentFormat = "JSON"
                        Dim byt As Byte() = System.Text.Encoding.UTF8.GetBytes(DocumentPayload)
                        DocumentPayloadbase64 = Convert.ToBase64String(byt)

                        InsertIntoTblWebEventLog("SubmitDoc8", CNNumber, DocumentHashcode, Session("UserID").ToString)


                        Dim jsonData As New Dictionary(Of String, Object) From {
                                {"documents", New List(Of Object) From {
                                    New Dictionary(Of String, Object) From {
                                        {"format", DocumentFormat},
                                        {"documentHash", DocumentHashcode},
                                        {"codeNumber", CNNumber},
                                        {"document", DocumentPayloadbase64}
                                    }
                                }}
                            }

                        InsertIntoTblWebEventLog("SubmitDoc9", CNNumber, tokenno, Session("UserID").ToString)


                        Dim jsonContent As String = Newtonsoft.Json.JsonConvert.SerializeObject(jsonData)

                        Dim content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
                        InsertIntoTblWebEventLog("SubmitDoc10", CNNumber, content.ToString, Session("UserID").ToString)


                        Try
                            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                            Dim response As HttpResponseMessage = client.PostAsync(SubmitDocumentURL, content).Result
                            Dim responseString = response.Content.ReadAsStringAsync().Result
                            InsertIntoTblWebEventLog("SubmitDoc11", CNNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)
                            '     InsertIntoTblWebEventLog("SubmitDoc11", invoiceNumber, responseString.ToString, Session("UserID").ToString)


                            If response.IsSuccessStatusCode Then
                                InsertIntoTblWebEventLog("SubmitDoc111", CNNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)
                                Dim SubmissionResult As New SubmissionResult
                                Thread.Sleep(3000)
                                Try
                                    SubmissionResult = JsonConvert.DeserializeObject(Of SubmissionResult)(responseString)
                                    InsertIntoTblWebEventLog("SubmitDoc112", CNNumber, SubmissionResult.submissionUid.Length.ToString, Session("UserID").ToString)

                                    txtSubmissionID.Text = SubmissionResult.submissionUid.ToString


                                Catch ex As Exception
                                    InsertIntoTblWebEventLog("SubmitDocError", CNNumber, ex.Message.ToString, Session("UserID").ToString)

                                End Try


                                InsertIntoTblWebEventLog("SubmitDoc12", CNNumber, txtSubmissionID.Text, Session("UserID").ToString)

                                If SubmissionResult.acceptedDocuments.Count() > 0 Then
                                    For Each Item In SubmissionResult.acceptedDocuments
                                        txtUUID.Text = Item.uuid
                                        Exit For
                                    Next
                                End If

                                If SubmissionResult.rejectedDocuments.Count() > 0 Then
                                    For Each Item In SubmissionResult.acceptedDocuments
                                        InsertIntoTblWebEventLog("SubmitDocR", CNNumber, SubmissionResult.rejectedDocuments.Count.ToString, Session("UserID").ToString)

                                        Exit For
                                    Next
                                End If
                                ' ''Dim AcceptedDocs As AcceptedDocuments = JsonConvert.DeserializeObject(Of AcceptedDocuments)(responseString)
                                ''txtUUID.text = SubmissionResult.acceptedDocuments[0].submissionUid.acceptedDocuments. .UUID.ToString 
                                ' ''txtUUID.Text = AcceptedDocs.uuid.ToString
                                ' ''InsertIntoTblWebEventLog("SubmitDoc13", invoiceNumber, txtUUID.Text, Session("UserID").ToString)

                                txtECNStatus.Text = "VALID"
                                Return responseString
                            Else
                                txtECNStatus.Text = "REJECTED"
                                txtSubmissionID.Text = ""
                                txtUUID.Text = ""
                                txtLongID.Text = ""
                                Return responseString
                            End If

                        Catch ex As HttpRequestException

                            Dim result1 = "error message -" + ex.Message
                            Return result1
                        End Try
                    Else
                        Dim result1 = "error message"
                        Return result1
                    End If
                End If
            End Using
        Catch ex As HttpRequestException

            Dim result1 = "error message -" + ex.Message
            Return result1
        End Try
        Return ""
    End Function

    'Private Function submitDocument()
    '    InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)


    '    Dim serializer As JavaScriptSerializer = New JavaScriptSerializer()
    '    Dim tokenno As String = ""
    '    tokenno = AccessToken
    '    Dim DocumentPayload As String = ""
    '    Dim DocumentHashcode As String = ""
    '    Dim DocumentFormat As String = ""
    '    Dim DocumentPayloadbase64 As String = ""
    '    Dim SumbitDocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")
    '    'Dim certificate_path = Server.MapPath("/Soft_Certificate/CERT_18855227.p12")
    '    'Dim certificate_pin = "VYcaW9PoWI"
    '    'Dim certificate As X509Certificate2 = New X509Certificate2(certificate_path, certificate_pin)
    '    'Dim privateKey As RSA = certificate.GetRSAPrivateKey()
    '    Dim signature As Byte()
    '    Dim signatureBase64 As String = ""
    '    'DocDigest
    '    Dim docdigest As String
    '    Dim hash As Byte()
    '    Dim invoiceNumber = "APMSBINV-24-0009"
    '    InsertIntoTblWebEventLog("SubmitDoc1", invoiceNumber, "", Session("UserID").ToString)

    '    DocumentPayload = AssignJsonvalue_Without_certificate(invoiceNumber)
    '    InsertIntoTblWebEventLog("SubmitDoc2", invoiceNumber, DocumentPayload, Session("UserID").ToString)

    '    Dim documentHashcode1 As String = GetSHA256Hash(DocumentPayload)

    '    'If Not certificate.HasPrivateKey Then
    '    '    Return "Certificate does not have a private key."
    '    'End If
    '    InsertIntoTblWebEventLog("SubmitDoc3", invoiceNumber, documentHashcode1.ToString, Session("UserID").ToString)


    '    Using sha256 As SHA256 = sha256.Create()
    '        hash = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(DocumentPayload))
    '        docdigest = Convert.ToBase64String(hash)
    '    End Using

    '    ' Load the certificate from the file store Or the key store as required
    '    'Dim privateKeyProvider As RSACryptoServiceProvider = privateKey
    '    'Dim sign = privateKeyProvider.SignHash(hash, HashAlgorithmName.SHA256, RSASignaturePadding.Pkcs1)
    '    'Dim signature = Convert.ToBase64String(sign)

    '    'Step 4: Calculate the certificate digest
    '    ' Load the certificate from the file store Or the key store as required
    '    'Dim CertDigest As String
    '    'Using sha256 As SHA256 = sha256.Create()
    '    '    Dim certash = sha256.ComputeHash(certificate.RawData)
    '    '    CertDigest = Convert.ToBase64String(certash)
    '    'End Using
    '    InsertIntoTblWebEventLog("SubmitDoc4", invoiceNumber, documentHashcode1.ToString, Session("UserID").ToString)

    '    'Using rsa As RSA = privateKey
    '    '    Using sha256 As SHA256 = sha256.Create()
    '    '        Dim hash1 As Byte() = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(documentHashcode1))
    '    '        Dim rsaFormatter As RSAPKCS1SignatureFormatter = New RSAPKCS1SignatureFormatter(rsa)
    '    '        rsaFormatter.SetHashAlgorithm("SHA256")

    '    '        signature = rsaFormatter.CreateSignature(hash1)
    '    '        signatureBase64 = Convert.ToBase64String(signature)
    '    '    End Using
    '    'End Using


    '    '  Dim UBLExtensions = assignSignedProperties(CertDigest, certificate, docdigest, signatureBase64)

    '    Dim jsonresult As String
    '    ' Try
    '    Dim jsonObj As InvoiceWrapper = JsonConvert.DeserializeObject(Of InvoiceWrapper)(DocumentPayload)
    '    InsertIntoTblWebEventLog("SubmitDoc501", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    Dim jsonObj1 As List(Of Invoice) = jsonObj.Invoice
    '    InsertIntoTblWebEventLog("SubmitDoc502", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    For Each invoice As Invoice In jsonObj1

    '        InsertIntoTblWebEventLog("SubmitDoc503", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '        invoice.UBLExtensions = UBLExtensions
    '        InsertIntoTblWebEventLog("SubmitDoc504", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '        ' Initialize the Signature list
    '        Dim SignatureList As New List(Of Signature)

    '        ' Create a Signature object
    '        Dim signatureObj As New Signature()
    '        InsertIntoTblWebEventLog("SubmitDoc505", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '        ' Set the ID list
    '        signatureObj.ID = New List(Of ID)
    '        Dim idObj As New ID
    '        idObj.Value = "urn:oasis:names:specification:ubl:signature:Invoice"
    '        signatureObj.ID.Add(idObj)
    '        InsertIntoTblWebEventLog("SubmitDoc506", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '        ' Set the SignatureMethod list
    '        signatureObj.SignatureMethod = New List(Of SignatureMethod)
    '        Dim signatureMethodObj As New SignatureMethod
    '        signatureMethodObj.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
    '        signatureObj.SignatureMethod.Add(signatureMethodObj)

    '        ' Add the fully configured Signature object to the Signature list
    '        SignatureList.Add(signatureObj)

    '        invoice.Signature = SignatureList
    '        InsertIntoTblWebEventLog("SubmitDoc507", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    Next

    '    InsertIntoTblWebEventLog("SubmitDoc508", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    Dim settings As New JsonSerializerSettings With {
    '    .NullValueHandling = NullValueHandling.Ignore
    '    }
    '    InsertIntoTblWebEventLog("SubmitDoc509", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    jsonresult = JsonConvert.SerializeObject(jsonObj, settings)
    '    InsertIntoTblWebEventLog("SubmitDoc510", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

    '    DocumentHashcode = GetSHA256Hash(jsonresult)

    '    'Catch ex As Exception
    '    '    InsertIntoTblWebEventLog("SubmitDoc50", invoiceNumber, ex.Message.ToString, Session("UserID").ToString)

    '    'End Try
    '    InsertIntoTblWebEventLog("SubmitDoc5", invoiceNumber, DocumentHashcode.ToString, Session("UserID").ToString)

    '    Try
    '        Using client = New HttpClient()
    '            InsertIntoTblWebEventLog("SubmitDoc6", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

    '            If Not String.IsNullOrWhiteSpace(tokenno) Then

    '                client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
    '                InsertIntoTblWebEventLog("SubmitDoc7", invoiceNumber, DocumentPayload.ToString, Session("UserID").ToString)

    '                If Not String.IsNullOrEmpty(DocumentPayload) Then
    '                    InsertIntoTblWebEventLog("SubmitDoc71", invoiceNumber, DocumentPayload.ToString, Session("UserID").ToString)

    '                    DocumentFormat = "JSON"
    '                    Dim byt As Byte() = System.Text.Encoding.UTF8.GetBytes(jsonresult)
    '                    DocumentPayloadbase64 = Convert.ToBase64String(byt)
    '                    InsertIntoTblWebEventLog("SubmitDoc8", invoiceNumber, DocumentPayloadbase64.ToString, Session("UserID").ToString)

    '                    Dim jsonData As New Dictionary(Of String, Object) From {
    '                            {"documents", New List(Of Object) From {
    '                                New Dictionary(Of String, Object) From {
    '                                        {"format", DocumentFormat},
    '                                        {"documentHash", DocumentHashcode},
    '                                        {"codeNumber", invoiceNumber},
    '                                        {"document", DocumentPayloadbase64}
    '                                }
    '                            }
    '                            }
    '                    }
    '                    InsertIntoTblWebEventLog("SubmitDoc9", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

    '                    Dim jsonContent As String = Newtonsoft.Json.JsonConvert.SerializeObject(jsonData)
    '                    InsertIntoTblWebEventLog("SubmitDoc10", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

    '                    Dim content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
    '                    InsertIntoTblWebEventLog("SubmitDoc11", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

    '                    Try
    '                        System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '                        'Dim response As HttpResponseMessage = client.PostAsync(SumbitDocumentURL, content).Result
    '                        Dim response As HttpResponseMessage = client.PostAsync(SumbitDocumentURL, content).Result
    '                        Dim responseString = response.Content.ReadAsStringAsync().Result
    '                        If response.IsSuccessStatusCode Then
    '                            Dim SubmissionResult As SubmissionResult = JsonConvert.DeserializeObject(Of SubmissionResult)(responseString)
    '                            InsertIntoTblWebEventLog("SubmitDoc12", invoiceNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

    '                            Return responseString
    '                        End If
    '                    Catch ex As HttpRequestException
    '                        Dim result1 = "error message -" + ex.Message
    '                        InsertIntoTblWebEventLog("SubmitDoc13", invoiceNumber, ex.Message.ToString, Session("UserID").ToString)

    '                        Return result1
    '                    End Try
    '                    InsertIntoTblWebEventLog("SubmitDoc14", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

    '                End If
    '            End If
    '        End Using
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("SubmitDoc15", "Exception", ex.Message.ToString, Session("UserID").ToString)

    '    End Try

    '    InsertIntoTblWebEventLog("INVOICE", "Submit Document", invoiceNumber, Session("UserID").ToString)

    '    Return ""
    'End Function
    Public Function assignSignedProperties(DigestValue As String, certificate As X509Certificate2, docdigest As String, signatureBase64 As String) As List(Of UBLExtensions)

        ' Create the main signedProperties list
        Dim signedProperties_digest As New List(Of SignedProperties)

        ' Create a SignedProperties object
        Dim signedPropertiesObj_digest As New SignedProperties()
        signedPropertiesObj_digest.ID = "id-xades-signed-props"

        ' Initialize SignedSignatureProperties
        signedPropertiesObj_digest.SignedSignatureProperties = New List(Of SignedSignatureProperties)
        Dim signedSignaturePropertiesObj_digest As New SignedSignatureProperties()

        ' SigningTime
        signedSignaturePropertiesObj_digest.SigningTime = New List(Of SigningTime)
        Dim signingTimeObj_digest As New SigningTime
        signingTimeObj_digest.value = DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")

        'signingTimeObj_digest.Algorithm = ""
        signedSignaturePropertiesObj_digest.SigningTime.Add(signingTimeObj_digest)

        ' SigningCertificate
        signedSignaturePropertiesObj_digest.SigningCertificate = New List(Of SigningCertificate)
        Dim signingCertificateObj_digest As New SigningCertificate()

        ' Cert
        signingCertificateObj_digest.Cert = New List(Of Cert)
        Dim certObj_digest As New Cert()

        ' CertDigest
        certObj_digest.CertDigest = New List(Of CertDigest)
        Dim certDigestObj_digest As New CertDigest()

        certDigestObj_digest.DigestMethod = New List(Of DigestMethod)
        Dim digestMethodObj_digest As New DigestMethod
        digestMethodObj_digest.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        digestMethodObj_digest.value = ""
        certDigestObj_digest.DigestMethod.Add(digestMethodObj_digest)

        certDigestObj_digest.DigestValue = New List(Of DigestValue)
        Dim digestValueObj_digest As New DigestValue
        digestValueObj_digest.value = DigestValue
        certDigestObj_digest.DigestValue.Add(digestValueObj_digest)

        certObj_digest.CertDigest.Add(certDigestObj_digest)

        ' IssuerSerial
        certObj_digest.IssuerSerial = New List(Of IssuerSerial)
        Dim issuerSerialObj_digest As New IssuerSerial()

        issuerSerialObj_digest.X509IssuerName = New List(Of X509IssuerName)
        Dim x509IssuerNameObj_digest As New X509IssuerName
        x509IssuerNameObj_digest.value = certificate.IssuerName.ToString()
        issuerSerialObj_digest.X509IssuerName.Add(x509IssuerNameObj_digest)

        Dim serialNumber1 As String = certificate.SerialNumber
        Dim CertSerialNumber1 As Long = Convert.ToInt64(serialNumber1, 16)


        issuerSerialObj_digest.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj_digest As New X509SerialNumber
        x509SerialNumberObj_digest.value = CertSerialNumber1
        issuerSerialObj_digest.X509SerialNumber.Add(x509SerialNumberObj_digest)

        certObj_digest.IssuerSerial.Add(issuerSerialObj_digest)

        ' Add the configured Cert object to SigningCertificate
        signingCertificateObj_digest.Cert.Add(certObj_digest)

        ' Add the SigningCertificate to SignedSignatureProperties
        signedSignaturePropertiesObj_digest.SigningCertificate.Add(signingCertificateObj_digest)

        ' Add the fully configured SignedSignatureProperties to SignedProperties
        signedPropertiesObj_digest.SignedSignatureProperties.Add(signedSignaturePropertiesObj_digest)

        ' Finally, add this SignedProperties object to the signedProperties list
        signedProperties_digest.Add(signedPropertiesObj_digest)


        Dim settings As New JsonSerializerSettings With {
            .NullValueHandling = NullValueHandling.Ignore
        }

        Dim json As String = JsonConvert.SerializeObject(signedProperties_digest, settings)

        Dim hashvalue As Byte()
        Dim signedpropsdigest As String
        Using sha256 As SHA256 = sha256.Create()
            hashvalue = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(json))
            signedpropsdigest = Convert.ToBase64String(hashvalue)
        End Using


        Dim UBLExtensions As New List(Of UBLExtensions)
        Dim UBLExtension As New List(Of UBLExtension)
        Dim UBLExtensionvalue As New UBLExtension

        Dim ExtensionURI As New List(Of ExtensionURI)
        Dim ExtensionURIvalue As New ExtensionURI
        ExtensionURIvalue.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
        ExtensionURI.Add(ExtensionURIvalue)

        UBLExtensionvalue.ExtensionURI = ExtensionURI

        Dim ExtensionContent As New List(Of ExtensionContent)
        Dim ExtensionContentvalue As New ExtensionContent
        Dim UBLDocumentSignatures As New List(Of UBLDocumentSignatures)
        Dim UBLDocumentSignaturesValue As New UBLDocumentSignatures

        Dim SignatureInformation As New List(Of SignatureInformation)
        Dim SignatureInformationValue As New SignatureInformation
        Dim SignatureInformationID As New List(Of ID)
        Dim SignatureInformationIDValue As New ID
        SignatureInformationIDValue.Value = "urn:oasis:names:specification:ubl:signature:1"

        SignatureInformationID.Add(SignatureInformationIDValue)

        Dim ReferencedSignatureID As New List(Of ReferencedSignatureID)
        Dim ReferencedSignatureIDvalue As New ReferencedSignatureID
        ReferencedSignatureIDvalue.value = "urn:oasis:names:specification:ubl:signature:Invoice"

        ReferencedSignatureID.Add(ReferencedSignatureIDvalue)

        ' Create the top-level list
        Dim _UBLExtensions As New List(Of UBLExtensions)

        ' Create UBLExtensions object
        Dim ublExtensionsObj As New UBLExtensions
        ublExtensionsObj.UBLExtension = New List(Of UBLExtension)

        ' Create a UBLExtension object
        Dim ublExtensionObj As New UBLExtension

        ' Set ExtensionURI
        ublExtensionObj.ExtensionURI = New List(Of ExtensionURI)
        Dim extensionUriObj As New ExtensionURI
        extensionUriObj.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
        ublExtensionObj.ExtensionURI.Add(extensionUriObj)

        ' Create ExtensionContent
        ublExtensionObj.ExtensionContent = New List(Of ExtensionContent)
        Dim extensionContentObj As New ExtensionContent

        ' Create UBLDocumentSignatures
        extensionContentObj.UBLDocumentSignatures = New List(Of UBLDocumentSignatures)
        Dim ublDocumentSignaturesObj As New UBLDocumentSignatures

        ' Create SignatureInformation
        ublDocumentSignaturesObj.SignatureInformation = New List(Of SignatureInformation)
        Dim signatureInformationObj As New SignatureInformation

        ' Set SignatureInformation ID
        signatureInformationObj.ID = New List(Of ID)
        Dim idObj As New ID
        idObj.Value = "urn:oasis:names:specification:ubl:signature:1"
        signatureInformationObj.ID.Add(idObj)

        ' Set ReferencedSignatureID
        signatureInformationObj.ReferencedSignatureID = New List(Of ReferencedSignatureID)
        Dim referencedSignatureIdObj As New ReferencedSignatureID
        referencedSignatureIdObj.value = "urn:oasis:names:specification:ubl:signature:Invoice"
        signatureInformationObj.ReferencedSignatureID.Add(referencedSignatureIdObj)

        ' Create SignatureInformation_Signature list
        signatureInformationObj.SignatureInformation_Signature = New List(Of SignatureInformation_Signature)

        ' Create the main SignatureInformation_Signature object
        Dim signatureInfoSignatureObj As New SignatureInformation_Signature
        signatureInfoSignatureObj.ID = "signature"

        ' Create SignatureObject
        signatureInfoSignatureObj.SignatureObject = New List(Of SignatureObject)
        Dim signatureObjectObj As New SignatureObject

        ' Create QualifyingProperties
        signatureObjectObj.QualifyingProperties = New List(Of QualifyingProperties)
        Dim qualifyingPropertiesObj As New QualifyingProperties
        qualifyingPropertiesObj.Target = "signature"

        ' Create SignedProperties
        qualifyingPropertiesObj.SignedProperties = New List(Of SignedProperties)
        Dim signedPropertiesObj As New SignedProperties
        signedPropertiesObj.ID = "id-xades-signed-props"

        ' Create SignedSignatureProperties
        signedPropertiesObj.SignedSignatureProperties = New List(Of SignedSignatureProperties)
        Dim signedSignaturePropertiesObj As New SignedSignatureProperties

        ' Set SigningTime
        signedSignaturePropertiesObj.SigningTime = New List(Of SigningTime)
        Dim signingTimeObj As New SigningTime
        signingTimeObj.value = DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")
        'signingTimeObj.Algorithm = ""
        signedSignaturePropertiesObj.SigningTime.Add(signingTimeObj)

        ' Set SigningCertificate
        signedSignaturePropertiesObj.SigningCertificate = New List(Of SigningCertificate)
        Dim signingCertificateObj As New SigningCertificate

        ' Create Cert
        signingCertificateObj.Cert = New List(Of Cert)
        Dim certObj As New Cert

        ' Create CertDigest
        certObj.CertDigest = New List(Of CertDigest)
        Dim certDigestObj As New CertDigest

        certDigestObj.DigestMethod = New List(Of DigestMethod)
        Dim digestMethodObj As New DigestMethod
        digestMethodObj.value = ""
        digestMethodObj.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        certDigestObj.DigestMethod.Add(digestMethodObj)

        certDigestObj.DigestValue = New List(Of DigestValue)
        Dim certDigestValueObj As New DigestValue
        certDigestValueObj.value = DigestValue
        certDigestObj.DigestValue.Add(certDigestValueObj)
        certObj.CertDigest.Add(certDigestObj)

        ' Set IssuerSerial
        certObj.IssuerSerial = New List(Of IssuerSerial)
        Dim issuerSerialObj As New IssuerSerial

        issuerSerialObj.X509IssuerName = New List(Of X509IssuerName)
        Dim issuerNameObj As New X509IssuerName
        issuerNameObj.value = certificate.IssuerName.Name
        issuerSerialObj.X509IssuerName.Add(issuerNameObj)

        issuerSerialObj.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj As New X509SerialNumber
        x509SerialNumberObj.value = certificate.SerialNumber
        issuerSerialObj.X509SerialNumber.Add(x509SerialNumberObj)

        certObj.IssuerSerial.Add(issuerSerialObj)
        signingCertificateObj.Cert.Add(certObj)

        ' Add SigningCertificate to SignedSignatureProperties
        signedSignaturePropertiesObj.SigningCertificate.Add(signingCertificateObj)

        ' Add SignedSignatureProperties to SignedProperties
        signedPropertiesObj.SignedSignatureProperties.Add(signedSignaturePropertiesObj)

        ' Add SignedProperties to QualifyingProperties
        qualifyingPropertiesObj.SignedProperties.Add(signedPropertiesObj)

        ' Add QualifyingProperties to SignatureObject
        signatureObjectObj.QualifyingProperties.Add(qualifyingPropertiesObj)

        ' Add SignatureObject to SignatureInformation_Signature
        signatureInfoSignatureObj.SignatureObject.Add(signatureObjectObj)

        ' Create KeyInfo
        signatureInfoSignatureObj.KeyInfo = New List(Of KeyInfo)
        Dim keyInfoObj As New KeyInfo

        keyInfoObj.X509Data = New List(Of X509Data)
        Dim x509DataObj As New X509Data

        x509DataObj.X509Certificate = New List(Of X509Certificate)
        Dim x509CertObj As New X509Certificate
        x509CertObj.value = Convert.ToBase64String(certificate.RawData)
        x509DataObj.X509Certificate.Add(x509CertObj)

        x509DataObj.X509SubjectName = New List(Of X509SubjectName)
        Dim x509SubjectNameObj As New X509SubjectName
        x509SubjectNameObj.value = certificate.SubjectName.Name
        x509DataObj.X509SubjectName.Add(x509SubjectNameObj)

        x509DataObj.X509IssuerSerial = New List(Of X509IssuerSerial)
        Dim x509IssuerSerialObj As New X509IssuerSerial

        x509IssuerSerialObj.X509IssuerName = New List(Of X509IssuerName)
        Dim x509IssuerNameObj2 As New X509IssuerName
        x509IssuerNameObj2.value = certificate.IssuerName.Name
        x509IssuerSerialObj.X509IssuerName.Add(x509IssuerNameObj2)

        Dim serialNumber As String = certificate.SerialNumber
        Dim CertSerialNumber As Long = Convert.ToInt64(serialNumber, 16)

        x509IssuerSerialObj.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj2 As New X509SerialNumber
        x509SerialNumberObj2.value = CertSerialNumber
        x509IssuerSerialObj.X509SerialNumber.Add(x509SerialNumberObj2)

        x509DataObj.X509IssuerSerial.Add(x509IssuerSerialObj)

        keyInfoObj.X509Data.Add(x509DataObj)

        ' Add KeyInfo to SignatureInformation_Signature
        signatureInfoSignatureObj.KeyInfo.Add(keyInfoObj)

        ' Create SignatureValue
        signatureInfoSignatureObj.SignatureValue = New List(Of SignatureValue)
        Dim signatureValueObj As New SignatureValue
        signatureValueObj.value = signatureBase64
        signatureInfoSignatureObj.SignatureValue.Add(signatureValueObj)

        ' Create SignedInfo
        signatureInfoSignatureObj.SignedInfo = New List(Of SignedInfo)
        Dim signedInfoObj As New SignedInfo

        ' SignedInfoSignatureMethod
        signedInfoObj.SignedInfoSignatureMethod = New List(Of SignedInfoSignatureMethod)
        Dim signedInfoSigMethodObj As New SignedInfoSignatureMethod
        signedInfoSigMethodObj.value = ""
        signedInfoSigMethodObj.Algorithm = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
        signedInfoObj.SignedInfoSignatureMethod.Add(signedInfoSigMethodObj)

        ' References
        signedInfoObj.Reference = New List(Of Reference)

        Dim refProps As New Reference
        refProps.Type = "http://uri.etsi.org/01903/v1.3.2#SignedProperties"
        refProps.URI = "#id-xades-signed-props"
        refProps.DigestMethod = New List(Of DigestMethod)
        Dim refPropsDigestMethod As New DigestMethod
        refPropsDigestMethod.value = ""
        refPropsDigestMethod.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        refProps.DigestMethod.Add(refPropsDigestMethod)
        refProps.DigestValue = New List(Of DigestValue)
        Dim refPropsDigestValueObj As New DigestValue
        refPropsDigestValueObj.value = signedpropsdigest
        refProps.DigestValue.Add(refPropsDigestValueObj)
        signedInfoObj.Reference.Add(refProps)

        Dim refDoc As New Reference
        refDoc.Type = ""
        refDoc.URI = ""
        refDoc.DigestMethod = New List(Of DigestMethod)
        Dim refDocDigestMethod As New DigestMethod
        refDocDigestMethod.value = ""
        refDocDigestMethod.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        refDoc.DigestMethod.Add(refDocDigestMethod)
        refDoc.DigestValue = New List(Of DigestValue)
        Dim refDocDigestValueObj As New DigestValue
        refDocDigestValueObj.value = docdigest
        refDoc.DigestValue.Add(refDocDigestValueObj)
        signedInfoObj.Reference.Add(refDoc)

        ' Add SignedInfo to SignatureInformation_Signature
        signatureInfoSignatureObj.SignedInfo.Add(signedInfoObj)

        ' Add SignatureInformation_Signature to SignatureInformation
        signatureInformationObj.SignatureInformation_Signature.Add(signatureInfoSignatureObj)

        ' Add SignatureInformation to UBLDocumentSignatures
        ublDocumentSignaturesObj.SignatureInformation.Add(signatureInformationObj)

        ' Add UBLDocumentSignatures to ExtensionContent
        extensionContentObj.UBLDocumentSignatures.Add(ublDocumentSignaturesObj)

        ' Add ExtensionContent to UBLExtension
        ublExtensionObj.ExtensionContent.Add(extensionContentObj)

        ' Add UBLExtension to UBLExtensions
        ublExtensionsObj.UBLExtension.Add(ublExtensionObj)

        ' Finally add this to the list
        _UBLExtensions.Add(ublExtensionsObj)

        Dim ublExtensionjson As String = JsonConvert.SerializeObject(_UBLExtensions, settings)


        Return _UBLExtensions
    End Function

    Public Function AssignJsonvalue(invoiceNumber As String)
        Try
            Dim invoiceWrapper As New InvoiceWrapper()

            Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
            Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
            Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

            Dim test1 = DateTime.UtcNow.Date
            Dim test = DateTime.UtcNow.TimeOfDay

            InsertIntoTblWebEventLog("Invoice", "AssignJsonvalue1", "", "")


            Dim invoiceID = invoiceNumber 'for testing manually add this. want to change this and submit document method also need to change
            Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
            Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
            Dim InvoiceTypeCode = "01"
            'Dim InvoiceListVersionID = "1.0"
            Dim InvoiceListVersionID = "1.1"
            Dim DocumentCurrencyCode = "MYR"
            Dim periodStartDate = "2024-11-15"
            Dim periodEndDate = "2024-12-15"
            Dim periodDescription = "Monthly"
            Dim BillingAdditionalDocumentReferenceID = " "
            Dim AdditionalDocumentReferenceID = ""

            InsertIntoTblWebEventLog("AssignJsonvalue2", invoiceNumber, test.ToString, Session("UserID").ToString)


            ' for AccountingSupplierParty
            Dim AccountingSupplierParty_AdditionalAccountID = ""
            Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
            Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
            Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
            Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
            Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
            Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
            Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
            Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"

            InsertIntoTblWebEventLog("AssignJsonvalue3", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' for AccountingCustomerParty
            'For ConsolidatedInvoice "EI00000000010" value for same in all Buyer. In standard It different
            Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "EI00000000010"
            'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"

            'For ConsolidatedInvoice PartyIdentification ID is NA value. In standard It different
            Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "NA"

            '  Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
            Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
            Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
            Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
            Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"
            'For ConsolidatedInvoice Contact ID is NA value. In standard It different
            Dim AccountingCustomerParty_Party_Contact_Telephone = "NA"
            Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "NA"

            InsertIntoTblWebEventLog("AssignJsonvalue4", invoiceNumber, test1.ToString, Session("UserID").ToString)


            'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
            'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"

            'for Delivery DeliveryParty
            Dim DeliveryParty_LegalEntity_RegistrationName = ""
            Dim DeliveryParty_PostalAddress_CityName = ""
            Dim DeliveryParty_PostalAddress_PostalZone = ""
            Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
            Dim DeliveryParty_PostalAddress_AddressLine1 = ""
            Dim DeliveryParty_PostalAddress_AddressLine2 = ""
            Dim DeliveryParty_PostalAddress_AddressLine3 = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
            Dim DeliveryParty_PartyIdentification_ID = ""
            Dim DeliveryParty_PartyIdentification_schemeID = ""

            InsertIntoTblWebEventLog("AssignJsonvalue5", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for Delivery Shipment
            Dim Delivery_Shipment_ID = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
            Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue6", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for paymentMeans
            Dim paymentMeans_PaymentMeansCode_value = "01"
            Dim paymentMeans_PayeeFinancialAccount_value = ""

            'for paymentTerm
            Dim paymentTerms_Note_value = ""

            'for prepaidPayment
            Dim prepaidPayment_ID = ""
            Dim prepaidPayment_PaidAmount_value = 0
            Dim prepaidPayment_PaidAmount_currencyID = "MYR"
            Dim prepaidPayment_PaidDate = ""
            Dim prepaidPayment_PaidTime_value = ""

            'for AllowanceCharge 
            Dim AllowanceCharge_ChargeIndicator = True
            Dim AllowanceCharge_AllowanceChargeReason_value = ""
            Dim AllowanceCharge_Amount_value = 0
            Dim AllowanceCharge_Amount_currencyID = "MYR"

            'for AllowanceCharge 1
            Dim AllowanceCharge_ChargeIndicator_1 = False
            Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
            Dim AllowanceCharge_Amount_value_1 = 0
            Dim AllowanceCharge_Amount_currencyID_1 = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue7", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for TaxTotal
            Dim TaxTotal_TaxAmount_value = 10
            Dim TaxTotal_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
            Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxAmount_value = 10
            Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 2000D
            Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 20D
            Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            'for LegalMonetaryTotal 
            Dim LegalMonetaryTotal_LineExtensionAmount_value = 3000
            Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_TaxExclusiveAmount_value = 3000
            Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_TaxInclusiveAmount_value = 3010
            Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
            Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
            Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_PayableAmount_value = 3010
            Dim LegalMonetaryTotal_PayableAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
            Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue8", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for InvoiceLine 
            Dim InvoiceLine_AllowanceCharge_Amount_value = 0
            Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
            Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
            Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
            Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

            Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
            Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
            Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
            Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
            Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

            Dim InvoiceLine_ID_value = "1"
            Dim InvoiceLine_InvoicedQuantity_value = 3
            Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

            'For ConsolidatedInvoice ItemClassificationCode is 004. in Standard is 035
            'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
            Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "004"

            'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
            Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
            Dim InvoiceLine_Item_Description_value = "Pest control"
            Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

            Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
            Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

            Dim InvoiceLine_LineExtensionAmount_value = 3000
            Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

            Dim InvoiceLine_Price_PriceAmount_value = 1000
            Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
            Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

            InsertIntoTblWebEventLog("AssignJsonvalue9", invoiceNumber, test1.ToString, Session("UserID").ToString)


            'for TaxExchangeRate
            Dim TaxExchangeRate_SourceCurrencyCode_value = "MYR"
            Dim TaxExchangeRate_TargetCurrencyCode_value = "MYR"
            Dim TaxExchangeRate_CalculationRate_value = 0


            invoiceWrapper._D = invoiceDetails_D
            invoiceWrapper._A = invoiceDetails_A
            invoiceWrapper._B = invoiceDetails_B

            invoiceWrapper.Invoice = New List(Of Invoice)()

            InsertIntoTblWebEventLog("AssignJsonvalue10", invoiceNumber, test1.ToString, Session("UserID").ToString)

            Dim invoice As New Invoice()

            invoice.ID = New List(Of ID)
            Dim invoiceIDObj As New ID
            invoiceIDObj.Value = invoiceID
            invoice.ID.Add(invoiceIDObj)

            ' Set IssueDate
            invoice.IssueDate = New List(Of IssueDate)
            Dim issueDateObj As New IssueDate
            issueDateObj.Value = IssueDate
            invoice.IssueDate.Add(issueDateObj)

            ' Set IssueTime
            invoice.IssueTime = New List(Of IssueTime)
            Dim issueTimeObj As New IssueTime
            issueTimeObj.Value = IssueTime
            invoice.IssueTime.Add(issueTimeObj)

            ' Set InvoiceTypeCode
            invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)
            Dim invoiceTypeCodeObj As New InvoiceTypeCode
            invoiceTypeCodeObj.Value = InvoiceTypeCode
            invoiceTypeCodeObj.ListVersionID = InvoiceListVersionID
            invoice.InvoiceTypeCode.Add(invoiceTypeCodeObj)

            ' Set DocumentCurrencyCode
            invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)
            Dim docCurrencyCodeObj As New DocumentCurrencyCode
            docCurrencyCodeObj.Value = DocumentCurrencyCode
            invoice.DocumentCurrencyCode.Add(docCurrencyCodeObj)

            InsertIntoTblWebEventLog("AssignJsonvalue11", invoiceNumber, test1.ToString, Session("UserID").ToString)


            ' InvoicePeriod
            invoice.InvoicePeriod = New List(Of InvoicePeriod)
            Dim period As New InvoicePeriod()

            InsertIntoTblWebEventLog("AssignJsonvalue12", invoiceNumber, test1.ToString, Session("UserID").ToString)


            period.StartDate = New List(Of StartDate)
            Dim startDateObj As New StartDate
            startDateObj.Value = periodStartDate
            period.StartDate.Add(startDateObj)

            period.EndDate = New List(Of EndDate)
            Dim endDateObj As New EndDate
            endDateObj.Value = periodEndDate
            period.EndDate.Add(endDateObj)

            period.Description = New List(Of Description)
            Dim descriptionObj As New Description
            descriptionObj.Value = periodDescription
            period.Description.Add(descriptionObj)

            invoice.InvoicePeriod.Add(period)
            InsertIntoTblWebEventLog("AssignJsonvalue13", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' BillingReference
            invoice.BillingReference = New List(Of BillingReference)
            Dim billingRef As New BillingReference

            billingRef.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)
            Dim billingAdditionalDocRef As New AdditionalDocumentReference

            billingAdditionalDocRef.ID = New List(Of ID)
            Dim billingAddDocRefIDObj As New ID
            billingAddDocRefIDObj.Value = BillingAdditionalDocumentReferenceID
            billingAdditionalDocRef.ID.Add(billingAddDocRefIDObj)

            billingRef.AdditionalDocumentReference.Add(billingAdditionalDocRef)
            invoice.BillingReference.Add(billingRef)
            InsertIntoTblWebEventLog("AssignJsonvalue14", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AdditionalDocumentReference
            invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

            Dim addDocRef1 As New AdditionalDocumentReference
            addDocRef1.ID = New List(Of ID)
            Dim addDocRef1ID As New ID
            addDocRef1ID.Value = AdditionalDocumentReferenceID
            addDocRef1.ID.Add(addDocRef1ID)
            invoice.AdditionalDocumentReference.Add(addDocRef1)

            ' Repeat the pattern for AdditionalDocumentReference2, 3, and 4
            Dim addDocRef2 As New AdditionalDocumentReference
            addDocRef2.ID = New List(Of ID)
            Dim addDocRef2ID As New ID
            addDocRef2ID.Value = AdditionalDocumentReferenceID
            addDocRef2.ID.Add(addDocRef2ID)
            invoice.AdditionalDocumentReference.Add(addDocRef2)

            Dim addDocRef3 As New AdditionalDocumentReference
            addDocRef3.ID = New List(Of ID)
            Dim addDocRef3ID As New ID
            addDocRef3ID.Value = AdditionalDocumentReferenceID
            addDocRef3.ID.Add(addDocRef3ID)
            invoice.AdditionalDocumentReference.Add(addDocRef3)

            Dim addDocRef4 As New AdditionalDocumentReference
            addDocRef4.ID = New List(Of ID)
            Dim addDocRef4ID As New ID
            addDocRef4ID.Value = AdditionalDocumentReferenceID
            addDocRef4.ID.Add(addDocRef4ID)
            invoice.AdditionalDocumentReference.Add(addDocRef4)
            InsertIntoTblWebEventLog("AssignJsonvalue15", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AccountingSupplierParty start

            invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

            ' Create the supplier object
            Dim supplier As New AccountingSupplierParty()

            ' AdditionalAccountID
            supplier.AdditionalAccountID = New List(Of AdditionalAccountID)
            Dim additionalAccountIDObj As New AdditionalAccountID
            additionalAccountIDObj.value = AccountingSupplierParty_AdditionalAccountID
            additionalAccountIDObj.schemeAgencyName = AccountingSupplierParty_schemeAgencyName
            supplier.AdditionalAccountID.Add(additionalAccountIDObj)

            ' Party
            supplier.Party = New List(Of Party)
            Dim partyObj As New Party()

            ' IndustryClassificationCode
            partyObj.IndustryClassificationCode = New List(Of IndustryClassificationCode)
            Dim industryCodeObj As New IndustryClassificationCode
            industryCodeObj.value = AccountingSupplierParty_Party_IndustryClassificationCode_value
            industryCodeObj.name = AccountingSupplierParty_Party_IndustryClassificationCode_name
            partyObj.IndustryClassificationCode.Add(industryCodeObj)

            ' PartyIdentification
            partyObj.PartyIdentification = New List(Of PartyIdentification)

            Dim partyIdentificationObj1 As New PartyIdentification
            partyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID1 As New PartyIdentificationID
            partyIdentificationID1.ID = AccountingSupplierParty_Party_PartyIdentification_ID1
            partyIdentificationID1.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
            partyIdentificationObj1.ID.Add(partyIdentificationID1)
            partyObj.PartyIdentification.Add(partyIdentificationObj1)

            Dim partyIdentificationObj2 As New PartyIdentification
            partyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID2 As New PartyIdentificationID
            partyIdentificationID2.ID = AccountingSupplierParty_Party_PartyIdentification_ID2
            partyIdentificationID2.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
            partyIdentificationObj2.ID.Add(partyIdentificationID2)
            partyObj.PartyIdentification.Add(partyIdentificationObj2)

            InsertIntoTblWebEventLog("AssignJsonvalue16", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' PostalAddress
            partyObj.PostalAddress = New List(Of PostalAddress)
            Dim postalAddressObj As New PostalAddress

            postalAddressObj.CityName = New List(Of CityName)
            Dim cityNameObj As New CityName
            cityNameObj.value = AccountingSupplierParty_Party_PostalAddress_CityName
            postalAddressObj.CityName.Add(cityNameObj)

            postalAddressObj.PostalZone = New List(Of PostalZone)
            Dim postalZoneObj As New PostalZone
            postalZoneObj.value = AccountingSupplierParty_Party_PostalAddress_PostalZone
            postalAddressObj.PostalZone.Add(postalZoneObj)

            postalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim countrySubentityCodeObj As New CountrySubentityCode
            countrySubentityCodeObj.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode
            postalAddressObj.CountrySubentityCode.Add(countrySubentityCodeObj)

            InsertIntoTblWebEventLog("AssignJsonvalue17", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AddressLine
            postalAddressObj.AddressLine = New List(Of AddressLine)

            Dim addressLineObj1 As New AddressLine
            addressLineObj1.Line = New List(Of Line)
            Dim lineObj1 As New Line
            lineObj1.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1
            addressLineObj1.Line.Add(lineObj1)
            postalAddressObj.AddressLine.Add(addressLineObj1)

            Dim addressLineObj2 As New AddressLine
            addressLineObj2.Line = New List(Of Line)
            Dim lineObj2 As New Line
            lineObj2.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2
            addressLineObj2.Line.Add(lineObj2)
            postalAddressObj.AddressLine.Add(addressLineObj2)

            Dim addressLineObj3 As New AddressLine
            addressLineObj3.Line = New List(Of Line)
            Dim lineObj3 As New Line
            lineObj3.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3
            addressLineObj3.Line.Add(lineObj3)
            postalAddressObj.AddressLine.Add(addressLineObj3)

            ' Country
            postalAddressObj.Country = New List(Of Country)
            Dim countryObj As New Country
            countryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim identificationCodeObj As New IdentificationCode
            identificationCodeObj.value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value
            identificationCodeObj.listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID
            identificationCodeObj.listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            countryObj.IdentificationCode.Add(identificationCodeObj)
            postalAddressObj.Country.Add(countryObj)

            partyObj.PostalAddress.Add(postalAddressObj)

            InsertIntoTblWebEventLog("AssignJsonvalue18", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' PartyLegalEntity
            partyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim partyLegalEntityObj As New PartyLegalEntity
            partyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim registrationNameObj As New RegistrationName
            registrationNameObj.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName
            partyLegalEntityObj.RegistrationName.Add(registrationNameObj)
            partyObj.PartyLegalEntity.Add(partyLegalEntityObj)

            ' Contact
            partyObj.Contact = New List(Of Contact)
            Dim contactObj As New Contact

            contactObj.Telephone = New List(Of Telephone)
            Dim telephoneObj As New Telephone
            telephoneObj.value = AccountingSupplierParty_Party_Contact_Telephone
            contactObj.Telephone.Add(telephoneObj)

            contactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim emailObj As New ElectronicMail
            emailObj.value = AccountingSupplierParty_Party_Contact_ElectronicMail
            contactObj.ElectronicMail.Add(emailObj)

            partyObj.Contact.Add(contactObj)

            InsertIntoTblWebEventLog("AssignJsonvalue19", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Add the configured party to the supplier
            supplier.Party.Add(partyObj)

            ' Add supplier to AccountingSupplierParty
            invoice.AccountingSupplierParty.Add(supplier)

            InsertIntoTblWebEventLog("AssignJsonvalue20", invoiceNumber, test1.ToString, Session("UserID").ToString)


            ' AccountingSupplierParty end

            ' AccountingCustomerParty start
            ' Initialize the AccountingCustomerParty list
            invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

            ' Create the AccountingCustomerParty object
            Dim customer As New AccountingCustomerParty()

            ' Create the Party list
            customer.Party = New List(Of Party)
            Dim customerpartyObj As New Party()

            ' IndustryClassificationCode is Nothing in this case
            customerpartyObj.IndustryClassificationCode = Nothing

            ' PartyIdentification
            customerpartyObj.PartyIdentification = New List(Of PartyIdentification)

            ' First PartyIdentification
            Dim customerpartyIdentificationObj1 As New PartyIdentification
            customerpartyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID1 As New PartyIdentificationID
            customerpartyIdentificationID1.ID = AccountingCustomerParty_Party_PartyIdentification_ID1
            customerpartyIdentificationID1.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
            customerpartyIdentificationObj1.ID.Add(customerpartyIdentificationID1)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj1)

            ' Second PartyIdentification
            Dim customerpartyIdentificationObj2 As New PartyIdentification
            customerpartyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID2 As New PartyIdentificationID
            customerpartyIdentificationID2.ID = AccountingCustomerParty_Party_PartyIdentification_ID2
            customerpartyIdentificationID2.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
            customerpartyIdentificationObj2.ID.Add(customerpartyIdentificationID2)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj2)

            ' Third PartyIdentification
            Dim customerpartyIdentificationObj3 As New PartyIdentification
            customerpartyIdentificationObj3.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID3 As New PartyIdentificationID
            customerpartyIdentificationID3.ID = AccountingCustomerParty_Party_PartyIdentification_ID3
            customerpartyIdentificationID3.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
            customerpartyIdentificationObj3.ID.Add(customerpartyIdentificationID3)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj3)

            ' PostalAddress
            customerpartyObj.PostalAddress = New List(Of PostalAddress)
            Dim customerpostalAddressObj As New PostalAddress

            customerpostalAddressObj.CityName = New List(Of CityName)
            Dim customercityNameObj As New CityName
            customercityNameObj.value = AccountingCustomerParty_Party_PostalAddress_CityName
            customerpostalAddressObj.CityName.Add(customercityNameObj)

            customerpostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim customerpostalZoneObj As New PostalZone
            customerpostalZoneObj.value = AccountingCustomerParty_Party_PostalAddress_PostalZone
            customerpostalAddressObj.PostalZone.Add(customerpostalZoneObj)

            customerpostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim customercountrySubentityCodeObj As New CountrySubentityCode
            customercountrySubentityCodeObj.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode
            customerpostalAddressObj.CountrySubentityCode.Add(customercountrySubentityCodeObj)

            ' AddressLine
            customerpostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim customeraddressLineObj1 As New AddressLine
            customeraddressLineObj1.Line = New List(Of Line)
            Dim customerlineObj1 As New Line
            customerlineObj1.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1
            customeraddressLineObj1.Line.Add(customerlineObj1)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj1)

            Dim customeraddressLineObj2 As New AddressLine
            customeraddressLineObj2.Line = New List(Of Line)
            Dim customerlineObj2 As New Line
            customerlineObj2.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2
            customeraddressLineObj2.Line.Add(customerlineObj2)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj2)

            Dim customeraddressLineObj3 As New AddressLine
            customeraddressLineObj3.Line = New List(Of Line)
            Dim customerlineObj3 As New Line
            customerlineObj3.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3
            customeraddressLineObj3.Line.Add(customerlineObj3)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj3)

            ' Country
            customerpostalAddressObj.Country = New List(Of Country)
            Dim customercountryObj As New Country
            customercountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim customeridentificationCodeObj As New IdentificationCode
            customeridentificationCodeObj.value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value
            customeridentificationCodeObj.listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID
            customeridentificationCodeObj.listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            customercountryObj.IdentificationCode.Add(customeridentificationCodeObj)
            customerpostalAddressObj.Country.Add(customercountryObj)

            customerpartyObj.PostalAddress.Add(customerpostalAddressObj)

            ' PartyLegalEntity
            customerpartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim customerpartyLegalEntityObj As New PartyLegalEntity
            customerpartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim customerregistrationNameObj As New RegistrationName
            customerregistrationNameObj.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName
            customerpartyLegalEntityObj.RegistrationName.Add(customerregistrationNameObj)
            customerpartyObj.PartyLegalEntity.Add(customerpartyLegalEntityObj)

            ' Contact
            customerpartyObj.Contact = New List(Of Contact)
            Dim customercontactObj As New Contact

            customercontactObj.Telephone = New List(Of Telephone)
            Dim customertelephoneObj As New Telephone
            customertelephoneObj.value = AccountingCustomerParty_Party_Contact_Telephone
            customercontactObj.Telephone.Add(customertelephoneObj)

            customercontactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim customeremailObj As New ElectronicMail
            customeremailObj.value = AccountingCustomerParty_Party_Contact_ElectronicMail
            customercontactObj.ElectronicMail.Add(customeremailObj)

            customerpartyObj.Contact.Add(customercontactObj)

            InsertIntoTblWebEventLog("AssignJsonvalue21", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Add the configured party to customer
            customer.Party.Add(customerpartyObj)

            ' Finally, add the customer to AccountingCustomerParty list
            invoice.AccountingCustomerParty.Add(customer)


            ' AccountingCustomerParty end

            ' delivery start
            ' Initialize the Delivery list
            invoice.Delivery = New List(Of Delivery)

            ' Create the Delivery object
            Dim delivery As New Delivery()

            ' DeliveryParty

            delivery.DeliveryParty = New List(Of DeliveryParty)
            Dim deliveryPartyObj As New DeliveryParty

            ' PartyLegalEntity
            deliveryPartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim deliverypartyLegalEntityObj As New PartyLegalEntity
            deliverypartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim deliveryregistrationNameObj As New RegistrationName
            deliveryregistrationNameObj.value = DeliveryParty_LegalEntity_RegistrationName
            deliverypartyLegalEntityObj.RegistrationName.Add(deliveryregistrationNameObj)
            deliveryPartyObj.PartyLegalEntity.Add(deliverypartyLegalEntityObj)

            ' PostalAddress
            deliveryPartyObj.PostalAddress = New List(Of PostalAddress)
            Dim deliverypostalAddressObj As New PostalAddress

            ' CityName
            deliverypostalAddressObj.CityName = New List(Of CityName)
            Dim deliverycityNameObj As New CityName
            deliverycityNameObj.value = DeliveryParty_PostalAddress_CityName
            deliverypostalAddressObj.CityName.Add(deliverycityNameObj)

            ' PostalZone
            deliverypostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim deliverypostalZoneObj As New PostalZone
            deliverypostalZoneObj.value = DeliveryParty_PostalAddress_PostalZone
            deliverypostalAddressObj.PostalZone.Add(deliverypostalZoneObj)

            ' CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim deliverycountrySubentityCodeObj As New CountrySubentityCode
            deliverycountrySubentityCodeObj.value = DeliveryParty_PostalAddress_CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode.Add(deliverycountrySubentityCodeObj)

            ' AddressLine
            deliverypostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim deliveryaddressLineObj1 As New AddressLine
            deliveryaddressLineObj1.Line = New List(Of Line)
            Dim deliverylineObj1 As New Line
            deliverylineObj1.value = DeliveryParty_PostalAddress_AddressLine1
            deliveryaddressLineObj1.Line.Add(deliverylineObj1)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj1)

            Dim deliveryaddressLineObj2 As New AddressLine
            deliveryaddressLineObj2.Line = New List(Of Line)
            Dim deliverylineObj2 As New Line
            deliverylineObj2.value = DeliveryParty_PostalAddress_AddressLine2
            deliveryaddressLineObj2.Line.Add(deliverylineObj2)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj2)

            Dim deliveryaddressLineObj3 As New AddressLine
            deliveryaddressLineObj3.Line = New List(Of Line)
            Dim deliverylineObj3 As New Line
            deliverylineObj3.value = DeliveryParty_PostalAddress_AddressLine3
            deliveryaddressLineObj3.Line.Add(deliverylineObj3)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj3)

            ' Country
            deliverypostalAddressObj.Country = New List(Of Country)
            Dim deliverycountryObj As New Country
            deliverycountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim deliveryidentificationCodeObj As New IdentificationCode
            deliveryidentificationCodeObj.value = DeliveryParty_PostalAddress_Country_IdentificationCode_value
            deliveryidentificationCodeObj.listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID
            deliveryidentificationCodeObj.listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
            deliverycountryObj.IdentificationCode.Add(deliveryidentificationCodeObj)
            deliverypostalAddressObj.Country.Add(deliverycountryObj)

            deliveryPartyObj.PostalAddress.Add(deliverypostalAddressObj)

            ' PartyIdentification
            deliveryPartyObj.PartyIdentification = New List(Of PartyIdentification)
            Dim deliverypartyIdentificationObj As New PartyIdentification
            deliverypartyIdentificationObj.ID = New List(Of PartyIdentificationID)
            Dim deliverypartyIdentificationIDObj As New PartyIdentificationID
            deliverypartyIdentificationIDObj.ID = DeliveryParty_PartyIdentification_ID
            deliverypartyIdentificationIDObj.schemeID = DeliveryParty_PartyIdentification_schemeID
            deliverypartyIdentificationObj.ID.Add(deliverypartyIdentificationIDObj)
            deliveryPartyObj.PartyIdentification.Add(deliverypartyIdentificationObj)

            delivery.DeliveryParty.Add(deliveryPartyObj)

            InsertIntoTblWebEventLog("AssignJsonvalue22", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Shipment
            delivery.Shipment = New List(Of Shipment)
            Dim deliveryshipmentObj As New Shipment

            deliveryshipmentObj.ID = New List(Of ID)
            Dim deliveryshipmentIDObj As New ID
            deliveryshipmentIDObj.Value = Delivery_Shipment_ID
            deliveryshipmentObj.ID.Add(deliveryshipmentIDObj)

            ' FreightAllowanceCharge
            deliveryshipmentObj.FreightAllowanceCharge = New List(Of FreightAllowanceCharge)
            Dim deliveryfreightAllowanceChargeObj As New FreightAllowanceCharge

            deliveryfreightAllowanceChargeObj.ChargeIndicator = New List(Of ChargeIndicator)
            Dim deliverychargeIndicatorObj As New ChargeIndicator
            deliverychargeIndicatorObj.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator
            deliveryfreightAllowanceChargeObj.ChargeIndicator.Add(deliverychargeIndicatorObj)

            deliveryfreightAllowanceChargeObj.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim deliveryallowanceChargeReasonObj As New AllowanceChargeReason
            deliveryallowanceChargeReasonObj.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason
            deliveryfreightAllowanceChargeObj.AllowanceChargeReason.Add(deliveryallowanceChargeReasonObj)

            deliveryfreightAllowanceChargeObj.Amount = New List(Of Amount)
            Dim deliveryamountObj As New Amount
            deliveryamountObj.value = Delivery_Shipment_FreightAllowanceCharge_Amount_value
            deliveryamountObj.currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
            deliveryfreightAllowanceChargeObj.Amount.Add(deliveryamountObj)

            deliveryshipmentObj.FreightAllowanceCharge.Add(deliveryfreightAllowanceChargeObj)

            delivery.Shipment.Add(deliveryshipmentObj)

            ' Finally, add the delivery to the invoice
            invoice.Delivery.Add(delivery)

            InsertIntoTblWebEventLog("AssignJsonvalue23", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' delivery End

            'paymentMeans start
            ' Initialize the PaymentMeans list
            invoice.PaymentMeans = New List(Of PaymentMeans)

            ' Create a PaymentMeans object
            Dim paymentMeans As New PaymentMeans()

            ' Set PaymentMeansCode
            paymentMeans.PaymentMeansCode = New List(Of PaymentMeansCode)
            Dim paymentMeansCodeObj As New PaymentMeansCode
            paymentMeansCodeObj.value = paymentMeans_PaymentMeansCode_value
            paymentMeans.PaymentMeansCode.Add(paymentMeansCodeObj)

            ' Set PayeeFinancialAccount
            paymentMeans.PayeeFinancialAccount = New List(Of PayeeFinancialAccount)
            Dim payeeFinancialAccountObj As New PayeeFinancialAccount

            payeeFinancialAccountObj.ID = New List(Of ID)
            Dim payeeFinancialAccountID As New ID
            payeeFinancialAccountID.Value = paymentMeans_PayeeFinancialAccount_value
            payeeFinancialAccountObj.ID.Add(payeeFinancialAccountID)

            paymentMeans.PayeeFinancialAccount.Add(payeeFinancialAccountObj)

            ' Add the completed PaymentMeans object to the invoice
            invoice.PaymentMeans.Add(paymentMeans)

            'paymentMeans end

            'paymentTerms start

            ' Initialize the PaymentTerms list
            invoice.PaymentTerms = New List(Of PaymentTerms)

            ' Create a PaymentTerms object
            Dim paymentTerms As New PaymentTerms()

            ' Set Note
            paymentTerms.Note = New List(Of Note)
            Dim noteObj As New Note
            noteObj.value = paymentTerms_Note_value
            paymentTerms.Note.Add(noteObj)

            ' Add the completed paymentTerms object to invoice.PaymentTerms
            invoice.PaymentTerms.Add(paymentTerms)

            'paymentTerms end

            'prepaidPayment start
            ' Initialize the PrepaidPayment list
            invoice.PrepaidPayment = New List(Of PrepaidPayment)

            ' Create PrepaidPayment object
            Dim prepaidPayment As New PrepaidPayment()

            ' Set ID
            prepaidPayment.ID = New List(Of ID)
            Dim idObj As New ID
            idObj.Value = prepaidPayment_ID
            prepaidPayment.ID.Add(idObj)

            ' Set PaidAmount
            prepaidPayment.PaidAmount = New List(Of PaidAmount)
            Dim paidAmountObj As New PaidAmount
            paidAmountObj.value = prepaidPayment_PaidAmount_value
            paidAmountObj.currencyID = prepaidPayment_PaidAmount_currencyID
            prepaidPayment.PaidAmount.Add(paidAmountObj)

            ' Set PaidDate
            prepaidPayment.PaidDate = New List(Of PaidDate)
            Dim paidDateObj As New PaidDate
            paidDateObj.value = prepaidPayment_PaidDate
            prepaidPayment.PaidDate.Add(paidDateObj)

            ' Set PaidTime
            prepaidPayment.PaidTime = New List(Of PaidTime)
            Dim paidTimeObj As New PaidTime
            paidTimeObj.value = prepaidPayment_PaidTime_value
            prepaidPayment.PaidTime.Add(paidTimeObj)

            ' Add prepaidPayment to the invoice
            invoice.PrepaidPayment.Add(prepaidPayment)

            'prepaidPayment end

            InsertIntoTblWebEventLog("AssignJsonvalue24", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'allowanceCharge start
            ' Initialize the AllowanceCharge list
            invoice.AllowanceCharge = New List(Of AllowanceCharge)

            ' Create the first AllowanceCharge object
            Dim allowanceCharge As New AllowanceCharge()

            allowanceCharge.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj As New ChargeIndicator
            allowancchargeIndicatorObj.value = AllowanceCharge_ChargeIndicator
            allowanceCharge.ChargeIndicator.Add(allowancchargeIndicatorObj)

            allowanceCharge.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj As New AllowanceChargeReason
            allowanceChargeReasonObj.value = AllowanceCharge_AllowanceChargeReason_value
            allowanceCharge.AllowanceChargeReason.Add(allowanceChargeReasonObj)

            allowanceCharge.Amount = New List(Of Amount)
            Dim allowancamountObj As New Amount
            allowancamountObj.value = AllowanceCharge_Amount_value
            allowancamountObj.currencyID = AllowanceCharge_Amount_currencyID
            allowanceCharge.Amount.Add(allowancamountObj)

            ' Create the second AllowanceCharge object
            Dim allowanceCharge1 As New AllowanceCharge()

            allowanceCharge1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj1 As New ChargeIndicator
            allowancchargeIndicatorObj1.value = AllowanceCharge_ChargeIndicator_1
            allowanceCharge1.ChargeIndicator.Add(allowancchargeIndicatorObj1)

            allowanceCharge1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj1 As New AllowanceChargeReason
            allowanceChargeReasonObj1.value = AllowanceCharge_AllowanceChargeReason_value_1
            allowanceCharge1.AllowanceChargeReason.Add(allowanceChargeReasonObj1)

            allowanceCharge1.Amount = New List(Of Amount)
            Dim allowancamountObj1 As New Amount
            allowancamountObj1.value = AllowanceCharge_Amount_value_1
            allowancamountObj1.currencyID = AllowanceCharge_Amount_currencyID_1
            allowanceCharge1.Amount.Add(allowancamountObj1)

            ' Add both AllowanceCharge objects to the invoice
            invoice.AllowanceCharge.Add(allowanceCharge)
            invoice.AllowanceCharge.Add(allowanceCharge1)

            'allowanceCharge end

            InsertIntoTblWebEventLog("AssignJsonvalue25", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'TaxTotal start
            ' Initialize the TaxTotal list
            invoice.TaxTotal = New List(Of TaxTotal)

            ' Create the TaxTotal object
            Dim taxTotal As New TaxTotal()

            ' Set TaxAmount
            taxTotal.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj As New TaxAmount
            taxAmountObj.value = TaxTotal_TaxAmount_value
            taxAmountObj.currencyID = TaxTotal_TaxAmount_currencyID
            taxTotal.TaxAmount.Add(taxAmountObj)

            ' Set TaxSubtotal
            taxTotal.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim taxSubtotalObj1 As New TaxSubtotal

            ' TaxableAmount for first TaxSubtotal
            taxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj1 As New TaxableAmount
            taxableAmountObj1.value = TaxTotal_TaxSubtotal_TaxableAmount_value
            taxableAmountObj1.currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            taxSubtotalObj1.TaxableAmount.Add(taxableAmountObj1)

            ' TaxAmount for first TaxSubtotal
            taxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj1_1 As New TaxAmount
            taxAmountObj1_1.value = TaxTotal_TaxSubtotal_TaxAmount_value
            taxAmountObj1_1.currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID
            taxSubtotalObj1.TaxAmount.Add(taxAmountObj1_1)

            ' TaxCategory for first TaxSubtotal
            taxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj1 As New TaxCategory

            taxCategoryObj1.ID = New List(Of ID)
            Dim taxCategoryIDObj1 As New ID
            taxCategoryIDObj1.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value
            taxCategoryObj1.ID.Add(taxCategoryIDObj1)

            taxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj1 As New TaxScheme
            taxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj1 As New TaxSchemeID
            taxSchemeIDObj1.ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj1.schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj1.schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj1.ID.Add(taxSchemeIDObj1)

            taxCategoryObj1.TaxScheme.Add(taxSchemeObj1)

            taxCategoryObj1.Percent = Nothing
            taxCategoryObj1.TaxExemptionReason = Nothing

            taxSubtotalObj1.TaxCategory.Add(taxCategoryObj1)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj1.BaseUnitMeasure = Nothing
            taxSubtotalObj1.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj1)

            ' Second TaxSubtotal
            Dim taxSubtotalObj2 As New TaxSubtotal

            ' TaxableAmount for second TaxSubtotal
            taxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj2 As New TaxableAmount
            taxableAmountObj2.value = TaxTotal_TaxSubtotal2_TaxableAmount_value
            taxableAmountObj2.currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
            taxSubtotalObj2.TaxableAmount.Add(taxableAmountObj2)

            ' TaxAmount for second TaxSubtotal
            taxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj2_1 As New TaxAmount
            taxAmountObj2_1.value = TaxTotal_TaxSubtotal2_TaxAmount_value
            taxAmountObj2_1.currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
            taxSubtotalObj2.TaxAmount.Add(taxAmountObj2_1)

            ' TaxCategory for second TaxSubtotal
            taxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj2 As New TaxCategory

            taxCategoryObj2.ID = New List(Of ID)
            Dim taxCategoryIDObj2 As New ID
            taxCategoryIDObj2.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value
            taxCategoryObj2.ID.Add(taxCategoryIDObj2)

            taxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj2 As New TaxScheme
            taxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj2 As New TaxSchemeID
            taxSchemeIDObj2.ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj2.schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj2.schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj2.ID.Add(taxSchemeIDObj2)

            taxCategoryObj2.TaxScheme.Add(taxSchemeObj2)

            taxCategoryObj2.Percent = Nothing
            taxCategoryObj2.TaxExemptionReason = Nothing

            taxSubtotalObj2.TaxCategory.Add(taxCategoryObj2)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj2.BaseUnitMeasure = Nothing
            taxSubtotalObj2.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj2)

            ' Add the fully constructed taxTotal object to invoice.TaxTotal
            invoice.TaxTotal.Add(taxTotal)

            'TaxTotal end

            InsertIntoTblWebEventLog("AssignJsonvalue26", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'LegalMonetaryTotal start
            ' Initialize the LegalMonetaryTotal list
            invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)

            ' Create the LegalMonetaryTotal object
            Dim legalMonetaryTotal As New LegalMonetaryTotal()

            ' Set LineExtensionAmount
            legalMonetaryTotal.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim lineExtensionAmountObj As New LineExtensionAmount
            lineExtensionAmountObj.value = LegalMonetaryTotal_LineExtensionAmount_value
            lineExtensionAmountObj.currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
            legalMonetaryTotal.LineExtensionAmount.Add(lineExtensionAmountObj)

            ' Set TaxExclusiveAmount
            legalMonetaryTotal.TaxExclusiveAmount = New List(Of TaxExclusiveAmount)
            Dim taxExclusiveAmountObj As New TaxExclusiveAmount
            taxExclusiveAmountObj.value = LegalMonetaryTotal_TaxExclusiveAmount_value
            taxExclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
            legalMonetaryTotal.TaxExclusiveAmount.Add(taxExclusiveAmountObj)

            ' Set TaxInclusiveAmount
            legalMonetaryTotal.TaxInclusiveAmount = New List(Of TaxInclusiveAmount)
            Dim taxInclusiveAmountObj As New TaxInclusiveAmount
            taxInclusiveAmountObj.value = LegalMonetaryTotal_TaxInclusiveAmount_value
            taxInclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
            legalMonetaryTotal.TaxInclusiveAmount.Add(taxInclusiveAmountObj)

            ' Set AllowanceTotalAmount
            legalMonetaryTotal.AllowanceTotalAmount = New List(Of AllowanceTotalAmount)
            Dim legalMonetaryallowanceTotalAmountObj As New AllowanceTotalAmount
            legalMonetaryallowanceTotalAmountObj.value = LegalMonetaryTotal_AllowanceTotalAmount_value
            legalMonetaryallowanceTotalAmountObj.currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
            legalMonetaryTotal.AllowanceTotalAmount.Add(legalMonetaryallowanceTotalAmountObj)

            ' Set ChargeTotalAmount
            legalMonetaryTotal.ChargeTotalAmount = New List(Of ChargeTotalAmount)
            Dim legalMonetarychargeTotalAmountObj As New ChargeTotalAmount
            legalMonetarychargeTotalAmountObj.value = LegalMonetaryTotal_ChargeTotalAmount_value
            legalMonetarychargeTotalAmountObj.currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
            legalMonetaryTotal.ChargeTotalAmount.Add(legalMonetarychargeTotalAmountObj)

            ' Set PayableAmount
            legalMonetaryTotal.PayableAmount = New List(Of PayableAmount)
            Dim legalMonetarypayableAmountObj As New PayableAmount
            legalMonetarypayableAmountObj.value = LegalMonetaryTotal_PayableAmount_value
            legalMonetarypayableAmountObj.currencyID = LegalMonetaryTotal_PayableAmount_currencyID
            legalMonetaryTotal.PayableAmount.Add(legalMonetarypayableAmountObj)

            ' Set PayableRoundingAmount
            legalMonetaryTotal.PayableRoundingAmount = New List(Of PayableRoundingAmount)
            Dim legalMonetarypayableRoundingAmountObj As New PayableRoundingAmount
            legalMonetarypayableRoundingAmountObj.value = LegalMonetaryTotal_PayableRoundingAmount_value
            legalMonetarypayableRoundingAmountObj.currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
            legalMonetaryTotal.PayableRoundingAmount.Add(legalMonetarypayableRoundingAmountObj)

            ' Add the fully configured legalMonetaryTotal object to invoice.LegalMonetaryTotal
            invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)

            'LegalMonetaryTotal end

            InsertIntoTblWebEventLog("AssignJsonvalue27", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'InvoiceLine start
            ' Initialize the InvoiceLine list
            invoice.InvoiceLine = New List(Of InvoiceLine)

            ' Create the InvoiceLine object
            Dim invoiceLine As New InvoiceLine()

            ' AllowanceCharge
            invoiceLine.AllowanceCharge = New List(Of InvoiceLineAllowanceCharge)

            ' First InvoiceLineAllowanceCharge
            Dim invoiceLineallowanceChargeObj1 As New InvoiceLineAllowanceCharge()

            invoiceLineallowanceChargeObj1.Amount = New List(Of Amount)
            Dim invoiceLineallowanceChargeAmountObj1 As New Amount
            invoiceLineallowanceChargeAmountObj1.value = InvoiceLine_AllowanceCharge_Amount_value
            invoiceLineallowanceChargeAmountObj1.currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
            invoiceLineallowanceChargeObj1.Amount.Add(invoiceLineallowanceChargeAmountObj1)

            invoiceLineallowanceChargeObj1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim invoiceLineallowanceChargeIndicatorObj1 As New ChargeIndicator
            invoiceLineallowanceChargeIndicatorObj1.value = InvoiceLine_AllowanceCharge_ChargeIndicator
            invoiceLineallowanceChargeObj1.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj1)

            invoiceLineallowanceChargeObj1.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
            Dim invoiceLinemultiplierFactorNumericObj1 As New MultiplierFactorNumeric
            invoiceLinemultiplierFactorNumericObj1.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value
            invoiceLineallowanceChargeObj1.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj1)

            invoiceLineallowanceChargeObj1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim invoiceLineallowanceChargeReasonObj1 As New AllowanceChargeReason
            invoiceLineallowanceChargeReasonObj1.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value
            invoiceLineallowanceChargeObj1.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj1)

            invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj1)

            ' Second InvoiceLineAllowanceCharge
            Dim invoiceLineallowanceChargeObj2 As New InvoiceLineAllowanceCharge()

            invoiceLineallowanceChargeObj2.Amount = New List(Of Amount)
            Dim invoiceLineallowanceChargeAmountObj2 As New Amount
            invoiceLineallowanceChargeAmountObj2.value = InvoiceLine_AllowanceCharge2_Amount_value
            invoiceLineallowanceChargeAmountObj2.currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
            invoiceLineallowanceChargeObj2.Amount.Add(invoiceLineallowanceChargeAmountObj2)

            invoiceLineallowanceChargeObj2.ChargeIndicator = New List(Of ChargeIndicator)
            Dim invoiceLineallowanceChargeIndicatorObj2 As New ChargeIndicator
            invoiceLineallowanceChargeIndicatorObj2.value = InvoiceLine_AllowanceCharge2_ChargeIndicator
            invoiceLineallowanceChargeObj2.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj2)

            invoiceLineallowanceChargeObj2.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
            Dim invoiceLinemultiplierFactorNumericObj2 As New MultiplierFactorNumeric
            invoiceLinemultiplierFactorNumericObj2.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value
            invoiceLineallowanceChargeObj2.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj2)

            invoiceLineallowanceChargeObj2.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim invoiceLineallowanceChargeReasonObj2 As New AllowanceChargeReason
            invoiceLineallowanceChargeReasonObj2.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value
            invoiceLineallowanceChargeObj2.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj2)

            invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj2)

            ' ID
            invoiceLine.ID = New List(Of ID)
            Dim invoiceLineIDObj As New ID
            invoiceLineIDObj.Value = InvoiceLine_ID_value
            invoiceLine.ID.Add(invoiceLineIDObj)

            ' InvoicedQuantity
            invoiceLine.InvoicedQuantity = New List(Of InvoicedQuantity)
            Dim invoicedQuantityObj As New InvoicedQuantity
            invoicedQuantityObj.value = InvoiceLine_InvoicedQuantity_value
            invoicedQuantityObj.unitCode = InvoiceLine_InvoicedQuantity_unitCode
            invoiceLine.InvoicedQuantity.Add(invoicedQuantityObj)

            ' Item
            invoiceLine.Item = New List(Of Item)
            Dim itemObj As New Item

            ' CommodityClassification
            itemObj.CommodityClassification = New List(Of CommodityClassification)
            Dim invoiceLinecommodityClassificationObj As New CommodityClassification
            invoiceLinecommodityClassificationObj.ItemClassificationCode = New List(Of ItemClassificationCode)
            Dim invoiceLineitemClassificationCodeObj As New ItemClassificationCode
            invoiceLineitemClassificationCodeObj.value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value
            invoiceLineitemClassificationCodeObj.listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
            invoiceLinecommodityClassificationObj.ItemClassificationCode.Add(invoiceLineitemClassificationCodeObj)
            itemObj.CommodityClassification.Add(invoiceLinecommodityClassificationObj)

            ' Description
            itemObj.Description = New List(Of Description)
            Dim invoiceLinedescriptionObj As New Description
            invoiceLinedescriptionObj.Value = InvoiceLine_Item_Description_value
            itemObj.Description.Add(invoiceLinedescriptionObj)

            ' OriginCountry
            itemObj.OriginCountry = New List(Of OriginCountry)
            Dim invoiceLineoriginCountryObj As New OriginCountry
            invoiceLineoriginCountryObj.IdentificationCode = New List(Of IdentificationCodeID)
            Dim identificationCodeIDObj As New IdentificationCodeID
            identificationCodeIDObj.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value
            invoiceLineoriginCountryObj.IdentificationCode.Add(identificationCodeIDObj)
            itemObj.OriginCountry.Add(invoiceLineoriginCountryObj)

            invoiceLine.Item.Add(itemObj)

            ' ItemPriceExtension
            invoiceLine.ItemPriceExtension = New List(Of ItemPriceExtension)
            Dim invoiceLineitemPriceExtensionObj As New ItemPriceExtension
            invoiceLineitemPriceExtensionObj.Amount = New List(Of Amount)
            Dim invoiceLineitemPriceExtensionAmountObj As New Amount
            invoiceLineitemPriceExtensionAmountObj.value = InvoiceLine_ItemPriceExtension_Amount_value
            invoiceLineitemPriceExtensionAmountObj.currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
            invoiceLineitemPriceExtensionObj.Amount.Add(invoiceLineitemPriceExtensionAmountObj)
            invoiceLine.ItemPriceExtension.Add(invoiceLineitemPriceExtensionObj)

            ' LineExtensionAmount
            invoiceLine.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim invoiceLine_lineExtensionAmountObj As New LineExtensionAmount
            invoiceLine_lineExtensionAmountObj.value = InvoiceLine_LineExtensionAmount_value
            invoiceLine_lineExtensionAmountObj.currencyID = InvoiceLine_LineExtensionAmount_currencyID
            invoiceLine.LineExtensionAmount.Add(invoiceLine_lineExtensionAmountObj)

            ' Price
            invoiceLine.Price = New List(Of Price)
            Dim invoiceLinepriceObj As New Price
            invoiceLinepriceObj.PriceAmount = New List(Of PriceAmount)
            Dim invoiceLinepriceAmountObj As New PriceAmount
            invoiceLinepriceAmountObj.value = InvoiceLine_Price_PriceAmount_value
            invoiceLinepriceAmountObj.currencyID = InvoiceLine_Price_PriceAmount_currencyID
            invoiceLinepriceObj.PriceAmount.Add(invoiceLinepriceAmountObj)
            invoiceLine.Price.Add(invoiceLinepriceObj)

            ' TaxTotal
            invoiceLine.TaxTotal = New List(Of TaxTotal)
            Dim invoiceLinetaxTotalObj As New TaxTotal

            invoiceLinetaxTotalObj.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxTotalAmountObj As New TaxAmount
            invoiceLinetaxTotalAmountObj.value = InvoiceLine_TaxTotal_TaxAmount_value
            invoiceLinetaxTotalAmountObj.currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
            invoiceLinetaxTotalObj.TaxAmount.Add(invoiceLinetaxTotalAmountObj)

            invoiceLinetaxTotalObj.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim invoiceLinetaxSubtotalObj1 As New TaxSubtotal
            invoiceLinetaxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim invoiceLinetaxSubtotalTaxableAmountObj1 As New TaxableAmount
            invoiceLinetaxSubtotalTaxableAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value
            invoiceLinetaxSubtotalTaxableAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            invoiceLinetaxSubtotalObj1.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj1)

            invoiceLinetaxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxSubtotalTaxAmountObj1 As New TaxAmount
            invoiceLinetaxSubtotalTaxAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value
            invoiceLinetaxSubtotalTaxAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
            invoiceLinetaxSubtotalObj1.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj1)

            invoiceLinetaxSubtotalObj1.PerUnitAmount = New List(Of PerUnitAmount)
            Dim invoiceLineperUnitAmountObj1 As New PerUnitAmount
            invoiceLineperUnitAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value
            invoiceLineperUnitAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
            invoiceLinetaxSubtotalObj1.PerUnitAmount.Add(invoiceLineperUnitAmountObj1)

            invoiceLinetaxSubtotalObj1.BaseUnitMeasure = New List(Of BaseUnitMeasure)
            Dim invoiceLinebaseUnitMeasureObj1 As New BaseUnitMeasure
            invoiceLinebaseUnitMeasureObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value
            invoiceLinebaseUnitMeasureObj1.unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
            invoiceLinetaxSubtotalObj1.BaseUnitMeasure.Add(invoiceLinebaseUnitMeasureObj1)

            invoiceLinetaxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim invoiceLinetaxCategoryObj1 As New TaxCategory
            invoiceLinetaxCategoryObj1.ID = New List(Of ID)
            Dim invoiceLinetaxCategoryIDObj1 As New ID
            invoiceLinetaxCategoryIDObj1.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value
            invoiceLinetaxCategoryObj1.ID.Add(invoiceLinetaxCategoryIDObj1)

            invoiceLinetaxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim invoiceLinetaxSchemeObj1 As New TaxScheme
            invoiceLinetaxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim invoiceLinetaxSchemeIDObj1 As New TaxSchemeID
            invoiceLinetaxSchemeIDObj1.ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            invoiceLinetaxSchemeIDObj1.schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            invoiceLinetaxSchemeIDObj1.schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            invoiceLinetaxSchemeObj1.ID.Add(invoiceLinetaxSchemeIDObj1)
            invoiceLinetaxCategoryObj1.TaxScheme.Add(invoiceLinetaxSchemeObj1)

            invoiceLinetaxCategoryObj1.Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent
            invoiceLinetaxCategoryObj1.TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason

            invoiceLinetaxSubtotalObj1.TaxCategory.Add(invoiceLinetaxCategoryObj1)

            invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj1)

            ' Second TaxSubtotal
            Dim invoiceLinetaxSubtotalObj2 As New TaxSubtotal
            invoiceLinetaxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim invoiceLinetaxSubtotalTaxableAmountObj2 As New TaxableAmount
            invoiceLinetaxSubtotalTaxableAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value
            invoiceLinetaxSubtotalTaxableAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
            invoiceLinetaxSubtotalObj2.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj2)

            invoiceLinetaxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxSubtotalTaxAmountObj2 As New TaxAmount
            invoiceLinetaxSubtotalTaxAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value
            invoiceLinetaxSubtotalTaxAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
            invoiceLinetaxSubtotalObj2.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj2)

            invoiceLinetaxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim invoiceLinetaxCategoryObj2 As New TaxCategory
            invoiceLinetaxCategoryObj2.ID = New List(Of ID)
            Dim invoiceLinetaxCategoryIDObj2 As New ID
            invoiceLinetaxCategoryIDObj2.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value
            invoiceLinetaxCategoryObj2.ID.Add(invoiceLinetaxCategoryIDObj2)

            invoiceLinetaxCategoryObj2.Percent = New List(Of Percent)
            Dim invoiceLinepercentObj As New Percent
            invoiceLinepercentObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent
            invoiceLinetaxCategoryObj2.Percent.Add(invoiceLinepercentObj)

            invoiceLinetaxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim invoiceLinetaxSchemeObj2 As New TaxScheme
            invoiceLinetaxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim invoiceLinetaxSchemeIDObj2 As New TaxSchemeID
            invoiceLinetaxSchemeIDObj2.ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            invoiceLinetaxSchemeIDObj2.schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            invoiceLinetaxSchemeIDObj2.schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            invoiceLinetaxSchemeObj2.ID.Add(invoiceLinetaxSchemeIDObj2)

            invoiceLinetaxCategoryObj2.TaxScheme.Add(invoiceLinetaxSchemeObj2)

            invoiceLinetaxCategoryObj2.TaxExemptionReason = New List(Of TaxExemptionReason)
            Dim invoiceLinetaxExemptionReasonObj As New TaxExemptionReason
            invoiceLinetaxExemptionReasonObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
            invoiceLinetaxCategoryObj2.TaxExemptionReason.Add(invoiceLinetaxExemptionReasonObj)

            invoiceLinetaxSubtotalObj2.TaxCategory.Add(invoiceLinetaxCategoryObj2)

            invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj2)

            invoiceLine.TaxTotal.Add(invoiceLinetaxTotalObj)

            ' Add the constructed invoiceLine to invoice.InvoiceLine
            invoice.InvoiceLine.Add(invoiceLine)

            'invoiceLine end

            'TaxExchangeRate start
            ' Initialize the TaxExchangeRate list
            invoice.TaxExchangeRate = New List(Of TaxExchangeRate)

            ' Create a new TaxExchangeRate object
            Dim taxExchangeRateObj As New TaxExchangeRate()

            ' Set SourceCurrencyCode
            taxExchangeRateObj.SourceCurrencyCode = New List(Of SourceCurrencyCode)
            Dim sourceCurrencyCodeObj As New SourceCurrencyCode
            sourceCurrencyCodeObj.value = TaxExchangeRate_SourceCurrencyCode_value
            taxExchangeRateObj.SourceCurrencyCode.Add(sourceCurrencyCodeObj)

            ' Set TargetCurrencyCode
            taxExchangeRateObj.TargetCurrencyCode = New List(Of TargetCurrencyCode)
            Dim targetCurrencyCodeObj As New TargetCurrencyCode
            targetCurrencyCodeObj.value = TaxExchangeRate_TargetCurrencyCode_value
            taxExchangeRateObj.TargetCurrencyCode.Add(targetCurrencyCodeObj)

            ' Set CalculationRate
            taxExchangeRateObj.CalculationRate = New List(Of CalculationRate)
            Dim calculationRateObj As New CalculationRate
            calculationRateObj.value = TaxExchangeRate_CalculationRate_value
            taxExchangeRateObj.CalculationRate.Add(calculationRateObj)


            ' Add the configured TaxExchangeRate object to invoice.TaxExchangeRate
            invoice.TaxExchangeRate.Add(taxExchangeRateObj)

            'TaxExchangeRate end
            InsertIntoTblWebEventLog("AssignJsonvalue28", invoiceNumber, test1.ToString, Session("UserID").ToString)

            invoiceWrapper.Invoice.Add(invoice)
            InsertIntoTblWebEventLog("AssignJsonvalue29", invoiceNumber, test1.ToString, Session("UserID").ToString)


            Dim settings As New JsonSerializerSettings With {
                .NullValueHandling = NullValueHandling.Ignore,
                .ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
            .ContractResolver = New CustomResolver()
               }



            InsertIntoTblWebEventLog("AssignJsonvalue30", invoiceNumber, test1.ToString, Session("UserID").ToString)


            Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)
            InsertIntoTblWebEventLog("AssignJsonvalue31", invoiceNumber, test1.ToString, Session("UserID").ToString)

            Return json
        Catch ex As Exception
            InsertIntoTblWebEventLog("AssignJsonvalue", "Exception", ex.Message.ToString, Session("UserID").ToString)
            lblAlert.Text = ex.Message.ToString

        End Try
    End Function


    Public Shared Function AssignJsonvalue1()
        Dim invoiceWrapper As New InvoiceWrapper()

        Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
        Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
        Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

        Dim test1 = DateTime.UtcNow.Date
        Dim test = DateTime.UtcNow.TimeOfDay


        Dim invoiceID = "CI6210502939008" 'for testing manually add this. want to change this and submit document method also need to change
        Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
        Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
        Dim InvoiceTypeCode = "01"
        'Dim InvoiceListVersionID = "1.0"
        Dim InvoiceListVersionID = "1.1"
        Dim DocumentCurrencyCode = "MYR"
        Dim periodStartDate = "2024-11-10"
        Dim periodEndDate = "2024-12-10"
        Dim periodDescription = "Monthly"
        Dim BillingAdditionalDocumentReferenceID = " "
        Dim AdditionalDocumentReferenceID = ""

        ' for AccountingSupplierParty
        Dim AccountingSupplierParty_AdditionalAccountID = ""
        Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
        Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
        Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
        Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
        Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
        Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
        Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
        Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
        Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
        Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
        Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
        Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"

        ' for AccountingCustomerParty
        'For ConsolidatedInvoice "EI00000000010" value for same in all Buyer. In standard It different
        Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "EI00000000010"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"

        'For ConsolidatedInvoice PartyIdentification ID is NA value. In standard It different
        Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "NA"

        '  Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
        Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
        Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
        Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
        Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"

        'For ConsolidatedInvoice Contact ID is NA value. In standard It different
        Dim AccountingCustomerParty_Party_Contact_Telephone = "NA"
        Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "NA"

        'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
        'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"

        'for Delivery DeliveryParty
        Dim DeliveryParty_LegalEntity_RegistrationName = ""
        Dim DeliveryParty_PostalAddress_CityName = ""
        Dim DeliveryParty_PostalAddress_PostalZone = ""
        Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
        Dim DeliveryParty_PostalAddress_AddressLine1 = ""
        Dim DeliveryParty_PostalAddress_AddressLine2 = ""
        Dim DeliveryParty_PostalAddress_AddressLine3 = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
        Dim DeliveryParty_PartyIdentification_ID = ""
        Dim DeliveryParty_PartyIdentification_schemeID = ""

        'for Delivery Shipment
        Dim Delivery_Shipment_ID = ""
        Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
        Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
        Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
        Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = "MYR"

        'for paymentMeans
        Dim paymentMeans_PaymentMeansCode_value = "01"
        Dim paymentMeans_PayeeFinancialAccount_value = ""

        'for paymentTerm
        Dim paymentTerms_Note_value = ""

        'for prepaidPayment
        Dim prepaidPayment_ID = ""
        Dim prepaidPayment_PaidAmount_value = 0
        Dim prepaidPayment_PaidAmount_currencyID = "MYR"
        Dim prepaidPayment_PaidDate = ""
        Dim prepaidPayment_PaidTime_value = ""

        'for AllowanceCharge 
        Dim AllowanceCharge_ChargeIndicator = True
        Dim AllowanceCharge_AllowanceChargeReason_value = ""
        Dim AllowanceCharge_Amount_value = 0
        Dim AllowanceCharge_Amount_currencyID = "MYR"

        'for AllowanceCharge 1
        Dim AllowanceCharge_ChargeIndicator_1 = False
        Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
        Dim AllowanceCharge_Amount_value_1 = 0
        Dim AllowanceCharge_Amount_currencyID_1 = "MYR"

        'for TaxTotal
        Dim TaxTotal_TaxAmount_value = 10
        Dim TaxTotal_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
        Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxAmount_value = 10
        Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

        Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 2000D
        Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 20D
        Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

        'for LegalMonetaryTotal 
        Dim LegalMonetaryTotal_LineExtensionAmount_value = 3000
        Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_TaxExclusiveAmount_value = 3000
        Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_TaxInclusiveAmount_value = 3010
        Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
        Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
        Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_PayableAmount_value = 3010
        Dim LegalMonetaryTotal_PayableAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
        Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = "MYR"

        'for InvoiceLine 
        Dim InvoiceLine_AllowanceCharge_Amount_value = 0
        Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
        Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
        Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
        Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

        Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
        Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
        Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
        Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
        Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

        Dim InvoiceLine_ID_value = "1"
        Dim InvoiceLine_InvoicedQuantity_value = 3
        Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

        'For ConsolidatedInvoice ItemClassificationCode is 004. in Standard is 035
        'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
        Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "004"

        'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
        Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
        Dim InvoiceLine_Item_Description_value = "Pest control"
        Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

        Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
        Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

        Dim InvoiceLine_LineExtensionAmount_value = 3000
        Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

        Dim InvoiceLine_Price_PriceAmount_value = 1000
        Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
        Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

        'for TaxExchangeRate
        Dim TaxExchangeRate_SourceCurrencyCode_value = "MYR"
        Dim TaxExchangeRate_TargetCurrencyCode_value = "MYR"
        Dim TaxExchangeRate_CalculationRate_value = 0


        invoiceWrapper._D = invoiceDetails_D
        invoiceWrapper._A = invoiceDetails_A
        invoiceWrapper._B = invoiceDetails_B

        invoiceWrapper.Invoice = New List(Of Invoice)()

        Dim invoice As New Invoice()

        invoice.ID = New List(Of ID)() From {
            New ID() With {.Value = invoiceID}
        }
        invoice.IssueDate = New List(Of IssueDate)() From {
            New IssueDate() With {.Value = IssueDate}
        }
        invoice.IssueTime = New List(Of IssueTime)() From {
            New IssueTime() With {.Value = IssueTime}
        }
        invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)() From {
            New InvoiceTypeCode() With {.Value = InvoiceTypeCode, .ListVersionID = InvoiceListVersionID}
        }
        invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)() From {
            New DocumentCurrencyCode() With {.Value = DocumentCurrencyCode}
        }

        invoice.InvoicePeriod = New List(Of InvoicePeriod)()

        Dim period As New InvoicePeriod()
        period.StartDate = New List(Of StartDate)() From {
            New StartDate() With {.Value = periodStartDate}
        }
        period.EndDate = New List(Of EndDate)() From {
            New EndDate() With {.Value = periodEndDate}
        }
        period.Description = New List(Of Description)() From {
            New Description() With {.Value = periodDescription}
        }
        invoice.InvoicePeriod.Add(period)

        invoice.BillingReference = New List(Of BillingReference)

        Dim BillingAdditionalDocumentReference As New BillingReference With {
            .AdditionalDocumentReference = New List(Of AdditionalDocumentReference) From {
                New AdditionalDocumentReference With {
                .ID = New List(Of ID)() From {
                        New ID() With {.Value = BillingAdditionalDocumentReferenceID}
                    }
                }
            }
        }

        invoice.BillingReference.Add(BillingAdditionalDocumentReference)

        'AdditionalDocumentReference start

        invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

        Dim AdditionalDocumentReference1 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference2 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference3 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference4 As New AdditionalDocumentReference()

        AdditionalDocumentReference1.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference2.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference3.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference4.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }

        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference1)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference2)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference3)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference4)

        'AdditionalDocumentReference end

        ' AccountingSupplierParty start

        invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

        Dim supplier As New AccountingSupplierParty With {
            .AdditionalAccountID = New List(Of AdditionalAccountID) From {
                New AdditionalAccountID With {
                    .value = AccountingSupplierParty_AdditionalAccountID,
                    .schemeAgencyName = AccountingSupplierParty_schemeAgencyName
                }
            },
            .Party = New List(Of Party) From {
                New Party With {
                    .IndustryClassificationCode = New List(Of IndustryClassificationCode) From {
                        New IndustryClassificationCode With {
                            .value = AccountingSupplierParty_Party_IndustryClassificationCode_value,
                            .name = AccountingSupplierParty_Party_IndustryClassificationCode_name
                        }
                    },
                    .PartyIdentification = New List(Of PartyIdentification) From {
                            New PartyIdentification With {
                                .ID = New List(Of PartyIdentificationID) From {
                                    New PartyIdentificationID With {
                                        .ID = AccountingSupplierParty_Party_PartyIdentification_ID1,
                                        .schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
                                    }
                                }
                            },
                             New PartyIdentification With {
                                .ID = New List(Of PartyIdentificationID) From {
                                    New PartyIdentificationID With {
                                        .ID = AccountingSupplierParty_Party_PartyIdentification_ID2,
                                        .schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
                                    }
                                }
                            }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = AccountingSupplierParty_Party_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = AccountingSupplierParty_Party_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                            .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value,
                                            .listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName}
                            }
                        }
                    },
                    .Contact = New List(Of Contact) From {
                        New Contact With {
                            .Telephone = New List(Of Telephone) From {
                                New Telephone With {.value = AccountingSupplierParty_Party_Contact_Telephone}
                            },
                            .ElectronicMail = New List(Of ElectronicMail) From {
                                New ElectronicMail With {.value = AccountingSupplierParty_Party_Contact_ElectronicMail}
                            }
                        }
                    }
                }
            }
        }

        invoice.AccountingSupplierParty.Add(supplier)


        ' AccountingSupplierParty end

        ' AccountingCustomerParty start

        invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

        Dim customer As New AccountingCustomerParty With {
            .Party = New List(Of Party) From {
                New Party With {
                    .IndustryClassificationCode = Nothing,
                    .PartyIdentification = New List(Of PartyIdentification) From {
                        New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID1,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
                                }
                            }
                        },
                         New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID2,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
                                }
                            }
                        },
                         New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID3,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
                                }
                            }
                        }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = AccountingCustomerParty_Party_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = AccountingCustomerParty_Party_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                            .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value,
                                            .listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName}
                            }
                        }
                    },
                    .Contact = New List(Of Contact) From {
                        New Contact With {
                            .Telephone = New List(Of Telephone) From {
                                New Telephone With {.value = AccountingCustomerParty_Party_Contact_Telephone}
                            },
                           .ElectronicMail = New List(Of ElectronicMail) From {
                                New ElectronicMail With {.value = AccountingCustomerParty_Party_Contact_ElectronicMail}
                            }
                        }
                    }
                }
            }
        }

        invoice.AccountingCustomerParty.Add(customer)

        ' AccountingCustomerParty end

        ' delivery start
        invoice.Delivery = New List(Of Delivery)


        Dim delivery As New Delivery With {
            .DeliveryParty = New List(Of DeliveryParty) From {
                New DeliveryParty With {
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = DeliveryParty_LegalEntity_RegistrationName}
                            }
                        }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = DeliveryParty_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = DeliveryParty_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = DeliveryParty_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                           .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = DeliveryParty_PostalAddress_Country_IdentificationCode_value,
                                            .listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyIdentification = New List(Of PartyIdentification) From {
                        New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                    .ID = DeliveryParty_PartyIdentification_ID,
                                    .schemeID = DeliveryParty_PartyIdentification_schemeID
                                }
                            }
                        }
                    }
                }
            },
            .Shipment = New List(Of Shipment) From {
                    New Shipment With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = Delivery_Shipment_ID}
                                    },
                                    .FreightAllowanceCharge = New List(Of FreightAllowanceCharge) From {
                                        New FreightAllowanceCharge With {
                                            .ChargeIndicator = New List(Of ChargeIndicator) From {
                                                New ChargeIndicator With {.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator}
                                            },
                                           .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                                                New AllowanceChargeReason With {.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason}
                                            },
                                            .Amount = New List(Of Amount) From {
                                                New Amount With {
                                                    .value = Delivery_Shipment_FreightAllowanceCharge_Amount_value,
                                                    .currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
                                                }
                                            }
                                        }
                                     }
                        }
            }
        }

        invoice.Delivery.Add(delivery)

        ' delivery End

        'paymentMeans start

        invoice.PaymentMeans = New List(Of PaymentMeans)


        Dim paymentMeans As New PaymentMeans With {
            .PaymentMeansCode = New List(Of PaymentMeansCode) From {
                New PaymentMeansCode With {.value = paymentMeans_PaymentMeansCode_value}
            },
            .PayeeFinancialAccount = New List(Of PayeeFinancialAccount) From {
                New PayeeFinancialAccount With {
                    .ID = New List(Of ID) From {
                        New ID With {.Value = paymentMeans_PayeeFinancialAccount_value}
                    }
                }
            }
        }

        invoice.PaymentMeans.Add(paymentMeans)

        'paymentMeans end

        'paymentTerms start

        invoice.PaymentTerms = New List(Of PaymentTerms)

        Dim paymentTerms As New PaymentTerms With {
            .Note = New List(Of Note) From {
                New Note With {.value = paymentTerms_Note_value}
            }
        }
        invoice.PaymentTerms.Add(paymentTerms)
        'paymentTerms end

        'prepaidPayment start
        invoice.PrepaidPayment = New List(Of PrepaidPayment)


        Dim prepaidPayment As New PrepaidPayment With {
            .ID = New List(Of ID) From {
                New ID With {.Value = prepaidPayment_ID}
            },
            .PaidAmount = New List(Of PaidAmount) From {
                New PaidAmount With {.value = prepaidPayment_PaidAmount_value, .currencyID = prepaidPayment_PaidAmount_currencyID}
            },
            .PaidDate = New List(Of PaidDate) From {
                New PaidDate With {.value = prepaidPayment_PaidDate}
            },
            .PaidTime = New List(Of PaidTime) From {
                New PaidTime With {.value = prepaidPayment_PaidTime_value}
            }
        }

        invoice.PrepaidPayment.Add(prepaidPayment)
        'prepaidPayment end

        'need to check this
        invoice.AllowanceCharge = New List(Of AllowanceCharge)

        Dim allowanceCharge As New AllowanceCharge With {
            .ChargeIndicator = New List(Of ChargeIndicator) From {
                New ChargeIndicator With {.value = AllowanceCharge_ChargeIndicator}
            },
            .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                New AllowanceChargeReason With {.value = AllowanceCharge_AllowanceChargeReason_value}
            },
            .Amount = New List(Of Amount) From {
                New Amount With {.value = AllowanceCharge_Amount_value, .currencyID = AllowanceCharge_Amount_currencyID}
            }
        }

        Dim allowanceCharge1 As New AllowanceCharge With {
            .ChargeIndicator = New List(Of ChargeIndicator) From {
                New ChargeIndicator With {.value = AllowanceCharge_ChargeIndicator_1}
            },
            .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                New AllowanceChargeReason With {.value = AllowanceCharge_AllowanceChargeReason_value_1}
            },
            .Amount = New List(Of Amount) From {
                New Amount With {.value = AllowanceCharge_Amount_value_1, .currencyID = AllowanceCharge_Amount_currencyID_1}
            }
        }

        invoice.AllowanceCharge.Add(allowanceCharge)
        invoice.AllowanceCharge.Add(allowanceCharge1)
        'allowanceCharge end

        'TaxTotal start
        invoice.TaxTotal = New List(Of TaxTotal)


        Dim taxTotal As New TaxTotal With {
            .TaxAmount = New List(Of TaxAmount) From {
                New TaxAmount With {.value = TaxTotal_TaxAmount_value, .currencyID = TaxTotal_TaxAmount_currencyID}
            },
            .TaxSubtotal = New List(Of TaxSubtotal) From {
                New TaxSubtotal With {
                    .TaxableAmount = New List(Of TaxableAmount) From {
                        New TaxableAmount With {.value = TaxTotal_TaxSubtotal_TaxableAmount_value, .currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID}
                    },
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {.value = TaxTotal_TaxSubtotal_TaxAmount_value, .currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID}
                    },
                    .TaxCategory = New List(Of TaxCategory) From {
                        New TaxCategory With {
                            .ID = New List(Of ID) From {
                                New ID With {.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value}
                            },
                            .TaxScheme = New List(Of TaxScheme) From {
                                New TaxScheme With {
                                    .ID = New List(Of TaxSchemeID) From {
                                        New TaxSchemeID With {
                                            .ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                            .schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID,
                                            .schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                                        }
                                    }
                                }
                            },
                            .Percent = Nothing,
                            .TaxExemptionReason = Nothing
                        }
                    },
                    .BaseUnitMeasure = Nothing,
                    .PerUnitAmount = Nothing
                },
                 New TaxSubtotal With {
                     .TaxableAmount = New List(Of TaxableAmount) From {
                        New TaxableAmount With {
                            .value = TaxTotal_TaxSubtotal2_TaxableAmount_value,
                            .currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
                        }
                    },
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {
                            .value = TaxTotal_TaxSubtotal2_TaxAmount_value,
                            .currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
                        }
                    },
                    .TaxCategory = New List(Of TaxCategory) From {
                        New TaxCategory With {
                            .ID = New List(Of ID) From {
                                New ID With {.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value}
                            },
                            .TaxScheme = New List(Of TaxScheme) From {
                                New TaxScheme With {
                                    .ID = New List(Of TaxSchemeID) From {
                                        New TaxSchemeID With {
                                            .ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value,
                                            .schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID,
                                            .schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
                                        }
                                    }
                                }
                            },
                            .Percent = Nothing,
                            .TaxExemptionReason = Nothing
                        }
                    },
                    .BaseUnitMeasure = Nothing,
                    .PerUnitAmount = Nothing
                }
            }
        }

        invoice.TaxTotal.Add(taxTotal)
        'TaxTotal end


        'LegalMonetaryTotal start
        invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)



        Dim legalMonetaryTotal As New LegalMonetaryTotal With {
        .LineExtensionAmount = New List(Of LineExtensionAmount) From {
                New LineExtensionAmount With {
                     .value = LegalMonetaryTotal_LineExtensionAmount_value,
                     .currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
                }
            },
            .TaxExclusiveAmount = New List(Of TaxExclusiveAmount) From {
                New TaxExclusiveAmount With {
                     .value = LegalMonetaryTotal_TaxExclusiveAmount_value,
                     .currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
                }
            },
            .TaxInclusiveAmount = New List(Of TaxInclusiveAmount) From {
                New TaxInclusiveAmount With {
                     .value = LegalMonetaryTotal_TaxInclusiveAmount_value,
                    .currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
                }
            },
            .AllowanceTotalAmount = New List(Of AllowanceTotalAmount) From {
                New AllowanceTotalAmount With {
                       .value = LegalMonetaryTotal_AllowanceTotalAmount_value,
                       .currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
                }
            },
            .ChargeTotalAmount = New List(Of ChargeTotalAmount) From {
                New ChargeTotalAmount With {
                     .value = LegalMonetaryTotal_ChargeTotalAmount_value,
                     .currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
                }
            },
            .PayableAmount = New List(Of PayableAmount) From {
                New PayableAmount With {
                     .value = LegalMonetaryTotal_PayableAmount_value,
                     .currencyID = LegalMonetaryTotal_PayableAmount_currencyID
                }
            },
            .PayableRoundingAmount = New List(Of PayableRoundingAmount) From {
                New PayableRoundingAmount With {
                     .value = LegalMonetaryTotal_PayableRoundingAmount_value,
                     .currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
                }
            }
        }

        invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)
        'LegalMonetaryTotal end


        'InvoiceLine start
        invoice.InvoiceLine = New List(Of InvoiceLine)



        Dim invoiceLine As New InvoiceLine With {
            .AllowanceCharge = New List(Of InvoiceLineAllowanceCharge) From {
                New InvoiceLineAllowanceCharge With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_AllowanceCharge_Amount_value,
                            .currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
                        }
                    },
                    .ChargeIndicator = New List(Of ChargeIndicator) From {
                        New ChargeIndicator With {.value = InvoiceLine_AllowanceCharge_ChargeIndicator}
                    },
                    .MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric) From {
                        New MultiplierFactorNumeric With {.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value}
                    },
                    .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                        New AllowanceChargeReason With {.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value}
                    }
                },
                New InvoiceLineAllowanceCharge With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_AllowanceCharge2_Amount_value,
                            .currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
                        }
                    },
                    .ChargeIndicator = New List(Of ChargeIndicator) From {
                        New ChargeIndicator With {.value = InvoiceLine_AllowanceCharge2_ChargeIndicator}
                    },
                    .MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric) From {
                        New MultiplierFactorNumeric With {.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value}
                    },
                    .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                        New AllowanceChargeReason With {.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value}
                    }
                }
            },
            .ID = New List(Of ID) From {New ID With {.Value = InvoiceLine_ID_value}},
            .InvoicedQuantity = New List(Of InvoicedQuantity) From {
                New InvoicedQuantity With {
                    .value = InvoiceLine_InvoicedQuantity_value,
                    .unitCode = InvoiceLine_InvoicedQuantity_unitCode
                }
            },
            .Item = New List(Of Item) From {
                New Item With {
                    .CommodityClassification = New List(Of CommodityClassification) From {
                        New CommodityClassification With {
                            .ItemClassificationCode = New List(Of ItemClassificationCode) From {
                                New ItemClassificationCode With {
                                     .value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value,
                                     .listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
                                }
                            }
                        }
                    },
                    .Description = New List(Of Description) From {
                        New Description With {.Value = InvoiceLine_Item_Description_value}
                    },
                    .OriginCountry = New List(Of OriginCountry) From {
                        New OriginCountry With {
                            .IdentificationCode = New List(Of IdentificationCodeID) From {
                                New IdentificationCodeID With {.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value}
                            }
                        }
                    }
                }
            },
            .ItemPriceExtension = New List(Of ItemPriceExtension) From {
                New ItemPriceExtension With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_ItemPriceExtension_Amount_value,
                            .currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
                        }
                    }
                }
            },
            .LineExtensionAmount = New List(Of LineExtensionAmount) From {
                New LineExtensionAmount With {
                     .value = InvoiceLine_LineExtensionAmount_value,
                     .currencyID = InvoiceLine_LineExtensionAmount_currencyID
                }
            },
            .Price = New List(Of Price) From {
                New Price With {
                    .PriceAmount = New List(Of PriceAmount) From {
                        New PriceAmount With {
                             .value = InvoiceLine_Price_PriceAmount_value,
                            .currencyID = InvoiceLine_Price_PriceAmount_currencyID
                        }
                    }
                }
            },
            .TaxTotal = New List(Of TaxTotal) From {
                New TaxTotal With {
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {
                             .value = InvoiceLine_TaxTotal_TaxAmount_value,
                            .currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
                        }
                    },
                    .TaxSubtotal = New List(Of TaxSubtotal) From {
                        New TaxSubtotal With {
                            .TaxableAmount = New List(Of TaxableAmount) From {
                                New TaxableAmount With {
                                     .value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
                                }
                            },
                            .TaxAmount = New List(Of TaxAmount) From {
                                New TaxAmount With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
                                }
                            },
                            .PerUnitAmount = New List(Of PerUnitAmount) From {
                                New PerUnitAmount With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
                                }
                            },
                            .BaseUnitMeasure = New List(Of BaseUnitMeasure) From {
                                New BaseUnitMeasure With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value,
                                    .unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
                                }
                            },
                            .TaxCategory = New List(Of TaxCategory) From {
                                New TaxCategory With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value}
                                    },
                                    .TaxScheme = New List(Of TaxScheme) From {
                                        New TaxScheme With {
                                            .ID = New List(Of TaxSchemeID) From {
                                                New TaxSchemeID With {
                                                    .ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                                    .schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID,
                                                    .schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                                                }
                                            }
                                        }
                                    },
                                    .Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent,
                                    .TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
                                }
                            }
                        },
                        New TaxSubtotal With {
                            .TaxableAmount = New List(Of TaxableAmount) From {
                                New TaxableAmount With {
                                    .value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
                                }
                            },
                            .TaxAmount = New List(Of TaxAmount) From {
                                New TaxAmount With {
                                    .value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
                                }
                            },
                            .TaxCategory = New List(Of TaxCategory) From {
                                New TaxCategory With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value}
                                    },
                                    .Percent = New List(Of Percent) From {
                                            New Percent With {.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent}
                                    },
                                    .TaxScheme = New List(Of TaxScheme) From {
                                    New TaxScheme With {
                                            .ID = New List(Of TaxSchemeID) From {
                                                New TaxSchemeID With {
                                                    .ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                                    .schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID,
                                                    .schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                                                }
                                            }
                                    }
                                    },
                                     .TaxExemptionReason = New List(Of TaxExemptionReason) From {
                                            New TaxExemptionReason With {.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason}
                                     }
                                }
                            }
                        }
                    }
                }
            }
        }

        invoice.InvoiceLine.Add(invoiceLine)
        'invoiceLine end

        'TaxExchangeRate start
        invoice.TaxExchangeRate = New List(Of TaxExchangeRate)



        Dim TaxExchangeRate As New TaxExchangeRate With {
            .SourceCurrencyCode = New List(Of SourceCurrencyCode) From {
                New SourceCurrencyCode With {.value = TaxExchangeRate_SourceCurrencyCode_value}
            },
            .TargetCurrencyCode = New List(Of TargetCurrencyCode) From {
                New TargetCurrencyCode With {.value = TaxExchangeRate_TargetCurrencyCode_value}
            },
            .CalculationRate = New List(Of CalculationRate) From {
                New CalculationRate With {.value = TaxExchangeRate_CalculationRate_value}
            }
        }

        invoice.TaxExchangeRate.Add(TaxExchangeRate)
        'TaxExchangeRate end


        invoiceWrapper.Invoice.Add(invoice)


        Dim settings As New JsonSerializerSettings With {
            .NullValueHandling = NullValueHandling.Ignore
        }
        Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)

        Return json

    End Function

    'For submit document
    Private Shared Function HexStringToByteArray(ByVal hex As String) As Byte()
        Dim length As Integer = hex.Length
        Dim bytes As Byte() = New Byte(length / 2 - 1) {}

        For i As Integer = 0 To length - 1 Step 2
            bytes(i / 2) = Convert.ToByte(hex.Substring(i, 2), 16)
        Next

        Return bytes
    End Function


    Protected Function ValiDateTin(TinNumber As String, idType As String, idvalue As String) As Boolean
        Try
            Dim tokenno As String = ""
            tokenno = AccessToken
            '  tokenno = GetToken()
            InsertIntoTblWebEventLog("VTIN1", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)
            InsertIntoTblWebEventLog("VTIN2", idType, idvalue, Session("UserID").ToString)

            Dim values As String = TinNumber + "?idType=" + idType + "&idValue= " + idvalue
            Dim apivalidateTinURL = ConfigurationManager.AppSettings.[Get]("apivalidateTin")
            Using client = New HttpClient()
                If Not String.IsNullOrWhiteSpace(tokenno) Then

                    client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
                    Dim apivalidateTinurlPath As String = apivalidateTinURL & "/" & values
                    System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                    Dim response As HttpResponseMessage = client.GetAsync(apivalidateTinurlPath).Result
                    Dim responseString = response.Content.ReadAsStringAsync().Result

                    If response.IsSuccessStatusCode Then
                        Return True
                    End If

                End If
            End Using

            Return False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN", "VALIDATETIN", ex.Message.ToString, Session("UserID").ToString)
        End Try

    End Function

    Protected Function SearchTin(TaxPayerName As String, idType As String, idvalue As String) As String

        'Dim tokenno As String = ""
        'tokenno = AccessToken
        ''  tokenno = GetToken()
        'InsertIntoTblWebEventLog("TIN1", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        ''   Dim values As String = "tin?idType=" + idType + "&idValue= " + idvalue + "&taxpayername= " + TaxPayerName
        ''  Dim apiSearchTinURL = ConfigurationManager.AppSettings.[Get]("apiSearchTin")
        'Dim apiSearchTinURL = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/taxpayer/search"
        'Dim values As String = "tin?idType=" + idType + "&idValue=" + idvalue

        'Using client = New HttpClient()
        '    If Not String.IsNullOrWhiteSpace(tokenno) Then

        '        client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
        '        Dim apiSearchTinurlPath As String = apiSearchTinURL & "/" & values
        '        InsertIntoTblWebEventLog("TIN1", "SEARCHTIN", apiSearchTinurlPath, Session("UserID").ToString)

        '        System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
        '        Dim response As HttpResponseMessage = client.GetAsync(apiSearchTinurlPath).Result
        '        Dim responseString = response.Content.ReadAsStringAsync().Result

        '        If response.IsSuccessStatusCode Then
        '            Return True
        '        End If

        '    End If
        'End Using

        'Return False

        Dim tin As String = "A"
        Dim tokenno As String = ""
        tokenno = AccessToken
        '  tokenno = GetToken()
        InsertIntoTblWebEventLog("TIN1", idvalue, idType, Session("UserID").ToString)

        Dim values As String = "tin?idType=" + idType + "&idValue=" + idvalue
        Dim apiSearchTinURL = ConfigurationManager.AppSettings.[Get]("apiSearchTin")
        '   Dim apiSearchTinURL = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/taxpayer/search"
        Using client = New HttpClient()
            If Not String.IsNullOrWhiteSpace(tokenno) Then

                client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
                Dim apiSearchTinurlPath As String = apiSearchTinURL & "/" & values
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiSearchTinurlPath).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("TIN2", "RESPONSE", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    'Return True
                    Dim jObject = Newtonsoft.Json.Linq.JObject.Parse(responseString)
                    tin = jObject("tin").ToString()
                End If

            End If
        End Using
        InsertIntoTblWebEventLog("TIN3", "TIN", tin.ToString, Session("UserID").ToString)


        Return tin
    End Function

    Public Function AssignJsonvalue_Without_certificate(CNNumber As String)
        InsertIntoTblWebEventLog("JsonValue0", CNNumber, "", Session("UserID").ToString)

        Dim invoiceWrapper As New InvoiceWrapper_Without_certificate()

        Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
        Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
        Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

        Dim test1 = DateTime.UtcNow.Date
        Dim test = DateTime.UtcNow.TimeOfDay

        Dim invoiceID = CNNumber
        'Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
        'Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
        'Dim InvoiceTypeCode = "01"
        'Dim InvoiceListVersionID = "1.0"
        'Dim DocumentCurrencyCode = "MYR"
        'Dim periodStartDate = "2024-11-03"
        'Dim periodEndDate = "2024-12-03"
        'Dim periodDescription = "Monthly"
        'Dim BillingAdditionalDocumentReferenceID = " "
        'Dim AdditionalDocumentReferenceID = ""
        'InsertIntoTblWebEventLog("JsonValue1", CNNumber, "", Session("UserID").ToString)

        Dim conn As MySqlConnection = New MySqlConnection()
        Dim command As MySqlCommand = New MySqlCommand

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()

        Dim dtCompanyInfo As DataTable = RetrieveCompanyInfoTable(conn)
        Dim dtEInvoiceMalaysiaCode As DataTable = RetrieveEInvoiceMalaysiaCodeTable(conn)
        Dim dtCustomerInfo As DataTable = RetrieveCustomerTable(conn)
        InsertIntoTblWebEventLog("JsonValue21", CNNumber, txtAccountID.Text, Session("UserID").ToString)

        Dim dtSales As DataTable = RetrieveSalesTable(conn, invoiceID)
        InsertIntoTblWebEventLog("JsonValue22", CNNumber, "", Session("UserID").ToString)

        Dim dtSalesDetail As DataTable = RetrieveSalesDetailTable(conn, invoiceID)
        InsertIntoTblWebEventLog("JsonValue23", CNNumber, "", Session("UserID").ToString)

        '  Dim dtContractInfo As DataTable = RetrieveContractInfo(conn, dtSalesDetail.Rows(0)("CostCode"))
        Dim dtSetup As DataTable = RetrieveSetupInfo(conn)

        conn.Close()
        InsertIntoTblWebEventLog("JsonValue2", CNNumber, "", Session("UserID").ToString)

        ' for AccountingSupplierParty
        'Dim AccountingSupplierParty_AdditionalAccountID = ""
        'Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
        ' Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
        '  Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
        'Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
        'Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
        'Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
        'Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
        'Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
        'Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
        'Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        'Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
        'Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
        'Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"


        '' for AccountingCustomerParty
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
        'Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
        'Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
        'Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        'Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"
        'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
        'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"
        Try
            ' InsertIntoTblWebEventLog("JsonValue2", dtEInvoiceMalaysiaCode.Rows(0)("IndustrialClassificationCode").ToString, dtEInvoiceMalaysiaCode.Rows(0)("Description").ToString, Session("UserID").ToString)

            Dim AccountingSupplierParty_AdditionalAccountID = ""
            Dim AccountingSupplierParty_schemeAgencyName = dtCompanyInfo.Rows(0)("schemeAgencyName").ToString
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = dtCompanyInfo.Rows(0)("IndustryClassificationCode").ToString
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = dtCompanyInfo.Rows(0)("IndustryClassificationDesc").ToString

            Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = dtCompanyInfo.Rows(0)("TaxIndentificationNo").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = dtCompanyInfo.Rows(0)("EInvoiceID1").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = dtCompanyInfo.Rows(0)("BRN").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = dtCompanyInfo.Rows(0)("EInvoiceID2").ToString

            Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
            Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
            Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = dtCompanyInfo.Rows(0)("CountryEntityCode").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = dtCompanyInfo.Rows(0)("OfficeAddress1").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = dtCompanyInfo.Rows(0)("OfficeAddress2").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = dtCompanyInfo.Rows(0)("CountryIdentificationValue").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = dtCompanyInfo.Rows(0)("CountryIdentificationListID").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = dtCompanyInfo.Rows(0)("CountryIdentificationAgencyID").ToString
            Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = dtCompanyInfo.Rows(0)("CompanyName").ToString
            '  Dim AccountingSupplierParty_Party_Contact_Telephone = dtCompanyInfo.Rows(0)("TelephoneNumber").ToString
            Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"

            Dim AccountingSupplierParty_Party_Contact_ElectronicMail = dtCompanyInfo.Rows(0)("Email").ToString

            InsertIntoTblWebEventLog("JsonValue3", CNNumber, dtCustomerInfo.Rows.Count.ToString, Session("UserID").ToString)


            ' for AccountingCustomerParty
            Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = dtCustomerInfo.Rows(0)("TaxIdentificationNo").ToString
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"
            Dim AccountingCustomerParty_Party_PartyIdentification_ID2
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2
            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                AccountingCustomerParty_Party_PartyIdentification_ID2 = dtCustomerInfo.Rows(0)("RocNos").ToString
                '  AccountingCustomerParty_Party_PartyIdentification_ID2 = "28728-U / 197601002776"
                AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "BRN"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then

                AccountingCustomerParty_Party_PartyIdentification_ID2 = dtCustomerInfo.Rows(0)("NRIC").ToString
                AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
            End If

            Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = dtCustomerInfo.Rows(0)("SalesTaxRegistrationNo").ToString
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
            Dim AccountingCustomerParty_Party_PostalAddress_CityName = dtCustomerInfo.Rows(0)("AddCity").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = dtCustomerInfo.Rows(0)("AddPostal").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = dtCustomerInfo.Rows(0)("Address1").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = dtCustomerInfo.Rows(0)("AddStreet").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = dtCustomerInfo.Rows(0)("AddBuilding").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = dtCustomerInfo.Rows(0)("Name").ToString
            '    Dim AccountingCustomerParty_Party_Contact_Telephone
            Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
            'If String.IsNullOrEmpty(dtCustomerInfo.Rows(0)("Telephone").ToString) Then
            '    AccountingCustomerParty_Party_Contact_Telephone = dtCustomerInfo.Rows(0)("Mobile").ToString
            'Else
            '    AccountingCustomerParty_Party_Contact_Telephone = dtCustomerInfo.Rows(0)("Telephone").ToString

            'End If
            Dim AccountingCustomerParty_Party_Contact_ElectronicMail = dtCustomerInfo.Rows(0)("Email").ToString

            InsertIntoTblWebEventLog("JsonValue4", CNNumber, "", Session("UserID").ToString)

            'for Delivery DeliveryParty
            Dim DeliveryParty_LegalEntity_RegistrationName = ""
            Dim DeliveryParty_PostalAddress_CityName = ""
            Dim DeliveryParty_PostalAddress_PostalZone = ""
            Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
            Dim DeliveryParty_PostalAddress_AddressLine1 = ""
            Dim DeliveryParty_PostalAddress_AddressLine2 = ""
            Dim DeliveryParty_PostalAddress_AddressLine3 = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
            Dim DeliveryParty_PartyIdentification_ID = ""
            Dim DeliveryParty_PartyIdentification_schemeID = ""

            'for Delivery Shipment
            Dim Delivery_Shipment_ID = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
            Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

            'for paymentMeans
            Dim paymentMeans_PaymentMeansCode_value = "01"
            Dim paymentMeans_PayeeFinancialAccount_value = ""

            'for paymentTerm
            Dim paymentTerms_Note_value = ""

            'for prepaidPayment
            Dim prepaidPayment_ID = ""
            Dim prepaidPayment_PaidAmount_value = 0
            Dim prepaidPayment_PaidAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim prepaidPayment_PaidDate = ""
            Dim prepaidPayment_PaidTime_value = ""

            'for AllowanceCharge 
            Dim AllowanceCharge_ChargeIndicator = True
            Dim AllowanceCharge_AllowanceChargeReason_value = ""
            Dim AllowanceCharge_Amount_value = 0
            Dim AllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

            'for AllowanceCharge 1
            Dim AllowanceCharge_ChargeIndicator_1 = False
            Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
            Dim AllowanceCharge_Amount_value_1 = 0
            Dim AllowanceCharge_Amount_currencyID_1 = dtSetup.Rows(0)("ARCurrency")

            InsertIntoTblWebEventLog("JsonValue4", CNNumber, "", Session("UserID").ToString)

            'for TaxTotal
            Dim TaxTotal_TaxAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxableAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 0
            Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 0
            Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            'for LegalMonetaryTotal 
            Dim LegalMonetaryTotal_LineExtensionAmount_value = dtSales.Rows(0)("ValueBase").ToString
            Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_TaxExclusiveAmount_value = dtSales.Rows(0)("ValueBase").ToString
            Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_TaxInclusiveAmount_value = Convert.ToDecimal(dtSales.Rows(0)("ValueBase").ToString) + Convert.ToDecimal(dtSales.Rows(0)("GSTBase").ToString)
            Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
            Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
            Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_PayableAmount_value = dtSales.Rows(0)("AppliedBase").ToString
            Dim LegalMonetaryTotal_PayableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
            Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

            InsertIntoTblWebEventLog("JsonValue5", CNNumber, "", Session("UserID").ToString)


            InsertIntoTblWebEventLog("JsonValue6", CNNumber, "", Session("UserID").ToString)

            'for TaxExchangeRate
            Dim TaxExchangeRate_SourceCurrencyCode_value = dtSetup.Rows(0)("ARCurrency")
            Dim TaxExchangeRate_TargetCurrencyCode_value = dtSetup.Rows(0)("ARCurrency")
            Dim TaxExchangeRate_CalculationRate_value = 0


            invoiceWrapper._D = invoiceDetails_D
            invoiceWrapper._A = invoiceDetails_A
            invoiceWrapper._B = invoiceDetails_B

            invoiceWrapper.Invoice = New List(Of Invoice_without_Certificate)()

            Dim invoice As New Invoice_without_Certificate()

            invoice.ID = New List(Of ID)
            Dim invoiceIDObj As New ID
            invoiceIDObj.Value = invoiceID
            invoice.ID.Add(invoiceIDObj)


            Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
            Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")

            Dim InvoiceTypeCode

            If ddlDocType.Text = "ARCN" Then
                InvoiceTypeCode = "02"
            ElseIf ddlDocType.Text = "ARDN" Then
                InvoiceTypeCode = "03"
            End If

            Dim InvoiceListVersionID = "1.0"
            Dim DocumentCurrencyCode = dtSetup.Rows(0)("ARCurrency")
            Dim periodStartDate = "2024-11-03"
            Dim periodEndDate = "2024-12-03"
            Dim periodDescription = "Monthly"
            Dim BillingAdditionalDocumentReferenceID = " "
            Dim AdditionalDocumentReferenceID = ""


            ' Set IssueDate
            invoice.IssueDate = New List(Of IssueDate)
            Dim issueDateObj As New IssueDate
            '   issueDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            issueDateObj.Value = IssueDate
            invoice.IssueDate.Add(issueDateObj)

            InsertIntoTblWebEventLog("JsonValue7", CNNumber, "", Session("UserID").ToString)

            ' Set IssueTime
            invoice.IssueTime = New List(Of IssueTime)
            Dim issueTimeObj As New IssueTime
            '    issueTimeObj.Value = Convert.ToDateTime(dtSales.Rows(0)("CreatedOn")).ToString("yyyy-MM-dd")
            issueTimeObj.Value = IssueTime
            invoice.IssueTime.Add(issueTimeObj)

            ' Set InvoiceTypeCode
            invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)
            Dim invoiceTypeCodeObj As New InvoiceTypeCode
            invoiceTypeCodeObj.Value = InvoiceTypeCode
            invoiceTypeCodeObj.ListVersionID = InvoiceListVersionID
            invoice.InvoiceTypeCode.Add(invoiceTypeCodeObj)

            ' Set DocumentCurrencyCode
            invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)
            Dim docCurrencyCodeObj As New DocumentCurrencyCode
            docCurrencyCodeObj.Value = DocumentCurrencyCode
            invoice.DocumentCurrencyCode.Add(docCurrencyCodeObj)

            ' InvoicePeriod
            invoice.InvoicePeriod = New List(Of InvoicePeriod)
            Dim period As New InvoicePeriod()

            period.StartDate = New List(Of StartDate)
            Dim startDateObj As New StartDate
            startDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            ' startDateObj.Value = periodStartDate
            period.StartDate.Add(startDateObj)

            period.EndDate = New List(Of EndDate)
            Dim endDateObj As New EndDate
            '  endDateObj.Value = periodEndDate
            endDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            period.EndDate.Add(endDateObj)

            period.Description = New List(Of Description)
            Dim descriptionObj As New Description
            descriptionObj.Value = dtSalesDetail.Rows(0)("BillingFrequency")
            period.Description.Add(descriptionObj)

            invoice.InvoicePeriod.Add(period)

            InsertIntoTblWebEventLog("JsonValue8", dtSalesDetail.Rows(0)("SourceInvoice"), dtSalesDetail.Rows(0)("UUID"), Session("UserID").ToString)

            ' BillingReference
            invoice.BillingReference = New List(Of BillingReference)
            Dim billingRef As New BillingReference

            billingRef.InvoiceDocumentReference = New List(Of InvoiceDocumentReference)
            Dim billingInvoiceDocRef As New InvoiceDocumentReference

            billingInvoiceDocRef.ID = New List(Of ID)
            Dim billingInvoiceDocRefIDObj As New ID
            billingInvoiceDocRefIDObj.Value = dtSalesDetail.Rows(0)("SourceInvoice")

            billingInvoiceDocRef.UUID = New List(Of UUID)
            Dim billingInvoiceDocRefUUIDObj As New UUID
            billingInvoiceDocRefUUIDObj.Value = dtSalesDetail.Rows(0)("UUID")

            billingInvoiceDocRef.ID.Add(billingInvoiceDocRefIDObj)
            billingInvoiceDocRef.UUID.Add(billingInvoiceDocRefUUIDObj)

            billingRef.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)
            Dim billingAdditionalDocRef As New AdditionalDocumentReference

            billingAdditionalDocRef.ID = New List(Of ID)
            Dim billingAddDocRefIDObj As New ID
            billingAddDocRefIDObj.Value = BillingAdditionalDocumentReferenceID
            '  billingAddDocRefIDObj.Value = dtSalesDetail.Rows(0)("SourceInvoice")

            billingAdditionalDocRef.ID.Add(billingAddDocRefIDObj)

            billingRef.InvoiceDocumentReference.Add(billingInvoiceDocRef)
            billingRef.AdditionalDocumentReference.Add(billingAdditionalDocRef)
            invoice.BillingReference.Add(billingRef)

            ' AdditionalDocumentReference
            invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

            Dim addDocRef1 As New AdditionalDocumentReference
            addDocRef1.ID = New List(Of ID)
            Dim addDocRef1ID As New ID
            addDocRef1ID.Value = AdditionalDocumentReferenceID
            addDocRef1.ID.Add(addDocRef1ID)
            invoice.AdditionalDocumentReference.Add(addDocRef1)

            ' Repeat the pattern for AdditionalDocumentReference2, 3, and 4
            Dim addDocRef2 As New AdditionalDocumentReference
            addDocRef2.ID = New List(Of ID)
            Dim addDocRef2ID As New ID
            addDocRef2ID.Value = AdditionalDocumentReferenceID
            addDocRef2.ID.Add(addDocRef2ID)
            invoice.AdditionalDocumentReference.Add(addDocRef2)

            Dim addDocRef3 As New AdditionalDocumentReference
            addDocRef3.ID = New List(Of ID)
            Dim addDocRef3ID As New ID
            addDocRef3ID.Value = AdditionalDocumentReferenceID
            addDocRef3.ID.Add(addDocRef3ID)
            invoice.AdditionalDocumentReference.Add(addDocRef3)

            Dim addDocRef4 As New AdditionalDocumentReference
            addDocRef4.ID = New List(Of ID)
            Dim addDocRef4ID As New ID
            addDocRef4ID.Value = AdditionalDocumentReferenceID
            addDocRef4.ID.Add(addDocRef4ID)
            invoice.AdditionalDocumentReference.Add(addDocRef4)

            InsertIntoTblWebEventLog("JsonValue9", CNNumber, "", Session("UserID").ToString)

            ' AccountingSupplierParty start

            invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

            ' Create the supplier object
            Dim supplier As New AccountingSupplierParty()

            ' AdditionalAccountID
            supplier.AdditionalAccountID = New List(Of AdditionalAccountID)
            Dim additionalAccountIDObj As New AdditionalAccountID
            additionalAccountIDObj.value = AccountingSupplierParty_AdditionalAccountID
            additionalAccountIDObj.schemeAgencyName = AccountingSupplierParty_schemeAgencyName
            supplier.AdditionalAccountID.Add(additionalAccountIDObj)

            ' Party
            supplier.Party = New List(Of Party)
            Dim partyObj As New Party()

            ' IndustryClassificationCode
            partyObj.IndustryClassificationCode = New List(Of IndustryClassificationCode)
            Dim industryCodeObj As New IndustryClassificationCode
            industryCodeObj.value = AccountingSupplierParty_Party_IndustryClassificationCode_value
            industryCodeObj.name = AccountingSupplierParty_Party_IndustryClassificationCode_name
            partyObj.IndustryClassificationCode.Add(industryCodeObj)

            ' PartyIdentification
            partyObj.PartyIdentification = New List(Of PartyIdentification)

            Dim partyIdentificationObj1 As New PartyIdentification
            partyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID1 As New PartyIdentificationID
            partyIdentificationID1.ID = AccountingSupplierParty_Party_PartyIdentification_ID1
            partyIdentificationID1.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
            partyIdentificationObj1.ID.Add(partyIdentificationID1)
            partyObj.PartyIdentification.Add(partyIdentificationObj1)

            Dim partyIdentificationObj2 As New PartyIdentification
            partyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID2 As New PartyIdentificationID
            partyIdentificationID2.ID = AccountingSupplierParty_Party_PartyIdentification_ID2
            partyIdentificationID2.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
            partyIdentificationObj2.ID.Add(partyIdentificationID2)
            partyObj.PartyIdentification.Add(partyIdentificationObj2)

            ' PostalAddress
            partyObj.PostalAddress = New List(Of PostalAddress)
            Dim postalAddressObj As New PostalAddress

            postalAddressObj.CityName = New List(Of CityName)
            Dim cityNameObj As New CityName
            cityNameObj.value = AccountingSupplierParty_Party_PostalAddress_CityName
            postalAddressObj.CityName.Add(cityNameObj)

            postalAddressObj.PostalZone = New List(Of PostalZone)
            Dim postalZoneObj As New PostalZone
            postalZoneObj.value = AccountingSupplierParty_Party_PostalAddress_PostalZone
            postalAddressObj.PostalZone.Add(postalZoneObj)

            postalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim countrySubentityCodeObj As New CountrySubentityCode
            countrySubentityCodeObj.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode
            postalAddressObj.CountrySubentityCode.Add(countrySubentityCodeObj)

            InsertIntoTblWebEventLog("JsonValue10", CNNumber, "", Session("UserID").ToString)

            ' AddressLine
            postalAddressObj.AddressLine = New List(Of AddressLine)

            Dim addressLineObj1 As New AddressLine
            addressLineObj1.Line = New List(Of Line)
            Dim lineObj1 As New Line
            lineObj1.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1
            addressLineObj1.Line.Add(lineObj1)
            postalAddressObj.AddressLine.Add(addressLineObj1)

            Dim addressLineObj2 As New AddressLine
            addressLineObj2.Line = New List(Of Line)
            Dim lineObj2 As New Line
            lineObj2.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2
            addressLineObj2.Line.Add(lineObj2)
            postalAddressObj.AddressLine.Add(addressLineObj2)

            Dim addressLineObj3 As New AddressLine
            addressLineObj3.Line = New List(Of Line)
            Dim lineObj3 As New Line
            lineObj3.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3
            addressLineObj3.Line.Add(lineObj3)
            postalAddressObj.AddressLine.Add(addressLineObj3)

            ' Country
            postalAddressObj.Country = New List(Of Country)
            Dim countryObj As New Country
            countryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim identificationCodeObj As New IdentificationCode
            identificationCodeObj.value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value
            identificationCodeObj.listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID
            identificationCodeObj.listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            countryObj.IdentificationCode.Add(identificationCodeObj)
            postalAddressObj.Country.Add(countryObj)

            partyObj.PostalAddress.Add(postalAddressObj)

            InsertIntoTblWebEventLog("JsonValue11", CNNumber, "", Session("UserID").ToString)

            ' PartyLegalEntity
            partyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim partyLegalEntityObj As New PartyLegalEntity
            partyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim registrationNameObj As New RegistrationName
            registrationNameObj.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName
            partyLegalEntityObj.RegistrationName.Add(registrationNameObj)
            partyObj.PartyLegalEntity.Add(partyLegalEntityObj)

            ' Contact
            partyObj.Contact = New List(Of Contact)
            Dim contactObj As New Contact

            contactObj.Telephone = New List(Of Telephone)
            Dim telephoneObj As New Telephone
            telephoneObj.value = AccountingSupplierParty_Party_Contact_Telephone
            contactObj.Telephone.Add(telephoneObj)

            contactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim emailObj As New ElectronicMail
            emailObj.value = AccountingSupplierParty_Party_Contact_ElectronicMail
            contactObj.ElectronicMail.Add(emailObj)

            partyObj.Contact.Add(contactObj)

            ' Add the configured party to the supplier
            supplier.Party.Add(partyObj)

            ' Add supplier to AccountingSupplierParty
            invoice.AccountingSupplierParty.Add(supplier)

            ' AccountingSupplierParty end

            InsertIntoTblWebEventLog("JsonValue12", CNNumber, "", Session("UserID").ToString)

            ' AccountingCustomerParty start

            invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

            ' Create the AccountingCustomerParty object
            Dim customer As New AccountingCustomerParty()

            ' Create the Party list
            customer.Party = New List(Of Party)
            Dim customerpartyObj As New Party()

            ' IndustryClassificationCode is Nothing in this case
            customerpartyObj.IndustryClassificationCode = Nothing

            ' PartyIdentification
            customerpartyObj.PartyIdentification = New List(Of PartyIdentification)

            ' First PartyIdentification
            Dim customerpartyIdentificationObj1 As New PartyIdentification
            customerpartyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID1 As New PartyIdentificationID
            customerpartyIdentificationID1.ID = AccountingCustomerParty_Party_PartyIdentification_ID1
            customerpartyIdentificationID1.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
            customerpartyIdentificationObj1.ID.Add(customerpartyIdentificationID1)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj1)

            ' Second PartyIdentification
            Dim customerpartyIdentificationObj2 As New PartyIdentification
            customerpartyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID2 As New PartyIdentificationID
            customerpartyIdentificationID2.ID = AccountingCustomerParty_Party_PartyIdentification_ID2
            customerpartyIdentificationID2.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
            customerpartyIdentificationObj2.ID.Add(customerpartyIdentificationID2)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj2)

            ' Third PartyIdentification
            Dim customerpartyIdentificationObj3 As New PartyIdentification
            customerpartyIdentificationObj3.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID3 As New PartyIdentificationID
            customerpartyIdentificationID3.ID = AccountingCustomerParty_Party_PartyIdentification_ID3
            customerpartyIdentificationID3.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
            customerpartyIdentificationObj3.ID.Add(customerpartyIdentificationID3)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj3)

            InsertIntoTblWebEventLog("JsonValue13", CNNumber, "", Session("UserID").ToString)

            ' PostalAddress
            customerpartyObj.PostalAddress = New List(Of PostalAddress)
            Dim customerpostalAddressObj As New PostalAddress

            customerpostalAddressObj.CityName = New List(Of CityName)
            Dim customercityNameObj As New CityName
            customercityNameObj.value = AccountingCustomerParty_Party_PostalAddress_CityName
            customerpostalAddressObj.CityName.Add(customercityNameObj)

            customerpostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim customerpostalZoneObj As New PostalZone
            customerpostalZoneObj.value = AccountingCustomerParty_Party_PostalAddress_PostalZone
            customerpostalAddressObj.PostalZone.Add(customerpostalZoneObj)

            customerpostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim customercountrySubentityCodeObj As New CountrySubentityCode
            customercountrySubentityCodeObj.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode
            customerpostalAddressObj.CountrySubentityCode.Add(customercountrySubentityCodeObj)

            ' AddressLine
            customerpostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim customeraddressLineObj1 As New AddressLine
            customeraddressLineObj1.Line = New List(Of Line)
            Dim customerlineObj1 As New Line
            customerlineObj1.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1
            customeraddressLineObj1.Line.Add(customerlineObj1)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj1)

            Dim customeraddressLineObj2 As New AddressLine
            customeraddressLineObj2.Line = New List(Of Line)
            Dim customerlineObj2 As New Line
            customerlineObj2.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2
            customeraddressLineObj2.Line.Add(customerlineObj2)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj2)

            Dim customeraddressLineObj3 As New AddressLine
            customeraddressLineObj3.Line = New List(Of Line)
            Dim customerlineObj3 As New Line
            customerlineObj3.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3
            customeraddressLineObj3.Line.Add(customerlineObj3)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj3)

            ' Country
            customerpostalAddressObj.Country = New List(Of Country)
            Dim customercountryObj As New Country
            customercountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim customeridentificationCodeObj As New IdentificationCode
            customeridentificationCodeObj.value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value
            customeridentificationCodeObj.listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID
            customeridentificationCodeObj.listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            customercountryObj.IdentificationCode.Add(customeridentificationCodeObj)
            customerpostalAddressObj.Country.Add(customercountryObj)

            customerpartyObj.PostalAddress.Add(customerpostalAddressObj)

            InsertIntoTblWebEventLog("JsonValue14", CNNumber, "", Session("UserID").ToString)

            ' PartyLegalEntity
            customerpartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim customerpartyLegalEntityObj As New PartyLegalEntity
            customerpartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim customerregistrationNameObj As New RegistrationName
            customerregistrationNameObj.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName
            customerpartyLegalEntityObj.RegistrationName.Add(customerregistrationNameObj)
            customerpartyObj.PartyLegalEntity.Add(customerpartyLegalEntityObj)

            ' Contact
            customerpartyObj.Contact = New List(Of Contact)
            Dim customercontactObj As New Contact

            customercontactObj.Telephone = New List(Of Telephone)
            Dim customertelephoneObj As New Telephone
            customertelephoneObj.value = AccountingCustomerParty_Party_Contact_Telephone
            customercontactObj.Telephone.Add(customertelephoneObj)

            customercontactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim customeremailObj As New ElectronicMail
            customeremailObj.value = AccountingCustomerParty_Party_Contact_ElectronicMail
            customercontactObj.ElectronicMail.Add(customeremailObj)

            customerpartyObj.Contact.Add(customercontactObj)

            ' Add the configured party to customer
            customer.Party.Add(customerpartyObj)

            invoice.AccountingCustomerParty.Add(customer)

            InsertIntoTblWebEventLog("JsonValue15", CNNumber, "", Session("UserID").ToString)

            ' AccountingCustomerParty end

            ' delivery start
            invoice.Delivery = New List(Of Delivery)

            ' Create the Delivery object
            Dim delivery As New Delivery()

            ' DeliveryParty

            delivery.DeliveryParty = New List(Of DeliveryParty)
            Dim deliveryPartyObj As New DeliveryParty

            ' PartyLegalEntity
            deliveryPartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim deliverypartyLegalEntityObj As New PartyLegalEntity
            deliverypartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim deliveryregistrationNameObj As New RegistrationName
            deliveryregistrationNameObj.value = DeliveryParty_LegalEntity_RegistrationName
            deliverypartyLegalEntityObj.RegistrationName.Add(deliveryregistrationNameObj)
            deliveryPartyObj.PartyLegalEntity.Add(deliverypartyLegalEntityObj)

            ' PostalAddress
            deliveryPartyObj.PostalAddress = New List(Of PostalAddress)
            Dim deliverypostalAddressObj As New PostalAddress

            ' CityName
            deliverypostalAddressObj.CityName = New List(Of CityName)
            Dim deliverycityNameObj As New CityName
            deliverycityNameObj.value = DeliveryParty_PostalAddress_CityName
            deliverypostalAddressObj.CityName.Add(deliverycityNameObj)

            ' PostalZone
            deliverypostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim deliverypostalZoneObj As New PostalZone
            deliverypostalZoneObj.value = DeliveryParty_PostalAddress_PostalZone
            deliverypostalAddressObj.PostalZone.Add(deliverypostalZoneObj)

            ' CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim deliverycountrySubentityCodeObj As New CountrySubentityCode
            deliverycountrySubentityCodeObj.value = DeliveryParty_PostalAddress_CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode.Add(deliverycountrySubentityCodeObj)

            ' AddressLine
            deliverypostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim deliveryaddressLineObj1 As New AddressLine
            deliveryaddressLineObj1.Line = New List(Of Line)
            Dim deliverylineObj1 As New Line
            deliverylineObj1.value = DeliveryParty_PostalAddress_AddressLine1
            deliveryaddressLineObj1.Line.Add(deliverylineObj1)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj1)

            Dim deliveryaddressLineObj2 As New AddressLine
            deliveryaddressLineObj2.Line = New List(Of Line)
            Dim deliverylineObj2 As New Line
            deliverylineObj2.value = DeliveryParty_PostalAddress_AddressLine2
            deliveryaddressLineObj2.Line.Add(deliverylineObj2)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj2)

            Dim deliveryaddressLineObj3 As New AddressLine
            deliveryaddressLineObj3.Line = New List(Of Line)
            Dim deliverylineObj3 As New Line
            deliverylineObj3.value = DeliveryParty_PostalAddress_AddressLine3
            deliveryaddressLineObj3.Line.Add(deliverylineObj3)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj3)

            ' Country
            deliverypostalAddressObj.Country = New List(Of Country)
            Dim deliverycountryObj As New Country
            deliverycountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim deliveryidentificationCodeObj As New IdentificationCode
            deliveryidentificationCodeObj.value = DeliveryParty_PostalAddress_Country_IdentificationCode_value
            deliveryidentificationCodeObj.listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID
            deliveryidentificationCodeObj.listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
            deliverycountryObj.IdentificationCode.Add(deliveryidentificationCodeObj)
            deliverypostalAddressObj.Country.Add(deliverycountryObj)

            deliveryPartyObj.PostalAddress.Add(deliverypostalAddressObj)

            InsertIntoTblWebEventLog("JsonValue16", CNNumber, "", Session("UserID").ToString)

            ' PartyIdentification
            deliveryPartyObj.PartyIdentification = New List(Of PartyIdentification)
            Dim deliverypartyIdentificationObj As New PartyIdentification
            deliverypartyIdentificationObj.ID = New List(Of PartyIdentificationID)
            Dim deliverypartyIdentificationIDObj As New PartyIdentificationID
            deliverypartyIdentificationIDObj.ID = DeliveryParty_PartyIdentification_ID
            deliverypartyIdentificationIDObj.schemeID = DeliveryParty_PartyIdentification_schemeID
            deliverypartyIdentificationObj.ID.Add(deliverypartyIdentificationIDObj)
            deliveryPartyObj.PartyIdentification.Add(deliverypartyIdentificationObj)

            delivery.DeliveryParty.Add(deliveryPartyObj)

            ' Shipment
            delivery.Shipment = New List(Of Shipment)
            Dim deliveryshipmentObj As New Shipment

            deliveryshipmentObj.ID = New List(Of ID)
            Dim deliveryshipmentIDObj As New ID
            deliveryshipmentIDObj.Value = Delivery_Shipment_ID
            deliveryshipmentObj.ID.Add(deliveryshipmentIDObj)

            ' FreightAllowanceCharge
            deliveryshipmentObj.FreightAllowanceCharge = New List(Of FreightAllowanceCharge)
            Dim deliveryfreightAllowanceChargeObj As New FreightAllowanceCharge

            deliveryfreightAllowanceChargeObj.ChargeIndicator = New List(Of ChargeIndicator)
            Dim deliverychargeIndicatorObj As New ChargeIndicator
            deliverychargeIndicatorObj.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator
            deliveryfreightAllowanceChargeObj.ChargeIndicator.Add(deliverychargeIndicatorObj)

            deliveryfreightAllowanceChargeObj.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim deliveryallowanceChargeReasonObj As New AllowanceChargeReason
            deliveryallowanceChargeReasonObj.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason
            deliveryfreightAllowanceChargeObj.AllowanceChargeReason.Add(deliveryallowanceChargeReasonObj)

            deliveryfreightAllowanceChargeObj.Amount = New List(Of Amount)
            Dim deliveryamountObj As New Amount
            deliveryamountObj.value = Delivery_Shipment_FreightAllowanceCharge_Amount_value
            deliveryamountObj.currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
            deliveryfreightAllowanceChargeObj.Amount.Add(deliveryamountObj)

            deliveryshipmentObj.FreightAllowanceCharge.Add(deliveryfreightAllowanceChargeObj)

            delivery.Shipment.Add(deliveryshipmentObj)

            invoice.Delivery.Add(delivery)

            ' delivery End
            InsertIntoTblWebEventLog("JsonValue17", CNNumber, "", Session("UserID").ToString)

            'paymentMeans start

            invoice.PaymentMeans = New List(Of PaymentMeans)

            ' Create a PaymentMeans object
            Dim paymentMeans As New PaymentMeans()

            ' Set PaymentMeansCode
            paymentMeans.PaymentMeansCode = New List(Of PaymentMeansCode)
            Dim paymentMeansCodeObj As New PaymentMeansCode
            paymentMeansCodeObj.value = paymentMeans_PaymentMeansCode_value
            paymentMeans.PaymentMeansCode.Add(paymentMeansCodeObj)

            ' Set PayeeFinancialAccount
            paymentMeans.PayeeFinancialAccount = New List(Of PayeeFinancialAccount)
            Dim payeeFinancialAccountObj As New PayeeFinancialAccount

            payeeFinancialAccountObj.ID = New List(Of ID)
            Dim payeeFinancialAccountID As New ID
            payeeFinancialAccountID.Value = paymentMeans_PayeeFinancialAccount_value
            payeeFinancialAccountObj.ID.Add(payeeFinancialAccountID)

            paymentMeans.PayeeFinancialAccount.Add(payeeFinancialAccountObj)

            invoice.PaymentMeans.Add(paymentMeans)

            'paymentMeans end

            InsertIntoTblWebEventLog("JsonValue18", CNNumber, "", Session("UserID").ToString)

            'paymentTerms start

            invoice.PaymentTerms = New List(Of PaymentTerms)

            ' Create a PaymentTerms object
            Dim paymentTerms As New PaymentTerms()

            ' Set Note
            paymentTerms.Note = New List(Of Note)
            Dim noteObj As New Note
            ' noteObj.value = paymentTerms_Note_value
            noteObj.value = dtSales.Rows(0)("Comments")
            paymentTerms.Note.Add(noteObj)

            ' Add the completed paymentTerms object to invoice.PaymentTerms
            invoice.PaymentTerms.Add(paymentTerms)
            'paymentTerms end

            'prepaidPayment start
            invoice.PrepaidPayment = New List(Of PrepaidPayment)

            ' Create PrepaidPayment object
            Dim prepaidPayment As New PrepaidPayment()

            ' Set ID
            prepaidPayment.ID = New List(Of ID)
            Dim idObj As New ID
            idObj.Value = prepaidPayment_ID
            prepaidPayment.ID.Add(idObj)

            ' Set PaidAmount
            prepaidPayment.PaidAmount = New List(Of PaidAmount)
            Dim paidAmountObj As New PaidAmount
            paidAmountObj.value = prepaidPayment_PaidAmount_value
            paidAmountObj.currencyID = prepaidPayment_PaidAmount_currencyID
            prepaidPayment.PaidAmount.Add(paidAmountObj)

            ' Set PaidDate
            prepaidPayment.PaidDate = New List(Of PaidDate)
            Dim paidDateObj As New PaidDate
            paidDateObj.value = prepaidPayment_PaidDate
            prepaidPayment.PaidDate.Add(paidDateObj)

            ' Set PaidTime
            prepaidPayment.PaidTime = New List(Of PaidTime)
            Dim paidTimeObj As New PaidTime
            paidTimeObj.value = prepaidPayment_PaidTime_value
            prepaidPayment.PaidTime.Add(paidTimeObj)

            invoice.PrepaidPayment.Add(prepaidPayment)
            'prepaidPayment end

            InsertIntoTblWebEventLog("JsonValue19", CNNumber, "", Session("UserID").ToString)

            'allowanceCharge start
            ' Initialize the AllowanceCharge list
            invoice.AllowanceCharge = New List(Of AllowanceCharge)

            ' Create the first AllowanceCharge object
            Dim allowanceCharge As New AllowanceCharge()

            allowanceCharge.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj As New ChargeIndicator
            allowancchargeIndicatorObj.value = AllowanceCharge_ChargeIndicator
            allowanceCharge.ChargeIndicator.Add(allowancchargeIndicatorObj)

            allowanceCharge.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj As New AllowanceChargeReason
            allowanceChargeReasonObj.value = AllowanceCharge_AllowanceChargeReason_value
            allowanceCharge.AllowanceChargeReason.Add(allowanceChargeReasonObj)

            allowanceCharge.Amount = New List(Of Amount)
            Dim allowancamountObj As New Amount
            allowancamountObj.value = AllowanceCharge_Amount_value
            allowancamountObj.currencyID = AllowanceCharge_Amount_currencyID
            allowanceCharge.Amount.Add(allowancamountObj)

            ' Create the second AllowanceCharge object
            Dim allowanceCharge1 As New AllowanceCharge()

            allowanceCharge1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj1 As New ChargeIndicator
            allowancchargeIndicatorObj1.value = AllowanceCharge_ChargeIndicator_1
            allowanceCharge1.ChargeIndicator.Add(allowancchargeIndicatorObj1)

            allowanceCharge1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj1 As New AllowanceChargeReason
            allowanceChargeReasonObj1.value = AllowanceCharge_AllowanceChargeReason_value_1
            allowanceCharge1.AllowanceChargeReason.Add(allowanceChargeReasonObj1)

            allowanceCharge1.Amount = New List(Of Amount)
            Dim allowancamountObj1 As New Amount
            allowancamountObj1.value = AllowanceCharge_Amount_value_1
            allowancamountObj1.currencyID = AllowanceCharge_Amount_currencyID_1
            allowanceCharge1.Amount.Add(allowancamountObj1)

            invoice.AllowanceCharge.Add(allowanceCharge)
            invoice.AllowanceCharge.Add(allowanceCharge1)
            'allowanceCharge end

            InsertIntoTblWebEventLog("JsonValue20", CNNumber, "", Session("UserID").ToString)

            'TaxTotal start
            invoice.TaxTotal = New List(Of TaxTotal)

            ' Create the TaxTotal object
            Dim taxTotal As New TaxTotal()

            ' Set TaxAmount
            taxTotal.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj As New TaxAmount
            taxAmountObj.value = TaxTotal_TaxAmount_value
            taxAmountObj.currencyID = TaxTotal_TaxAmount_currencyID
            taxTotal.TaxAmount.Add(taxAmountObj)

            ' Set TaxSubtotal
            taxTotal.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim taxSubtotalObj1 As New TaxSubtotal

            ' TaxableAmount for first TaxSubtotal
            taxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj1 As New TaxableAmount
            taxableAmountObj1.value = TaxTotal_TaxSubtotal_TaxableAmount_value
            taxableAmountObj1.currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            taxSubtotalObj1.TaxableAmount.Add(taxableAmountObj1)

            ' TaxAmount for first TaxSubtotal
            taxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj1_1 As New TaxAmount
            taxAmountObj1_1.value = TaxTotal_TaxSubtotal_TaxAmount_value
            taxAmountObj1_1.currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID
            taxSubtotalObj1.TaxAmount.Add(taxAmountObj1_1)

            ' TaxCategory for first TaxSubtotal
            taxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj1 As New TaxCategory

            taxCategoryObj1.ID = New List(Of ID)
            Dim taxCategoryIDObj1 As New ID
            taxCategoryIDObj1.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value
            taxCategoryObj1.ID.Add(taxCategoryIDObj1)

            taxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj1 As New TaxScheme
            taxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj1 As New TaxSchemeID
            taxSchemeIDObj1.ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj1.schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj1.schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj1.ID.Add(taxSchemeIDObj1)

            taxCategoryObj1.TaxScheme.Add(taxSchemeObj1)

            taxCategoryObj1.Percent = Nothing
            taxCategoryObj1.TaxExemptionReason = Nothing

            taxSubtotalObj1.TaxCategory.Add(taxCategoryObj1)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj1.BaseUnitMeasure = Nothing
            taxSubtotalObj1.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj1)

            ' Second TaxSubtotal
            Dim taxSubtotalObj2 As New TaxSubtotal

            ' TaxableAmount for second TaxSubtotal
            taxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj2 As New TaxableAmount
            taxableAmountObj2.value = TaxTotal_TaxSubtotal2_TaxableAmount_value
            taxableAmountObj2.currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
            taxSubtotalObj2.TaxableAmount.Add(taxableAmountObj2)

            ' TaxAmount for second TaxSubtotal
            taxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj2_1 As New TaxAmount
            taxAmountObj2_1.value = TaxTotal_TaxSubtotal2_TaxAmount_value
            taxAmountObj2_1.currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
            taxSubtotalObj2.TaxAmount.Add(taxAmountObj2_1)

            ' TaxCategory for second TaxSubtotal
            taxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj2 As New TaxCategory

            taxCategoryObj2.ID = New List(Of ID)
            Dim taxCategoryIDObj2 As New ID
            taxCategoryIDObj2.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value
            taxCategoryObj2.ID.Add(taxCategoryIDObj2)

            taxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj2 As New TaxScheme
            taxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj2 As New TaxSchemeID
            taxSchemeIDObj2.ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj2.schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj2.schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj2.ID.Add(taxSchemeIDObj2)

            taxCategoryObj2.TaxScheme.Add(taxSchemeObj2)

            taxCategoryObj2.Percent = Nothing
            taxCategoryObj2.TaxExemptionReason = Nothing

            taxSubtotalObj2.TaxCategory.Add(taxCategoryObj2)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj2.BaseUnitMeasure = Nothing
            taxSubtotalObj2.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj2)

            invoice.TaxTotal.Add(taxTotal)
            'TaxTotal end
            InsertIntoTblWebEventLog("JsonValue21", CNNumber, "", Session("UserID").ToString)


            'LegalMonetaryTotal start
            invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)

            ' Create the LegalMonetaryTotal object
            Dim legalMonetaryTotal As New LegalMonetaryTotal()

            ' Set LineExtensionAmount
            legalMonetaryTotal.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim lineExtensionAmountObj As New LineExtensionAmount
            lineExtensionAmountObj.value = LegalMonetaryTotal_LineExtensionAmount_value
            lineExtensionAmountObj.currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
            legalMonetaryTotal.LineExtensionAmount.Add(lineExtensionAmountObj)

            ' Set TaxExclusiveAmount
            legalMonetaryTotal.TaxExclusiveAmount = New List(Of TaxExclusiveAmount)
            Dim taxExclusiveAmountObj As New TaxExclusiveAmount
            taxExclusiveAmountObj.value = LegalMonetaryTotal_TaxExclusiveAmount_value
            taxExclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
            legalMonetaryTotal.TaxExclusiveAmount.Add(taxExclusiveAmountObj)

            ' Set TaxInclusiveAmount
            legalMonetaryTotal.TaxInclusiveAmount = New List(Of TaxInclusiveAmount)
            Dim taxInclusiveAmountObj As New TaxInclusiveAmount
            taxInclusiveAmountObj.value = LegalMonetaryTotal_TaxInclusiveAmount_value
            taxInclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
            legalMonetaryTotal.TaxInclusiveAmount.Add(taxInclusiveAmountObj)

            ' Set AllowanceTotalAmount
            legalMonetaryTotal.AllowanceTotalAmount = New List(Of AllowanceTotalAmount)
            Dim legalMonetaryallowanceTotalAmountObj As New AllowanceTotalAmount
            legalMonetaryallowanceTotalAmountObj.value = LegalMonetaryTotal_AllowanceTotalAmount_value
            legalMonetaryallowanceTotalAmountObj.currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
            legalMonetaryTotal.AllowanceTotalAmount.Add(legalMonetaryallowanceTotalAmountObj)

            ' Set ChargeTotalAmount
            legalMonetaryTotal.ChargeTotalAmount = New List(Of ChargeTotalAmount)
            Dim legalMonetarychargeTotalAmountObj As New ChargeTotalAmount
            legalMonetarychargeTotalAmountObj.value = LegalMonetaryTotal_ChargeTotalAmount_value
            legalMonetarychargeTotalAmountObj.currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
            legalMonetaryTotal.ChargeTotalAmount.Add(legalMonetarychargeTotalAmountObj)

            ' Set PayableAmount
            legalMonetaryTotal.PayableAmount = New List(Of PayableAmount)
            Dim legalMonetarypayableAmountObj As New PayableAmount
            legalMonetarypayableAmountObj.value = LegalMonetaryTotal_PayableAmount_value
            legalMonetarypayableAmountObj.currencyID = LegalMonetaryTotal_PayableAmount_currencyID
            legalMonetaryTotal.PayableAmount.Add(legalMonetarypayableAmountObj)

            ' Set PayableRoundingAmount
            legalMonetaryTotal.PayableRoundingAmount = New List(Of PayableRoundingAmount)
            Dim legalMonetarypayableRoundingAmountObj As New PayableRoundingAmount
            legalMonetarypayableRoundingAmountObj.value = LegalMonetaryTotal_PayableRoundingAmount_value
            legalMonetarypayableRoundingAmountObj.currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
            legalMonetaryTotal.PayableRoundingAmount.Add(legalMonetarypayableRoundingAmountObj)

            invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)
            'LegalMonetaryTotal end
            InsertIntoTblWebEventLog("JsonValue22", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)


            'InvoiceLine start
            invoice.InvoiceLine = New List(Of InvoiceLine)

            If dtSalesDetail.Rows.Count > 0 Then

                For a = 0 To dtSalesDetail.Rows.Count - 1

                    'for InvoiceLine 
                    Dim InvoiceLine_AllowanceCharge_Amount_value = 0
                    Dim InvoiceLine_AllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")
                    Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
                    Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
                    Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

                    Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
                    Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")
                    Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
                    Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
                    Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

                    InsertIntoTblWebEventLog("JsonValue22A", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)


                    Dim InvoiceLine_ID_value = a.ToString
                    'Dim InvoiceLine_ID_value = "1"
                    'Dim InvoiceLine_InvoicedQuantity_value = dtSalesDetail.Rows(a)("Quantity").ToString
                    'Dim InvoiceLine_InvoicedQuantity_unitCode = dtSalesDetail.Rows(a)("UnitMs").ToString
                    Dim InvoiceLine_InvoicedQuantity_value = 3
                    Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"


                    Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
                    Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"


                    '  Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = dtSalesDetail.Rows(a)("ItemClassificationCode").ToString
                    '  Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
                    '  Dim InvoiceLine_Item_Description_value = dtSalesDetail.Rows(a)("ItemClassificationDesc")
                    Dim InvoiceLine_Item_Description_value = "Pest control"
                    Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

                    Dim InvoiceLine_ItemPriceExtension_Amount_value = dtSalesDetail.Rows(a)("ValueBase")
                    Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_LineExtensionAmount_value = dtSalesDetail.Rows(a)("AppliedBase")
                    Dim InvoiceLine_LineExtensionAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_Price_PriceAmount_value = dtSalesDetail.Rows(a)("UnitBase")
                    Dim InvoiceLine_Price_PriceAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxAmount_value = dtSalesDetail.Rows(a)("GSTBase")
                    Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = dtSalesDetail.Rows(a)("UnitBase")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = dtSalesDetail.Rows(a)("GSTBase")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = dtSalesDetail.Rows(a)("UnitBase")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = dtSalesDetail.Rows(a)("Quantity")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = dtSalesDetail.Rows(a)("UnitMs")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02" ' dtSalesDetail.Rows(a)("TaxTypeCode")
                    ' Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = dtSalesDetail.Rows(a)("Gst")
                    '   Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = dtS
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing



                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = dtSalesDetail.Rows(a)("GSTBase")
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

                    InsertIntoTblWebEventLog("JsonValue22B", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ''for InvoiceLine 
                    'Dim InvoiceLine_AllowanceCharge_Amount_value = 0
                    'Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
                    'Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
                    'Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
                    'Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

                    'Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
                    'Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
                    'Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
                    'Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
                    'Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

                    'Dim InvoiceLine_ID_value = "1"
                    'Dim InvoiceLine_InvoicedQuantity_value = 3
                    'Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

                    'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
                    'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
                    ''description
                    'Dim InvoiceLine_Item_Description_value = "Pest control"

                    ''OriginCountry
                    'Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"


                    'Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
                    'Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

                    'Dim InvoiceLine_LineExtensionAmount_value = 3000
                    'Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

                    'Dim InvoiceLine_Price_PriceAmount_value = 1000
                    'Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"



                    ' Create the InvoiceLine object
                    Dim invoiceLine As New InvoiceLine()

                    ' AllowanceCharge
                    invoiceLine.AllowanceCharge = New List(Of InvoiceLineAllowanceCharge)

                    ' First InvoiceLineAllowanceCharge
                    Dim invoiceLineallowanceChargeObj1 As New InvoiceLineAllowanceCharge()

                    invoiceLineallowanceChargeObj1.Amount = New List(Of Amount)
                    Dim invoiceLineallowanceChargeAmountObj1 As New Amount
                    invoiceLineallowanceChargeAmountObj1.value = InvoiceLine_AllowanceCharge_Amount_value
                    invoiceLineallowanceChargeAmountObj1.currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
                    invoiceLineallowanceChargeObj1.Amount.Add(invoiceLineallowanceChargeAmountObj1)

                    invoiceLineallowanceChargeObj1.ChargeIndicator = New List(Of ChargeIndicator)
                    Dim invoiceLineallowanceChargeIndicatorObj1 As New ChargeIndicator
                    invoiceLineallowanceChargeIndicatorObj1.value = InvoiceLine_AllowanceCharge_ChargeIndicator
                    invoiceLineallowanceChargeObj1.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj1)

                    invoiceLineallowanceChargeObj1.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
                    Dim invoiceLinemultiplierFactorNumericObj1 As New MultiplierFactorNumeric
                    invoiceLinemultiplierFactorNumericObj1.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value
                    invoiceLineallowanceChargeObj1.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj1)

                    invoiceLineallowanceChargeObj1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
                    Dim invoiceLineallowanceChargeReasonObj1 As New AllowanceChargeReason
                    invoiceLineallowanceChargeReasonObj1.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value
                    invoiceLineallowanceChargeObj1.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj1)

                    invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj1)
                    InsertIntoTblWebEventLog("JsonValue22C", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Second InvoiceLineAllowanceCharge
                    Dim invoiceLineallowanceChargeObj2 As New InvoiceLineAllowanceCharge()

                    invoiceLineallowanceChargeObj2.Amount = New List(Of Amount)
                    Dim invoiceLineallowanceChargeAmountObj2 As New Amount
                    invoiceLineallowanceChargeAmountObj2.value = InvoiceLine_AllowanceCharge2_Amount_value
                    invoiceLineallowanceChargeAmountObj2.currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
                    invoiceLineallowanceChargeObj2.Amount.Add(invoiceLineallowanceChargeAmountObj2)

                    invoiceLineallowanceChargeObj2.ChargeIndicator = New List(Of ChargeIndicator)
                    Dim invoiceLineallowanceChargeIndicatorObj2 As New ChargeIndicator
                    invoiceLineallowanceChargeIndicatorObj2.value = InvoiceLine_AllowanceCharge2_ChargeIndicator
                    invoiceLineallowanceChargeObj2.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj2)

                    invoiceLineallowanceChargeObj2.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
                    Dim invoiceLinemultiplierFactorNumericObj2 As New MultiplierFactorNumeric
                    invoiceLinemultiplierFactorNumericObj2.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value
                    invoiceLineallowanceChargeObj2.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj2)

                    invoiceLineallowanceChargeObj2.AllowanceChargeReason = New List(Of AllowanceChargeReason)
                    Dim invoiceLineallowanceChargeReasonObj2 As New AllowanceChargeReason
                    invoiceLineallowanceChargeReasonObj2.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value
                    invoiceLineallowanceChargeObj2.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj2)

                    invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj2)
                    InsertIntoTblWebEventLog("JsonValue22D", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' ID
                    invoiceLine.ID = New List(Of ID)
                    Dim invoiceLineIDObj As New ID
                    invoiceLineIDObj.Value = InvoiceLine_ID_value
                    invoiceLine.ID.Add(invoiceLineIDObj)

                    ' InvoicedQuantity
                    invoiceLine.InvoicedQuantity = New List(Of InvoicedQuantity)
                    Dim invoicedQuantityObj As New InvoicedQuantity
                    invoicedQuantityObj.value = InvoiceLine_InvoicedQuantity_value
                    invoicedQuantityObj.unitCode = InvoiceLine_InvoicedQuantity_unitCode
                    invoiceLine.InvoicedQuantity.Add(invoicedQuantityObj)
                    InsertIntoTblWebEventLog("JsonValue22E", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Item
                    invoiceLine.Item = New List(Of Item)
                    Dim itemObj As New Item

                    ' CommodityClassification
                    itemObj.CommodityClassification = New List(Of CommodityClassification)
                    Dim invoiceLinecommodityClassificationObj As New CommodityClassification
                    invoiceLinecommodityClassificationObj.ItemClassificationCode = New List(Of ItemClassificationCode)
                    Dim invoiceLineitemClassificationCodeObj As New ItemClassificationCode
                    invoiceLineitemClassificationCodeObj.value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value
                    invoiceLineitemClassificationCodeObj.listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
                    invoiceLinecommodityClassificationObj.ItemClassificationCode.Add(invoiceLineitemClassificationCodeObj)
                    itemObj.CommodityClassification.Add(invoiceLinecommodityClassificationObj)
                    InsertIntoTblWebEventLog("JsonValue22E1", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Description
                    itemObj.Description = New List(Of Description)
                    Dim invoiceLinedescriptionObj As New Description
                    invoiceLinedescriptionObj.Value = InvoiceLine_Item_Description_value
                    itemObj.Description.Add(invoiceLinedescriptionObj)
                    InsertIntoTblWebEventLog("JsonValue22E2", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' OriginCountry
                    itemObj.OriginCountry = New List(Of OriginCountry)
                    Dim invoiceLineoriginCountryObj As New OriginCountry
                    invoiceLineoriginCountryObj.IdentificationCode = New List(Of IdentificationCodeID)
                    Dim identificationCodeIDObj As New IdentificationCodeID
                    identificationCodeIDObj.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value
                    invoiceLineoriginCountryObj.IdentificationCode.Add(identificationCodeIDObj)
                    itemObj.OriginCountry.Add(invoiceLineoriginCountryObj)

                    invoiceLine.Item.Add(itemObj)
                    InsertIntoTblWebEventLog("JsonValue22F", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' ItemPriceExtension
                    invoiceLine.ItemPriceExtension = New List(Of ItemPriceExtension)
                    Dim invoiceLineitemPriceExtensionObj As New ItemPriceExtension
                    invoiceLineitemPriceExtensionObj.Amount = New List(Of Amount)
                    Dim invoiceLineitemPriceExtensionAmountObj As New Amount
                    invoiceLineitemPriceExtensionAmountObj.value = InvoiceLine_ItemPriceExtension_Amount_value
                    invoiceLineitemPriceExtensionAmountObj.currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
                    invoiceLineitemPriceExtensionObj.Amount.Add(invoiceLineitemPriceExtensionAmountObj)
                    invoiceLine.ItemPriceExtension.Add(invoiceLineitemPriceExtensionObj)

                    ' LineExtensionAmount
                    invoiceLine.LineExtensionAmount = New List(Of LineExtensionAmount)
                    Dim invoiceLine_lineExtensionAmountObj As New LineExtensionAmount
                    invoiceLine_lineExtensionAmountObj.value = InvoiceLine_LineExtensionAmount_value
                    invoiceLine_lineExtensionAmountObj.currencyID = InvoiceLine_LineExtensionAmount_currencyID
                    invoiceLine.LineExtensionAmount.Add(invoiceLine_lineExtensionAmountObj)

                    ' Price
                    invoiceLine.Price = New List(Of Price)
                    Dim invoiceLinepriceObj As New Price
                    invoiceLinepriceObj.PriceAmount = New List(Of PriceAmount)
                    Dim invoiceLinepriceAmountObj As New PriceAmount
                    invoiceLinepriceAmountObj.value = InvoiceLine_Price_PriceAmount_value
                    invoiceLinepriceAmountObj.currencyID = InvoiceLine_Price_PriceAmount_currencyID
                    invoiceLinepriceObj.PriceAmount.Add(invoiceLinepriceAmountObj)
                    invoiceLine.Price.Add(invoiceLinepriceObj)
                    InsertIntoTblWebEventLog("JsonValue22G", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' TaxTotal
                    invoiceLine.TaxTotal = New List(Of TaxTotal)
                    Dim invoiceLinetaxTotalObj As New TaxTotal
                    InsertIntoTblWebEventLog("JsonValue22G1", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxTotalObj.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxTotalAmountObj As New TaxAmount
                    invoiceLinetaxTotalAmountObj.value = InvoiceLine_TaxTotal_TaxAmount_value
                    invoiceLinetaxTotalAmountObj.currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
                    invoiceLinetaxTotalObj.TaxAmount.Add(invoiceLinetaxTotalAmountObj)
                    InsertIntoTblWebEventLog("JsonValue22G2", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxTotalObj.TaxSubtotal = New List(Of TaxSubtotal)

                    ' First TaxSubtotal
                    Dim invoiceLinetaxSubtotalObj1 As New TaxSubtotal
                    invoiceLinetaxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
                    Dim invoiceLinetaxSubtotalTaxableAmountObj1 As New TaxableAmount
                    invoiceLinetaxSubtotalTaxableAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value
                    invoiceLinetaxSubtotalTaxableAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
                    invoiceLinetaxSubtotalObj1.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G3", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxSubtotalTaxAmountObj1 As New TaxAmount
                    invoiceLinetaxSubtotalTaxAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value
                    invoiceLinetaxSubtotalTaxAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
                    invoiceLinetaxSubtotalObj1.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G4", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.PerUnitAmount = New List(Of PerUnitAmount)
                    Dim invoiceLineperUnitAmountObj1 As New PerUnitAmount
                    invoiceLineperUnitAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value
                    invoiceLineperUnitAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
                    invoiceLinetaxSubtotalObj1.PerUnitAmount.Add(invoiceLineperUnitAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G5", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.BaseUnitMeasure = New List(Of BaseUnitMeasure)
                    Dim invoiceLinebaseUnitMeasureObj1 As New BaseUnitMeasure
                    invoiceLinebaseUnitMeasureObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value
                    invoiceLinebaseUnitMeasureObj1.unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
                    invoiceLinetaxSubtotalObj1.BaseUnitMeasure.Add(invoiceLinebaseUnitMeasureObj1)
                    InsertIntoTblWebEventLog("JsonValue22G6", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
                    Dim invoiceLinetaxCategoryObj1 As New TaxCategory
                    invoiceLinetaxCategoryObj1.ID = New List(Of ID)
                    Dim invoiceLinetaxCategoryIDObj1 As New ID
                    invoiceLinetaxCategoryIDObj1.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value
                    invoiceLinetaxCategoryObj1.ID.Add(invoiceLinetaxCategoryIDObj1)

                    InsertIntoTblWebEventLog("JsonValue22H", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxCategoryObj1.TaxScheme = New List(Of TaxScheme)
                    Dim invoiceLinetaxSchemeObj1 As New TaxScheme
                    invoiceLinetaxSchemeObj1.ID = New List(Of TaxSchemeID)
                    Dim invoiceLinetaxSchemeIDObj1 As New TaxSchemeID
                    invoiceLinetaxSchemeIDObj1.ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
                    invoiceLinetaxSchemeIDObj1.schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                    invoiceLinetaxSchemeIDObj1.schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                    invoiceLinetaxSchemeObj1.ID.Add(invoiceLinetaxSchemeIDObj1)
                    invoiceLinetaxCategoryObj1.TaxScheme.Add(invoiceLinetaxSchemeObj1)

                    invoiceLinetaxCategoryObj1.Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent
                    invoiceLinetaxCategoryObj1.TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason

                    invoiceLinetaxSubtotalObj1.TaxCategory.Add(invoiceLinetaxCategoryObj1)

                    invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj1)
                    InsertIntoTblWebEventLog("JsonValue22I", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Second TaxSubtotal
                    Dim invoiceLinetaxSubtotalObj2 As New TaxSubtotal
                    invoiceLinetaxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
                    Dim invoiceLinetaxSubtotalTaxableAmountObj2 As New TaxableAmount
                    invoiceLinetaxSubtotalTaxableAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value
                    invoiceLinetaxSubtotalTaxableAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
                    invoiceLinetaxSubtotalObj2.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj2)

                    invoiceLinetaxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxSubtotalTaxAmountObj2 As New TaxAmount
                    invoiceLinetaxSubtotalTaxAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value
                    invoiceLinetaxSubtotalTaxAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
                    invoiceLinetaxSubtotalObj2.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj2)

                    InsertIntoTblWebEventLog("JsonValue22J", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
                    Dim invoiceLinetaxCategoryObj2 As New TaxCategory
                    invoiceLinetaxCategoryObj2.ID = New List(Of ID)
                    Dim invoiceLinetaxCategoryIDObj2 As New ID
                    invoiceLinetaxCategoryIDObj2.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value
                    invoiceLinetaxCategoryObj2.ID.Add(invoiceLinetaxCategoryIDObj2)

                    invoiceLinetaxCategoryObj2.Percent = New List(Of Percent)
                    Dim invoiceLinepercentObj As New Percent
                    invoiceLinepercentObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent
                    invoiceLinetaxCategoryObj2.Percent.Add(invoiceLinepercentObj)

                    InsertIntoTblWebEventLog("JsonValue22K", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxCategoryObj2.TaxScheme = New List(Of TaxScheme)
                    Dim invoiceLinetaxSchemeObj2 As New TaxScheme
                    invoiceLinetaxSchemeObj2.ID = New List(Of TaxSchemeID)
                    Dim invoiceLinetaxSchemeIDObj2 As New TaxSchemeID
                    invoiceLinetaxSchemeIDObj2.ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value
                    invoiceLinetaxSchemeIDObj2.schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                    invoiceLinetaxSchemeIDObj2.schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                    invoiceLinetaxSchemeObj2.ID.Add(invoiceLinetaxSchemeIDObj2)

                    invoiceLinetaxCategoryObj2.TaxScheme.Add(invoiceLinetaxSchemeObj2)

                    invoiceLinetaxCategoryObj2.TaxExemptionReason = New List(Of TaxExemptionReason)
                    Dim invoiceLinetaxExemptionReasonObj As New TaxExemptionReason
                    invoiceLinetaxExemptionReasonObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
                    invoiceLinetaxCategoryObj2.TaxExemptionReason.Add(invoiceLinetaxExemptionReasonObj)

                    invoiceLinetaxSubtotalObj2.TaxCategory.Add(invoiceLinetaxCategoryObj2)

                    invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj2)

                    InsertIntoTblWebEventLog("JsonValue22L", CNNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLine.TaxTotal.Add(invoiceLinetaxTotalObj)

                    invoice.InvoiceLine.Add(invoiceLine)
                    'invoiceLine end
                    InsertIntoTblWebEventLog("JsonValue23", CNNumber, a.ToString, Session("UserID").ToString)

                Next
            End If



            InsertIntoTblWebEventLog("JsonValue24", CNNumber, "", Session("UserID").ToString)

            'TaxExchangeRate start
            invoice.TaxExchangeRate = New List(Of TaxExchangeRate)

            ' Create a new TaxExchangeRate object
            Dim taxExchangeRateObj As New TaxExchangeRate()

            ' Set SourceCurrencyCode
            taxExchangeRateObj.SourceCurrencyCode = New List(Of SourceCurrencyCode)
            Dim sourceCurrencyCodeObj As New SourceCurrencyCode
            sourceCurrencyCodeObj.value = TaxExchangeRate_SourceCurrencyCode_value
            taxExchangeRateObj.SourceCurrencyCode.Add(sourceCurrencyCodeObj)

            ' Set TargetCurrencyCode
            taxExchangeRateObj.TargetCurrencyCode = New List(Of TargetCurrencyCode)
            Dim targetCurrencyCodeObj As New TargetCurrencyCode
            targetCurrencyCodeObj.value = TaxExchangeRate_TargetCurrencyCode_value
            taxExchangeRateObj.TargetCurrencyCode.Add(targetCurrencyCodeObj)

            ' Set CalculationRate
            taxExchangeRateObj.CalculationRate = New List(Of CalculationRate)
            Dim calculationRateObj As New CalculationRate
            calculationRateObj.value = TaxExchangeRate_CalculationRate_value
            taxExchangeRateObj.CalculationRate.Add(calculationRateObj)

            ' Add the configured TaxExchangeRate object to invoice.TaxExchangeRate
            invoice.TaxExchangeRate.Add(taxExchangeRateObj)

            'TaxExchangeRate end

            invoiceWrapper.Invoice.Add(invoice)
            InsertIntoTblWebEventLog("JsonValue24", CNNumber, "", Session("UserID").ToString)


            '  Dim settings As New JsonSerializerSettings With {
            '    .NullValueHandling = NullValueHandling.Ignore
            '}

            InsertIntoTblWebEventLog("JsonValue25", CNNumber, JsonConvert.SerializeObject(invoiceWrapper).ToString, Session("UserID").ToString)

            Dim settings As New JsonSerializerSettings With {
                .NullValueHandling = NullValueHandling.Ignore,
                .ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            }

            Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)
            InsertIntoTblWebEventLog("JsonValue26", CNNumber, json, Session("UserID").ToString)


            Return json

        Catch ex As Exception
            InsertIntoTblWebEventLog("JsonError2", ex.Message.ToString, invoiceID, Session("UserID"))
            lblMessage.Text = ex.Message.ToString

        End Try
    End Function

    Protected Function GetSubmission() As String

        Dim tokenno As String = ""
        tokenno = AccessToken

        Dim submissionUid As String = txtSubmissionID.Text
        InsertIntoTblWebEventLog("GetSubmission", txtSubmissionID.Text, submissionUid, Session("UserID"))
        ' = "2HNM2FC7PSBH8ZDE8C9RA8EJ10"
        '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documentsubmissions/"
        Dim apiGetdocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + submissionUid
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("GetSubmission1", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetSubmissionDocument = JsonConvert.DeserializeObject(Of GetSubmissionDocument)(responseString)
                    txtSubmissionDate.Text = apiResponse.dateTimeReceived.ToString

                    If apiResponse.documentSummary.Count() > 0 Then
                        For Each Item In apiResponse.documentSummary
                            ' txtUUID.Text = Item.uuid
                            txtLongID.Text = Item.longid
                            Exit For
                        Next
                    End If

                    Return apiResponse.submissionUid
                Else
                    Return "ERROR"
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Function

    '  Protected Function DocumentCancellation() As String

    'Dim tokenno As String = ""
    'tokenno = AccessToken

    'Dim documentUUID As String = txtUUID.Text + "/state"
    'Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/state/"

    'Using client = New HttpClient()

    '    If Not String.IsNullOrWhiteSpace(tokenno) Then
    '        client.DefaultRequestHeaders.Clear()
    '        client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
    '        client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
    '    End If

    '    Try
    '        Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
    '        InsertIntoTblWebEventLog("DocumentCancellation", apiGetdocument, txtUUID.Text, Session("UserID"))

    '        System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '        Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
    '        Dim responseString = response.Content.ReadAsStringAsync().Result

    '        If response.IsSuccessStatusCode Then
    '            Dim apiResponse As CancelDocument = JsonConvert.DeserializeObject(Of CancelDocument)(responseString)
    '            Return apiResponse.Status
    '        End If

    '    Catch ex As Exception
    '        Dim result = "error Message -" + ex.Message
    '        Dim result1 = ""
    '    End Try
    'End Using

    Private Sub UpdateEInvoiceUOMCode(InvoiceNumber As String)
        ' Try
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()


        '''''''''''''''


    End Sub



    Private Sub UpdateEInvoiceSubmission(InvoiceNumber As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set EI='Y',EInvoiceStatus=@EInvoiceStatus,UUID=@UUID,SubmissionDate=@SubmissionDate,SubmissionBy=@SubmissionBy,LongID=@LongID where InvoiceNumber=@invoicenumber"
            InsertIntoTblWebEventLog("CN", "UPDATECNSUBMISSION1", sqlUpdateInvoice, txtCreatedBy.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddwithValue("@EInvoiceStatus", txtECNStatus.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@UUID", txtUUID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@LongID", txtLongID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            commandUpdateInvoice.Parameters.AddwithValue("@SubmissionDate", Convert.ToDateTime(txtSubmissionDate.Text))
            commandUpdateInvoice.Parameters.AddwithValue("@SubmissionBy", txtCreatedBy.Text)
            InsertIntoTblWebEventLog("CN", "UPDATECNSUBMISSION2", InvoiceNumber, txtCreatedBy.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CN", "UPDATECNSUBMISSION", ex.Message.ToString, txtCreatedBy.Text)

        End Try
    End Sub

    Protected Function DocumentCancellation() As String

        Dim tokenno As String = ""
        tokenno = AccessToken

        ' Dim documentUUID As String = "YSRXY4XAY7JZ022KR4CBH1JJ10" + "/state"
        Dim documentUUID As String = txtUUID.Text + "/state"
        '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/state/"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentcancellation")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim requestBody As New CancelDocument With {
                .uuid = txtUUID.Text,
                .status = "cancelled",
                .Reason = txtReasonCancelEInvoice.Text
                }
                Dim jsonPayload As String = JsonConvert.SerializeObject(requestBody)
                Dim content As New StringContent(jsonPayload, Encoding.UTF8, "application/json")
                Dim response As HttpResponseMessage = client.PutAsync(apiGetdocument, content).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("DocumentCancellation1", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As CancelDocument = JsonConvert.DeserializeObject(Of CancelDocument)(responseString)

                    txtECNStatus.Text = "CANCELLED"
                    txtCancellationDate.Text = DateTime.Now.ToString
                    InsertIntoTblWebEventLog("DocumentCancellation21", "", txtCNNo.Text, Session("UserID").ToString)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "ECN", txtCNNo.Text, "CANCELLATION", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtRcno.Text)
                    InsertIntoTblEInvoiceEventLog("CANCELLATION", txtCancellationReason.Text)

                    '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "CN", txtCNNo.Text, "EINVOICECANCELLATION", DateTime.Now.ToString, 0, 0, 0, txtUUID.Text, "", txtRcno.Text)

                    InsertIntoTblWebEventLog("DocumentCancellation21", "", txtCNNo.Text, Session("UserID").ToString)

                    Return "SUCCESS"
                    ' Return apiResponse.status
                Else
                    Return "FAILURE"
                End If


                InsertIntoTblWebEventLog("DocumentCancellation2", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
                Return "FAILURE"
            End Try
        End Using

    End Function

    Protected Function GetDocument(UUID As String) As String

        Dim token = GetToken()
        Dim tokenno As String = AccessToken

        Dim documentUUID As String = UUID + "/raw"
        '  Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        ' WriteToFile(documentUUID)

        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                '    WriteToFile(apiGetdocument)
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result


                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetDocumentByID = JsonConvert.DeserializeObject(Of GetDocumentByID)(responseString)

                    Return apiResponse.status.ToUpper

                Else
                    Return "FAILURE"
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
                Return "FAILURE"
            End Try
        End Using

    End Function


    'Get document By ID
    Protected Sub GetDocument()

        Dim tokenno As String = ""
        tokenno = AccessToken

        Dim documentUUID As String = "FMA9ZNWHMY3ZPSJS8C9RA8EJ10" + "/raw"
        '  Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetDocumentByID = JsonConvert.DeserializeObject(Of GetDocumentByID)(responseString)
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Sub

    'Get document Details
    Protected Sub GetDocumentDetails()

        Dim tokenno As String = ""
        tokenno = AccessToken

        Dim documentUUID As String = "FMA9ZNWHMY3ZPSJS8C9RA8EJ10" + "/details"
        '    Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetSubmissionDocument = JsonConvert.DeserializeObject(Of GetSubmissionDocument)(responseString)
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Sub


    Public Shared Function GetSHA256Hash(input As String) As String
        Dim bytes As Byte() = Encoding.UTF8.GetBytes(input)

        Using sha256 As SHA256 = sha256.Create()
            Dim hashBytes As Byte() = sha256.ComputeHash(bytes)

            Dim sb As New StringBuilder()
            For Each b As Byte In hashBytes
                sb.Append(b.ToString("x2")) ' Format as hexadecimal
            Next

            Return sb.ToString()
        End Using
    End Function

    Protected Sub ddlReasonforCancellation_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlReasonforCancellation.SelectedIndexChanged
        If ddlReasonforCancellation.Text = "Other" Then
            ' txtReasonCancelEInvoice.Visible = True
            reasonother.Visible = True
            mdlConfirmCancelEInvoice.Show()
        ElseIf ddlReasonforCancellation.Text = "--SELECT--" Then
            reasonother.Visible = False
            txtReasonCancelEInvoice.Text = ""
        Else
            reasonother.Visible = False
            ' txtReasonCancelEInvoice.Visible = False
            txtReasonCancelEInvoice.Text = ddlReasonforCancellation.Text
            mdlConfirmCancelEInvoice.Show()
        End If

    End Sub

End Class



Public Class GetDocumentByID
    Public Property submissionUid As String
    Public Property longID As String
    Public Property internalId As String
    Public Property typeName As String
    Public Property typeVersionName As String
    Public Property issuerTin As String
    Public Property issuerName As String
    Public Property receiverId As String
    Public Property receiverName As String
    Public Property dateTimeReceived As String
    Public Property dateTimeValidated As String
    Public Property status As String
    Public Property documentStatusReason As String
    Public Property cancelDateTime As String
    Public Property rejectRequestDateTime As String
    Public Property document As String
    Public Property createdByUserId As String
    Public Property dateTimeIssued As String
    Public Property totalExcludingTax As String
    Public Property totalDiscount As String
    Public Property totalNetAmount As String
    Public Property totalPayableAmount As String

End Class

Public Class GetSubmissionDocument
    Public Property submissionUid As String
    Public Property documentCount As String
    Public Property dateTimeReceived As String
    Public Property overallStatus As String
    Public Property documentSummary As List(Of DocumentSummary)

End Class

Public Class DocumentSummary
    Public Property uuid As String
    Public Property submissionUid As String
    Public Property longId As String
    Public Property internalId As String
    Public Property typeName As String
    Public Property typeVersionName As String
    Public Property issuerTin As String
    Public Property issuerName As String
    Public Property receiverId As String
    Public Property receiverName As String
    Public Property dateTimeIssued As String
    Public Property dateTimeReceived As String
    Public Property dateTimeValidated As String
    Public Property totalPayableAmount As String
    Public Property totalExcludingTax As String
    Public Property totalDiscount As String
    Public Property totalNetAmount As String
    Public Property status As String
    Public Property cancelDateTime As String
    Public Property rejectRequestDateTime As String
    Public Property documentStatusReason As String
    Public Property createdByUserId As String
End Class

Public Class InvoiceWrapper

    <JsonProperty("_D")>
    Public Property _D As String

    <JsonProperty("_A")>
    Public Property _A As String

    <JsonProperty("_B")>
    Public Property _B As String

    <JsonProperty("Invoice")>
    Public Property Invoice As List(Of Invoice)

    <JsonProperty("LastActivityDate")>
    Public Property _LastActDate As DateTime

End Class

Public Class InvoiceWrapper_Without_certificate

    <JsonProperty("_D")>
    Public Property _D As String

    <JsonProperty("_A")>
    Public Property _A As String

    <JsonProperty("_B")>
    Public Property _B As String

    <JsonProperty("Invoice")>
    Public Property Invoice As List(Of Invoice_without_Certificate)

End Class

Public Class Invoice_without_Certificate
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("IssueDate")>
    Public Property IssueDate As List(Of IssueDate)

    <JsonProperty("IssueTime")>
    Public Property IssueTime As List(Of IssueTime)

    <JsonProperty("InvoiceTypeCode")>
    Public Property InvoiceTypeCode As List(Of InvoiceTypeCode)

    <JsonProperty("DocumentCurrencyCode")>
    Public Property DocumentCurrencyCode As List(Of DocumentCurrencyCode)

    <JsonProperty("InvoicePeriod")>
    Public Property InvoicePeriod As List(Of InvoicePeriod)

    <JsonProperty("BillingReference")>
    Public Property BillingReference As List(Of BillingReference)

    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)

    <JsonProperty("AccountingSupplierParty")>
    Public Property AccountingSupplierParty As List(Of AccountingSupplierParty)

    <JsonProperty("AccountingCustomerParty")>
    Public Property AccountingCustomerParty As List(Of AccountingCustomerParty)

    <JsonProperty("Delivery")>
    Public Property Delivery As List(Of Delivery)

    <JsonProperty("PaymentMeans")>
    Public Property PaymentMeans As List(Of PaymentMeans)

    <JsonProperty("PaymentTerms")>
    Public Property PaymentTerms As List(Of PaymentTerms)

    <JsonProperty("PrepaidPayment")>
    Public Property PrepaidPayment As List(Of PrepaidPayment)

    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of AllowanceCharge)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)

    <JsonProperty("LegalMonetaryTotal")>
    Public Property LegalMonetaryTotal As List(Of LegalMonetaryTotal)

    <JsonProperty("InvoiceLine")>
    Public Property InvoiceLine As List(Of InvoiceLine)

    <JsonProperty("TaxExchangeRate")>
    Public Property TaxExchangeRate As List(Of TaxExchangeRate)

End Class

Public Class Invoice
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("IssueDate")>
    Public Property IssueDate As List(Of IssueDate)

    <JsonProperty("IssueTime")>
    Public Property IssueTime As List(Of IssueTime)

    <JsonProperty("InvoiceTypeCode")>
    Public Property InvoiceTypeCode As List(Of InvoiceTypeCode)

    <JsonProperty("DocumentCurrencyCode")>
    Public Property DocumentCurrencyCode As List(Of DocumentCurrencyCode)

    <JsonProperty("InvoicePeriod")>
    Public Property InvoicePeriod As List(Of InvoicePeriod)

    <JsonProperty("BillingReference")>
    Public Property BillingReference As List(Of BillingReference)

    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)

    <JsonProperty("AccountingSupplierParty")>
    Public Property AccountingSupplierParty As List(Of AccountingSupplierParty)

    <JsonProperty("AccountingCustomerParty")>
    Public Property AccountingCustomerParty As List(Of AccountingCustomerParty)

    <JsonProperty("Delivery")>
    Public Property Delivery As List(Of Delivery)

    <JsonProperty("PaymentMeans")>
    Public Property PaymentMeans As List(Of PaymentMeans)

    <JsonProperty("PaymentTerms")>
    Public Property PaymentTerms As List(Of PaymentTerms)

    <JsonProperty("PrepaidPayment")>
    Public Property PrepaidPayment As List(Of PrepaidPayment)

    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of AllowanceCharge)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)

    <JsonProperty("LegalMonetaryTotal")>
    Public Property LegalMonetaryTotal As List(Of LegalMonetaryTotal)

    <JsonProperty("InvoiceLine")>
    Public Property InvoiceLine As List(Of InvoiceLine)

    <JsonProperty("TaxExchangeRate")>
    Public Property TaxExchangeRate As List(Of TaxExchangeRate)

    <JsonProperty("UBLExtensions")>
    Public Property UBLExtensions As List(Of UBLExtensions)
    <JsonProperty("Signature")>
    Public Property Signature As List(Of Signature)

End Class
Public Class ID
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class IssueDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class IssueTime
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class InvoiceTypeCode
    <JsonProperty("_")>
    Public Property Value As String

    <JsonProperty("listVersionID")>
    Public Property ListVersionID As String
End Class

Public Class DocumentCurrencyCode
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class InvoicePeriod
    <JsonProperty("StartDate")>
    Public Property StartDate As List(Of StartDate)

    <JsonProperty("EndDate")>
    Public Property EndDate As List(Of EndDate)

    <JsonProperty("Description")>
    Public Property Description As List(Of Description)
End Class

' Classes for InvoicePeriod sub-properties

Public Class StartDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class EndDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class Description
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class BillingReference
    <JsonProperty("InvoiceDocumentReference")>
    Public Property InvoiceDocumentReference As List(Of InvoiceDocumentReference)

    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)
End Class

Public Class InvoiceDocumentReference
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("UUID")>
    Public Property UUID As List(Of UUID)
End Class

Public Class UUID
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class AdditionalDocumentReference
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)
End Class

Public Class AccountingSupplierParty
    <JsonProperty("AdditionalAccountID")>
    Public Property AdditionalAccountID As List(Of AdditionalAccountID)

    <JsonProperty("Party")>
    Public Property Party As List(Of Party)
End Class

Public Class AdditionalAccountID
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("schemeAgencyName")>
    Public Property schemeAgencyName As String
End Class

Public Class Party
    <JsonProperty("IndustryClassificationCode")>
    Public Property IndustryClassificationCode As List(Of IndustryClassificationCode)

    <JsonProperty("PartyIdentification")>
    Public Property PartyIdentification As List(Of PartyIdentification)

    <JsonProperty("PostalAddress")>
    Public Property PostalAddress As List(Of PostalAddress)

    <JsonProperty("PartyLegalEntity")>
    Public Property PartyLegalEntity As List(Of PartyLegalEntity)

    <JsonProperty("Contact")>
    Public Property Contact As List(Of Contact)

End Class

Public Class IndustryClassificationCode
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("name")>
    Public Property name As String
End Class
Public Class PartyIdentification
    <JsonProperty("ID")>
    Public Property ID As List(Of PartyIdentificationID)

End Class

Public Class PartyIdentificationID
    <JsonProperty("_")>
    Public Property ID As String

    <JsonProperty("schemeID")>
    Public Property schemeID As String


End Class

' PostalAddress Class
Public Class PostalAddress
    <JsonProperty("CityName")>
    Public Property CityName As List(Of CityName)

    <JsonProperty("PostalZone")>
    Public Property PostalZone As List(Of PostalZone)

    <JsonProperty("CountrySubentityCode")>
    Public Property CountrySubentityCode As List(Of CountrySubentityCode)

    <JsonProperty("AddressLine")>
    Public Property AddressLine As List(Of AddressLine)

    <JsonProperty("Country")>
    Public Property Country As List(Of Country)
End Class

' CityName Class
Public Class CityName
    <JsonProperty("_")>
    Public Property value As String
End Class

' PostalZone Class
Public Class PostalZone
    <JsonProperty("_")>
    Public Property value As String
End Class

' CountrySubentityCode Class
Public Class CountrySubentityCode
    <JsonProperty("_")>
    Public Property value As String
End Class

' AddressLine Class
Public Class AddressLine
    <JsonProperty("Line")>
    Public Property Line As List(Of Line)
End Class

' Line Class
Public Class Line
    <JsonProperty("_")>
    Public Property value As String
End Class

' Country Class
Public Class Country
    <JsonProperty("IdentificationCode")>
    Public Property IdentificationCode As List(Of IdentificationCode)
End Class

' IdentificationCode Class
Public Class IdentificationCode
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("listID")>
    Public Property listID As String

    <JsonProperty("listAgencyID")>
    Public Property listAgencyID As String
End Class

' PartyLegalEntity Class
Public Class PartyLegalEntity
    <JsonProperty("RegistrationName")>
    Public Property RegistrationName As List(Of RegistrationName)
End Class

' RegistrationName Class
Public Class RegistrationName
    <JsonProperty("_")>
    Public Property value As String
End Class

' Contact Class
Public Class Contact
    <JsonProperty("Telephone")>
    Public Property Telephone As List(Of Telephone)

    <JsonProperty("ElectronicMail")>
    Public Property ElectronicMail As List(Of ElectronicMail)
End Class

' Telephone Class
Public Class Telephone
    <JsonProperty("_")>
    Public Property value As String
End Class

' ElectronicMail Class
Public Class ElectronicMail
    <JsonProperty("_")>
    Public Property value As String
End Class

' AccountingCustomerParty Class (new class for customer data)
Public Class AccountingCustomerParty
    <JsonProperty("Party")>
    Public Property Party As List(Of Party)
End Class

' Delivery Class (new class for delivery data)
Public Class Delivery
    <JsonProperty("DeliveryParty")>
    Public Property DeliveryParty As List(Of DeliveryParty)

    <JsonProperty("Shipment")>
    Public Property Shipment As List(Of Shipment)

End Class

' DeliveryParty Class
Public Class DeliveryParty
    <JsonProperty("PartyLegalEntity")>
    Public Property PartyLegalEntity As List(Of PartyLegalEntity)

    <JsonProperty("PostalAddress")>
    Public Property PostalAddress As List(Of PostalAddress)

    <JsonProperty("PartyIdentification")>
    Public Property PartyIdentification As List(Of PartyIdentification)

End Class

Public Class Shipment
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("FreightAllowanceCharge")>
    Public Property FreightAllowanceCharge As List(Of FreightAllowanceCharge)
End Class

' FreightAllowanceCharge Class
Public Class FreightAllowanceCharge
    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)
End Class

' ChargeIndicator Class
Public Class ChargeIndicator
    <JsonProperty("_")>
    Public Property value As Boolean
End Class

' AllowanceChargeReason Class
Public Class AllowanceChargeReason
    <JsonProperty("_")>
    Public Property value As String
End Class

' Amount Class
Public Class Amount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PaymentMeans Class
Public Class PaymentMeans
    <JsonProperty("PaymentMeansCode")>
    Public Property PaymentMeansCode As List(Of PaymentMeansCode)

    <JsonProperty("PayeeFinancialAccount")>
    Public Property PayeeFinancialAccount As List(Of PayeeFinancialAccount)
End Class

' PaymentMeansCode Class
Public Class PaymentMeansCode
    <JsonProperty("_")>
    Public Property value As String
End Class

' PayeeFinancialAccount Class
Public Class PayeeFinancialAccount
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)
End Class

' PaymentTerms Class
Public Class PaymentTerms
    <JsonProperty("Note")>
    Public Property Note As List(Of Note)
End Class

' Note Class
Public Class Note
    <JsonProperty("_")>
    Public Property value As String
End Class

' PrepaidPayment Class
Public Class PrepaidPayment
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("PaidAmount")>
    Public Property PaidAmount As List(Of PaidAmount)

    <JsonProperty("PaidDate")>
    Public Property PaidDate As List(Of PaidDate)

    <JsonProperty("PaidTime")>
    Public Property PaidTime As List(Of PaidTime)
End Class

' PaidAmount Class
Public Class PaidAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PaidDate Class
Public Class PaidDate
    <JsonProperty("_")>
    Public Property value As String
End Class

' PaidTime Class
Public Class PaidTime
    <JsonProperty("_")>
    Public Property value As String
End Class


' AllowanceCharge Class
Public Class AllowanceCharge

    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)

End Class

Public Class InvoiceLineAllowanceCharge

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)

    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("MultiplierFactorNumeric")>
    Public Property MultiplierFactorNumeric As List(Of MultiplierFactorNumeric)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

End Class

' TaxTotal Class
Public Class TaxTotal
    <JsonProperty("TaxAmount")>
    Public Property TaxAmount As List(Of TaxAmount)

    <JsonProperty("TaxSubtotal")>
    Public Property TaxSubtotal As List(Of TaxSubtotal)

End Class

' TaxAmount Class
Public Class TaxAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxSubtotal Class
Public Class TaxSubtotal
    <JsonProperty("TaxableAmount")>
    Public Property TaxableAmount As List(Of TaxableAmount)

    <JsonProperty("TaxAmount")>
    Public Property TaxAmount As List(Of TaxAmount)

    <JsonProperty("PerUnitAmount")>
    Public Property PerUnitAmount As List(Of PerUnitAmount)

    <JsonProperty("BaseUnitMeasure")>
    Public Property BaseUnitMeasure As List(Of BaseUnitMeasure)
    <JsonProperty("TaxCategory")>
    Public Property TaxCategory As List(Of TaxCategory)

End Class

' TaxableAmount Class
Public Class TaxableAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxCategory Class
Public Class TaxCategory
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("Percent")>
    Public Property Percent As List(Of Percent)

    <JsonProperty("TaxScheme")>
    Public Property TaxScheme As List(Of TaxScheme)

    <JsonProperty("TaxExemptionReason")>
    Public Property TaxExemptionReason As List(Of TaxExemptionReason)

End Class

' TaxScheme Class
Public Class TaxScheme
    <JsonProperty("ID")>
    Public Property ID As List(Of TaxSchemeID)
End Class

Public Class TaxSchemeID
    <JsonProperty("_")>
    Public Property ID As String

    <JsonProperty("schemeAgencyID")>
    Public Property schemeAgencyID As String

    <JsonProperty("schemeID")>
    Public Property schemeID As String
End Class

' LegalMonetaryTotal Class
Public Class LegalMonetaryTotal
    <JsonProperty("LineExtensionAmount")>
    Public Property LineExtensionAmount As List(Of LineExtensionAmount)

    <JsonProperty("TaxExclusiveAmount")>
    Public Property TaxExclusiveAmount As List(Of TaxExclusiveAmount)

    <JsonProperty("TaxInclusiveAmount")>
    Public Property TaxInclusiveAmount As List(Of TaxInclusiveAmount)

    <JsonProperty("AllowanceTotalAmount")>
    Public Property AllowanceTotalAmount As List(Of AllowanceTotalAmount)

    <JsonProperty("ChargeTotalAmount")>
    Public Property ChargeTotalAmount As List(Of ChargeTotalAmount)

    <JsonProperty("PayableAmount")>
    Public Property PayableAmount As List(Of PayableAmount)

    <JsonProperty("PayableRoundingAmount")>
    Public Property PayableRoundingAmount As List(Of PayableRoundingAmount)
End Class

' LineExtensionAmount Class
Public Class LineExtensionAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxExclusiveAmount Class
Public Class TaxExclusiveAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxInclusiveAmount Class
Public Class TaxInclusiveAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' AllowanceTotalAmount Class
Public Class AllowanceTotalAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' ChargeTotalAmount Class
Public Class ChargeTotalAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PayableAmount Class
Public Class PayableAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PayableRoundingAmount Class
Public Class PayableRoundingAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' InvoiceLine Class
Public Class InvoiceLine
    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of InvoiceLineAllowanceCharge)

    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("InvoicedQuantity")>
    Public Property InvoicedQuantity As List(Of InvoicedQuantity)

    <JsonProperty("Item")>
    Public Property Item As List(Of Item)

    <JsonProperty("ItemPriceExtension")>
    Public Property ItemPriceExtension As List(Of ItemPriceExtension)

    <JsonProperty("LineExtensionAmount")>
    Public Property LineExtensionAmount As List(Of LineExtensionAmount)

    <JsonProperty("Price")>
    Public Property Price As List(Of Price)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)
End Class

' Item Class
Public Class Item
    <JsonProperty("CommodityClassification")>
    Public Property CommodityClassification As List(Of CommodityClassification)

    <JsonProperty("Description")>
    Public Property Description As List(Of Description)

    <JsonProperty("OriginCountry")>
    Public Property OriginCountry As List(Of OriginCountry)
End Class

' ItemPriceExtension Class
Public Class ItemPriceExtension
    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)
End Class

' Price Class
Public Class Price
    <JsonProperty("PriceAmount")>
    Public Property PriceAmount As List(Of PriceAmount)
End Class

' PriceAmount Class
Public Class PriceAmount

    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' CommodityClassification Class
Public Class CommodityClassification

    <JsonProperty("ItemClassificationCode")>
    Public Property ItemClassificationCode As List(Of ItemClassificationCode)
End Class

' ItemClassificationCode Class
Public Class ItemClassificationCode

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("listID")>
    Public Property listID As String
End Class

' OriginCountry Class
Public Class OriginCountry
    <JsonProperty("IdentificationCode")>
    Public Property IdentificationCode As List(Of IdentificationCodeID)
End Class

' IdentificationCode Class
Public Class IdentificationCodeID
    <JsonProperty("_")>
    Public Property Value As String
End Class

' InvoicedQuantity Class
Public Class InvoicedQuantity

    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("unitCode")>
    Public Property unitCode As String
End Class

' MultiplierFactorNumeric Class
Public Class MultiplierFactorNumeric
    <JsonProperty("_")>
    Public Property value As Decimal
End Class

' PerUnitAmount Class
Public Class PerUnitAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' BaseUnitMeasure Class
Public Class BaseUnitMeasure
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("unitCode")>
    Public Property unitCode As String
End Class

Public Class Percent
    <JsonProperty("_")>
    Public Property value As Decimal

End Class

Public Class TaxExemptionReason
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class TaxExchangeRate
    <JsonProperty("SourceCurrencyCode")>
    Public Property SourceCurrencyCode As List(Of SourceCurrencyCode)

    <JsonProperty("TargetCurrencyCode")>
    Public Property TargetCurrencyCode As List(Of TargetCurrencyCode)

    <JsonProperty("CalculationRate")>
    Public Property CalculationRate As List(Of CalculationRate)

End Class

Public Class TargetCurrencyCode
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class CalculationRate
    <JsonProperty("_")>
    Public Property value As Decimal

End Class

Public Class SourceCurrencyCode
    <JsonProperty("_")>
    Public Property value As String

End Class


'Public Class UBLExtensions
'    <JsonProperty("UBLExtension")>
'    Public Property UBLExtension As List(Of UBLExtension)

'End Class
Public Class Signature
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("SignatureMethod")>
    Public Property SignatureMethod As List(Of SignatureMethod)

End Class

Public Class SignatureMethod

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class UBLExtensions
    <JsonProperty("UBLExtension")>
    Public Property UBLExtension As List(Of UBLExtension)

End Class
Public Class UBLExtension
    <JsonProperty("ExtensionURI")>
    Public Property ExtensionURI As List(Of ExtensionURI)

    <JsonProperty("ExtensionContent")>
    Public Property ExtensionContent As List(Of ExtensionContent)

End Class

Public Class ExtensionURI
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class ExtensionContent

    <JsonProperty("UBLDocumentSignatures")>
    Public Property UBLDocumentSignatures As List(Of UBLDocumentSignatures)

End Class
Public Class UBLDocumentSignatures

    <JsonProperty("SignatureInformation")>
    Public Property SignatureInformation As List(Of SignatureInformation)

End Class

Public Class SignatureInformation

    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("ReferencedSignatureID")>
    Public Property ReferencedSignatureID As List(Of ReferencedSignatureID)

    <JsonProperty("Signature")>
    Public Property SignatureInformation_Signature As List(Of SignatureInformation_Signature)

End Class
Public Class SignatureInformation_Signature

    <JsonProperty("Id")>
    Public Property ID As String

    <JsonProperty("Object")>
    Public Property SignatureObject As List(Of SignatureObject)

    <JsonProperty("KeyInfo")>
    Public Property KeyInfo As List(Of KeyInfo)

    <JsonProperty("SignatureValue")>
    Public Property SignatureValue As List(Of SignatureValue)
    <JsonProperty("SignedInfo")>
    Public Property SignedInfo As List(Of SignedInfo)


End Class
Public Class SignatureValue

    <JsonProperty("_")>
    Public Property value As String

End Class
Public Class SignedInfo

    <JsonProperty("SignatureMethod")>
    Public Property SignedInfoSignatureMethod As List(Of SignedInfoSignatureMethod)

    <JsonProperty("Reference")>
    Public Property Reference As List(Of Reference)

End Class

Public Class Reference

    <JsonProperty("Type")>
    Public Property Type As String

    <JsonProperty("URI")>
    Public Property URI As String

    <JsonProperty("DigestMethod")>
    Public Property DigestMethod As List(Of DigestMethod)
    <JsonProperty("DigestValue")>
    Public Property DigestValue As List(Of DigestValue)

End Class
Public Class DigestMethod

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String
End Class
Public Class SignedInfoSignatureMethod

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String


End Class
Public Class KeyInfo

    <JsonProperty("X509Data")>
    Public Property X509Data As List(Of X509Data)

End Class

Public Class X509Data

    <JsonProperty("X509Certificate")>
    Public Property X509Certificate As List(Of X509Certificate)

    <JsonProperty("X509SubjectName")>
    Public Property X509SubjectName As List(Of X509SubjectName)

    <JsonProperty("X509IssuerSerial")>
    Public Property X509IssuerSerial As List(Of X509IssuerSerial)

End Class

Public Class X509Certificate

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class X509SubjectName

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class X509IssuerSerial

    <JsonProperty("X509IssuerName")>
    Public Property X509IssuerName As List(Of X509IssuerName)

    <JsonProperty("X509SerialNumber")>
    Public Property X509SerialNumber As List(Of X509SerialNumber)

End Class

Public Class X509IssuerName

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class SignatureObject

    <JsonProperty("QualifyingProperties")>
    Public Property QualifyingProperties As List(Of QualifyingProperties)

End Class

Public Class QualifyingProperties

    <JsonProperty("Target")>
    Public Property Target As String

    <JsonProperty("SignedProperties")>
    Public Property SignedProperties As List(Of SignedProperties)

End Class

Public Class SignedProperties

    <JsonProperty("Id")>
    Public Property ID As String

    <JsonProperty("SignedSignatureProperties")>
    Public Property SignedSignatureProperties As List(Of SignedSignatureProperties)

End Class
Public Class SignedSignatureProperties

    <JsonProperty("SigningTime")>
    Public Property SigningTime As List(Of SigningTime)

    <JsonProperty("SigningCertificate")>
    Public Property SigningCertificate As List(Of SigningCertificate)

End Class

Public Class SigningCertificate
    <JsonProperty("Cert")>
    Public Property Cert As List(Of Cert)
End Class

Public Class Cert
    <JsonProperty("CertDigest")>
    Public Property CertDigest As List(Of CertDigest)

    <JsonProperty("IssuerSerial")>
    Public Property IssuerSerial As List(Of IssuerSerial)

End Class
Public Class IssuerSerial

    <JsonProperty("X509IssuerName")>
    Public Property X509IssuerName As List(Of X509IssuerName)

    <JsonProperty("X509SerialNumber")>
    Public Property X509SerialNumber As List(Of X509SerialNumber)

End Class

Public Class CertDigest

    <JsonProperty("DigestMethod")>
    Public Property DigestMethod As List(Of DigestMethod)

    <JsonProperty("DigestValue")>
    Public Property DigestValue As List(Of DigestValue)

End Class

Public Class X509SerialNumber

    <JsonProperty("_")>
    Public Property value As String

End Class
'Public Class DigestMethod

'    <JsonProperty("_")>
'    Public Property value As String

'End Class
Public Class DigestValue

    <JsonProperty("_")>
    Public Property value As String

End Class
Public Class SigningTime

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String

End Class
Public Class ReferencedSignatureID

    <JsonProperty("_")>
    Public Property value As String

End Class


Public Class SubmissionResult
    Public Property submissionUid As String
    Public Property acceptedDocuments As List(Of AcceptedDocuments)
    Public Property rejectedDocuments As List(Of RejectedDocuments)
End Class

Public Class AcceptedDocuments
    Public Property uuid As String
    Public Property invoiceCodeNumber As String

End Class
Public Class RejectedDocuments
    'Public Property [error] As String
    Public Property invoiceCodeNumber As String

End Class

Public Class CancelDocument
    Public Property uuid As String
    Public Property status As String
    Public Property Reason As String
End Class

Public Class IgnoreErrorPropertiesResolver
    Inherits DefaultContractResolver

    ' Public Property LastActivityDate As DateTime

    Protected Overrides Function CreateProperty(ByVal member As MemberInfo, ByVal memberSerialization As MemberSerialization) As JsonProperty
        'Dim [property] As JsonProperty = MyBase.CreateProperty(member, memberSerialization)
        Dim [property] As JsonProperty
        If [property].PropertyName = "LastActivityDate" Then
            [property].Ignored = True
        End If
        'If [("InputStream", "Filter", "Length", "Position", "ReadTimeout", "WriteTimeout", "LastActivityDate", "LastUpdatedDate", "Session").Contains([property].PropertyName)] Then
        '    [property].Ignored = True
        'End If

        Return [property]
    End Function

End Class


Public Class CustomResolver
    Inherits DefaultContractResolver

    Protected Overrides Function CreateProperty(ByVal member As MemberInfo, ByVal memberSerialization As MemberSerialization) As JsonProperty
        Dim [property] As JsonProperty = MyBase.CreateProperty(member, memberSerialization)

        [property].Ignored = True

        Return [property]
    End Function

End Class

Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Web.UI.WebControls
Imports System.Web

Imports System.IO
Imports System.Net
Imports System.Text
' Include this namespace if it is not already there

Imports System.Globalization
Imports System.Threading
Imports System.Drawing

Imports Microsoft.VisualBasic
Imports System
Imports System.Collections
Imports System.ComponentModel
Imports System.Reflection

Partial Class Contract
    Inherits System.Web.UI.Page
    Public rcno As String
    Private Shared GridSelected As String = String.Empty
    Private Shared gScheduler, gSalesman As String

    Public Message As String = String.Empty
    ' To store the Error or Message
    Private Word As Microsoft.Office.Interop.Word.ApplicationClass
    ' The Interop Object for Word
    Private Excel As Microsoft.Office.Interop.Excel.ApplicationClass
    ' The Interop Object for Excel
    Private Unknown As Object = Type.Missing
    ' For passing Empty values
    Public Enum StatusType
        SUCCESS
        FAILED
    End Enum
    ' To Specify Success or Failure Types
    Public Status As StatusType


    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String
    'Public rcno As String

    Public TotDetailRecords As Integer
    Dim gFreqMTD As String
    Dim gSeq As String
    Dim gServiceDate As Date
    Dim gdayofWeek As String
    Dim gServiceDatestr As String

    Dim rowdeleted As Boolean
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer

    Dim gDOW As String
    Dim gDayNo As Integer
    Dim gMonthNo As Integer
    Dim gWeekNo As Integer
    Dim mode As String
    Dim vStrStatus, vStrRenewalStatus, vStrNotedStatus As String

    Public HasDuplicateTarget As Boolean
    Public HasDuplicateLocaion As Boolean
    Public HasDuplicateServices As Boolean
    Public HasDuplicateFrequency As Boolean
    Public HasDuplicateTargetNCR As Boolean

    Public IsPopUpTeam As String
    'Public Static gLimit As Long

    Public isInPage As Boolean = False
    Shared random As New Random()
    Protected Sub Page_Init(sender As Object, e As EventArgs) Handles Me.Init
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1))
        Response.Cache.SetNoStore()
    End Sub

    'Protected Sub PrintFile(ByVal sender As Object, ByVal e As EventArgs)
    '    If chkPrintStatus.Checked = True Then
    '        Session.Add("Status", "[""""O"""", """"P""""]")
    '    Else
    '        Session.Add("Status", "[""""O""""]")
    '    End If


    '    Response.Redirect("RV_ContractServiceSchedule.aspx")


    'End Sub

    Private Sub AccessControl()

        '''''''''''''''''''Access Control 
        Try
            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            Dim conn As MySqlConnection = New MySqlConnection()


            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            command.CommandText = "SELECT x2412, x2413, x2412Add, x2412Copy, x2412Edit, x2412Delete, x2412Print, x2412ChSt, x2412Update, x2412Reverse, x2412Process, x2412Early, x2412Term, x2412Cancel, x2412Renewal, x2412ServiceEButton, x2412EditPortfolioValue, x2412EditAgreeValue, x2412EditOurRef, x2412EditManualContractNo, x2412EditPONo, x2412EditNotes, x2412SORAccess, x2412SORAdd, x2412SOREdit, x2412SORDelete, x2412FileAccess,x2412FileUpload, x2412FileDelete, x2412BackDateContract, x2412BackDateContractTermination, x2412BackDateContractSameMonthOnly, x2412BackDateContractTerminationSameMonthOnly, x2412EditAutoRenewal, x2412BillingFrequency, x2412FutureDateContractTermination, x2412RegenerateSchedule, x2412ExtendContractEndDate, x2412Distribution, x2412VoidContract, x2413VoidService, x2412WarrantyDates, x2412Revision, x2412AgreementTypeContractCode FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                If Not IsDBNull(dt.Rows(0)("x2412FileAccess")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileAccess")) = False Then
                        txtFileAccess.Text = dt.Rows(0)("x2412FileAccess").ToString()
                        If Convert.ToBoolean(dt.Rows(0)("x2412FileAccess")) = False Then
                            tb1.Tabs(5).Visible = False
                        End If
                    Else
                        txtFileAccess.Text = "0"
                    End If
                Else
                    txtFileAccess.Text = "0"
                End If


                If Not IsDBNull(dt.Rows(0)("x2412FileUpload")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileUpload")) = False Then
                        txtFileUpload.Text = dt.Rows(0)("x2412FileUpload").ToString()
                        btnUpload.Enabled = dt.Rows(0)("x2412FileUpload").ToString()
                        FileUpload1.Enabled = dt.Rows(0)("x2412FileUpload").ToString()
                    Else
                        txtFileUpload.Text = "0"
                    End If
                Else
                    txtFileUpload.Text = "0"
                End If

                If Not IsDBNull(dt.Rows(0)("x2412FileDelete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileDelete")) = False Then
                        txtFileDelete.Text = dt.Rows(0)("x2412FileDelete").ToString()
                    Else
                        txtFileDelete.Text = "0"
                    End If
                Else
                    txtFileDelete.Text = "0"
                End If


                If Not IsDBNull(dt.Rows(0)("x2412BackDateContract")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContract")) = False Then
                        txtBackDateContract.Text = dt.Rows(0)("x2412BackDateContract").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractTermination")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractTermination")) = False Then
                        txtBackDateContractTermination.Text = dt.Rows(0)("x2412BackDateContractTermination").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412Revision")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Revision")) = False Then
                        txtRevisionUA.Text = dt.Rows(0)("x2412Revision").ToString()
                    End If
                End If

                ''''''''''''''''

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractSameMonthOnly")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractSameMonthOnly")) = False Then
                        txtBackDateContractSameMonthOnly.Text = dt.Rows(0)("x2412BackDateContractSameMonthOnly").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly")) = False Then
                        txtBackDateContractTerminationSameMonthOnly.Text = dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412FutureDateContractTermination")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FutureDateContractTermination")) = False Then
                        txtFutureDateContractTermination.Text = dt.Rows(0)("x2412FutureDateContractTermination").ToString()
                    End If
                End If
                '''''''''''''

                If Not IsDBNull(dt.Rows(0)("x2412")) Then
                    If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("x2412"))) = False Then
                        If Convert.ToBoolean(dt.Rows(0)("x2412")) = False Then
                            Response.Redirect("Home.aspx")
                        End If
                    End If
                End If



                If Not IsDBNull(dt.Rows(0)("x2413")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2413")) = False Then
                        Me.btnServiceRecords.Enabled = dt.Rows(0)("x2413").ToString()
                    End If
                End If



                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnADD.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnSvcAdd.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If

                If txtEnableAddButtonInContractOnLoad.Text = "N" And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    btnADD.Enabled = False
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Copy")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Copy")) = False Then
                        Me.btnCopy.Enabled = dt.Rows(0)("x2412Copy").ToString()
                    End If
                End If

                'If txtEnableAddButtonInContractOnLoad.Text = "N" And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '    btnCopy.Enabled = False
                '    btnCopy.ForeColor = System.Drawing.Color.Gray
                'End If

                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnRevision.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If

                'If txtEnableAddButtonInContractOnLoad.Text = "N" And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '    btnRevision.Enabled = False
                '    btnRevision.ForeColor = System.Drawing.Color.Gray
                'End If

                If Not IsDBNull(dt.Rows(0)("x2412Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Edit")) = False Then
                        Me.btnEdit.Enabled = dt.Rows(0)("x2412Edit").ToString()

                        'btnClient0.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient1.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient2.Enabled = dt.Rows(0)("x2412Edit").ToString()

                        'btnClient3.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient4.Enabled = dt.Rows(0)("x2412Edit").ToString()

                        btnRecalculate.Visible = dt.Rows(0)("x2412Edit").ToString()
                        'btnRecalculate.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient5.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient6.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient7.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient8.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient9.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient10.Enabled = dt.Rows(0)("x2412Edit").ToString()
                    End If
                End If

                'If txtEnableAddButtonInContractOnLoad.Text = "N" And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '    btnEdit.Enabled = False
                '    btnEdit.ForeColor = System.Drawing.Color.Gray
                'End If

                If Not IsDBNull(dt.Rows(0)("x2412Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Edit")) = False Then
                        Me.btnSvcEdit.Enabled = dt.Rows(0)("x2412Edit").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Delete")) = False Then
                        Me.btnDelete.Enabled = dt.Rows(0)("x2412Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Delete")) = False Then
                        Me.btnSvcDelete.Enabled = dt.Rows(0)("x2412Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Print")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Print")) = False Then
                        Me.btnPrint.Enabled = dt.Rows(0)("x2412Print").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412ChSt")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412ChSt")) = False Then
                        Me.btnChangeStatus.Enabled = dt.Rows(0)("x2412ChSt").ToString()
                    End If
                End If



                If Not IsDBNull(dt.Rows(0)("x2412Renewal")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Renewal")) = False Then
                        Me.btnContractRenewal.Enabled = dt.Rows(0)("x2412Renewal").ToString()
                    End If
                End If

                'If txtEnableAddButtonInContractOnLoad.Text = "N" And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '    btnContractRenewal.Enabled = False
                '    btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                'End If


                If Not IsDBNull(dt.Rows(0)("x2412EditPortfolioValue")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditPortfolioValue")) = False Then
                        Me.txtPortfolioValue.Enabled = dt.Rows(0)("x2412EditPortfolioValue").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditAgreeValue")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditAgreeValue")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient8.Visible = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        'btnHistory.Visible = dt.Rows(0)("x2412EditAgreeValue").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditOurRef")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditOurRef")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient0.Visible = dt.Rows(0)("x2412EditOurRef").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditManualContractNo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditManualContractNo")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        'btnClient1.Visible = dt.Rows(0)("x2412EditManualContractNo").ToString()
                        btnMultiplePO.Visible = dt.Rows(0)("x2412EditManualContractNo").ToString() '25.10.21
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditPONo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditPONo")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient2.Visible = dt.Rows(0)("x2412EditPONo").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditNotes")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditNotes")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient3.Visible = dt.Rows(0)("x2412EditNotes").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412SORAccess")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAccess")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        tb1.Tabs(3).Visible = dt.Rows(0)("x2412SORAccess").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditAutoRenewal")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditAutoRenewal")) = False Then
                        'chkAutoRenew.Visible = dt.Rows(0)("x2412EditAutoRenewal").ToString()
                        btnAutoRenew.Enabled = dt.Rows(0)("x2412EditAutoRenewal").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BillingFrequency")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BillingFrequency")) = False Then
                        btnClient4.Visible = dt.Rows(0)("x2412BillingFrequency").ToString()
                    End If
                End If


                txtRegenerateSchedule.Text = dt.Rows(0)("x2412RegenerateSchedule").ToString()
                txtExtendContractEndDate.Text = dt.Rows(0)("x2412ExtendContractEndDate").ToString()


                If Not IsDBNull(dt.Rows(0)("x2412Distribution")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Distribution")) = False Then
                        btnContractGroupDistribution.Visible = dt.Rows(0)("x2412Distribution").ToString()
                    End If
                End If

                txtVoidContract.Text = dt.Rows(0)("x2412VoidContract").ToString()
                txtVoidService.Text = dt.Rows(0)("x2413VoidService").ToString()
                  
                If Not IsDBNull(dt.Rows(0)("x2412WarrantyDates")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412WarrantyDates")) = False Then
                        'btnClient11.Visible = dt.Rows(0)("x2412WarrantyDates").ToString()
                        btnClient12.Visible = dt.Rows(0)("x2412WarrantyDates").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412AgreementTypeContractCode")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412AgreementTypeContractCode")) = False Then
                        txtAgreementTypeContractCode.Text = dt.Rows(0)("x2412AgreementTypeContractCode").ToString()
                    Else
                        txtAgreementTypeContractCode.Text = "0"
                    End If
                Else
                    txtAgreementTypeContractCode.Text = "0"
                End If



                '''''''''''
                'If Not IsDBNull(dt.Rows(0)("x2412SORAdd")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAdd")) = False Then
                '        Me.btnAddRateSchedule.Enabled = dt.Rows(0)("x2412SORAdd").ToString()
                '    End If
                'End If



                'If Not IsDBNull(dt.Rows(0)("x2412SOREdit")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SOREdit")) = False Then
                '        Me.btnEditRateSchedule.Enabled = dt.Rows(0)("x2412SOREdit").ToString()
                '    End If
                'End If


                'If Not IsDBNull(dt.Rows(0)("x2412SORDelete")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORDelete")) = False Then
                '        Me.btnDeleteRateSchedule.Enabled = dt.Rows(0)("x2412SORDelete").ToString()
                '    End If
                'End If

                ''''''''''
                'btnClient0.Enabled = dt.Rows(0)("x2412EditOurRef").ToString()
                'btnClient1.Enabled = dt.Rows(0)("x2412EditManualContractNo").ToString()
                'btnClient2.Enabled = dt.Rows(0)("x2412EditPONo").ToString()


                If btnADD.Enabled = True Then
                    btnADD.ForeColor = System.Drawing.Color.Black
                Else
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If btnCopy.Enabled = True Then
                    btnCopy.ForeColor = System.Drawing.Color.Black
                Else
                    btnCopy.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEdit.Enabled = True Then
                    btnEdit.ForeColor = System.Drawing.Color.Black
                Else
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDelete.Enabled = True Then
                    btnDelete.ForeColor = System.Drawing.Color.Black
                Else
                    btnDelete.ForeColor = System.Drawing.Color.Gray
                End If

                If btnChangeStatus.Enabled = True Then
                    btnChangeStatus.ForeColor = System.Drawing.Color.Black
                Else
                    btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEarlyCompletion.Enabled = True Then
                    btnEarlyCompletion.ForeColor = System.Drawing.Color.Black
                Else
                    btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray
                End If

                If btnCancelByCompany.Enabled = True Then
                    btnCancelByCompany.ForeColor = System.Drawing.Color.Black
                Else
                    btnCancelByCompany.ForeColor = System.Drawing.Color.Gray
                End If

                If btnContractRenewal.Enabled = True Then
                    btnContractRenewal.ForeColor = System.Drawing.Color.Black
                Else
                    btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                End If

                If btnPrint.Enabled = True Then
                    btnPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnPrint.ForeColor = System.Drawing.Color.Gray
                End If

                If btnServiceRecords.Enabled = True Then
                    btnServiceRecords.ForeColor = System.Drawing.Color.Black
                Else
                    btnServiceRecords.ForeColor = System.Drawing.Color.Gray
                End If

                If btnRevision.Enabled = True Then
                    btnRevision.ForeColor = System.Drawing.Color.Black
                Else
                    btnRevision.ForeColor = System.Drawing.Color.Gray
                End If

         

            End If
                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
                'Else
                'txtBackDateContract.Text = True
                'txtBackDateContractTermination.Text = True
                'txtFileDelete.Text = "1"
                'End If


                ''''''''
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)

                ''''''''
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ACCESS CONTROL", ex.Message.ToString, "")
            Exit Sub
        End Try
        '''''''''''''''''''Access Control 
    End Sub
    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            Dim Query As String

            ddlStatusChSt.Attributes.Add("OnSelectedIndexChanged", "statuschange()")

            txtAgreeVal.Attributes.Add("onchange", "getValuePerMonth()")
            txtConDetVal.Attributes.Add("onchange", "getNetAmount()")
            txtDisAmt.Attributes.Add("onchange", "getNetAmount()")
            txtDisPercent.Attributes.Add("onchange", "getNetAmount()")

            txtContractStart.Attributes.Add("onchange", "CalculateContractDates()")
            'txtContractEnd.Attributes.Add("onchange", "ValidateDatesContract()")

            txtServStart.Attributes.Add("onchange", "ValidateDatesService()")
            'txtServEnd.Attributes.Add("onchange", "ValidateDatesService()")

            txtWarrStart.Attributes.Add("onchange", "ValidateDatesWarranty()")
            txtWarrEnd.Attributes.Add("onchange", "ValidateDatesWarranty()")

            txtDuration.Attributes.Add("onchange", "CalculateDatesDuration()")
            rbtLstDuration.Attributes.Add("onchange", "CalculateDates()")

            'ddlContactType.Attributes.Add("onchange", "RefreshFields()")
            ddlBillingFreq.Attributes.Add("onchange", "getValuePerMonth()")

            ddlContactType.Attributes.Add("onchange", "getContactType()")
            txtAccountId.Attributes.Add("onchange", "getContactType()")

            gvClient.Attributes.Add("onchange", " if (!confirm('Please click OK to change. Otherwise click CANCEL?')) return false;")

            btnTop.Attributes.Add("onclick", "<script> ResetScrollPosition();</Script>")

            'btnCopy.Attributes.Add("onclick", "<script> CalculateContractDates();</Script>")


            If Not Page.IsPostBack Then

                txtCreatedBy.Text = Session("userid")

                FindLocation()
                'SqlDSTerminationCode.SelectCommand = "SELECT CONCAT(Code, ' - ', Description) AS TC FROM tblterminationcode where Status = 'Y' ORDER BY Code"
                'SqlDSTerminationCode.DataBind()

                'ddlTerminationCode.DataSourceID = "SqlDSTerminationCode"
                'ddlTerminationCode.DataBind()

                txtContractDate.Attributes.Add("readonly", "readonly")
                txtContractStart.Attributes.Add("readonly", "readonly")
                txtContractEnd.Attributes.Add("readonly", "readonly")
                txtServStart.Attributes.Add("readonly", "readonly")
                txtServEnd.Attributes.Add("readonly", "readonly")
                'txtWarrStart.Attributes.Add("readonly", "readonly")
                'txtWarrEnd.Attributes.Add("readonly", "readonly")
                txtRenewalDate.Attributes.Add("readonly", "readonly")
                txtCreatedOn.Attributes.Add("readonly", "readonly")

                txtAgreedValueAmount.Attributes.Add("readonly", "readonly")
                txtGSTAmount.Attributes.Add("readonly", "readonly")

                txtActualServiceStart.Attributes.Add("readonly", "readonly")
                txtActualEnd.Attributes.Add("readonly", "readonly")
                txtTotContVal.Attributes.Add("readonly", "readonly")

                txtActualEndChSt.Attributes.Add("readonly", "readonly")
                txtServStartDay.Attributes.Add("readonly", "readonly")
                TxtServEndDay.Attributes.Add("readonly", "readonly")
                txtServStartSvc.Attributes.Add("readonly", "readonly")
                txtServEndSvc.Attributes.Add("readonly", "readonly")
                txtServStartDaySvc.Attributes.Add("readonly", "readonly")
                txtServEndDaySvc.Attributes.Add("readonly", "readonly")

                ddlIndustry.Attributes.Add("readonly", "readonly")
                ddlMarketSegmentID.Attributes.Add("readonly", "readonly")

                txtValPerMnth.Attributes.Add("readonly", "readonly")
                txtRetentionValue.Attributes.Add("disabled", "true")

                txtServiceNo.Attributes.Add("disabled", "true")
                txtServiceBal.Attributes.Add("disabled", "true")
                txtServiceNoActual.Attributes.Add("disabled", "true")

                txtServiceAmt.Attributes.Add("disabled", "true")
                txtServiceAmtBal.Attributes.Add("disabled", "true")
                txtServiceAmtActual.Attributes.Add("disabled", "true")

                txtTotalArea.Attributes.Add("disabled", "true")
                txtCompletedArea.Attributes.Add("disabled", "true")
                txtBalanceArea.Attributes.Add("disabled", "true")

                txtBaitStationTotal.Attributes.Add("disabled", "true")
                txtBaitStationInstalled.Attributes.Add("disabled", "true")
                txtBaitStationBalance.Attributes.Add("disabled", "true")

                txtAgreeValServiceSummary.Attributes.Add("disabled", "true")
                txtServiceNoCT.Attributes.Add("disabled", "true")
                txtServiceAmtCT.Attributes.Add("disabled", "true")
                txtCTArea.Attributes.Add("disabled", "true")
                txtBaitStationCT.Attributes.Add("disabled", "true")

                txtBillingAddress.Attributes.Add("disabled", "true")
                txtServiceAddressCons.Attributes.Add("disabled", "true")

                'txtLocation.Attributes.Add("disabled", "true")

                txtAlertStatus.Attributes.Add("readonly", "readonly")
                txtCategoryID.Attributes.Add("readonly", "readonly")
                txtPortfolioValueEdit.Attributes.Add("readonly", "readonly")
                txtStatus.Attributes.Add("readonly", "readonly")

                'txtContractEnd.Attributes.Add("readonly", "readonly")

                txtTerminationDesc.Attributes.Add("disabled", "true")

                txtFinalPricePerServiceRateSchedule.Attributes.Add("disabled", "true")
                txtEndofLastSchedule.Attributes.Add("disabled", "true")

                txtEndDate.Attributes.Add("disabled", "true")

                txtLastServiceDate.Attributes.Add("readonly", "readonly")

                txtAgreedValueAmount.Attributes.Add("readonly", "readonly")

                txtContractNoChSt.Attributes.Add("disabled", "true")
                txtCustomerNameChSt.Attributes.Add("disabled", "true")

                'txtTerminationType.Attributes.Add("readonly", "readonly")
                'txtTerminationTypeChSt.Attributes.Add("readonly", "readonly")

                txtTerminationType.Attributes.Add("disabled", "true")
                txtTerminationTypeChSt.Attributes.Add("disabled", "true")


                grvServiceRecAgreeValueEdit.Visible = False

                'ddlOnHoldCodeChSt.Attributes.Add("disabled", "true")
                'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "true")
                'txtOnHoldCommentsChSt.Attributes.Add("disabled", "true")


                mdlPopUpTeam.Hide()
                mdlPopUpClient.Hide()
                MakeMeNull()
                MakeSvcNull()
                MakeCommNull()



                'ddlTerminationCode.Attributes.Add("disabled", "true")
                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                AccessControl()

                btnClient0.Visible = False
                'btnClient1.Visible = False
                btnMultiplePO.Visible = False '25.10.21
                btnClient2.Visible = False
                btnClient3.Visible = False
                btnClient4.Visible = False
                btnClient5.Visible = False
                btnClient6.Visible = False
                btnClient7.Visible = False
                btnClient8.Visible = False
                btnClient9.Visible = False
                btnClient10.Visible = False
                btnAutoRenew.Visible = False
                btnRecalculate.Visible = False
                btnExtendContractEndDate.Visible = False
                btnClient11.Visible = False
                btnClient12.Visible = False
                btnHistory.Visible = False
                'btnAutoRenew.Visible = False
                btnContractGroupDistribution.Visible = False

                txtGroupAuthority.Text = Session("SecGroupAuthority")
                txtSearch1Status.Text = "O,P,H,R,C,T,E"
                EnableSvcControls()
                IsPopUpTeam = "N"
                'DisableControls()
                tb1.ActiveTabIndex = 0
                'ViewState("ClientCurrentAlphabet") = "A"
                'GenerateClientAlphabets()
                gvClient.DataSourceID = "SqlDSClient"

                'ViewState("TeamCurrentAlphabet") = "A"
                'GenerateTeamAlphabets()
                gvTeam.DataSourceID = "SqlDSTeam"

                Query = "Select ScheduleType from tblscheduletype order by ScheduleType"
                PopulateDropDownList(Query, "ScheduleType", "ScheduleType", ddlScheduleType)

                Query = "Select Category from tblContractGroupCategory order by Category"
                PopulateDropDownList(Query, "Category", "Category", ddlCategorySearch)

                'PopulateComboBox(Query, "ScheduleType", "ScheduleType", ComboBox1)

                'If ddlContractGrp.Text = "CP" Or ddlContractGrp.Text = "CP(ADHOC)" Or ddlContractGrp.Text = "MQ" Or ddlContractGrp.Text = "MQ (ADHOC)" Then
                '    ddlContractGrp.Enabled = True
                '    Query = "Select ContractGroup from tblcontractgroup where ContractGroup  like '" & ddlContractGrp.Text & "%'"
                '    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrp)
                '    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlSearchContractGroup)
                '    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrpSearch)
                'Else
                '    ddlContractGrp.Enabled = False
                'End If

                Query = "Select ContractGroup from tblcontractgroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrp)
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlSearchContractGroup)
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrpSearch)

                Query = "Select LocationGroup from tbllocationgroup"
                PopulateDropDownList(Query, "LocationGroup", "LocationGroup", ddlLocateGrp)
                PopulateDropDownList(Query, "LocationGroup", "LocationGroup", ddlSearchLocationGroup)


                Query = "Select Frequency from tblFrequency"
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFreq)
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFreqEdit)


                Query = "Select CompanyGroup from tblCompanyGroup order by CompanyGroup"
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlCompanyGrp)
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlSearchCompanyGroup)
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlCompanyGroupEdit)

                'Query = "Select StaffId from tblStaff where (SecGroupAuthority like  'SCHEDULER%' or  SecGroupAuthority like '%ADMINISTRATOR%') and Status = 'O'"
                Query = "Select trim(StaffId) As StaffId from tblStaff where SecGroupAuthority <> 'GUEST' and Status = 'O'"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlScheduler)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchScheduler)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSchedulerEdit)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchCreatedBy)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchEditedBy)

                Query = "Select trim(StaffId) As StaffId from tblStaff where Roles = 'SALES MAN' and status ='O' ORDER BY STAFFID"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanSearch)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanEdit)

                'Query = "Select StaffId from tblStaff where Roles = 'SALES MAN'"
                'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesman)
                'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)
                'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanSearch)
                'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanEdit)

                Query = "Select DocumentType from tblDocumentType where Module = 'CONTRACT'"
                PopulateDropDownList(Query, "DocumentType", "DocumentType", ddlDocumentType)


                Query = "SELECT CONCAT(Code, ' : ', Description) AS HC FROM tblHoldcode where Status = 'Y' ORDER BY Code"
                PopulateDropDownList(Query, "HC", "HC", ddlOnHoldCodeChSt)


               
                'SELECT upper(ScheduleType) FROM tblscheduletype ORDER BY upper(Scheduletype)
                'Query = "Select Category from tblcontractgroupcategory"
                'PopulateDropDownList(Query, "Category", "Category", ddlCategoryID)

                ''''''''''''''''''''''''''''''''''''
                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                'commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec,DisplayRecordsLocationWise, BackDateContract, BackDateContractTermination, ContractRevisionTerminationCode, PrefixDocNoContract, AutoRenewal FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec,DisplayRecordsLocationWise, ContractRevisionTerminationCode, PrefixDocNoContract, AutoRenewal, ContinuousContract, TeamIDMandatory, ServiceByMandatory, DefaultTaxCode, AllowTerminationBeforeLastService, ContractRevisionNewContractCode, ContractRenewalNewContractCode, ContractRenewalTerminationCode,EnableAddButtonInContractOnLoad, DaysBeforeRenewalMessage, DaysBeforeScheduleGeneration,ContractVoidCode FROM tblservicerecordmastersetup"

                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceContractMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString

                'txtBackDateContractSetup.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContract")
                'txtBackDateContractTerminationSetup.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContractTermination")

                txtContractRevisionTerminationCode.Text = dtServiceRecordMasterSetup.Rows(0)("ContractRevisionTerminationCode")

                txtRevisionNewContract.Text = dtServiceRecordMasterSetup.Rows(0)("ContractRevisionNewContractCode")
                txtRenewalTerminationContract.Text = dtServiceRecordMasterSetup.Rows(0)("ContractRenewalTerminationCode")
                txtRenewalNewContract.Text = dtServiceRecordMasterSetup.Rows(0)("ContractRenewalNewContractCode")
                txtVoidContractChSt.Text = dtServiceRecordMasterSetup.Rows(0)("ContractVoidCode")


                txtPrefixDocNoContract.Text = dtServiceRecordMasterSetup.Rows(0)("PrefixDocNoContract")

                txtTeamIDMandatory.Text = dtServiceRecordMasterSetup.Rows(0)("TeamIDMandatory")
                txtServiceByMandatory.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceByMandatory")
                txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode")

                txtEnableAddButtonInContractOnLoad.Text = dtServiceRecordMasterSetup.Rows(0)("EnableAddButtonInContractOnLoad")

                txtDaysBeforeRenewalMessage.Text = dtServiceRecordMasterSetup.Rows(0)("DaysBeforeRenewalMessage")
                txtDaysBeforeScheduleGeneration.Text = dtServiceRecordMasterSetup.Rows(0)("DaysBeforeScheduleGeneration")


                'txtDisplayFixedDurationType.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayFixedDurationType")
                'txtDisplayContinuousDurationType.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayContinuousDurationType")


                'If txtDisplayFixedDurationType.Text = "N" Then
                '    rbtFixedContinuous.Items(0).Attributes.CssStyle.Add("display", "none")

                '    'Else
                '    '    Label72.Visible = False
                'End If

                'If txtDisplayContinuousDurationType.Text = "N" Then
                '    rbtFixedContinuous.Items(1).Attributes.CssStyle.Add("display", "none")
                'Else
                '    'Label73.Visible = False
                'End If


                If txtTeamIDMandatory.Text = "1" Then
                    Label72.Visible = True
                Else
                    Label72.Visible = False
                End If

                If txtServiceByMandatory.Text = "1" Then
                    Label73.Visible = True
                Else
                    Label73.Visible = False
                End If

                If dtServiceRecordMasterSetup.Rows(0)("AutoRenewal") = 1 Then
                    chkAutoRenew.Visible = True
                    'btnAutoRenew.Visible = True
                    txtbtnAutoRenew.Text = "Y"
                Else
                    chkAutoRenew.Visible = False
                    btnAutoRenew.Visible = False
                    txtbtnAutoRenew.Text = "N"
                End If

                txtFixedContinuousVisible.Text = dtServiceRecordMasterSetup.Rows(0)("ContinuousContract")

                If IsDBNull(dtServiceRecordMasterSetup.Rows(0)("AllowTerminationBeforeLastService")) Then
                    txtAllowTerminationBeforeLastService.Text = "0"
                Else
                    txtAllowTerminationBeforeLastService.Text = dtServiceRecordMasterSetup.Rows(0)("AllowTerminationBeforeLastService")
                End If

                'txtPriceIncreaseLimit.Text = dtServiceRecordMasterSetup.Rows(0)("PriceIncreaseLimit")
                'txtPriceDecreaseLimit.Text = dtServiceRecordMasterSetup.Rows(0)("PriceDecreaseLimit")

                If txtFixedContinuousVisible.Text = "0" Then
                    rbtFixedContinuous.Items.RemoveAt(1)
                    'Rating.Items[0].Enabled = false;
                    'Else
                    '    rbtFixedContinuous.Items.RemoveAt(1)
                End If

                AccessControl()

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    Query = "select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "'"
                    PopulateDropDownList(Query, "locationID", "locationID", txtLocation)
                    PopulateComboBox(Query, "locationID", "locationID", ddlLocationSearch)

                    lblBranch1.Visible = True
                    lblBranch2.Visible = True
                    ddlLocationSearch.Visible = True
                    txtLocation.Visible = True
                Else
                    lblBranch1.Visible = False
                    lblBranch2.Visible = False
                    ddlLocationSearch.Visible = False
                    txtLocation.Visible = False

                End If


                ''
                Dim sql As String
                sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGSTRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                End If


                ''
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                If String.IsNullOrEmpty(Session("accountid")) = True And String.IsNullOrEmpty(Session("contractno")) = True Then
                    Session.Remove("contractfrom")
                    Session.Remove("contractdetailfrom")
                    Session.Remove("contractno")
                    Session.Remove("serviceschedulefrom")

                    Session.Remove("contractdate")
                    Session.Remove("contracttype")
                    Session.Remove("client")
                    Session.Remove("custname")
                    Session.Remove("contact")
                    Session.Remove("servstart")
                    Session.Remove("servend")
                    Session.Remove("agreedvalue")
                    Session.Remove("discamt")
                    Session.Remove("status")
                    Session.Remove("accountid")

                    '15.08.21
                    Session.Remove("locationid")
                    Session.Remove("sevaddress")
                    '15.08.21

                    lblAccountID.Text = ""

                    If txtEnableAddButtonInContractOnLoad.Text = "N" Then
                        btnADD.Enabled = False
                        btnADD.ForeColor = System.Drawing.Color.Gray
                    End If

                    ' ''''''''''''''''''''''''''''''''''''
                    'Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                    'commandServiceRecordMasterSetup.CommandType = CommandType.Text
                    'commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec FROM tblservicerecordmastersetup"
                    'commandServiceRecordMasterSetup.Connection = conn

                    'Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                    'Dim dtServiceRecordMasterSetup As New DataTable
                    'dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                    'txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceContractMaxRec")

                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("showSConScreenLoad")) = False Then
                        txt.Text = ""
                        SQLDSContract.SelectCommand = ""
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                    Else
                        'Dim lLimit As Long

                        If txtDisplayRecordsLocationwise.Text = "N" Then
                            txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, "
                            txt.Text = txt.Text & "  A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, "
                            txt.Text = txt.Text & " A.Scheduler, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, "
                            txt.Text = txt.Text & " A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                            txt.Text = txt.Text & " From tblContract A where A.Status ='O'"
                        End If


                        If txtDisplayRecordsLocationwise.Text = "Y" Then
                            txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, "
                            txt.Text = txt.Text & "  A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, "
                            txt.Text = txt.Text & " A.Scheduler, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, "
                            txt.Text = txt.Text & " A.Renewaldate, A.TeamId, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                            txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
                            txt.Text = txt.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                        End If

                        txt.Text = txt.Text + " order by A.rcno desc, A.CustName limit " & txtLimit.Text

                        SQLDSContract.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()

                    End If

                Else

                    If String.IsNullOrEmpty(Session("contractfrom")) = False And String.IsNullOrEmpty(Session("servicefrom")) = True Then
                        'btnADD_Click(sender, e)
                        txtclientid.Text = Session("accountid")

                        txtClient.Text = Session("clientid")
                        ddlContactType.Text = Session("contracttype")
                        lblAccountIdContact.Visible = True
                        lblAccountIdContact1.Text = Session("accountid")

                        lblAccountNameContact.Visible = True
                        lblAccountNameContact1.Text = Session("custname")

                        btnQuit.Text = "BACK"

                        'txtLocation.Attributes.Add("readonly", "readonly")

                        If String.IsNullOrEmpty(Session("locationid")) = False Then
                            lblAccountIdContactLocation.Visible = True
                            lblAccountIdContactLocation1.Text = Session("locationid")
                            btnClient.Visible = False
                        End If

                        If String.IsNullOrEmpty(Session("sevaddress")) = False Then
                            lblAccountIdServiceAddress.Visible = True
                            lblAccountIdServiceAddress1.Text = Session("sevaddress")
                        End If

                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            txtContType1.Text = "CORPORATE"
                            txtContType2.Text = "COMPANY"
                            txtContType3.Text = "RESIDENTIAL"
                            txtContType4.Text = "PERSON"
                        Else
                            txtContType1.Text = "RESIDENTIAL"
                            txtContType2.Text = "PERSON"
                            txtContType3.Text = "CORPORATE"
                            txtContType4.Text = "COMPANY"
                        End If


                        'txtclientid.Text = Session("clientid")
                        txtCustName.Text = Session("custname")
                        txtContactPerson.Text = Session("contactperson")
                        txtConPerMobile.Text = Session("conpermobile")
                        txtAccCode.Text = Session("acctcode")
                        txtTelephone.Text = Session("telephone")
                        txtFax.Text = Session("fax")
                        txtPostal.Text = Session("offpostal")
                        txtOfficeAddress.Text = Session("sevaddress")
                        ddlLocateGrp.Text = Session("locategrp")
                        ddlSalesman.Text = Session("salesman")

                        txtAccountId.Text = Session("accountid")
                        txtCustName.Text = Session("custname")
                        chkInactive.Checked = Session("inactive")

                        If chkInactive.Checked = True Then
                            btnADD.Enabled = False
                            btnADD.ForeColor = System.Drawing.Color.Gray
                        End If
                        If String.IsNullOrEmpty(Session("contractgroup")) = False Then
                            ddlContractGrp.Text = Session("contractgroup")
                        Else
                            ddlContractGrp.SelectedIndex = 0
                        End If

                        FindCategoryId()
                        'FindDuration()
                        Dim lindustry As String
                        lindustry = Session("industry")
                        txtIndustrySession.Text = lindustry
                        txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                        txtContractGroupSession.Text = Session("contractgroup")
                        txtCompanyGroupSession.Text = Session("companygroup")
                        txtSalesmanSession.Text = Session("salesman")


                        If String.IsNullOrEmpty(Session("industry")) = False Then
                            'ddlIndustry.SelectedIndex = -1
                            '    ddlIndustry.Items.Clear()
                            '    ddlIndustry.DataValueField = lindustry
                            '     ddlIndustry.DataTextField = lindustry
                            ddlIndustry.Text = lindustry
                            ddlMarketSegmentID.Text = Session("marketsegmentidsvc")
                            'FindMarketSegmentID()
                        End If


                        If String.IsNullOrEmpty(Session("contractgroup")) = False Then
                            ddlContractGrp.Text = txtContractGroupSession.Text
                        End If

                        If String.IsNullOrEmpty(Session("companygroup")) = False Then
                            'ddlCompanyGrp.Text = Session("companygroup")
                            ddlCompanyGrp.Text = txtCompanyGroupSession.Text
                        End If


                        txtClient.Enabled = False
                        ddlContactType.Enabled = False
                        ddlCompanyGrp.Enabled = False
                        txtCustName.Enabled = False
                        txtAccCode.Enabled = False
                        txtPostal.Enabled = False
                        'btnClient.Visible = False
                        'ddlSalesman.Enabled = False
                        txtAccountId.Enabled = False



                        txtbilladdress1session.Text = Session("billaddress1")
                        txtbillstreetsession.Text = Session("billstreet")
                        txtbillbuildingsession.Text = Session("billbuilding")
                        txtbillcountrysession.Text = Session("billcountry")
                        txtbillpostalsession.Text = Session("billpostal")

                        If (String.IsNullOrEmpty(Session("billaddress1")) = True) Then
                            txtBillingAddress.Text = ""
                        Else
                            txtBillingAddress.Text = Session("billaddress1")
                        End If

                        If (String.IsNullOrEmpty(Session("billstreet")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billstreet")
                        End If

                        If (String.IsNullOrEmpty(Session("billbuilding")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billbuilding")
                        End If

                        If (String.IsNullOrEmpty(Session("billcountry")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billcountry")
                        End If

                        If (String.IsNullOrEmpty(Session("billpostal")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billpostal")
                        End If

                        txtBillingAdressSession.Text = txtBillingAddress.Text

                        txtcontractfrom.Text = Session("contractfrom")
                        txtLocationSession.Text = Session("location")

                        AccessControl()

                        If String.IsNullOrEmpty(txtLocationSession.Text) = True Then
                            txtLocation.SelectedIndex = 0
                        Else
                            txtLocation.Text = txtLocationSession.Text
                        End If


                        If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                            Dim ContractClientIdLocation As String = ""

                            ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                            ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                            ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                            ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                            ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R') or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                            SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                            GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                            GridSelected = "SQLDSContractClientIdLocation"
                            txt.Text = ContractClientIdLocation
                        Else
                            Dim ContractClientId As String = ""

                            ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                            ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                            SQLDSContractClientId.SelectCommand = ContractClientId

                            GridView1.DataSourceID = "SQLDSContractClientId"
                            GridSelected = "SQLDSContractClientId"
                            txt.Text = ContractClientId
                        End If

                        btnMultiplePO.Visible = False
                        btnClient0.Visible = False
                        btnClient2.Visible = False
                        btnClient3.Visible = False
                        btnClient4.Visible = False
                        btnClient8.Visible = False
                        btnContractGroupDistribution.Visible = False



                        If GridView1.Rows.Count > 0 Then
                            txtMode.Text = "View"
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                            PopulateRecord()
                            btnRecalculate_Click(sender, e)
                            GridView1.SelectedIndex = 0
                        End If

                        ''
                        Session.Remove("contractfrom")
                        Session.Remove("clientid")
                        'Session.Remove("contracttype")
                        Session.Remove("companygroup")
                        Session.Remove("clientid")
                        Session.Remove("custname")
                        Session.Remove("contactperson")
                        Session.Remove("conpermobile")
                        Session.Remove("acctcode")
                        Session.Remove("telephone")
                        Session.Remove("fax")
                        Session.Remove("postal")
                        Session.Remove("sevaddress")
                        Session.Remove("locategrp")
                        Session.Remove("salesman")
                        Session.Remove("accountid")
                        Session.Remove("sevaddress")
                        Session.Remove("inactive")
                        Session.Remove("industry")
                        Session.Remove("contractgroup")
                        Session.Remove("location")


                        Session.Remove("billaddress1")
                        Session.Remove("billstreet")
                        Session.Remove("billbuiling")
                        Session.Remove("billcity")
                        Session.Remove("billcountry")
                        Session.Remove("billpostal")
                    ElseIf String.IsNullOrEmpty(Session("contractdetailfrom")) = False Then

                        '''''''''''''''''''
                        txtContractNo.Text = Session("contractno")
                        txtRcno.Text = Session("rcno")
                        txtcontractfrom.Text = Session("contractdetailfrom")

                        '''''''''''''''''''''''
                        If String.IsNullOrEmpty(Session("accountid")) = False Then
                            txtAccountIdSearch.Text = Session("accountid")
                        End If

                        If String.IsNullOrEmpty(Session("searchstatus")) = False Then
                            txtSearch1Status.Text = Session("searchstatus")
                        End If

                        If String.IsNullOrEmpty(Session("searchteam")) = False Then
                            txtServiceAddressSearch.Text = Session("searchteam")
                        End If

                        'If String.IsNullOrEmpty(Session("searchincharge")) = False Then
                        '    txtInchargeSearch.Text = Session("searchincharge")
                        'End If

                        If String.IsNullOrEmpty(Session("searchaccountid")) = False Then
                            txtAccountIdSearch.Text = Session("searchaccountid")
                        End If

                        If String.IsNullOrEmpty(Session("searchclientname")) = False Then
                            txtClientNameSearch.Text = Session("searchclientname")
                        End If


                        '''''''''''''''''''''''

                        txt.Text = Session("gridsqlcontract")
                        SQLDSContract.SelectCommand = Session("gridsqlcontract")
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = Session("gridsqlcontract")
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        ''''''''''''''''''''''''''''
                        'txtContractNo.Text = Session("contractno")
                        'txtRcno.Text = Session("rcno")
                        'txtcontractfrom.Text = Session("contractdetailfrom")
                        'txtAccountIdSearch.Text = Session("accountid")
                        'GridView1.Visible = True
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = txt.Text
                        'GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")
                        Session.Remove("accountid")
                        Session.Remove("contractdate")
                        Session.Remove("contracttype")
                        Session.Remove("client")
                        Session.Remove("custname")
                        Session.Remove("contact")
                        Session.Remove("servstart")
                        Session.Remove("servend")
                        Session.Remove("agreedvalue")
                        Session.Remove("discamt")
                        Session.Remove("status")
                        'Session.Remove("accountid")
                        'Session("contractdetailfrom") = ""
                        'Session("contractno") = ""
                        'GridSelected = "SQLDSContractNo"
                        'GridSelected = "SQLDSContract"
                    ElseIf String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                        'From Service Schedule

                        '''''''''''''''''''''
                        txtclientid.Text = Session("accountid")

                        lblAccountIdContact.Visible = True
                        lblAccountIdContact1.Text = Session("accountid")

                        lblAccountNameContact.Visible = True
                        lblAccountNameContact1.Text = Session("custname")

                        If String.IsNullOrEmpty(Session("locationid")) = False Then
                            lblAccountIdContactLocation.Visible = True
                            lblAccountIdContactLocation1.Text = Session("locationid")
                            btnClient.Visible = False
                        End If

                        If String.IsNullOrEmpty(Session("sevaddress")) = False Then
                            lblAccountIdServiceAddress.Visible = True
                            lblAccountIdServiceAddress1.Text = Session("sevaddress")
                        End If

                        ''''''''''''''''
                        txtContractNo.Text = Session("contractno")
                        txtRcno.Text = Session("rcno")
                        txtcontractfrom.Text = Session("contractdetailfrom")


                        txtIndustrySession.Text = Session("industry")
                        txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                        txtContractGroupSession.Text = Session("contractgroup")
                        txtCompanyGroupSession.Text = Session("companygroup")
                        txtSalesmanSession.Text = Session("salesman")

                        txtbilladdress1session.Text = Session("billaddress1")
                        txtbillstreetsession.Text = Session("billstreet")
                        txtbillbuildingsession.Text = Session("billbuilding")
                        txtbillcountrysession.Text = Session("billcountry")
                        txtbillpostalsession.Text = Session("billpostal")

                        txt.Text = Session("gridsqlcontract")


                        SQLDSContract.SelectCommand = Session("gridsqlcontract")
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = Session("gridsqlcontract")
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        'GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")

                        Session.Remove("contractdate")
                        Session.Remove("contracttype")
                        Session.Remove("client")
                        Session.Remove("custname")
                        Session.Remove("contact")
                        Session.Remove("servstart")
                        Session.Remove("servend")
                        Session.Remove("agreedvalue")
                        Session.Remove("discamt")
                        Session.Remove("status")
                        Session.Remove("accountid")

                        Session.Remove("industry")
                        Session.Remove("marketsegmentidsvc")
                        Session.Remove("contractgroup")
                        Session.Remove("companygroup")
                        Session.Remove("salesman")
                        Session.Remove("billaddress1")
                        Session.Remove("billstreet")
                        Session.Remove("billbuilding")
                        Session.Remove("billcountry")
                        Session.Remove("billpostal")

                        Session.Remove("contactperson")
                        Session.Remove("conpermobile")
                        Session.Remove("acctcode")
                        Session.Remove("telephone")
                        Session.Remove("fax")
                        Session.Remove("offpostal")
                        Session.Remove("sevaddress")
                        Session.Remove("locategrp")
                        Session.Remove("salesman")
                        Session.Remove("location")

                        ''Session("serviceschedulefrom") = ""
                        ''Session("contractno") = ""
                        'GridSelected = "SQLDSContractNo"
                        GridSelected = "SQLDSContractNo"

                    ElseIf String.IsNullOrEmpty(Session("servicefrom")) = False Then
                        'Session("servicefrom") = "contract"

                        txtIndustrySession.Text = Session("industry")
                        txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                        txtContractGroupSession.Text = Session("contractgroup")
                        txtCompanyGroupSession.Text = Session("companygroup")
                        txtSalesmanSession.Text = Session("salesman")

                        txtbilladdress1session.Text = Session("billaddress1")
                        txtbillstreetsession.Text = Session("billstreet")
                        txtbillbuildingsession.Text = Session("billbuilding")
                        txtbillcountrysession.Text = Session("billcountry")
                        txtbillpostalsession.Text = Session("billpostal")

                        If String.IsNullOrEmpty(Session("locationid")) = False Then
                            lblAccountIdContactLocation.Visible = True
                            lblAccountIdContactLocation1.Text = Session("locationid")
                            btnClient.Visible = False
                        End If

                        If String.IsNullOrEmpty(Session("sevaddress")) = False Then
                            lblAccountIdServiceAddress.Visible = True
                            lblAccountIdServiceAddress1.Text = Session("sevaddress")
                        End If

                        AccessControl()

                        If String.IsNullOrEmpty(Session("lblaccountid")) = False Then
                            lblAccountIdContact.Visible = True
                            lblAccountIdContact1.Text = Session("lblaccountid")

                            txtclientid.Text = Session("lblaccountid")
                            txtClient.Text = Session("clientid")
                            txtcontractfrom.Text = Session("contractfrom")

                            lblAccountNameContact.Visible = True
                            lblAccountNameContact1.Text = Session("custname")

                            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                                Dim ContractClientIdLocation As String = ""

                                ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblContract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                                ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                                'ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"
                                ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "'))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                'SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                                'GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                                'GridSelected = "SQLDSContractClientIdLocation"

                                'SQLDSContract.SelectCommand = ContractClientIdLocation
                                ''SQLDSContract.SelectCommand = Session("gridsqlcontract")
                                'GridView1.DataSourceID = "SqlDSContract"
                                'GridView1.DataBind()

                                SQLDSContract.SelectCommand = Session("gridsqlcontract")
                                GridView1.DataSourceID = "SqlDSContract"
                                GridView1.DataBind()

                                GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                                GridSelected = "SQLDSContractNo"
                            Else
                                Dim ContractClientId As String = ""

                                ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientId.SelectCommand = ContractClientId

                                GridView1.DataSourceID = "SQLDSContractClientId"
                                GridSelected = "SQLDSContractClientId"
                            End If

                        Else

                            If String.IsNullOrEmpty(Session("contractno")) = False Then

                                txtContractNo.Text = Session("contractno")
                                txtRcno.Text = Session("rcno")
                                txtcontractfrom.Text = Session("contractfrom")

                                txt.Text = Session("gridsqlcontract")
                                SQLDSContract.SelectCommand = txt.Text
                                SQLDSContract.DataBind()

                                GridView1.DataSourceID = "SQLDSContract"
                                GridView1.DataBind()
                                GridView1.Visible = True
                                GridSelected = "SQLDSContract"

                                GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                            End If


                        End If
                        Session.Remove("servicefrom")

                        Session.Remove("industry")
                        Session.Remove("marketsegmentidsvc")
                        Session.Remove("contractgroup")
                        Session.Remove("companygroup")
                        Session.Remove("salesman")
                        Session.Remove("billaddress1")
                        Session.Remove("billstreet")
                        Session.Remove("billbuilding")
                        Session.Remove("billcountry")
                        Session.Remove("billpostal")

                        Session.Remove("contactperson")
                        Session.Remove("conpermobile")
                        Session.Remove("acctcode")
                        Session.Remove("telephone")
                        Session.Remove("fax")
                        Session.Remove("offpostal")
                        Session.Remove("sevaddress")
                        Session.Remove("locategrp")
                        Session.Remove("salesman")
                        Session.Remove("location")
                        ''''''''''''''''''''''''''''''''''''''''''
                    ElseIf String.IsNullOrEmpty(Session("teamfrom")) = False Then

                        If String.IsNullOrEmpty(Session("lblaccountid")) = False Then
                            lblAccountIdContact.Visible = True
                            lblAccountIdContact1.Text = Session("lblaccountid")

                            txtclientid.Text = Session("lblaccountid")
                            txtClient.Text = Session("clientid")
                            txtcontractfrom.Text = Session("contractfrom")


                            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                                Dim ContractClientIdLocation As String = ""

                                ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblContract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                                ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                                ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                                GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                                GridSelected = "SQLDSContractClientIdLocation"
                            Else
                                Dim ContractClientId As String = ""

                                ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientId.SelectCommand = ContractClientId

                                GridView1.DataSourceID = "SQLDSContractClientId"
                                GridSelected = "SQLDSContractClientId"
                            End If

                        Else

                            If String.IsNullOrEmpty(Session("contractno")) = False Then

                                txtContractNo.Text = Session("contractno")
                                txtRcno.Text = Session("rcno")
                                txtcontractfrom.Text = Session("contractfrom")

                                txt.Text = Session("gridsqlcontract")
                                SQLDSContract.SelectCommand = txt.Text
                                SQLDSContract.DataBind()

                                GridView1.DataSourceID = "SQLDSContract"
                                GridView1.DataBind()
                                GridView1.Visible = True
                                GridSelected = "SQLDSContract"

                                GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                                If GridView1.Rows.Count > 0 Then
                                    GridView1.SelectedIndex = 0
                                End If
                            End If

                        End If
                        Session("teamfrom") = ""
                        'BtnTeam_Click(sender, e)
                        'sender As Object, e As ImageClickEventArgs
                        'BtnTeam_Click(sender As new Object(), e As ImageClickEventArgs)
                        tb1.ActiveTabIndex = 1

                        AddHandler BtnTeam.Click, AddressOf BtnTeam_Click
                        mdlPopUpTeam.Show()



                        '''''''''''''''''''''''''''''''''''''''''
                    Else
                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")
                        Session.Remove("serviceschedulefrom")
                        'Session("serviceschedulefrom") = ""
                        'Session("contractno") = ""
                        'Session("contractdetailfrom") = ""
                        'btnADD_Click(sender, e)
                    End If
                End If
                'txt.Text = SQLDSContract.SelectCommand

                conn.Close()
                conn.Dispose()
                commandServiceRecordMasterSetup.Dispose()

            Else
                'If tb1.ActiveTabIndex = 1 Then
                '    GridView1.Visible = False
                'Else
                '    GridView1.Visible = True
                'End If

                mdlContractGroupDistribution.Hide()
                mdlDueForExtension.Hide()
                mdlDurationType.Hide()
                mdlEditAgreeValueSave.Hide()
                mdlEditAgreeValueSaveNoChange.Hide()
                mdlEditContract.Hide()
                mdlEditPONOSave.Hide()
                mdlExcludeFromBatchPriceEdit.Hide()
                mdlGSTInclusive.Hide()


                mdlPastDueForExtension.Hide()
                mdlPopupExtendContract.Hide()
                mdlPopUpTeam.Hide()
                mdlPopupZeroValue.Hide()
                mdlTerminateExpiredContracts.Hide()
                mdlViewContractPriceHistory.Hide()

                mdlViewEditHistory.Hide()

                mdlPopupAgreeValue.Hide()

                If txtIsPopup.Text = "Team" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpTeam.Show()
                ElseIf txtIsPopup.Text = "Client" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient.Show()
                    'ElseIf txtIsPopup.Text = "Location" Then
                    '    txtIsPopup.Text = "N"

                    '    imgBtnService_ModalPopupExtender.Show()
                ElseIf txtIsPopup.Text = "Distribution" Then
                    mdlContractGroupDistribution.Show()
                    'ElseIf txtIsPopup.Text = "NCR" Then
                    '    txtIsPopup.Text = "N"
                    '    mdlPopupNCR.Show()
                End If

                'ModalPopupExtender5.Show()
                If txtIsPopupChSt.Text = "ContractNo" Then
                    ModalPopupExtender5.Show()
                End If
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
            End If

            tb1.Visible = True
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Page_Load", ex.Message.ToString, Left(txt.Text, 1500))
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_DataBound(sender As Object, e As EventArgs) Handles GridView1.DataBound
        Try
            'If String.IsNullOrEmpty(Session("servicefrom")) = False Then
            '    If (isInPage = False) Then

            '        GridView1.PageIndex = GridView1.PageIndex + 1
            '        GridView1.DataBind()
            '    End If

            'End If

            'If String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
            '    If (isInPage = False) Then

            '        GridView1.PageIndex = GridView1.PageIndex + 1
            '        GridView1.DataBind()
            '    End If
            'End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_DataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then

                Dim ContractEndDate As Date
                Dim CategoryId As String
                CategoryId = ""


                If e.Row.Cells(14).Text.Trim = "F" Then
                    e.Row.Cells(14).Text = "FIXED"
                Else
                    e.Row.Cells(14).Text = "CONTINUOUS"
                End If


                '08.08.22
                'If Val(txtCountContractDetail.Text) = 0 Then
                '    e.Row.BackColor = Color.LightYellow
                'End If

                Dim commandContractDet As MySqlCommand = New MySqlCommand
                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                commandContractDet.CommandType = CommandType.Text
                commandContractDet.CommandText = "SELECT count(ContractNo) as ContractDetails FROM tblContractDet where ContractNo = '" & e.Row.Cells(7).Text & "'"
                commandContractDet.Connection = conn

                Dim drContractDet As MySqlDataReader = commandContractDet.ExecuteReader()
                Dim dtContractDet As New DataTable
                dtContractDet.Load(drContractDet)

                If dtContractDet.Rows.Count > 0 Then
                    If Val(dtContractDet.Rows(0)("ContractDetails").ToString).ToString = 0 Then
                        e.Row.BackColor = Color.LightPink
                    End If
                End If

                'If Val(dtContractDet.Rows(0)("ContractDetails").ToString).ToString = 0 Then
                '    mdlNoContractDetail.Show()
                'End If
                commandContractDet.Dispose()
                dtContractDet.Dispose()
                drContractDet.Dispose()

                '08.08.22

                If e.Row.Cells(19).Text.Trim <> "&nbsp;" Then
                    If String.IsNullOrEmpty(e.Row.Cells(19).Text.Trim) = False Then
                        ContractEndDate = e.Row.Cells(19).Text.Trim
                    End If

                    If String.IsNullOrEmpty(e.Row.Cells(25).Text.Trim) = False Then
                        CategoryId = e.Row.Cells(25).Text.Trim
                    End If

                    If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                        If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                            isInPage = True

                            txtSelectedRow.Text = e.Row.RowIndex
                        End If
                    End If


                    If CategoryId = "CONTRACT" And IsDate(ContractEndDate) = True Then
                        Dim noofdays As Integer
                        noofdays = DateDiff(DateInterval.Day, Now(), ContractEndDate)

                        If noofdays < 0 Then
                            e.Row.ForeColor = Color.Red
                        End If

                        If noofdays > 0 And noofdays < 30 Then
                            e.Row.ForeColor = Color.Green
                        End If

                        If noofdays > 30 And noofdays < 60 Then
                            e.Row.ForeColor = Color.Blue
                        End If
                    End If
                End If

                'If e.Row.Cells(17).Text.Trim <> "&nbsp;" Then
                '    If String.IsNullOrEmpty(e.Row.Cells(17).Text.Trim) = False Then
                '        ContractEndDate = e.Row.Cells(17).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(e.Row.Cells(23).Text.Trim) = False Then
                '        CategoryId = e.Row.Cells(23).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                '        If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                '            isInPage = True

                '            txtSelectedRow.Text = e.Row.RowIndex
                '        End If
                '    End If

                '    If CategoryId = "CONTRACT" And IsDate(ContractEndDate) = True Then
                '        Dim noofdays As Integer
                '        noofdays = DateDiff(DateInterval.Day, Now(), ContractEndDate)

                '        If noofdays < 0 Then
                '            e.Row.ForeColor = Color.Red
                '        End If

                '        If noofdays > 0 And noofdays < 30 Then
                '            e.Row.ForeColor = Color.Green
                '        End If

                '        If noofdays > 30 And noofdays < 60 Then
                '            e.Row.ForeColor = Color.Blue
                '        End If
                '    End If
                'End If

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_RowDataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
       

        Try
            If txtMode.Text = "NEW" Or txtMode.Text = "EDIT" Then
                lblAlert.Text = "CANNOT SELECT RECORD IN ADD/EDIT MODE. SAVE OR CANCEL TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If
            EnableControls()

            txtIsPopup.Text = "N"
            txtMode.Text = "View"
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()


            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'btnSvcEdit.Enabled = False
            'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            'btnSvcDelete.Enabled = False
            'btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            'btnPrint.Enabled = True
            'btnPrint.ForeColor = System.Drawing.Color.Black

            'txtContractStart.ForeColor = Drawing.Color.Black
            'txtServStart.ForeColor = Drawing.Color.Black

            'btnClient0.Visible = True
            'btnClient1.Visible = True
            'btnClient2.Visible = True
            'btnClient3.Visible = True
            'SASI - 17/04/2017 - COMMISSION 

            MakeCommNull()
            EnablecommControls()
            MakeNotesNull()
            EnableNotesControls()

            MakeRateScheduleNull()
            'EnableRateScheduleControls()

            'grvContractDetail.DataBind()

            'SASI - END
            Dim editindex As Integer = GridView1.SelectedIndex

            If String.IsNullOrEmpty(Session("contractdetailfrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("servicefrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("teamfrom")) = False Then
                rcno = Session("rcno")
            Else
                rcno = DirectCast(GridView1.Rows(editindex).FindControl("Label1"), Label).Text
            End If

            If String.IsNullOrEmpty(rcno) = True Then
                txtRcno.Text = "0"
            Else
                txtRcno.Text = rcno.ToString()
            End If

            rcno = ""
            Session.Add("contractdetailfrom", "")
            Session.Add("serviceschedulefrom", "")
            Session.Add("servicefrom", "")

            Session.Add("teamfrom", "")

            ddlServiceTypeID.SelectedIndex = -1
            txtCategoryID.Text = ""
            ddlPortfolioYN.SelectedIndex = -1
            ddlProjectCode.SelectedIndex = -1

            PopulateRecord()

            btnRecalculate_Click(sender, e)

            'FindLastServiceDate()
            If String.IsNullOrEmpty(txtSelectedRow.Text) = False Then
                If String.IsNullOrEmpty(Session("servicefrom")) = False Then
                    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                End If

                If String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                    Session("serviceschedulefrom") = ""
                End If
            End If


            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> HideElements();</Script>", False)
            ' '''''''''''''''''''''''''''''''''''''
            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'btnSvcEdit.Enabled = False
            'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            'btnSvcDelete.Enabled = False
            'btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            'btnPrint.Enabled = True
            'btnPrint.ForeColor = System.Drawing.Color.Black

            'txtContractStart.ForeColor = Drawing.Color.Black
            'txtServStart.ForeColor = Drawing.Color.Black

            'btnClient0.Visible = True
            'btnClient1.Visible = True
            'btnClient2.Visible = True
            'btnClient3.Visible = True

            ' '''''''''''''''''''''''''''''''''''''''

            'btnEdit.Enabled = True
            'btnEdit.ForeColor = System.Drawing.Color.Black

            'btnCopy.Enabled = True
            'btnCopy.ForeColor = System.Drawing.Color.Black

            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black
            ''btnQuit.Enabled = True
            ''btnQuit.ForeColor = System.Drawing.Color.Black


            'btnContractDetail.Enabled = True
            'btnContractDetail.ForeColor = System.Drawing.Color.Black

            'btnTerminate.Enabled = True
            'btnTerminate.ForeColor = System.Drawing.Color.Black

            'btnEarlyCompletion.Enabled = True
            'btnEarlyCompletion.ForeColor = System.Drawing.Color.Black

            'btnContractRenewal.Enabled = True
            'btnContractRenewal.ForeColor = System.Drawing.Color.Black

            'btnCancelByCompany.Enabled = True
            'btnCancelByCompany.ForeColor = System.Drawing.Color.Black

            ''btnDelete.ForeColor = System.Drawing.Color.Black

            'btnChangeStatus.Enabled = True
            'btnChangeStatus.ForeColor = System.Drawing.Color.Black

            'btnRevision.Enabled = True
            'btnRevision.ForeColor = System.Drawing.Color.Black


            'btnServiceRecords.Enabled = True

            'If txtGS.Text = "P" Then
            '    btnServiceSchedule.Enabled = False
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnServiceSchedule.Enabled = True
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            '    'btnSave.Enabled = True
            'End If

            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            '    AccessControl()
            'End If

            'FindIsInActiveCustomer()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub PopulateRecord()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            ddlServiceTypeID.SelectedIndex = -1
            txtCategoryID.Text = ""
            ddlPortfolioYN.SelectedIndex = -1
            ddlProjectCode.SelectedIndex = -1

            ddlContactType.SelectedIndex = -1
            ddlAgreementType.SelectedIndex = -1
            ddlCompanyGrp.SelectedIndex = -1
            ddlScheduler.SelectedIndex = -1
            ddlContractGrp.SelectedIndex = -1
            ddlBillingFreq.SelectedIndex = -1

            ddlSearchCompanyGroup.SelectedIndex = -1
            ddlSearchContactType.SelectedIndex = -1
            ddlSearchContractGroup.SelectedIndex = -1
            ddlSearchInChargeId.SelectedIndex = -1
            ddlSearchLocationGroup.SelectedIndex = -1
            ddlSearchRenewalStatus.SelectedIndex = -1
            ddlSearchSalesman.SelectedIndex = -1
            ddlSearchStatus.SelectedIndex = -1
            ddlSearchScheduler.SelectedIndex = -1
            ddlWarrantyFrequency.SelectedIndex = -1

            ddlStatusChSt.SelectedIndex = -1
            ddlTerminationCode.SelectedIndex = -1
            ddlContractCode.SelectedIndex = -1
            ddlRenewalStatus.SelectedIndex = -1
            ddlCompanyGroupEdit.SelectedIndex = -1
            txtLocation.SelectedIndex = -1

            ddlOnHoldCodeChSt.SelectedIndex = -1

            lblIsInActiveAccountId.Text = ""
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Dim sql As String
            'sql = ""
            'sql = "Select AccountID, Status, RenewalSt, NotedSt, GSt, ContractNo, ContractDate, CustName, InChargeId, AgreeValue, ContractValue, StartDate, EndDate, ActualEnd, "
            'sql = sql + "Scheduler, SalesMan, ProspectId, ContactType, CustCode, CustAddr, Duration, DurationMs, ServiceNo, ServiceBal, ServiceAmt, HourNo, HourBal, HourAmt, "
            'sql = sql + "CallNo, CallBal, CallAmt, ResponseHours, CancelCharges, CompensatePct, CompensateMax, Notes, Comments, ServiceNoActual, HourNoActual, CallNoActual, MinDuration,"
            'sql = sql + "OContractNo, RenewalContractNo, RenewalDate, UnitNo, UnitBal, UnitAmt, UnitNoActual, settle, YourReference, ServiceStart, ContractGroup, MainContractNo, "
            'sql = sql + "ServiceEnd, TimeIn, TimeOut, WarrantyStart, WarrantyEnd, ContractValue, PerServiceValue, Disc_Percent, DiscAmt, BillingFrequency, Support, TeamID, Postal,"
            'sql = sql + "LocateGrp, ContactPersonMobile, OurReference, PrintingRemarks, AmtCompleted, AmtBalance, ValuePerMonth, BillingAmount, AllocatedSvcTime, Remarks,"
            'sql = sql + "QuotePrice, QuoteUnitMS, CompanyGroup, GSTNos, ScheduleType, Warranty, WarrantyDuration, RequireInspecton, InspectionFrequency, InspectionStart, InspectionEnd,"
            'sql = sql + "ComputationMethod, ContractNo, CustName, TotalArea, CompletedArea, BalanceArea, RetentionPerc, RetentionValue, RetentionClaimDate, PONo, ServiceAddress, BillAddress1,"
            'sql = sql + "TerminationCode, TerminationDescription, SalesCommissionPerc, SalesCommissionAmt, TechCommissionPerc, TechCommissionAmt, Supervisor, ServiceTypeID,ServiceTypeDescription,CategoryID,PortfolioYN,PortfolioValue,MarketSegmentID,industry,  "
            'sql = sql + "ProjectCode, ProjectName, BaitStationTotal, BaitStationInstalled,  BaitStationBalance, WarrantyBillingFrequency, WarrantyBillingAmount, ActualServiceStartDate, AgreementType, commentsStatus, LastBillDate, Location  FROM tblcontract "
            'sql = sql + "where rcno = " & Convert.ToInt64(txtRcno.Text)


            SqlDSContractDet.SelectCommand = ""
            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()

            SqlDSNotesMaster.SelectCommand = ""
            gvNotesMaster.DataSourceID = "SqlDSNotesMaster"
            gvNotesMaster.DataBind()

            MakeNotesNull()

            MakeRateScheduleNull()

            SqlDSScheduleType.SelectCommand = ""
            gvRateSchedule.DataSourceID = "SqlDSScheduleType"
            gvRateSchedule.DataBind()
            ''''''''''''''''''''''''''
            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.StoredProcedure
            'command1.CommandText = "SelectContractRecordSingaporeNew2"
            command1.CommandText = "SelectContractRecordSingaporeNew3"
            command1.Connection = conn

            ''InsertIntoTblWebEventLog("PopulateRecord", "1", "")

            'InsertIntoTblWebEventLog("PopulateRecord", "1", "1", "1")

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION POPULATERECORD", ex.Message.ToString, txtContractNo.Text)

            command1.Parameters.Clear()
            command1.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))


            command1.Parameters.Add(New MySqlParameter("pr_AccountID", MySqlDbType.String))
            command1.Parameters("pr_AccountID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_ActualEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualServHrs", MySqlDbType.String))
            command1.Parameters("pr_ActualServHrs").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualServiceStartDate", MySqlDbType.String))
            command1.Parameters("pr_ActualServiceStartDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualStaff", MySqlDbType.String))
            command1.Parameters("pr_ActualStaff").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AgreementType", MySqlDbType.String))
            command1.Parameters("pr_AgreementType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AgreeValue", MySqlDbType.String))
            command1.Parameters("pr_AgreeValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AllocatedSvcTime", MySqlDbType.String))
            command1.Parameters("pr_AllocatedSvcTime").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AmtBalance", MySqlDbType.String))
            command1.Parameters("pr_AmtBalance").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AmtCompleted", MySqlDbType.String))
            command1.Parameters("pr_AmtCompleted").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationBalance", MySqlDbType.String))
            command1.Parameters("pr_BaitStationBalance").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationInstalled", MySqlDbType.String))
            command1.Parameters("pr_BaitStationInstalled").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationTotal", MySqlDbType.String))
            command1.Parameters("pr_BaitStationTotal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BalanceArea", MySqlDbType.String))
            command1.Parameters("pr_BalanceArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillAddress1", MySqlDbType.String))
            command1.Parameters("pr_BillAddress1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillContactPerson", MySqlDbType.String))
            command1.Parameters("pr_BillContactPerson").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillFax", MySqlDbType.String))
            command1.Parameters("pr_BillFax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillingAmount", MySqlDbType.String))
            command1.Parameters("pr_BillingAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillingFrequency", MySqlDbType.String))
            command1.Parameters("pr_BillingFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillMobile", MySqlDbType.String))
            command1.Parameters("pr_BillMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillTelephone", MySqlDbType.String))
            command1.Parameters("pr_BillTelephone").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallAmt", MySqlDbType.String))
            command1.Parameters("pr_CallAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallBal", MySqlDbType.String))
            command1.Parameters("pr_CallBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallNo", MySqlDbType.String))
            command1.Parameters("pr_CallNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallNoActual", MySqlDbType.String))
            command1.Parameters("pr_CallNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CancelCharges", MySqlDbType.String))
            command1.Parameters("pr_CancelCharges").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CategoryID", MySqlDbType.String))
            command1.Parameters("pr_CategoryID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Comments", MySqlDbType.Text))
            command1.Parameters("pr_Comments").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CommentsStatus", MySqlDbType.String))
            command1.Parameters("pr_CommentsStatus").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompanyGroup", MySqlDbType.String))
            command1.Parameters("pr_CompanyGroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompensateMax", MySqlDbType.String))
            command1.Parameters("pr_CompensateMax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompensatePct", MySqlDbType.String))
            command1.Parameters("pr_CompensatePct").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompletedArea", MySqlDbType.String))
            command1.Parameters("pr_CompletedArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ComputationMethod", MySqlDbType.String))
            command1.Parameters("pr_ComputationMethod").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact", MySqlDbType.String))
            command1.Parameters("pr_Contact").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactPersonMobile", MySqlDbType.String))
            command1.Parameters("pr_ContactPersonMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactType", MySqlDbType.String))
            command1.Parameters("pr_ContactType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractDate", MySqlDbType.DateTime))
            command1.Parameters("pr_ContractDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractGroup", MySqlDbType.String))
            command1.Parameters("pr_ContractGroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractValue", MySqlDbType.String))
            command1.Parameters("pr_ContractValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CreatedBy", MySqlDbType.String))
            command1.Parameters("pr_CreatedBy").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CreatedOn", MySqlDbType.DateTime))
            command1.Parameters("pr_CreatedOn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddr", MySqlDbType.String))
            command1.Parameters("pr_CustAddr").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustCode", MySqlDbType.String))
            command1.Parameters("pr_CustCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustName", MySqlDbType.String))
            command1.Parameters("pr_CustName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate1", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate2", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate3", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService1", MySqlDbType.String))
            command1.Parameters("pr_DayService1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService2", MySqlDbType.String))
            command1.Parameters("pr_DayService2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService3", MySqlDbType.String))
            command1.Parameters("pr_DayService3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService4", MySqlDbType.String))
            command1.Parameters("pr_DayService4").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport1", MySqlDbType.String))
            command1.Parameters("pr_DayTransport1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport2", MySqlDbType.String))
            command1.Parameters("pr_DayTransport2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport3", MySqlDbType.String))
            command1.Parameters("pr_DayTransport3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate1", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate2", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate3", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Disc_Percent", MySqlDbType.String))
            command1.Parameters("pr_Disc_Percent").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DiscAmt", MySqlDbType.String))
            command1.Parameters("pr_DiscAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Duration", MySqlDbType.String))
            command1.Parameters("pr_Duration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DurationMs", MySqlDbType.String))
            command1.Parameters("pr_DurationMs").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndDate", MySqlDbType.DateTime))
            command1.Parameters("pr_EndDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate1", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate2", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate3", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport1", MySqlDbType.String))
            command1.Parameters("pr_EndTransport1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport2", MySqlDbType.String))
            command1.Parameters("pr_EndTransport2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport3", MySqlDbType.String))
            command1.Parameters("pr_EndTransport3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate1", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate2", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate3", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EntryDate", MySqlDbType.DateTime))
            command1.Parameters("pr_EntryDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Fax", MySqlDbType.String))
            command1.Parameters("pr_Fax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_GSt", MySqlDbType.String))
            command1.Parameters("pr_GSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_GSTNos", MySqlDbType.String))
            command1.Parameters("pr_GSTNos").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourAmt", MySqlDbType.String))
            command1.Parameters("pr_HourAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourBal", MySqlDbType.String))
            command1.Parameters("pr_HourBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourNo", MySqlDbType.String))
            command1.Parameters("pr_HourNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourNoActual", MySqlDbType.String))
            command1.Parameters("pr_HourNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InChargeId", MySqlDbType.String))
            command1.Parameters("pr_InChargeId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Industry", MySqlDbType.String))
            command1.Parameters("pr_Industry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_InspectionEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionFrequency", MySqlDbType.String))
            command1.Parameters("pr_InspectionFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionStart", MySqlDbType.DateTime))
            command1.Parameters("pr_InspectionStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastBillDate", MySqlDbType.DateTime))
            command1.Parameters("pr_LastBillDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastModifiedBy", MySqlDbType.String))
            command1.Parameters("pr_LastModifiedBy").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastModifiedOn", MySqlDbType.DateTime))
            command1.Parameters("pr_LastModifiedOn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LocateGrp", MySqlDbType.String))
            command1.Parameters("pr_LocateGrp").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Location", MySqlDbType.String))
            command1.Parameters("pr_Location").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MainContractNo", MySqlDbType.String))
            command1.Parameters("pr_MainContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MarketSegmentID", MySqlDbType.String))
            command1.Parameters("pr_MarketSegmentID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MinDuration", MySqlDbType.String))
            command1.Parameters("pr_MinDuration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_NotedDate", MySqlDbType.DateTime))
            command1.Parameters("pr_NotedDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_NotedSt", MySqlDbType.String))
            command1.Parameters("pr_NotedSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Notes", MySqlDbType.String))
            command1.Parameters("pr_Notes").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OContractNo", MySqlDbType.String))
            command1.Parameters("pr_OContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OfficeAddress", MySqlDbType.String))
            command1.Parameters("pr_OfficeAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OurReference", MySqlDbType.String))
            command1.Parameters("pr_OurReference").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PerServiceValue", MySqlDbType.String))
            command1.Parameters("pr_PerServiceValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PONo", MySqlDbType.String))
            command1.Parameters("pr_PONo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PortfolioValue", MySqlDbType.String))
            command1.Parameters("pr_PortfolioValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PortfolioYN", MySqlDbType.String))
            command1.Parameters("pr_PortfolioYN").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Postal", MySqlDbType.String))
            command1.Parameters("pr_Postal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PrintBody", MySqlDbType.String))
            command1.Parameters("pr_PrintBody").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PrintingRemarks", MySqlDbType.String))
            command1.Parameters("pr_PrintingRemarks").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProjectCode", MySqlDbType.String))
            command1.Parameters("pr_ProjectCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProjectName", MySqlDbType.String))
            command1.Parameters("pr_ProjectName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProspectId", MySqlDbType.String))
            command1.Parameters("pr_ProspectId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_QuotePrice", MySqlDbType.String))
            command1.Parameters("pr_QuotePrice").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_QuoteUnitMS", MySqlDbType.String))
            command1.Parameters("pr_QuoteUnitMS").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Remarks", MySqlDbType.String))
            command1.Parameters("pr_Remarks").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalContractNo", MySqlDbType.String))
            command1.Parameters("pr_RenewalContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalDate", MySqlDbType.DateTime))
            command1.Parameters("pr_RenewalDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalSt", MySqlDbType.String))
            command1.Parameters("pr_RenewalSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RequireInspecton", MySqlDbType.String))
            command1.Parameters("pr_RequireInspecton").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ResponseHours", MySqlDbType.String))
            command1.Parameters("pr_ResponseHours").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionClaimDate", MySqlDbType.DateTime))
            command1.Parameters("pr_RetentionClaimDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionPerc", MySqlDbType.String))
            command1.Parameters("pr_RetentionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionValue", MySqlDbType.String))
            command1.Parameters("pr_RetentionValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Rev", MySqlDbType.String))
            command1.Parameters("pr_Rev").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesCommissionAmt", MySqlDbType.String))
            command1.Parameters("pr_SalesCommissionAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesCommissionPerc", MySqlDbType.String))
            command1.Parameters("pr_SalesCommissionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesGRP", MySqlDbType.String))
            command1.Parameters("pr_SalesGRP").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesMan", MySqlDbType.String))
            command1.Parameters("pr_SalesMan").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Scheduler", MySqlDbType.String))
            command1.Parameters("pr_Scheduler").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ScheduleType", MySqlDbType.String))
            command1.Parameters("pr_ScheduleType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServDay", MySqlDbType.String))
            command1.Parameters("pr_ServDay").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServDayMethod", MySqlDbType.String))
            command1.Parameters("pr_ServDayMethod").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceAddress", MySqlDbType.String))
            command1.Parameters("pr_ServiceAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceAmt", MySqlDbType.String))
            command1.Parameters("pr_ServiceAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBal", MySqlDbType.String))
            command1.Parameters("pr_ServiceBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceDescription", MySqlDbType.String))
            command1.Parameters("pr_ServiceDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceFrequence", MySqlDbType.String))
            command1.Parameters("pr_ServiceFrequence").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceNo", MySqlDbType.String))
            command1.Parameters("pr_ServiceNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceNoActual", MySqlDbType.String))
            command1.Parameters("pr_ServiceNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceStart", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceTypeDescription", MySqlDbType.String))
            command1.Parameters("pr_ServiceTypeDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceTypeID", MySqlDbType.String))
            command1.Parameters("pr_ServiceTypeID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_settle", MySqlDbType.String))
            command1.Parameters("pr_settle").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_StaffId", MySqlDbType.String))
            command1.Parameters("pr_StaffId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_StartDate", MySqlDbType.DateTime))
            command1.Parameters("pr_StartDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Status", MySqlDbType.String))
            command1.Parameters("pr_Status").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Supervisor", MySqlDbType.String))
            command1.Parameters("pr_Supervisor").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Support", MySqlDbType.String))
            command1.Parameters("pr_Support").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TeamID", MySqlDbType.String))
            command1.Parameters("pr_TeamID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TechCommissionAmt", MySqlDbType.String))
            command1.Parameters("pr_TechCommissionAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TechCommissionPerc", MySqlDbType.String))
            command1.Parameters("pr_TechCommissionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Telephone", MySqlDbType.String))
            command1.Parameters("pr_Telephone").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TerminationCode", MySqlDbType.String))
            command1.Parameters("pr_TerminationCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TerminationDescription", MySqlDbType.String))
            command1.Parameters("pr_TerminationDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeIn", MySqlDbType.String))
            command1.Parameters("pr_TimeIn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeOut", MySqlDbType.String))
            command1.Parameters("pr_TimeOut").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalArea", MySqlDbType.String))
            command1.Parameters("pr_TotalArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitAmt", MySqlDbType.String))
            command1.Parameters("pr_UnitAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitBal", MySqlDbType.String))
            command1.Parameters("pr_UnitBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitNo", MySqlDbType.String))
            command1.Parameters("pr_UnitNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitNoActual", MySqlDbType.String))
            command1.Parameters("pr_UnitNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ValuePerMonth", MySqlDbType.String))
            command1.Parameters("pr_ValuePerMonth").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Warranty", MySqlDbType.String))
            command1.Parameters("pr_Warranty").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyBillingAmount", MySqlDbType.String))
            command1.Parameters("pr_WarrantyBillingAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyBillingFrequency", MySqlDbType.String))
            command1.Parameters("pr_WarrantyBillingFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyDuration", MySqlDbType.String))
            command1.Parameters("pr_WarrantyDuration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_WarrantyEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyStart", MySqlDbType.DateTime))
            command1.Parameters("pr_WarrantyStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebCreateDeviceID", MySqlDbType.String))
            command1.Parameters("pr_WebCreateDeviceID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebCreateSource", MySqlDbType.String))
            command1.Parameters("pr_WebCreateSource").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebDeleteStatus", MySqlDbType.String))
            command1.Parameters("pr_WebDeleteStatus").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebEditSource", MySqlDbType.String))
            command1.Parameters("pr_WebEditSource").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebFlowFrom", MySqlDbType.String))
            command1.Parameters("pr_WebFlowFrom").Direction = ParameterDirection.Output
            command1.Parameters.Add(New MySqlParameter("pr_WebFlowTo", MySqlDbType.String))
            command1.Parameters("pr_WebFlowTo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebLastEditDevice", MySqlDbType.String))
            command1.Parameters("pr_WebLastEditDevice").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom1", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom2", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom3", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo1", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo2", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo3", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom1", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom2", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom3", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo1", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo2", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo3", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_YourReference", MySqlDbType.String))
            command1.Parameters("pr_YourReference").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractNo", MySqlDbType.String))
            command1.Parameters("pr_ContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SignedServiceAgreement", MySqlDbType.String))
            command1.Parameters("pr_SignedServiceAgreement").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastBillAmount", MySqlDbType.String))
            command1.Parameters("pr_LastBillAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SignedAgreementReference", MySqlDbType.String))
            command1.Parameters("pr_SignedAgreementReference").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_AutoRenew", MySqlDbType.String))
            command1.Parameters("pr_AutoRenew").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_FixedContinuous", MySqlDbType.String))
            command1.Parameters("pr_FixedContinuous").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndofLastSchedule", MySqlDbType.DateTime))
            command1.Parameters("pr_EndofLastSchedule").Direction = ParameterDirection.Output



            command1.Parameters.Add(New MySqlParameter("pr_OnHoldDate", MySqlDbType.DateTime))
            command1.Parameters("pr_OnHoldDate").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldCode", MySqlDbType.String))
            command1.Parameters("pr_OnHoldCode").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldDescription", MySqlDbType.String))
            command1.Parameters("pr_OnHoldDescription").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldComments", MySqlDbType.String))
            command1.Parameters("pr_OnHoldComments").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ExcludeFromBatchPriceChange", MySqlDbType.String))
            command1.Parameters("pr_ExcludeFromBatchPriceChange").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_serviceNoCT", MySqlDbType.String))
            command1.Parameters("pr_serviceNoCT").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceAmtCT", MySqlDbType.String))
            command1.Parameters("pr_ServiceAmtCT").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CTArea", MySqlDbType.String))
            command1.Parameters("pr_CTArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationCT", MySqlDbType.String))
            command1.Parameters("pr_BaitStationCT").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractCode", MySqlDbType.String))
            command1.Parameters("pr_ContractCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractCodeDescription", MySqlDbType.String))
            command1.Parameters("pr_ContractCodeDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TerminationType", MySqlDbType.String))
            command1.Parameters("pr_TerminationType").Direction = ParameterDirection.Output
            command1.ExecuteScalar()


            txtAccountId.Text = command1.Parameters("@pr_AccountID").Value.ToString

            txtOriginalAccountId.Text = txtAccountId.Text
            lblAccountID.Text = txtAccountId.Text


            chkSignedServiceAgreement.Checked = command1.Parameters("@pr_SignedServiceAgreement").Value.ToString


            If command1.Parameters("@pr_SignedAgreementReference").Value.ToString <> "" Then
                txtSignedAgreementReference.Text = "Signed Service Agreement Refer To  " & command1.Parameters("@pr_SignedAgreementReference").Value.ToString
            Else
                txtSignedAgreementReference.Text = "Signed Service Agreement"

            End If

            'SqlDSTerminationCode.SelectCommand = "SELECT CONCAT(Code, ' - ', Description) AS TC FROM tblterminationcode where Status = 'Y' ORDER BY Code"
            'SqlDSTerminationCode.DataBind()

            'ddlTerminationCode.DataSourceID = "SqlDSTerminationCode"
            'ddlTerminationCode.DataBind()


            chkExcludeFromBatchPriceChange.Checked = command1.Parameters("@pr_ExcludeFromBatchPriceChange").Value.ToString

            If command1.Parameters("@pr_AgreementType").Value.ToString = "" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("NEW")
                ddlAgreementType.Items.Add("ADDITION")
                'ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
                ddlAgreementType.SelectedIndex = 0
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "NEW" Or command1.Parameters("@pr_AgreementType").Value.ToString = "ADDITION" Then
                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("NEW")
                ddlAgreementType.Items.Add("ADDITION")
                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()

            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "RENEWAL" Or command1.Parameters("@pr_AgreementType").Value.ToString = "EXTENSION" Then
                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("RENEWAL")
                ddlAgreementType.Items.Add("EXTENSION")

                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()
                'ddlAgreementType.Attributes.Add("disabled", "true")
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "NO PRICE CHANGE" Or command1.Parameters("@pr_AgreementType").Value.ToString = "PRICE INCREASE" Or command1.Parameters("@pr_AgreementType").Value.ToString = "PRICE DECREASE" Or command1.Parameters("@pr_AgreementType").Value.ToString = "REVISION" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("REVISION")

                'ddlAgreementType.Items.Add("NO PRICE CHANGE")
                'ddlAgreementType.Items.Add("PRICE INCREASE")
                'ddlAgreementType.Items.Add("PRICE DECREASE")

                If command1.Parameters("@pr_AgreementType").Value.ToString <> "" Then

                    gScheduler = command1.Parameters("@pr_AgreementType").Value.ToString.ToUpper()

                    If ddlAgreementType.Items.FindByValue(gScheduler) Is Nothing Then
                        ddlAgreementType.Items.Add(gScheduler)
                        ddlAgreementType.Text = gScheduler
                    Else
                        ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim().ToUpper()
                    End If
                End If
                'ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "WARRANTY" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("WARRANTY")

                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()
            End If


            'txtStatus.Text = command1.Parameters("@pr_Status").Value.ToString.Trim()

            'O, P, H, R, C, T, E

            If command1.Parameters("@pr_Status").Value.ToString.Trim() = "O" Then
                txtStatus.Text = "O - Open"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "H" Then
                txtStatus.Text = "H - On Hold"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "T" Then
                txtStatus.Text = "T - Terminated"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "C" Then
                txtStatus.Text = "C - Completed"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "V" Then
                txtStatus.Text = "V - Void"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "E" Then
                txtStatus.Text = "E - Expired"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "R" Then
                txtStatus.Text = "R - Revised"
            ElseIf command1.Parameters("@pr_Status").Value.ToString.Trim() = "P" Then
                txtStatus.Text = "P - Posted"
            End If

            If command1.Parameters("@pr_RenewalSt").Value.ToString <> "" Then : txtRs.Text = command1.Parameters("@pr_RenewalSt").Value.ToString.ToUpper.Trim() : End If
            If command1.Parameters("@pr_NotedSt").Value.ToString <> "" Then : txtNS.Text = command1.Parameters("@pr_NotedSt").Value.ToString : End If
            If command1.Parameters("@pr_GSt").Value.ToString <> "" Then : txtGS.Text = command1.Parameters("@pr_GSt").Value.ToString : End If
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : txtContractNo.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If

            txtContractNoSelected.Text = txtContractNo.Text
            lblContractNo.Text = txtContractNo.Text


            If command1.Parameters("@pr_ContractDate").Value.ToString <> "" Then : txtContractDate.Text = Convert.ToDateTime(command1.Parameters("@pr_ContractDate").Value).ToString("dd/MM/yyyy") : End If

            txtContractDateOriginal.Text = txtContractDate.Text

            'Convert.ToDateTime(command1.Parameters("@pr_SchServiceDate").Value).ToString("dd/MM/yyyy")
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : txtCustName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If
            lblName.Text = txtCustName.Text

            txtContractNoChSt.Text = txtContractNo.Text
            txtCustomerNameChSt.Text = txtCustName.Text

            If command1.Parameters("@pr_InChargeId").Value.ToString <> "" Then : txtTeamIncharge.Text = command1.Parameters("@pr_InChargeId").Value.ToString : End If
            If command1.Parameters("@pr_AgreeValue").Value.ToString <> "" Then : txtAgreeVal.Text = Convert.ToDecimal(command1.Parameters("@pr_AgreeValue").Value).ToString("f2") : End If

            txtAgreeValueEdit.Text = txtAgreeVal.Text

            If command1.Parameters("@pr_ContractValue").Value.ToString <> "" Then : txtTotContVal.Text = Convert.ToDecimal(command1.Parameters("@pr_ContractValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_StartDate").Value.ToString <> "" Then : txtContractStart.Text = Convert.ToDateTime(command1.Parameters("@pr_StartDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_EndDate").Value.ToString <> "" Then : txtContractEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_EndDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_ActualServiceStartDate").Value.ToString <> "" Then : txtActualServiceStart.Text = Convert.ToDateTime(command1.Parameters("@pr_ActualServiceStartDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_ActualEnd").Value.ToString <> "" Then : txtActualEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_ActualEnd").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_Scheduler").Value.ToString <> "" Then

                gScheduler = command1.Parameters("@pr_Scheduler").Value.ToString.ToUpper()

                If ddlScheduler.Items.FindByValue(gScheduler) Is Nothing Then
                    ddlScheduler.Items.Add(gScheduler)
                    ddlScheduler.Text = gScheduler
                Else
                    ddlScheduler.Text = command1.Parameters("@pr_Scheduler").Value.ToString.Trim().ToUpper()
                End If
            End If


            If command1.Parameters("@pr_Scheduler").Value.ToString <> "" Then
                gScheduler = command1.Parameters("@pr_Scheduler").Value.ToString.ToUpper()

                If ddlSchedulerEdit.Items.FindByValue(gScheduler) Is Nothing Then
                    ddlSchedulerEdit.Items.Add(gScheduler)
                    ddlSchedulerEdit.Text = gScheduler
                Else
                    ddlSchedulerEdit.Text = command1.Parameters("@pr_Scheduler").Value.ToString.Trim().ToUpper()
                End If
            End If


            If command1.Parameters("@pr_SalesMan").Value.ToString = "" Or command1.Parameters("@pr_SalesMan").Value.ToString = "&nbsp;" Then
                ddlSalesman.SelectedIndex = 0
            Else
                'If command1.Parameters("@pr_SalesMan").Value.ToString <> "" Then

                gSalesman = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper()

                If ddlSalesman.Items.FindByValue(gSalesman) Is Nothing Then
                    ddlSalesman.Items.Add(gSalesman)
                    ddlSalesman.Text = gSalesman
                Else
                    ddlSalesman.Text = command1.Parameters("@pr_SalesMan").Value.ToString.Trim().ToUpper()
                End If
                'End If
            End If


            If command1.Parameters("@pr_SalesMan").Value.ToString = "" Or command1.Parameters("@pr_SalesMan").Value.ToString = "&nbsp;" Then
                ddlSalesmanEdit.SelectedIndex = 0
            Else
                gSalesman = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper()

                If ddlSalesmanEdit.Items.FindByValue(gSalesman) Is Nothing Then
                    ddlSalesmanEdit.Items.Add(gSalesman)
                    ddlSalesmanEdit.Text = gSalesman
                Else
                    ddlSalesmanEdit.Text = command1.Parameters("@pr_SalesMan").Value.ToString.Trim().ToUpper()
                End If
                'End If
            End If
            'InsertIntoTblWebEventLog("PopulateRecord", "53", "1", "1")

            'If command1.Parameters("@pr_SalesMan").Value.ToString <> "" Then : ddlSalesman.Text = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper.Trim().ToUpper() : End If
            If command1.Parameters("@pr_ProspectId").Value.ToString <> "" Then : txtProspectId.Text = command1.Parameters("@pr_ProspectId").Value.ToString : End If
            'If command1.Parameters("@pr_StaffId").Value.ToString <> "" Then : txtStaffId.Text = command1.Parameters("@pr_StaffId").Value.ToString : End If


            If command1.Parameters("@pr_ContactType").Value.ToString <> "" Then
                If command1.Parameters("@pr_ContactType").Value.ToString = "CORPORATE" Or command1.Parameters("@pr_ContactType").Value.ToString = "COMPANY" Then
                    ddlContactType.Text = "COMPANY"
                End If
                If command1.Parameters("@pr_ContactType").Value.ToString = "RESIDENTIAL" Or command1.Parameters("@pr_ContactType").Value.ToString = "PERSON" Then
                    ddlContactType.Text = "PERSON"
                End If

                'If command1.Parameters("@pr_ContactType").Value.ToString = "CORPORATE" Or command1.Parameters("@pr_ContactType").Value.ToString = "COMPANY" Then
                '    ddlContactType.Text = "CORPORATE"
                'End If
                'If command1.Parameters("@pr_ContactType").Value.ToString = "RESIDENTIAL" Or command1.Parameters("@pr_ContactType").Value.ToString = "PERSON" Then
                '    ddlContactType.Text = "RESIDENTIAL"
                'End If
            End If
            If command1.Parameters("@pr_CustCode").Value.ToString <> "" Then : txtClient.Text = command1.Parameters("@pr_CustCode").Value.ToString : End If
            If command1.Parameters("@pr_CustAddr").Value.ToString <> "" Then : txtOfficeAddress.Text = command1.Parameters("@pr_CustAddr").Value.ToString : End If


            'If command1.Parameters("@pr_Contact").Value.ToString <> "" Then : txtContactPerson.Text = command1.Parameters("@pr_Contact").Value.ToString : End If
            'If command1.Parameters("@pr_Telephone").Value.ToString <> "" Then : txtTelephone.Text = command1.Parameters("@pr_Telephone").Value.ToString : End If
            'If command1.Parameters("@pr_Fax").Value.ToString <> "" Then : txtFax.Text = command1.Parameters("@pr_Fax").Value.ToString : End If
            If command1.Parameters("@pr_Duration").Value.ToString <> "" Then : txtDuration.Text = command1.Parameters("@pr_Duration").Value.ToString : End If

            If command1.Parameters("@pr_DurationMs").Value.ToString <> "" Then
                If command1.Parameters("@pr_DurationMs").Value.ToString = "DAYS" Then
                    rbtLstDuration.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "WEEKS" Then
                    rbtLstDuration.SelectedIndex = 1
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "MONTHS" Then
                    rbtLstDuration.SelectedIndex = 2
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "YEARS" Then
                    rbtLstDuration.SelectedIndex = 3
                End If
            End If


            If command1.Parameters("@pr_ServiceNo").Value.ToString <> "" Then : txtServiceNo.Text = command1.Parameters("@pr_ServiceNo").Value.ToString : End If
            If command1.Parameters("@pr_ServiceBal").Value.ToString <> "" Then : txtServiceBal.Text = command1.Parameters("@pr_ServiceBal").Value.ToString : End If
            If command1.Parameters("@pr_ServiceAmt").Value.ToString <> "" Then : txtServiceAmt.Text = command1.Parameters("@pr_ServiceAmt").Value.ToString : End If
            If command1.Parameters("@pr_HourNo").Value.ToString <> "" Then : txtHourNo.Text = command1.Parameters("@pr_HourNo").Value.ToString : End If
            If command1.Parameters("@pr_HourBal").Value.ToString <> "" Then : txtHourBal.Text = command1.Parameters("@pr_HourBal").Value.ToString : End If
            If command1.Parameters("@pr_HourAmt").Value.ToString <> "" Then : txtHourAmt.Text = command1.Parameters("@pr_HourAmt").Value.ToString : End If
            If command1.Parameters("@pr_CallNo").Value.ToString <> "" Then : txtCallNo.Text = command1.Parameters("@pr_CallNo").Value.ToString : End If
            If command1.Parameters("@pr_CallBal").Value.ToString <> "" Then : txtCallBal.Text = command1.Parameters("@pr_CallBal").Value.ToString : End If
            If command1.Parameters("@pr_CallAmt").Value.ToString <> "" Then : txtCallAmt.Text = command1.Parameters("@pr_CallAmt").Value.ToString : End If
            If command1.Parameters("@pr_ResponseHours").Value.ToString <> "" Then : txtResponse.Text = command1.Parameters("@pr_ResponseHours").Value.ToString : End If
            If command1.Parameters("@pr_CancelCharges").Value.ToString <> "" Then : txtCancelCharges.Text = command1.Parameters("@pr_CancelCharges").Value.ToString : End If
            If command1.Parameters("@pr_CompensatePct").Value.ToString <> "" Then : txtCompensatePct.Text = command1.Parameters("@pr_CompensatePct").Value.ToString : End If
            If command1.Parameters("@pr_Notes").Value.ToString <> "" Then : txtContractNotes.Text = command1.Parameters("@pr_Notes").Value.ToString : End If
            txtNotesEdit.Text = txtContractNotes.Text

       

            If command1.Parameters("@pr_Comments").Value.ToString <> "" Then : txtServInst.Text = command1.Parameters("@pr_Comments").Value.ToString : End If
            'If command1.Parameters("@pr_ActualStaff").Value.ToString <> "" Then : txtActualStaff.Text = command1.Parameters("@pr_ActualStaff").Value.ToString : End If
            If command1.Parameters("@pr_ServiceNoActual").Value.ToString <> "" Then : txtServiceNoActual.Text = command1.Parameters("@pr_ServiceNoActual").Value.ToString : End If
            If command1.Parameters("@pr_HourNoActual").Value.ToString <> "" Then : txtHourNoActual.Text = command1.Parameters("@pr_HourNoActual").Value.ToString : End If
            If command1.Parameters("@pr_CallNoActual").Value.ToString <> "" Then : txtCallNoActual.Text = command1.Parameters("@pr_CallNoActual").Value.ToString : End If
            If command1.Parameters("@pr_MinDuration").Value.ToString <> "" Then : txtMinDuration.Text = command1.Parameters("@pr_MinDuration").Value.ToString : End If
            If command1.Parameters("@pr_OContractNo").Value.ToString <> "" Then : txtOContract.Text = command1.Parameters("@pr_OContractNo").Value.ToString : End If
            If command1.Parameters("@pr_RenewalContractNo").Value.ToString <> "" Then : txtRenewed.Text = command1.Parameters("@pr_RenewalContractNo").Value.ToString : End If

            If command1.Parameters("@pr_RenewalDate").Value.ToString <> "" Then : txtRenewalDate.Text = Convert.ToDateTime(command1.Parameters("@pr_RenewalDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_UnitNo").Value.ToString <> "" Then : txtUnitNo.Text = command1.Parameters("@pr_UnitNo").Value.ToString : End If
            If command1.Parameters("@pr_UnitBal").Value.ToString <> "" Then : txtUnitBal.Text = command1.Parameters("@pr_UnitBal").Value.ToString : End If
            If command1.Parameters("@pr_UnitAmt").Value.ToString <> "" Then : txtUnitAmt.Text = command1.Parameters("@pr_UnitAmt").Value.ToString : End If
            If command1.Parameters("@pr_UnitNoActual").Value.ToString <> "" Then : txtUnitNoActual.Text = command1.Parameters("@pr_UnitNoActual").Value.ToString : End If

            'For New Revision
            If command1.Parameters("@pr_NotedDate").Value.ToString <> "" Then : txtEffectiveDateNCR.Text = Convert.ToDateTime(command1.Parameters("@pr_NotedDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_CompensateMax").Value.ToString <> "" Then : txtAgreeValueNCR.Text = command1.Parameters("@pr_CompensateMax").Value.ToString : End If
            'For New Revision

            If command1.Parameters("@pr_settle").Value.ToString <> "" Then
                If command1.Parameters("@pr_settle").Value.ToString = "UC" Then
                    rbtnLSettle.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_settle").Value.ToString = "OC" Then
                    rbtnLSettle.SelectedIndex = 1
                ElseIf command1.Parameters("@pr_settle").Value.ToString = "CB" Then
                    rbtnLSettle.SelectedIndex = 2
                End If
            End If
            'If command1.Parameters("@pr_ActualServHrs").Value.ToString <> "" Then : txtActualServHrs.Text = command1.Parameters("@pr_ActualServHrs").Value.ToString : End If
            If command1.Parameters("@pr_YourReference").Value.ToString <> "" Then : txtYourRef.Text = command1.Parameters("@pr_YourReference").Value.ToString : End If
            If command1.Parameters("@pr_ContractGroup").Value.ToString.Trim <> "" Then : ddlContractGrp.Text = command1.Parameters("@pr_ContractGroup").Value.ToString.ToUpper.Trim : End If
            'If command1.Parameters("@pr_ServDayMethod").Value.ToString <> "" Then : txtServDayMethod.Text = command1.Parameters("@pr_ServDayMethod").Value.ToString : End If
            'If command1.Parameters("@pr_ServDay").Value.ToString <> "" Then : txtServDay.Text = command1.Parameters("@pr_ServDay").Value.ToString : End If
            If command1.Parameters("@pr_ServiceStart").Value.ToString <> "" Then : txtServStart.Text = Convert.ToDateTime(command1.Parameters("@pr_ServiceStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_ServiceEnd").Value.ToString <> "" Then : txtServEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_ServiceEnd").Value).ToString("dd/MM/yyyy") : End If
            'If command1.Parameters("@pr_ServiceFrequence").Value.ToString <> "" Then : txtServiceFrequence.Text = command1.Parameters("@pr_ServiceFrequence").Value.ToString : End If
            If command1.Parameters("@pr_TimeIn").Value.ToString <> "" Then : txtServTimeIn.Text = command1.Parameters("@pr_TimeIn").Value.ToString : End If
            If command1.Parameters("@pr_TimeOut").Value.ToString <> "" Then : txtServTimeOut.Text = command1.Parameters("@pr_TimeOut").Value.ToString : End If
            'Convert.ToDateTime(Server.HtmlDecode(GridView1.SelectedRow.Cells(6).Text).Value.ToString).Value.ToString("dd/MM/yyyy")
            If command1.Parameters("@pr_WarrantyStart").Value.ToString <> "" Then : txtWarrStart.Text = Convert.ToDateTime(command1.Parameters("@pr_WarrantyStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_WarrantyEnd").Value.ToString <> "" Then : txtWarrEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_WarrantyEnd").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_ContractValue").Value.ToString <> "" Then : txtConDetVal.Text = Convert.ToDecimal(command1.Parameters("@pr_ContractValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_PerServiceValue").Value.ToString <> "" Then : txtPerServVal.Text = Convert.ToDecimal(command1.Parameters("@pr_PerServiceValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_Disc_Percent").Value.ToString <> "" Then : txtDisPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_Disc_Percent").Value).ToString("f2") : End If
            If command1.Parameters("@pr_DiscAmt").Value.ToString <> "" Then : txtDisAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_DiscAmt").Value).ToString("f2") : End If
            If command1.Parameters("@pr_BillingFrequency").Value.ToString.Trim <> "" Then : ddlBillingFreq.Text = command1.Parameters("@pr_BillingFrequency").Value.ToString.ToUpper().Trim : End If
            If command1.Parameters("@pr_BillingFrequency").Value.ToString.Trim <> "" Then : ddlBillingFreqEdit.Text = command1.Parameters("@pr_BillingFrequency").Value.ToString.ToUpper().Trim : End If

            'InsertIntoTblWebEventLog("PopulateRecord", "54", "1", "1")
            'If command1.Parameters("@pr_DayService1").Value.ToString <> "" Then : txtDayService1.Text = command1.Parameters("@pr_DayService1").Value.ToString : End If
            'If command1.Parameters("@pr_DayService2").Value.ToString <> "" Then : txtDayService2.Text = command1.Parameters("@pr_DayService2").Value.ToString : End If
            'If command1.Parameters("@pr_DayService3").Value.ToString <> "" Then : txtDayService3.Text = command1.Parameters("@pr_DayService3").Value.ToString : End If
            'If command1.Parameters("@pr_DayService4").Value.ToString <> "" Then : txtDayService4.Text = command1.Parameters("@pr_DayService4").Value.ToString : End If
            If command1.Parameters("@pr_Support").Value.ToString <> "" Then : txtServiceBy.Text = command1.Parameters("@pr_Support").Value.ToString : End If
            If command1.Parameters("@pr_Supervisor").Value.ToString <> "" Then : txtSupervisor.Text = command1.Parameters("@pr_Supervisor").Value.ToString : End If

            If command1.Parameters("@pr_TeamID").Value.ToString <> "" Then : txtTeam.Text = command1.Parameters("@pr_TeamID").Value.ToString : End If
            If command1.Parameters("@pr_Postal").Value.ToString <> "" Then : txtPostal.Text = command1.Parameters("@pr_Postal").Value.ToString : End If
            If command1.Parameters("@pr_LocateGrp").Value.ToString <> "" Then : ddlLocateGrp.Text = command1.Parameters("@pr_LocateGrp").Value.ToString.ToUpper().Trim : End If
            If command1.Parameters("@pr_ContactPersonMobile").Value.ToString <> "" Then : txtConPerMobile.Text = command1.Parameters("@pr_ContactPersonMobile").Value.ToString : End If
            If command1.Parameters("@pr_OurReference").Value.ToString <> "" Then : txtOurRef.Text = command1.Parameters("@pr_OurReference").Value.ToString : End If
            'If command1.Parameters("@pr_ServiceDescription").Value.ToString <> "" Then : txtServiceDescription.Text = command1.Parameters("@pr_ServiceDescription").Value.ToString : End If
            If command1.Parameters("@pr_PrintingRemarks").Value.ToString <> "" Then : txtNotesTemplate.Text = command1.Parameters("@pr_PrintingRemarks").Value.ToString : End If
            'If command1.Parameters("@pr_Rev").Value.ToString <> "" Then : txtRev.Text = command1.Parameters("@pr_Rev").Value.ToString : End If
            If command1.Parameters("@pr_MainContractNo").Value.ToString <> "" Then : txtMainContractNo.Text = command1.Parameters("@pr_MainContractNo").Value.ToString : End If
            If command1.Parameters("@pr_AmtCompleted").Value.ToString <> "" Then : txtAmtCompleted.Text = command1.Parameters("@pr_AmtCompleted").Value.ToString : End If
            If command1.Parameters("@pr_AmtCompleted").Value.ToString <> "" Then : txtServiceAmtActual.Text = command1.Parameters("@pr_AmtCompleted").Value.ToString : End If

            If command1.Parameters("@pr_AmtBalance").Value.ToString <> "" Then : txtAmtBalance.Text = command1.Parameters("@pr_AmtBalance").Value.ToString : End If
            If command1.Parameters("@pr_AmtBalance").Value.ToString <> "" Then : txtServiceAmtBal.Text = command1.Parameters("@pr_AmtBalance").Value.ToString : End If

            If command1.Parameters("@pr_ValuePerMonth").Value.ToString <> "" Then : txtValPerMnth.Text = command1.Parameters("@pr_ValuePerMonth").Value.ToString : End If
            If command1.Parameters("@pr_BillingAmount").Value.ToString <> "" Then : txtBillingAmount.Text = command1.Parameters("@pr_BillingAmount").Value.ToString : End If

            If command1.Parameters("@pr_AllocatedSvcTime").Value.ToString <> "" Then : txtAllocTime.Text = command1.Parameters("@pr_AllocatedSvcTime").Value.ToString : End If
            If command1.Parameters("@pr_Remarks").Value.ToString <> "" Then : txtRemarks.Text = command1.Parameters("@pr_Remarks").Value.ToString : End If
            If command1.Parameters("@pr_QuotePrice").Value.ToString <> "" Then : txtQuotePrice.Text = command1.Parameters("@pr_QuotePrice").Value.ToString : End If
            If command1.Parameters("@pr_QuoteUnitMS").Value.ToString <> "" Then : txtQuoteUnit.Text = command1.Parameters("@pr_QuoteUnitMS").Value.ToString : End If
            If command1.Parameters("@pr_CompanyGroup").Value.ToString <> "" Then : ddlCompanyGrp.Text = command1.Parameters("@pr_CompanyGroup").Value.ToString.Trim : End If

            If command1.Parameters("@pr_CompanyGroup").Value.ToString <> "" Then : ddlCompanyGroupEdit.Text = command1.Parameters("@pr_CompanyGroup").Value.ToString.Trim : End If

            'If command1.Parameters("@pr_SalesGRP").Value.ToString <> "" Then : txtSalesGRP.Text = command1.Parameters("@pr_SalesGRP").Value.ToString : End If
            If command1.Parameters("@pr_GSTNos").Value.ToString <> "" Then : txtGstNo.Text = command1.Parameters("@pr_GSTNos").Value.ToString : End If

            If command1.Parameters("@pr_ScheduleType").Value.ToString <> "" Then
                ddlScheduleType.Text = command1.Parameters("@pr_ScheduleType").Value.ToString.Trim
            End If

            'SASI - 17/04/2017 - COMMISSION

            If command1.Parameters("@pr_SalesCommissionPerc").Value.ToString <> "" Then : txtSalesCommPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_SalesCommissionPerc").Value).ToString("f2") : End If
            If command1.Parameters("@pr_SalesCommissionAmt").Value.ToString <> "" Then : txtSalesCommAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_SalesCommissionAmt").Value).ToString("f2") : End If
            If command1.Parameters("@pr_TechCommissionPerc").Value.ToString <> "" Then : txtTechCommPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_TechCommissionPerc").Value).ToString("f2") : End If
            If command1.Parameters("@pr_TechCommissionAmt").Value.ToString <> "" Then : txtTechCommAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_TechCommissionAmt").Value).ToString("f2") : End If

            'SASI - END

            'SASI - Industry Segment 28/04/2017

            If command1.Parameters("@pr_ServiceTypeID").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_ServiceTypeID").Value.ToString) = True Then
                ddlServiceTypeID.SelectedIndex = 0
            Else
                ddlServiceTypeID.Text = (command1.Parameters("@pr_ServiceTypeID").Value.ToString.Trim & " - " & command1.Parameters("@pr_ServiceTypeDescription").Value.ToString.Trim)
            End If

            'If command1.Parameters("@pr_ServiceTypeID").Value.ToString <> "" Then : ddlServiceTypeID.Text = command1.Parameters("@pr_ServiceTypeID").Value.ToString : End If
            'If command1.Parameters("@pr_ServiceTypeDescription").Value.ToString <> "" Then : ddlServiceTypeID.SelectedValue = command1.Parameters("@pr_ServiceTypeDescription").Value.ToString : End If
            If command1.Parameters("@pr_CategoryID").Value.ToString <> "" Then : txtCategoryID.Text = command1.Parameters("@pr_CategoryID").Value.ToString : End If
            If command1.Parameters("@pr_PortfolioYN").Value.ToString <> "" Then : ddlPortfolioYN.SelectedValue = command1.Parameters("@pr_PortfolioYN").Value.ToString.Trim : End If
            If command1.Parameters("@pr_PortfolioValue").Value.ToString <> "" Then : txtPortfolioValue.Text = Convert.ToDecimal(command1.Parameters("@pr_PortfolioValue").Value).ToString("f2") : End If
            txtPortfolioValueEdit.Text = txtPortfolioValue.Text

            If command1.Parameters("@pr_MarketSegmentID").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_MarketSegmentID").Value.ToString) = True Then
                ddlMarketSegmentID.Text = ""
            Else
                ddlMarketSegmentID.Text = Server.HtmlDecode(command1.Parameters("@pr_MarketSegmentID").Value.ToString)
            End If
            'If command1.Parameters("@pr_MarketSegmentID").Value.ToString <> "" Then : ddlMarketSegmentID.Text = command1.Parameters("@pr_MarketSegmentID").Value.ToString : End If

            If command1.Parameters("@pr_Industry").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_Industry").Value.ToString) = True Then
                ddlIndustry.Text = ""
            Else
                ddlIndustry.Text = Server.HtmlDecode(command1.Parameters("@pr_Industry").Value.ToString)
            End If

            If command1.Parameters("@pr_LastBillAmount").Value.ToString <> "" Then : txtLastBillAmount.Text = command1.Parameters("@pr_LastBillAmount").Value.ToString : End If

            'If command1.Parameters("@pr_Industry").Value.ToString <> "" Then : ddlIndustry.SelectedItem.Text = command1.Parameters("@pr_Industry").Value.ToString : End If

            'SASI - End Industry Segment


            If command1.Parameters("@pr_Warranty").Value.ToString = "Y" Then
                ChkWithWarranty.Checked = True
            Else
                ChkWithWarranty.Checked = False
            End If

            'If ChkWithWarranty.Checked = True Then
            '    Command.Parameters.AddWithValue("@Warranty", "Y")
            'Else
            '    Command.Parameters.AddWithValue("@Warranty", "N")
            'End If

            If command1.Parameters("@pr_WarrantyDuration").Value.ToString <> "" Then : txtWarrDurtion.Text = command1.Parameters("@pr_WarrantyDuration").Value.ToString : End If
            If command1.Parameters("@pr_WarrantyBillingAmount").Value.ToString <> "" Then : txtWarrantyBillingAmount.Text = command1.Parameters("@pr_WarrantyBillingAmount").Value.ToString : End If


            If command1.Parameters("@pr_WarrantyBillingFrequency").Value.ToString <> "" Then
                ddlWarrantyFrequency.Text = command1.Parameters("@pr_WarrantyBillingFrequency").Value.ToString.ToUpper()
            Else
                ddlWarrantyFrequency.SelectedIndex = 0
            End If



            'If ChkRequireInspection.Checked = True Then
            '    Command.Parameters.AddWithValue("@RequireInspecton", "Y")
            'Else
            '    Command.Parameters.AddWithValue("@RequireInspecton", "N")
            'End If

            If command1.Parameters("@pr_RequireInspecton").Value.ToString = "Y" Then
                ChkRequireInspection.Checked = True
            Else
                ChkRequireInspection.Checked = False
            End If

            'If ddlInspectionFrequency.SelectedIndex = 0 Then
            '    Command.Parameters.AddWithValue("@InspectionFrequency", "")
            'Else
            '    Command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.Value.ToString)
            'End If

            If command1.Parameters("@pr_InspectionFrequency").Value.ToString <> "" Then : ddlInspectionFrequency.Text = command1.Parameters("@pr_InspectionFrequency").Value.ToString.Trim : End If

            'If TxtInspectionStart.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).Value.ToString("yyyy-MM-dd"))

            'End If

            'If TxtInspectionEnd.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).Value.ToString("yyyy-MM-dd"))

            'End If

            If command1.Parameters("@pr_InspectionStart").Value.ToString <> "" Then : TxtInspectionStart.Text = Convert.ToDateTime(command1.Parameters("@pr_InspectionStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_InspectionEnd").Value.ToString <> "" Then : TxtInspectionEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_InspectionEnd").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_ComputationMethod").Value.ToString <> "" Then
                If command1.Parameters("@pr_ComputationMethod").Value.ToString = "Fixed" Then
                    rbtComputationMethod.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_ComputationMethod").Value.ToString = "Monthly" Then
                    rbtComputationMethod.SelectedIndex = 1

                End If
            End If

            'If rbtComputationMethod.SelectedIndex = 0 Then
            '    Command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
            'Else
            '    Command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
            'End If


            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If
            'If command1.Parameters("@pr_OfficeAddress").Value.ToString <> "" Then : txtOfficeAddress.Text = command1.Parameters("@pr_OfficeAddress").Value.ToString : End If

            'SASI - 17/04/2017 | Commission Tab

            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID2.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            'txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo2.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblAccountName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If


            'SASI - 17/04/2017 End

            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID1.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            'txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo1.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblName1.Text = command1.Parameters("@pr_CustName").Value.ToString : End If


            If command1.Parameters("@pr_TotalArea").Value.ToString <> "" Then : txtTotalArea.Text = command1.Parameters("@pr_TotalArea").Value.ToString : End If
            If command1.Parameters("@pr_CompletedArea").Value.ToString <> "" Then : txtCompletedArea.Text = command1.Parameters("@pr_CompletedArea").Value.ToString : End If
            If command1.Parameters("@pr_BalanceArea").Value.ToString <> "" Then : txtBalanceArea.Text = command1.Parameters("@pr_BalanceArea").Value.ToString : End If

            If command1.Parameters("@pr_RetentionPerc").Value.ToString <> "" Then : txtRetentionPerc.Text = command1.Parameters("@pr_RetentionPerc").Value.ToString : End If
            If command1.Parameters("@pr_RetentionValue").Value.ToString <> "" Then : txtRetentionValue.Text = command1.Parameters("@pr_RetentionValue").Value.ToString : End If
            If command1.Parameters("@pr_RetentionClaimDate").Value.ToString <> "" Then : txtRetentionReleaseDate.Text = Convert.ToDateTime(command1.Parameters("@pr_RetentionClaimDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_PONo").Value.ToString <> "" Then : txtPONo.Text = command1.Parameters("@pr_PONo").Value.ToString : End If
            If command1.Parameters("@pr_ServiceAddress").Value.ToString <> "" Then : txtServiceAddressCons.Text = command1.Parameters("@pr_ServiceAddress").Value.ToString : End If

            If command1.Parameters("@pr_BillAddress1").Value.ToString <> "" Then : txtBillingAddress.Text = command1.Parameters("@pr_BillAddress1").Value.ToString : End If


            'If txtcontractfrom.Text = "clients" Then
            '    txtBillingAddress.Text = txtBillingAdressSession.Text
            'End If

            'If txtStatus.Text = "T" Then
            'If txtStatus.Text = "T" Or txtStatus.Text = "C" Or txtStatus.Text = "E" Or txtStatus.Text = "X" Or txtStatus.Text = "R" Then


            'If Left(txtStatus.Text, 1) = "T" Or Left(txtStatus.Text, 1) = "C" Or Left(txtStatus.Text, 1) = "E" Or Left(txtStatus.Text, 1) = "X" Or Left(txtStatus.Text, 1) = "R" Then
            '    If command1.Parameters("@pr_TerminationCode").Value.ToString <> "" Then : ddlTerminationCode.Text = command1.Parameters("@pr_TerminationCode").Value.ToString + " - " + command1.Parameters("@pr_TerminationDescription").Value.ToString : End If
            'End If


            '18.10.21
            If Left(txtStatus.Text, 1) = "T" Or Left(txtStatus.Text, 1) = "C" Or Left(txtStatus.Text, 1) = "E" Or Left(txtStatus.Text, 1) = "X" Or Left(txtStatus.Text, 1) = "R" Then

                If command1.Parameters("@pr_TerminationCode").Value.ToString = "" Or command1.Parameters("@pr_TerminationCode").Value.ToString = "&nbsp;" Then
                    ddlTerminationCode.SelectedIndex = 0
                Else
                    'If command1.Parameters("@pr_SalesMan").Value.ToString <> "" Then

                    gSalesman = command1.Parameters("@pr_TerminationCode").Value.ToString.ToUpper()

                    If ddlTerminationCode.Items.FindByValue(gSalesman) Is Nothing Then
                        ddlTerminationCode.Items.Add(gSalesman)
                        ddlTerminationCode.Text = gSalesman
                    Else
                        ddlTerminationCode.Text = command1.Parameters("@pr_TerminationCode").Value.ToString.Trim().ToUpper()
                    End If
                    'End If
                End If
            End If

            '18.10.21

            If command1.Parameters("@pr_ContractCode").Value.ToString <> "" Then : ddlContractCode.Text = command1.Parameters("@pr_ContractCode").Value.ToString + " : " + command1.Parameters("@pr_ContractCodeDescription").Value.ToString : End If

            'txtTerminationDescription.Text = command1.Parameters("@pr_TerminationDescription").Value.ToString

            txtTerminationCode.Text = command1.Parameters("@pr_TerminationCode").Value.ToString
            txtTerminationDescription.Text = command1.Parameters("@pr_CommentsStatus").Value.ToString
            If String.IsNullOrEmpty(txtAccountId.Text) = False Then

                ddlProjectCode.Items.Clear()
                ddlProjectCode.Items.Add("--SELECT--")

                Dim query1 As String
                query1 = "SELECT CONCAT(ProjectNo, ' - ', ProjectName) AS ProjectCode FROM tblProject where Status ='O' and AccountID = '" & txtAccountId.Text & "' and ProjectName is not null ORDER BY ProjectNo  "
                PopulateDropDownList(query1, "ProjectCode", "ProjectCode", ddlProjectCode)



                If command1.Parameters("@pr_ProjectName").Value.ToString.Trim = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_ProjectName").Value.ToString) = True Then
                    ddlProjectCode.SelectedIndex = 0
                Else
                    'ddlProjectCode.Items.Add(command1.Parameters("@pr_ProjectCode").Value.ToString.Trim & " - " & command1.Parameters("@pr_ProjectName").Value.ToString.Trim)
                    ddlProjectCode.Text = command1.Parameters("@pr_ProjectCode").Value.ToString.Trim & " - " & command1.Parameters("@pr_ProjectName").Value.ToString.Trim.ToUpper
                End If
            End If


            If command1.Parameters("@pr_BaitStationTotal").Value.ToString <> "" Then : txtBaitStationTotal.Text = command1.Parameters("@pr_BaitStationTotal").Value.ToString : End If
            If command1.Parameters("@pr_BaitStationInstalled").Value.ToString <> "" Then : txtBaitStationInstalled.Text = command1.Parameters("@pr_BaitStationInstalled").Value.ToString : End If
            If command1.Parameters("@pr_BaitStationBalance").Value.ToString <> "" Then : txtBaitStationBalance.Text = command1.Parameters("@pr_BaitStationBalance").Value.ToString : End If

            If Convert.ToDecimal(txtRetentionPerc.Text) = 0.0 Then
                'chkGenerateCreditNote.Visible = True
                chkGenerateCreditNote.Checked = False
            End If

            If command1.Parameters("@pr_CommentsStatus").Value.ToString <> "" Then : txtCommentChSt.Text = command1.Parameters("@pr_CommentsStatus").Value.ToString : End If

            If command1.Parameters("@pr_LastBillDate").Value.ToString <> "" Then : txtLastBillDate.Text = Convert.ToDateTime(command1.Parameters("@pr_LastBillDate").Value).ToString("dd/MM/yyyy") : End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_Location").Value.ToString) = True Then
                txtLocation.SelectedIndex = 0
            Else
                txtLocation.Text = command1.Parameters("@pr_Location").Value.ToString
            End If

            If command1.Parameters("@pr_AutoRenew").Value.ToString = "Y" Then
                chkAutoRenew.Checked = True
            Else
                chkAutoRenew.Checked = False
            End If

            If command1.Parameters("@pr_EndofLastSchedule").Value.ToString <> "" Then : txtEndofLastSchedule.Text = Convert.ToDateTime(command1.Parameters("@pr_EndofLastSchedule").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_OnHoldDate").Value.ToString <> "" Then : txtOnHoldDate.Text = Convert.ToDateTime(command1.Parameters("@pr_OnHoldDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_OnHoldCode").Value.ToString.Trim <> "" Then : txtOnHoldCode.Text = command1.Parameters("@pr_OnHoldCode").Value.ToString.Trim : End If
            If command1.Parameters("@pr_OnHoldDescription").Value.ToString <> "" Then : txtOnHoldDescription.Text = command1.Parameters("@pr_OnHoldDescription").Value.ToString : End If
            If command1.Parameters("@pr_OnHoldComments").Value.ToString <> "" Then : txtOnHoldComments.Text = command1.Parameters("@pr_OnHoldComments").Value.ToString : End If


            If command1.Parameters("@pr_FixedContinuous").Value.ToString <> "" Then
                If command1.Parameters("@pr_FixedContinuous").Value.ToString = "F" Then
                    rbtFixedContinuous.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_FixedContinuous").Value.ToString = "C" Then
                    rbtFixedContinuous.SelectedIndex = 1
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 And Left(txtGS.Text.Trim, 1) = "P" Then
                btnSvcAdd.Enabled = False
                'btnEdit.Enabled = False
                'btnSvcDelete.Enabled = False
            End If

            txtAgreeValServiceSummary.Text = txtAgreeVal.Text
            If command1.Parameters("@pr_serviceNoCT").Value.ToString <> "" Then : txtServiceNoCT.Text = command1.Parameters("@pr_serviceNoCT").Value.ToString : End If
            If command1.Parameters("@pr_ServiceAmtCT").Value.ToString <> "" Then : txtServiceAmtCT.Text = command1.Parameters("@pr_ServiceAmtCT").Value.ToString : End If
            If command1.Parameters("@pr_CTArea").Value.ToString <> "" Then : txtCTArea.Text = command1.Parameters("@pr_CTArea").Value.ToString : End If
            If command1.Parameters("@pr_BaitStationCT").Value.ToString <> "" Then : txtBaitStationCT.Text = command1.Parameters("@pr_BaitStationCT").Value.ToString : End If

            If command1.Parameters("@pr_TerminationType").Value.ToString <> "" Then : txtTerminationType.Text = command1.Parameters("@pr_TerminationType").Value.ToString : End If


            txtBillingRemarksEdit.Text = txtRemarks.Text


            txtContractNoPH.Text = txtContractNo.Text
            txtCustomerNamePH.Text = txtCustName.Text
            chkShowVoidRcords.Checked = False

            txtActualEndPH.Text = txtActualEnd.Text

            If rbtFixedContinuous.SelectedIndex = 0 Then
                txtFixedContinuousPH.Text = "FIXED"

            Else
                txtFixedContinuousPH.Text = "CONTINUOUS"

            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                btnRevisionNCR.Visible = False
            Else
                txtFixedContinuousPH.Text = "CONTINUOUS"
                If txtGS.Text = "P" Then
                    If txtRevisionUA.Text = True Then
                        btnRevisionNCR.Visible = True
                    Else
                        btnRevisionNCR.Visible = False
                    End If

                    btnSvcAdd.Enabled = False
                    btnSvcEdit.Enabled = False
                    btnSvcDelete.Enabled = False

                    btnSvcAdd.ForeColor = Color.Gray
                    btnSvcEdit.ForeColor = Color.Gray
                    btnSvcDelete.ForeColor = Color.Gray
                Else
                    btnRevisionNCR.Visible = False
                End If

                End If


            'InsertIntoTblWebEventLog("PopulateRecord", "6", "1", "1")
            'txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).Value.ToString("dd/MM/yyyy") : End If
            'Command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
            'Command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
            'If txtRetentionReleaseDate.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).Value.ToString("yyyy-MM-dd"))
            'End If

            tb1.ActiveTabIndex = 0

            ''''''''''''''''''''''''''
            btnClient0.Visible = True
            'btnClient1.Visible = True
            btnMultiplePO.Visible = True '25.10.21
            btnClient2.Visible = True
            btnClient3.Visible = True
            'btnClient4.Visible = True
            btnClient5.Visible = True
            btnClient6.Visible = True
            btnClient7.Visible = True
            btnClient8.Visible = True
            btnClient9.Visible = True
            btnClient10.Visible = True
            btnHistory.Visible = True
            '31.01.20
            btnExtendContractEndDate.Visible = True
            btnContractGroupDistribution.Visible = True

            btnClient11.Visible = False
            btnClient12.Visible = False


            '31.01.20




            'Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text
            'command1.CommandText = sql
            ''command1.CommandText = "SELECT * FROM tblcontract where rcno=" & Convert.ToInt64(txtRcno.Text)
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then

            '    If dt.Rows(0)("AccountID").ToString <> "" Then : txtAccountId.Text = dt.Rows(0)("AccountID").ToString : End If

            '    txtOriginalAccountId.Text = txtAccountId.Text
            '    lblAccountID.Text = txtAccountId.Text

            '    If dt.Rows(0)("AgreementType").ToString = "" Then


            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NEW")
            '        ddlAgreementType.Items.Add("ADDITION")
            '        'ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '        ddlAgreementType.SelectedIndex = 0
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "NEW" Or dt.Rows(0)("AgreementType").ToString = "ADDITION" Then
            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NEW")
            '        ddlAgreementType.Items.Add("ADDITION")
            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()

            '    ElseIf dt.Rows(0)("AgreementType").ToString = "RENEWAL" Then
            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("RENEWAL")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '        'ddlAgreementType.Attributes.Add("disabled", "true")
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "NO PRICE CHANGE" Or dt.Rows(0)("AgreementType").ToString = "PRICE INCREASE" Or dt.Rows(0)("AgreementType").ToString = "PRICE DECREASE" Then

            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NO PRICE CHANGE")
            '        ddlAgreementType.Items.Add("PRICE INCREASE")
            '        ddlAgreementType.Items.Add("PRICE DECREASE")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "WARRANTY" Then

            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("WARRANTY")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '    End If


            '    If dt.Rows(0)("Status").ToString <> "" Then : txtStatus.Text = dt.Rows(0)("Status").ToString.Trim() : End If
            '    If dt.Rows(0)("RenewalSt").ToString <> "" Then : txtRs.Text = dt.Rows(0)("RenewalSt").ToString.ToUpper.Trim() : End If
            '    If dt.Rows(0)("NotedSt").ToString <> "" Then : txtNS.Text = dt.Rows(0)("NotedSt").ToString : End If
            '    If dt.Rows(0)("GSt").ToString <> "" Then : txtGS.Text = dt.Rows(0)("GSt").ToString : End If
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : txtContractNo.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    txtContractNoSelected.Text = txtContractNo.Text
            '    lblContractNo.Text = txtContractNo.Text
            '    If dt.Rows(0)("ContractDate").ToString <> "" Then : txtContractDate.Text = Convert.ToDateTime(dt.Rows(0)("ContractDate")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("CustName").ToString <> "" Then : txtCustName.Text = dt.Rows(0)("CustName").ToString : End If
            '    lblName.Text = txtCustName.Text


            '    If dt.Rows(0)("InChargeId").ToString <> "" Then : txtTeamIncharge.Text = dt.Rows(0)("InChargeId").ToString : End If
            '    If dt.Rows(0)("AgreeValue").ToString <> "" Then : txtAgreeVal.Text = Convert.ToDecimal(dt.Rows(0)("AgreeValue")).ToString("f2") : End If

            '    txtAgreeValueEdit.Text = txtAgreeVal.Text

            '    If dt.Rows(0)("ContractValue").ToString <> "" Then : txtTotContVal.Text = Convert.ToDecimal(dt.Rows(0)("ContractValue")).ToString("f2") : End If
            '    If dt.Rows(0)("StartDate").ToString <> "" Then : txtContractStart.Text = Convert.ToDateTime(dt.Rows(0)("StartDate")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("EndDate").ToString <> "" Then : txtContractEnd.Text = Convert.ToDateTime(dt.Rows(0)("EndDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("ActualServiceStartDate").ToString <> "" Then : txtActualServiceStart.Text = Convert.ToDateTime(dt.Rows(0)("ActualServiceStartDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("ActualEnd").ToString <> "" Then : txtActualEnd.Text = Convert.ToDateTime(dt.Rows(0)("ActualEnd")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("Scheduler").ToString <> "" Then

            '        gScheduler = dt.Rows(0)("Scheduler").ToString.ToUpper()

            '        If ddlScheduler.Items.FindByValue(gScheduler) Is Nothing Then
            '            ddlScheduler.Items.Add(gScheduler)
            '            ddlScheduler.Text = gScheduler
            '        Else
            '            ddlScheduler.Text = dt.Rows(0)("Scheduler").ToString.Trim().ToUpper()
            '        End If
            '    End If


            '    If dt.Rows(0)("Scheduler").ToString <> "" Then
            '        gScheduler = dt.Rows(0)("Scheduler").ToString.ToUpper()

            '        If ddlSchedulerEdit.Items.FindByValue(gScheduler) Is Nothing Then
            '            ddlSchedulerEdit.Items.Add(gScheduler)
            '            ddlSchedulerEdit.Text = gScheduler
            '        Else
            '            ddlSchedulerEdit.Text = dt.Rows(0)("Scheduler").ToString.Trim().ToUpper()
            '        End If
            '    End If


            '    If dt.Rows(0)("SalesMan").ToString = "" Or dt.Rows(0)("SalesMan").ToString = "&nbsp;" Then
            '        ddlSalesman.SelectedIndex = 0
            '    Else
            '        'If dt.Rows(0)("SalesMan").ToString <> "" Then

            '        gSalesman = dt.Rows(0)("SalesMan").ToString.ToUpper()

            '        If ddlSalesman.Items.FindByValue(gSalesman) Is Nothing Then
            '            ddlSalesman.Items.Add(gSalesman)
            '            ddlSalesman.Text = gSalesman
            '        Else
            '            ddlSalesman.Text = dt.Rows(0)("SalesMan").ToString.Trim().ToUpper()
            '        End If
            '        'End If
            '    End If


            '    If dt.Rows(0)("SalesMan").ToString = "" Or dt.Rows(0)("SalesMan").ToString = "&nbsp;" Then
            '        ddlSalesmanEdit.SelectedIndex = 0
            '    Else
            '        gSalesman = dt.Rows(0)("SalesMan").ToString.ToUpper()

            '        If ddlSalesmanEdit.Items.FindByValue(gSalesman) Is Nothing Then
            '            ddlSalesmanEdit.Items.Add(gSalesman)
            '            ddlSalesmanEdit.Text = gSalesman
            '        Else
            '            ddlSalesmanEdit.Text = dt.Rows(0)("SalesMan").ToString.Trim().ToUpper()
            '        End If
            '        'End If
            '    End If


            '    'If dt.Rows(0)("SalesMan").ToString <> "" Then : ddlSalesman.Text = dt.Rows(0)("SalesMan").ToString.ToUpper.Trim().ToUpper() : End If
            '    If dt.Rows(0)("ProspectId").ToString <> "" Then : txtProspectId.Text = dt.Rows(0)("ProspectId").ToString : End If
            '    'If dt.Rows(0)("StaffId").ToString <> "" Then : txtStaffId.Text = dt.Rows(0)("StaffId").ToString : End If


            '    If dt.Rows(0)("ContactType").ToString <> "" Then
            '        If dt.Rows(0)("ContactType").ToString = "CORPORATE" Or dt.Rows(0)("ContactType").ToString = "COMPANY" Then
            '            ddlContactType.Text = "COMPANY"
            '        End If
            '        If dt.Rows(0)("ContactType").ToString = "RESIDENTIAL" Or dt.Rows(0)("ContactType").ToString = "PERSON" Then
            '            ddlContactType.Text = "PERSON"
            '        End If

            '        'If dt.Rows(0)("ContactType").ToString = "CORPORATE" Or dt.Rows(0)("ContactType").ToString = "COMPANY" Then
            '        '    ddlContactType.Text = "CORPORATE"
            '        'End If
            '        'If dt.Rows(0)("ContactType").ToString = "RESIDENTIAL" Or dt.Rows(0)("ContactType").ToString = "PERSON" Then
            '        '    ddlContactType.Text = "RESIDENTIAL"
            '        'End If
            '    End If
            '    If dt.Rows(0)("CustCode").ToString <> "" Then : txtClient.Text = dt.Rows(0)("CustCode").ToString : End If
            '    If dt.Rows(0)("CustAddr").ToString <> "" Then : txtOfficeAddress.Text = dt.Rows(0)("CustAddr").ToString : End If
            '    'If dt.Rows(0)("Contact").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("Contact").ToString : End If
            '    'If dt.Rows(0)("Telephone").ToString <> "" Then : txtTelephone.Text = dt.Rows(0)("Telephone").ToString : End If
            '    'If dt.Rows(0)("Fax").ToString <> "" Then : txtFax.Text = dt.Rows(0)("Fax").ToString : End If
            '    If dt.Rows(0)("Duration").ToString <> "" Then : txtDuration.Text = dt.Rows(0)("Duration").ToString : End If

            '    If dt.Rows(0)("DurationMs").ToString <> "" Then
            '        If dt.Rows(0)("DurationMs").ToString = "DAYS" Then
            '            rbtLstDuration.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "WEEKS" Then
            '            rbtLstDuration.SelectedIndex = 1
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "MONTHS" Then
            '            rbtLstDuration.SelectedIndex = 2
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "YEARS" Then
            '            rbtLstDuration.SelectedIndex = 3
            '        End If
            '    End If


            '    If dt.Rows(0)("ServiceNo").ToString <> "" Then : txtServiceNo.Text = dt.Rows(0)("ServiceNo").ToString : End If
            '    If dt.Rows(0)("ServiceBal").ToString <> "" Then : txtServiceBal.Text = dt.Rows(0)("ServiceBal").ToString : End If
            '    If dt.Rows(0)("ServiceAmt").ToString <> "" Then : txtServiceAmt.Text = dt.Rows(0)("ServiceAmt").ToString : End If
            '    If dt.Rows(0)("HourNo").ToString <> "" Then : txtHourNo.Text = dt.Rows(0)("HourNo").ToString : End If
            '    If dt.Rows(0)("HourBal").ToString <> "" Then : txtHourBal.Text = dt.Rows(0)("HourBal").ToString : End If
            '    If dt.Rows(0)("HourAmt").ToString <> "" Then : txtHourAmt.Text = dt.Rows(0)("HourAmt").ToString : End If
            '    If dt.Rows(0)("CallNo").ToString <> "" Then : txtCallNo.Text = dt.Rows(0)("CallNo").ToString : End If
            '    If dt.Rows(0)("CallBal").ToString <> "" Then : txtCallBal.Text = dt.Rows(0)("CallBal").ToString : End If
            '    If dt.Rows(0)("CallAmt").ToString <> "" Then : txtCallAmt.Text = dt.Rows(0)("CallAmt").ToString : End If
            '    If dt.Rows(0)("ResponseHours").ToString <> "" Then : txtResponse.Text = dt.Rows(0)("ResponseHours").ToString : End If
            '    If dt.Rows(0)("CancelCharges").ToString <> "" Then : txtCancelCharges.Text = dt.Rows(0)("CancelCharges").ToString : End If
            '    If dt.Rows(0)("CompensatePct").ToString <> "" Then : txtCompensatePct.Text = dt.Rows(0)("CompensatePct").ToString : End If
            '    If dt.Rows(0)("CompensateMax").ToString <> "" Then : txtCompensateMax.Text = dt.Rows(0)("CompensateMax").ToString : End If
            '    If dt.Rows(0)("Notes").ToString <> "" Then : txtContractNotes.Text = dt.Rows(0)("Notes").ToString : End If
            '    txtNotesEdit.Text = txtContractNotes.Text


            '    If dt.Rows(0)("Comments").ToString <> "" Then : txtServInst.Text = dt.Rows(0)("Comments").ToString : End If
            '    'If dt.Rows(0)("ActualStaff").ToString <> "" Then : txtActualStaff.Text = dt.Rows(0)("ActualStaff").ToString : End If
            '    If dt.Rows(0)("ServiceNoActual").ToString <> "" Then : txtServiceNoActual.Text = dt.Rows(0)("ServiceNoActual").ToString : End If
            '    If dt.Rows(0)("HourNoActual").ToString <> "" Then : txtHourNoActual.Text = dt.Rows(0)("HourNoActual").ToString : End If
            '    If dt.Rows(0)("CallNoActual").ToString <> "" Then : txtCallNoActual.Text = dt.Rows(0)("CallNoActual").ToString : End If
            '    If dt.Rows(0)("MinDuration").ToString <> "" Then : txtMinDuration.Text = dt.Rows(0)("MinDuration").ToString : End If
            '    If dt.Rows(0)("OContractNo").ToString <> "" Then : txtOContract.Text = dt.Rows(0)("OContractNo").ToString : End If
            '    If dt.Rows(0)("RenewalContractNo").ToString <> "" Then : txtRenewed.Text = dt.Rows(0)("RenewalContractNo").ToString : End If

            '    If dt.Rows(0)("RenewalDate").ToString <> "" Then : txtRenewalDate.Text = Convert.ToDateTime(dt.Rows(0)("RenewalDate")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("UnitNo").ToString <> "" Then : txtUnitNo.Text = dt.Rows(0)("UnitNo").ToString : End If
            '    If dt.Rows(0)("UnitBal").ToString <> "" Then : txtUnitBal.Text = dt.Rows(0)("UnitBal").ToString : End If
            '    If dt.Rows(0)("UnitAmt").ToString <> "" Then : txtUnitAmt.Text = dt.Rows(0)("UnitAmt").ToString : End If
            '    If dt.Rows(0)("UnitNoActual").ToString <> "" Then : txtUnitNoActual.Text = dt.Rows(0)("UnitNoActual").ToString : End If
            '    'If dt.Rows(0)("NotedDate").ToString <> "" Then : txtNotedDate.Text = dt.Rows(0)("NotedDate").ToString : End If

            '    If dt.Rows(0)("settle").ToString <> "" Then
            '        If dt.Rows(0)("settle").ToString = "UC" Then
            '            rbtnLSettle.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("settle").ToString = "OC" Then
            '            rbtnLSettle.SelectedIndex = 1
            '        ElseIf dt.Rows(0)("settle").ToString = "CB" Then
            '            rbtnLSettle.SelectedIndex = 2
            '        End If
            '    End If
            '    'If dt.Rows(0)("ActualServHrs").ToString <> "" Then : txtActualServHrs.Text = dt.Rows(0)("ActualServHrs").ToString : End If
            '    If dt.Rows(0)("YourReference").ToString <> "" Then : txtYourRef.Text = dt.Rows(0)("YourReference").ToString : End If
            '    If dt.Rows(0)("ContractGroup").ToString.Trim <> "" Then : ddlContractGrp.Text = dt.Rows(0)("ContractGroup").ToString.ToUpper.Trim : End If
            '    'If dt.Rows(0)("ServDayMethod").ToString <> "" Then : txtServDayMethod.Text = dt.Rows(0)("ServDayMethod").ToString : End If
            '    'If dt.Rows(0)("ServDay").ToString <> "" Then : txtServDay.Text = dt.Rows(0)("ServDay").ToString : End If
            '    If dt.Rows(0)("ServiceStart").ToString <> "" Then : txtServStart.Text = Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("ServiceEnd").ToString <> "" Then : txtServEnd.Text = Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy") : End If
            '    'If dt.Rows(0)("ServiceFrequence").ToString <> "" Then : txtServiceFrequence.Text = dt.Rows(0)("ServiceFrequence").ToString : End If
            '    If dt.Rows(0)("TimeIn").ToString <> "" Then : txtServTimeIn.Text = dt.Rows(0)("TimeIn").ToString : End If
            '    If dt.Rows(0)("TimeOut").ToString <> "" Then : txtServTimeOut.Text = dt.Rows(0)("TimeOut").ToString : End If
            '    'Convert.ToDateTime(Server.HtmlDecode(GridView1.SelectedRow.Cells(6).Text).ToString).ToString("dd/MM/yyyy")
            '    If dt.Rows(0)("WarrantyStart").ToString <> "" Then : txtWarrStart.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("WarrantyEnd").ToString <> "" Then : txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("ContractValue").ToString <> "" Then : txtConDetVal.Text = Convert.ToDecimal(dt.Rows(0)("ContractValue")).ToString("f2") : End If
            '    If dt.Rows(0)("PerServiceValue").ToString <> "" Then : txtPerServVal.Text = Convert.ToDecimal(dt.Rows(0)("PerServiceValue")).ToString("f2") : End If
            '    If dt.Rows(0)("Disc_Percent").ToString <> "" Then : txtDisPercent.Text = Convert.ToDecimal(dt.Rows(0)("Disc_Percent")).ToString("f2") : End If
            '    If dt.Rows(0)("DiscAmt").ToString <> "" Then : txtDisAmt.Text = Convert.ToDecimal(dt.Rows(0)("DiscAmt")).ToString("f2") : End If
            '    If dt.Rows(0)("BillingFrequency").ToString.Trim <> "" Then : ddlBillingFreq.Text = dt.Rows(0)("BillingFrequency").ToString.ToUpper().Trim : End If
            '    If dt.Rows(0)("BillingFrequency").ToString.Trim <> "" Then : ddlBillingFreqEdit.Text = dt.Rows(0)("BillingFrequency").ToString.ToUpper().Trim : End If


            '    'If dt.Rows(0)("DayService1").ToString <> "" Then : txtDayService1.Text = dt.Rows(0)("DayService1").ToString : End If
            '    'If dt.Rows(0)("DayService2").ToString <> "" Then : txtDayService2.Text = dt.Rows(0)("DayService2").ToString : End If
            '    'If dt.Rows(0)("DayService3").ToString <> "" Then : txtDayService3.Text = dt.Rows(0)("DayService3").ToString : End If
            '    'If dt.Rows(0)("DayService4").ToString <> "" Then : txtDayService4.Text = dt.Rows(0)("DayService4").ToString : End If
            '    If dt.Rows(0)("Support").ToString <> "" Then : txtServiceBy.Text = dt.Rows(0)("Support").ToString : End If
            '    If dt.Rows(0)("Supervisor").ToString <> "" Then : txtSupervisor.Text = dt.Rows(0)("Supervisor").ToString : End If



            '    If dt.Rows(0)("TeamID").ToString <> "" Then : txtTeam.Text = dt.Rows(0)("TeamID").ToString : End If
            '    If dt.Rows(0)("Postal").ToString <> "" Then : txtPostal.Text = dt.Rows(0)("Postal").ToString : End If
            '    If dt.Rows(0)("LocateGrp").ToString <> "" Then : ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString.ToUpper().Trim : End If
            '    If dt.Rows(0)("ContactPersonMobile").ToString <> "" Then : txtConPerMobile.Text = dt.Rows(0)("ContactPersonMobile").ToString : End If
            '    If dt.Rows(0)("OurReference").ToString <> "" Then : txtOurRef.Text = dt.Rows(0)("OurReference").ToString : End If
            '    'If dt.Rows(0)("ServiceDescription").ToString <> "" Then : txtServiceDescription.Text = dt.Rows(0)("ServiceDescription").ToString : End If
            '    If dt.Rows(0)("PrintingRemarks").ToString <> "" Then : txtNotesTemplate.Text = dt.Rows(0)("PrintingRemarks").ToString : End If
            '    'If dt.Rows(0)("Rev").ToString <> "" Then : txtRev.Text = dt.Rows(0)("Rev").ToString : End If
            '    If dt.Rows(0)("MainContractNo").ToString <> "" Then : txtMainContractNo.Text = dt.Rows(0)("MainContractNo").ToString : End If
            '    If dt.Rows(0)("AmtCompleted").ToString <> "" Then : txtAmtCompleted.Text = dt.Rows(0)("AmtCompleted").ToString : End If
            '    If dt.Rows(0)("AmtCompleted").ToString <> "" Then : txtServiceAmtActual.Text = dt.Rows(0)("AmtCompleted").ToString : End If

            '    If dt.Rows(0)("AmtBalance").ToString <> "" Then : txtAmtBalance.Text = dt.Rows(0)("AmtBalance").ToString : End If
            '    If dt.Rows(0)("AmtBalance").ToString <> "" Then : txtServiceAmtBal.Text = dt.Rows(0)("AmtBalance").ToString : End If

            '    If dt.Rows(0)("ValuePerMonth").ToString <> "" Then : txtValPerMnth.Text = dt.Rows(0)("ValuePerMonth").ToString : End If
            '    If dt.Rows(0)("BillingAmount").ToString <> "" Then : txtBillingAmount.Text = dt.Rows(0)("BillingAmount").ToString : End If

            '    If dt.Rows(0)("AllocatedSvcTime").ToString <> "" Then : txtAllocTime.Text = dt.Rows(0)("AllocatedSvcTime").ToString : End If
            '    If dt.Rows(0)("Remarks").ToString <> "" Then : txtRemarks.Text = dt.Rows(0)("Remarks").ToString : End If
            '    If dt.Rows(0)("QuotePrice").ToString <> "" Then : txtQuotePrice.Text = dt.Rows(0)("QuotePrice").ToString : End If
            '    If dt.Rows(0)("QuoteUnitMS").ToString <> "" Then : txtQuoteUnit.Text = dt.Rows(0)("QuoteUnitMS").ToString : End If
            '    If dt.Rows(0)("CompanyGroup").ToString <> "" Then : ddlCompanyGrp.Text = dt.Rows(0)("CompanyGroup").ToString.Trim : End If

            '    If dt.Rows(0)("CompanyGroup").ToString <> "" Then : ddlCompanyGroupEdit.Text = dt.Rows(0)("CompanyGroup").ToString.Trim : End If

            '    'If dt.Rows(0)("SalesGRP").ToString <> "" Then : txtSalesGRP.Text = dt.Rows(0)("SalesGRP").ToString : End If
            '    If dt.Rows(0)("GSTNos").ToString <> "" Then : txtGstNo.Text = dt.Rows(0)("GSTNos").ToString : End If

            '    If dt.Rows(0)("ScheduleType").ToString <> "" Then
            '        ddlScheduleType.Text = dt.Rows(0)("ScheduleType").ToString.Trim
            '    End If

            '    'SASI - 17/04/2017 - COMMISSION

            '    If dt.Rows(0)("SalesCommissionPerc").ToString <> "" Then : txtSalesCommPercent.Text = Convert.ToDecimal(dt.Rows(0)("SalesCommissionPerc")).ToString("f2") : End If
            '    If dt.Rows(0)("SalesCommissionAmt").ToString <> "" Then : txtSalesCommAmt.Text = Convert.ToDecimal(dt.Rows(0)("SalesCommissionAmt")).ToString("f2") : End If
            '    If dt.Rows(0)("TechCommissionPerc").ToString <> "" Then : txtTechCommPercent.Text = Convert.ToDecimal(dt.Rows(0)("TechCommissionPerc")).ToString("f2") : End If
            '    If dt.Rows(0)("TechCommissionAmt").ToString <> "" Then : txtTechCommAmt.Text = Convert.ToDecimal(dt.Rows(0)("TechCommissionAmt")).ToString("f2") : End If

            '    'SASI - END

            '    'SASI - Industry Segment 28/04/2017

            '    If dt.Rows(0)("ServiceTypeID").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("ServiceTypeID").ToString) = True Then
            '        ddlServiceTypeID.SelectedIndex = 0
            '    Else
            '        ddlServiceTypeID.Text = (dt.Rows(0)("ServiceTypeID").ToString.Trim & " - " & dt.Rows(0)("ServiceTypeDescription").ToString.Trim)
            '    End If

            '    'If dt.Rows(0)("ServiceTypeID").ToString <> "" Then : ddlServiceTypeID.Text = dt.Rows(0)("ServiceTypeID").ToString : End If
            '    'If dt.Rows(0)("ServiceTypeDescription").ToString <> "" Then : ddlServiceTypeID.SelectedValue = dt.Rows(0)("ServiceTypeDescription").ToString : End If
            '    If dt.Rows(0)("CategoryID").ToString <> "" Then : txtCategoryID.Text = dt.Rows(0)("CategoryID").ToString : End If
            '    If dt.Rows(0)("PortfolioYN").ToString <> "" Then : ddlPortfolioYN.SelectedValue = dt.Rows(0)("PortfolioYN").ToString.Trim : End If
            '    If dt.Rows(0)("PortfolioValue").ToString <> "" Then : txtPortfolioValue.Text = Convert.ToDecimal(dt.Rows(0)("PortfolioValue")).ToString("f2") : End If
            '    txtPortfolioValueEdit.Text = txtPortfolioValue.Text

            '    If dt.Rows(0)("MarketSegmentID").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("MarketSegmentID").ToString) = True Then
            '        ddlMarketSegmentID.Text = ""
            '    Else
            '        ddlMarketSegmentID.Text = Server.HtmlDecode(dt.Rows(0)("MarketSegmentID").ToString)
            '    End If
            '    'If dt.Rows(0)("MarketSegmentID").ToString <> "" Then : ddlMarketSegmentID.Text = dt.Rows(0)("MarketSegmentID").ToString : End If

            '    If dt.Rows(0)("Industry").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("Industry").ToString) = True Then
            '        ddlIndustry.Text = ""
            '    Else
            '        ddlIndustry.Text = Server.HtmlDecode(dt.Rows(0)("Industry").ToString)
            '    End If
            '    'If dt.Rows(0)("Industry").ToString <> "" Then : ddlIndustry.SelectedItem.Text = dt.Rows(0)("Industry").ToString : End If

            '    'SASI - End Industry Segment


            '    If dt.Rows(0)("Warranty").ToString = "Y" Then
            '        ChkWithWarranty.Checked = True
            '    Else
            '        ChkWithWarranty.Checked = False
            '    End If

            '    'If ChkWithWarranty.Checked = True Then
            '    '    Command.Parameters.AddWithValue("@Warranty", "Y")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@Warranty", "N")
            '    'End If

            '    If dt.Rows(0)("WarrantyDuration").ToString <> "" Then : txtWarrDurtion.Text = dt.Rows(0)("WarrantyDuration").ToString : End If
            '    If dt.Rows(0)("WarrantyBillingAmount").ToString <> "" Then : txtWarrantyBillingAmount.Text = dt.Rows(0)("WarrantyBillingAmount").ToString : End If


            '    If dt.Rows(0)("WarrantyBillingFrequency").ToString <> "" Then
            '        ddlWarrantyFrequency.Text = dt.Rows(0)("WarrantyBillingFrequency").ToString.ToUpper()
            '    Else
            '        ddlWarrantyFrequency.SelectedIndex = 0
            '    End If



            '    'If ChkRequireInspection.Checked = True Then
            '    '    Command.Parameters.AddWithValue("@RequireInspecton", "Y")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@RequireInspecton", "N")
            '    'End If

            '    If dt.Rows(0)("RequireInspecton").ToString = "Y" Then
            '        ChkRequireInspection.Checked = True
            '    Else
            '        ChkRequireInspection.Checked = False
            '    End If

            '    'If ddlInspectionFrequency.SelectedIndex = 0 Then
            '    '    Command.Parameters.AddWithValue("@InspectionFrequency", "")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
            '    'End If

            '    If dt.Rows(0)("InspectionFrequency").ToString <> "" Then : ddlInspectionFrequency.Text = dt.Rows(0)("InspectionFrequency").ToString.Trim : End If

            '    'If TxtInspectionStart.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

            '    'End If

            '    'If TxtInspectionEnd.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

            '    'End If

            '    If dt.Rows(0)("InspectionStart").ToString <> "" Then : TxtInspectionStart.Text = Convert.ToDateTime(dt.Rows(0)("InspectionStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("InspectionEnd").ToString <> "" Then : TxtInspectionEnd.Text = Convert.ToDateTime(dt.Rows(0)("InspectionEnd")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("ComputationMethod").ToString <> "" Then
            '        If dt.Rows(0)("ComputationMethod").ToString = "Monthly" Then
            '            rbtComputationMethod.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("ComputationMethod").ToString = "Fixed" Then
            '            rbtComputationMethod.SelectedIndex = 1

            '        End If
            '    End If

            '    'If rbtComputationMethod.SelectedIndex = 0 Then
            '    '    Command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
            '    'End If


            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID.Text = dt.Rows(0)("AccountId").ToString : End If
            '    txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblName.Text = dt.Rows(0)("CustName").ToString : End If
            '    'If dt.Rows(0)("OfficeAddress").ToString <> "" Then : txtOfficeAddress.Text = dt.Rows(0)("OfficeAddress").ToString : End If

            '    'SASI - 17/04/2017 | Commission Tab

            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID2.Text = dt.Rows(0)("AccountId").ToString : End If
            '    'txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo2.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblAccountName.Text = dt.Rows(0)("CustName").ToString : End If


            '    'SASI - 17/04/2017 End

            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID1.Text = dt.Rows(0)("AccountId").ToString : End If
            '    'txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo1.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblName1.Text = dt.Rows(0)("CustName").ToString : End If


            '    If dt.Rows(0)("TotalArea").ToString <> "" Then : txtTotalArea.Text = dt.Rows(0)("TotalArea").ToString : End If
            '    If dt.Rows(0)("CompletedArea").ToString <> "" Then : txtCompletedArea.Text = dt.Rows(0)("CompletedArea").ToString : End If
            '    If dt.Rows(0)("BalanceArea").ToString <> "" Then : txtBalanceArea.Text = dt.Rows(0)("BalanceArea").ToString : End If

            '    If dt.Rows(0)("RetentionPerc").ToString <> "" Then : txtRetentionPerc.Text = dt.Rows(0)("RetentionPerc").ToString : End If
            '    If dt.Rows(0)("RetentionValue").ToString <> "" Then : txtRetentionValue.Text = dt.Rows(0)("RetentionValue").ToString : End If
            '    If dt.Rows(0)("RetentionClaimDate").ToString <> "" Then : txtRetentionReleaseDate.Text = Convert.ToDateTime(dt.Rows(0)("RetentionClaimDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("PONo").ToString <> "" Then : txtPONo.Text = dt.Rows(0)("PONo").ToString : End If
            '    If dt.Rows(0)("ServiceAddress").ToString <> "" Then : txtServiceAddressCons.Text = dt.Rows(0)("ServiceAddress").ToString : End If

            '    If dt.Rows(0)("BillAddress1").ToString <> "" Then : txtBillingAddress.Text = dt.Rows(0)("BillAddress1").ToString : End If


            '    'If txtStatus.Text = "T" Then
            '    If txtStatus.Text = "T" Or txtStatus.Text = "C" Or txtStatus.Text = "E" Or txtStatus.Text = "X" Or txtStatus.Text = "R" Then
            '        If dt.Rows(0)("TerminationCode").ToString <> "" Then : ddlTerminationCode.Text = dt.Rows(0)("TerminationCode").ToString + " - " + dt.Rows(0)("TerminationDescription").ToString : End If
            '    End If

            '    'txtTerminationDescription.Text = dt.Rows(0)("TerminationDescription").ToString

            '    txtTerminationCode.Text = dt.Rows(0)("TerminationCode").ToString
            '    txtTerminationDescription.Text = dt.Rows(0)("CommentsStatus").ToString
            '    If String.IsNullOrEmpty(txtAccountId.Text) = False Then

            '        ddlProjectCode.Items.Clear()
            '        ddlProjectCode.Items.Add("--SELECT--")

            '        Dim query1 As String
            '        query1 = "SELECT CONCAT(ProjectNo, ' - ', ProjectName) AS ProjectCode FROM tblProject where Status ='O' and AccountID = '" & txtAccountId.Text & "' and ProjectName is not null ORDER BY ProjectNo  "
            '        PopulateDropDownList(query1, "ProjectCode", "ProjectCode", ddlProjectCode)



            '        If dt.Rows(0)("ProjectName").ToString.Trim = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("ProjectName").ToString) = True Then
            '            ddlProjectCode.SelectedIndex = 0
            '        Else
            '            'ddlProjectCode.Items.Add(dt.Rows(0)("ProjectCode").ToString.Trim & " - " & dt.Rows(0)("ProjectName").ToString.Trim)
            '            ddlProjectCode.Text = dt.Rows(0)("ProjectCode").ToString.Trim & " - " & dt.Rows(0)("ProjectName").ToString.Trim.ToUpper
            '        End If
            '    End If


            '    If dt.Rows(0)("BaitStationTotal").ToString <> "" Then : txtBaitStationTotal.Text = dt.Rows(0)("BaitStationTotal").ToString : End If
            '    If dt.Rows(0)("BaitStationInstalled").ToString <> "" Then : txtBaitStationInstalled.Text = dt.Rows(0)("BaitStationInstalled").ToString : End If
            '    If dt.Rows(0)("BaitStationBalance").ToString <> "" Then : txtBaitStationBalance.Text = dt.Rows(0)("BaitStationBalance").ToString : End If

            '    If Convert.ToDecimal(txtRetentionPerc.Text) = 0.0 Then
            '        'chkGenerateCreditNote.Visible = True
            '        chkGenerateCreditNote.Checked = False
            '    End If

            '    If dt.Rows(0)("CommentsStatus").ToString <> "" Then : txtCommentChSt.Text = dt.Rows(0)("CommentsStatus").ToString : End If

            '    If dt.Rows(0)("LastBillDate").ToString <> "" Then : txtLastBillDate.Text = Convert.ToDateTime(dt.Rows(0)("LastBillDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("Location").ToString <> "" Then : txtLocation.Text = dt.Rows(0)("Location").ToString : End If

            '    'txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).ToString("dd/MM/yyyy") : End If
            '    'Command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
            '    'Command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
            '    'If txtRetentionReleaseDate.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
            '    'End If

            '    tb1.ActiveTabIndex = 0
            'End If






            'Start:Retrive Service Records

            Dim commandService As MySqlCommand = New MySqlCommand

            commandService.CommandType = CommandType.Text
            commandService.CommandText = "SELECT count(*) as totservicerec FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and ((status ='O') or (Status ='P') or (Status ='H'))"
            commandService.Connection = conn

            Dim drService As MySqlDataReader = commandService.ExecuteReader()
            Dim dtService As New DataTable
            dtService.Load(drService)

            txtTotServicerec.Text = "0"

            If dtService.Rows.Count > 0 Then
                btnServiceRecords.Text = "SERVICE [" + Val(dtService.Rows(0)("totservicerec").ToString).ToString + "]"
                txtTotServicerec.Text = dtService.Rows(0)("totservicerec").ToString
                btnServiceRecords.Enabled = True
                btnServiceRecords.ForeColor = System.Drawing.Color.Black

            End If

            If Val(dtService.Rows(0)("totservicerec").ToString).ToString = 0 Then
                txtEndofLastSchedule.Enabled = False
                txtEndofLastSchedule.ForeColor = Color.White
            Else
                txtEndofLastSchedule.Enabled = False
                txtEndofLastSchedule.ForeColor = Color.Black
            End If
            'End:Retrieve Service Records
            'conn.Close()


            If Convert.ToDateTime(txtContractStart.Text.Trim) > DateTime.Today Then
                txtFutureDated.Text = "Y"
            Else
                txtFutureDated.Text = "N"
            End If

            'Start:Retrive Service Records with O

            Dim commandServiceO As MySqlCommand = New MySqlCommand

            commandServiceO.CommandType = CommandType.Text
            commandServiceO.CommandText = "SELECT count(*) as totservicerec FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and ((status ='O'))"
            commandServiceO.Connection = conn

            Dim drServiceO As MySqlDataReader = commandServiceO.ExecuteReader()
            Dim dtServiceO As New DataTable
            dtServiceO.Load(drServiceO)

            txtServiceStarted.Text = "0"

            'If dtServiceO.Rows.Count > 0 Then
            txtServiceStarted.Text = Val(dtServiceO.Rows(0)("totservicerec").ToString).ToString


            'we are comparing Total Service Records with 'O', 'P', 'H' and Total Service Records with 'O'

            If Val(dtService.Rows(0)("totservicerec").ToString).ToString = Val(dtServiceO.Rows(0)("totservicerec").ToString).ToString Then
                txtFutureDated.Text = "Y"
            Else
                txtFutureDated.Text = "N"
            End If
            'End If

            'End:Retrieve Service Records with O

            '22.08.21

            If String.IsNullOrEmpty(txtEndofLastSchedule.Text) = True Then
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    If Val(dtServiceO.Rows(0)("totservicerec").ToString).ToString <> 0 Then
                        If Val(dtService.Rows(0)("totservicerec").ToString).ToString = Val(dtServiceO.Rows(0)("totservicerec").ToString).ToString Then

                            Dim commandServiceLastDate As MySqlCommand = New MySqlCommand

                            commandServiceLastDate.CommandType = CommandType.Text
                            commandServiceLastDate.CommandText = "SELECT max(servicedate) as maxservicedate FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and (status ='O')"
                            commandServiceLastDate.Connection = conn

                            Dim drServiceLastDate As MySqlDataReader = commandServiceLastDate.ExecuteReader()
                            Dim dtServiceLastDate As New DataTable
                            dtServiceLastDate.Load(drServiceLastDate)

                            If dtServiceLastDate.Rows.Count > 0 Then
                                If Not IsDBNull(dtServiceLastDate.Rows(0)("maxservicedate")) Then
                                    If String.IsNullOrEmpty(dtServiceLastDate.Rows(0)("maxservicedate")) = False Then
                                        txtEndofLastSchedule.Text = Convert.ToDateTime(dtServiceLastDate.Rows(0)("maxservicedate")).ToString("dd/MM/yyyy")

                                        Dim commandHeaderUpdate As MySqlCommand = New MySqlCommand
                                        commandHeaderUpdate.CommandType = CommandType.Text
                                        commandHeaderUpdate.CommandText = "Update tblcontract set EndofLastSchedule=@EndofLastSchedule where ContractNo = '" & txtContractNo.Text & "'"
                                        commandHeaderUpdate.Parameters.Clear()

                                        commandHeaderUpdate.Parameters.AddWithValue("@EndofLastSchedule", Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd"))

                                        commandHeaderUpdate.Connection = conn
                                        commandHeaderUpdate.ExecuteNonQuery()
                                        commandHeaderUpdate.Dispose()
                                    End If
                                End If
                            End If
                        End If
                    End If

                End If
            End If


            'Start: Contract Multiple PO

            Dim commandContractPO As MySqlCommand = New MySqlCommand

            commandContractPO.CommandType = CommandType.Text
            commandContractPO.CommandText = "SELECT count(PONumber) as PODetails FROM tblcontractponumber where ContractNo = '" & txtContractNo.Text & "'"
            commandContractPO.Connection = conn

            Dim drContractPO As MySqlDataReader = commandContractPO.ExecuteReader()
            Dim dtContractPO As New DataTable
            dtContractPO.Load(drContractPO)

            If dtContractPO.Rows.Count > 0 Then
                btnMultiplePO.Text = "P.O. [" & Val(dtContractPO.Rows(0)("PODetails").ToString).ToString & "]"
            End If

            commandContractPO.Dispose()
            dtContractPO.Dispose()
            drContractPO.Dispose()

            'End : Contract Multiple PO


            CalculateTotalDistribution()
           
            '22.08.21

            If String.IsNullOrEmpty(txtServStart.Text.Trim) = False Then
                txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
            End If

            If String.IsNullOrEmpty(txtServEnd.Text.Trim) = False Then
                TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString().ToUpper
            End If

            If ((ddlContactType.Text.Trim = "CORPORATE") Or (ddlContactType.Text.Trim = "COMPANY")) Then
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
                txtContType3.Text = "RESIDENTIAL"
                'txtContType4.Text = "PERSON"
            Else
                txtContType1.Text = "RESIDENTIAL"
                txtContType2.Text = "PERSON"
                txtContType3.Text = "CORPORATE"
                'txtContType4.Text = "COMPANY"
            End If

            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
            ElseIf GridSelected = "SQLDSContractClientId" Then
                'SqlDataSource1.SelectCommand = txt.Text
                'SQLDSContractClientId.DataBind()
            ElseIf GridSelected = "SQLDSContractNo" Then
                'SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
            End If

            Session("contractdetailfrom") = ""
            Session("contractno") = ""
            'Session("serviceschedulefrom") = ""

            'ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")

            'If txtStatus.Text = "O" Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    'ddlStatusChSt.Items.Add("X - Cancelled")
            '    'ddlStatusChSt.Items.Add("V - Void")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If



            '''''''''Transaction

            Dim commandTrans As MySqlCommand = New MySqlCommand

            commandTrans.CommandType = CommandType.Text
            commandTrans.CommandText = "SELECT count(distinct(tblsalesdetail.InvoiceNumber)) as VoucherNumber FROM tblsales, tblsalesdetail where tblsales.InvoiceNumber = tblsalesdetail.InvoiceNumber and  tblsales.PostStatus = 'P'  and tblsalesdetail.CostCode= '" & txtContractNo.Text & "'"
            commandTrans.Connection = conn

            Dim drTrans As MySqlDataReader = commandTrans.ExecuteReader()
            Dim dtTrans As New DataTable
            dtTrans.Load(drTrans)

            If dtTrans.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnTransactions.Text = "TRANSACTIONS [" & Val(dtTrans.Rows(0)("VoucherNumber").ToString).ToString & "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            commandTrans.Dispose()
            dtTrans.Dispose()
            drTrans.Dispose()

            '''''''''''''''''''

            'Start: Contract Details

            Dim commandContractDet As MySqlCommand = New MySqlCommand

            commandContractDet.CommandType = CommandType.Text
            commandContractDet.CommandText = "SELECT count(ContractNo) as ContractDetails FROM tblContractDet where ContractNo = '" & txtContractNo.Text & "'"
            commandContractDet.Connection = conn

            Dim drContractDet As MySqlDataReader = commandContractDet.ExecuteReader()
            Dim dtContractDet As New DataTable
            dtContractDet.Load(drContractDet)

            If dtContractDet.Rows.Count > 0 Then
                'If Val(dtContractDet.Rows(0)("ContractDetails").ToString).ToString = 0 Then
                lblServiceDetailsCount.Text = "Service Details [" & Val(dtContractDet.Rows(0)("ContractDetails").ToString).ToString & "]"

                'ViewState("detailcount") = Val(dtContractDet.Rows(0)("ContractDetails").ToString
                'txtCountContractDetail.Text = Val(dtContractDet.Rows(0)("ContractDetails").ToString).ToString
                'End If
            End If

            If Val(dtContractDet.Rows(0)("ContractDetails").ToString) = 0 Then
                mdlNoContractDetail.Show()
            End If
            commandContractDet.Dispose()
            dtContractDet.Dispose()
            drContractDet.Dispose()


            'End : Contract Details


            'Start: Contract Notes

            Dim commandContractNotes As MySqlCommand = New MySqlCommand

            commandContractNotes.CommandType = CommandType.Text
            commandContractNotes.CommandText = "SELECT count(KeyField) as NotesDetails FROM tblNOTES where KeyField = '" & txtContractNo.Text & "'"
            commandContractNotes.Connection = conn

            Dim drContractNotes As MySqlDataReader = commandContractNotes.ExecuteReader()
            Dim dtContractNotes As New DataTable
            dtContractNotes.Load(drContractNotes)

            If dtContractNotes.Rows.Count > 0 Then
                lblNotesCount.Text = "Notes [" & Val(dtContractNotes.Rows(0)("NotesDetails").ToString).ToString & "]"
            End If

            commandContractNotes.Dispose()
            dtContractNotes.Dispose()
            drContractNotes.Dispose()

            'End : Contract Notes


            'Start: Contract Rateschedule

            Dim commandRateschedule As MySqlCommand = New MySqlCommand

            commandRateschedule.CommandType = CommandType.Text
            commandRateschedule.CommandText = "SELECT count(ContractNo) as Rateschedule FROM tblRateschedule where ContractNo = '" & txtContractNo.Text & "'"
            commandRateschedule.Connection = conn

            Dim drRateschedule As MySqlDataReader = commandRateschedule.ExecuteReader()
            Dim dtRateschedule As New DataTable
            dtRateschedule.Load(drRateschedule)

            If dtRateschedule.Rows.Count > 0 Then
                lblRatescheduleCount.Text = "Schedule of Rate [" & Val(dtRateschedule.Rows(0)("Rateschedule").ToString).ToString & "]"
            End If

            commandRateschedule.Dispose()
            dtRateschedule.Dispose()
            drRateschedule.Dispose()

            'End : Contract Rateschedule


            'Start: Items Issued Rateschedule

            Dim commandItemsIssued As MySqlCommand = New MySqlCommand

            commandItemsIssued.CommandType = CommandType.Text
            'sqlDSItemsIssued.SelectCommand = "select ItemID, ItemName, sum(Qty) as Qty, UnitMS FROM tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' Group by ItemID order by ItemID"

            commandItemsIssued.CommandText = "SELECT count(tblservicerecordissueditem.ContractNo) as ItemsIssued FROM  tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' GROUP BY ItemID"
            commandItemsIssued.Connection = conn

            Dim drItemsIssued As MySqlDataReader = commandItemsIssued.ExecuteReader()
            Dim dtItemsIssued As New DataTable
            dtItemsIssued.Load(drItemsIssued)

            If dtItemsIssued.Rows.Count > 0 Then
                '  lblItemsIssuedCount.Text = "Items Issued [" & Val(dtItemsIssued.Rows(0)("ItemsIssued").ToString).ToString & "]"
                lblItemsIssuedCount.Text = "Items Issued [" & Val(dtItemsIssued.Rows.Count.ToString).ToString & "]"
            End If

            commandItemsIssued.Dispose()
            dtItemsIssued.Dispose()
            drItemsIssued.Dispose()

            'End : Items issued
            '''''''''Price History

            DisplayContractPriceHistory()

            'Dim commandHistory As MySqlCommand = New MySqlCommand

            'commandHistory.CommandType = CommandType.Text
            'commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
            'commandHistory.Connection = conn

            'Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            'Dim dtHistory As New DataTable
            'dtHistory.Load(drHistory)

            'If dtHistory.Rows.Count > 0 Then
            '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
            '    btnHistory.Text = "PRICE HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
            '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If

            'commandHistory.Dispose()
            'dtHistory.Dispose()
            'drHistory.Dispose()
            '''''''''''''''''''

            '''''''''Price History

            Dim commandMaxDateHistory As MySqlCommand = New MySqlCommand

            commandMaxDateHistory.CommandType = CommandType.Text
            commandMaxDateHistory.CommandText = "SELECT Date FROM tblcontractpricehistory where rcno = (Select  max(rcno) from tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = false) and  ContractNo= '" & txtContractNo.Text & "' and Void = false"
            commandMaxDateHistory.Connection = conn

            Dim drMaxDateHistory As MySqlDataReader = commandMaxDateHistory.ExecuteReader()
            Dim dtMaxDateHistory As New DataTable
            dtMaxDateHistory.Load(drMaxDateHistory)

            If dtMaxDateHistory.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                'Convert.ToDateTime(dt.Rows(0)("WarrantyStart")).ToString("dd/MM/yyyy")

                'txtLastPriceChangeDate.Text = dtMaxDateHistory.Rows(0)("Date").ToString("dd/MM/yyyy")
                txtLastPriceChangeDate.Text = Convert.ToDateTime(dtMaxDateHistory.Rows(0)("Date")).ToString("dd/MM/yyyy")
                txtLastPriceChangeDateNCR.Text = Convert.ToDateTime(dtMaxDateHistory.Rows(0)("Date")).ToString("dd/MM/yyyy")
            End If

            commandMaxDateHistory.Dispose()
            dtMaxDateHistory.Dispose()
            drMaxDateHistory.Dispose()
            '''''''''''''''''''
            '''''''''''''''''''''''

            'start: to be modified
            'Dim IsPosted As Integer
            'IsPosted = 0

            'Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
            'commandXIsServicePosted.CommandType = CommandType.Text

            'commandXIsServicePosted.CommandText = "select Rcno from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "' limit 1"
            'commandXIsServicePosted.Connection = conn

            'Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
            'Dim dtIsServicePosted As New DataTable
            'dtIsServicePosted.Load(drIsServicePosted)

            'If dtIsServicePosted.Rows.Count > 0 Then
            '    IsPosted = 1
            'End If


            'If txtStatus.Text = "O" And ddlRenewalStatus.Text = "O" And IsPosted = 0 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    ddlStatusChSt.Items.Add("X - Cancelled")
            '    ddlStatusChSt.Items.Add("V - Void")
            'ElseIf txtStatus.Text = "O" And ddlRenewalStatus.Text = "O" And IsPosted = 1 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    'ddlStatusChSt.Items.Add("X - Cancelled")
            '    'ddlStatusChSt.Items.Add("V - Void")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If

            'end: to be modified

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            commandService.Dispose()
            'dt.Dispose()
            dtService.Dispose()
            'dr.Close()
            drService.Close()

            '''''''''''''''' 25.10.17

            '''''''''''''''''''''''''''''''''''''
            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False

            btnSvcEdit.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            btnSvcDelete.Enabled = False
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = True
            btnPrint.ForeColor = System.Drawing.Color.Black

            txtContractStart.ForeColor = Drawing.Color.Black
            txtServStart.ForeColor = Drawing.Color.Black



            If txtbtnAutoRenew.Text = "Y" Then
                btnAutoRenew.Visible = True
            End If

            '''''''''''''''''''''''''''''''''''''''

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black

            btnCopy.Enabled = True
            btnCopy.ForeColor = System.Drawing.Color.Black

            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black
            'btnQuit.Enabled = True
            'btnQuit.ForeColor = System.Drawing.Color.Black


            btnContractDetail.Enabled = True
            btnContractDetail.ForeColor = System.Drawing.Color.Black

            btnTerminate.Enabled = True
            btnTerminate.ForeColor = System.Drawing.Color.Black

            btnEarlyCompletion.Enabled = True
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Black

            btnContractRenewal.Enabled = True
            btnContractRenewal.ForeColor = System.Drawing.Color.Black

            btnCancelByCompany.Enabled = True
            btnCancelByCompany.ForeColor = System.Drawing.Color.Black

            'btnDelete.ForeColor = System.Drawing.Color.Black

            btnChangeStatus.Enabled = True
            btnChangeStatus.ForeColor = System.Drawing.Color.Black

            btnRevision.Enabled = True
            btnRevision.ForeColor = System.Drawing.Color.Black

            btnRecalculate.Enabled = True
            btnRecalculate.ForeColor = System.Drawing.Color.Black

            btnServiceRecords.Enabled = True
            btnServiceRecords.ForeColor = System.Drawing.Color.Black

            btnTransactions.Enabled = True
            btnTransactions.ForeColor = System.Drawing.Color.Black

            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False

            ''If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            AccessControl()
            'End If

            'ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")

            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.SelectedIndex = 0
            'End If


            If txtGS.Text = "P" Then
                btnServiceSchedule.Enabled = False
                btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
            Else
                btnServiceSchedule.Enabled = True
                btnServiceSchedule.ForeColor = System.Drawing.Color.Black
                'btnSave.Enabled = True
            End If


            '''' Start: 10.03

            'Start:Retrieve Service Records

            btnServiceSchedule.Text = "SCHEDULE"

            If rbtFixedContinuous.SelectedIndex = 0 Then    ' added this line for the condition on 27.09.21
                Dim connRG As MySqlConnection = New MySqlConnection()

                connRG.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connRG.Open()
                Dim commandServiceRG As MySqlCommand = New MySqlCommand

                commandServiceRG.CommandType = CommandType.Text
                commandServiceRG.CommandText = "SELECT count(Rcno) as totservicerecO FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and status ='O'"
                commandServiceRG.Connection = connRG

                Dim drServiceRG As MySqlDataReader = commandServiceRG.ExecuteReader()
                Dim dtServiceRG As New DataTable
                dtServiceRG.Load(drServiceRG)

                'txtTotServicerec.Text = "0"
                'txtRemarks.Text = Val(dtServiceRG.Rows(0)("totservicerecO").ToString).ToString

                If dtServiceRG.Rows.Count > 0 Then
                    If txtTotServicerec.Text.Trim = Val(dtServiceRG.Rows(0)("totservicerecO").ToString).ToString Then

                        If txtRegenerateSchedule.Text = "1" And txtGS.Text = "P" Then
                            btnServiceSchedule.Enabled = True
                            btnServiceSchedule.ForeColor = System.Drawing.Color.Black
                            btnServiceSchedule.Text = "REGENERATE"
                        Else
                            btnServiceSchedule.Text = "SCHEDULE"
                        End If
                    End If
                End If

                connRG.Close()
                connRG.Dispose()
                commandServiceRG.Dispose()
                dtServiceRG.Dispose()
                drServiceRG.Close()
            End If


            'Start: added on 27.09.21

            If Left(txtStatus.Text, 1) = "O" Then
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    If txtRegenerateSchedule.Text = "1" And txtGS.Text = "P" Then
                        btnServiceSchedule.Enabled = True
                        btnServiceSchedule.ForeColor = System.Drawing.Color.Black
                        btnServiceSchedule.Text = "GENERATE"
                        'Else
                        '    btnServiceSchedule.Text = "SCHEDULE"
                    End If
                End If
            End If

            'End: added on 27.09.21

            ' End: 10.03


            'If txtStatus.Text = "O" Then
            If Left(txtStatus.Text, 1) = "O" Then
                ''''''''''''
                Dim sqlstr As String
                sqlstr = ""

                sqlstr = "SELECT ShowExpiryNotification FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

                Dim commandIsShowExpiryNotification As MySqlCommand = New MySqlCommand

                Dim connIsShowExpiryNotification As MySqlConnection = New MySqlConnection()
                connIsShowExpiryNotification.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsShowExpiryNotification.Open()

                commandIsShowExpiryNotification.CommandType = CommandType.Text
                commandIsShowExpiryNotification.CommandText = sqlstr
                commandIsShowExpiryNotification.Connection = connIsShowExpiryNotification

                Dim dr As MySqlDataReader = commandIsShowExpiryNotification.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    ''''''''''
                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                            If dt.Rows(0)("ShowExpiryNotification").ToString() = True Then
                                lblAlert.Text = "This contract has EXPIRED, please Renew or Terminate this contract"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            End If

                            ddlStatusChSt.Items.Clear()
                            ddlStatusChSt.Items.Add("--SELECT--")

                            ddlStatusChSt.Items.Add("T - Terminated")


                            btnRevision.Enabled = False
                            btnRevision.ForeColor = System.Drawing.Color.Gray

                            btnServiceSchedule.Enabled = False
                            btnServiceSchedule.ForeColor = System.Drawing.Color.Gray


                            btnEdit.Enabled = False
                            btnEdit.ForeColor = System.Drawing.Color.Gray

                        Else
                            ddlStatusChSt.Items.Clear()
                            ddlStatusChSt.Items.Add("--SELECT--")

                            ddlStatusChSt.Items.Add("H - On Hold")
                            ddlStatusChSt.Items.Add("T - Terminated")
                        End If
                    End If

                End If

                connIsShowExpiryNotification.Close()
                connIsShowExpiryNotification.Dispose()
                commandIsShowExpiryNotification.Dispose()
                dt.Dispose()
                dr.Close()


            End If


            'If txtStatus.Text = "C" Or txtStatus.Text = "X" Then
            If Left(txtStatus.Text, 1) = "C" Or Left(txtStatus.Text, 1) = "X" Then
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray

                btnServiceSchedule.Enabled = False
                btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

                btnContractRenewal.Enabled = False
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If



            If Left(txtStatus.Text, 1) = "T" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then  'Added this line on 27.09.21

                    If Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd") <= DateTime.Now.ToString("yyyy-MM-dd") Then
                        btnChangeStatus.Enabled = False
                        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                    Else
                        btnChangeStatus.Enabled = True
                        btnChangeStatus.ForeColor = System.Drawing.Color.Black
                    End If
                End If

                If rbtFixedContinuous.SelectedIndex = 1 Then  'Added this line on 27.09.21

                    If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") <= DateTime.Now.ToString("yyyy-MM-dd") Then
                        btnChangeStatus.Enabled = False
                        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                    Else
                        btnChangeStatus.Enabled = True
                        btnChangeStatus.ForeColor = System.Drawing.Color.Black
                    End If
                End If

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray

                btnServiceSchedule.Enabled = False
                btnServiceSchedule.ForeColor = System.Drawing.Color.Gray


                'If rbtFixedContinuous.SelectedIndex = 0 Then
                '    Dim noofDaysforRenewal As Long

                '    noofDaysforRenewal = DateDiff(DateInterval.Day, Convert.ToDateTime(txtActualEnd.Text), Now())

                '    If noofDaysforRenewal <= 185 Then
                '        btnContractRenewal.Enabled = True
                '        btnContractRenewal.ForeColor = System.Drawing.Color.Black
                '    Else
                '        btnContractRenewal.Enabled = False
                '        btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                '    End If
                'End If

                'txtServiceNo -> Total Service
                'txtServiceNoActual -> AsyncCompletedEventArgs Service

                '29.03.21
                'If rbtFixedContinuous.SelectedIndex = 0 Then
                '    Dim noofDaysforRenewal As Long

                '    noofDaysforRenewal = DateDiff(DateInterval.Day, Convert.ToDateTime(txtActualEnd.Text), Now())

                '    If noofDaysforRenewal <= 185 And (Convert.ToInt64(txtServiceNo.Text) >= Convert.ToInt64(txtServiceNoActual.Text)) Then
                '        btnContractRenewal.Enabled = True
                '        btnContractRenewal.ForeColor = System.Drawing.Color.Black
                '    Else
                '        btnContractRenewal.Enabled = False
                '        btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                '    End If

                '    'If noofDaysforRenewal <= 185 Then
                '    '    If (Convert.ToInt64(txtServiceNo.Text) >= Convert.ToInt64(txtServiceNoActual.Text)) Then
                '    '        btnContractRenewal.Enabled = True
                '    '        btnContractRenewal.ForeColor = System.Drawing.Color.Black
                '    '    Else
                '    '        btnContractRenewal.Enabled = False
                '    '        btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                '    '    End If
                '    'End If

                'End If
                ''''''''
                ''''''''

                btnContractRenewal.Enabled = False
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                '29.03.21
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If

            FindLastServiceDate()



            'If rbtFixedContinuous.SelectedIndex = 1 Then
            '    If btnServiceSchedule.Text = "SCHEDULE" Then
            '        If txtGS.Text = "P" Then
            '            Dim noofDaysforRenewal As Long

            '            noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtEndofLastSchedule.Text))
            '            'noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtLastServiceDate.Text))

            '            'If noofDaysforRenewal <= 31 Then
            '            If noofDaysforRenewal <= Val(txtDaysBeforeScheduleGeneration.Text) Then
            '                btnServiceSchedule.Enabled = True
            '                btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            '            Else
            '                btnServiceSchedule.Enabled = False
            '                btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
            '            End If
            '        End If
            '    End If

            'btnServiceSchedule.Enabled = True
            'btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            'End If



            If rbtFixedContinuous.SelectedIndex = 1 Then
                If txtEndofLastSchedule.ForeColor <> Color.White Then
                    If String.IsNullOrEmpty(txtEndofLastSchedule.Text) = False Then
                        If Left(txtStatus.Text, 1) = "O" Then
                            Dim noofDaysforRenewal As Long

                            If String.IsNullOrEmpty(txtLastServiceDate.Text) = True Then
                                noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtEndofLastSchedule.Text))
                            Else
                                noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtLastServiceDate.Text))
                            End If

                            'If noofDaysforRenewal <= 30 Then
                            If noofDaysforRenewal <= Val(txtDaysBeforeRenewalMessage.Text) Then
                                mdlDueForExtension.Show()

                                btnEdit.Enabled = False
                                btnSvcEdit.Enabled = False

                                btnEdit.ForeColor = System.Drawing.Color.Gray
                                btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                                btnServiceSchedule.Enabled = True
                                btnServiceSchedule.ForeColor = System.Drawing.Color.Black
                            Else
                                If Left(txtGS.Text, 1) = "P" Then
                                    'btnServiceSchedule.Enabled = False
                                    'btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
                                Else
                                    btnServiceSchedule.Enabled = True
                                    btnServiceSchedule.ForeColor = System.Drawing.Color.Black
                                End If
                            End If

                        End If
                    End If
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 1 Then
                If txtEndofLastSchedule.ForeColor <> Color.White Then
                    If String.IsNullOrEmpty(txtEndofLastSchedule.Text) = False Then
                        If Left(txtStatus.Text, 1) = "O" Then
                            Dim noofDaysforRenewal As Long


                            If String.IsNullOrEmpty(txtLastServiceDate.Text) = True Then
                                noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtEndofLastSchedule.Text))
                            Else
                                noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtLastServiceDate.Text))
                            End If

                            'noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtEndofLastSchedule.Text))
                            'noofDaysforRenewal = DateDiff(DateInterval.Day, Now(), Convert.ToDateTime(txtLastServiceDate.Text))
                            If noofDaysforRenewal <= 0 Then
                                btnServiceSchedule.Enabled = True
                                btnServiceSchedule.ForeColor = System.Drawing.Color.Black

                                mdlPastDueForExtension.Show()

                                btnEdit.Enabled = False
                                btnSvcEdit.Enabled = False

                                btnEdit.ForeColor = System.Drawing.Color.Gray
                                btnSvcEdit.ForeColor = System.Drawing.Color.Gray
                            End If

                        End If
                    End If
                End If
            End If


            If Left(txtStatus.Text, 1) = "E" Then
                ''''''''''''
                Dim sqlstr As String
                sqlstr = ""

                sqlstr = "SELECT ShowExpiryNotification FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

                Dim commandIsShowExpiryNotification As MySqlCommand = New MySqlCommand

                Dim connIsShowExpiryNotification As MySqlConnection = New MySqlConnection()
                connIsShowExpiryNotification.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsShowExpiryNotification.Open()

                commandIsShowExpiryNotification.CommandType = CommandType.Text
                commandIsShowExpiryNotification.CommandText = sqlstr
                commandIsShowExpiryNotification.Connection = connIsShowExpiryNotification

                Dim dr As MySqlDataReader = commandIsShowExpiryNotification.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    ''''''''''
                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                            If dt.Rows(0)("ShowExpiryNotification").ToString() = True Then
                                lblAlert.Text = "This contract has EXPIRED, please Renew or Terminate this contract"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            End If
                        End If
                    End If

                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray

                    btnServiceSchedule.Enabled = False
                    btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray

                    ddlStatusChSt.Items.Clear()
                    ddlStatusChSt.Items.Add("--SELECT--")
                    ddlStatusChSt.Items.Add("T - Terminated")
                End If

                connIsShowExpiryNotification.Close()
                connIsShowExpiryNotification.Dispose()
                commandIsShowExpiryNotification.Dispose()
                dt.Dispose()
                dr.Close()


            End If



            'If txtStatus.Text = "R" Then
            If Left(txtStatus.Text, 1) = "R" Then
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray

                btnContractRenewal.Enabled = False
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If


            'If txtStatus.Text = "H" Then
            If Left(txtStatus.Text, 1) = "H" Then
                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray

                btnContractRenewal.Enabled = False
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                ddlStatusChSt.Items.Clear()
                ddlStatusChSt.Items.Add("--SELECT--")

                ddlStatusChSt.Items.Add("O - Open")
                ddlStatusChSt.Items.Add("T - Terminated")
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray
                End If
            End If

            'If rbtFixedContinuous.SelectedIndex = 1 Then
            '    If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
            '        btnRevision.Enabled = False
            '        btnRevision.ForeColor = System.Drawing.Color.Gray
            '    End If
            '    btnContractRenewal.Enabled = False
            '    btnContractRenewal.ForeColor = System.Drawing.Color.Gray
            'End If

            If rbtFixedContinuous.SelectedIndex = 1 Then
                If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                    If Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                        btnRevision.Enabled = False
                        btnRevision.ForeColor = System.Drawing.Color.Gray
                    End If
                End If

                btnContractRenewal.Enabled = False
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray
            End If
            FindIsInActiveCustomer()



            FindIsContractValueAllowEdit()

            If Left(txtStatus.Text, 1) <> "O" And Left(txtStatus.Text, 1) <> "E" Then
                btnExtendContractEndDate.Visible = False
            End If

            If txtExtendContractEndDate.Text = "0" Then
                btnExtendContractEndDate.Visible = False
            End If

            If String.IsNullOrEmpty(txtContractEnd.Text) = False Then
                'If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                '    btnExtendContractEndDate.Visible = False
                'End If
            End If

            '18.04.23
            'If Left(txtStatus.Text, 1) <> "O" Then
            '    btnClient11.Visible = False
            '    btnClient12.Visible = False
            'End If
            '18.04.23

            'FindLastServiceDate()

            If String.IsNullOrEmpty(txtTerminationCode.Text) = False Then
                FindTerminationDescription()
            End If


            '''' Service Schedule is in progress

            Dim sqlstr1 As String
            sqlstr1 = "SELECT * FROM tbwserviceschedulegenerate where contractNo = '" & txtContractNo.Text & "' and Generated =False"

            Dim commandIsServiceScheduleGenerating As MySqlCommand = New MySqlCommand

            Dim connIsServiceScheduleGenerating As MySqlConnection = New MySqlConnection()
            connIsServiceScheduleGenerating.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsServiceScheduleGenerating.Open()

            commandIsServiceScheduleGenerating.CommandType = CommandType.Text
            commandIsServiceScheduleGenerating.CommandText = sqlstr1
            commandIsServiceScheduleGenerating.Connection = connIsServiceScheduleGenerating

            Dim drIsServiceScheduleGenerating As MySqlDataReader = commandIsServiceScheduleGenerating.ExecuteReader()
            Dim dtIsServiceScheduleGenerating As New DataTable
            dtIsServiceScheduleGenerating.Load(drIsServiceScheduleGenerating)

            If dtIsServiceScheduleGenerating.Rows.Count > 0 Then

                btnServiceSchedule.Enabled = False
                btnChangeStatus.Enabled = False
                btnContractRenewal.Enabled = False
                btnServiceRecords.Enabled = False
                btnCopy.Enabled = False
                btnRevision.Enabled = False
                btnFilter.Enabled = False
                btnEdit.Enabled = False

                btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                btnContractRenewal.ForeColor = System.Drawing.Color.Gray
                btnServiceRecords.ForeColor = System.Drawing.Color.Gray
                btnCopy.ForeColor = System.Drawing.Color.Gray
                btnRevision.ForeColor = System.Drawing.Color.Gray
                btnFilter.ForeColor = System.Drawing.Color.Gray
                btnEdit.ForeColor = System.Drawing.Color.Gray

                lblAlert.Text = "THE SYSTEM IS GENERATING THE SCHEDULE OF THIS CONTRACT."
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)


            End If

            connIsServiceScheduleGenerating.Close()
            commandIsServiceScheduleGenerating.Dispose()

            ' Service Schedule in Progress


            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()
            lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"

            '''''''''''''''' 25.10 17

            If Left(txtStatus.Text, 1) = "T" Or Left(txtStatus.Text, 1) = "C" Or Left(txtStatus.Text, 1) = "V" Or Left(txtStatus.Text, 1) = "E" Or Left(txtStatus.Text, 1) = "R" Or Left(txtStatus.Text, 1) = "X" Then
                btnClient5.Visible = False
                btnClient6.Visible = False
                btnClient7.Visible = False
                btnClient8.Visible = False
                btnClient10.Visible = False


            End If

            If txtServiceStarted.Text = "0" Then
                'If txtGS.Text = "O" Then
                btnClient8.Visible = False
            End If

            'If rbtFixedContinuous.SelectedIndex = 0 Then
            '    If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
            '        btnClient8.Visible = False
            '    End If
            'Else
            '    If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
            '        btnClient8.Visible = False
            '    End If
            'End If


            'If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
            '    If Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
            '        btnClient8.Visible = False
            '    End If
            'End If


            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)


            '''' Latest Schedule Details


            txtLatestScheduleDetails.Text = ""

            If rbtFixedContinuous.SelectedIndex = 0 Then

                'Start: 

                Dim connLSF As MySqlConnection = New MySqlConnection()

                connLSF.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connLSF.Open()
                Dim commandServiceLSF As MySqlCommand = New MySqlCommand

                commandServiceLSF.CommandType = CommandType.Text
                commandServiceLSF.CommandText = "SELECT count(Rcno) as totservicerecO FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and ((status ='O') or (status ='P') or (status ='H'))"
                commandServiceLSF.Connection = connLSF

                Dim drServiceLSF As MySqlDataReader = commandServiceLSF.ExecuteReader()
                Dim dtServiceLSF As New DataTable
                dtServiceLSF.Load(drServiceLSF)

                'End:
                If dtServiceLSF.Rows.Count > 0 Then
                    If dtServiceLSF.Rows(0)("totservicerecO").ToString > 0 Then
                        txtLatestScheduleDetails.Visible = True
                        txtLatestScheduleDetails.Text = "Latest Schedule : " & txtServStart.Text & " To " & txtServEnd.Text & " - " & Val(dtServiceLSF.Rows(0)("totservicerecO").ToString).ToString & " Services"
                    Else
                        txtLatestScheduleDetails.Text = ""
                        txtLatestScheduleDetails.Visible = False
                    End If

                Else
                    txtLatestScheduleDetails.Text = ""
                    txtLatestScheduleDetails.Visible = False
                End If

                connLSF.Close()
                connLSF.Dispose()
                commandServiceLSF.Dispose()
                dtServiceLSF.Dispose()
                drServiceLSF.Close()

            End If


            If rbtFixedContinuous.SelectedIndex = 1 Then
                Dim sqlstrLatestScheduleDetails As String
                sqlstrLatestScheduleDetails = ""
                sqlstrLatestScheduleDetails = "SELECT * FROM tbwserviceschedulegenerate where contractNo = '" & txtContractNo.Text & "' and Generated =True and IsError='N'  order by rcno desc Limit 1"

                Dim commandLatestScheduleDetails As MySqlCommand = New MySqlCommand

                Dim conncommandLatestScheduleDetails As MySqlConnection = New MySqlConnection()
                conncommandLatestScheduleDetails.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conncommandLatestScheduleDetails.Open()

                commandLatestScheduleDetails.CommandType = CommandType.Text
                commandLatestScheduleDetails.CommandText = sqlstrLatestScheduleDetails
                commandLatestScheduleDetails.Connection = conncommandLatestScheduleDetails

                Dim drLatestScheduleDetails As MySqlDataReader = commandLatestScheduleDetails.ExecuteReader()
                Dim dtLatestScheduleDetails As New DataTable
                dtLatestScheduleDetails.Load(drLatestScheduleDetails)

                If dtLatestScheduleDetails.Rows.Count > 0 Then

                    'Start: 

                    Dim connLS As MySqlConnection = New MySqlConnection()

                    connLS.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connLS.Open()
                    Dim commandServiceLS As MySqlCommand = New MySqlCommand

                    commandServiceLS.CommandType = CommandType.Text
                    commandServiceLS.CommandText = "SELECT count(Rcno) as totservicerecO FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and  ((status ='O') or (status ='P') or (status ='H')) and ServiceDate between '" & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceStart")).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceEnd")).ToString("yyyy-MM-dd") & "'"
                    commandServiceLS.Connection = connLS

                    Dim drServiceLS As MySqlDataReader = commandServiceLS.ExecuteReader()
                    Dim dtServiceLS As New DataTable
                    dtServiceLS.Load(drServiceLS)

                    'End:

                    'txtLatestScheduleDetails.Text = "Latest Schedule : " & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy") & " To " & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy") & " - " & Val(dtServiceLS.Rows(0)("totservicerecO").ToString).ToString & " Services"


                    If dtServiceLS.Rows.Count > 0 Then
                        If dtServiceLS.Rows(0)("totservicerecO").ToString > 0 Then
                            txtLatestScheduleDetails.Visible = True
                            txtLatestScheduleDetails.Text = "Latest Schedule : " & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy") & " To " & Convert.ToDateTime(dtLatestScheduleDetails.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy") & " - " & Val(dtServiceLS.Rows(0)("totservicerecO").ToString).ToString & " Services"
                        Else
                            txtLatestScheduleDetails.Text = ""
                            txtLatestScheduleDetails.Visible = False
                        End If

                    Else
                        txtLatestScheduleDetails.Text = ""
                        txtLatestScheduleDetails.Visible = False
                    End If
                    connLS.Close()
                    connLS.Dispose()
                    commandServiceLS.Dispose()
                    dtServiceLS.Dispose()
                    drServiceLS.Close()

                End If

                conncommandLatestScheduleDetails.Close()
                commandLatestScheduleDetails.Dispose()
            End If

            '  Latest Schedule Details

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION POPULATERECORD", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Private Sub DisplayContractPriceHistory()
        Try
            '''''''''Price History
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandHistory As MySqlCommand = New MySqlCommand

            commandHistory.CommandType = CommandType.Text
            commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
            commandHistory.Connection = conn

            Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            Dim dtHistory As New DataTable
            dtHistory.Load(drHistory)

            If dtHistory.Rows.Count > 0 Then
                btnHistory.Text = "PRICE HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
            End If

            commandHistory.Dispose()
            dtHistory.Dispose()
            drHistory.Dispose()
            conn.Close()
            conn.Dispose()
            '''''''''''''''''''

            '''''''''Price History
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION POPULATERECORD", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub



    Private Sub FindTerminationDescription()
        Dim sqlstr As String
        sqlstr = ""

        Try

            sqlstr = "SELECT Description FROM tblTerminationCode where Code = '" & txtTerminationCode.Text & "'"
           

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtTerminationDesc.Text = dt.Rows(0)("Description").ToString
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    Private Sub FindIsInActiveCustomer()
        Dim sqlstr As String
        sqlstr = ""

        Try
            If ddlContactType.Text = "CORPORTE" Or ddlContactType.Text = "COMPANY" Then
                sqlstr = "SELECT InActive FROM tblCompany where AccountId = '" & txtAccountId.Text & "'"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                sqlstr = "SELECT InActive FROM tblPerson where AccountId = '" & txtAccountId.Text & "'"
            End If

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Inactive").ToString = "1" Then
                    chkInactive.Checked = True
                    lblIsInActiveAccountId.Visible = True

                    btnADD.Enabled = False
                    btnADD.ForeColor = System.Drawing.Color.Gray

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray

                    btnCopy.Enabled = False
                    btnCopy.ForeColor = System.Drawing.Color.Gray

                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray

                    If Left(txtStatus.Text, 1) <> "E" Then
                        btnChangeStatus.Enabled = False
                        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                    End If

                    btnContractRenewal.Enabled = False
                    btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                    btnServiceSchedule.Enabled = False
                    btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

                    lblIsInActiveAccountId.Text = txtAccountId.Text & " - " & txtCustName.Text & " is an InActive Account"
                    lblInactiveAccount1.Text = "This account is made inactive"
                    ''


                    sqlstr = "SELECT StaffID, Logdate, Comments FROM tbleventlog where Docref = '" & txtAccountId.Text & "' and Module ='CHST' and Action='CHST'"


                    Dim commandComments As MySqlCommand = New MySqlCommand

                    Dim connComments As MySqlConnection = New MySqlConnection()
                    connComments.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connComments.Open()

                    commandComments.CommandType = CommandType.Text
                    commandComments.CommandText = sqlstr
                    commandComments.Connection = connComments

                    Dim drComments As MySqlDataReader = commandComments.ExecuteReader()
                    Dim dtComments As New DataTable
                    dtComments.Load(drComments)

                    If dtComments.Rows.Count > 0 Then
                        lblIsInActiveAccountId.Text = txtAccountId.Text & " - " & txtCustName.Text & " is an InActive Account (" & dtComments.Rows(0)("Comments").ToString & ")"

                        lblInactiveAccount1.Text = "This account is made INACTIVE by " & dtComments.Rows(0)("StaffID").ToString & " on " & Convert.ToDateTime(dtComments.Rows(0)("LogDate")).ToString("dd/MM/yyyy")
                        lblInactiveAccount2.Text = txtAccountId.Text
                        lblInactiveAccount3.Text = txtCustName.Text
                        lblInactiveAccount4.Text = dtComments.Rows(0)("Comments").ToString

                    End If

                    connComments.Close()
                    commandComments.Dispose()
                    dtComments.Dispose()
                    drComments.Close()

                    mdlInActiveAccount.Show()
                    ''

                Else
                    chkInactive.Checked = False
                    lblIsInActiveAccountId.Visible = False
                End If

            Else
                lblIsInActiveAccountId.Visible = False
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    'Function

    Private Sub GenerateContractNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lContractNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String

            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtContractDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")

            'lContractNo = "SVCN" + lPrefix + "-"
            lContractNo = txtPrefixDocNoContract.Text.Trim + "SVCN" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "SVCN" + lYear
            'lPrefix = txtPrefixDocNoContract.Text.Trim + "SVCN" + lYear


            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                If lMonth = "01" Then
                    lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "02" Then
                    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "03" Then
                    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "04" Then
                    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "05" Then
                    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "06" Then
                    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "07" Then
                    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "08" Then
                    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "09" Then
                    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "10" Then
                    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "11" Then
                    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "12" Then
                    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr)

                commandDocControlEdit.Dispose()
                dt2.Dispose()
            Else


                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If
                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & Left(lPrefix, Len(lPrefix) - 2) & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"
                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                         "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr)

                lSetWidth = 6
                lSuffixVal = 1
                commandDocControlInsert.Dispose()
                dt2.Dispose()
            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()

            '19.06.2022
            'txtContractNo.Text = lContractNo + lSuffix

            txtContractNoTemp.Text = lContractNo + lSuffix

            '19.06.2022

            conn.Close()
            conn.Dispose()
            commandDocControl.Dispose()

            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION GenerateContractNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Public Sub MakeMeNull()
        Try
            If txtMode.Text <> "View" Then
                If String.IsNullOrEmpty(Session("serviceschedulefrom")) = True And String.IsNullOrEmpty(Session("servicefrom")) = True And String.IsNullOrEmpty(Session("contractfrom")) = True Then
                    Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimecontract();", True)
                End If

            End If

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""
            lblFileUploadCount.Text = "File Upload"
            lblServiceDetailsCount.Text = "Service Details"
            lblNotesCount.Text = "Notes"
            lblItemsIssuedCount.Text = "Items Issued"
            lblRatescheduleCount.Text = "Schedule of Rate"

            If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True Then
                txtAccountId.Text = ""
                txtCustName.Text = ""
                ddlSalesman.SelectedIndex = 0
                ddlCompanyGrp.SelectedIndex = 0
                txtAddress.Text = ""
                txtOfficeAddress.Text = ""
                txtBillingAddress.Text = ""
                txtServiceAddressCons.Text = ""
                txtPostal.Text = ""

                ddlIndustry.Text = ""
                ddlMarketSegmentID.Text = ""

                ddlContractGrp.SelectedIndex = 0
                txtCategoryID.Text = ""
            End If

            txtContractNo.Text = ""
            txtContractNoTemp.Text = ""
            txtContractNoSelected.Text = ""
            txtOurRef.Text = ""
            txtYourRef.Text = ""
            txtTelephone.Text = ""
            txtFax.Text = ""
            txtConPerMobile.Text = ""
            txtAgreeVal.Text = "0.00"
            txtDuration.Text = "1"
            rbtLstDuration.SelectedIndex = 3
            rbtComputationMethod.SelectedIndex = 0

            ddlAgreementType.SelectedIndex = 0

            'txtContractStart.Text = ""
            'txtServStart.Text = ""
            'txtContractEnd.Text = ""
            'txtServEnd.Text = ""

            txtWarrStart.Text = ""
            txtWarrEnd.Text = ""
            txtServStartDay.Text = ""
            TxtServEndDay.Text = ""
            'txtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""

            'txtWarrEnd.Text = ""
            txtValPerMnth.Text = "0.00"
            txtBillingAmount.Text = "0.00"
            txtContractNotes.Text = ""
            txtServInst.Text = ""
            'txtStatus.Text = "O"
            txtStatus.Text = "O - Open"
            txtLastBillDate.Text = ""

            txtRs.Text = "O"

            txtNS.Text = "O"
            txtProspectId.Text = ""
            txtGstNo.Text = ""
            txtAccCode.Text = ""

            txtGS.Text = "O"
            txtResponse.Text = ""
            txtCancelCharges.Text = ""
            txtMinDuration.Text = ""
            txtConDetVal.Text = "0.00"
            txtPerServVal.Text = "0.00"
            txtDisPercent.Text = "0.00"
            txtDisAmt.Text = "0.00"
            txtTotContVal.Text = "0.00"
            txtOContract.Text = ""
            txtRenewalDate.Text = ""
            txtRenewed.Text = ""
            txtQuotePrice.Text = "0.00"
            txtQuoteUnit.Text = ""
            txtRemarks.Text = ""
            txtPrintBody.Text = ""
            txtClient.Text = ""
            txtContactPerson.Text = ""
            'txtSalesMan.Text = ""
            'txtScheduler.Text = ""
            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""
            txtServiceNo.Text = "0"
            txtServiceNoActual.Text = "0"
            txtServiceBal.Text = "0"
            txtPrevContract.Text = ""
            txtServiceAmt.Text = "0.00"
            txtServiceAmtActual.Text = "0.00"
            txtServiceAmtBal.Text = "0.00"
            txtHourAmt.Text = "0.00"
            txtHourBal.Text = "0.00"
            txtHourNo.Text = "0"
            txtHourNoActual.Text = "0"
            txtUnitAmt.Text = "0.00"
            txtUnitBal.Text = "0.00"
            txtUnitNo.Text = "0.00"
            txtUnitNoActual.Text = "0.00"
            txtCallAmt.Text = "0.00"
            txtCallBal.Text = "0.00"
            txtCallNo.Text = "0"
            txtCallNoActual.Text = "0"
            txtCompensateMax.Text = "0.00"
            txtCompensatePct.Text = "0.00"
            txtAmtBalance.Text = "0.00"
            txtAmtCompleted.Text = "0.00"

            txtPONo.Text = ""
            txtMainContractNo.Text = ""

            txtActualServiceStart.Text = ""
            txtActualEnd.Text = ""
            lblIsInActiveAccountId.Text = ""

            lblIsInActiveAccountId.Visible = False
            'txtContractnoSearch.Text = ""
            'txtClientNameSearch.Text = ""
            'txtAccountIdSearch.Text = ""
            chkSearchAll.Checked = False
            'chkSearchOpen.Checked = False
            'chkSearchVoid.Checked = False
            'chkSearchOnHold.Checked = False
            'chkSearchCancelled.Checked = False
            'chkSearchCompleted.Checked = False
            'chkSearchPost.Checked = False
            'chkSearchEarlyComplete.Checked = False
            'chkSearchTerminated.Checked = False
            'chkSearchRevised.Checked = False

            txtModeRenew.Text = ""
            txtRcnoRenew.Text = 0

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                ddlContactType.Text = "COMPANY"
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
            End If

            txtTeamSelection.Text = ""

            ddlLocateGrp.SelectedIndex = 0
            ddlScheduleType.SelectedIndex = 0


            ddlBillingFreq.SelectedIndex = 0

            ddlScheduler.Text = Session("StaffID")

            'SASI - Industry Segment 28/04/2017

            '   ddlIndustry.SelectedIndex = 0
            ddlServiceTypeID.SelectedIndex = 0

            '   ddlMarketSegmentID.SelectedIndex = 0
            ddlPortfolioYN.SelectedItem.Text = "YES"
            txtPortfolioValue.Text = "0.00"
            txtBaitStationTotal.Text = "0"
            txtRcnoFirstContractPriceHistory.Text = "0"

            'SASI - End Industry Segment

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnCancelByCompany.Enabled = False
            btnEarlyCompletion.Enabled = False
            btnTerminate.Enabled = False
            btnChangeStatus.Enabled = False
            btnServiceSchedule.Enabled = False
            btnServiceRecords.Enabled = False
            btnContractRenewal.Enabled = False
            btnContractDetail.Enabled = False
            btnRevision.Enabled = False
            btnDelete.Enabled = False
            btnPrint.Enabled = False
            btnServiceRecords.Text = "SERVICE "
            btnTransactions.Text = "TRANSACTIONS"
            btnHistory.Text = "PRICE HISTORY"
            btnMultiplePO.Text = "P.O."
            btnContractGroupDistribution.Text = "DISTRIBUTION"
            'lblServiceDetailsCount.Text = "Service Details"

            'txtSearch1Status.Text = "O,P,H,R"
            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""

            'Query = "Select * from tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O'"
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlScheduler)
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchScheduler)

            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            ChkWithWarranty.Checked = False
            txtWarrDurtion.Text = ""
            TxtInspectionStart.Text = ""
            TxtInspectionEnd.Text = ""
            ChkRequireInspection.Checked = False
            ddlInspectionFrequency.SelectedIndex = 0
            txtOriginalAccountId.Text = ""

            txtTotalArea.Text = "0.00"
            txtCompletedArea.Text = "0.00"
            txtBalanceArea.Text = "0.00"

            ddlTerminationCode.SelectedIndex = 0


            'ddlContractCode.DataSourceID = "sqldsContractCode"
            'ddlContractCode.DataBind()
            ddlContractCode.SelectedIndex = 0
            txtTerminationType.Text = ""

            txtRetentionPerc.Text = "0.00"
            txtRetentionValue.Text = "0.00"
            txtRetentionReleaseDate.Text = ""
            txtCommentChSt.Text = ""

            txtNotesTemplate.Text = ""
            txtLocation.SelectedIndex = 0

            txtTerminationCode.Text = ""
            txtTerminationDesc.Text = ""
            txtTerminationDescription.Text = ""

            txtWarrantyBillingAmount.Text = "0.00"
            chkGenerateCreditNote.Visible = False
            chkGenerateCreditNote.Checked = False

            rbtFixedContinuous.SelectedIndex = 0
            txtEndofLastSchedule.Text = ""
            txtTotServicerec.Text = "0"

            txtSignedAgreementReference.Text = "Signed Service Agreement"

            txtOnHoldCode.Text = ""
            txtOnHoldComments.Text = ""
            ddlOnHoldCodeChSt.SelectedIndex = 0
            txtOnHoldCommentsChSt.Text = ""
            txtOnHoldDate.Text = ""
            txtOnHoldDateChSt.Text = ""
            txtOnHoldDescription.Text = ""
            txtOnHoldDscriptionChSt.Text = ""

            txtContractEnd.Text = ""
            txtServEnd.Text = ""

            txtActualServiceStart.Text = ""
            txtActualEnd.Text = ""
            txtEndofLastSchedule.Text = ""


            txtLastServiceDate.Text = ""
            txtIsPopupChSt.Text = ""

            txtLastPriceChangeDate.Text = ""

            txtEffectiveDate.Text = ""
            txtAgreeValueEdit.Text = ""
            txtCommentsAgreeValue.Text = ""

            txtEditAgreeValuePercChange.Text = 0
            txtAgreeValueToUpdate.Text = 0
            rdbFixedValueChange.Checked = False
            rdbPercentageChange.Checked = False
            txtPercentageChangeAgreeValueEdit.Text = ""

            chkExcludeFromBatchPriceChange.Checked = False
            chkGSTInclusive.Checked = False

            txtAgreeValServiceSummary.Text = "0"
            txtServiceNoCT.Text = "0"
            txtCTArea.Text = "0"
            txtServiceAmtCT.Text = "0"
            txtBaitStationCT.Text = "0"
            txtAgreeValueOriginalForReviseandRenewal.Text = "0"

            txtGSTInclusiveAmount.Text = ""
            txtAgreedValueAmount.Text = ""

            txtFutureDated.Text = ""
            txtServiceStarted.Text = ""
            txtActualEndChStForReNew.Text = ""
            txtActualEndChStForRevise.Text = ""

            lblAgreentTypeRemarks.Text = ""
            txtContractServiceLocked.Text = ""
            txtLatestScheduleDetails.Text = ""

            'ddlSalesman.Items.Clear()
            'Query = "Select * from tblStaff where Roles = 'SALES MAN'"
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesman)
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)

            DisableControls()
            EnableSvcControls()


            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()
            FirstGridViewRowContractGroupDistribution()
            'Dim Query As String

            'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            'Query = "Select descrip1 from tblTarget order by descrip1"

            'grvFreqDetails.Enabled = False
            'grvTargetDetails.Enabled = False
            'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)

            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxContractGroupDistribution As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
            'Query4 = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
            Query4 = "Select ContractGroup from tblContractGroup  order by ContractGroup"
            PopulateDropDownList(Query4, "ContractGroup", "ContractGroup", TextBoxContractGroupDistribution)

            sqlDSContractCode.SelectCommand = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblcontractcode where Status = 'Y' ORDER BY Code"
            sqlDSContractCode.DataBind()

            ddlContractCode.DataSourceID = "sqldsContractCode"
            ddlContractCode.DataBind()

            'Dim lblidlocation As ImageButton = CType(grvServiceLocation.Rows(0).FindControl("BtnLocation"), ImageButton)
            'lblidlocation.Visible = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeMeNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Public Sub MakeSvcNull()
        Try
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""


            lblMessage.Text = ""
            lblAlert.Text = ""

            '19.06.22
            'txtMode.Text = ""
            '19.06.22
            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""

            txtValPerMnth.Text = "0.00"
            txtContractNotes.Text = ""
            txtServInst.Text = ""
            'txtStatus.Text = "O"
            txtStatus.Text = "O - Open"
            txtCustName.Text = ""
            txtRs.Text = "O"
            txtAddress.Text = ""
            txtOfficeAddress.Text = ""
            txtNS.Text = "O"
            txtProspectId.Text = ""

            txtAccCode.Text = ""
            txtPostal.Text = ""



            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""

            ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0
            txtServStartSvc.Text = ""
            txtServStartDaySvc.Text = ""
            txtServEndSvc.Text = ""
            txtServEndDaySvc.Text = ""
            lblContractNo.Text = ""
            lblAccountID.Text = ""
            lblName.Text = ""


            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False
            btnServiceRecords.Text = "SERVICE "
            btnTransactions.Text = "TRANSACTIONS"
            btnHistory.Text = "PRICE HISTORY"
            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""


            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            'ChkWithWarranty.Checked = False
            'txtWarrDurtion.Text = ""
            'TxtInspectionStart.Text = ""
            'TxtInspectionEnd.Text = ""
            'ChkRequireInspection.Checked = False
            'ddlInspectionFrequency.SelectedIndex = 0



            'DisableControls()

            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            'Query = "Select descrip1 from tblTarget order by descrip1"

            'grvFreqDetails.Enabled = False
            'grvTargetDetails.Enabled = False
            'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
            'Query1 = "Select LocationID from tblcompanylocation order by LocationID"

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"

            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs where UnitType = 'AREA'"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeSvcNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Public Sub MakeSvcDetailNull()
        Try
            'Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimecontract();", True)
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""


            lblMessage.Text = ""
            lblAlert.Text = ""
            'txtMode.Text = ""
            txtSvcMode.Text = ""

            txtLocationId.Text = ""
            txtServiceId.Text = ""
            txtServiceName.Text = ""
            txtServiceAddress.Text = ""
            txtZone.Text = ""
            txtFrequency.Text = ""
            txtFrequencyDesc.Text = ""
            txtSalesman.Text = ""




            'txtServTimeIn.Text = ""
            'txtServTimeOut.Text = ""
            'txtAllocTime.Text = ""

            'txtValPerMnth.Text = "0.00"
            'txtContractNotes.Text = ""
            'txtServInst.Text = ""
            'txtStatus.Text = "O"
            'txtCustName.Text = ""
            'txtRs.Text = "O"
            'txtAddress.Text = ""

            'txtNS.Text = "O"
            'txtProspectId.Text = ""

            'txtAccCode.Text = ""
            'txtPostal.Text = ""



            'txtTeamIncharge.Text = ""
            'txtTeam.Text = ""
            'txtServiceBy.Text = ""


            'ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0


            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False
            btnServiceRecords.Text = "SERVICE "
            btnTransactions.Text = "TRANSACTIONS"
            btnHistory.Text = "PRICE HISTORY"
            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""


            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            'ChkWithWarranty.Checked = False
            'txtWarrDurtion.Text = ""
            'TxtInspectionStart.Text = ""
            'TxtInspectionEnd.Text = ""
            'ChkRequireInspection.Checked = False
            'ddlInspectionFrequency.SelectedIndex = 0



            'DisableControls()

            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            Query = "Select descrip1 from tblTarget order by descrip1"

            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False
            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
            'Query1 = "Select LocationID from tblcompanylocation order by LocationID"

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(2).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs  order by UnitMsID"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)



            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeSvcDetailNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Private Sub pFindContractEndDate()
        'If Me.txtDuration.ReadOnly = True Then Exit Sub
        'Try

        '    txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")
        '    txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
        '    txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")

        '    Dim d As Date

        '    If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
        '        txtServStartDay.Text = DateTime.Parse(d.ToShortDateString).DayOfWeek.ToString()
        '    End If

        '    Dim dateStart, dateEnd As Date
        '    dateStart = CDate(Me.txtContractStart.Text)

        '    If rbtLstDuration.SelectedIndex = 0 Then
        '        dateEnd = DateAdd(DateInterval.Day, Val(Me.txtDuration.Text), dateStart)
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '    ElseIf rbtLstDuration.SelectedIndex = 1 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Day, (Val(Me.txtDuration.Text) * 7), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    ElseIf rbtLstDuration.SelectedIndex = 2 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Month, Val(Me.txtDuration.Text), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    ElseIf rbtLstDuration.SelectedIndex = 3 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Year, Val(Me.txtDuration.Text), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    End If



        '    If Date.TryParseExact(txtServEnd.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
        '        TxtServEndDay.Text = DateTime.Parse(d.ToShortDateString).DayOfWeek.ToString()
        '    End If



        '    'Dim NoofMonth As Integer
        '    'NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
        '    'txtValPerMnth.Text = NoofMonth.ToString()

        '    ''txtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
        '    Dim NoofMonth As Integer
        '    NoofMonth = 0.0
        '    NoofMonth = Int(DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text)))
        '    txtNoofMonth.Text = NoofMonth
        '    If NoofMonth = 0 Then
        '        txtValPerMnth.Text = Convert.ToDecimal(Convert.ToDecimal(txtAgreeVal.Text))
        '    Else
        '        txtValPerMnth.Text = Convert.ToDecimal(Convert.ToDecimal(txtAgreeVal.Text) / NoofMonth)
        '    End If


        'Catch ex As Exception
        '    MsgBox("Error" & ex.Message)
        'End Try
    End Sub
    Private Sub DisableControls()
        Try
            btnSave.Enabled = False
            btnSave.ForeColor = System.Drawing.Color.Gray
            btnCancel.Enabled = False
            btnCancel.ForeColor = System.Drawing.Color.Gray
            btnADD.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black

          


            btnClient.Visible = False
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black

            'btnClient0.Visible = False
            'btnClient1.Visible = False
            'btnClient2.Visible = False
            'btnClient3.Visible = False
            'btnClient4.Visible = False
            'btnClient5.Visible = False
            'btnClient6.Visible = False
            'btnClient7.Visible = False
            'btnClient8.Visible = False
            'btnClient9.Visible = False
            'btnAutoRenew.Visible = False

            btnRecalculate.Enabled = False

            ddlAgreementType.Enabled = False

            txtAccountId.Enabled = False
            txtContractNo.Enabled = False
            txtContractDate.Enabled = False
            txtOurRef.Enabled = False
            txtYourRef.Enabled = False
            txtPONo.Enabled = False
            txtTelephone.Enabled = False
            txtFax.Enabled = False
            txtConPerMobile.Enabled = False
            txtAgreeVal.Enabled = False
            txtDuration.Enabled = False
            txtContractStart.Enabled = False
            txtContractEnd.Enabled = False
            txtServStart.Enabled = False
            txtServStartDay.Enabled = False
            txtServEnd.Enabled = False
            TxtServEndDay.Enabled = False

            txtBaitStationTotal.Enabled = False
            ddlWarrantyFrequency.Enabled = False
            txtWarrantyBillingAmount.Enabled = False


            ChkWithWarranty.Enabled = False
            ChkRequireInspection.Enabled = False
            txtWarrDurtion.Enabled = False
            ddlInspectionFrequency.Enabled = False
            TxtInspectionStart.Enabled = False
            TxtInspectionEnd.Enabled = False

            txtWarrStart.Enabled = False
            txtWarrEnd.Enabled = False
            txtValPerMnth.Enabled = False
            txtContractNotes.Enabled = False

            txtStatus.Enabled = False
            txtCustName.Enabled = False
            txtRs.Enabled = False
            txtAddress.Enabled = False
            txtOfficeAddress.Enabled = False
            txtNS.Enabled = False
            txtProspectId.Enabled = False
            txtGstNo.Enabled = False
            txtAccCode.Enabled = False
            txtPostal.Enabled = False
            txtGS.Enabled = False
            txtResponse.Enabled = False
            txtCancelCharges.Enabled = False
            txtMinDuration.Enabled = False
            txtConDetVal.Enabled = False
            txtPerServVal.Enabled = False
            txtDisPercent.Enabled = False
            txtDisAmt.Enabled = False
            'txtTotContVal.Enabled = False
            'txtRenewed.Enabled = False
            'txtRenewalDate.Enabled = False
            'txtOContract.Enabled = False
            txtQuotePrice.Enabled = False
            txtQuoteUnit.Enabled = False
            txtRemarks.Enabled = False
            txtPrintBody.Enabled = False
            txtClient.Enabled = False
            txtContactPerson.Enabled = False
            ddlSalesman.Enabled = False
            ddlScheduler.Enabled = False

            rbtLstDuration.Enabled = False
            rbtComputationMethod.Enabled = False
            'ddlScheduleType.Enabled = False
            'txtServTimeIn.Enabled = False
            'txtServTimeOut.Enabled = False
            'txtAllocTime.Enabled = False
            'txtTeamIncharge.Enabled = False
            'txtTeam.Enabled = False
            'txtServiceBy.Enabled = False
            'txtServInst.Enabled = False

            'txtNoOfHrsServBal.Enabled = False
            'txtNoOfHrsServComp.Enabled = False
            'txtNoOfHrsTotServ.Enabled = False
            'txtNoOfHrsTotAmt.Enabled = False
            'txtNoOfPhServBal.Enabled = False
            'txtNoOfPhServComp.Enabled = False
            'txtNoOfPhTotAmt.Enabled = False
            'txtNoOfPhTotServ.Enabled = False
            'txtNoOfServBal.Enabled = False
            'txtNoOfServComp.Enabled = False
            'txtNoOfServTotAmt.Enabled = False
            'txtNoOfServTotServ.Enabled = False
            'txtNoOfUnitServBal.Enabled = False
            'txtNoOfUnitServComp.Enabled = False
            'txtNoOfUnitTotAmt.Enabled = False
            'txtNoOfUnitTotServ.Enabled = False
            'txtUnExpBal.Enabled = False
            'txtUnExpTotServ.Enabled = False


            txtBillingAmount.Enabled = False
            txtActualEnd.Enabled = False
            txtServiceAmt.Enabled = False
            'txtServiceNo.Enabled = False
            txtHourAmt.Enabled = False
            txtHourNo.Enabled = False
            txtUnitAmt.Enabled = False
            txtUnitNo.Enabled = False
            txtCallAmt.Enabled = False
            txtCallNo.Enabled = False
            txtAmtCompleted.Enabled = False


            ddlContactType.Enabled = False
            ddlLocateGrp.Enabled = False

            ddlContractGrp.Enabled = False
            ddlCompanyGrp.Enabled = False
            ddlBillingFreq.Enabled = False

            'SASI - Industry Segment 28/04/2017

            ddlIndustry.Enabled = False
            ddlServiceTypeID.Enabled = False
            txtCategoryID.Enabled = False
            ddlMarketSegmentID.Enabled = False
            ddlPortfolioYN.Enabled = False
            txtPortfolioValue.Enabled = False

            txtTerminationCode.Enabled = False
            txtTerminationDescription.Enabled = False
            'SASI - End Industry Segment

            txtTotalArea.Enabled = False
            txtRetentionPerc.Enabled = False
            txtRetentionValue.Enabled = False
            txtRetentionReleaseDate.Enabled = False
            chkAutoRenew.Enabled = False

            txtContractnoSearch.Enabled = True
            txtServiceAddressSearch.Enabled = True
            ddlContractGrpSearch.Enabled = True
            txtAccountIdSearch.Enabled = True
            txtClientNameSearch.Enabled = True
            ddlSalesmanSearch.Enabled = True
            ddlCategorySearch.Enabled = True
            txtSearch1Status.Enabled = True
            btnQuickSearch.Enabled = True
            btnQuickReset.Enabled = True

            ImageButton2.Enabled = True
            ImageButton3.Enabled = True
            btnSearch1Status.Enabled = True


            btnDelete.Enabled = False
            btnContractDetail.Enabled = False
            btnTerminate.Enabled = False
            btnEarlyCompletion.Enabled = False
            btnContractRenewal.Enabled = False
            btnCancelByCompany.Enabled = False
            btnServiceSchedule.Enabled = False
            btnServiceRecords.Enabled = False
            btnInvoice.Enabled = False
            txtLocation.Enabled = False

            rbtFixedContinuous.Enabled = False
            txtEndofLastSchedule.Enabled = False

            txtOnHoldDate.Enabled = False
            txtOnHoldCode.Enabled = False
            txtOnHoldDescription.Enabled = False
            txtOnHoldComments.Enabled = False

            ddlContractCode.Enabled = False
            txtTerminationType.Enabled = False

            'txtOnHoldDate.Visible = False
            'txtOnHoldCode.Visible = False
            'txtOnHoldDescription.Visible = False
            'txtOnHoldComments.Visible = False


            btnTransactions.Enabled = False
            chkExcludeFromBatchPriceChange.Enabled = False
            chkGSTInclusive.Enabled = False

            'btnHistory.Enabled = False
            'btnContractDetail.Enabled = False
            'btnContractDetail.ForeColor = System.Drawing.Color.Gray

            'btnTerminate.Enabled = False
            'btnContractDetail.ForeColor = System.Drawing.Color.Gray

            'btnEarlyCompletion.Enabled = False
            'btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

            'btnContractRenewal.Enabled = False
            'btnContractRenewal.ForeColor = System.Drawing.Color.Gray

            'btnCancelByCompany.Enabled = False
            'btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

            'btnServiceSchedule.Enabled = False
            'btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

            'btnServiceRecords.Enabled = False
            'btnServiceRecords.ForeColor = System.Drawing.Color.Gray

            'btnInvoice.Enabled = False
            'btnInvoice.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = True
            btnFilter.ForeColor = System.Drawing.Color.Black

            btnReset.Enabled = True
            btnReset.ForeColor = System.Drawing.Color.Black
            AccessControl()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION DisableControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub EnableControls()
        Try
            btnSave.Enabled = True
            btnSave.ForeColor = System.Drawing.Color.Black
            btnCancel.Enabled = True
            btnCancel.ForeColor = System.Drawing.Color.Black
            btnClient.Visible = True
            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            'btnClient0.Visible = False
            'btnClient1.Visible = False
            'btnClient2.Visible = False
            'btnClient3.Visible = False
            'btnClient4.Visible = False
            'btnClient5.Visible = False
            'btnClient6.Visible = False
            'btnClient7.Visible = False
            'btnClient8.Visible = False
            'btnClient9.Visible = False

            'btnAutoRenew.Visible = False

            ''''''''''''''''''''''''
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnCancelByCompany.Enabled = False
            btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

            btnEarlyCompletion.Enabled = False
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

            btnTerminate.Enabled = False
            btnTerminate.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnServiceSchedule.Enabled = False
            btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

            btnServiceRecords.Enabled = False
            btnServiceRecords.ForeColor = System.Drawing.Color.Gray

            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

            btnContractRenewal.Enabled = False
            btnContractRenewal.ForeColor = System.Drawing.Color.Gray

            btnContractDetail.Enabled = False
            btnContractDetail.ForeColor = System.Drawing.Color.Gray

            btnRevision.Enabled = False
            btnRevision.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            'btnSearch.Enabled = False
            'btnSearch.ForeColor = System.Drawing.Color.Gray

            btnReset.Enabled = False
            btnReset.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = False
            btnFilter.ForeColor = System.Drawing.Color.Gray

            '''''''''''''''''''''''
            'btnDelete.Enabled = False
            'btnDelete.ForeColor = System.Drawing.Color.Gray



            'btnClient.Visible = False

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                txtAccountId.Enabled = True
                txtCustName.Enabled = True
                ddlCompanyGrp.Enabled = True
                btnClient.Visible = True
                ddlContactType.Enabled = True
                ddlContractGrp.Enabled = True

            End If

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                btnClient.Visible = False
            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    txtLocation.Enabled = True
                End If

            End If

            If txtAgreementTypeContractCode.Text <> "0" Then
                ddlAgreementType.Enabled = True
                ddlContractCode.Enabled = True
            End If

            ddlSalesman.Enabled = True
            txtContractNo.Enabled = True


            txtContractDate.Enabled = True


            txtOurRef.Enabled = True
            txtYourRef.Enabled = True
            txtPONo.Enabled = True
            'txtTelephone.Enabled = True
            'txtFax.Enabled = True
            'txtConPerMobile.Enabled = True
            txtAgreeVal.Enabled = True
            txtDuration.Enabled = True
            'txtContractStart.Enabled = True
            'txtContractEnd.Enabled = True
            txtServStart.Enabled = True
            txtServStartDay.Enabled = True
            txtServEnd.Enabled = True
            TxtServEndDay.Enabled = True

            ChkWithWarranty.Enabled = True
            'ChkRequireInspection.Enabled = True
            'txtWarrDurtion.Enabled = True
            'ddlInspectionFrequency.Enabled = True
            'TxtInspectionStart.Enabled = True
            'TxtInspectionEnd.Enabled = True

            txtWarrStart.Enabled = True
            txtWarrEnd.Enabled = True
            'txtValPerMnth.Enabled = True
            txtContractNotes.Enabled = True

            'txtStatus.Enabled = True

            'txtRs.Enabled = True
            txtAddress.Enabled = True
            txtOfficeAddress.Enabled = True
            'txtNS.Enabled = True
            txtProspectId.Enabled = True
            txtGstNo.Enabled = True
            txtAccCode.Enabled = True
            txtPostal.Enabled = True
            'txtGS.Enabled = True
            txtResponse.Enabled = True
            txtCancelCharges.Enabled = True
            txtMinDuration.Enabled = True
            txtConDetVal.Enabled = True
            txtPerServVal.Enabled = True
            txtDisPercent.Enabled = True
            txtDisAmt.Enabled = True
            'txtTotContVal.Enabled = True
            'txtRenewed.Enabled = True
            'txtRenewalDate.Enabled = True
            'txtOContract.Enabled = True
            txtQuotePrice.Enabled = True
            txtQuoteUnit.Enabled = True
            txtRemarks.Enabled = True
            txtPrintBody.Enabled = True

            txtClient.Enabled = True
            'txtContactPerson.Enabled = True

            ddlScheduler.Enabled = True
            rbtLstDuration.Enabled = True
            rbtComputationMethod.Enabled = True
            'ddlScheduleType.Enabled = True
            'txtTeamIncharge.Enabled = True
            'txtTeam.Enabled = True
            'txtServiceBy.Enabled = True
            'txtServTimeIn.Enabled = True
            'txtServTimeOut.Enabled = True
            'txtAllocTime.Enabled = True
            'txtServInst.Enabled = True

            'txtNoOfHrsServBal.Enabled = True
            'txtNoOfHrsServComp.Enabled = True
            'txtNoOfHrsTotServ.Enabled = True
            'txtNoOfHrsTotAmt.Enabled = True
            'txtNoOfPhServBal.Enabled = True
            'txtNoOfPhServComp.Enabled = True
            'txtNoOfPhTotAmt.Enabled = True
            'txtNoOfPhTotServ.Enabled = True
            'txtNoOfServBal.Enabled = True
            'txtNoOfServComp.Enabled = True
            'txtNoOfServTotAmt.Enabled = True
            'txtNoOfServTotServ.Enabled = True
            'txtNoOfUnitServBal.Enabled = True
            'txtNoOfUnitServComp.Enabled = True
            'txtNoOfUnitTotAmt.Enabled = True
            'txtNoOfUnitTotServ.Enabled = True
            'txtUnExpBal.Enabled = True
            'txtUnExpTotServ.Enabled = True

            txtBillingAmount.Enabled = True
            txtActualEnd.Enabled = True
            'txtServiceAmt.Enabled = True
            'txtServiceNo.Enabled = True
            txtHourAmt.Enabled = True
            txtHourNo.Enabled = True
            txtUnitAmt.Enabled = True
            txtUnitNo.Enabled = True
            txtCallAmt.Enabled = True
            txtCallNo.Enabled = True
            txtAmtCompleted.Enabled = True

            txtTotalArea.Enabled = True
            txtRetentionPerc.Enabled = True
            txtRetentionValue.Enabled = True
            txtRetentionReleaseDate.Enabled = True

            ddlLocateGrp.Enabled = True
            'ddlContractGrp.Enabled = True
            ddlBillingFreq.Enabled = True

            'btnContractDetail.Enabled = True
            'btnTerminate.Enabled = True
            'btnEarlyCompletion.Enabled = True
            'btnContractRenewal.Enabled = True
            'btnCancelByCompany.Enabled = True

            'SASI - Industry Segment 28/04/2017

            '       ddlIndustry.Enabled = True
            ddlServiceTypeID.Enabled = True
            'txtCategoryID.Enabled = True


            '        ddlMarketSegmentID.Enabled = True



            txtContractnoSearch.Enabled = False
            txtServiceAddressSearch.Enabled = False
            ddlContractGrpSearch.Enabled = False
            txtAccountIdSearch.Enabled = False
            txtClientNameSearch.Enabled = False
            ddlSalesmanSearch.Enabled = False
            ddlCategorySearch.Enabled = False

            txtSearch1Status.Enabled = False
            btnQuickSearch.Enabled = False
            btnQuickReset.Enabled = False
            ImageButton2.Enabled = False
            ImageButton3.Enabled = False
            btnSearch1Status.Enabled = False

            If Session("UserID") = "admin" Or Session("UserID") = "ADMIN" Then
                ddlPortfolioYN.Enabled = True
            End If

            txtPortfolioValue.Enabled = True
            txtBaitStationTotal.Enabled = True

            'rbtFixedContinuous.Enabled = True
            txtEndofLastSchedule.Enabled = True


            txtTerminationType.Enabled = True

            'txtLocation.Enabled = True

            'SASI - End Industry Segment
            'ddlMarketSegmentID.Enabled = True

            txtConDetVal.Attributes.Remove("readonly")
            txtAgreeVal.Attributes.Remove("readonly")
            txtDisPercent.Attributes.Remove("readonly")
            txtDisAmt.Attributes.Remove("readonly")

            txtConDetVal.BackColor = txtContractnoSearch.BackColor
            txtAgreeVal.BackColor = txtContractnoSearch.BackColor
            txtDisPercent.BackColor = txtContractnoSearch.BackColor
            txtDisAmt.BackColor = txtContractnoSearch.BackColor

            chkAutoRenew.Enabled = True

            chkExcludeFromBatchPriceChange.Enabled = True
            chkGSTInclusive.Enabled = True

            AccessControl()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION EnableControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub EnableSvcControls()
        Try
            btnSvcSave.Enabled = False
            btnSvcSave.ForeColor = System.Drawing.Color.Gray

            btnSvcSaveSchedule.Enabled = False
            btnSvcSaveSchedule.ForeColor = System.Drawing.Color.Gray

            btnSvcCancel.Enabled = False
            btnSvcCancel.ForeColor = System.Drawing.Color.Gray

            btnSvcAdd.Enabled = True
            btnSvcAdd.ForeColor = System.Drawing.Color.Black
            btnSvcEdit.Enabled = True
            btnSvcEdit.ForeColor = System.Drawing.Color.Black
            btnSvcDelete.Enabled = True
            btnSvcDelete.ForeColor = System.Drawing.Color.Black

            grvServiceLocation.Enabled = False
            grvServices.Enabled = False
            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False

            txtContactPerson.Enabled = False
            BtnTeam.Visible = False

            txtContactPerson.Enabled = False
            txtContactPerson2.Enabled = False
            txtPosition.Enabled = False
            txtPosition2.Enabled = False
            txtTelephone.Enabled = False
            txtTelephone2.Enabled = False
            txtFax.Enabled = False
            txtFax2.Enabled = False
            txtCP2Telephone.Enabled = False
            txtCP2Telephone2.Enabled = False
            txtConPerMobile.Enabled = False
            txtConPerMobile2.Enabled = False
            txtEmail1.Enabled = False
            txtEmail2.Enabled = False
            txtAddress.Enabled = False

            ddlScheduleType.Enabled = False
            txtTeamIncharge.Enabled = False
            txtTeam.Enabled = False
            txtServiceBy.Enabled = False
            txtSupervisor.Enabled = False
            txtServTimeIn.Enabled = False
            txtServTimeOut.Enabled = False
            txtAllocTime.Enabled = False
            txtServInst.Enabled = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION EnableSvcControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub DisableSvcControls()
        Try
            btnSvcSave.Enabled = True
            btnSvcSave.ForeColor = System.Drawing.Color.Black

            btnSvcSaveSchedule.Enabled = True
            btnSvcSaveSchedule.ForeColor = System.Drawing.Color.Black

            btnSvcCancel.Enabled = True
            btnSvcCancel.ForeColor = System.Drawing.Color.Black

            btnSvcAdd.Enabled = False
            btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            btnSvcEdit.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray

            btnSvcDelete.Enabled = False
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        

            BtnTeam.Visible = True

            grvServiceLocation.Enabled = True
            grvServices.Enabled = True
            grvFreqDetails.Enabled = True
            grvTargetDetails.Enabled = True


            'GridView1.Visible = False
            'FirstGridViewRowLocation()
            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    Query1 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    Query1 = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'End If

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If

            ddlScheduleType.Enabled = True
            txtTeamIncharge.Enabled = True
            txtTeam.Enabled = True
            txtServiceBy.Enabled = True
            txtSupervisor.Enabled = True

            txtServTimeIn.Enabled = True
            txtServTimeOut.Enabled = True
            txtAllocTime.Enabled = True
            txtServInst.Enabled = True

            txtContactPerson.Enabled = True
            txtContactPerson2.Enabled = True
            txtPosition.Enabled = True
            txtPosition2.Enabled = True
            txtTelephone.Enabled = True
            txtTelephone2.Enabled = True
            txtFax.Enabled = True
            txtFax2.Enabled = True
            txtCP2Telephone.Enabled = True
            txtCP2Telephone2.Enabled = True
            txtConPerMobile.Enabled = True
            txtConPerMobile2.Enabled = True
            txtEmail1.Enabled = True
            txtEmail2.Enabled = True
            txtAddress.Enabled = True

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION DisableSvcControls", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub
    'Function

    'Button-click
    Protected Sub btnContractDetail_Click(sender As Object, e As EventArgs) Handles btnContractDetail.Click
        Try
            System.Threading.Thread.Sleep(5000)
            Label40.Visible = True
            ''Label1.Text = "Name :"

            Session("contractdetailfrom") = "contract"

            If String.IsNullOrEmpty(txtContractNo.Text) = False Then

                '''''''''''''''''''''''''''''
                'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                Session("contractno") = txtContractNo.Text

                ''''''''''''''''''''''''''''''
                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Session("searchstatus") = txtSearch1Status.Text
                End If

                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    Session("searchteam") = txtServiceAddressSearch.Text
                End If

                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    Session("searchincharge") = txtInchargeSearch.Text
                'End If

                If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                    Session("searchaccountid") = txtAccountIdSearch.Text
                End If

                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    Session("searchclientname") = txtClientNameSearch.Text
                End If

                ''''''''''''''''''''''''''''''
                Session("gridsqlcontract") = txt.Text
                Session("rcno") = txtRcno.Text
                Session("contractdetailfrom") = "contract"
                
                ''''''''''''''''''''''''
            End If

            Response.Redirect("ContractDetail.aspx", False)
        Catch ex As Exception
            MsgBox("Error" & ex.Message)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnContractDetail_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ShowMessage(sender As Object, e As EventArgs, message As String)

        'Dim message As String = "alert('Hello! Mudassar.')"

        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then


                Dim connIsLocationIDInActive As MySqlConnection = New MySqlConnection()

                connIsLocationIDInActive.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsLocationIDInActive.Open()

                Dim commandIsLocationIDInActive As MySqlCommand = New MySqlCommand
                commandIsLocationIDInActive.CommandType = CommandType.Text

                If ddlContactType.Text = "COMPANY" Then
                    commandIsLocationIDInActive.CommandText = "SELECT count(LocationID) as CountAccountId from tblCompanyLocation where LocationID ='" & lblAccountIdContactLocation1.Text.Trim & "' and InActiveD=True"
                ElseIf ddlContactType.Text = "PERSON" Then
                    commandIsLocationIDInActive.CommandText = "SELECT count(LocationID) as CountAccountId from tblPersonLocation where LocationID ='" & lblAccountIdContactLocation1.Text.Trim & "' and InActiveD=True"
                End If

                commandIsLocationIDInActive.Connection = connIsLocationIDInActive

                Dim drIsAccountId As MySqlDataReader = commandIsLocationIDInActive.ExecuteReader()
                Dim dtIsAccountId As New DataTable
                dtIsAccountId.Load(drIsAccountId)

                If dtIsAccountId.Rows.Count > 0 Then
                    If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                        commandIsLocationIDInActive.Dispose()
                        connIsLocationIDInActive.Close()
                        dtIsAccountId.Dispose()
                        lblAlert.Text = "This Location ID is INACTIVE .. Contract cannot be ADDED"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If


                End If
                commandIsLocationIDInActive.Dispose()
                connIsLocationIDInActive.Close()
                dtIsAccountId.Dispose()



            End If


            txtMode.Text = ""
            MakeMeNull()
            MakeCommNull()
            'MakeSvcNull()
            MakeSvcDetailNull()


            EnableControls()
            'DisableControls()
            txtContractNo.Focus()


            If String.IsNullOrEmpty(lblAccountIdServiceAddress1.Text) = False Then
                txtServiceAddressCons.Text = lblAccountIdServiceAddress1.Text
            Else

            End If

            'txtIndustrySession.Text = lindustry
            'txtMarketSegmentSession.Text = Session("marketsegmentidsvc")

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                ddlIndustry.Text = txtIndustrySession.Text
                ddlMarketSegmentID.Text = txtMarketSegmentSession.Text
                ddlContractGrp.Text = txtContractGroupSession.Text
                ddlCompanyGrp.Text = txtCompanyGroupSession.Text


                'ddlContractGrp.Enabled = False

                If Left(ddlContractGrp.Text, 2) = "CP" Or Left(ddlContractGrp.Text, 2) = "MQ" Then
                    Dim query As String

                    'ddlContractGrp.Enabled = True
                    ddlContractGrp.Items.Clear()
                    ddlContractGrp.Items.Add("--SELECT--")
                    query = "Select ContractGroup from tblcontractgroup where ContractGroup  like '" & Left(txtContractGroupSession.Text, 2) & "%'"
                    PopulateDropDownList(query, "ContractGroup", "ContractGroup", ddlContractGrp)
                    'ElseIf ddlContractGrp.Text = "MQ" Or ddlContractGrp.Text = "MQ (ADHOC)" Then
                    '    Dim query As String

                    '    ddlContractGrp.Enabled = True
                    '    ddlContractGrp.Items.Clear()
                    '    ddlContractGrp.Items.Add("--SELECT--")
                    '    query = "Select ContractGroup from tblcontractgroup where ContractGroup  like 'MQ%'"
                    '    PopulateDropDownList(query, "ContractGroup", "ContractGroup", ddlContractGrp)
                Else
                    ddlContractGrp.Enabled = False
                End If

                If String.IsNullOrEmpty(txtSalesmanSession.Text) = False Then
                    ddlSalesman.Text = txtSalesmanSession.Text
                End If

                If String.IsNullOrEmpty(txtLocationSession.Text) = True Then
                    txtLocation.SelectedIndex = 0
                Else
                    txtLocation.Text = txtLocationSession.Text
                End If

                txtBillingAddress.Text = txtBillingAdressSession.Text
                FindCategoryId()
            Else

            End If

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
            '        txtLocation.Enabled = True
            '    End If
            'End If

            txtSearch1Status.Text = "O,P,H,R,C,T,E"
            txtMode.Text = "NEW"
            lblMessage.Text = "ACTION: ADD RECORD"
            'tb1.ActiveTabIndex = 0

            ddlAgreementType.Items.Clear()
            ddlAgreementType.Items.Add("--SELECT--")
            ddlAgreementType.Items.Add("NEW")
            ddlAgreementType.Items.Add("ADDITION")

            'ddlAgreementType.Attributes.Remove("disabled")

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnRevision.Enabled = False
            btnRevision.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnContractDetail.Enabled = False
            btnContractDetail.ForeColor = System.Drawing.Color.Gray

            btnTerminate.Enabled = False
            btnContractDetail.ForeColor = System.Drawing.Color.Gray

            btnEarlyCompletion.Enabled = False
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

            btnContractRenewal.Enabled = False
            btnContractRenewal.ForeColor = System.Drawing.Color.Gray

            btnCancelByCompany.Enabled = False
            btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

            btnServiceSchedule.Enabled = False
            btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
            btnServiceSchedule.Text = "SCHEDULE"

            btnServiceRecords.Enabled = False
            btnServiceRecords.ForeColor = System.Drawing.Color.Gray

            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

            btnInvoice.Enabled = False
            btnInvoice.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = False
            btnFilter.ForeColor = System.Drawing.Color.Gray

            btnReset.Enabled = False
            btnReset.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            txtEndofLastSchedule.Enabled = False
            txtEndofLastSchedule.ForeColor = Color.White


            btnClient0.Visible = False
            'btnClient1.Visible = False
            btnMultiplePO.Visible = False '25.10.21
            btnClient2.Visible = False
            btnClient3.Visible = False
            btnClient4.Visible = False
            btnClient5.Visible = False
            btnClient6.Visible = False
            btnClient7.Visible = False
            btnClient8.Visible = False
            btnClient9.Visible = False
            btnClient10.Visible = False
            btnClient11.Visible = False
            btnClient12.Visible = False

            btnAutoRenew.Visible = False
            btnHistory.Visible = False
            btnExtendContractEndDate.Visible = False
            btnRecalculate.Visible = False
            txtContractDateOriginal.Text = ""

            btnClient11.Visible = False
            btnClient12.Visible = False

            tb1.ActiveTabIndex = 0
            btnSave.Text = "NEXT STEP"

            'If ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '    ddlIndustry.Text = ""
            '    ddlMarketSegmentID.Text = ""
            'End If

            If String.IsNullOrEmpty(lblAccountNameContact1.Text.Trim) = False Then
                txtCustName.Text = lblAccountNameContact1.Text.Trim.ToUpper
            End If
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> LoadDefaultDates();</Script>", False)

            FindIsActiveContract()
            FindDuration()
            'ShowMessage(UpdatePanel1, UpdatePanel1.GetType(), "ok")
            ''MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")

            'Dim message As String = "Record added successfully!!!"
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> PopulateOtherDays();</Script>", False)

            'txtContractDate_click(event,e)

            'txtContractDate.Enabled = True

            If IsContractPeriodlocked("Contract") = True Then
                lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                updPanelContract1.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                txtContractDate.Focus()
            End If


        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnADD_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub ConvertUpperGeneral()
        txtCustName.Text = txtCustName.Text.ToUpper
        txtOurRef.Text = txtOurRef.Text.ToUpper
        txtYourRef.Text = txtYourRef.Text.ToUpper
        txtPONo.Text = txtPONo.Text.ToUpper
        txtOfficeAddress.Text = txtOfficeAddress.Text.ToUpper
        txtPostal.Text = txtPostal.Text.ToUpper
        txtContractNotes.Text = txtContractNotes.Text.ToUpper
        txtRemarks.Text = txtRemarks.Text.ToUpper
    End Sub

    Private Sub ConvertUpperService()
        txtTeam.Text = txtTeam.Text.ToUpper
        txtTeamIncharge.Text = txtTeamIncharge.Text.ToUpper
        txtServiceBy.Text = txtServiceBy.Text.ToUpper
        txtSupervisor.Text = txtSupervisor.Text.ToUpper

        txtServInst.Text = txtServInst.Text.ToUpper

        txtContactPerson.Text = txtContactPerson.Text.ToUpper
        txtTelephone.Text = txtTelephone.Text.ToUpper
        txtPosition.Text = txtPosition.Text.ToUpper
        txtPosition2.Text = txtPosition2.Text.ToUpper
        txtConPerMobile.Text = txtConPerMobile.Text.ToUpper
        txtConPerMobile2.Text = txtConPerMobile2.Text.ToUpper
        txtContactPerson2.Text = txtContactPerson2.Text.ToUpper
        txtTelephone2.Text = txtTelephone2.Text.ToUpper
        txtCP2Telephone.Text = txtCP2Telephone.Text.ToUpper
        txtCP2Telephone2.Text = txtCP2Telephone2.Text.ToUpper
        txtFax.Text = txtFax.Text.ToUpper
        txtFax2.Text = txtFax2.Text.ToUpper

        txtEmail1.Text = txtEmail1.Text.ToUpper
        txtEmail2.Text = txtEmail2.Text.ToUpper

    End Sub
    'Button click


    Private Function FindAccountId() As Boolean
        Try
            Dim IsAccountId As Boolean
            IsAccountId = False

            Dim connIsAccountId As MySqlConnection = New MySqlConnection()

            connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsAccountId.Open()

            Dim commandIsAccountId As MySqlCommand = New MySqlCommand
            commandIsAccountId.CommandType = CommandType.Text

            If ddlContactType.Text = "COMPANY" Then
                commandIsAccountId.CommandText = "SELECT count(AccountId) as CountAccountId from tblCompany where AccountId ='" & txtAccountId.Text & "'"
            ElseIf ddlContactType.Text = "PERSON" Then
                commandIsAccountId.CommandText = "SELECT count(AccountId) as CountAccountId from tblPerson where AccountId ='" & txtAccountId.Text & "'"
            End If

            commandIsAccountId.Connection = connIsAccountId

            Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
            Dim dtIsAccountId As New DataTable
            dtIsAccountId.Load(drIsAccountId)

            If dtIsAccountId.Rows.Count > 0 Then
                If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                    IsAccountId = True
                End If


            End If
            commandIsAccountId.Dispose()
            connIsAccountId.Close()
            dtIsAccountId.Dispose()
            Return IsAccountId
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindAccountId", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Function


    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Try

            'If txtModeRenew.Text = "R" Then

            '    If ddlAgreementType.Text = "--SELECT--" Then
            '        MessageBox.Message.Alert(Page, "SELECT AGREEMENT TYPE", "STR")
            '    End If
            'End If

            '''''''''''''''''''''
            'btnSave.Enabled = False
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSave_Click", "Begin - " & txtAccountId.Text, txtContractNo.Text)

            lblAlert.Text = ""

            If String.IsNullOrEmpty(txtServStart.Text.Trim) = True Or txtServStart.Text.Trim = "__/__/____" Or String.IsNullOrEmpty(txtServEnd.Text.Trim) = True Or txtServEnd.Text.Trim = "__/__/____" Then

            Else

                If String.IsNullOrEmpty(txtServEnd.Text) = False Then
                    If Convert.ToDateTime(txtServStart.Text) > Convert.ToDateTime(txtServEnd.Text) Then
                        lblAlert.Text = "Service Start Date cannot be later than Service End Date"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If
                End If

            End If

            Dim sqlstr1 As String
            sqlstr1 = ""

            sqlstr1 = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked1 As MySqlCommand = New MySqlCommand

            Dim conn1 As MySqlConnection = New MySqlConnection()
            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()

            commandLocked1.CommandType = CommandType.Text
            commandLocked1.CommandText = sqlstr1
            commandLocked1.Connection = conn1

            Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)


            If dt1.Rows.Count > 0 Then
                If dt1.Rows(0)("ContractLock").ToString = "Y" Then
                    lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    conn1.Close()
                    conn1.Dispose()
                    commandLocked1.Dispose()
                    dr1.Close()
                    Exit Sub
                End If
            End If

            conn1.Close()
            conn1.Dispose()
            commandLocked1.Dispose()
            dr1.Close()


            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstr
            commandLocked.Connection = conn

            Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "SERVICE START PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    conn.Close()
                    conn.Dispose()
                    commandLocked.Dispose()
                    dr.Close()
                    Exit Sub
                End If
            End If

            conn.Close()
            conn.Dispose()
            commandLocked.Dispose()
            dr.Close()


            If String.IsNullOrEmpty(txtServEnd.Text.Trim) = True Or txtServEnd.Text.Trim = "__/__/____" Then
            Else
                Dim sqlstr2 As String
                sqlstr2 = ""

                sqlstr2 = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                Dim commandLocked2 As MySqlCommand = New MySqlCommand

                Dim conn2 As MySqlConnection = New MySqlConnection()
                conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn2.Open()

                commandLocked2.CommandType = CommandType.Text
                commandLocked2.CommandText = sqlstr2
                commandLocked2.Connection = conn2

                Dim dr2 As MySqlDataReader = commandLocked2.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)


                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("svcLock").ToString = "Y" Then
                        lblAlert.Text = "SERVICE END PERIOD IS LOCKED"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        conn2.Close()
                        conn2.Dispose()
                        commandLocked2.Dispose()
                        dr2.Close()
                        Exit Sub
                    End If
                End If

                conn2.Close()
                conn2.Dispose()
                commandLocked2.Dispose()
                dr2.Close()
            End If

            'InsertIntoTblWebEventLog("PopulateRecord", "2", "1", "1")
            'txtBackDateContract.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContract")
            'txtBackDateContractTermination.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContractTermination")

            'If Convert.ToDateTime(txtContractDate.Text).ToString("dd/MM/yyyy") < Convert.ToDateTime(Now).ToString("dd/MM/yyyy") Then

            FindBackDateContractTermination()

            'InsertIntoTblWebEventLog("PopulateRecord", "3", "1", "1")
            If Convert.ToDateTime(txtContractDate.Text.Trim) < DateTime.Today Then  '1
                'InsertIntoTblWebEventLog("PopulateRecord", "4", "1", "1")
                If txtBackDateContractSetup.Text = False Then                       '2
                    lblAlert.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract entries."
                    txtContractDate.Focus()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                Else
                    If txtBackDateContract.Text = True Then   '3
                        GoTo proceedcontract
                    ElseIf txtBackDateContract.Text = False Then
                        'InsertIntoTblWebEventLog("PopulateRecord", "5", "1", "1")
                        If txtBackDateContractSameMonthOnly.Text = False Then  '4
                            lblAlert.Text = "This user account is not allowed to enter back-dated Contracts"
                            txtContractDate.Focus()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        ElseIf txtBackDateContractSameMonthOnly.Text = True Then
                            'InsertIntoTblWebEventLog("PopulateRecord", "6", "1", "1")
                            If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtContractDate.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtContractDate.Text).ToString("YYYY") Then  '5
                            Else
                                lblAlert.Text = "This user account is not allowed to enter back-dated Contracts"
                                txtContractDate.Focus()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If '5
                        End If '4
                    End If  '3
                End If  '2
            End If      '1
            ''InsertIntoTblWebEventLog("PopulateRecord", "10", "1", "1")

            'If txtBackDateContract.Text = False Then
            '    lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '    txtContractDate.Focus()
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'ElseIf txtBackDateContract.Text = True Then
            '    If txtBackDateContractSameMonthOnly.Text = False Then
            '        lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '        txtContractDate.Focus()
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub
            '    ElseIf txtBackDateContractSameMonthOnly.Text = True Then
            '        If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtContractDate.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtContractDate.Text).ToString("YYYY") Then
            '        Else
            '            lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '            txtContractDate.Focus()
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            Exit Sub
            '        End If
            '    End If
            'End If
            'End If
            'End If

proceedcontract:

            Dim IsAccountIdExist As Boolean = FindAccountId()

            If IsAccountIdExist = False Then

                lblAlert.Text = "Invalid Account Id"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If

            If ddlContractCode.SelectedIndex = 0 Then
                lblAlert.Text = "Please Select Contract Code"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If
            '''''''''''''''''''''
            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtContractStart.Text) > Convert.ToDateTime(txtContractEnd.Text) Then
                    lblAlert.Text = "Contract Start Date cannot be later than Contract End Date"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtServStart.Text) > Convert.ToDateTime(txtServEnd.Text) Then
                    lblAlert.Text = "Service Start Date cannot be later than Service End Date"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If


            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtServStart.Text) > Convert.ToDateTime(txtContractEnd.Text) Then
                    lblAlert.Text = "Service Start Date cannot be later than Contract End Date"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If

            If rbtLstDuration.SelectedIndex = 0 Then
                Dim DurationDays As Long = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    DurationDays = DateDiff(DateInterval.Day, CDate(txtContractStart.Text), CDate(txtContractEnd.Text)) + 1
                    If DurationDays <> Convert.ToUInt64(txtDuration.Text) Then

                        Dim DurationDays1 As Long = 0

                        DurationDays1 = DateDiff(DateInterval.Day, CDate(txtContractStart.Text), CDate(txtContractEnd.Text))
                        If DurationDays1 <> Convert.ToUInt64(txtDuration.Text) Then
                            lblAlert.Text = "Duration and Contract Dates Range Do Not Match"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            btnSave.Enabled = True
                            Exit Sub
                        End If

                    End If
                End If

                DurationDays = 0
                'DurationDays1 = 0
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    DurationDays = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                    If DurationDays <> Convert.ToUInt64(txtDuration.Text) Then


                        Dim DurationDays2 As Long = 0

                        DurationDays2 = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        If DurationDays2 <> Convert.ToUInt64(txtDuration.Text) Then
                            lblAlert.Text = "Duration and Service Dates Range Do Not Match"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            btnSave.Enabled = True
                            Exit Sub
                        End If

                        'lblAlert.Text = "Duration and Service Dates Range Do Not Match"
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        'btnSave.Enabled = True
                        'Exit Sub
                    End If
                End If

            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If txtLocation.SelectedIndex = 0 Then
                    lblAlert.Text = "Please Select Branch"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(ddlIndustry.Text) = True Then

                lblAlert.Text = "Please Enter Industry"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub

            End If

            'If String.IsNullOrEmpty(ddlMarketSegmentID.Text) = True Then

            '    lblAlert.Text = "Please Enter Market Segment"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    btnSave.Enabled = True
            '    Exit Sub

            'End If

            If Len(txtPONo.Text.Trim) > 100 Then
                lblAlert.Text = "P.O. No. cannot exceed 100 characters"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If

            If Len(txtContractNotes.Text.Trim) > 500 Then
                Dim lNoteslen As Integer
                lNoteslen = Len(txtContractNotes.Text.Trim)
                lblAlert.Text = "Notes (" & lNoteslen & " chars.) cannot exceed 500 characters"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If


            If Convert.ToDecimal(txtAgreeVal.Text) = 0.0 Then
                mdlPopupZeroValue.Show()
            Else
                SaveContract()

                btnEdit.Enabled = True
                btnEdit.ForeColor = Color.Black

                If txtMode.Text = "NEW" Then
                    btnSvcAdd_Click(sender, e)
                End If
            End If
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSave_Click", "End - " & txtAccountId.Text, txtContractNo.Text)
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateContractDetailsInfoFrequency(ByVal strFrequency As String)
        Try

            Dim lFrequency As String
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            'Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGV"), TextBox)

            lFrequency = strFrequency
            lblAlert.Text = ""
            'Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                'lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
            End If

            'Start: Frequency

            txtFrequencyDesc.Text = lFrequency
            txtFrequency.Text = lFrequency


            'txtMonthByWhichMonth.Text = lblid3.Text
            'txtDOWByWhichWeek.Text = lblid4.Text


            UpdatePanel1.Update()

            'grvFreqDetails.Enabled = True
            'grvTargetDetails.Enabled = True

            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                txtNoofSvcInterval.Text = 2

            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                txtNoofSvcInterval.Text = 3
                'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                '    txtNoofSvcInterval.Text = 3
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 4
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 5
            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 6
            Else
                txtNoofSvcInterval.Text = 1
            End If



            lblInterval.Text = ""
            Select Case txtFrequency.Text.ToUpper
                Case "DAILY"
                    lblInterval.Text = "Days"
                Case "WEEKLY", "TWICE-WEEKLY"
                    lblInterval.Text = "Wks"
                Case "BI-WEEKLY", "FORTNIGHTLY"
                    lblInterval.Text = "Bi-wks"
                Case "TRI-WEEKLY"
                    lblInterval.Text = "Tri-wks"
                Case "MONTHLY", "THRICE-MONTHLY"
                    lblInterval.Text = "Mths"
                Case "BI-MONTHLY"
                    lblInterval.Text = "Bi-mths"
                Case "QUARTERLY"
                    lblInterval.Text = "Quarterly"
                Case "HALF-ANNUALLY"
                    lblInterval.Text = "Half-Annually"
                Case "THRICE-ANNUALLY"
                    lblInterval.Text = "Thrice-Annually"
                Case "ANNUALLY"
                    lblInterval.Text = "Annually"
                Case "BI-ANNUALLY"
                    lblInterval.Text = "Bi-Annually"
            End Select

            Dim lInterval As Integer
            lInterval = txtNoofSvcInterval.Text


            Dim interval As Integer
            Dim endDate As Date
            If txtFrequencyDesc.Text = "MONTHLY" Then

                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            ElseIf txtFrequencyDesc.Text = "DAILY" Then
                txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If interval > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        interval = interval + 1
                    End If
                End If
                txtNoofInterval.Text = interval
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        weekNo = weekNo + 1
                    End If
                End If
                Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"

            ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        weekNo = weekNo + 1
                    End If
                End If

                Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'If weekNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        weekNo = weekNo + 1
                '    End If
                'End If

                'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                'txtNoofInterval.Text = tempInt
                'If txtNoofInterval.Text.Contains(".") Then
                '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                'End If
                'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "5"

            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "6"
            ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If

                txtNoofInterval.Text = Math.Round(monthNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

            ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"
            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"

            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round(monthNo / 3, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 6), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 4), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "ANNUALLY" Then
                Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        yearNo = yearNo + 1
                    End If
                End If

                txtNoofInterval.Text = yearNo
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        yearNo = yearNo + 1
                    End If
                End If

                txtNoofInterval.Text = Math.Round(yearNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            Else
                txtNoofInterval.Text = 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            End If
            fGetInterval()
            txtNoService.Text = CDec((txtNoofSvcInterval.Text)) * CDec((txtNoofInterval.Text))


            'lblid2.Text = txtNoService.Text
            '''''''''''''''''''''''''''''''''''''''''
            If Convert.ToInt64(txtNoofInterval.Text) > 0 Then
                'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                'End If
            Else
                'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "This Frequency CANNOT be selected within this Date Range"
                Exit Sub

            End If

            '''''''''''''''''''''''''''''''''''''''''
            ''Start:Frequency

            '' 'Delete first row

            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            'Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            'Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(3).FindControl("txtDayNoGV"), TextBox)
            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'If txtFrequencyDesc.Text = "DAILY" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
            '    gFreqMTD = "DOW"
            '    gSeq = "001"
            '    gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"

            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        If i = 0 Then
            '            gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '        Else
            '            gDOW = ""
            '        End If
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    'gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()

            '        TextBoxFreqMTD.Enabled = False
            '        TextBoxMonthNo.Enabled = False
            '        TextBoxDayNo.Enabled = False

            '        '
            '    Next i
            '    'AddNewRowFreq()
            '    'TextBoxFreqMTD.Enabled = False
            '    'TextBoxMonthNo.Enabled = False
            '    'TextBoxDayNo.Enabled = False
            '    'TextBoxWeekNo.Enabled = True
            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
            '    gSeq = "001"
            '    TextBoxWeekNo.Enabled = True
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False


            'ElseIf txtFrequencyDesc.Text = "ADHOC" Or txtFrequencyDesc.Text = "ONE-TIME" Or txtFrequencyDesc.Text = "SVC CALL" Or txtFrequencyDesc.Text = "FOLLOW UP" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False

            'End If

            'Delete last row

            'SetRowDataFreq()

            'Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq2 As DataRow = Nothing

            'If dtFreq2.Rows.Count > 1 Then
            '    dtFreq2.Rows.Remove(dtFreq2.Rows(0))
            '    drCurrentRowFreq2 = dtFreq2.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq2
            '    grvFreqDetails.DataSource = dtFreq2
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()

            'End If

            '''''''''''''''''End:Frequency




            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            'dtFreq.Dispose()
            'dtFreq2.Dispose()
            dr.Close()
        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateContractDetailsInfoFrequency", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Private Sub updateContractDetailsInfo()
        Try
            Dim sqlStr, sqlstr1 As String
            sqlStr = ""
            sqlstr1 = ""

            Dim connupdateContract As MySqlConnection = New MySqlConnection()

            connupdateContract.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connupdateContract.Open()

            '''''''''''''''''''''''''''
            'Dim connupdateContractHeaderInfo As MySqlConnection = New MySqlConnection()

            'connupdateContractHeaderInfo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'connupdateContractHeaderInfo.Open()

            Dim commandHeaderInfo As MySqlCommand = New MySqlCommand

            commandHeaderInfo.CommandType = CommandType.Text
            commandHeaderInfo.CommandText = "select Comments, TimeIn, Timeout, Support, ScheduleType, TeamId, AllocatedSvcTime from tblContract where ContractNo ='" & txtOContract.Text & "'"
            commandHeaderInfo.Connection = connupdateContract

            Dim drHeaderInfo As MySqlDataReader = commandHeaderInfo.ExecuteReader()
            Dim dtHeaderInfo As New DataTable
            dtHeaderInfo.Load(drHeaderInfo)

            If dtHeaderInfo.Rows.Count > 0 Then
                Dim commandHeaderUpdate As MySqlCommand = New MySqlCommand
                commandHeaderUpdate.CommandType = CommandType.Text
                commandHeaderUpdate.CommandText = "Update tblcontract set Comments=@Comments, TimeIn=@TimeIn, Timeout=@Timeout, Support=@Support, ScheduleType=@ScheduleType, TeamId=@TeamId, AllocatedSvcTime=@AllocatedSvcTime  where ContractNo = '" & txtContractNo.Text & "'"
                'commandHeaderUpdate.Connection = connupdateContract
                'commandHeaderUpdate.ExecuteNonQuery()

                ''''''''''''''''
                'commandHeaderUpdate.CommandText = qryRenew
                commandHeaderUpdate.Parameters.Clear()

                'commandHeaderUpdate.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                commandHeaderUpdate.Parameters.AddWithValue("@Comments", dtHeaderInfo.Rows(0)("Comments").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@TimeIn", dtHeaderInfo.Rows(0)("TimeIn").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@Timeout", dtHeaderInfo.Rows(0)("Timeout").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@Support", dtHeaderInfo.Rows(0)("Support").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@ScheduleType", dtHeaderInfo.Rows(0)("ScheduleType").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@TeamId", dtHeaderInfo.Rows(0)("TeamId").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@AllocatedSvcTime", dtHeaderInfo.Rows(0)("AllocatedSvcTime").ToString)
                'commandHeaderUpdate.Parameters.AddWithValue("@TimeIn", txtContractNo.Text.Trim)
                commandHeaderUpdate.Connection = connupdateContract
                commandHeaderUpdate.ExecuteNonQuery()
                commandHeaderUpdate.Dispose()

                '''''''''''''''''''
            End If

            '''''''''''''''''''''''''''''

            sqlStr = ""
            sqlstr1 = ""

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "select * from tblContractDet where ContractNo ='" & txtOContract.Text & "'"
            command1.Connection = connupdateContract

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                For i As Integer = 0 To dt.Rows.Count - 1
                    'sqlStr = "insert into tblContractDet(ContractNo, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn,ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc)"

                    '''''''''''''''''''''''''''''''''''''''
                    UpdateContractDetailsInfoFrequency(dt.Rows(i)("Frequency").ToString)

                    '''''''''''''''''''''''''''''''''''''''''

                    'sqlStr = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    'sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    'sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    'sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    'sqlStr = sqlStr + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    'sqlStr = sqlStr + "SELECT '" & txtContractNo.Text & "', Frequency, Value, NoService, Location, BranchId,"
                    'sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    'sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    'sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    'sqlStr = sqlStr + "'" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'"
                    'sqlStr = sqlStr & " from tblContractDet where rcno =" & dt.Rows(i)("rcno").ToString


                    sqlStr = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    sqlStr = sqlStr + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    sqlStr = sqlStr + "SELECT '" & txtContractNo.Text & "', Frequency, Value, " & txtNoService.Text & ", Location, BranchId,"
                    sqlStr = sqlStr + "NoOfSvcInterval, " & txtNoofInterval.Text & ", ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    sqlStr = sqlStr + "'" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'"
                    sqlStr = sqlStr & " from tblContractDet where rcno =" & dt.Rows(i)("rcno").ToString


                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandText = sqlStr
                    command2.Parameters.Clear()
                    command2.Connection = connupdateContract
                    command2.ExecuteNonQuery()


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdet"

                    Dim command5 As MySqlCommand = New MySqlCommand
                    command5.CommandType = CommandType.Text

                    command5.CommandText = sqlLastId
                    command5.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command5.Connection = connupdateContract
                    txtSourceSQLID.Text = command5.ExecuteScalar()

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''

                    Dim command6 As MySqlCommand = New MySqlCommand
                    command6.CommandType = CommandType.Text
                    command6.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt64(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command6.Connection = connupdateContract
                    command6.ExecuteNonQuery()
                    ''''''''''''''''''''''''''''''''''''''''

                    Dim command3 As MySqlCommand = New MySqlCommand

                    command3.CommandType = CommandType.Text
                    command3.CommandText = "select * from tblContractServingTarget where ContractNo ='" & txtOContract.Text & "'"
                    command3.Connection = connupdateContract

                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt3 As New DataTable
                    dt3.Load(dr3)

                    Dim prevrcno As Long

                    'prevrcno = dt.Rows(i)("rcno").ToString
                    prevrcno = dt.Rows(i)("OrigCode").ToString
                    If dt3.Rows.Count > 0 Then
                        sqlstr1 = "insert into tblContractServingTarget(SourceSQLID,ContractNo,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn,ServiceID,TargetID,TargetDesc)"
                        sqlstr1 = sqlstr1 & " select " & Convert.ToInt64(txtSourceSQLID.Text) & ",'" & txtContractNo.Text & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "',ServiceID,TargetID,TargetDesc    "
                        'sqlstr1 = sqlstr1 & " from tblContractServingTarget where SourceSQLID =" & dt.Rows(i)("rcno").ToString
                        sqlstr1 = sqlstr1 & " from tblContractServingTarget where SourceSQLID =" & dt.Rows(i)("OrigCode").ToString
                        Dim command4 As MySqlCommand = New MySqlCommand

                        command4.CommandText = sqlstr1
                        command4.Parameters.Clear()
                        command4.Connection = connupdateContract
                        command4.ExecuteNonQuery()
                        command4.Dispose()
                    End If



                    ''''''''''''''''''''''''''''''''''''''''''''''''''''
                    Dim command7 As MySqlCommand = New MySqlCommand

                    command7.CommandType = CommandType.Text
                    command7.CommandText = "select * from tblContractServingTarget where ContractNo ='" & txtOContract.Text & "'"
                    command7.Connection = connupdateContract

                    Dim dr7 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt7 As New DataTable
                    dt7.Load(dr7)

                    prevrcno = dt.Rows(i)("OrigCode").ToString
                    If dt7.Rows.Count > 0 Then
                        sqlstr1 = "insert into tblservicecontractfrequency(SourceSQLID, ContractNo,SeqNo, FreqMTD, DayNo, WeekNo, WeekDow,  MonthNo, CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                        sqlstr1 = sqlstr1 & " select " & Convert.ToInt64(txtSourceSQLID.Text) & ",'" & txtContractNo.Text & "', 001, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'    "
                        sqlstr1 = sqlstr1 & " from tblservicecontractfrequency where SourceSQLID =" & dt.Rows(i)("OrigCode").ToString

                        Dim command8 As MySqlCommand = New MySqlCommand

                        command8.CommandText = sqlstr1
                        command8.Parameters.Clear()
                        command8.Connection = connupdateContract
                        command8.ExecuteNonQuery()
                        command8.Dispose()
                    End If

                    ''''''''''''''''''''''''''''''''''''''''''''''''''''
                    '''''''''''''''''''''''''''''''''''''''''''
                    command2.Dispose()
                    command3.Dispose()

                    command5.Dispose()
                    command6.Dispose()
                Next
            End If

            connupdateContract.Dispose()
            command1.Dispose()
            dt.Dispose()

            ''''''''''''''''''''''
            'Dim dsDet As New DataSet

            'dsDet = cls00Connection.getDataSet("select * from m24ContractDet where ContractNo=N'" & cls00Regional.String_Filter(vCopyAddDoc) & "'")
            'If RowCount(dsDet) > 0 Then
            '    Dim staffID As String = Strings.Left(cls00Regional.String_Filter(vpStaffId), 25)
            '    Dim entryDate As String = "convert(datetime,'" & Now.ToString("dd/MM/yyyy HH:mm") & "',103)"
            '    Dim contractNo As String = Strings.Left(cls00Regional.String_Filter(txtContractNo.Text), 25)
            '    Dim sqlStr As String, dsTemp As New DataSet
            '    For i = 0 To RowCount(dsDet) - 1
            '        sqlStr = "insert into m24ContractDet(ContractNo,EntryStaff,EntryDate,LastAddEditStaff,LastAddEditDate,ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc)"
            '        sqlStr = sqlStr & " select N'" & contractNo & "',N'" & staffID & "'," & entryDate & ",N'" & staffID & "'," & entryDate & ",ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc "
            '        sqlStr = sqlStr & " from m24ContractDet where code=" & Val(GetDsValue(dsDet, "code", i))
            '        cls00Connection.getDataSet(sqlStr)
            '        dsTemp = cls00Connection.getDataSet("select code from m24ContractDet where ContractNo=N'" & contractNo & "' order by code desc")
            '        If RowCount(dsTemp) > 0 Then
            '            sqlStr = "insert into m24ContractServingTarget(SourceSQLID,ContractNo,EntryStaff,EntryDate,LastAddEditStaff,LastAddEditDate,ServiceID,TargetID,TargetDesc)"
            '            sqlStr = sqlStr & " select " & Val(GetDsValue(dsTemp, "code")) & ",N'" & contractNo & "',N'" & staffID & "'," & entryDate & ",N'" & staffID & "'," & entryDate & ",ServiceID,TargetID,TargetDesc   from m24ContractServingTarget where SourceSQLID=" & Val(GetDsValue(dsDet, "code", i))
            '            cls00Connection.getDataSet(sqlStr)

            '        End If

            '    Next
            'End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "updateContractDetailsInfo", ex.Message.ToString, txtOContract.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub SaveContract()
        Try
            Dim lAddress1 As String
            Dim lTelephone As String
            Dim lContactPerson As String
            Dim lIndustry As String
            Dim lMobile As String
            Dim lFax As String

            lAddress1 = ""
            lTelephone = ""
            lContactPerson = ""
            lIndustry = ""
            lMobile = ""
            lFax = ""

            Dim connBillingDetails As MySqlConnection = New MySqlConnection()

            connBillingDetails.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connBillingDetails.Open()

            Dim commandBillingDetails As MySqlCommand = New MySqlCommand
            commandBillingDetails.CommandType = CommandType.Text

            If ddlContactType.Text = "COMPANY" Then

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal, BillTelephone, BillMobile, BillFax , BillContactPerson, BillCity  FROM tblCompany where AccountId ='" & txtAccountId.Text & "'"
                Else
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddresssvc, BillStreetsvc, BillBuildingsvc, BillCountrysvc, BillPostalsvc, BillTelephone1svc, BillMobile1svc, BillFax1svc , BillContact1svc, BillCitysvc  FROM tblCompanyLocation where AccountId ='" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text & "'"
                End If

                commandBillingDetails.Connection = connBillingDetails

                Dim drBillingDetails As MySqlDataReader = commandBillingDetails.ExecuteReader()
                Dim dtBillingDetails As New DataTable
                dtBillingDetails.Load(drBillingDetails)

                If dtBillingDetails.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString

                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillStreet").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillCountry").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString


                        '''
                        If (dtBillingDetails.Rows(0)("billaddress1").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billaddress1").ToString) = True Then
                            lAddress1 = ""
                        Else
                            lAddress1 = dtBillingDetails.Rows(0)("billaddress1").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billstreet").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billstreet").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billstreet").ToString.Trim
                        End If



                        If (dtBillingDetails.Rows(0)("billbuilding").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billbuilding").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billbuilding").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcity").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcity").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcity").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcountry").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcountry").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcountry").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billpostal").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billpostal").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billpostal").ToString.Trim
                        End If

                        '''


                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone").ToString.Trim
                        lContactPerson = dtBillingDetails.Rows(0)("BillContactPerson").ToString.Trim
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile").ToString.Trim
                        lFax = dtBillingDetails.Rows(0)("BillFax").ToString.Trim
                    Else
                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString & ", " & dtBillingDetails.Rows(0)("BillStreetsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillBuildingsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillCountrysvc").ToString & ", " & dtBillingDetails.Rows(0)("BillPostalsvc").ToString


                        '''
                        If (dtBillingDetails.Rows(0)("BillAddresssvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillAddresssvc").ToString) = True Then
                            lAddress1 = ""
                        Else
                            lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("BillStreetsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillStreetsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("BillStreetsvc").ToString.Trim
                        End If



                        If (dtBillingDetails.Rows(0)("BillBuildingsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillBuildingsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("BillBuildingsvc").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcitysvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcitysvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcitysvc").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcountrysvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcountrysvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcountrysvc").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billpostalsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billpostalsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billpostalsvc").ToString.Trim
                        End If

                        '''

                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone1svc").ToString.Trim
                        lContactPerson = dtBillingDetails.Rows(0)("BillContact1svc").ToString.Trim
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile1svc").ToString.Trim
                        lFax = dtBillingDetails.Rows(0)("BillFax1svc").ToString.Trim

                    End If

                    'SASI - Industry Segment 28/04/2017

                    'ddlIndustry.SelectedItem.Text = lIndustry

                    'If String.IsNullOrEmpty(lIndustry) = False Then
                    '    Dim command1 As MySqlCommand = New MySqlCommand

                    '    command1.CommandType = CommandType.Text

                    '    command1.CommandText = "SELECT industry,marketsegmentid FROM tblindustry where industry='" & lIndustry & "'"
                    '    command1.Connection = connBillingDetails

                    '    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    '    Dim dt As New DataTable
                    '    dt.Load(dr)
                    '    ddlMarketSegmentID.SelectedItem.Text = dt.Rows(0)("marketsegmentid").ToString
                    '    If dt.Rows.Count > 0 Then

                    '    End If
                    'End If
                End If
                    dtBillingDetails.Dispose()
                    'SASI - End Industry Segment
            ElseIf ddlContactType.Text = "PERSON" Then

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    commandBillingDetails.CommandText = "SELECT  BillAddress1,  BillBuilding, BillStreet, BillCountry, BillPostal ,BillTelHome, BillTelMobile, BillTelFax , BillContactPerson, BillCity  FROM tblPerson where AccountId ='" & txtAccountId.Text & "'"
                Else
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddresssvc, BillStreetsvc, BillBuildingsvc, BillCountrysvc, BillPostalsvc, BillTelephone1svc, BillMobile1svc, BillFax1svc , BillContact1svc , BillCitysvc FROM tblPersonLocation where AccountId ='" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text & "'"
                End If
                commandBillingDetails.Connection = connBillingDetails

                Dim drBillingDetails As MySqlDataReader = commandBillingDetails.ExecuteReader()
                Dim dtBillingDetails As New DataTable
                dtBillingDetails.Load(drBillingDetails)

                If dtBillingDetails.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillStreet").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillCountry").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString


                        '''
                        If (dtBillingDetails.Rows(0)("billaddress1").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billaddress1").ToString) = True Then
                            lAddress1 = ""
                        Else
                            lAddress1 = dtBillingDetails.Rows(0)("billaddress1").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billstreet").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billstreet").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billstreet").ToString.Trim
                        End If



                        If (dtBillingDetails.Rows(0)("billbuilding").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billbuilding").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billbuilding").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcity").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcity").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcity").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billcountry").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcountry").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcountry").ToString.Trim
                        End If

                        If (dtBillingDetails.Rows(0)("billpostal").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billpostal").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billpostal").ToString.Trim
                        End If

                        '''



                        lTelephone = dtBillingDetails.Rows(0)("BillTelHome").ToString.Trim
                        lContactPerson = dtBillingDetails.Rows(0)("BillContactPerson").ToString.Trim
                        'lMobile = dtBillingDetails.Rows(0)("BillTelMobile").ToString.Trim
                        'lIndustry = ""
                        lMobile = dtBillingDetails.Rows(0)("BillTelMobile").ToString.Trim
                        lFax = dtBillingDetails.Rows(0)("BillTelFax").ToString.Trim
                    Else
                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString & ", " & dtBillingDetails.Rows(0)("BillStreetsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillBuildingsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillCountrysvc").ToString & ", " & dtBillingDetails.Rows(0)("BillPostalsvc").ToString

                        '''
                        If (dtBillingDetails.Rows(0)("BillAddresssvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillAddresssvc").ToString) = True Then
                            lAddress1 = ""
                        Else
                            lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString
                        End If

                        If (dtBillingDetails.Rows(0)("BillStreetsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillStreetsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("BillStreetsvc").ToString
                        End If



                        If (dtBillingDetails.Rows(0)("BillBuildingsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("BillBuildingsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("BillBuildingsvc").ToString
                        End If

                        If (dtBillingDetails.Rows(0)("billcitysvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcitysvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcitysvc").ToString
                        End If

                        If (dtBillingDetails.Rows(0)("billcountrysvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billcountrysvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billcountrysvc").ToString
                        End If

                        If (dtBillingDetails.Rows(0)("billpostalsvc").ToString = "&nbsp;") Or String.IsNullOrEmpty(dtBillingDetails.Rows(0)("billpostalsvc").ToString) = True Then
                        Else
                            lAddress1 = lAddress1 + ", " + dtBillingDetails.Rows(0)("billpostalsvc").ToString
                        End If

                        '''

                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone1svc").ToString.Trim
                        lContactPerson = dtBillingDetails.Rows(0)("BillContact1svc").ToString.Trim
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile1svc").ToString.Trim
                        lFax = dtBillingDetails.Rows(0)("BillFax1svc").ToString.Trim
                    End If
                   
                End If

                dtBillingDetails.Dispose()
                End If


                connBillingDetails.Close()
                commandBillingDetails.Dispose()

                If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                    ConvertUpperGeneral()
                End If


            Dim lContractCode As String
            lContractCode = ""

            If ddlContractCode.SelectedIndex > 0 Then
                Dim hyphenpos As Integer

                hyphenpos = 0
                hyphenpos = (ddlContractCode.Text.IndexOf(":"))

                lContractCode = Left(ddlContractCode.Text, (hyphenpos - 1))

            End If

            If txtMode.Text = "NEW" Then

                If txtModeRenew.Text <> "REV" Then
                    GenerateContractNo()
                End If


                'If String.IsNullOrEmpty(txtContractNo.Text.Trim) = True Then
                '    lblAlert.Text = "CONTRACT NUMBER CANNOT BE BLANK"
                '    'updPnlMsg.Update()
                '    Exit Sub
                'End If

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo"
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    lblAlert.Text = "RECORD ALREADY EXISTS"
                Else
                    'Dim strdate As DateTime
                    Dim GstNo As String

                    'input check for numbers
                    If (txtAgreeVal.Text.Trim = "") Then
                        txtAgreeVal.Text = 0
                    End If

                    If (txtDuration.Text.Trim = "") Then
                        txtDuration.Text = 0
                    End If

                    If (txtDisPercent.Text.Trim = "") Then
                        txtDisPercent.Text = 0
                    End If

                    If (txtDisAmt.Text.Trim = "") Then
                        txtDisAmt.Text = 0
                    End If

                    If (txtAllocTime.Text.Trim = "") Then
                        txtAllocTime.Text = 0
                    End If

                    If (txtQuotePrice.Text.Trim = "") Then
                        txtQuotePrice.Text = 0
                    End If

                    If (txtResponse.Text.Trim = "") Then
                        txtResponse.Text = 0
                    End If

                    If (txtCancelCharges.Text.Trim = "") Then
                        txtCancelCharges.Text = 0
                    End If

                    If (txtMinDuration.Text.Trim = "") Then
                        txtMinDuration.Text = 0
                    End If

                    If (txtPerServVal.Text.Trim = "") Then
                        txtPerServVal.Text = 0
                    End If

                    ''''''''''''''''''
                    If (txtServiceAmt.Text.Trim = "") Then
                        txtServiceAmt.Text = 0
                    End If

                    If (txtServiceNo.Text.Trim = "") Then
                        txtServiceNo.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If


                    If (txtHourAmt.Text.Trim = "") Then
                        txtHourAmt.Text = 0
                    End If

                    If (txtHourNo.Text.Trim = "") Then
                        txtHourNo.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtCallAmt.Text.Trim = "") Then
                        txtCallAmt.Text = 0
                    End If

                    If (txtCallNo.Text.Trim = "") Then
                        txtCallNo.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If

                    If (txtUnitAmt.Text.Trim = "") Then
                        txtUnitAmt.Text = 0
                    End If

                    If (txtUnitNo.Text.Trim = "") Then
                        txtUnitNo.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If

                    If (txtCompensateMax.Text.Trim = "") Then
                        txtCompensateMax.Text = 0
                    End If

                    If (txtCompensatePct.Text.Trim = "") Then
                        txtCompensatePct.Text = 0
                    End If



                    If (txtAmtBalance.Text.Trim = "") Then
                        txtAmtBalance.Text = 0
                    End If

                    If (txtAmtCompleted.Text.Trim = "") Then
                        txtAmtCompleted.Text = 0
                    End If


                    '''''''''''
                    If (txtConDetVal.Text.Trim = "") Then
                        txtConDetVal.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                        txtPortfolioValue.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        txtRetentionPerc.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtWarrantyBillingAmount.Text) = True Then
                        txtWarrantyBillingAmount.Text = "0.00"
                    End If

                    GstNo = txtGstNo.Text.Trim

                    'SASI - Industry Segment 28/04/2017
                    If (txtPortfolioValue.Text.Trim = "") Then
                        txtPortfolioValue.Text = 0
                    End If



                    'SASI - End Industry Segment

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "INSERT INTO tblContractTemp(ContractNo, ContractDate, ContactType, CustCode, EntryDate, OurReference, YourReference, Telephone, "
                    qry = qry + " Fax, Contact, ContactPersonMobile, AgreeValue, Duration, DurationMs, StartDate, EndDate, "
                    qry = qry + " DraftBy, "
                    qry = qry + " ServiceStart, ServiceEnd, "
                    qry = qry + "WarrantyStart, WarrantyEnd, Notes,   OContractNo, PrintBody, Remarks,"
                    qry = qry + "QuotePrice, QuoteUnitMs, Scheduler, SalesMan, Status, CustName, RenewalSt, CustAddr, NotedST, "
                    qry = qry + "ProspectId, GstNos, Postal, LocateGrp, GST, ContractGroup, MainContractNo,"
                    qry = qry + "ContractValue, PerServiceValue, CompanyGroup, Disc_Percent, DiscAmt, ResponseHours, CancelCharges, BillingFrequency,"
                    qry = qry + "MinDuration, Settle, ServiceNo, ServiceBal, ServiceAmt, ServiceNoActual, HourNo, HourBal, HourAmt, ActualEnd, HourNoActual, "
                    qry = qry + "CallNo, CallBal, CallAmt, CallNoActual, UnitNo, UnitBal, UnitAmt, UnitNoActual, CompensatePct,  "
                    qry = qry + "CompensateMax, AmtCompleted, AmtBalance, ValuePerMonth, BillingAmount, "
                    qry = qry + "AccountID, Warranty, WarrantyDuration, RequireInspecton, InspectionFrequency, InspectionStart,InspectionEnd,ComputationMethod,  "
                    qry = qry + "TotalArea, CompletedArea, BalanceArea, RetentionPerc, RetentionValue, RetentionClaimDate,  "
                    qry = qry + "Industry, BillAddress1, BillTelephone, BillMobile,  BillFax, BillContactPerson, "
                    qry = qry + "PONo, ServiceAddress, "
                    qry = qry + "ProjectCode, ProjectName,  "
                    qry = qry + "BaitStationTotal,  WarrantyBillingFrequency, WarrantyBillingAmount, Location, FixedContinuous, EndofLastSchedule, "
                    'qry = qry + "TimeIn, TimeOut, AllocatedSvcTime, ScheduleType,  TeamId, InchargeId, Support, Comments, "
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn,ServiceTypeID,ServiceTypeDescription,CategoryID,PortfolioYN,PortfolioValue,MarketSegmentID, AgreementType, AutoRenew, "
                    qry = qry + "  ExcludeBatchPriceChange, ContractCode, ContractCodeDescription )"

                    qry = qry + " VALUES(@ContractNo, @ContractDate, @ContactType, @CustCode, @EntryDate,  @OurReference, @YourReference, @Telephone,"
                    qry = qry + "@Fax, @Contact, @ContactPersonMobile, @AgreeValue, @Duration, @DurationMs, @StartDate, @EndDate,"
                    qry = qry + "@DraftBy, "
                    qry = qry + "@ServiceStart, @ServiceEnd, @WarrantyStart, @WarrantyEnd, @Notes,"
                    qry = qry + "@OContractNo, @PrintBody, @Remarks, @QuotePrice, @QuoteUnitMs, @Scheduler, "
                    qry = qry + "@SalesMan, @Status, @CustName, @RenewalSt, @CustAddr, @NotedST, @ProspectId, @GstNos, @Postal, "
                    qry = qry + "@LocateGrp, @GST,   @ContractGroup, @MainContractNo, @ContractValue,"
                    qry = qry + "@PerServiceValue, @CompanyGroup, @Disc_Percent, @DiscAmt, @ResponseHours, @CancelCharges, @BillingFrequency, "
                    qry = qry + "@MinDuration, @Settle, @ServiceNo, @ServiceBal, @ServiceAmt, @ServiceNoActual, @HourNo, @HourBal, @HourAmt, @ActualEnd, "
                    qry = qry + "@HourNoActual, @CallNo, @CallBal, @CallAmt, @CallNoActual, @UnitNo, @UnitBal, @UnitAmt, @UnitNoActual, @CompensatePct, @CompensateMax, @AmtCompleted, @AmtBalance, @ValuePerMonth, @BillingAmount,"
                    qry = qry + "@AccountID, @Warranty, @WarrantyDuration, @RequireInspecton, @InspectionFrequency, @InspectionStart, @InspectionEnd, @ComputationMethod,  "
                    qry = qry + "@TotalArea, @CompletedArea, @BalanceArea, @RetentionPerc, @RetentionValue, @RetentionClaimDate, "
                    qry = qry + "@Industry, @BillAddress1, @BillTelephone, @BillMobile,  @BillFax, @BillContactPerson, "
                    qry = qry + "@PONo, @ServiceAddress, "
                    qry = qry + "@ProjectCode, @ProjectName, "
                    qry = qry + "@BaitStationTotal,  @WarrantyBillingFrequency, @WarrantyBillingAmount, @Location, @FixedContinuous, @EndofLastSchedule,"
                    'qry = qry + " @TimeIn, @TimeOut, @AllocatedSvcTime, @ScheduleType, @TeamId, @InchargeId, @Support, @Comments,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn,@ServiceTypeID,@ServiceTypeDescription,@CategoryID,@PortfolioYN,@PortfolioValue,@MarketSegmentID, @AgreementType, @AutoRenew,  "
                    qry = qry + "@ExcludeFromBatchPriceChange, @ContractCode, @ContractCodeDescription);"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim.ToUpper)

                    command.Parameters.AddWithValue("@ContractNo", txtContractNoTemp.Text.Trim.ToUpper)

                    If txtContractDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ContractDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ContractDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@ContactType", txtContType2.Text.Trim)
                    command.Parameters.AddWithValue("@CustCode", txtClient.Text.Trim)
                    command.Parameters.AddWithValue("@EntryDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command.Parameters.AddWithValue("@OurReference", txtOurRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@YourReference", txtYourRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact", txtContactPerson.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ContactPersonMobile", txtConPerMobile.Text.Trim)
                    command.Parameters.AddWithValue("@AgreeValue", txtAgreeVal.Text.Trim)
                    command.Parameters.AddWithValue("@Duration", txtDuration.Text.Trim)
                    command.Parameters.AddWithValue("@DurationMs", rbtLstDuration.SelectedValue.ToString)

                    If String.IsNullOrEmpty(txtContractStart.Text) = True Then
                        command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    'If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = True Then
                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = True Or txtContractEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))
                    End If


                    command.Parameters.AddWithValue("@DraftBy", Session("UserID"))


                    If txtServStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceStart", Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd"))
                    End If


                    If String.IsNullOrEmpty(txtServEnd.Text.Trim) = True Or txtServEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@ServiceEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd"))
                    End If


                    If String.IsNullOrEmpty(txtWarrStart.Text.Trim) = True Or txtWarrStart.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If String.IsNullOrEmpty(txtWarrEnd.Text.Trim) = True Or txtWarrEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEnd.Text).ToString("yyyy-MM-dd"))

                    End If

                    command.Parameters.AddWithValue("@Notes", txtContractNotes.Text.Trim)

                    command.Parameters.AddWithValue("@OContractNo", txtOContract.Text.Trim)
                    command.Parameters.AddWithValue("@PrintBody", txtPrintBody.Text.Trim)
                    command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@QuotePrice", txtQuotePrice.Text.Trim)
                    command.Parameters.AddWithValue("@QuoteUnitMs", txtQuoteUnit.Text.Trim)

                    If ddlScheduler.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@Scheduler", "")
                    Else
                        command.Parameters.AddWithValue("@Scheduler", ddlScheduler.Text.Trim)
                    End If


                    If ddlSalesman.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@SalesMan", "")
                    Else
                        command.Parameters.AddWithValue("@SalesMan", ddlSalesman.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@Status", txtStatus.Text.Trim)
                    command.Parameters.AddWithValue("@Status", Left(txtStatus.Text.Trim, 1))
                    command.Parameters.AddWithValue("@CustName", txtCustName.Text.Trim)
                    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text.Trim)
                    'command.Parameters.AddWithValue("@CustAddr", Left(txtOfficeAddress.Text.Trim, 200))
                    command.Parameters.AddWithValue("@CustAddr", Left(txtBillingAddress.Text.Trim.ToUpper, 200))

                    command.Parameters.AddWithValue("@NotedST", txtNS.Text.Trim)
                    command.Parameters.AddWithValue("@ProspectId", txtProspectId.Text.Trim)
                    command.Parameters.AddWithValue("@GstNos", GstNo)
                    command.Parameters.AddWithValue("@Postal", txtPostal.Text.Trim)


                    If ddlLocateGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@LocateGrp", "")
                    Else
                        command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    End If
                    'command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@GST", txtGS.Text.Trim)

                    If ddlContractGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ContractGroup", "")
                    Else
                        command.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.SelectedValue.ToString)
                    End If


                    command.Parameters.AddWithValue("@MainContractNo", txtMainContractNo.Text.Trim)
                    command.Parameters.AddWithValue("@ContractValue", txtConDetVal.Text.Trim)
                    command.Parameters.AddWithValue("@PerServiceValue", txtPerServVal.Text.Trim)
                    command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Disc_Percent", txtDisPercent.Text.Trim)
                    command.Parameters.AddWithValue("@DiscAmt", txtDisAmt.Text.Trim)
                    command.Parameters.AddWithValue("@ResponseHours", txtResponse.Text.Trim)
                    command.Parameters.AddWithValue("@CancelCharges", txtCancelCharges.Text.Trim)

                    If ddlBillingFreq.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@BillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@BillingFrequency", ddlBillingFreq.SelectedValue.ToString)
                    End If

                    command.Parameters.AddWithValue("@MinDuration", txtMinDuration.Text.Trim)
                    'command.Parameters.AddWithValue("@Settle", rbtnLSettle.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Settle", "CB")
                    command.Parameters.AddWithValue("@ServiceNo", txtServiceNo.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceBal", txtServiceBal.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceAmt", txtAgreeVal.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceNoActual", txtServiceNoActual.Text)

                    command.Parameters.AddWithValue("@HourNo", txtHourNo.Text.Trim)
                    command.Parameters.AddWithValue("@HourBal", txtHourBal.Text.Trim)
                    command.Parameters.AddWithValue("@HourAmt", txtHourAmt.Text.Trim)
                    command.Parameters.AddWithValue("@HourNoActual", txtHourNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@CallNo", txtCallNo.Text.Trim)
                    command.Parameters.AddWithValue("@CallBal", txtCallBal.Text.Trim)
                    command.Parameters.AddWithValue("@CallAmt", txtCallAmt.Text.Trim)
                    command.Parameters.AddWithValue("@CallNoActual", txtCallNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNo", txtUnitNo.Text.Trim)
                    command.Parameters.AddWithValue("@UnitBal", txtUnitBal.Text.Trim)
                    command.Parameters.AddWithValue("@UnitAmt", txtUnitAmt.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNoActual", txtUnitNoActual.Text.Trim)

                    command.Parameters.AddWithValue("@CompensateMax", txtCompensateMax.Text.Trim)
                    command.Parameters.AddWithValue("@CompensatePct", txtCompensatePct.Text.Trim)

                    command.Parameters.AddWithValue("@AmtCompleted", txtAmtCompleted.Text.Trim)
                    command.Parameters.AddWithValue("@AmtBalance", txtAgreeVal.Text.Trim)

                    If String.IsNullOrEmpty(txtValPerMnth.Text) = True Then
                        command.Parameters.AddWithValue("@ValuePerMonth", 0.0)
                    Else
                        command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                    End If

                    If String.IsNullOrEmpty(txtBillingAmount.Text) = True Then
                        command.Parameters.AddWithValue("@BillingAmount", 0.0)
                    Else
                        command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)
                    End If

                    'If txtActualEnd.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    'Else
                    '    command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                    'End If
                    'If txtActualEnd.Text.Trim = "" Then
                    '    command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    'Else
                    '    command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                    'End If


                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim)

                    If ChkWithWarranty.Checked = True Then
                        command.Parameters.AddWithValue("@Warranty", "Y")
                    Else
                        command.Parameters.AddWithValue("@Warranty", "N")
                    End If

                    command.Parameters.AddWithValue("@WarrantyDuration", txtWarrDurtion.Text.Trim)

                    If ChkRequireInspection.Checked = True Then
                        command.Parameters.AddWithValue("@RequireInspecton", "Y")
                    Else
                        command.Parameters.AddWithValue("@RequireInspecton", "N")
                    End If

                    If ddlInspectionFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@InspectionFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
                    End If


                    If TxtInspectionStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If TxtInspectionEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

                    End If

                    If rbtComputationMethod.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
                    Else
                        command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
                    End If

                    If String.IsNullOrEmpty(txtTotalArea.Text) = True Then
                        command.Parameters.AddWithValue("@TotalArea", 0.0)
                    Else
                        command.Parameters.AddWithValue("@TotalArea", txtTotalArea.Text)
                    End If

                    If String.IsNullOrEmpty(txtCompletedArea.Text) = True Then
                        command.Parameters.AddWithValue("@CompletedArea", 0.0)
                    Else
                        command.Parameters.AddWithValue("@CompletedArea", txtCompletedArea.Text)
                    End If

                    If String.IsNullOrEmpty(txtBalanceArea.Text) = True Then
                        command.Parameters.AddWithValue("@BalanceArea", 0.0)
                    Else
                        command.Parameters.AddWithValue("@BalanceArea", txtBalanceArea.Text)
                    End If

                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionPerc", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionPerc", Convert.ToDecimal(txtRetentionPerc.Text))
                    End If

                    If String.IsNullOrEmpty(txtRetentionValue.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionValue", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionValue", Convert.ToDecimal(txtRetentionValue.Text))
                    End If


                    If txtRetentionReleaseDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
                    End If


                    command.Parameters.AddWithValue("@Industry", ddlIndustry.Text)
                    'command.Parameters.AddWithValue("@BillAddress1", lAddress1.Trim)
                    command.Parameters.AddWithValue("@BillAddress1", Left(lAddress1.Trim, 100))
                    command.Parameters.AddWithValue("@BillTelephone", lTelephone)
                    command.Parameters.AddWithValue("@BillMobile", lMobile)
                    command.Parameters.AddWithValue("@BillFax", lFax)
                    'command.Parameters.AddWithValue("@BillContactPerson", lContactPerson.Trim)
                    command.Parameters.AddWithValue("@BillContactPerson", "")

                    command.Parameters.AddWithValue("@PONo", txtPONo.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceAddress", txtServiceAddressCons.Text.ToUpper)

                    If ddlProjectCode.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ProjectCode", "")
                        command.Parameters.AddWithValue("@ProjectName", "")
                    Else
                        command.Parameters.AddWithValue("@ProjectCode", Left(ddlProjectCode.Text, 17).ToUpper)
                        command.Parameters.AddWithValue("@ProjectName", Mid(ddlProjectCode.Text, 21, 50).ToUpper)
                    End If


                    command.Parameters.AddWithValue("@BaitStationTotal", txtBaitStationTotal.Text)
                    'command.Parameters.AddWithValue("@StationCompleted", txtServiceAddressCons.Text)
                    'command.Parameters.AddWithValue("@StationBalance", txtServiceAddressCons.Text)

                    'If String.IsNullOrEmpty(ddlWarrantyFrequency.Text) = True Then
                    If ddlWarrantyFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", ddlWarrantyFrequency.Text)
                    End If

                    command.Parameters.AddWithValue("@WarrantyBillingAmount", txtWarrantyBillingAmount.Text)

                    command.Parameters.AddWithValue("@AgreementType", ddlAgreementType.Text)

                    If String.IsNullOrEmpty(txtLocation.Text) = True Then
                        command.Parameters.AddWithValue("@Location", "")
                    Else
                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    End If


                    If chkAutoRenew.Checked = True Then
                        command.Parameters.AddWithValue("@AutoRenew", "Y")
                    Else
                        command.Parameters.AddWithValue("@AutoRenew", "N")
                    End If


                    command.Parameters.AddWithValue("@FixedContinuous", rbtFixedContinuous.SelectedValue.ToString)

                    If txtEndofLastSchedule.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@EndofLastSchedule", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndofLastSchedule", Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd"))

                    End If

                    'command.Parameters.AddWithValue("@OfficeAddress", txtOfficeAddress.Text.Trim)

                    'command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString.ToUpper)
                    'command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                    'command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)
                    'command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)

                    'command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim)
                    'command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim)
                    'command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim)
                    'command.Parameters.AddWithValue("@Comments", txtServInst.Text.Trim)


                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    'SASI - Industry Segment 28/04/2017
                    'Dim index As Integer = ddlServiceTypeID.SelectedItem.Text.IndexOf("-")
                    'Dim st As String = ddlServiceTypeID.SelectedItem.Text.Substring(1, index - 2)

                    If ddlServiceTypeID.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ServiceTypeID", "")
                        command.Parameters.AddWithValue("@ServiceTypedescription", "")
                    Else

                        '16.07.25
                        Dim hyphenpos As Integer
                        hyphenpos = 0
                        hyphenpos = (ddlServiceTypeID.Text.IndexOf("-"))

                        Dim strServiceTypeId, strServiceTypeDescription As String
                        strServiceTypeId = ""
                        strServiceTypeDescription = ""

                        strServiceTypeId = Left(ddlServiceTypeID.Text, (hyphenpos - 1)).Trim
                        strServiceTypeDescription = Right(ddlServiceTypeID.Text, Len(ddlServiceTypeID.Text) - (hyphenpos + 1)).Trim

                        command.Parameters.AddWithValue("@ServiceTypeID", strServiceTypeId.ToUpper.Trim)
                        command.Parameters.AddWithValue("@ServiceTypedescription", strServiceTypeDescription.ToUpper.Trim)

                        '16.07.25
                        'command.Parameters.AddWithValue("@ServiceTypeID", Left(ddlServiceTypeID.Text, 4).ToUpper)
                        'command.Parameters.AddWithValue("@ServiceTypedescription", Mid(ddlServiceTypeID.Text, 8, 65).ToUpper)
                    End If

                    'If ddlCategoryID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@CategoryID", "")
                    'Else
                    command.Parameters.AddWithValue("@CategoryID", txtCategoryID.Text.Trim)
                    'End If

                    If ddlPortfolioYN.SelectedItem.Text = "YES" Then
                        command.Parameters.AddWithValue("@PortfolioYN", 1)
                    Else
                        command.Parameters.AddWithValue("@PortfolioYN", 0)
                    End If

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                            command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                        Else
                            command.Parameters.AddWithValue("@PortfolioValue", Convert.ToDecimal(txtPortfolioValue.Text))
                        End If
                    Else
                        command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                    End If


                    If ddlMarketSegmentID.Text = "--SELECT--" Then
                        command.Parameters.AddWithValue("@MarketSegmentID", "")
                    Else
                        command.Parameters.AddWithValue("@MarketSegmentID", ddlMarketSegmentID.Text.Trim)
                    End If

                    command.Parameters.AddWithValue("@ExcludeFromBatchPriceChange", chkExcludeFromBatchPriceChange.Checked)

                    command.Parameters.AddWithValue("@ContractCode", lContractCode.Trim)
                    command.Parameters.AddWithValue("@ContractCodeDescription", Right(ddlContractCode.Text.Trim, Len(ddlContractCode.Text.Trim) - (Len(lContractCode.Trim) + 3)))


                    'SASI - End Industry Segment

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontracttemp"


                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    'txtRcno.Text = commandRcno.ExecuteScalar()
                    txtRcnoTemp.Text = commandRcno.ExecuteScalar()
                    commandRcno.Dispose()


                    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                End If


                '                'Renewal
                '                If txtModeRenew.Text = "R" Then

                '                    updateContractDetailsInfo()

                '                    If String.IsNullOrEmpty(txtRenewalTerminationContract.Text) = False Then
                '                        Dim hyphenpos As Integer

                '                        hyphenpos = 0
                '                        hyphenpos = (txtRenewalTerminationContract.Text.IndexOf("-"))

                '                        lContractCode = Left(txtRenewalTerminationContract.Text, (hyphenpos - 1))

                '                    End If

                '                    Dim commandRenew As MySqlCommand = New MySqlCommand
                '                    commandRenew.CommandType = CommandType.Text

                '                    Dim qryRenew As String = "Update tblContract set  RenewalDate =@RenewalDate, Status = 'C', RenewalSt = 'R', RenewalContractNo =@RenewalContractNo, ActualEnd=@ActualEnd, TerminationCode=@TerminationCode, TerminationDescription=@TerminationDescription where rcno = @rcno  "

                '                    commandRenew.CommandText = qryRenew
                '                    commandRenew.Parameters.Clear()

                '                    commandRenew.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                '                    commandRenew.Parameters.AddWithValue("@RenewalDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                '                    commandRenew.Parameters.AddWithValue("@RenewalContractNo", txtContractNo.Text.Trim)
                '                    commandRenew.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEndChStForReNew.Text).ToString("yyyy-MM-dd HH:mm:ss"))

                '                    commandRenew.Parameters.AddWithValue("@TerminationCode", lContractCode.Trim)
                '                    commandRenew.Parameters.AddWithValue("@TerminationDescription", Right(txtRenewalTerminationContract.Text.Trim, Len(txtRenewalTerminationContract.Text.Trim) - (Len(lContractCode.Trim) + 3)))
                '                    commandRenew.Connection = conn
                '                    commandRenew.ExecuteNonQuery()
                '                    commandRenew.Dispose()

                '                    ''''''''''
                '                    'UpdateSignedAgreementReference(txtOContract.Text, )

                '                    UpdateSignedAgreementReference(txtOContract.Text, txtRcno.Text)


                '                    ''''''''''
                '                    UpdateAgreeValue("ReNew")

                '                    lblMessage.Text = "EDIT: CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text & " SUCCESSFULLY "
                '                    lblAlert.Text = ""
                '                    commandRenew.Dispose()
                '                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtOContract.Text, "RENEWED", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcnoRenew.Text)

                '                End If
                '                'Renewal



                '                'Revision
                '                If txtModeRenew.Text = "REV" Then

                '                    ''''''''''''''''''''''''''''''''''''''''
                '                    Dim CountBilledServiceRecords As Integer
                '                    CountBilledServiceRecords = 0

                '                    Dim CountPostedServiceRecords As Integer
                '                    CountPostedServiceRecords = 0
                '                    Dim commandT1 As MySqlCommand = New MySqlCommand

                '                    Dim strdate1 As DateTime

                '                    commandT1.CommandType = CommandType.Text
                '                    'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                '                    commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtPrevContract.Text & "'"

                '                    commandT1.Connection = conn

                '                    Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
                '                    Dim dtserviceT As New DataTable
                '                    dtserviceT.Load(drserviceT)

                '                    If dtserviceT.Rows.Count > 0 Then

                '                        For x As Integer = 0 To dtserviceT.Rows.Count - 1

                '                            '''''''''''''''''''''''''
                '                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                '                            commandIsBilled.CommandType = CommandType.Text
                '                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                '                            commandIsBilled.Connection = conn

                '                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                '                            Dim dtIsBilled As New DataTable
                '                            dtIsBilled.Load(drIsBilled)

                '                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                '                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                '                                commandIsBilled.Dispose()
                '                                dtIsBilled.Dispose()
                '                                GoTo nextrecR
                '                            End If

                '                            commandIsBilled.Dispose()
                '                            dtIsBilled.Dispose()
                '                            '''''''''''''''''''''''''''

                '                            Dim commandE2 As MySqlCommand = New MySqlCommand
                '                            commandE2.CommandType = CommandType.Text
                '                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                '                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where  RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"

                '                            commandE2.Connection = conn
                '                            commandE2.ExecuteNonQuery()
                '                            commandE2.Dispose()
                'nextrecR:
                '                        Next

                '                    End If

                '                    Dim commandT As MySqlCommand = New MySqlCommand
                '                    commandT.CommandType = CommandType.Text

                '                    Dim qryT As String = "UPDATE tblContract SET  Status ='R', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription where ContractNo= @ContractNo "

                '                    commandT.CommandText = qryT
                '                    commandT.Parameters.Clear()

                '                    If txtActualEndChSt.Text = "" Then
                '                        commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                '                    Else
                '                        strdate1 = DateTime.Parse(txtActualEndChSt.Text.Trim)
                '                        commandT.Parameters.AddWithValue("@ActualEnd", strdate1.ToString("yyyy-MM-dd"))
                '                    End If


                '                    commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                '                    commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                '                    commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                '                    'commandT.Parameters.AddWithValue("@TerminationDescription", Strings.Mid(ddlTerminationCode.Text,9)

                '                    commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                '                    commandT.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
                '                    'commandT.Parameters.AddWithValue("@Rcno", txtPrevContract.TexttxtRcno.Text)
                '                    commandT.Parameters.AddWithValue("@ContractNo", txtPrevContract.Text)
                '                    commandT.Connection = conn
                '                    commandT.ExecuteNonQuery()

                '                    GridView1.DataBind()

                '                    'originalStatus = ""
                '                    ddlStatusChSt.SelectedIndex = 0
                '                    txtActualEndChSt.Text = ""
                '                    txtCommentChSt.Text = ""

                '                    '26.05.22
                '                    'txtModeRenew.Text = ""
                '                    '26.05.22
                '                    ''''''''''''''''''''''''''''''''''''''''

                '                    UpdateSignedAgreementReference(txtPrevContract.Text, txtRcno.Text)

                '                    InsertCommissionNotes()

                '                    UpdateAgreeValue("Revise")
                '                    lblMessage.Text = "EDIT: CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text & " SUCCESSFULLY "
                '                    lblAlert.Text = ""

                '                End If
                '                'Revision

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                DisableControls()

                'UpdateAgreeValue("New")

                tb1.ActiveTabIndex = 1

                'btnADD_Click(sender, e)
                'txtMode.Text = ""
                'btnContractDetail.Enabled = True
            ElseIf txtMode.Text = "EDIT" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT * FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                Else
                    Dim strdate As DateTime
                    Dim GstNo As String

                    'input check for numbers
                    If (txtAgreeVal.Text.Trim = "") Then
                        txtAgreeVal.Text = 0
                    End If

                    If (txtDuration.Text.Trim = "") Then
                        txtDuration.Text = 0
                    End If

                    If (txtDisPercent.Text.Trim = "") Then
                        txtDisPercent.Text = 0
                    End If

                    If (txtDisAmt.Text.Trim = "") Then
                        txtDisAmt.Text = 0
                    End If

                    If (txtAllocTime.Text.Trim = "") Then
                        txtAllocTime.Text = 0
                    End If

                    If (txtQuotePrice.Text.Trim = "") Then
                        txtQuotePrice.Text = 0
                    End If

                    If (txtResponse.Text.Trim = "") Then
                        txtResponse.Text = 0
                    End If

                    If (txtCancelCharges.Text.Trim = "") Then
                        txtCancelCharges.Text = 0
                    End If

                    If (txtMinDuration.Text.Trim = "") Then
                        txtMinDuration.Text = 0
                    End If

                    If (txtPerServVal.Text.Trim = "") Then
                        txtPerServVal.Text = 0
                    End If

                    If (txtServiceAmt.Text.Trim = "") Then
                        txtServiceAmt.Text = 0
                    End If

                    If (txtServiceNo.Text.Trim = "") Then
                        txtServiceNo.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If


                    If (txtHourAmt.Text.Trim = "") Then
                        txtHourAmt.Text = 0
                    End If

                    If (txtHourNo.Text.Trim = "") Then
                        txtHourNo.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtCallAmt.Text.Trim = "") Then
                        txtCallAmt.Text = 0
                    End If

                    If (txtCallNo.Text.Trim = "") Then
                        txtCallNo.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If



                    If (txtUnitAmt.Text.Trim = "") Then
                        txtUnitAmt.Text = 0
                    End If

                    If (txtUnitNo.Text.Trim = "") Then
                        txtUnitNo.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If


                    If (txtCompensateMax.Text.Trim = "") Then
                        txtCompensateMax.Text = 0
                    End If

                    If (txtCompensatePct.Text.Trim = "") Then
                        txtCompensatePct.Text = 0
                    End If

                    If (txtAmtBalance.Text.Trim = "") Then
                        txtAmtBalance.Text = 0
                    End If

                    If (txtAmtCompleted.Text.Trim = "") Then
                        txtAmtCompleted.Text = 0
                    End If


                    If (txtConDetVal.Text.Trim = "") Then
                        txtConDetVal.Text = 0
                    End If


                    If String.IsNullOrEmpty(txtWarrantyBillingAmount.Text) = True Then
                        txtWarrantyBillingAmount.Text = "0.00"
                    End If

                    GstNo = txtGstNo.Text.Trim

                    'SASI - Industry Segment 28/04/2017


                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        txtRetentionPerc.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                        txtPortfolioValue.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtContractNo.Text.Trim) = True Then
                        lblAlert.Text = "CONTRACT NUMBER CANNOT BE BLANK"
                        'updPnlMsg.Update()
                        Exit Sub
                    End If



                    'SASI - End Industry Segment

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "Update tblContract set ContractNo = @ContractNo, ContractDate = @ContractDate, ContactType = @ContactType, CustCode = @CustCode,"
                    qry = qry + "OurReference = @OurReference, YourReference = @YourReference , Telephone = @Telephone, Fax = @Fax, Contact = @Contact, ContactPersonMobile = @ContactPersonMobile, AgreeValue = @AgreeValue, Duration = @Duration,"
                    qry = qry + "DurationMs = @DurationMs, StartDate =@StartDate, EndDate =@EndDate, ServiceStart =@ServiceStart, ServiceEnd =@ServiceEnd, "
                    qry = qry + "WarrantyStart = @WarrantyStart, WarrantyEnd = @WarrantyEnd, Notes = @Notes,  PrintBody =@PrintBody, Remarks =@Remarks,"
                    qry = qry + "QuotePrice = @QuotePrice, QuoteUnitMs =@QuoteUnitMs, Scheduler =@Scheduler, SalesMan =@SalesMan, Status =@Status, CustName =@CustName, CustAddr =@CustAddr, NotedST =@NotedST, "
                    qry = qry + "ProspectId = @ProspectId, GstNos =@GstNos, Postal =@Postal, LocateGrp =@LocateGrp, GST =@GST,  ContractGroup =@ContractGroup,"
                    qry = qry + "ContractValue = @ContractValue, PerServiceValue =@PerServiceValue, CompanyGroup =@CompanyGroup, Disc_Percent =@Disc_Percent, DiscAmt =@DiscAmt, ResponseHours =@ResponseHours, CancelCharges =@CancelCharges, BillingFrequency = @BillingFrequency,"
                    qry = qry + "MinDuration = @MinDuration, Settle = @Settle, ServiceNo =@ServiceNo, ServiceBal =@ServiceBal, ServiceAmt =@ServiceAmt, ServiceNoActual =@ServiceNoActual, HourNo =@HourNo, HourBal =@HourBal, HourAmt =@HourAmt, ActualEnd = @ActualEnd, HourNoActual =@HourNoActual, "
                    qry = qry + "CallNo = @CallNo, CallBal = @CallBal, CallAmt =@CallAmt, CallNoActual =@CallNoActual, UnitNo =@UnitNo, UnitBal =@UnitBal, UnitAmt =@UnitAmt, UnitNoActual =@UnitNoActual, "
                    qry = qry + "CompensatePct = @CompensatePct, CompensateMax = @CompensateMax, AmtCompleted = @AmtCompleted, AmtBalance = @AmtBalance,  ValuePerMonth = @ValuePerMonth, BillingAmount = @BillingAmount, "
                    qry = qry + "AccountID=@AccountID, Warranty=@Warranty, WarrantyDuration=@WarrantyDuration, RequireInspecton=@RequireInspecton, InspectionFrequency=@InspectionFrequency, InspectionStart=@InspectionStart, InspectionEnd=@InspectionEnd, ComputationMethod=@ComputationMethod,  "
                    'qry = qry + "TimeIn =@TimeIn, TimeOut =@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  "
                    qry = qry + "RetentionPerc =@RetentionPerc, RetentionValue = @RetentionValue, RetentionClaimDate = @RetentionClaimDate, "
                    qry = qry + "Industry = @Industry, BillAddress1 = @BillAddress1, BillTelephone = @BillTelephone, BillMobile = @BillMobile,  BillFax = @BillFax, BillContactPerson = @BillContactPerson,  PONo = @PoNo, ServiceAddress = @ServiceAddress, "
                    qry = qry + "ProjectCode = @ProjectCode, ProjectName = @ProjectName, TotalArea =@TotalArea, "
                    qry = qry + "BaitStationTotal =@BaitStationTotal, WarrantyBillingFrequency =@WarrantyBillingFrequency, WarrantyBillingAmount =@WarrantyBillingAmount,  "
                    qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn,ServiceTypeID = @ServiceTypeID,ServiceTypeDescription = @ServiceTypeDescription,"
                    qry = qry + "CategoryID = @CategoryID,PortfolioYN = @PortfolioYN,PortfolioValue = @PortfolioValue,MarketSegmentID = @MarketSegmentID,  AgreementTYpe = @AgreementType, location=@Location, AutoRenew = @AutoRenew, FixedContinuous=@FixedContinuous, EndofLastSchedule=@EndofLastSchedule, "
                    qry = qry + " ExcludeBatchPriceChange=@ExcludeFromBatchPriceChange, ContractCode = @ContractCode, ContractCodeDescription =@ContractCodeDescription  "
                    qry = qry + "  where rcno = " & Convert.ToInt32(txtRcno.Text)

                    'total 77 fields

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim.ToUpper)

                    If txtContractDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ContractDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ContractDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@ContactType", txtContType2.Text)
                    command.Parameters.AddWithValue("@CustCode", txtClient.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@OurReference", txtOurRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@YourReference", txtYourRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact", txtContactPerson.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ContactPersonMobile", txtConPerMobile.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@AgreeValue", txtAgreeVal.Text.Trim)
                    command.Parameters.AddWithValue("@Duration", txtDuration.Text.Trim)
                    command.Parameters.AddWithValue("@DurationMs", rbtLstDuration.SelectedValue.ToString)

                    If txtContractStart.Text = "" Then
                        command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    'If txtContractEnd.Text.Trim = "" Then
                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = True Or txtContractEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    'If txtServStart.Text.Trim = "" Then
                    If String.IsNullOrEmpty(txtServStart.Text.Trim) = True Or txtServStart.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@ServiceStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceStart", Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    'If txtServEnd.Text.Trim = "" Then
                    If String.IsNullOrEmpty(txtServEnd.Text.Trim) = True Or txtServEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@ServiceEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    'If txtWarrStart.Text.Trim = "" Then
                    '    command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
                    'Else
                    '    command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStart.Text).ToString("yyyy-MM-dd"))

                    'End If

                    'If txtWarrEnd.Text.Trim = "" Then
                    '    command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
                    'Else
                    '    command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEnd.Text).ToString("yyyy-MM-dd"))
                    'End If

                    If String.IsNullOrEmpty(txtWarrStart.Text.Trim) = True Or txtWarrStart.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If String.IsNullOrEmpty(txtWarrEnd.Text.Trim) = True Or txtWarrEnd.Text.Trim = "__/__/____" Then
                        command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEnd.Text).ToString("yyyy-MM-dd"))

                    End If
                    command.Parameters.AddWithValue("@Notes", txtContractNotes.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@OContractNo", txtRenewed.Text.Trim)
                    command.Parameters.AddWithValue("@PrintBody", txtPrintBody.Text.Trim)
                    command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@QuotePrice", txtQuotePrice.Text.Trim)
                    command.Parameters.AddWithValue("@QuoteUnitMs", txtQuoteUnit.Text.Trim)

                    If ddlScheduler.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@Scheduler", "")
                    Else
                        command.Parameters.AddWithValue("@Scheduler", ddlScheduler.Text.Trim)
                    End If


                    If ddlSalesman.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@SalesMan", "")
                    Else
                        command.Parameters.AddWithValue("@SalesMan", ddlSalesman.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@Status", txtStatus.Text.Trim)
                    command.Parameters.AddWithValue("@Status", Left(txtStatus.Text.Trim, 1))
                    command.Parameters.AddWithValue("@CustName", txtCustName.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text.Trim)
                    'command.Parameters.AddWithValue("@CustAddr", txtOfficeAddress.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@CustAddr", Left(txtBillingAddress.Text.Trim.ToUpper, 200))
                    command.Parameters.AddWithValue("@NotedST", txtNS.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ProspectId", txtProspectId.Text.Trim)
                    command.Parameters.AddWithValue("@GstNos", GstNo)
                    command.Parameters.AddWithValue("@Postal", txtPostal.Text.Trim)

                    If ddlLocateGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@LocateGrp", "")
                    Else
                        command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    End If

                    'command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@GST", txtGS.Text.Trim)

                    If ddlContractGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ContractGroup", "")
                    Else
                        command.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.SelectedValue.ToString)
                    End If


                    command.Parameters.AddWithValue("@ContractValue", Convert.ToDecimal(txtConDetVal.Text.Trim))
                    command.Parameters.AddWithValue("@PerServiceValue", txtPerServVal.Text.Trim)
                    command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Disc_Percent", txtDisPercent.Text.Trim)
                    command.Parameters.AddWithValue("@DiscAmt", txtDisAmt.Text.Trim)
                    command.Parameters.AddWithValue("@ResponseHours", txtResponse.Text.Trim)
                    command.Parameters.AddWithValue("@CancelCharges", txtCancelCharges.Text.Trim)

                    If ddlBillingFreq.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@BillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@BillingFrequency", ddlBillingFreq.SelectedValue.ToString)
                    End If

                    command.Parameters.AddWithValue("@MinDuration", txtMinDuration.Text.Trim)
                    'command.Parameters.AddWithValue("@Settle", rbtnLSettle.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Settle", "CB")
                    command.Parameters.AddWithValue("@ServiceNo", txtServiceNo.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceBal", txtServiceBal.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceAmt", txtServiceAmt.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceNoActual", txtServiceNoActual.Text)

                    command.Parameters.AddWithValue("@HourNo", txtHourNo.Text.Trim)
                    command.Parameters.AddWithValue("@HourBal", txtHourBal.Text.Trim)
                    command.Parameters.AddWithValue("@HourAmt", txtHourAmt.Text.Trim)
                    command.Parameters.AddWithValue("@HourNoActual", txtHourNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@CallNo", txtCallNo.Text.Trim)
                    command.Parameters.AddWithValue("@CallBal", txtCallBal.Text.Trim)
                    command.Parameters.AddWithValue("@CallAmt", txtCallAmt.Text.Trim)
                    command.Parameters.AddWithValue("@CallNoActual", txtCallNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNo", txtUnitNo.Text.Trim)
                    command.Parameters.AddWithValue("@UnitBal", txtUnitBal.Text.Trim)
                    command.Parameters.AddWithValue("@UnitAmt", txtUnitAmt.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNoActual", txtUnitNoActual.Text.Trim)

                    command.Parameters.AddWithValue("@CompensateMax", txtCompensateMax.Text.Trim)
                    command.Parameters.AddWithValue("@CompensatePct", txtCompensatePct.Text.Trim)

                    command.Parameters.AddWithValue("@AmtCompleted", txtAmtCompleted.Text.Trim)
                    'command.Parameters.AddWithValue("@AmtBalance", txtAmtBalance.Text.Trim)
                    command.Parameters.AddWithValue("@AmtBalance", txtServiceAmtBal.Text.Trim)

                    If String.IsNullOrEmpty(txtValPerMnth.Text) = True Then
                        command.Parameters.AddWithValue("@ValuePerMonth", 0.0)
                    Else
                        command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                    End If

                    If String.IsNullOrEmpty(txtBillingAmount.Text) = True Then
                        command.Parameters.AddWithValue("@BillingAmount", 0.0)
                    Else
                        command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                    'command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)

                    If txtActualEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim)

                    If ChkWithWarranty.Checked = True Then
                        command.Parameters.AddWithValue("@Warranty", "Y")
                    Else
                        command.Parameters.AddWithValue("@Warranty", "N")
                    End If

                    command.Parameters.AddWithValue("@WarrantyDuration", txtWarrDurtion.Text.Trim)

                    If ChkRequireInspection.Checked = True Then
                        command.Parameters.AddWithValue("@RequireInspecton", "Y")
                    Else
                        command.Parameters.AddWithValue("@RequireInspecton", "N")
                    End If



                    If ddlInspectionFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@InspectionFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
                    End If


                    If TxtInspectionStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If TxtInspectionEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

                    End If

                    If rbtComputationMethod.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
                    Else
                        command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
                    End If


                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionPerc", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionPerc", Convert.ToDecimal(txtRetentionPerc.Text))
                    End If

                    If String.IsNullOrEmpty(txtRetentionValue.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionValue", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionValue", Convert.ToDecimal(txtRetentionValue.Text))
                    End If

                    'command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
                    'command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
                    If txtRetentionReleaseDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
                    End If


                    command.Parameters.AddWithValue("@Industry", ddlIndustry.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillAddress1", Left(lAddress1.ToUpper.Trim, 100))
                    command.Parameters.AddWithValue("@BillTelephone", lTelephone)
                    command.Parameters.AddWithValue("@BillMobile", lMobile)
                    command.Parameters.AddWithValue("@BillFax", lFax.ToUpper)
                    ' command.Parameters.AddWithValue("@BillContactPerson", lContactPerson.ToUpper)
                    command.Parameters.AddWithValue("@BillContactPerson", "")

                    command.Parameters.AddWithValue("@PONo", txtPONo.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceAddress", txtServiceAddressCons.Text.ToUpper)


                    If ddlProjectCode.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ProjectCode", "")
                        command.Parameters.AddWithValue("@ProjectName", "")
                    Else
                        command.Parameters.AddWithValue("@ProjectCode", Left(ddlProjectCode.Text, 17).ToUpper)
                        command.Parameters.AddWithValue("@ProjectName", Mid(ddlProjectCode.Text, 21, 50).ToUpper)
                    End If


                    command.Parameters.AddWithValue("@BaitStationTotal", txtBaitStationTotal.Text)

                    'If String.IsNullOrEmpty(ddlWarrantyFrequency.Text) = True Then
                    If ddlWarrantyFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", ddlWarrantyFrequency.Text)
                    End If

                    command.Parameters.AddWithValue("@WarrantyBillingAmount", txtWarrantyBillingAmount.Text)
                    command.Parameters.AddWithValue("@AgreementType", ddlAgreementType.Text)

                    'command.Parameters.AddWithValue("@OfficeAddress", txtOfficeAddress.Text.Trim)

                    'command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
                    'command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                    'command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)
                    'command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
                    'command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim)
                    'command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim)
                    'command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim)
                    'command.Parameters.AddWithValue("@Comments", txtServInst.Text.Trim)

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    'SASI - Industry Segment 28/04/2017

                    If ddlServiceTypeID.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ServiceTypeID", "")
                        command.Parameters.AddWithValue("@ServiceTypedescription", "")
                    Else

                        '16.07.25
                        Dim hyphenpos As Integer
                        hyphenpos = 0
                        hyphenpos = (ddlServiceTypeID.Text.IndexOf("-"))

                        Dim strServiceTypeId, strServiceTypeDescription As String
                        strServiceTypeId = ""
                        strServiceTypeDescription = ""

                        strServiceTypeId = Left(ddlServiceTypeID.Text, (hyphenpos - 1)).Trim
                        strServiceTypeDescription = Right(ddlServiceTypeID.Text, Len(ddlServiceTypeID.Text) - (hyphenpos + 1)).Trim

                        command.Parameters.AddWithValue("@ServiceTypeID", strServiceTypeId.ToUpper.Trim)
                        command.Parameters.AddWithValue("@ServiceTypedescription", strServiceTypeDescription.ToUpper.Trim)

                        '16.07.25
                        'command.Parameters.AddWithValue("@ServiceTypeID", Left(ddlServiceTypeID.Text, 4).ToUpper)
                        'command.Parameters.AddWithValue("@ServiceTypedescription", Mid(ddlServiceTypeID.Text, 8, 65).ToUpper)
                    End If

                    'If ddlCategoryID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@CategoryID", "")
                    'Else
                    command.Parameters.AddWithValue("@CategoryID", txtCategoryID.Text.Trim)
                    'End If

                    If ddlPortfolioYN.SelectedItem.Text = "YES" Then
                        command.Parameters.AddWithValue("@PortfolioYN", 1)
                    Else
                        command.Parameters.AddWithValue("@PortfolioYN", 0)
                    End If

                    If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                        command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                    Else
                        command.Parameters.AddWithValue("@PortfolioValue", Convert.ToDecimal(txtPortfolioValue.Text))
                    End If


                    If String.IsNullOrEmpty(ddlMarketSegmentID.Text) = True Then
                        command.Parameters.AddWithValue("@MarketSegmentID", "")
                    Else
                        command.Parameters.AddWithValue("@MarketSegmentID", ddlMarketSegmentID.Text.Trim)
                    End If

                    If String.IsNullOrEmpty(txtTotalArea.Text) = True Then
                        command.Parameters.AddWithValue("@TotalArea", 0.0)
                    Else
                        command.Parameters.AddWithValue("@TotalArea", txtTotalArea.Text)
                    End If

                    If String.IsNullOrEmpty(txtLocation.Text) = True Then
                        command.Parameters.AddWithValue("@Location", "")
                    Else
                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    End If


                    If chkAutoRenew.Checked = True Then
                        command.Parameters.AddWithValue("@AutoRenew", "Y")
                    Else
                        command.Parameters.AddWithValue("@AutoRenew", "N")
                    End If

                    command.Parameters.AddWithValue("@FixedContinuous", rbtFixedContinuous.SelectedValue.ToString)

                    If txtEndofLastSchedule.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@EndofLastSchedule", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndofLastSchedule", Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@ExcludeFromBatchPriceChange", chkExcludeFromBatchPriceChange.Checked)

                    command.Parameters.AddWithValue("@ContractCode", lContractCode.Trim)
                    command.Parameters.AddWithValue("@ContractCodeDescription", Right(ddlContractCode.Text.Trim, Len(ddlContractCode.Text.Trim) - (Len(lContractCode.Trim) + 3)))


                    command.Connection = conn
                    command.ExecuteNonQuery()


                    If txtMode.Text = "EDIT" Then
                        RecalculateServiceFrequency()
                    End If


                    If txtOriginalAccountId.Text <> txtAccountId.Text Then
                        Dim command2 As MySqlCommand = New MySqlCommand
                        command2.CommandType = CommandType.Text

                        Dim qry2 As String = "DELETE from tblContractDet where ContractNo= @ContractNo "

                        command2.CommandText = qry2
                        command2.Parameters.Clear()

                        command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command2.Connection = conn
                        command2.ExecuteNonQuery()
                        command2.Dispose()


                        Dim command3 As MySqlCommand = New MySqlCommand
                        command3.CommandType = CommandType.Text

                        Dim qry3 As String = "DELETE from tblContractServingTarget where ContractNo= @ContractNo "

                        command3.CommandText = qry3
                        command3.Parameters.Clear()

                        command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command3.Connection = conn
                        command3.ExecuteNonQuery()
                        command3.Dispose()

                        Dim command4 As MySqlCommand = New MySqlCommand
                        command4.CommandType = CommandType.Text

                        Dim qry4 As String = "DELETE from tblServiceContractFrequency where ContractNo= @ContractNo "

                        command4.CommandText = qry4
                        command4.Parameters.Clear()

                        command4.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command4.Connection = conn
                        command4.ExecuteNonQuery()
                        command4.Dispose()
                    End If



                    If txtGS.Text = "O" Then
                        UpdateAgreeValue("New")
                    End If


                    'Dim message As String = "alert('Contract is deleted Successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    'lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                    'btnADD_Click(sender, e)
                    'GridView1.DataBind()

                    'End:  Delete Detail Records if different AccountId 


                    ''Start: Generate Credit Note

                    'If chkGenerateCreditNote.Checked = True Then
                    '    GenerateCNNo()


                    '    ''''''''''''''''''''''''''
                    '    Dim sqlCN As String
                    '    sqlCN = ""
                    '    sqlCN = "Select ProductCode, Description, COACode, COADescription from tblbillingproducts where ProductCode = 'IN-ODT'"

                    '    Dim command10 As MySqlCommand = New MySqlCommand
                    '    command10.CommandType = CommandType.Text
                    '    command10.CommandText = sqlCN
                    '    command10.Connection = conn

                    '    Dim dr10 As MySqlDataReader = command10.ExecuteReader()

                    '    Dim dt10 As New DataTable
                    '    dt10.Load(dr10)
                    '    Dim ARDescription10 As String
                    '    Dim ARCode10 As String
                    '    Dim ProductCode As String

                    '    ARDescription10 = ""
                    '    ARCode10 = ""
                    '    ProductCode = ""

                    '    If dt10.Rows.Count > 0 Then
                    '        If dt10.Rows(0)("Description").ToString <> "" Then : ARDescription10 = dt10.Rows(0)("Description").ToString : End If
                    '        If dt10.Rows(0)("COACode").ToString <> "" Then : ARCode10 = dt10.Rows(0)("COACode").ToString : End If
                    '        If dt10.Rows(0)("ProductCode").ToString <> "" Then : ProductCode = dt10.Rows(0)("ProductCode").ToString : End If
                    '    End If

                    '    ''''''''''''''''''''''''''

                    '    qry = "INSERT INTO tblcn(CNNumber, CustomerName, AccountId,   "
                    '    qry = qry + "  CNDate, Cheque, ChequeDate, BankId, LedgerCode, LedgerName,  PaymentType, ContractNo, ItemCode, ItemDescription,  "
                    '    qry = qry + " BaseAmount, GSTAmount,  NetAmount, BankAmount, Comments, ContactType, CompanyGroup, GLPeriod, ModuleType, Salesman, "
                    '    qry = qry + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    '    qry = qry + " (@CNNumber, @CustomerName, @AccountId,  "
                    '    qry = qry + " @CNDate, @Cheque, @ChequeDate, @BankId, @LedgerCode, @LedgerName,  @PaymentType, @ContractNo, @ItemCode, @ItemDescription, "
                    '    qry = qry + " @BaseAmount, @GSTAmount,  @NetAmount, @BankAmount, @Comments, @ContactType, @CompanyGroup, @GLPeriod, @ModuleType, @Salesman, "
                    '    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"


                    '    Dim commandCN As MySqlCommand = New MySqlCommand

                    '    commandCN.CommandType = CommandType.Text
                    '    commandCN.CommandText = qry
                    '    commandCN.Parameters.Clear()

                    '    commandCN.Parameters.AddWithValue("@CNNumber", txtCNNo.Text)
                    '    commandCN.Parameters.AddWithValue("@CustomerName", txtCustName.Text)
                    '    commandCN.Parameters.AddWithValue("@AccountId", txtAccountId.Text)

                    '    If String.IsNullOrEmpty(txtContractDate.Text.Trim) = True Then
                    '        commandCN.Parameters.AddWithValue("@CNDate", DBNull.Value)
                    '    Else
                    '        commandCN.Parameters.AddWithValue("@CNDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    '    End If

                    '    'command.Parameters.AddWithValue("@ReceiptDate", Convert.ToDateTime(txtReceiptDate.Text))
                    '    'command.Parameters.AddWithValue("@BillAmount", 0.0)
                    '    commandCN.Parameters.AddWithValue("@ItemCode", ProductCode)
                    '    commandCN.Parameters.AddWithValue("@ItemDescription", ARDescription10)
                    '    commandCN.Parameters.AddWithValue("@Comments", "")
                    '    commandCN.Parameters.AddWithValue("@Cheque", "")
                    '    commandCN.Parameters.AddWithValue("@PaymentType", "")
                    '    commandCN.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)

                    '    'If String.IsNullOrEmpty(txtChequeDate.Text.Trim) = True Then
                    '    commandCN.Parameters.AddWithValue("@ChequeDate", DBNull.Value)
                    '    'Else
                    '    '    command.Parameters.AddWithValue("@ChequeDate", Convert.ToDateTime(txtChequeDate.Text).ToString("yyyy-MM-dd"))
                    '    'End If


                    '    commandCN.Parameters.AddWithValue("@BaseAmount", 0.0)
                    '    commandCN.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    'command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    commandCN.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtRetentionValue.Text))
                    '    commandCN.Parameters.AddWithValue("@BankAmount", 0.0)

                    '    commandCN.Parameters.AddWithValue("@BankId", "")
                    '    commandCN.Parameters.AddWithValue("@LedgerCode", "")
                    '    commandCN.Parameters.AddWithValue("@LedgerName", "")
                    '    commandCN.Parameters.AddWithValue("@ModuleType", "CNPB")

                    '    If ddlSalesman.Text = "-1" Then
                    '        command.Parameters.AddWithValue("@Salesman", "")
                    '    Else
                    '        command.Parameters.AddWithValue("@Salesman", ddlSalesman.Text)
                    '    End If

                    '    commandCN.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                    '    commandCN.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                    '    commandCN.Parameters.AddWithValue("@GLPeriod", txtCNPeriod.Text)


                    '    commandCN.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    '    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '    'commandCN.Parameters.AddWithValue("@CreatedOn", Now)
                    '    commandCN.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    '    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '    'commandCN.Parameters.AddWithValue("@LastModifiedOn", Now)

                    '    commandCN.Connection = conn
                    '    commandCN.ExecuteNonQuery()

                    '    Dim sqlLastId As String
                    '    sqlLastId = "SELECT last_insert_id() from tblCN"

                    '    Dim commandRcno As MySqlCommand = New MySqlCommand
                    '    commandRcno.CommandType = CommandType.Text
                    '    commandRcno.CommandText = sqlLastId
                    '    commandRcno.Parameters.Clear()
                    '    commandRcno.Connection = conn
                    '    txtRcnoCN.Text = commandRcno.ExecuteScalar()
                    'End If

                    ''End: Generate Credit Note

                    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                DisableControls()

                '19.06.22
                'txtMode.Text = ""
                '19.06.22
                command1.Dispose()

            End If


                'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then

                '    If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                '        txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                '    End If

                '    SQLDSContract.SelectCommand = txt.Text
                '    GridView1.DataSourceID = "SqlDSContract"
                '    GridView1.DataBind()
                '    GridView1.SelectedIndex = 0
                '    'GridView1.DataSourceID = "SQLDSContract"
                'Else
                '    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                '        GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                '        GridSelected = "SQLDSContractClientIdLocation"
                '    ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '        GridView1.DataSourceID = "SQLDSContractClientId"
                '        GridSelected = "SQLDSContractClientId"
                '    ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '        txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                '        SQLDSContract.SelectCommand = txt.Text
                '        GridView1.DataSourceID = "SqlDSContract"
                '        GridView1.DataBind()
                '        GridView1.SelectedIndex = 0
                '    End If

                'End If


                'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then

                'If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                '    txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                'End If

                'SQLDSContract.SelectCommand = txt.Text
                'GridView1.DataSourceID = "SqlDSContract"
                'GridView1.DataBind()
                'GridView1.SelectedIndex = 0
                ''GridView1.DataSourceID = "SQLDSContract"
                'Else

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                    Dim ContractClientIdLocation As String = ""

                    ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId, tblContract.Location,  "
                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous  from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                    ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                    ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                    GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                    GridSelected = "SQLDSContractClientIdLocation"
                ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    Dim ContractClientId As String = ""

                    ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientId.SelectCommand = ContractClientId

                    GridView1.DataSourceID = "SQLDSContractClientId"
                    GridSelected = "SQLDSContractClientId"
                ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    'txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text

                'If txtDisplayRecordsLocationwise.Text = "N" Then
                txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId,"
                'txt.Text = txt.Text & "  A.InchargeId,"
                txt.Text = txt.Text & " A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.Scheduler, "
                txt.Text = txt.Text & " A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, "
                txt.Text = txt.Text & " A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                txt.Text = txt.Text & " From tblContract A where A.ContractNo = '" & txtContractNo.Text & "'"
                'End If


                'If txtDisplayRecordsLocationwise.Text = "Y" Then
                '    txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId,"
                '    'txt.Text = txt.Text & "  A.InchargeId,"
                '    txt.Text = txt.Text & " A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.Scheduler, "
                '    txt.Text = txt.Text & " A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, "
                '    txt.Text = txt.Text & " A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno  "
                '    'txt.Text = txt.Text & " From tblContract A where A.ContractNo = '" & txtContractNo.Text & "'"
                '    txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
                '    txt.Text = txt.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                'End If

                'txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, "
                '    txt.Text = txt.Text & " AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, "
                '    txt.Text = txt.Text & " ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, "
                'txt.Text = txt.Text & " OContractNo, Renewaldate, TeamId, AmtBalance, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  "
                '    txt.Text = txt.Text & " From tblContract where ContractNo = '" & txtContractNo.Text & "'"

                'If txtDisplayRecordsLocationwise.Text = "Y" Then
                '    txt.Text = txt.Text & " and Location = '" & txtLocation.Text & "'"
                'End If
                txt.Text = txt.Text & " order by A.rcno desc, A.CustName limit " & txtLimit.Text


                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()
                GridView1.SelectedIndex = 0
            End If

            'End If
            GridView1.DataBind()

            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()

            lblContractNo.Text = txtContractNo.Text
            'lblAccountID.Text = txtClient.Text
            lblAccountID.Text = txtAccountId.Text
            txtAccountIdSelection.Text = lblAccountID.Text
            lblName.Text = txtCustName.Text


            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            If txtGS.Text = "O" Then
                btnServiceSchedule.Enabled = True
                btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            End If

           



            'If txtMode.Text = "NEW" And txtModeRenew.Text = "" Then
            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            '    txtMode.Text = ""
            'ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "R" Then
            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcno.Text)
            '    txtMode.Text = ""
            'ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "REV" Then
            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text, txtRcno.Text)
            '    txtMode.Text = ""
            'Else
            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'End If

            If txtMode.Text = "NEW" And txtModeRenew.Text = "" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                '19.06.22
                'txtMode.Text = ""
                '19.06.22
            ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "R" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcno.Text)
                '19.06.22
                'txtMode.Text = ""
                '19.06.22
            ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "REV" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text, txtRcno.Text)
                '19.06.22
                'txtMode.Text = ""
                '19.06.22
            Else
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDIT", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            End If

            btnSave.Text = "SAVE"

            'InsertNewLog()

            '26.05.22

            'txtModeRenew.Text = ""

            '26.05.22
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SaveContract", ex.Message.ToString, txtContractNo.Text)
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            btnSave.Text = "Save"
            Exit Sub
        End Try
    End Sub


    'Private Sub InsertNewLog()

    '    Try

    '        ' Start: Insert NEW Log table

    '        ''
    '        Dim conn As MySqlConnection = New MySqlConnection()
    '        Dim command As MySqlCommand = New MySqlCommand

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()

    '        command.CommandType = CommandType.Text
    '        command.CommandText = "SELECT EnableLogforContract FROM tblservicerecordmastersetup where rcno=1"
    '        command.Connection = conn

    '        Dim dr As MySqlDataReader = command.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            'If Convert.ToBoolean(dt.Rows(0)("EnableLogforContract")) = False Then
    '            If dt.Rows(0)("EnableLogforContract").ToString = "1" Then

    '                Dim connLog As MySqlConnection = New MySqlConnection()

    '                connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
    '                If connLog.State = ConnectionState.Open Then
    '                    connLog.Close()
    '                    connLog.Dispose()
    '                End If
    '                connLog.Open()

    '                Dim commandInsertLog As MySqlCommand = New MySqlCommand
    '                commandInsertLog.CommandType = CommandType.StoredProcedure
    '                commandInsertLog.CommandText = "InsertLog_sitadatadb"

    '                commandInsertLog.Parameters.Clear()

    '                commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Contract")
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtContractNo.Text.Trim)

    '                commandInsertLog.Connection = connLog
    '                commandInsertLog.ExecuteScalar()

    '                connLog.Close()
    '                commandInsertLog.Dispose()

    '                ''''

    '            End If
    '            'End If

    '        End If
    '        conn.Close()
    '        conn.Dispose()
    '        command.Dispose()
    '        dt.Dispose()
    '        dr.Close()
    '        ' End: Insert NEW Log table
    '    Catch ex As Exception
    '        lblAlert.Text = ex.Message.ToString
    '        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtContractNo.Text)
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Private Sub InsertNewLogDetail()

    '    Try

    '        ' Start: Insert NEW Log table

    '        ''
    '        Dim conn As MySqlConnection = New MySqlConnection()
    '        Dim command As MySqlCommand = New MySqlCommand

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()

    '        command.CommandType = CommandType.Text
    '        command.CommandText = "SELECT EnableLogforContract FROM tblservicerecordmastersetup where rcno=1"
    '        command.Connection = conn

    '        Dim dr As MySqlDataReader = command.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            'If Convert.ToBoolean(dt.Rows(0)("EnableLogforContract")) = False Then
    '            If dt.Rows(0)("EnableLogforContract").ToString = "1" Then

    '                Dim connLog As MySqlConnection = New MySqlConnection()

    '                connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
    '                If connLog.State = ConnectionState.Open Then
    '                    connLog.Close()
    '                    connLog.Dispose()
    '                End If
    '                connLog.Open()

    '                Dim commandInsertLog As MySqlCommand = New MySqlCommand
    '                commandInsertLog.CommandType = CommandType.StoredProcedure
    '                commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

    '                commandInsertLog.Parameters.Clear()

    '                commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Contract")
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtContractNo.Text.Trim)
    '                commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", txtRcnoDetailLog.Text)

    '                commandInsertLog.Connection = connLog
    '                commandInsertLog.ExecuteScalar()

    '                connLog.Close()
    '                commandInsertLog.Dispose()

    '                ''''

    '            End If
    '            'End If

    '        End If
    '        conn.Close()
    '        conn.Dispose()
    '        command.Dispose()
    '        dt.Dispose()
    '        dr.Close()
    '        ' End: Insert NEW Log table
    '    Catch ex As Exception
    '        lblAlert.Text = ex.Message.ToString
    '        InsertIntoTblWebEventLog("COMPANY - " + Session("UserID"), "FUNCTION InsertLogDetail", ex.Message.ToString, txtAccountId.Text)
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    Private Sub UpdateSignedAgreementReference(PrevContract As String, Rcno As Long)
        Dim lPrevContractNo = ""
        Dim lNewRcno = 0

        lPrevContractNo = PrevContract
        lNewRcno = Rcno


        Dim connSignedAgreementReference As MySqlConnection = New MySqlConnection()

        connSignedAgreementReference.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connSignedAgreementReference.Open()

        Dim commandSignedAgreementReference As MySqlCommand = New MySqlCommand

        commandSignedAgreementReference.CommandType = CommandType.Text
        commandSignedAgreementReference.CommandText = "SELECT SignedServiceAgreement FROM tblContract where ContractNo ='" & PrevContract & "' and SignedServiceAgreement =True"
        commandSignedAgreementReference.Connection = connSignedAgreementReference

        Dim dr As MySqlDataReader = commandSignedAgreementReference.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            'txtLocation.Text = dt.Rows(0)("LocationID").ToString

            '''''''''''''

            Dim commandSignedAgreementReferenceUpdate As MySqlCommand = New MySqlCommand
            commandSignedAgreementReferenceUpdate.CommandType = CommandType.Text

            Dim qrySignedAgreementReference As String = "Update tblContract set  SignedServiceAgreement = True, SignedAgreementReference = @PrevContractNo where rcno = @lNewRcno  "

            commandSignedAgreementReferenceUpdate.CommandText = qrySignedAgreementReference
            commandSignedAgreementReferenceUpdate.Parameters.Clear()

            commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@lNewRcno", lNewRcno)
            'commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@RenewalDate", Convert.ToDateTime(txtCreatedOn.Text))
            commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@PrevContractNo", lPrevContractNo.Trim)
            commandSignedAgreementReferenceUpdate.Connection = connSignedAgreementReference
            commandSignedAgreementReferenceUpdate.ExecuteNonQuery()

            commandSignedAgreementReferenceUpdate.Dispose()

            txtSignedAgreementReference.Text = "Signed Service Agreement Refer To  " & lPrevContractNo.Trim
            ''''''''''''''''

        End If

        connSignedAgreementReference.Close()
        connSignedAgreementReference.Dispose()
        commandSignedAgreementReference.Dispose()
        dr.Close()
        dt.Dispose()
    End Sub

    Private Sub GenerateCNNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtContractDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")
            lInvoiceNo = "ARCN" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "ARCN" + lYear
            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                If lMonth = "01" Then
                    lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "02" Then
                    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "03" Then
                    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "04" Then
                    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "05" Then
                    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "06" Then
                    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "07" Then
                    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "08" Then
                    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "09" Then
                    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "10" Then
                    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "11" Then
                    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "12" Then
                    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)
            Else

                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If

                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                            "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1


            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtCNNo.Text = lInvoiceNo + lSuffix

            txtCNPeriod.Text = Year(Convert.ToDateTime(txtContractDate.Text)) & Format(Month(Convert.ToDateTime(txtContractDate.Text)), "00")

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION GenerateCNNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnServiceRecords_Click(sender As Object, e As EventArgs) Handles btnServiceRecords.Click

        '''''''''''''''''''''''''''''''

        lblAlert.Text = ""
        Try


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "SELECT ServiceStart , ServiceEnd , CreatedOn FROM tbwserviceschedulegenerate where ContractNo ='" & txtContractNo.Text & "' and Generated = True and IsError = False  order by rcno desc limit 1"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'Dim command1 As MySqlCommand = New MySqlCommand

                'command1.CommandType = CommandType.Text
                'command1.CommandText = "SELECT max(ServiceDate) as LastService, min(ServiceDate) as FirstService, count(RecordNo) as TotalService FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("yyyy-MM-dd") & "'"
                'command1.Connection = conn


                'Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                'Dim dt1 As New DataTable
                'dt1.Load(dr1)

                'If dt1.Rows.Count > 0 Then
                txtDisplayLatestServiceRecordsFrom.Text = Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy")
                txtDisplayLatestServiceRecordsTo.Text = Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy")
                'chkLatestSchedule.Text = "Latest List of Schedule (" & Convert.ToDateTime(dt1.Rows(0)("FirstService")).ToString("dd/MM/yyyy") & " to " & Convert.ToDateTime(dt1.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt1.Rows(0)("TotalService") & " Records)"
                'End If

            End If


            conn.Close()
            conn.Dispose()

            mdlDisplayServiceRecords.Show()


            'Session.Remove("accountid")
            'Session.Remove("lblaccountid")
            'Session("servicefrom") = "contract"


            'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
            '    Session("lblaccountid") = lblAccountIdContact1.Text
            'End If

            'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            '    Session("contractno") = txtContractNo.Text
            '    'txt.Text = SQLDSContract.SelectCommand
            '    Session("gridsqlcontract") = txt.Text
            '    Session("rcno") = txtRcno.Text
            '    Session("accountid") = txtAccountId.Text
            '    Session("CustName") = txtCustName.Text
            '    Session("ContactType") = ddlContactType.Text
            '    Session("CompanyGroup") = ddlCompanyGrp.Text

            '    Session("Scheduler") = ddlScheduler.Text
            '    Session("Team") = txtTeam.Text
            '    Session("InCharge") = txtTeamIncharge.Text
            '    Session("ServiceBy") = txtServiceBy.Text
            '    Session("Supervisor") = txtSupervisor.Text

            '    Session("ScheduleType") = ddlScheduleType.Text
            '    Session("ContractStartDate") = txtContractStart.Text
            '    Session("ContractEndDate") = txtContractEnd.Text
            '    Session("ActualEnd") = txtActualEnd.Text


            '    ''
            '    Session("billaddress1") = txtbilladdress1session.Text
            '    Session("billstreet") = txtbillstreetsession.Text
            '    Session("billbuilding") = txtbillbuildingsession.Text
            '    Session("billcountry") = txtbillcountrysession.Text
            '    Session("billpostal") = txtbillpostalsession.Text

            '    Session("industry") = txtIndustrySession.Text
            '    Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
            '    Session("contractgroup") = txtContractGroupSession.Text
            '    Session("companygroup") = txtCompanyGroupSession.Text
            '    Session("salesman") = txtSalesmanSession.Text

            '    'txtCustName.Text = Session("custname")
            '    'txtContactPerson.Text = Session("contactperson")
            '    Session("conpermobile") = txtConPerMobile.Text
            '    Session("acctcode") = txtAccCode.Text
            '    Session("telephone") = txtTelephone.Text
            '    Session("fax") = txtFax.Text
            '    Session("offpostal") = txtPostal.Text
            '    Session("sevaddress") = txtOfficeAddress.Text
            '    Session("locategrp") = ddlLocateGrp.Text
            '    Session("salesman") = ddlSalesman.Text

            '    Session("contracttype") = ddlContactType.Text
            '    Session("inactive") = chkInactive.Checked
            '    ''

            '    InsertIntoTblWebEventLog(txtCreatedBy.Text, "Contract", Session("ContractStartDate").ToString, Session("ContractEndDate"))
            '    '''''''''''''''''''''''''''''
            'End If

            'Response.Redirect("Service.aspx", False)



            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

            'If rbtFixedContinuous.SelectedIndex = 0 Then
            '    Response.Redirect("Service.aspx", False)
            'Else

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn.Open()

            '    Dim command As MySqlCommand = New MySqlCommand

            '    Command.CommandType = CommandType.Text

            '    command.CommandText = "SELECT ServiceStart , ServiceEnd , CreatedOn FROM tbwserviceschedulegenerate where ContractNo ='" & txtContractNo.Text & "' and IsError = False  order by rcno desc limit 1"
            '    command.Connection = conn

            '    Dim dr As MySqlDataReader = command.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then

            '        Dim command1 As MySqlCommand = New MySqlCommand

            '        command1.CommandType = CommandType.Text
            '        command1.CommandText = "SELECT max(ServiceDate) as LastService, min(ServiceDate) as FirstService, count(RecordNo) as TotalService FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("yyyy-MM-dd") & "'"
            '        command1.Connection = conn


            '        Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            '        Dim dt1 As New DataTable
            '        dt1.Load(dr1)

            '        If dt1.Rows.Count > 0 Then
            '            chkLatestSchedule.Text = "Latest List of Schedule (" & Convert.ToDateTime(dt1.Rows(0)("FirstService")).ToString("dd/MM/yyyy") & " to " & Convert.ToDateTime(dt1.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt1.Rows(0)("TotalService") & " Records)"
            '        End If
            '    Else

            '        '13.01.22


            '        Dim command2 As MySqlCommand = New MySqlCommand

            '        command2.CommandType = CommandType.Text

            '        command2.CommandText = "SELECT max(ServiceDate) as LastService, min(ServiceDate) as FirstService, count(RecordNo) as TotalService FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") & "'"
            '        command2.Connection = conn


            '        Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            '        Dim dt2 As New DataTable
            '        dt2.Load(dr2)

            '        If dt2.Rows.Count > 0 Then

            '            chkLatestSchedule.Text = "Latest List of Schedule (" & Convert.ToDateTime(dt2.Rows(0)("FirstService")).ToString("dd/MM/yyyy") & " to " & Convert.ToDateTime(dt2.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt2.Rows(0)("TotalService") & " Records)"
            '        End If


            '        '13.02.22


            '    End If



            '    conn.Close()
            '    conn.Dispose()

            '    mdlSelectionofDisplayServiceRecords.Show()

            'End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnServiceRecords_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnContractRenewal_Click(sender As Object, e As EventArgs) Handles btnContractRenewal.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If txtRcno.Text = "" Then
                lblAlert.Text = "SELECT RECORD TO RENEW"
                Return

            End If
            'DisableControls()
            'txtMode.Text = "EDIT"
            'lblMessage.Text = "ACTION: RENEW RECORD"

            'txtMode.Text = "EDIT"
            'EnableControls()
            ''btnDelete.Enabled = True
            ''btnDelete.ForeColor = System.Drawing.Color.Black
            'btnQuit.Enabled = True
            'btnQuit.ForeColor = System.Drawing.Color.Black


            'If Not (txtStatus.Text = "O" Or txtStatus.Text = "P" Or txtStatus.Text = "E" Or txtStatus.Text = "T" Or txtStatus.Text = "C") Then
            If Not (Left(txtStatus.Text, 1) = "O" Or Left(txtStatus.Text, 1) = "P" Or Left(txtStatus.Text, 1) = "E" Or Left(txtStatus.Text, 1) = "T" Or Left(txtStatus.Text, 1) = "C") Then

                'Dim message As String = "alert('Contract Status should be [O/C/E/P/T]!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN / C-COMPLETED / E-EARLY COMPLETED / P-POSTED / T-TERMINATED]"
                Exit Sub
            End If

            If txtRs.Text <> "O" Then
                'Dim message As String = "alert('Contract Renewal Status should be [O-Open]!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                lblAlert.Text = "CONTRACT RENEWAL STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If


            '''''''''''''''''''
            lblMessage.Text = "ACTION: RENEW RECORD"

            txtMode.Text = "EDIT"
            EnableControls()
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black
            btnQuit.Enabled = True
            btnQuit.ForeColor = System.Drawing.Color.Black

            btnADD.Enabled = False
            btnCopy.Enabled = False
            btnRevision.Enabled = False
            btnSearch.Enabled = False
            btnReset.Enabled = False
            btnPrint.Enabled = False
            btnContractRenewal.Enabled = False
            btnServiceRecords.Enabled = False
            btnTransactions.Enabled = False
            btnEdit.Enabled = False
            btnChangeStatus.Enabled = False
            btnPrint.Enabled = False
            'btnHistory.Enabled = False
            btnRecalculate.Visible = False

            btnADD.ForeColor = System.Drawing.Color.Gray
            btnCopy.ForeColor = System.Drawing.Color.Gray
            btnRevision.ForeColor = System.Drawing.Color.Gray
            btnSearch.ForeColor = System.Drawing.Color.Gray
            btnReset.ForeColor = System.Drawing.Color.Gray
            btnPrint.ForeColor = System.Drawing.Color.Gray
            btnContractRenewal.ForeColor = System.Drawing.Color.Gray
            btnServiceRecords.ForeColor = System.Drawing.Color.Gray
            btnTransactions.ForeColor = System.Drawing.Color.Gray
            btnEdit.ForeColor = System.Drawing.Color.Gray
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray
            btnPrint.ForeColor = System.Drawing.Color.Gray
            'btnHistory.ForeColor = System.Drawing.Color.Gray

            updPanelContract1.Update()
            '''''''''''''''''''''

            txtModeRenew.Text = "R"
            txtOContract.Text = txtContractNo.Text
            'txtRenewed.Text = txtContractNo.Text
            txtRcnoRenew.Text = txtRcno.Text
            txtAgreeValueOriginalForReviseandRenewal.Text = txtAgreeVal.Text
            txtActualEndChStForReNew.Text = txtContractEnd.Text

            'ddlContractCode.Items.Clear()

            ddlContractCode.Text = txtRenewalNewContract.Text

            txtMode.Text = "NEW"

            ddlAgreementType.Items.Clear()
            ddlAgreementType.Items.Add("--SELECT--")
            ddlAgreementType.Items.Add("RENEWAL")
            ddlAgreementType.Items.Add("EXTENSION")
            ddlAgreementType.SelectedIndex = 0
            'ddlAgreementType.Attributes.Add("disabled", "true")

            txtContractNo.Text = ""
            'txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
            txtConDetVal.Text = "0.00"
            txtAgreeVal.Text = "0.00"
            txtSignedAgreementReference.Text = "Signed Service Agreement"

            FindDuration()

            If Convert.ToDateTime(txtContractEnd.Text) < Now.Date.ToString("dd/MM/yyyy") Then
                txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")
                txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
                txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
                txtContractDate.Text = txtContractStart.Text
            Else
                txtContractStart.Text = Convert.ToDateTime(txtContractEnd.Text).AddDays(1)
                txtServStart.Text = txtContractStart.Text
                txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
                txtContractDate.Text = txtContractStart.Text
            End If


            If rbtLstDuration.SelectedIndex = 0 Then
                txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text)
            ElseIf rbtLstDuration.SelectedIndex = 1 Then
                txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text * 7)
            ElseIf rbtLstDuration.SelectedIndex = 2 Then
                txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddMonths(txtDuration.Text)
            ElseIf rbtLstDuration.SelectedIndex = 3 Then
                txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddYears(txtDuration.Text)
            End If

            txtContractEnd.Text = Convert.ToDateTime(txtContractEnd.Text).AddDays(-1)
            txtServEnd.Text = txtContractEnd.Text
            TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString().ToUpper

            'txtContractEnd.Text = ""

            'txtServEnd.Text = ""
            'txtServEndDay.Text = ""
            'TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = "0"
            ''txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")
            'txtWarrEnd.Text = ""
            txtValPerMnth.Text = ""
            'txtContractNotes.Text = ""
            'txtServInst.Text = ""
            'txtStatus.Text = "O"
            txtStatus.Text = "O - Open"
            txtRs.Text = "O"
            txtNS.Text = "O"
            txtProspectId.Text = ""
            txtGS.Text = "O"
            'txtRemarks.Text = ""
            txtPrintBody.Text = ""


            txtPortfolioValue.Text = "0.00"

            txtServiceNo.Text = "0.00"
            txtServiceAmt.Text = "0.00"
            txtServiceNoActual.Text = "0.00"
            txtServiceBal.Text = "0.00"
            txtServiceAmtActual.Text = "0.00"
            txtTotalArea.Text = "0.00"
            txtCompletedArea.Text = "0.00"
            txtBalanceArea.Text = "0.00"
            txtServiceAmtBal.Text = "0.00"

            txtBillingAmount.Text = "0.00"
            txtRetentionPerc.Text = "0"
            txtRetentionValue.Text = "0.00"

            txtWarrantyBillingAmount.Text = "0.00"
            txtBaitStationTotal.Text = "0.00"
            txtBaitStationInstalled.Text = "0.00"
            txtBaitStationBalance.Text = "0.00"

            txtLastBillDate.Text = ""

            txtActualServiceStart.Text = ""
            txtActualEnd.Text = ""
            txtTerminationDescription.Text = ""
            txtTerminationCode.Text = ""
            txtLastServiceDate.Text = ""



            lblFileUploadCount.Text = "File Upload"
            lblServiceDetailsCount.Text = "Service Details"
            lblNotesCount.Text = "Notes"
            lblItemsIssuedCount.Text = "Items Issued"
            lblRatescheduleCount.Text = "Schedule of Rate"

            ddlScheduler.Text = Session("StaffID")

            'FindIsActiveContract()

            btnClient0.Visible = False
            'btnClient1.Visible = False
            btnMultiplePO.Visible = False '25.10.21
            btnClient2.Visible = False
            btnClient3.Visible = False
            btnClient4.Visible = False
            btnClient5.Visible = False
            btnClient6.Visible = False
            btnClient7.Visible = False
            btnClient8.Visible = False
            btnClient9.Visible = False
            btnClient10.Visible = False

            btnAutoRenew.Visible = False
            btnHistory.Visible = False
            btnExtendContractEndDate.Visible = False

            btnClient11.Visible = False
            btnClient12.Visible = False

            ddlAgreementType.Enabled = True
            btnSave.Text = "NEXT STEP"
            tb1.ActiveTabIndex = 0

            'If String.IsNullOrEmpty(txtNoofMonth.Text) = True Then
            '    Dim NoofMonth As Integer

            '    If rbtLstDuration.SelectedIndex = 3 Then
            '        NoofMonth = txtDuration.Text * 12
            '    ElseIf rbtLstDuration.SelectedIndex = 2 Then
            '        NoofMonth = txtDuration.Text
            '    ElseIf rbtLstDuration.SelectedIndex = 1 Then
            '        NoofMonth = (txtDuration.Text * 7) / 30
            '    ElseIf rbtLstDuration.SelectedIndex = 0 Then
            '        NoofMonth = txtDuration.Text / 30

            '    Else
            '        NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
            '    End If
            '    txtNoofMonth.Text = Convert.ToInt32(NoofMonth)

            'End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnContractRenewal_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnServiceSchedule_Click(sender As Object, e As EventArgs) Handles btnServiceSchedule.Click

        lblAlert.Text = ""
        Try
            'start

            lblAlert.Text = ""
            lblMessage.Text = ""
            lblWarningAlert.Text = ""
            UpdatePanel1.Update()

            lblRandom.Text = Random.Next(100000, 900000)


            ''''

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = "SELECT count(TargetID) as TotTarget FROM tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "'"

            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
          

            If (dt.Rows(0)("TotTarget") = 0) Then
                lblAlert.Text = "PLEASE ENTER TARGET DETAILS"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                conn.Close()
                conn.Dispose()
                command.Dispose()
                Exit Sub
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            ''''''
           

            'updPanelMassChange1.Update()
            'lblLine4EditAgreeValueSave.Text = txtRandom.Text
            If btnServiceSchedule.Text = "REGENERATE" Then
                mdlWarning.Show()
            Else
                ScheduleContract()
            End If

            'end


            'Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            'conn.Open()

            'Dim cmdContractDet As MySqlCommand = New MySqlCommand

            'cmdContractDet.CommandType = CommandType.Text

            'cmdContractDet.CommandText = "SELECT rcno, OrigCode, Frequency FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
            'cmdContractDet.Connection = conn

            'Dim drservicecontractDet As MySqlDataReader = cmdContractDet.ExecuteReader()
            'Dim dtservicecontractDet As New DataTable
            'dtservicecontractDet.Load(drservicecontractDet)


            'If dtservicecontractDet.Rows.Count = 0 Then
            '    lblAlert.Text = "Please Enter Contract Detail first"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If

            ' ''''

            'System.Threading.Thread.Sleep(3000)
            'Label40.Visible = True
            ''Label40.Text = "Name :"

            'For i = 0 To dtservicecontractDet.Rows.Count - 1

            '    '''''''''''
            '    Dim cmdFreq As MySqlCommand = New MySqlCommand
            '    cmdFreq.CommandType = CommandType.Text

            '    cmdFreq.CommandText = "SELECT WEEKDOW, WeekNo, DayNo, MonthNo FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
            '    cmdFreq.Connection = conn

            '    Dim drtblservicecontractFrequency As MySqlDataReader = cmdFreq.ExecuteReader()
            '    Dim dttblservicecontractFrequency As New DataTable
            '    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

            '    'noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
            '    'gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

            '    ''''''''''''
            '    'dsFreq = cls00Connection.getDataSet("select * from  m24servicecontractFrequency where SourceSQLID=" & GetDsValue(dsDet, "code", i))
            '    'If dttblservicecontractFrequency.Rows.Count <= 0 Then Continue For
            '    If dttblservicecontractFrequency.Rows.Count <= 0 Then
            '        lblAlert.Text = "FREQUENCY HAS NOT BEEN SET"
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub
            '    End If


            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then

            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
            '                'MsgBox("Please setup Frequency (WeekDOW) for " & dtservicecontractDet.Rows(i)("Frequency").ToString())

            '                'Dim message As String = "alert('Please Enter Contract Detail..')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '                'Dim message As String = "alert('Please setup Frequency (WeekDOW) for " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '                lblAlert.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If


            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then

            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
            '                'MsgBox("Please setup Frequency (WeekDOW) for " & dtservicecontractDet.Rows(i)("Frequency").ToString())

            '                'Dim message As String = "alert('Please Enter Contract Detail..')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '                'Dim message As String = "alert('Please setup Frequency (WeekDOW) for " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '                lblAlert.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If ((dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "")) Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0 Then
            '                ''MsgBox("Please setup Frequency (WeekDOW and WeekNo) for " & dtservicecontractDet.Rows(i)("Frequency").ToString())
            '                'Dim message As String = "alert('Please setup Frequency (WeekDOW and WeekNo) for " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '                lblAlert.Text = "Please setup Frequency (WeekDOW and WeekNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And Val(dttblservicecontractFrequency.Rows(j)("Dayno").ToString()) = 0 Then
            '                'MsgBox("Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for " & dtservicecontractDet.Rows(i)("Frequency").ToString())
            '                'Dim message As String = "alert('Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '                lblAlert.Text = "Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            '(GetDsValue(dsFreq, "WeekDOW", j).Trim = "" Or Val(GetDsValue(dsFreq, "Weekno", j)) = 0) And (Val(GetDsValue(dsFreq, "DayNo", j)) = 0 Or Val(GetDsValue(dsFreq, "MonthNo", j)) = 0) Then
            '            If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And (Val(dttblservicecontractFrequency.Rows(j)("MonthNo").ToString()) = 0 Or Val(dttblservicecontractFrequency.Rows(j)("DayNo").ToString()) = 0) Then
            '                'MsgBox("Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo) for " & dtservicecontractDet.Rows(i)("Frequency").ToString())
            '                'Dim message As String = "alert('Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo)) for " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '                lblAlert.Text = "Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo)) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If


            'Next


            ' ''''

            'Session("serviceschedulefrom") = "contract"

            'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            '    Session("rcno") = txtRcno.Text
            '    Session("contractno") = txtContractNo.Text
            '    Session("contractdate") = txtContractDate.Text
            '    Session("contracttype") = ddlContactType.Text
            '    Session("client") = txtClient.Text
            '    Session("custname") = txtCustName.Text
            '    Session("accountid") = txtAccountId.Text
            '    Session("contact") = txtContactPerson.Text

            '    'txttotservicerec.Text = "0"

            '    If rbtFixedContinuous.SelectedIndex = 0 Then
            '        Session("servstart") = txtServStart.Text
            '    Else
            '        If rbtFixedContinuous.SelectedIndex = 1 Then
            '            'If txtTotServicerec.Text = "0" Then
            '            '    Session("servstart") = txtServStart.Text
            '            'Else
            '            '    Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
            '            'End If

            '            If txtGS.Text = "O" Then
            '                Session("servstart") = txtServStart.Text
            '            Else
            '                Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
            '            End If
            '        End If
            '    End If

            '    If rbtFixedContinuous.SelectedIndex = 0 Then
            '        Session("servend") = txtServEnd.Text
            '    Else
            '        If rbtFixedContinuous.SelectedIndex = 1 Then
            '            'If txtTotServicerec.Text = "0" Then
            '            '    Session("servend") = txtEndofLastSchedule.Text
            '            'Else
            '            '    Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddYears(1)
            '            'End If

            '            If txtGS.Text = "O" Then
            '                Session("servend") = txtEndofLastSchedule.Text
            '            Else
            '                Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddYears(1)
            '            End If
            '        End If

            '        'Session("servend") = txtEndofLastSchedule.Text

            '    End If

            '    If rbtFixedContinuous.SelectedIndex = 0 Then
            '        Session("fixedcontinuous") = "FIXED"
            '    Else
            '        Session("fixedcontinuous") = "CONTINUOUS"
            '    End If

            '    Session("totservicerec") = txtTotServicerec.Text
            '    Session("companygrp") = ddlCompanyGrp.Text
            '    Session("billingfreq") = ddlBillingFreq.Text
            '    Session("billingamount") = txtBillingAmount.Text
            '    Session("agreevalue") = txtAgreeVal.Text
            '    Session("ValPerMnth") = txtValPerMnth.Text

            '    Session("technician") = txtServiceBy.Text
            '    Session("timein") = txtServTimeIn.Text
            '    Session("timeout") = txtServTimeOut.Text

            '    'txt.Text = SQLDSContract.SelectCommand
            '    Session("gridsqlcontract") = txt.Text

            '    Session("computationmethod") = rbtComputationMethod.SelectedIndex
            'End If

            ' '''''''''''''''''''''
            'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
            '    Session("lblaccountid") = lblAccountIdContact1.Text
            'End If

            ''If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            ''    'Session("contractno") = txtContractNo.Text
            ''    txt.Text = SQLDSContract.SelectCommand
            ''    Session("gridsqlcontract") = txt.Text
            ''    'Session("rcno") = txtRcno.Text

            ''    '''''''''''''''''''''''''''''
            ''End If

            ' ''''''''''''''''''''''
            'cmdContractDet.Dispose()
            'dtservicecontractDet.Dispose()
            'Response.Redirect("ServiceSchedule.aspx", False)

        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnServiceSchedule_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub ScheduleContract()
        Try
            Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim cmdContractDet As MySqlCommand = New MySqlCommand

            cmdContractDet.CommandType = CommandType.Text

            cmdContractDet.CommandText = "SELECT rcno, OrigCode, Frequency FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
            cmdContractDet.Connection = conn

            Dim drservicecontractDet As MySqlDataReader = cmdContractDet.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            If dtservicecontractDet.Rows.Count = 0 Then
                lblAlert.Text = "Please Enter Contract Detail first"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            ''''

            System.Threading.Thread.Sleep(3000)
            Label40.Visible = True
            'Label40.Text = "Name :"

            For i = 0 To dtservicecontractDet.Rows.Count - 1

                '''''''''''
                Dim cmdFreq As MySqlCommand = New MySqlCommand
                cmdFreq.CommandType = CommandType.Text

                cmdFreq.CommandText = "SELECT WEEKDOW, WeekNo, DayNo, MonthNo, FreqMTD, WeekDOW FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                cmdFreq.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = cmdFreq.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

              
                If dttblservicecontractFrequency.Rows.Count <= 0 Then
                    lblAlert.Text = "FREQUENCY HAS NOT BEEN SET"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If


                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
                            lblAlert.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If


                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then

                    If dttblservicecontractFrequency.Rows.Count < 2 Then
                        lblAlert.Text = "Please setup 'DAY OF WEEK' for all Weeks"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
                            lblAlert.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If ((dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "")) Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0 Then
                            lblAlert.Text = "Please setup Frequency (WeekDOW and WeekNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And Val(dttblservicecontractFrequency.Rows(j)("Dayno").ToString()) = 0 Then
                            lblAlert.Text = "Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"

                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() = "DOW" And (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString()) = "") Then
                            lblAlert.Text = "Please Select Day of Week for '" & dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() & "' and '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And (Val(dttblservicecontractFrequency.Rows(j)("MonthNo").ToString()) = 0 Or Val(dttblservicecontractFrequency.Rows(j)("DayNo").ToString()) = 0) Then
                            lblAlert.Text = "Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo)) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If
            Next


            ''''

            Session("serviceschedulefrom") = "contract"


            Session("rcno") = txtRcno.Text
            Session("contractno") = txtContractNo.Text
            Session("contractdate") = txtContractDate.Text
            Session("contracttype") = ddlContactType.Text
            Session("client") = txtClient.Text
            Session("custname") = txtCustName.Text
            Session("accountid") = txtAccountId.Text
            Session("contact") = txtContactPerson.Text
            Session("agreementtype") = ddlAgreementType.Text
            'txttotservicerec.Text = "0"

            If rbtFixedContinuous.SelectedIndex = 0 Then
                Session("servstart") = txtServStart.Text
            Else
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    'If txtTotServicerec.Text = "0" Then
                    '    Session("servstart") = txtServStart.Text
                    'Else
                    '    Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
                    'End If
                    If txtNCR.Text = "Y" Then
                        Session("servstart") = txtEffectiveDateNCR.Text
                        txtNCR.Text = "N"
                    Else
                        If txtGS.Text = "O" Then
                            Session("servstart") = txtServStart.Text
                        Else
                            '14.06.23
                            If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") Then
                                Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
                            Else
                                Session("servstart") = Convert.ToDateTime(txtLastServiceDate.Text).AddDays(1)
                            End If

                            '14.06.23

                            'Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
                        End If
                    End If
                    
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                Session("servend") = txtServEnd.Text
                'Session("durationFC") = "0"
            Else
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    'If txtTotServicerec.Text = "0" Then
                    '    Session("servend") = txtEndofLastSchedule.Text
                    'Else
                    '    Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddYears(1)
                    'End If


                    'If rbtLstDuration.SelectedIndex = 2 Then
                    '    Session("durationFC") = txtDuration.Text
                    'ElseIf rbtLstDuration.SelectedIndex = 3 Then
                    '    Session("durationFC") = Val(txtDuration.Text) * 12
                    'End If

                    If txtGS.Text = "O" Then
                        'If String.IsNullOrEmpty(txtEndofLastSchedule.Text) = False Then
                        '    Session("servend") = txtEndofLastSchedule.Text
                        'Else
                        '    Session("servend") = txtServEnd.Text
                        'End If
                        ''Session("servend") = txtEndofLastSchedule.Text

                        If rbtLstDuration.SelectedIndex = 2 Then
                            Session("servend") = Convert.ToDateTime(txtServStart.Text).AddMonths(txtDuration.Text).AddDays(-1)
                        ElseIf rbtLstDuration.SelectedIndex = 3 Then
                            Session("servend") = Convert.ToDateTime(txtServStart.Text).AddMonths(Val(txtDuration.Text) * 12).AddDays(-1)
                        End If
                        'CDate(txtFrom.Text).AddMonths(txtMonths.Text).AddDays(-1)
                    Else
                        'If rbtLstDuration.SelectedIndex = 2 Then
                        '    Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddMonths(txtDuration.Text)

                        'ElseIf rbtLstDuration.SelectedIndex = 3 Then
                        '    Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddMonths(Val(txtDuration.Text) * 12)
                        'End If

                        '14.06.23
                        'If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") Then
                        '    Session("servstart") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddDays(1)
                        'Else
                        '    Session("servstart") = Convert.ToDateTime(txtLastServiceDate.Text).AddDays(1)
                        'End If

                        If rbtLstDuration.SelectedIndex = 2 Then
                            If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") Then
                                Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddMonths(txtDuration.Text)
                            Else
                                Session("servend") = Convert.ToDateTime(txtLastServiceDate.Text).AddMonths(txtDuration.Text)
                            End If

                        ElseIf rbtLstDuration.SelectedIndex = 3 Then
                            If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") Then
                                Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddMonths(Val(txtDuration.Text) * 12)
                            Else
                                Session("servend") = Convert.ToDateTime(txtLastServiceDate.Text).AddMonths(Val(txtDuration.Text) * 12)
                            End If

                        End If
                        '14.06.23

                        End If
                    'Session("servend") = Convert.ToDateTime(txtEndofLastSchedule.Text).AddYears(1)

                End If

                'Session("servend") = txtEndofLastSchedule.Text

            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                Session("fixedcontinuous") = "FIXED"
            Else
                Session("fixedcontinuous") = "CONTINUOUS"
            End If

            Session("totservicerec") = txtTotServicerec.Text
            Session("companygrp") = ddlCompanyGrp.Text
            Session("billingfreq") = ddlBillingFreq.Text
            Session("billingamount") = txtBillingAmount.Text
            Session("agreevalue") = txtAgreeVal.Text
            Session("ValPerMnth") = txtValPerMnth.Text

            Session("technician") = txtServiceBy.Text
            Session("timein") = txtServTimeIn.Text
            Session("timeout") = txtServTimeOut.Text

            'txt.Text = SQLDSContract.SelectCommand
            Session("gridsqlcontract") = txt.Text

            Session("computationmethod") = rbtComputationMethod.SelectedIndex

            Session("duration") = txtDuration.Text
            Session("durationms") = rbtLstDuration.SelectedValue.ToString
            Session("serviceaddress") = txtServiceAddressCons.Text

            If String.IsNullOrEmpty(txtEndofLastSchedule.Text) = True Then
                Session("endoflastschedule") = "blank"
            Else
                Session("endoflastschedule") = txtEndofLastSchedule.Text
            End If

            '''''''''''''''''''''
            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                Session("lblaccountid") = lblAccountIdContact1.Text
            End If


            ''
            Session("billaddress1") = txtbilladdress1session.Text
            Session("billstreet") = txtbillstreetsession.Text
            Session("billbuilding") = txtbillbuildingsession.Text
            Session("billcountry") = txtbillcountrysession.Text
            Session("billpostal") = txtbillpostalsession.Text

            Session("industry") = txtIndustrySession.Text
            Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
            Session("contractgroup") = txtContractGroupSession.Text
            Session("companygroup") = txtCompanyGroupSession.Text
            Session("salesman") = txtSalesmanSession.Text

            'txtCustName.Text = Session("custname")
            'txtContactPerson.Text = Session("contactperson")
            Session("conpermobile") = txtConPerMobile.Text
            Session("acctcode") = txtAccCode.Text
            Session("telephone") = txtTelephone.Text
            Session("fax") = txtFax.Text
            Session("offpostal") = txtPostal.Text
            Session("sevaddress") = txtOfficeAddress.Text
            Session("locategrp") = ddlLocateGrp.Text
            Session("salesman") = ddlSalesman.Text

            Session("contracttype") = ddlContactType.Text
            Session("inactive") = chkInactive.Checked
            ''


            If btnServiceSchedule.Text = "SCHEDULE" Then
                Session("normalorregenerateschedule") = "normalschedule"
            ElseIf btnServiceSchedule.Text = "REGENERATE" Then
                Session("normalorregenerateschedule") = "regenerateschedule"
            End If

            'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            '    'Session("contractno") = txtContractNo.Text
            '    txt.Text = SQLDSContract.SelectCommand
            '    Session("gridsqlcontract") = txt.Text
            '    'Session("rcno") = txtRcno.Text

            '    '''''''''''''''''''''''''''''
            'End If

            ''''''''''''''''''''''
            cmdContractDet.Dispose()
            dtservicecontractDet.Dispose()
            Response.Redirect("ServiceSchedule.aspx", False)
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ScheduleContract", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    'Pop-up

    Private Sub GenerateClientAlphabets()
        Dim alphabets As New List(Of ListItem)()
        Dim alphabet As New ListItem()
        alphabet.Value = "A"
        alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
        alphabets.Add(alphabet)
        For i As Integer = 66 To 90
            alphabet = New ListItem()
            alphabet.Value = [Char].ConvertFromUtf32(i)
            alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
            alphabets.Add(alphabet)
        Next
        rptClientAlphabets.DataSource = alphabets
        rptClientAlphabets.DataBind()
    End Sub

    Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
        'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        'select another alphabet ---records are not selected

        Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
        Me.GenerateClientAlphabets()
        gvClient.PageIndex = 0
        'If txtPopUpClient.Text.Trim = "" Then
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        'Else
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        'End If

        If txtPopUpClient.Text.Trim = "" Then
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
            If ddlContactType.SelectedValue.ToString = "COMPANY" Then
                SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
            Else
                SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
            End If

        Else
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
            If ddlContactType.SelectedValue.ToString = "COMPANY" Then
                SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
            Else
                SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
            End If
        End If

        SqlDSClient.DataBind()
        gvClient.DataBind()
        mdlPopUpClient.Show()
    End Sub

   

    Protected Sub TeamAlphabet_Click(sender As Object, e As EventArgs)
        'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        'select another alphabet ---records are not selected

        Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        ViewState("TeamCurrentAlphabet") = lnkAlphabet.Text
        Me.GenerateTeamAlphabets()
        gvTeam.PageIndex = 0

        If txtPopUpTeam.Text.Trim = "" Then
            SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1 = 1 and TeamName like '" + lnkAlphabet.Text + "%' and status <> 'N';"
        Else
            SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1 =1  and TeamName like '" + lnkAlphabet.Text + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' and status <> 'N';"
        End If

        SqlDSTeam.DataBind()
        gvTeam.DataBind()
        mdlPopUpTeam.Show()
    End Sub

    Private Sub GenerateTeamAlphabets()
        Dim alphabets As New List(Of ListItem)()
        Dim alphabet As New ListItem()
        alphabet.Value = "A"
        alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
        alphabets.Add(alphabet)
        For i As Integer = 66 To 90
            alphabet = New ListItem()
            alphabet.Value = [Char].ConvertFromUtf32(i)
            alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
            alphabets.Add(alphabet)
        Next
        rptrTeam.DataSource = alphabets
        rptrTeam.DataBind()
    End Sub


    Protected Sub gvTeam_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvTeam.SelectedIndexChanged
        Try
            txtIsPopup.Text = ""
            If txtTeamSelection.Text = "Search" Then
                txtServiceAddressSearch.Text = ""
                'txtInchargeSearch.Text = ""

                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtServiceAddressSearch.Text = " "
                Else
                    txtServiceAddressSearch.Text = gvTeam.SelectedRow.Cells(1).Text
                End If

                'If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                '    txtInchargeSearch.Text = " "
                'Else
                '    txtInchargeSearch.Text = gvTeam.SelectedRow.Cells(3).Text
                'End If
                'txtInchargeSearch.Focus()

                txtTeamSelection.Text = ""
            Else

                txtTeam.Text = " "
                txtServiceBy.Text = " "
                txtSupervisor.Text = " "
                txtTeamIncharge.Text = " "

                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtTeam.Text = " "
                Else
                    txtTeam.Text = gvTeam.SelectedRow.Cells(1).Text
                End If

                'If gvTeam.SelectedRow.Cells(2).Text = "&nbsp;" Then
                '    txtServiceBy.Text = " "
                'Else
                '    txtServiceBy.Text = gvTeam.SelectedRow.Cells(2).Text
                'End If

                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtServiceBy.Text = " "
                Else
                    txtServiceBy.Text = gvTeam.SelectedRow.Cells(3).Text
                End If


                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtTeamIncharge.Text = " "
                Else
                    txtTeamIncharge.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtSupervisor.Text = " "
                Else
                    txtSupervisor.Text = gvTeam.SelectedRow.Cells(4).Text
                End If

                txtTeam.Focus()

            End If
            txtPopUpTeam.Text = "Search Here for Team or In-ChargeId"
            mdlPopUpTeam.Hide()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvTeam_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub gvTeam_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvTeam.PageIndexChanging
        'gvTeam.PageIndex = e.NewPageIndex

        'If txtPopUpTeam.Text.Trim = "" Then
        '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%'"
        'Else
        '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
        'End If

        'SqlDSTeam.DataBind()
        'gvTeam.DataBind()
        'mdlPopUpTeam.Show()
        Try
            gvTeam.PageIndex = e.NewPageIndex

            If txtPopUpTeam.Text.Trim = "Search Here for Team or In-ChargeId" Then
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName "
            Else
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and  Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' order by TeamName"
            End If

            'If txtPopUpClient.Text.Trim = "" Then
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster "
            'Else
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

            SqlDSTeam.DataBind()
            gvTeam.DataBind()
            mdlPopUpTeam.Show()
            'End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvTeam_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
                con.Dispose()
                cmd.Dispose()
            End Using
            'End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION PopulateDropDownList", ex.Message.ToString, valueField & txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As Saplin.Controls.DropDownCheckBoxes)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub

    Protected Sub rbtLstDuration_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rbtLstDuration.SelectedIndexChanged
        If rbtFixedContinuous.SelectedIndex = 0 Then
            'txtDuration.Text = "1"
            'Else

        End If
    End Sub

    Protected Sub txtDuration_TextChanged(sender As Object, e As EventArgs) Handles txtDuration.TextChanged
        'If rbtLstDuration.SelectedIndex = 0 Or rbtLstDuration.SelectedIndex = 1 Or rbtLstDuration.SelectedIndex = 2 Or rbtLstDuration.SelectedIndex = 3 Then
        '    pFindContractEndDate()
        'End If
       

    End Sub

    Protected Sub txtServEnd_TextChanged(sender As Object, e As EventArgs) Handles txtServEnd.TextChanged

        'If Convert.ToDateTime(txtServStart.Text) > Convert.ToDateTime(txtServEnd.Text) Then
        '    lblAlert.Text = "Service Start Date cannot be later than Service End Date"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    'Exit Sub
        'End If

        If txtContractServiceLocked.Text = "Contract" Or txtContractServiceLocked.Text = "ServiceStart" Then

        Else
            txtContractServiceLocked.Text = "ServiceEnd"
            If IsServicePeriodlocked("ServiceEnd") = True Then
                lblAlert.Text = "SERVICE END PERIOD IS LOCKED"
                updPanelContract1.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                txtServStart.Focus()
                'txtContractServiceLocked.Text = ""
            End If
            'Else
            '    txtContractServiceLocked.Text = ""
        End If

        txtContractServiceLocked.Text = ""
    End Sub

    Protected Sub IsServiceDateHoliday()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Holiday FROM tblHoliday where Holiday= '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Holiday").ToString <> "" Then
                    txtServStart.ForeColor = Drawing.Color.Red
                End If

            Else
                txtServStart.ForeColor = Drawing.Color.Black
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION IsServiceDateHoliday", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub txtServStart_TextChanged(sender As Object, e As EventArgs) Handles txtServStart.TextChanged
        IsServiceDateHoliday()

        If txtContractServiceLocked.Text = "Contract" Then
        Else

            txtContractServiceLocked.Text = "ServiceStart"
            If IsServicePeriodlocked("ServiceStart") = True Then
                If txtServStart.Enabled = True Then
                    lblAlert.Text = "SERVICE START PERIOD IS LOCKED"
                    updPanelContract1.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    txtServStart.Focus()
                End If

            End If
            'Else
            '    txtContractServiceLocked.Text = ""
            End If

    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        Try
            'MessageBox.Message.Alert(Page, ddlSearchStatus.Text + " " + txtDDLText.Text, "str")
            'Return
            MakeMeNull()
            Dim qry As String

            If txtDisplayRecordsLocationwise.Text = "N" Then
                qry = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                qry = qry + " A.Scheduler, A.ServiceAddress, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance,A.Location,  A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                qry = qry + " from tblcontract A where 1 =1 "

            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                qry = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                qry = qry + " A.Scheduler, A.ServiceAddress, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                qry = qry + " From tblContract A left join tblContractdet B on A.ContractNo=B.ContractNo where A.Status ='O'"
                qry = qry + " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            End If

            ' CategoryID, ServiceAddress, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where Status ='O' order by rcno desc, CustName limit " & txtLimit.Text

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    qry = qry & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            'End If

            'txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
            'txt.Text = txt.Text & " and B.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"


            If String.IsNullOrEmpty(txtSearchID.Text) = False Then
                'txtID.Text = txtSearchID.Text
                qry = qry + " and A.contractno like '%" + txtSearchID.Text + "%'"
            End If
            If (ddlSearchStatus.Text) <> "-1" Then
                If ddlSearchStatus.Text <> txtDDLText.Text Then
                    'ddlStatus.Text = ddlSearchStatus.Text
                    qry = qry + " and A.status = '" + ddlSearchStatus.Text + "'"
                End If
            Else
                qry = qry + " and A.status = 'O'"
            End If


            'If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
            '    'txtNameE.Text = txtSearchCompany.Text
            '    qry = qry + " and custcode like '%" + txtSearchCustCode.Text + "%'"
            'End If

            If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
                'txtNameE.Text = txtSearchCompany.Text
                qry = qry + " and A.Accountid like '%" + txtSearchCustCode.Text + "%'"
            End If

            If String.IsNullOrEmpty(txtSearchCompany.Text) = False Then
                txtSearchCompany.Text = txtSearchCompany.Text.Replace("'", "\'")
                qry = qry + " and A.custname like ""%" + txtSearchCompany.Text + "%"""
            End If
            If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
                txtSearchAddress.Text = txtSearchAddress.Text.Replace("'", "\'")
                qry = qry + " and (A.custaddr like '%" + txtSearchAddress.Text + "%')"
                'qry = qry + " or addbuilding like '%" + txtSearchAddress.Text + "%'"
                'qry = qry + " or addstreet like '%" + txtSearchAddress.Text + "%')"
            End If

            If String.IsNullOrEmpty(txtSearchContactNo.Text) = False Then
                'txtNameE.Text = txtSearchCompany.Text
                qry = qry + " and (A.telephone = '" + txtSearchContactNo.Text + "'"
                qry = qry + " or A.contactpersonmobile = '" + txtSearchContactNo.Text + "')"
            End If

            If String.IsNullOrEmpty(txtSearchPostal.Text) = False Then
                'txtPostal.Text = txtSearchPostal.Text
                qry = qry + " and A.postal  = '" + txtSearchPostal.Text + "'"
            End If
            If String.IsNullOrEmpty(txtSearchContact.Text) = False Then
                qry = qry + " and A.contact like '%" + txtSearchContact.Text + "%'"

            End If
            If (ddlSearchSalesman.Text) <> "-1" Then

                qry = qry + " and A.salesman  = '" + ddlSearchSalesman.Text.Trim + "'"
            End If
            If (ddlSearchContactType.Text) <> "-1" Then
                'If ddlSearchContactType.Text <> txtDDLText.Text Then
                qry = qry + " and A.ContactType  = '" + ddlSearchContactType.Text + "'"
                'End If
            End If
            If (ddlSearchScheduler.Text) <> "-1" Then
                qry = qry + " and A.Scheduler  = '" + ddlSearchScheduler.Text + "'"
            End If


            If (ddlSearchInChargeId.Text) <> "-1" Then
                qry = qry + " and Inchargeid = '" + ddlSearchInChargeId.Text + "'"
            End If

            If (ddlSearchContractGroup.Text) <> "-1" Then
                qry = qry + " and A.ContractGroup  = '" + ddlSearchContractGroup.Text + "'"
            End If

            If (ddlSearchCompanyGroup.Text) <> "-1" Then
                qry = qry + " and A.CompanyGroup  = '" + ddlSearchCompanyGroup.Text + "'"
            End If

            If (ddlSearchLocationGroup.Text) <> "-1" Then
                qry = qry + " and A.LocateGRp  = '" + ddlSearchLocationGroup.Text + "'"
            End If


            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                'txtPostal.Text = txtSearchPostal.Text
                qry = qry + " and A.ourreference  = '" + txtSearchOurRef.Text + "'"
            End If


            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                qry = qry + " and A.yourreference  = '" + txtSearchYourRef.Text + "'"
            End If



            If String.IsNullOrEmpty(txtSearchContractDateFrom.Text) = False And IsDate(txtSearchContractDateFrom.Text) Then
                qry = qry + " and A.ContractDate>= '" + Convert.ToDateTime(txtSearchContractDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchContractDateTo.Text) = False And IsDate(txtSearchContractDateTo.Text) Then
                qry = qry + " and A.ContractDate  <= '" + Convert.ToDateTime(txtSearchContractDateTo.Text).ToString("yyyy-MM-dd") & "'"

            End If


            If String.IsNullOrEmpty(txtSearchStartDateFrom.Text) = False And IsDate(txtSearchStartDateFrom.Text) Then
                qry = qry + " and A.StartDate  >= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchStartDateTo.Text) = False And IsDate(txtSearchStartDateTo.Text) Then
                qry = qry + " and A.StartDate  <= '" + Convert.ToDateTime(txtSearchStartDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchEndDateFrom.Text) = False And IsDate(txtSearchEndDateFrom.Text) Then
                qry = qry + " and A.EndDate  >= '" + Convert.ToDateTime(txtSearchEndDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchEndDateTo.Text) = False And IsDate(txtSearchEndDateTo.Text) Then
                qry = qry + " and A.EndDate  <= '" + Convert.ToDateTime(txtSearchEndDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If



            If String.IsNullOrEmpty(txtSearchServiceStartFrom.Text) = False And IsDate(txtSearchServiceStartFrom.Text) Then
                qry = qry + " and A.ServiceStart  >= '" + Convert.ToDateTime(txtSearchServiceStartFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchServiceStartTo.Text) = False And IsDate(txtSearchServiceStartTo.Text) Then
                qry = qry + " and A.ServiceStart  <= '" + Convert.ToDateTime(txtSearchServiceStartTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchServiceEndFrom.Text) = False And IsDate(txtSearchServiceEndFrom.Text) Then
                qry = qry + " and A.ServiceEnd  >= '" + Convert.ToDateTime(txtSearchServiceEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchServiceEndTo.Text) = False And IsDate(txtSearchServiceEndTo.Text) Then
                qry = qry + " and A.ServiceEnd  <= '" + Convert.ToDateTime(txtSearchServiceEndTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
                qry = qry + " and A.ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
                qry = qry + " and A.ActualEnd  <= '" + Convert.ToDateTime(txtSearchActualEndTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
                qry = qry + " and A.ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
                qry = qry + " and A.ActualEnd  <= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If



            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And IsDate(txtSearchEntryDateFrom.Text) Then
                qry = qry + " and A.CreatedOn  >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If

            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And IsDate(txtSearchEntryDateTo.Text) Then
                qry = qry + " and A.CreatedOn  <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If

            '''''''''''''''''''''''''''

            'If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            'End If
            'If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            'End If


            If String.IsNullOrEmpty(txtSearchModifiedDateFrom.Text) = False And txtSearchModifiedDateFrom.Text <> "__/__/____" Then
                qry = qry + +" and A.LastModifiedOn >= '" + Convert.ToDateTime(txtSearchModifiedDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchModifiedDateTo.Text) = False And txtSearchModifiedDateTo.Text <> "__/__/____" Then
                qry = qry + +" and A.LastModifiedOn <= '" + Convert.ToDateTime(txtSearchModifiedDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                qry = qry + " and A.LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                qry = qry + " and A.CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If (ddlSearchGenerateScheduleStatus.SelectedIndex > 0) Then
                qry = qry + " and A.GST = '" & Left(ddlSearchGenerateScheduleStatus.Text.Trim, 1) + "'"
            End If

            '''''''''''''''''''''''''''''

            qry = qry + " order by A.custname;"
            txt.Text = qry

            SQLDSContract.SelectCommand = qry
            SQLDSContract.DataBind()
            GridView1.DataBind()
            txtSearchID.Text = ""
            GridSelected = "SQLDSContract"

            lblAccountIdContact.Visible = False
            lblAccountIdContact1.Visible = False
            'lblAccountIdContact1.Text = ""

            lblAccountIdContactLocation.Visible = False
            lblAccountIdContactLocation1.Visible = False
            'lblAccountIdContactLocation1.Text = ""

            txtSearchCustCode.Text = ""
            txtSearchCompany.Text = ""
            txtSearchAddress.Text = ""
            txtSearchContact.Text = ""
            txtSearchContactNo.Text = ""
            txtSearchPostal.Text = ""

            txtSearchOurRef.Text = ""
            txtSearchYourRef.Text = ""

            ddlSearchSalesman.ClearSelection()
            ddlSearchScheduler.ClearSelection()
            ddlSearchStatus.ClearSelection()
            ddlSearchContractGroup.ClearSelection()
            ddlSearchCompanyGroup.ClearSelection()
            ddlSearchLocationGroup.ClearSelection()
            ddlSearchRenewalStatus.ClearSelection()
            ddlSearchInChargeId.ClearSelection()

            txtSearchContractDateFrom.Text = ""
            txtSearchContractDateTo.Text = ""
            txtSearchServiceStartFrom.Text = ""
            txtSearchServiceStartTo.Text = ""
            txtSearchServiceEndFrom.Text = ""
            txtSearchServiceEndTo.Text = ""
            txtSearchActualEndFrom.Text = ""
            txtSearchActualEndTo.Text = ""

            txtSearchStartDateFrom.Text = ""
            txtSearchStartDateTo.Text = ""

            txtSearchEndDateFrom.Text = ""
            txtSearchEndDateTo.Text = ""
            txtSearchEntryDateFrom.Text = ""
            txtSearchEntryDateTo.Text = ""

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSearch_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub btnQuit_Click(sender As Object, e As EventArgs) Handles btnQuit.Click

        If Session("contracttype") = "CORPORATE" Then

            Session("contractfrom") = "clients"
            Session("accountid") = lblAccountIdContact1.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Company.aspx")
        ElseIf Session("contracttype") = "PERSON" Then
            Session("contractfrom") = "clients"
            Session("accountid") = lblAccountIdContact1.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Person.aspx")
        Else

            Response.Redirect("Home.aspx")
        End If

    End Sub


    Protected Sub txtServTimeIn_TextChanged(sender As Object, e As EventArgs) Handles txtServTimeIn.TextChanged
        ''If String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
        'If txtServTimeOut.Text <> "__:__" And txtServTimeOut.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
        '    Dim datetime1 As DateTime
        '    Dim datetime2 As DateTime
        '    If DateTime.TryParse(txtServTimeIn.Text, datetime1) And DateTime.TryParse(txtServTimeOut.Text, datetime2) Then
        '        Dim difference As TimeSpan = datetime2.Subtract(datetime1)
        '        txtAllocTime.Text = difference.TotalMinutes
        '    Else
        '        Console.WriteLine("Date time is invalid")
        '    End If

        'End If
    End Sub

    Protected Sub txtServTimeOut_TextChanged(sender As Object, e As EventArgs) Handles txtServTimeOut.TextChanged
        'If (txtServTimeIn.Text <> "__:__" And txtServTimeIn.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeIn.Text) = False) And (txtServTimeOut.Text <> "__:__" And txtServTimeOut.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeOut.Text) = False) Then
        '    'If String.IsNullOrEmpty(txtServTimeIn.Text) = False Then
        '    Dim datetime1 As DateTime
        '    Dim datetime2 As DateTime
        '    If DateTime.TryParse(txtServTimeIn.Text, datetime1) And DateTime.TryParse(txtServTimeOut.Text, datetime2) Then
        '        Dim difference As TimeSpan = datetime2.Subtract(datetime1)
        '        txtAllocTime.Text = difference.TotalMinutes
        '    Else
        '        Console.WriteLine("Date time is invalid")
        '    End If
        'End If
    End Sub



    'Protected Sub btnContractEarlyCompletion_Click(sender As Object, e As EventArgs) Handles btnContractEarlyCompletion.Click
    '    Try
    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_value")
    '        If Right(confirmValue, 3) = "Yes" Then
    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndEC.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndEC.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()

    '            End If
    '            '''

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='E', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "


    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndEC.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndEC.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsEC.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()


    '            'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")


    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '            ''''''
    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsEC.Text
    '            txtStatus.Text = "E"

    '            txtActualEndEC.Text = ""
    '            txtCommentsEC.Text = ""
    '            ''''''
    '            ModalPopupExtender2.Hide()
    '        Else
    '            ModalPopupExtender2.Show()
    '        End If



    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Protected Sub btnContractTerminate_Click(sender As Object, e As EventArgs) Handles btnContractTerminate.Click
    '    Try


    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_valueT")
    '        If Right(confirmValue, 3) = "Yes" Then

    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndT.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndT.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()
    '            End If

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "


    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndT.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndT.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsT.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()

    '            'Dim message As String = "alert('Contract Terminated successfully!!!!!!')"
    '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsT.Text
    '            txtStatus.Text = "T"

    '            txtActualEndT.Text = ""
    '            txtCommentsT.Text = ""


    '            ModalPopupExtender3.Hide()
    '        Else
    '            ModalPopupExtender3.Show()
    '        End If

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Protected Sub btnCancelledByCompany_Click(sender As Object, e As EventArgs) Handles btnCancelledByCompany.Click
    '    Try
    '        'If String.IsNullOrEmpty(txtActualEndC.Text) = True Then
    '        '    Dim message As String = "alert('Please Select Completion Date!!!!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    Exit Sub

    '        'End If

    '        'If IsDate(txtActualEndC.Text) = False Then
    '        '    Dim message As String = "alert('Please Enteer Valid Date!!!!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    Exit Sub

    '        'End If

    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_valueC")
    '        If Right(confirmValue, 3) = "Yes" Then

    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndC.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndC.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()
    '            End If

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='X', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "

    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndC.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndC.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsC.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()
    '            'Dim message As String = "alert('Contract Cancelled successfully!!!!!!')"
    '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsC.Text
    '            txtStatus.Text = "X"

    '            txtActualEndC.Text = ""
    '            txtCommentsC.Text = ""

    '            ModalPopupExtender4.Hide()
    '        Else
    '            ModalPopupExtender4.Show()
    '        End If

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    Protected Sub btnEarlyCompletion_Click(sender As Object, e As EventArgs) Handles btnEarlyCompletion.Click

        'ModalPopupExtender2.Show()
    End Sub

    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        Try
            GridView1.PageIndex = e.NewPageIndex

            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
                GridView1.DataSourceID = "SQLDSContract"
            ElseIf GridSelected = "SQLDSContractClientId" Then
                SQLDSContractClientId.SelectCommand = txt.Text
                SQLDSContractClientId.DataBind()
                GridView1.DataSourceID = "SQLDSContractClientId"
            ElseIf GridSelected = "SQLDSContractNo" Then
                ''SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
                GridView1.DataSourceID = "SQLDSContractNo"
            Else
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
                GridView1.DataSourceID = "SQLDSContract"
            End If

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub txtSearchContact_TextChanged(sender As Object, e As EventArgs) Handles txtSearchContact.TextChanged

    End Sub

    Protected Sub BtnChSt_Click(sender As Object, e As EventArgs) Handles BtnChSt.Click
        Try
            'If ddlStatusChSt.SelectedIndex = "-1" Then
            '    Dim message As String = "alert('Please Select Status!!!!!!')"
            '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '    Exit Sub

            'End If
            lblAlert.Text = ""
            txtAlertStatus.Text = ""
            'txtAlertStatus.Text = ""
            Dim CountBilledServiceRecords As Integer
            CountBilledServiceRecords = 0

            Dim CountPostedServiceRecords As Integer
            CountPostedServiceRecords = 0
            lblActualEndDate.Text = txtActualEndChSt.Text

            'If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
            '    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
            '        txtAlertStatus.Visible = True
            '        txtAlertStatus.Text = "Past Date cannot be selected"
            '        ModalPopupExtender5.Show()
            '        Exit Sub
            '    End If

            'End If
            Dim sqlstr As String
            sqlstr = ""

            txtIsTerminationExists.Text = "N"

            If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then
                '''

                sqlstr = "SELECT count(ContractNo) as TerminateCount1 FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and Type='TERMINATION' and VOID = false"

                Dim commandIsRecordInContractPriceHistory1 As MySqlCommand = New MySqlCommand

                Dim connIsRecordInContractPriceHistory1 As MySqlConnection = New MySqlConnection()
                connIsRecordInContractPriceHistory1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsRecordInContractPriceHistory1.Open()

                commandIsRecordInContractPriceHistory1.CommandType = CommandType.Text
                commandIsRecordInContractPriceHistory1.CommandText = sqlstr
                commandIsRecordInContractPriceHistory1.Connection = connIsRecordInContractPriceHistory1

                Dim drIsRecordInContractPriceHistory1 As MySqlDataReader = commandIsRecordInContractPriceHistory1.ExecuteReader()
                Dim dtIsRecordInContractPriceHistory1 As New DataTable
                dtIsRecordInContractPriceHistory1.Load(drIsRecordInContractPriceHistory1)

                If dtIsRecordInContractPriceHistory1.Rows.Count > 0 Then
                    If dtIsRecordInContractPriceHistory1.Rows(0)("TerminateCount1").ToString > 0 Then
                        txtIsTerminationExists.Text = "Y"
                    End If
                End If
            End If

            ''Start:Check for Service Lock

            If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Then

                'Dim sqlstr As String
                sqlstr = ""

                '''
                txtIsTerminationExists.Text = "N"
                sqlstr = "SELECT count(ContractNo) as TerminateCount1 FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and Type='TERMINATION' and VOID = false"

                Dim commandIsRecordInContractPriceHistory1 As MySqlCommand = New MySqlCommand

                Dim connIsRecordInContractPriceHistory1 As MySqlConnection = New MySqlConnection()
                connIsRecordInContractPriceHistory1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsRecordInContractPriceHistory1.Open()

                commandIsRecordInContractPriceHistory1.CommandType = CommandType.Text
                commandIsRecordInContractPriceHistory1.CommandText = sqlstr
                commandIsRecordInContractPriceHistory1.Connection = connIsRecordInContractPriceHistory1

                Dim drIsRecordInContractPriceHistory1 As MySqlDataReader = commandIsRecordInContractPriceHistory1.ExecuteReader()
                Dim dtIsRecordInContractPriceHistory1 As New DataTable
                dtIsRecordInContractPriceHistory1.Load(drIsRecordInContractPriceHistory1)

                If dtIsRecordInContractPriceHistory1.Rows.Count > 0 Then
                    If dtIsRecordInContractPriceHistory1.Rows(0)("TerminateCount1").ToString > 0 Then
                        txtIsTerminationExists.Text = "Y"
                    End If
                End If


                '''

                sqlstr = ""

                sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                Dim commandLocked As MySqlCommand = New MySqlCommand

                Dim connLocked As MySqlConnection = New MySqlConnection()
                connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connLocked.Open()

                commandLocked.CommandType = CommandType.Text
                commandLocked.CommandText = sqlstr
                commandLocked.Connection = connLocked

                Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
                Dim dtLocked As New DataTable
                dtLocked.Load(drLocked)

                If dtLocked.Rows.Count > 0 Then
                    If dtLocked.Rows(0)("svcLock").ToString = "Y" Then

                        '13.01.21

                        sqlstr = "SELECT count(ContractNo) as TerminateCount FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and Type='TERMINATION' and VOID = false"

                        Dim commandIsRecordInContractPriceHistory As MySqlCommand = New MySqlCommand

                        Dim connIsRecordInContractPriceHistory As MySqlConnection = New MySqlConnection()
                        connIsRecordInContractPriceHistory.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        connIsRecordInContractPriceHistory.Open()

                        commandIsRecordInContractPriceHistory.CommandType = CommandType.Text
                        commandIsRecordInContractPriceHistory.CommandText = sqlstr
                        commandIsRecordInContractPriceHistory.Connection = connIsRecordInContractPriceHistory

                        Dim drIsRecordInContractPriceHistory As MySqlDataReader = commandIsRecordInContractPriceHistory.ExecuteReader()
                        Dim dtIsRecordInContractPriceHistory As New DataTable
                        dtIsRecordInContractPriceHistory.Load(drIsRecordInContractPriceHistory)

                        If dtIsRecordInContractPriceHistory.Rows.Count > 0 Then
                            If dtIsRecordInContractPriceHistory.Rows(0)("TerminateCount").ToString = 0 Then
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "SERVICE PERIOD IS LOCKED FOR THIS DATE"
                                txtActualEndChSt.Text = ""
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If
                        '13.01.21

                        'txtAlertStatus.Visible = True
                        'txtAlertStatus.Text = "SERVICE PERIOD IS LOCKED FOR THIS DATE"
                        'txtActualEndChSt.Text = ""
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        'Exit Sub
                    End If
                End If

                connLocked.Close()
                connLocked.Dispose()
                commandLocked.Dispose()
                drLocked.Close()
            End If

            'End: Check for Service Lock





            If Left(ddlStatusChSt.Text, 1) <> "R" Then
                If ddlStatusChSt.SelectedIndex = 0 Then
                    'If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Status"
                    ModalPopupExtender5.Show()
                    Exit Sub
                    'End If
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "O" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter Resume Date"
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "H" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter Onhold Date"
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter Actual End"
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If


            'If txtStatus.Text = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
            If Left(txtStatus.Text, 1) = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
                GoTo bypassenddatevalidation
            End If

            'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
            '    txtAlertStatus.Visible = True
            '    txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
            '    ModalPopupExtender5.Show()
            '    Exit Sub
            'End If


            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            Else
                'quoted on 04.05.21
                'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtEndofLastSchedule.Text.Trim) Then
                '    txtAlertStatus.Visible = True
                '    txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtEndofLastSchedule.Text
                '    ModalPopupExtender5.Show()
                '    Exit Sub
                'End If
                'quoted on 04.05.21
            End If


            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then


                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
                    '    If txtBackDateContractTerminationSetup.Text = False Then
                    '        txtAlertStatus.Visible = True
                    '        txtAlertStatus.Text = "Past Date cannot be selected"
                    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '        ModalPopupExtender5.Show()
                    '        Exit Sub
                    '    Else
                    '        If String.IsNullOrEmpty(txtBackDateContractTermination.Text) = False Then
                    '            If txtBackDateContractTermination.Text = False Then
                    '                txtAlertStatus.Visible = True
                    '                txtAlertStatus.Text = "Past Date cannot be selected"
                    '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '                ModalPopupExtender5.Show()
                    '                Exit Sub
                    '            End If
                    '        End If

                    '    End If
                    'End If



                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
                    '    If txtBackDateContractTerminationSetup.Text = False Then
                    '        txtAlertStatus.Visible = True
                    '        txtAlertStatus.Text = "Past Date cannot be selected"
                    '         ModalPopupExtender5.Show()
                    '        Exit Sub
                    '    Else
                    '        If txtBackDateContractTermination.Text = False Then
                    '            txtAlertStatus.Visible = True
                    '            txtAlertStatus.Text = "Past Date cannot be selected"
                    '            ModalPopupExtender5.Show()
                    '            Exit Sub
                    '        ElseIf txtBackDateContractTermination.Text = True Then
                    '            If txtBackDateContractTerminationSameMonthOnly.Text = False Then
                    '                txtAlertStatus.Visible = True
                    '                txtAlertStatus.Text = "Past Date cannot be selected"
                    '                ModalPopupExtender5.Show()
                    '                Exit Sub
                    '            ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                    '                If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then
                    '                Else
                    '                    txtAlertStatus.Visible = True
                    '                    txtAlertStatus.Text = "Past Date cannot be selected"
                    '                    ModalPopupExtender5.Show()
                    '                    Exit Sub
                    '                End If
                    '            End If
                    '        End If
                    '    End If
                    'End If


                    ''''''''

                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1

                    'start:08.01.20
                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                    '    FindBackDateContractTermination()
                    '    If txtBackDateContractTerminationSetup.Text = False Then                       '2
                    '        txtAlertStatus.Visible = True
                    '        txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract termination."
                    '        ModalPopupExtender5.Show()
                    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '        Exit Sub
                    '    Else
                    '        If txtBackDateContractTermination.Text = True Then   '3
                    '            GoTo proceedcontracttermination
                    '        ElseIf txtBackDateContractTermination.Text = False Then

                    '            If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                    '                txtAlertStatus.Visible = True
                    '                txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                    '                ModalPopupExtender5.Show()

                    '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '                Exit Sub
                    '            ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                    '                If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then  '5
                    '                Else
                    '                    txtAlertStatus.Visible = True
                    '                    txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                    '                    ModalPopupExtender5.Show()

                    '                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '                    Exit Sub
                    '                End If '5
                    '            End If '4
                    '        End If  '3
                    '    End If  '2
                    'End If      '1

                    'end:08.01.20
                    '''''''''''''
proceedcontracttermination:
                End If
            End If


bypassenddatevalidation:

            'CalendarExtender2.StartDate = DateTime.Today


            If Left(ddlStatusChSt.Text, 1) <> "O" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Actual End Date"
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If


            If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then '22.06.22
            Else

                If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Or Left(ddlStatusChSt.Text, 1) = "R" Or Left(ddlStatusChSt.Text, 1) = "V" Then

                    If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "Effective Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                                txtActualEndChSt.Text = ""
                                ddlStatusChSt.SelectedIndex = 0
                                ModalPopupExtender5.Show()
                                Exit Sub
                            End If
                        End If
                    End If
                End If
            End If


            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If ddlTerminationCode.SelectedIndex = 0 Then
                    'lblAlertStatus.Text = "Please Select Termination Code"
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Termination Code"
                    ModalPopupExtender5.Show()
                    ddlTerminationCode.Attributes.Remove("disabled")
                    Exit Sub
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If String.IsNullOrEmpty(txtCommentChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter Comments"
                    ModalPopupExtender5.Show()
                    Exit Sub

                End If
            End If


            If Left(ddlStatusChSt.Text, 1) = "H" Then

                If ddlOnHoldCodeChSt.SelectedIndex = 0 Then
                    'lblAlertStatus.Text = "Please Select Termination Code"
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select On-Hold Code"
                    ModalPopupExtender5.Show()
                    ddlOnHoldCodeChSt.Enabled = True
                    'ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                    Exit Sub
                End If


                If String.IsNullOrEmpty(txtOnHoldCommentsChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter On-Hold Comments"
                    ModalPopupExtender5.Show()
                    Exit Sub

                End If
            End If


            '13.01.21
            'txtOpenService.Text = "N"
            'If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then

            '    Dim sqlstrO As String
            '    sqlstrO = ""

            '    sqlstrO = "SELECT count(RecordNo) as OpenServiceRecord FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and Status ='O'"

            '    Dim commandO As MySqlCommand = New MySqlCommand

            '    Dim connO As MySqlConnection = New MySqlConnection()
            '    connO.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connO.Open()

            '    commandO.CommandType = CommandType.Text
            '    commandO.CommandText = sqlstrO
            '    commandO.Connection = connO

            '    Dim drO As MySqlDataReader = commandO.ExecuteReader()
            '    Dim dtO As New DataTable
            '    dtO.Load(drO)

            '    If dtO.Rows.Count > 0 Then
            '        If dtO.Rows(0)("OpenServiceRecord").ToString > 0 Then
            '            txtOpenService.Text = "Y"
            '            mdlTerminateExpiredContracts.Show()
            '            ModalPopupExtender5.Hide()
            '            Exit Sub
            '        End If
            '    End If
            'End If

            '''''''''''''''''''E

            If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then
                If txtOpenService.Text = "Y" Then
                    mdlTerminateExpiredContracts.Show()
                    ModalPopupExtender5.Hide()
                    Exit Sub
                End If
            End If

            '13.01.21

            Dim originalStatus As String
            originalStatus = ""

            'originalStatus = txtStatus.Text

            originalStatus = Left(txtStatus.Text, 1)

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_valueChSt")

            If Right(confirmValue, 3) = "Yes" Then

                Dim strdate As DateTime
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim strTerminationCode As String

                strTerminationCode = ""

                If ddlTerminationCode.SelectedIndex > 0 Then
                    strTerminationCode = ddlTerminationCode.Text
                End If
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                'status E=V, T=T, X=V, O, V, C, R, H=H
                'status C, E, H, O, R, T, V, X

                ''''''''''''''''''EXPIRE
                If Left(ddlStatusChSt.Text, 1) = "E" Then

                    ''''''''''''''''''''''''' EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 
                    If ddlTerminationCode.SelectedIndex = 0 Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    Dim commandE1 As MySqlCommand = New MySqlCommand

                    commandE1.CommandType = CommandType.Text
                    commandE1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"
                    commandE1.Connection = conn

                    Dim drservice As MySqlDataReader = commandE1.ExecuteReader()
                    Dim dtservice As New DataTable
                    dtservice.Load(drservice)

                    If dtservice.Rows.Count > 0 Then
                        'ChangeStatus()


                        For x As Integer = 0 To dtservice.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtservice.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecE
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtservice.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecE:
                        Next
                    End If


                    Dim commandE As MySqlCommand = New MySqlCommand
                    commandE.CommandType = CommandType.Text

                    Dim qry As String = "UPDATE tblContract SET  Status ='E', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "


                    commandE.CommandText = qry
                    commandE.Parameters.Clear()


                    If txtActualEndChSt.Text = "" Then
                        commandE.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandE.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandE.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    commandE.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandE.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                    commandE.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)

                    commandE.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    commandE.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandE.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    commandE.Connection = conn
                    commandE.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()

                    'txtStatus.Text = "E"
                    txtStatus.Text = "E - Expired"


                    commandE.Dispose()
                    commandE1.Dispose()
                    dtservice.Dispose()

                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnChSt", "1", txtContractNo.Text)
                    UpdateAgreeValue("Terminate")
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnChSt", "2", txtContractNo.Text)
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnChSt", "3", txtContractNo.Text)
                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    '''''''''''''''''''E

                    '''''''''''''''''''TERMINATE

                ElseIf Left(ddlStatusChSt.Text, 1) = "T" Then

                    ''''''''''''''''''''''''' TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT

                    Dim commandT1 As MySqlCommand = New MySqlCommand

                    commandT1.CommandType = CommandType.Text
                    'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                    'If txtContractStart.Text.Trim = txtActualEndChSt.Text.Trim Then
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate >= '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"
                    Else
                        commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"
                    End If

                    commandT1.Connection = conn

                    Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
                    Dim dtserviceT As New DataTable
                    dtserviceT.Load(drserviceT)

                    If dtserviceT.Rows.Count > 0 Then
                        'ChangeStatus()

                        For x As Integer = 0 To dtserviceT.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecT
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''
                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='T' where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"
                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecT:
                        Next


                    End If

                    Dim commandT As MySqlCommand = New MySqlCommand
                    commandT.CommandType = CommandType.Text


                    'If Left(txtStatus.Text, 1) = "E" And Left(txtActualEnd.Text, 1) = "T" Then
                    If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then
                        Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, TerminationType=@TerminationType, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        commandT.CommandText = qryT
                        commandT.Parameters.Clear()


                        'If txtActualEndChSt.Text = "" Then
                        '    commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                        'Else
                        '    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        '    commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                        'End If

                        commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                        commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                        commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                        commandT.Parameters.AddWithValue("@TerminationType", txtTerminationTypeChSt.Text.Trim)

                        commandT.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        commandT.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        commandT.Connection = conn
                        commandT.ExecuteNonQuery()
                    Else
                        Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, TerminationType=@TerminationType, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        commandT.CommandText = qryT
                        commandT.Parameters.Clear()


                        If txtActualEndChSt.Text = "" Then
                            commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                        Else
                            strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                            commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                        End If

                        commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                        commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                        commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                        commandT.Parameters.AddWithValue("@TerminationType", txtTerminationTypeChSt.Text.Trim)
                        commandT.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        commandT.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        commandT.Connection = conn
                        commandT.ExecuteNonQuery()
                    End If

                    'Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    'commandT.CommandText = qryT
                    'commandT.Parameters.Clear()


                    'If txtActualEndChSt.Text = "" Then
                    '    commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    'Else
                    '    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                    '    commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    'End If

                    'commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    'commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    'commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                    'commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    'commandT.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    'commandT.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    'commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    'commandT.Connection = conn
                    'commandT.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    'txtStatus.Text = "T"
                    txtStatus.Text = "T - Terminated"
                    txtActualEnd.Text = txtActualEndChSt.Text
                    commandT.Dispose()
                    commandT1.Dispose()
                    dtserviceT.Dispose()


                    '14.08.21
                    'If txtIsTerminationExists.Text = "N" Then
                    '    UpdateAgreeValue("Terminate")
                    'End If


                    If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then
                        GoTo EndChangStatus
                    End If

                    If Left(txtStatus.Text, 1) = "T" And Left(ddlStatusChSt.Text, 1) = "T" Then
                        txtIsTerminationExists.Text = "YV"
                    End If

                    If txtIsTerminationExists.Text = "N" Then
                        'UpdateAgreeValue("Terminate")
                        UpdateAgreeValueChSt("Terminate")
                    End If

                    If txtIsTerminationExists.Text = "YV" Then

                        '    ''16.06.21

                        Dim commandTYV As MySqlCommand = New MySqlCommand
                        commandTYV.CommandType = CommandType.Text
                        commandTYV.CommandText = "update tblContractPriceHistory set Void = True where ContractNo = '" & txtContractNo.Text & "' and Type='TERMINATION'"
                        commandTYV.Connection = conn
                        commandTYV.ExecuteNonQuery()
                        commandTYV.Dispose()
                        'End If

                        '16.06.21
                        'UpdateAgreeValue("Terminate")
                        UpdateAgreeValueChSt("Terminate")
                    End If



                    '' Quoted on 07.04.21

                    '14.08.21
                    ' '' 23.06.19

                    'If ddlAgreementType.Text = "RENEWAL" Then

                    '    Dim commandIsBilled As MySqlCommand = New MySqlCommand

                    '    commandIsBilled.CommandType = CommandType.Text
                    '    commandIsBilled.CommandText = "select count(RecordNo) as isServiced from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and Status ='P'"
                    '    commandIsBilled.Connection = conn

                    '    Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                    '    Dim dtIsBilled As New DataTable
                    '    dtIsBilled.Load(drIsBilled)

                    '    If dtIsBilled.Rows(0)("isServiced") = 0 Then

                    '        If txtActualEnd.Text = txtContractStart.Text Then

                    '            ' if following 2 conditions are met :
                    '            '1. if there is no Service done (No record with Service Status 'P') and 
                    '            '2. Actual End = Contract Start date

                    '            '' Clear Renewal info and Status from 1st Contract

                    '            Dim commandPrevContractUpdate As MySqlCommand = New MySqlCommand
                    '            commandPrevContractUpdate.CommandType = CommandType.Text

                    '            Dim qryPrevContractUpdate As String = "UPDATE tblContract SET Status =@Status,  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = @ActualEnd where ContractNo= @ContractNo "

                    '            commandPrevContractUpdate.CommandText = qryPrevContractUpdate
                    '            commandPrevContractUpdate.Parameters.Clear()
                    '            commandPrevContractUpdate.Parameters.AddWithValue("@Status", "O")
                    '            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalSt", "O")
                    '            'commandPrevContractUpdate.Parameters.AddWithValue("@RenewalDate", vbNull)
                    '            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalContractNo", "")

                    '            'commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))

                    '            commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    '            commandPrevContractUpdate.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
                    '            commandPrevContractUpdate.Connection = conn
                    '            commandPrevContractUpdate.ExecuteNonQuery()

                    '            commandPrevContractUpdate.Dispose()
                    '            '''

                    '            ' Clear OContract from 2nd Contract

                    '            Dim commandRenewalUpdate As MySqlCommand = New MySqlCommand
                    '            commandRenewalUpdate.CommandType = CommandType.Text

                    '            Dim qryRenewalUpdate As String = "UPDATE tblContract SET  OContractNo = @OContractNo where rcno= @rcno "

                    '            commandRenewalUpdate.CommandText = qryRenewalUpdate
                    '            commandRenewalUpdate.Parameters.Clear()
                    '            commandRenewalUpdate.Parameters.AddWithValue("@OContractNo", "")
                    '            commandRenewalUpdate.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    '            commandRenewalUpdate.Connection = conn
                    '            commandRenewalUpdate.ExecuteNonQuery()

                    '            commandRenewalUpdate.Dispose()

                    '            '' Void the Termination Record in tblContractPriceHistory table for 1st Contract
                    '            Dim commandDeleteContractPriceHistory As MySqlCommand = New MySqlCommand
                    '            commandDeleteContractPriceHistory.CommandType = CommandType.Text

                    '            Dim qryDeleteContractPriceHistory As String = "UPDATE tblContractPriceHistory SET VOID = True where ContractNo= @ContractNo and Type ='TERMINATION'"

                    '            commandDeleteContractPriceHistory.CommandText = qryDeleteContractPriceHistory
                    '            commandDeleteContractPriceHistory.Parameters.Clear()
                    '            commandDeleteContractPriceHistory.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
                    '            commandDeleteContractPriceHistory.Connection = conn
                    '            commandDeleteContractPriceHistory.ExecuteNonQuery()

                    '            commandDeleteContractPriceHistory.Dispose()

                    '            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "RENEWAL TERMINATED", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "CONTRACT " & txtContractNo.Text.Trim & " HAS BEEN TERMINATED, RENEWAL INFORMATION IS CLEARED", txtRcno.Text)

                    '        End If

                    '        ''
                    '    End If
                    'End If

                    'txtOContract.Text = ""

                    ' ''23.06.19
                    '' Quoted on 07.04.21

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " Termination Code: " & strTerminationCode.Trim & " : " & txtCommentChSt.Text, txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    btnChangeStatus.Enabled = False
                    btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray

                    btnServiceSchedule.Enabled = False
                    btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

                    btnContractRenewal.Enabled = False
                    btnContractRenewal.ForeColor = System.Drawing.Color.Gray

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                    ''''''''''''''''''T

                    '''''''''''''''''''X
                ElseIf Left(ddlStatusChSt.Text, 1) = "X" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    ''''''''''''''''''''''''
                    Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
                    commandXIsServicePosted.CommandType = CommandType.Text

                    commandXIsServicePosted.CommandText = "select count(*) as IsPosted from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "'"

                    commandXIsServicePosted.Connection = conn

                    Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
                    Dim dtIsServicePosted As New DataTable
                    dtIsServicePosted.Load(drIsServicePosted)


                    If dtIsServicePosted.Rows(0)("IsPosted") > 0 Then
                        txtAlertStatus.Text = "CONTRACT HAS " & dtIsServicePosted.Rows(0)("IsPosted") & " POSTED SERVICE RECORD(S). CANNOT BE CANCELLED."
                        'updPanelContract1.Update()
                        txtAlertStatus.Visible = True
                        ModalPopupExtender5.Show()
                        'ModalPopupExtender5.Show()
                        'Exit Sub
                        Exit Sub
                    End If

                    commandXIsServicePosted.Dispose()
                    dtIsServicePosted.Dispose()
                    '''''''''''''''''''''''

                    Dim commandX1 As MySqlCommand = New MySqlCommand

                    commandX1.CommandType = CommandType.Text
                    'commandX1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"


                    commandX1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    commandX1.Connection = conn

                    Dim drserviceX As MySqlDataReader = commandX1.ExecuteReader()
                    Dim dtserviceX As New DataTable
                    dtserviceX.Load(drserviceX)

                    If dtserviceX.Rows.Count > 0 Then
                        'ChangeStatus()

                        For x As Integer = 0 To dtserviceX.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceX.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecX
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtserviceX.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecX:
                        Next
                        'Dim commandX2 As MySqlCommand = New MySqlCommand
                        'commandX2.CommandType = CommandType.Text
                        'commandX2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                        'commandX2.Connection = conn
                        'commandX2.ExecuteNonQuery()
                        'commandX2.Dispose()
                    End If

                    Dim commandX As MySqlCommand = New MySqlCommand
                    commandX.CommandType = CommandType.Text

                    Dim qryX As String = "UPDATE tblContract SET  Status ='X', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    commandX.CommandText = qryX
                    commandX.Parameters.Clear()

                    If txtActualEndChSt.Text = "" Then
                        commandX.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandX.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandX.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    commandX.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandX.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))

                    commandX.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    commandX.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    commandX.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandX.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    commandX.Connection = conn
                    commandX.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = "X"

                    commandX.Dispose()
                    commandX1.Dispose()
                    dtserviceX.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""
                    ''''''''''''''''''X


                    ''''''OPEN

                ElseIf Left(ddlStatusChSt.Text, 1) = "O" Then

                    '''''  ''''''''''''''''''''''''' OOOOOOOOOOOO
                    'If txtStatus.Text = "H" Then

                    '    txtOnHoldDateChSt.Attributes.Remove("disabled")
                    '    ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                    '    txtOnHoldDscriptionChSt.Attributes.Remove("disabled")
                    '    txtOnHoldCommentsChSt.Attributes.Remove("disabled")

                    '    'txtOnHoldDateChSt.Attributes.Add("disabled", "false")
                    '    'ddlOnHoldCodeChSt.Attributes.Add("disabled", "false")
                    '    'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "false")
                    '    'txtOnHoldCommentsChSt.Attributes.Add("disabled", "false")
                    'End If

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    'command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status ='H') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and ContractNo ='" & txtContractNo.Text & "'"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status ='H') and ContractNo ='" & txtContractNo.Text & "' and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            commandE2.CommandText = "update  tblServiceRecord set Status='O' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "

                    'If txtStatus.Text = "H" Then
                    If Left(txtStatus.Text, 1) = "H" Then
                        Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, OnHolddate=@OnHoldDate, OnHoldCode=@OnHoldCode, OnHoldDescription=@OnHoldDescription, OnHoldComments=@OnHoldComments, Actualend =@Actualend,  LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        command.CommandText = qryE
                        command.Parameters.Clear()

                        If ddlStatusChSt.SelectedIndex <> "-1" Then
                            command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        Else
                            'command.Parameters.AddWithValue("@Status", txtStatus.Text)
                            command.Parameters.AddWithValue("@Status", Left(txtStatus.Text, 1))
                        End If

                        command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)

                        command.Parameters.AddWithValue("@OnHolddate", DBNull.Value)
                        command.Parameters.AddWithValue("@OnHoldCode", "")
                        command.Parameters.AddWithValue("@OnHoldDescription", "")
                        command.Parameters.AddWithValue("@OnHoldComments", "")
                        command.Parameters.AddWithValue("@Actualend", DBNull.Value)

                        command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        command.Connection = conn
                        command.ExecuteNonQuery()

                        txtOnHoldComments.Text = ""
                        txtOnHoldDescription.Text = ""
                        txtOnHoldDate.Text = ""
                        txtOnHoldCode.Text = ""

                        txtActualEnd.Text = ""

                    Else
                        Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        command.CommandText = qryE
                        command.Parameters.Clear()

                        If ddlStatusChSt.SelectedIndex <> "-1" Then
                            command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        Else
                            'command.Parameters.AddWithValue("@Status", txtStatus.Text)
                            command.Parameters.AddWithValue("@Status", Left(txtStatus.Text, 1))
                        End If

                        command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        command.Connection = conn
                        command.ExecuteNonQuery()
                    End If

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    'txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    txtStatus.Text = "O - Open"
                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " " & txtCommentChSt.Text, txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""


                    ''''''''''' Contract

                ElseIf Left(ddlStatusChSt.Text, 1) = "V" Then
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    'command1.CommandText = "select 1 from tblServiceRecord where (Status <> 'O') and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate >= '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecV
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update tblServiceRecord set Status='V' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()


nextrecV:
                        Next

                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        'command.Parameters.AddWithValue("@Status", txtStatus.Text)
                        command.Parameters.AddWithValue("@Status", Left(txtStatus.Text, 1))
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    If txtActualEndChSt.Text = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command1.Dispose()
                    command.Dispose()
                    dtserviceE.Dispose()


                    '08.02.22

                    Dim commandV3 As MySqlCommand = New MySqlCommand
                    commandV3.CommandType = CommandType.Text
                    commandV3.CommandText = "update tblContractPriceHistory set Void = True where ContractNo = '" & txtContractNo.Text & "'"

                    commandV3.Connection = conn
                    commandV3.ExecuteNonQuery()
                    commandV3.Dispose()
                    '08.02.22

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""



                    '' 23.06.19
                    If ddlAgreementType.Text = "RENEWAL" Then

                        '''''
                        Dim commandPrevContractUpdate As MySqlCommand = New MySqlCommand
                        commandPrevContractUpdate.CommandType = CommandType.Text

                        'Dim qryPrevContractUpdate As String = "UPDATE tblContract SET  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = NULL where ContractNo= @ContractNo "
                        Dim qryPrevContractUpdate As String = "UPDATE tblContract SET  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = @ActualEnd where ContractNo= @ContractNo "

                        commandPrevContractUpdate.CommandText = qryPrevContractUpdate
                        commandPrevContractUpdate.Parameters.Clear()
                        commandPrevContractUpdate.Parameters.AddWithValue("@RenewalSt", "O")
                        'commandPrevContractUpdate.Parameters.AddWithValue("@RenewalDate", vbNull)
                        commandPrevContractUpdate.Parameters.AddWithValue("@RenewalContractNo", "")
                        'commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime())

                        'If txtActualEndChSt.Text = "" Then
                        '    commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                        'Else
                        strdate = DateTime.Parse(txtContractEnd.Text.Trim)
                        commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                        'End If

                        commandPrevContractUpdate.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
                        commandPrevContractUpdate.Connection = conn
                        commandPrevContractUpdate.ExecuteNonQuery()

                        commandPrevContractUpdate.Dispose()

                        '''

                        Dim commandRenewalUpdate As MySqlCommand = New MySqlCommand
                        commandRenewalUpdate.CommandType = CommandType.Text

                        Dim qryRenewalUpdate As String = "UPDATE tblContract SET  OContractNo = @OContractNo where rcno= @rcno "

                        commandRenewalUpdate.CommandText = qryRenewalUpdate
                        commandRenewalUpdate.Parameters.Clear()
                        commandRenewalUpdate.Parameters.AddWithValue("@OContractNo", "")
                        commandRenewalUpdate.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        commandRenewalUpdate.Connection = conn
                        commandRenewalUpdate.ExecuteNonQuery()

                        commandRenewalUpdate.Dispose()
                    End If

                    txtOContract.Text = ""

                    ''23.06.19

                ElseIf Left(ddlStatusChSt.Text, 1) = "C" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status <> 'O') and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecC
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecC:
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                        'command2.Dispose()
                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        'command.Parameters.AddWithValue("@Status", txtStatus.Text)
                        command.Parameters.AddWithValue("@Status", Left(txtStatus.Text, 1))
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    If txtActualEndChSt.Text = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    command.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))

                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()
                    command1.Dispose()
                    dtserviceE.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""
                    ''''''''''''''''''''''''''''''''''''''' R

                ElseIf Left(ddlStatusChSt.Text, 1) = "R" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    '26.01.20
                    txtContractDate.Text = DateTime.Parse(txtActualEndChSt.Text).AddDays(1).ToString("dd/MM/yyyy")
                    txtContractStart.Text = DateTime.Parse(txtActualEndChSt.Text).AddDays(1).ToString("dd/MM/yyyy")
                    txtServStart.Text = DateTime.Parse(txtActualEndChSt.Text).AddDays(1).ToString("dd/MM/yyyy")
                    txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
                    txtActualEndChStForRevise.Text = txtActualEndChSt.Text

                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateDates();</Script>", False)


                    'If rbtFixedContinuous.SelectedIndex = 1 Then
                    '    txtEndofLastSchedule.Text = DateTime.Parse(txtServStart.Text).AddYears(1).AddDays(-1).ToString("dd/MM/yyyy")
                    'Else

                    'End If

                    '26.01.20

                    Revise()

                    'commandT.Dispose()
                    'commandT1.Dispose()
                    'dtserviceT.Dispose()
                    '''''''''''''''''''''''''''''''''''' R
                ElseIf Left(ddlStatusChSt.Text, 1) = "H" Then
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='H' where  RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                        'command2.Dispose()
                    End If

                    ''''''''''' Contract

                    Dim hyphenpos As Integer
                    hyphenpos = 0
                    hyphenpos = (ddlOnHoldCodeChSt.Text.IndexOf(":"))

                    Dim OnHoldCode As String
                    OnHoldCode = Left(ddlOnHoldCodeChSt.Text, (hyphenpos - 1))
                    'txtOnHoldDscriptionChSt.Text = Right(ddlOnHoldCodeChSt.Text, Len(ddlOnHoldCodeChSt.Text) - (Len(OnHoldCode.Trim) + 3))


                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status, ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, OnHolddate=@OnHoldDate, OnHoldCode=@OnHoldCode, OnHoldDescription=@OnHoldDescription, OnHoldComments=@OnHoldComments, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        'command.Parameters.AddWithValue("@Status", txtStatus.Text)
                        command.Parameters.AddWithValue("@Status", Left(txtStatus.Text, 1))
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    'If txtActualEndChSt.Text = "" Then
                    '    command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    'Else
                    '    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                    '    command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    'End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    'strdate.ToString("yyyy-MM-dd")
                    'command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(txtOnHoldDateChSt.Text).ToString("yyyy-MM-dd"))

                    'command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(strdate.ToString("yyyy-MM-dd")))

                    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                    command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(strdate.ToString("yyyy-MM-dd")))
                    command.Parameters.AddWithValue("@OnHoldCode", OnHoldCode.Trim)
                    command.Parameters.AddWithValue("@OnHoldDescription", txtOnHoldDscriptionChSt.Text.Trim)
                    command.Parameters.AddWithValue("@OnHoldComments", txtOnHoldCommentsChSt.Text.Trim)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()

                    'txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    txtStatus.Text = "H - On Hold"

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()
                    command1.Dispose()
                    dtserviceE.Dispose()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' on or after " & txtActualEndChSt.Text, txtRcno.Text)
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " " & txtCommentChSt.Text, txtRcno.Text)


                    txtOnHoldComments.Text = txtOnHoldCommentsChSt.Text
                    txtOnHoldDescription.Text = txtOnHoldDscriptionChSt.Text
                    txtOnHoldDate.Text = txtActualEndChSt.Text
                    txtOnHoldCode.Text = OnHoldCode.Trim

                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    txtOnHoldCommentsChSt.Text = ""
                    txtOnHoldDscriptionChSt.Text = ""
                    txtOnHoldDateChSt.Text = ""
                    ddlOnHoldCodeChSt.SelectedIndex = 0

                End If '  If Left(ddlStatusChSt.Text, 1) = "E" Then

EndChangStatus:

                conn.Close()
                conn.Dispose()


                GridView1.DataBind()
                ModalPopupExtender5.Hide()
                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                lblAlert.Text = ""

                'InsertNewLog()

                'If Left(ddlStatusChSt.Text, 1) <> "R" Then
                '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, originalStatus & Left(ddlStatusChSt.Text, 1), txtRcno.Text)
                'End If

                'originalStatus = ""
                'ddlStatusChSt.SelectedIndex = 0
                'txtActualEndChSt.Text = ""
                'txtCommentChSt.Text = ""

                If CountBilledServiceRecords = 1 Then
                    lblAlert.Text = "The remaining " & CountBilledServiceRecords & " Service will not be voided because already BILLED"
                ElseIf CountBilledServiceRecords > 1 Then
                    lblAlert.Text = "The remaining " & CountBilledServiceRecords & " Services will not be voided because already BILLED"
                End If

            Else
                ModalPopupExtender5.Show()
            End If

InvalidStatus:
            txtIsPopup.Text = "N"
            If txtChangeStatus.Text = "000" Then

                txtAlertStatus.Text = "SELECTED STATUS IS SAME AS CURRENT STATUS"
                Exit Sub
            ElseIf txtChangeStatus.Text = "001" Then
                txtAlertStatus.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            ElseIf txtChangeStatus.Text = "002" Then
                txtAlertStatus.Text = "PLEASE SELECT VALID STATUS"
                Exit Sub
            ElseIf txtChangeStatus.Text = "003" Then
                txtAlertStatus.Text = "ACTUAL END DATE CANNOT BE BLANK"
                Exit Sub
            End If
            'txtIsPopup.Text = "N"
            txtIsPopupChSt.Text = ""
            ModalPopupExtender5.Hide()
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            txtAlertStatus.Visible = True
            txtAlertStatus.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "BtnChSt_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Private Sub EventLog_InsertL( _
        ByVal vStaffID As String, _
        ByVal vModule As String, _
        ByVal vDocRef As String, _
        ByVal vAction As String, _
        ByVal vLogDate As String, _
        ByVal vAmount As Double, _
        ByVal vBaseValue As Double, _
        ByVal vBaseGSTValue As Double, _
        ByVal vCustCode As String, _
        ByVal vComments As String, _
        Optional ByVal vSOURCESQLID As String = "")
        Try
            'EventLog_InsertL = False
            Dim strSql As String = "INSERT INTO tblEventLog (StaffID,Module,DocRef,Action,ComputerName," & _
                "Serial, LogDate, Amount,BaseValue,BaseGSTValue,CustCode,Comments,SOURCESQLID) " & _
                "VALUES (@StaffID, @Module, @DocRef, @Action, @ComputerName, @Serial, @LogDate, @Amount, @BaseValue, @BaseGSTValue, @CustCode, @Comments, @SOURCESQLID)"

            ''"'" & (vModule) & "', " & _
            '"'" & (vDocRef) & "', " & _
            '"'" & (vAction) & "', " & _
            '"'" & (Strings.Left(My.Computer.Name.ToString, 20)) & "'," & _
            '"''," & _
            'Convert.ToDateTime(vLogDate) & ", " & _
            'Val(vAmount) & "," & Val(vBaseValue) & "," & Val(vBaseGSTValue) & "," & _
            '"'" & (vCustCode) & "','" & (vComments) & "','" & (vSOURCESQLID) & "') ")
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "100 : " & "", txtIsTerminationExists.Text, txtContractNo.Text)
           
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            command.CommandText = strSql
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@StaffID", vStaffID)
            command.Parameters.AddWithValue("@Module", vModule)
            command.Parameters.AddWithValue("@DocRef", vDocRef)
            command.Parameters.AddWithValue("@Action", vAction)
            command.Parameters.AddWithValue("@ComputerName", Strings.Left(My.Computer.Name.ToString, 20))
            command.Parameters.AddWithValue("@Serial", "")
            'command.Parameters.AddWithValue("@LogDate", Convert.ToDateTime(vLogDate))
            command.Parameters.AddWithValue("@LogDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            command.Parameters.AddWithValue("@Amount", Val(vAmount))
            command.Parameters.AddWithValue("@BaseValue", Val(vBaseValue))
            command.Parameters.AddWithValue("@BaseGSTValue", vBaseGSTValue)
            command.Parameters.AddWithValue("@CustCode", vCustCode)
            command.Parameters.AddWithValue("@Comments", vComments)
            command.Parameters.AddWithValue("@SOURCESQLID", vSOURCESQLID)
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            'EventLog_InsertL = True
        Catch ex As Exception
            MsgBox("EventLog_Insert " & ex.Message.ToString)
            'EventLog_InsertL = False
        End Try

        '"'" & Get_DiskSerial("C") & "'," & _
        '"" & Convert.ToDateTime(vLogDate).ToString("yyyy-MM-dd") & ", " & _
    End Sub

    Private Sub ChangeStatus()

    End Sub

    Protected Sub RetrieveLocation()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT LocateGRP FROM tblpostaltolocation where postalbeginwith=@postalbeginwith"
            command1.Parameters.AddWithValue("@postalbeginwith", txtPostal.Text.Substring(0, 2))
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("LocateGRP").ToString <> "" Then
                    ddlLocateGrp.Text = dt.Rows(0)("LocateGRP").ToString
                End If
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION RetrieveLocation", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub txtPostal_TextChanged(sender As Object, e As EventArgs) Handles txtPostal.TextChanged
        Try
            If String.IsNullOrEmpty(txtPostal.Text) = False Then
                RetrieveLocation()
            End If
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPostal_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnRevision_Click(sender As Object, e As EventArgs) Handles btnRevision.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""

            'If txtStatus.Text <> "O" Then
            If Left(txtStatus.Text, 1) <> "O" Then
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.Items.Add("R - Revised")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If

            If txtRcno.Text = "" Then
                lblAlert.Text = "SELECT RECORD TO REVISE"
                Return
            End If

            txtIsPopupChSt.Text = "ContractNo"
            'DisableControls()
            'txtMode.Text = "EDIT"
            lblMessage.Text = "ACTION: REVISE RECORD"

            '''''''''''''''''''''''''''''''''
            BtnChSt.Text = "Continue"
            ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")
            ddlStatusChSt.Items.Add("R - Revised")

            txtAlertStatus.Visible = False
            ddlStatusChSt.SelectedIndex = 0
            ddlTerminationCode.Attributes.Remove("disabled")
            tb1.ActiveTabIndex = 0

            If String.IsNullOrEmpty(txtContractRevisionTerminationCode.Text) = False Then
                ddlTerminationCode.Text = txtContractRevisionTerminationCode.Text
            End If

            lblActualEnd.Text = "Actual End"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = True
            Label62.Visible = True
            ddlTerminationCode.Visible = True

            lblCommetsChSt.Visible = True
            txtCommentChSt.Visible = True
            Label66.Visible = True


            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False

            txtOnHoldDscriptionChSt.Visible = False
            txtOnHoldCommentsChSt.Visible = False


            If txtFutureDated.Text = "Y" Then
                txtActualEndChSt.Text = txtContractStart.Text
                'txtActualEndChSt.Attributes.Add("disabled", "true")
                'txtActualEndChSt.Attributes.Add("readonly", "readonly")
            Else
                txtActualEndChSt.Attributes.Remove("disabled")
                txtActualEndChSt.Text = ""
            End If

            'document.getElementById("<%=ddlOnHoldCodeChSt.ClientID%>").style.display = 'none';
            'ddlOnHoldCodeChSt.Attributes.Add("visible", "false")
            ModalPopupExtender5.Show()

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRevision_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Private Sub Revise()
        txtMode.Text = "NEW"
        txtModeRenew.Text = "REV"
        EnableControls()
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black

        ddlContractGrp.Enabled = False
        ''''''''



        btnADD.Enabled = False
        btnCopy.Enabled = False
        btnRevision.Enabled = False
        btnSearch.Enabled = False
        btnReset.Enabled = False
        btnPrint.Enabled = False
        btnContractRenewal.Enabled = False
        btnServiceRecords.Enabled = False
        btnTransactions.Enabled = False
        btnEdit.Enabled = False
        btnChangeStatus.Enabled = False
        btnPrint.Enabled = False
        'btnHistory.Enabled = False
        btnRecalculate.Visible = False
        btnADD.ForeColor = System.Drawing.Color.Gray
        btnCopy.ForeColor = System.Drawing.Color.Gray
        btnRevision.ForeColor = System.Drawing.Color.Gray
        btnSearch.ForeColor = System.Drawing.Color.Gray
        btnReset.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
        btnContractRenewal.ForeColor = System.Drawing.Color.Gray
        btnServiceRecords.ForeColor = System.Drawing.Color.Gray
        btnTransactions.ForeColor = System.Drawing.Color.Gray
        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
        'btnHistory.ForeColor = System.Drawing.Color.Gray

        updPanelContract1.Update()

        lblFileUploadCount.Text = "File Upload"
        lblServiceDetailsCount.Text = "Service Details"
        lblNotesCount.Text = "Notes"
        lblItemsIssuedCount.Text = "Items Issued"
        lblRatescheduleCount.Text = "Schedule of Rate"

        txtPrevContract.Text = txtContractNo.Text
        txtAgreeValueOriginalForReviseandRenewal.Text = txtAgreeVal.Text

        txtSignedAgreementReference.Text = "Signed Service Agreement"
        Try
            If String.IsNullOrEmpty(txtMainContractNo.Text) = True Then
                txtMainContractNo.Text = txtContractNo.Text
                'txtContractNo.Text = txtContractNo.Text + "-001"

                '19.06.22

                txtContractNoTemp.Text = txtContractNo.Text + "-001"
                txtContractNo.Text = ""
                '19.06.22
            Else

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT count(MainContractNo) as rocc FROM tblContract where MainContractNo=@ContractNo"
                command1.Parameters.AddWithValue("@ContractNo", txtMainContractNo.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

             
                'If dt.Rows.Count = 0 Then
                '    txtContractNo.Text = txtContractNo.Text + "-001"
                'Else
                '    Dim suffix As Integer
                '    suffix = Val(dt.Rows(0)("rocc").ToString) + 1

                '    If (suffix.ToString.Length) = 1 Then
                '        txtContractNo.Text = txtMainContractNo.Text + "-" + "00" & suffix
                '    ElseIf (suffix.ToString.Length) = 2 Then
                '        txtContractNo.Text = txtMainContractNo.Text + "-" + "0" & suffix
                '    End If

                'End If

                '19.06.22
                If dt.Rows.Count = 0 Then
                    txtContractNoTemp.Text = txtContractNo.Text + "-001"
                    txtContractNo.Text = ""
                Else
                    Dim suffix As Integer
                    suffix = Val(dt.Rows(0)("rocc").ToString) + 1

                    If (suffix.ToString.Length) = 1 Then
                        txtContractNoTemp.Text = txtMainContractNo.Text + "-" + "00" & suffix
                    ElseIf (suffix.ToString.Length) = 2 Then
                        txtContractNoTemp.Text = txtMainContractNo.Text + "-" + "0" & suffix
                    End If
                    txtContractNo.Text = ""
                End If

                '19.06.22
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            End If

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtPrevContract.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtStatus.Text & Left(ddlStatusChSt.Text, 1), txtRcno.Text)

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtPrevContract.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from 'O' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

            txtRcnoRenew.Text = txtRcno.Text

            ddlAgreementType.Items.Clear()
            ddlAgreementType.Items.Add("--SELECT--")
            ddlAgreementType.Items.Add("REVISION")

            ddlAgreementType.SelectedIndex = 1
            'ddlAgreementType.Items.Add("NO PRICE CHANGE")
            'ddlAgreementType.Items.Add("PRICE INCREASE")
            'ddlAgreementType.Items.Add("PRICE DECREASE")

            If txtAgreementTypeContractCode.Text <> "0" Then
                ddlAgreementType.Enabled = True
                ddlContractCode.Enabled = True
            End If
            'ddlAgreementType.Enabled = True

            'txtAgreeVal.Text = "0.00"
            'txtConDetVal.Text = "0.00"

            'txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
            'txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")
            'txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
            'txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper

            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = "0"
            txtValPerMnth.Text = ""
            'txtStatus.Text = "O"
            txtStatus.Text = "O - Open"
            txtRs.Text = "O"
            txtNS.Text = "O"
            txtProspectId.Text = ""
            txtGS.Text = "O"
            txtPrintBody.Text = ""

            txtPortfolioValue.Text = "0.00"

            txtServiceNo.Text = "0.00"
            txtServiceAmt.Text = "0.00"
            txtServiceNoActual.Text = "0.00"
            txtServiceBal.Text = "0.00"
            txtServiceAmtActual.Text = "0.00"
            txtTotalArea.Text = "0.00"
            txtCompletedArea.Text = "0.00"
            txtBalanceArea.Text = "0.00"
            txtServiceAmtBal.Text = "0.00"

            txtBillingAmount.Text = "0.00"
            txtRetentionPerc.Text = "0"
            txtRetentionValue.Text = "0.00"

            txtWarrantyBillingAmount.Text = "0.00"
            txtBaitStationTotal.Text = "0.00"
            txtBaitStationInstalled.Text = "0.00"
            txtBaitStationBalance.Text = "0.00"

            ''''''''''''''''''''''
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""

            'lblMessage.Text = ""
            'lblAlert.Text = ""
            'txtMode.Text = ""

            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""
            txtLastBillDate.Text = ""
            'txtValPerMnth.Text = "0.00"
            'txtContractNotes.Text = ""
            'txtServInst.Text = ""
            'txtStatus.Text = "O"
            ''txtCustName.Text = ""
            'txtRs.Text = "O"
            'txtAddress.Text = ""
            'txtOfficeAddress.Text = ""
            'txtNS.Text = "O"
            'txtProspectId.Text = ""

            'txtAccCode.Text = ""
            'txtPostal.Text = ""

            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""

            ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0
            txtServStartSvc.Text = ""
            txtServStartDaySvc.Text = ""
            txtServEndSvc.Text = ""
            txtServEndDaySvc.Text = ""
            lblContractNo.Text = ""
            lblAccountID.Text = ""
            lblName.Text = ""

            txtTerminationCode.Text = ""
            txtTerminationDescription.Text = ""
            txtActualEnd.Text = ""
            txtActualServiceStart.Text = ""
            txtContractDateOriginal.Text = ""
           

            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False
            btnServiceRecords.Text = "SERVICE "
            btnTransactions.Text = "TRANSACTIONS"
            btnHistory.Text = "PRICE HISTORY"

            ddlScheduler.Text = Session("StaffID")

            'ddlContractCode.Items.Clear()
            ddlContractCode.Text = txtRevisionNewContract.Text

            FindDuration()


            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            Query = "Select descrip1 from tblTarget order by descrip1"

            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False
            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs where UnitType = 'AREA'"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)

            '''''''''''''''''''''''
            'MakeSvcNull()
            'MakeSvcDetailNull()
            MakeCommNull()
            MakeNotesNull()

            MakeRateScheduleNull()

            btnClient0.Visible = False
            'btnClient1.Visible = False
            btnMultiplePO.Visible = False '25.10.21
            btnClient2.Visible = False
            btnClient3.Visible = False
            btnClient4.Visible = False
            btnClient5.Visible = False
            btnClient6.Visible = False
            btnClient7.Visible = False
            btnClient8.Visible = False
            btnClient9.Visible = False
            btnClient10.Visible = False

            btnAutoRenew.Visible = False
            btnHistory.Visible = False
            btnExtendContractEndDate.Visible = False

            btnClient11.Visible = False
            btnClient12.Visible = False
            '''
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION Revise", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub btnTerminate_Click(sender As Object, e As EventArgs) Handles btnTerminate.Click
        'txtDuration.Text = "T"
        'ModalPopupExtender3.Show()
    End Sub

    Protected Sub btnCancelByCompany_Click(sender As Object, e As EventArgs) Handles btnCancelByCompany.Click
        'ModalPopupExtender4.Show()
    End Sub

    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        Try
            lblAlert.Text = ""
            txtPopUpClient.Text = ""
            If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
                '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
                lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
                Exit Sub
            End If

            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
                txtContType3.Text = "CORPORATE"
                txtContType4.Text = "COMPANY"
            Else
                txtContType1.Text = "RESIDENTIAL"
                txtContType2.Text = "PERSON"
                txtContType3.Text = "RESIDENTIAL"
                txtContType4.Text = "PERSON"
            End If


            If String.IsNullOrEmpty(txtOriginalAccountId.Text) = False Then
                Dim confirmValue As String
                confirmValue = ""

                confirmValue = Request.Form("confirm_value")
                If Right(confirmValue, 3) = "Yes" Then

                Else
                    Exit Sub
                End If
            End If


            txtSearchPopup.Text = "SELECTION"


            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountId.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman,A.Industry,A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where 1=1 and  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location From tblPERSON A Left join tblPersonLocation b on A.Accountid = B.Accountid where 1=1 and  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman,A.Industry,A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, A.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where 1=1 and  A.InActive = False and  (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation b on A.Accountid = B.Accountid where 1=1 and  A.InActive = False and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    End If
                End If
              

                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  1=1 and   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by A.Accountid, b.LocationId "
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by A.Accountid, b.LocationId "
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"
                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION btnClient_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub IsContractDateHoliday()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Holiday FROM tblHoliday where Holiday= '" & Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Holiday").ToString <> "" Then
                    txtContractStart.ForeColor = Drawing.Color.Red
                End If

            Else
                txtContractStart.ForeColor = Drawing.Color.Black
            End If


            'If dt.Rows.Count > 0 Then
            '    If dt.Rows(0)("Holiday").ToString <> "" Then
            '        txtContractStart.ForeColor = Drawing.Color.Red
            '    Else
            '        txtContractStart.ForeColor = Drawing.Color.Black
            '    End If
            'End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION IsContractDateHoliday", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    
    Protected Sub txtContractStart_TextChanged(sender As Object, e As EventArgs) Handles txtContractStart.TextChanged
        IsContractDateHoliday()

        'If IsContractPeriodlocked() = True Then
        '    lblAlert.Text = "CONTRACT START PERIOD IS LOCKED"
        '    updPanelContract1.Update()
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    txtContractStart.Focus()
        'End If
        

    End Sub

    Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        lblAlert.Text = ""
        Try
            'If txtStatus.Text = "P" Then
            If Left(txtStatus.Text, 1) = "P" Then
                lblAlert.Text = "Contract has already been POSTED.. CANNOT BE DELETED"
                'Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

                Exit Sub
            End If

            'If txtStatus.Text = "V" Then
            If Left(txtStatus.Text, 1) = "V" Then
                lblAlert.Text = "Contract is VOID.. CANNOT BE DELETED"
                'Dim message2 As String = "alert('Contract is VOID.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message2, True)

                Exit Sub
            End If


            If txtGS.Text = "P" Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED.. CANNOT BE DELETED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If





            lblAlert.Text = ""
            lblMessage.Text = "ACTION: DELETE RECORD"

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                Dim qry1 As String = "DELETE from tblContract where ContractNo= @ContractNo "

                command1.CommandText = qry1
                command1.Parameters.Clear()
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command1.Connection = conn
                command1.ExecuteNonQuery()

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim qry2 As String = "DELETE from tblContractDet where ContractNo= @ContractNo "

                command2.CommandText = qry2
                command2.Parameters.Clear()
                command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command2.Connection = conn
                command2.ExecuteNonQuery()

                Dim command3 As MySqlCommand = New MySqlCommand
                command3.CommandType = CommandType.Text

                Dim qry3 As String = "DELETE from tblContractServingTarget where ContractNo= @ContractNo "

                command3.CommandText = qry3
                command3.Parameters.Clear()
                command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command3.Connection = conn
                command3.ExecuteNonQuery()

                Dim command4 As MySqlCommand = New MySqlCommand
                command4.CommandType = CommandType.Text

                Dim qry4 As String = "DELETE from tblServiceContractFrequency where ContractNo= @ContractNo "

                command4.CommandText = qry4
                command4.Parameters.Clear()
                command4.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command4.Connection = conn
                command4.ExecuteNonQuery()

                conn.Close()
                conn.Dispose()
                command1.Dispose()
                command2.Dispose()
                command3.Dispose()
                command4.Dispose()

                lblContractNo.Text = ""
                lblAccountID.Text = ""
                lblName.Text = ""

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)


                'btnADD_Click(sender, e)
                MakeMeNull()
                MakeSvcDetailNull()

                'txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit 50"
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SqlDSContract"

                GridView1.DataBind()

                grvContractDetail.DataBind()
                lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDelete_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    
    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting
        Try
            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
            ElseIf GridSelected = "SQLDSContractClientId" Then
                'SqlDataSource1.SelectCommand = txt.Text
                SQLDSContractClientId.DataBind()
            ElseIf GridSelected = "SQLDSContractNo" Then
                ''SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
            End If

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_Sorting", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    

    Protected Sub btnChangeStatus_Click(sender As Object, e As EventArgs) Handles btnChangeStatus.Click
        'txtActualEndChSt.Text = Date()
        Try
            BtnChSt.Text = "Save"
            txtIsPopupChSt.Text = "ContractNo"
            lblAlert.Text = ""
            txtAlertStatus.Text = ""
            txtAlertStatus.Visible = False
            'ddlTerminationCode.Attributes.Add("disabled", "true")

            ddlStatusChSt.Items.Clear()
            ddlStatusChSt.Items.Add("--SELECT--")

            'If txtStatus.Text = "O" Then
            If Left(txtStatus.Text, 1) = "O" Then
                ddlStatusChSt.SelectedIndex = 0
            End If


            txtContractNoChSt.Text = txtContractNo.Text
            txtCustomerNameChSt.Text = txtCustName.Text



            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    txtActualEndChSt.Enabled = True
            'ElseIf txtStatus.Text = "E" Then
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    txtActualEndChSt.Enabled = True
            'ElseIf txtStatus.Text = "H" Then
            '    ddlStatusChSt.Items.Add("O - Open")

            'End If

            'ddlTerminationCode.Attributes.Add("disabled", "true")
            'txtCommentChSt.Attributes.Add("disabled", "true")
            'ddlTerminationCode.Attributes.Add("disabled", "true")
            'ddlOnHoldCodeChSt.Attributes.Add("disabled", "true")
            'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "true")
            'txtOnHoldCommentsChSt.Attributes.Add("disabled", "true")

            'If txtStatus.Text = "O" Then
            If Left(txtStatus.Text, 1) = "O" Then
                'If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                '    ddlStatusChSt.Items.Add("T - Terminated")
                'Else
                '    ddlStatusChSt.Items.Add("H - On Hold")
                '    ddlStatusChSt.Items.Add("T - Terminated")
                'End If

                lblTermType.Visible = False
                txtTerminationTypeChSt.Visible = False

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                        ddlStatusChSt.Items.Add("T - Terminated")
                        'ddlStatusChSt.Items.Add("R - Revised") '29.01.22
                    Else
                        ddlStatusChSt.Items.Add("H - On Hold")
                        ddlStatusChSt.Items.Add("T - Terminated")

                        'ddlStatusChSt.Items.Add("R - Revised") '29.01.22
                        ddlStatusChSt.Items.Add("V - Void") '29.01.22
                    End If
                Else
                    If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                        ddlStatusChSt.Items.Add("T - Terminated")
                        'ddlStatusChSt.Items.Add("R - Revised") '29.01.22
                    Else
                        ddlStatusChSt.Items.Add("H - On Hold")
                        ddlStatusChSt.Items.Add("T - Terminated")

                        'ddlStatusChSt.Items.Add("R - Revised")  '29.01.22
                        ddlStatusChSt.Items.Add("V - Void") '29.01.22
                    End If
                End If

                txtActualEndChSt.Enabled = True

                'ElseIf txtStatus.Text = "E" Then
            ElseIf Left(txtStatus.Text, 1) = "E" Then
                ddlStatusChSt.Items.Add("T - Terminated")

                If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                    txtActualEndChSt.Text = txtActualEnd.Text
                    'txtActualEndChSt.Enabled = False

                    'txtActualEndChSt.Attributes.Add("readonly", "readonly")
                    'txtActualEndChSt.Enabled = True
                    txtActualEndChSt.Enabled = False
                End If

                'ElseIf txtStatus.Text = "H" Then
            ElseIf Left(txtStatus.Text, 1) = "H" Then

                ddlStatusChSt.Items.Add("O - Open")
                ddlStatusChSt.Items.Add("T - Terminated")
                txtActualEndChSt.Enabled = True

                lblTermType.Visible = False
                txtTerminationTypeChSt.Visible = False

                ddlOnHoldCodeChSt.Text = txtOnHoldCode.Text + " : " + txtOnHoldDescription.Text
                txtOnHoldDscriptionChSt.Text = txtOnHoldDescription.Text
                txtOnHoldCommentsChSt.Text = txtOnHoldComments.Text

            End If
            tb1.ActiveTabIndex = 0

            'to be modfied
            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim IsPosted As Integer
            'IsPosted = 0

            'Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
            'commandXIsServicePosted.CommandType = CommandType.Text

            'commandXIsServicePosted.CommandText = "select Rcno from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "' limit 1"
            'commandXIsServicePosted.Connection = conn

            'Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
            'Dim dtIsServicePosted As New DataTable
            'dtIsServicePosted.Load(drIsServicePosted)

            'If dtIsServicePosted.Rows.Count > 0 Then
            '    IsPosted = 1
            'End If


            'If txtStatus.Text = "O" And txtRs.Text = "O" And IsPosted = 0 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    ddlStatusChSt.Items.Add("X - Cancelled")
            '    ddlStatusChSt.Items.Add("V - Void")
            'ElseIf txtStatus.Text = "O" And txtRs.Text = "O" And IsPosted = 1 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    'ddlStatusChSt.Items.Add("X - Cancelled")
            '    'ddlStatusChSt.Items.Add("V - Void")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If

            'conn.Close()
            'conn.Dispose()
            'dtIsServicePosted.Dispose()

            'to be modfied

            '13.01.21
            txtOpenService.Text = "N"
            'If Left(txtStatus.Text, 1) = "E" Then

            Dim sqlstrO As String
            sqlstrO = ""

            sqlstrO = "SELECT count(RecordNo) as OpenServiceRecord FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and Status ='O'"

            Dim commandO As MySqlCommand = New MySqlCommand

            Dim connO As MySqlConnection = New MySqlConnection()
            connO.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connO.Open()

            commandO.CommandType = CommandType.Text
            commandO.CommandText = sqlstrO
            commandO.Connection = connO

            Dim drO As MySqlDataReader = commandO.ExecuteReader()
            Dim dtO As New DataTable
            dtO.Load(drO)

            If dtO.Rows.Count > 0 Then
                If dtO.Rows(0)("OpenServiceRecord").ToString > 0 Then
                    txtOpenService.Text = "Y"
                    'mdlTerminateExpiredContracts.Show()
                    'ModalPopupExtender5.Hide()
                    'Exit Sub
                End If
            End If

            'End If
            '13.01.21
            ''''''''''''

            connO.Close()
            connO.Dispose()
            commandO.Dispose()


            ''15.06.21

            Dim sqlstr1 As String
            sqlstr1 = ""

            sqlstr1 = "SELECT count(ContractNo) as ActiveContract FROM tblContract where ((Status ='O') or (Status='H')) and AccountId = '" & txtAccountId.Text.Trim & "' and ContractGroup ='" & ddlContractGrp.Text.Trim & "' and ContractNo <> '" & txtContractNo.Text.Trim & "'"

            Dim command1 As MySqlCommand = New MySqlCommand

            Dim conn1 As MySqlConnection = New MySqlConnection()
            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()

            command1.CommandType = CommandType.Text
            command1.CommandText = sqlstr1
            command1.Connection = conn1

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                If dt1.Rows(0)("ActiveContract").ToString > 0 Then
                    txtTerminationTypeChSt.Text = "DOWNGRADE"
                Else
                    txtTerminationTypeChSt.Text = "TERMINATION"

                End If
            End If


            ''''''''''''
            conn1.Close()
            conn1.Dispose()
            command1.Dispose()

            ''15.06.21

            lblActualEnd.Visible = False
            txtActualEndChSt.Visible = False
            Label29.Visible = False


            lblTermCode.Visible = False
            Label62.Visible = False
            ddlTerminationCode.Visible = False

            lblCommetsChSt.Visible = False
            txtCommentChSt.Visible = False
            Label66.Visible = False

            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False


            '''''''''''''''''
            ModalPopupExtender5.Show()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnChangeStatus_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    ''''''' Start: Service Details

    Private Sub fGetInterval()
        lblInterval.Text = ""
        Select Case txtFrequency.Text.ToUpper
            Case "DAILY"
                lblInterval.Text = "Days"
            Case "WEEKLY", "TWICE-WEEKLY"
                lblInterval.Text = "Wks"
            Case "BI-WEEKLY", "FORTNIGHTLY"
                lblInterval.Text = "Bi-wks"
            Case "TRI-WEEKLY"
                lblInterval.Text = "Tri-wks"
            Case "MONTHLY", "THRICE-MONTHLY"
                lblInterval.Text = "Mths"
            Case "BI-MONTHLY"
                lblInterval.Text = "Bi-mths"
            Case "QUARTERLY"
                lblInterval.Text = "Quarterly"
            Case "HALF-ANNUALLY"
                lblInterval.Text = "Half-Annually"
            Case "THRICE-ANNUALLY"
                lblInterval.Text = "Thrice-Annually"
            Case "ANNUALLY"
                lblInterval.Text = "Annually"
            Case "BI-ANNUALLY"
                lblInterval.Text = "Bi-Annually"
        End Select
    End Sub


    Private Function pWeekNumber(ByVal pDate As Date) As Integer
        pWeekNumber = 0
        Dim temp As String = Math.Round((pDate.Day - 1) / 7, 1)
        If temp.Contains(".") Then temp = temp.Substring(0, temp.IndexOf("."))
        pWeekNumber = 1 + temp
    End Function


    '''''''''' Start: Frequency



    Private Sub FirstGridViewRowFreq()
        Try
            Dim dtFreq As New DataTable()
            Dim drFreq As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dtFreq.Columns.Add(New DataColumn("SeqNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("FreqMTD", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("MonthNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("DayNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekDOW", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("Location", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("BranchID", GetType(String)))

            dtFreq.Columns.Add(New DataColumn("ContractNoF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("SourceSQLIDF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("RcnoF", GetType(String)))

            drFreq = dtFreq.NewRow()

            drFreq("SeqNo") = "001"
            drFreq("FreqMTD") = String.Empty
            drFreq("MonthNo") = String.Empty
            drFreq("DayNo") = String.Empty
            drFreq("WeekNo") = String.Empty
            drFreq("WeekDOW") = String.Empty
            drFreq("Location") = String.Empty
            drFreq("BranchID") = String.Empty

            drFreq("ContractNoF") = String.Empty
            drFreq("SourceSQLIDF") = 0
            drFreq("RcnoF") = 0
            dtFreq.Rows.Add(drFreq)

            ViewState("CurrentTableFreq") = dtFreq

            grvFreqDetails.DataSource = dtFreq
            grvFreqDetails.DataBind()

            'Dim btnAdd As Button = CType(grvTargetDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowFreq()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("SeqNo") = ""
                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()



                    If txtFrequencyDesc.Text = "DAILY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")

                        TextBoxWeekDOW.Enabled = False
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If
                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                  

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If
                    '    'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                    '    rowIndex2 += 1
                    '    j += 1
                    'Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    ''Dim i5 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select * from Spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")

                    'dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecFreq()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()


                    If txtFrequencyDesc.Text = "DAILY" Then
                        'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        'TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 2
                        End If

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If

                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        'TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If
                    'Dim rowIndex1 As Integer = 0

                    'For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                    '    Dim TextBoxTargetDesc1 As DropDownList = CType(grvFreqDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    '    Query = "Select * from tblTarget"
                    '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)
                    '    'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and  BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                    '    rowIndex1 += 1
                    'Next j

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    ''Dim i7 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from Spare where  VATRate > 0.00 and   CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowWithDetailRecFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataFreq()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If txtFrequencyDesc.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                            If rowIndex = 0 Then
                                TextBoxWeekNo.Text = 1
                            ElseIf rowIndex = 1 Then
                                TextBoxWeekNo.Text = 2
                            ElseIf rowIndex = 2 Then
                                TextBoxWeekNo.Text = 3
                            ElseIf rowIndex = 3 Then
                                TextBoxWeekNo.Text = 4
                            End If

                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            If rowIndex = 0 Then
                                TextBoxWeekNo.Text = 1
                            ElseIf rowIndex = 1 Then
                                TextBoxWeekNo.Text = 3
                            End If

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                        ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper


                        ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekDOW.Text = gDOW
                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True

                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekNo.Text = "1"
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekNo.Enabled = False
                            TextBoxFreqMTD.Enabled = False
                            TextBoxWeekDOW.Text = gDOW

                            'If TextBoxSeqNo.Text = "001" Then
                            '    TextBoxWeekDOW.Enabled = False
                            'End If

                            If TextBoxSeqNo.Text = "001" Then
                                TextBoxWeekDOW.Enabled = True
                            End If
                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If

                        'If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                        '    Query = "Select * from tblTarget"
                        '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        'End If


                        rowIndex += 1
                    Next i
                End If
            End If

        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreq", ex.Message.ToString, "")
            Exit Sub


            SetPreviousDataFreq()
        End Try
    End Sub

    Private Sub SetRowDataFreq()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.Text
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.Text
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text

                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableFreq") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetRowDataFreq", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    '''''''''''''''''''''''''''''''''

    Private Sub AddNewRowFreqEdit()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()


                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1


                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqEdit()
        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub




    Private Sub SetPreviousDataFreqEdit()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If TextBoxFreqMTD.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMTD.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                                TextBoxFreqMTD.Enabled = False
                            End If


                        ElseIf TextBoxFreqMTD.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If


                        rowIndex += 1

                        If txtFrequencyDesc.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            ''TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("MONTH")



                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DATE").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DATE")
                            End If

                            'TextBoxFreqMTD.Items.Add("DATE")
                            'TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            'TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString()

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("DATE")

                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("MONTH").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("MONTH")
                            End If

                            'TextBoxWeekNo.Enabled = True
                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            'TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString()
                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True
                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If
                    Next i


                End If
            End If
        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    ''''''''''''''''''''''''''''''


    '''
    Public Function HighlightDuplicateFreq(ByVal gridview As GridView) As Boolean
        Try
            Dim HasDuplicateFrequency As Boolean = False

            For currentRow As Integer = 0 To gridview.Rows.Count - 2
                Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

                For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                    Dim row As GridViewRow = gridview.Rows(otherRow)
                    Dim duplicateRow As Boolean = False

                    Dim TextBoxSeqGV As TextBox = CType(grvFreqDetails.Rows(currentRow).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                    Dim TextBoxdWeekDOWGVGV As DropDownList = CType(grvFreqDetails.Rows(currentRow).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                    Dim TextBoxdWeekDOWGVGV1 As DropDownList = CType(grvFreqDetails.Rows(otherRow).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)

                    'If TextBoxdWeekDOWGVGV.Text = "-1" And TextBoxdWeekDOWGVGV1.Text = "-1" Then

                    '    'duplicateRow = False
                    '    'HasDuplicateFrequency = False

                    '    'TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.White
                    '    'TextBoxdWeekDOWGVGV.BackColor = TextBoxSeqGV.BackColor

                    '    Return HasDuplicateFrequency
                    '    Exit Function
                    'End If


                    Dim currentBacColor = TextBoxdWeekDOWGVGV.BackColor


                    If ((TextBoxdWeekDOWGVGV.Text) = (TextBoxdWeekDOWGVGV1.Text)) Then

                        If TextBoxdWeekDOWGVGV.Text = "-1" And TextBoxdWeekDOWGVGV1.Text = "-1" Then
                            GoTo nextrec
                        End If
                        duplicateRow = True

                        TextBoxdWeekDOWGVGV.BackColor = Drawing.Color.LightCoral
                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.LightCoral

                        'TextBoxdWeekDOWGVGV.BackColor = Drawing.Color.LightCoral
                        'TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.LightCoral

                        'Dim custVal As New CustomValidator()
                        'custVal.IsValid = False
                        'custVal.ErrorMessage = ""
                        'custVal.ErrorMessage = "Week Day Already Exists"
                        'custVal.EnableClientScript = True

                        'custVal.ValidationGroup = "VGroup"
                        'Me.Page.Form.Controls.Add(custVal)

                        HasDuplicateFrequency = True
                        Return HasDuplicateFrequency


                    Else
                        duplicateRow = False
                        HasDuplicateFrequency = False

                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.White
                        TextBoxdWeekDOWGVGV.BackColor = TextBoxSeqGV.BackColor
                    End If
nextrec:
                Next otherRow
            Next currentRow

            Return HasDuplicateFrequency
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "HighlightDuplicateFreq", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Function


    Protected Sub grvFreqDetails_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvFreqDetails.RowDeleting
        '    Try

        '        Dim Query As String
        '        SetRowDataFreq()

        '        Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)


        '        If ViewState("CurrentTableFreq") IsNot Nothing Then
        '            'Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
        '            'Dim drCurrentRow As DataRow = Nothing
        '            'Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)
        '            ''
        '            'Dim CatIdGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(13).FindControl("ddlCatIdGV"), TextBox)
        '            'Dim SpareIdGV As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlSpareIdGV"), DropDownList)
        '            'Dim TransIdDetailGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(9).FindControl("txtTransIdDetailGV"), TextBox)

        '            'If Convert.ToInt32(TransIdDetailGV.Text) > 0 Then
        '            '    'DropDownList SpareIdGV = (DropDownList)grvTargetDetails.Rows[rowIndex].Cells[0].FindControl("ddlSpareIdGV");
        '            '    Dim SpareSerialNoGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("ddlSpareSerialNoGV"), TextBox)
        '            '    Dim QuantityGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtQuantityGV"), TextBox)
        '            '    Dim TotalGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(7).FindControl("txtTotalGV"), TextBox)

        '            '    'Delete

        '            '    objBL.CompId = Convert.ToInt32(HttpContext.Current.Session("CompId"))
        '            '    objBL.BranchId = Convert.ToInt32(HttpContext.Current.Session("BranchId"))
        '            '    objBL.AccessBy = Convert.ToInt32(HttpContext.Current.Session("UserId"))
        '            '    objBL.TransId = Convert.ToInt32(txtParentId.Text)
        '            '    objBL.TransIdDetail = Convert.ToInt32(TransIdDetailGV.Text)
        '            '    objBL.CatId = (CatIdGV.Text)
        '            '    objBL.SpareId = Convert.ToInt32(SpareIdGV.Text)

        '            '    Dim OutputParam As Integer = -10

        '            '    'objBL.SpareId = Convert.ToInt32(txtSpareId.Text);
        '            '    If SpareSerialNoGV.Text = "---Select---" Then
        '            '        objBL.SpareSerialNo = ""
        '            '    Else
        '            '        objBL.SpareSerialNo = (SpareSerialNoGV.Text)
        '            '    End If


        '            '    objBL.Qty = Convert.ToDecimal(QuantityGV.Text)


        '            '    Dim i As Boolean = objBL.DeleteSparePurchDetail(OutputParam)
        '            '    'If i Then
        '            '    '    If OutputParam = 1 Then
        '            '    '        ShowMsg(objConstant.GsMsgDelete)
        '            '    '    ElseIf OutputParam = 2 Then
        '            '    '        ShowMsg(objConstant.GsMsgNotDeleted)
        '            '    '    End If
        '            '    'End If

        '        End If


        '        'If SpareIdGV.Text = "0" Then
        '        '    Return
        '        'End If

        '        If dt.Rows.Count > 1 Then
        '            dt.Rows.Remove(dt.Rows(rowIndex))
        '            drCurrentRow = dt.NewRow()
        '            ViewState("CurrentTableFreq") = dt
        '            grvFreqDetails.DataSource = dt
        '            grvFreqDetails.DataBind()

        '            SetPreviousDataFreq()

        '            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
        '            Query = "Select * from tblTarget"
        '            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
        '            'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
        '        End If
        '        'End If
        '    Catch ex As Exception
        '        Throw ex
        '    End Try
    End Sub


    Protected Sub grvFreqDetails_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                'For Each cell As DataControlFieldCell In e.Row.Cells
                '    ' check all cells in one row
                '    For Each control As Control In cell.Controls

                '        Dim button As ImageButton = TryCast(control, ImageButton)
                '        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                '            ' Add delete confirmation
                '            button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                '        End If
                '    Next control
                'Next cell

            End If



        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub ddlFreqMTDGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetails.PageSize >= 10 Then
                grvFreqDetails.PageSize = TotDetailRecords + 1
                'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            End If

           
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGV"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(3).FindControl("txtDayNoGV"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0

            If lblid1.Text = "DATE" Then
                lblid2.Enabled = False
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False
                lblid2.Text = ""
                lblid3.Text = Day(CDate(Me.txtServStart.Text))
                lblid4.Text = ""
                lblid5.SelectedIndex = 0

            ElseIf lblid1.Text = "DOW" Then

                If txtFrequencyDesc.Text = "QUARTERLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"

                ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                Else
                    lblid2.Enabled = False
                    TextBoxMonthNo.Text = ""
                    lblid2.Text = ""
                End If

                'lblid2.Enabled = False
                lblid3.Enabled = False
                lblid4.Enabled = True
                lblid5.Enabled = True

                'lblid2.Text = ""
                lblid3.Text = ""
                lblid4.Text = pWeekNumber(txtServStart.Text)
                lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

            ElseIf lblid1.Text = "MONTH" Then
                lblid2.Enabled = True
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False

                TextBoxMonthNo.Text = "1"
                TextBoxDayNo.Text = Day(CDate(Me.txtServStart.Text))
                TextBoxWeekNo.Text = ""
                TextBoxWeekDOW.SelectedIndex = 0
                'lblid2.Text = ""
                'lblid3.Text = Day(CDate(Me.txtServStart.Text))
                'lblid4.Text = ""
                'lblid5.SelectedIndex = 0

            End If

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlFreqMTDGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlWeekDOWGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetails.PageSize >= 10 Then
                grvFreqDetails.PageSize = TotDetailRecords + 1
            End If

            'Dim lTargetDesciption As String
            'SetRowDataFreq()
            'SetRowData()
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGV"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(3).FindControl("txtDayNoGV"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0
            '''''''''''''''''''
            txtDuplicateFreq.Text = "N"
            txtRecordAdded.Text = "N"

            ''''''''''''''''''''''''
            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                HasDuplicateFrequency = HighlightDuplicateFreq(grvFreqDetails)

                If HasDuplicateFrequency = True Then
                    txtDuplicateFreq.Text = "Y"
                    lblAlert.Text = "Duplicate Frequency has been selected"
                    'btnSvcSave.Enabled = False
                    'UpdatePanel1.Update()
                    'updpnlFreq.Update()
                    'btnSvcSave.Enabled = False
                    Exit Sub
                Else
                    'btnSvcSave.Enabled = True
                End If
            End If

            If rowindex1 = grvFreqDetails.Rows.Count - 1 Then
                'btnAddDetail_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If


            If lblid1.Text = "DOW" Then
                If lblid5.Text = "--SELECT--" Then
                    'If lblid5.SelectedIndex = "0" Then
                    lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                    MsgBox("Invalid DOW for the Frequency.. ")
                End If


            End If

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlWeekDOWGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub txtWeekNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)

            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Week cannot be less than 0", "str")
                lblid1.Text = "1"

            End If


            If txtFrequency.Text = "BI-MONTHLY" Or txtFrequency.Text = "QUARTERLY" Or txtFrequency.Text = "HALF-ANNUALLY" Or txtFrequency.Text = "THRICE-ANNUALLY" Or txtFrequency.Text = "ANNUALLY" Or txtFrequency.Text = "BI-ANNUALLY" Then
                Dim maxWeekNo As String = (txtDOWByWhichWeek.Text)
                maxWeekNo = maxWeekNo.Substring(0, maxWeekNo.IndexOf(","))

                If Val(lblid1.Text) > Val(maxWeekNo) Then
                    MsgBox("Week No cannot be more than " & Val(maxWeekNo))
                    lblid1.Text = pWeekNumber(txtServStart.Text)
                    Exit Sub
                End If
            End If


            If txtFrequency.Text = "BI-WEEKLY" Or txtFrequency.Text = "TRI-WEEKLY" Or txtFrequency.Text = "MONTHLY" Or txtFrequency.Text = "FORTNIGHTLY" Or txtFrequency.Text = "THRICE-MONTHLY" Or txtFrequency.Text = "TWICE-MONTHLY" Or txtFrequency.Text = "FOUR-TIMES-MONTHLY" Then
                Dim maxWeekNo As Integer = Val(txtDOWByWhichWeek.Text)
                If Val(lblid1.Text) > maxWeekNo Then
                    If txtFrequency.Text.ToUpper = "MONTHLY" Then
                        If Val(lblid1.Text) > 5 Then
                            MsgBox("Week No cannot be more than 5")
                            lblid1.Text = pWeekNumber(txtServStart.Text)
                            Exit Sub
                        End If
                    Else
                        MsgBox("Week No can not be bigger than " & maxWeekNo)
                        lblid1.Text = pWeekNumber(txtServStart.Text)
                        Exit Sub
                    End If

                End If
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtWeekNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub txtMonthNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)


            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Month cannot be less than 0", "str")
                lblid1.Text = "1"

            End If

            Dim maxMonthNo As Integer = Val(txtMonthByWhichMonth.Text)
            If Val(lblid1.Text) > maxMonthNo Then
                MsgBox("Month No cannot be more than " & maxMonthNo)
                lblid1.Text = "1"
                Exit Sub
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtMonthNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub txtDayNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)

            If Val(lblid1.Text) <= 0 Or Val(lblid1.Text) > 31 Then
                MessageBox.Message.Alert(Page, "Day cannot be less than 0 and more than 31", "str")
                lblid1.Text = Day(CDate(Me.txtServStart.Text))

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtDayNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub



    'Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
    '    Try
    '        If txtStatus.Text = "P" Then
    '            Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

    '            Exit Sub
    '        End If

    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_value")
    '        If Right(confirmValue, 3) = "Yes" Then
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            conn.Open()

    '            Dim command2 As MySqlCommand = New MySqlCommand
    '            command2.CommandType = CommandType.Text

    '            Dim qry2 As String = "DELETE from tblContractDet where Rcno= @Rcno "

    '            command2.CommandText = qry2
    '            command2.Parameters.Clear()

    '            command2.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command2.Connection = conn
    '            command2.ExecuteNonQuery()



    '            Dim command3 As MySqlCommand = New MySqlCommand
    '            command3.CommandType = CommandType.Text

    '            Dim qry3 As String = "DELETE from tblContractServingTarget where SourceSQLId= @OrigCode "

    '            command3.CommandText = qry3
    '            command3.Parameters.Clear()

    '            command3.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
    '            command3.Connection = conn
    '            command3.ExecuteNonQuery()


    '            Dim command4 As MySqlCommand = New MySqlCommand
    '            command4.CommandType = CommandType.Text

    '            Dim qry4 As String = "DELETE from tblServiceContractFrequency where SourceSQLId= @OrigCode "

    '            command4.CommandText = qry4
    '            command4.Parameters.Clear()

    '            command4.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
    '            command4.Connection = conn
    '            command4.ExecuteNonQuery()

    '            conn.Close()

    '            'UpdateContractHeader()

    '            Dim message As String = "alert('Contract Detail is deleted Successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            btnADD_Click(sender, e)
    '            GridView1.DataBind()
    '        End If
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        Dim message As String = "alert('" + exstr + "!!!')"
    '        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '    End Try
    'End Sub


    'Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)
    '    ''AddNewRowWithDetailRec()
    '    'If TotDetailRecords > 0 Then
    '    '    AddNewRowWithDetailRec()
    '    'Else
    '    '    AddNewRow()
    '    'End If
    'End Sub

    ''''''''''End: Frequency




    '''''''''' Start: Target


    Private Sub FirstGridViewRowTarget()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("TargetDesc", GetType(String)))
            dt.Columns.Add(New DataColumn("TargetId", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceID", GetType(String)))
            dt.Columns.Add(New DataColumn("SourceSQLID", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("TargetDesc") = String.Empty
            dr("TargetId") = String.Empty
            dr("ContractNo") = String.Empty

            dr("ServiceID") = String.Empty
            dr("SourceSQLID") = 0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTable") = dt

            grvTargetDetails.DataSource = dt
            grvTargetDetails.DataBind()

            Dim btnAdd As Button = CType(grvTargetDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowTarget", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRow()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)

                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                 
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If

            SetPreviousData()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRow", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRec()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)
                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and  BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                        rowIndex1 += 1
                    Next j

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
         
                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousData()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousData()
        Try
            Dim rowIndex As Integer = 0

            Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        TextBoxTargetDesc.Text = dt.Rows(i)("TargetDesc").ToString()
                        TextBoxTargtId.Text = dt.Rows(i)("TargetId").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxServiceID.Text = dt.Rows(i)("ServiceID").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLID").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxRcno.Text <> "0") And (TextBoxRcno.Text <> "") And (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                        '    Query = "Select * from tblTarget"
                        '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        'End If

                        If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                            Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        End If

                      

                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        '    If dt.Rows.Count > 0 Then
                        '        If i < dt.Rows.Count - 2 Then
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString() & ", "
                        '        Else
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString()
                        '        End If
                        '        ''
                        '    End If
                        'End If
                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowData()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.Text
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTable") = dtCurrentTable

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousData()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    Public Function HighlightDuplicate(ByVal gridview As GridView) As Boolean
        HasDuplicateTarget = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As DropDownList = CType(grvTargetDetails.Rows(currentRow).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                Dim TextBoxTargetDescGV1 As DropDownList = CType(grvTargetDetails.Rows(otherRow).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)


              
                        If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                        GoTo nextrec
                    End If

                            duplicateRow = True

                            TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                            TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral

                            'TextBoxTargetDescGV.Font.Bold = True
                            'TextBoxTargetDescGV1.Font.Bold = True
                            'TextBoxTargetDescGV.BackColor = Drawing.Color.Purple
                            'TextBoxTargetDescGV1.BackColor = Drawing.Color.Purple


                            'Dim custVal As New CustomValidator()
                            'custVal.IsValid = False
                            'custVal.ErrorMessage = ""
                            'custVal.ErrorMessage = "Selected Target Already Exists"
                            'custVal.EnableClientScript = True

                            'custVal.ValidationGroup = "VGroup"
                            'Me.Page.Form.Controls.Add(custVal)

                            HasDuplicateTarget = True
                            Return HasDuplicateTarget


                        Else
                            duplicateRow = False
                            HasDuplicateTarget = False
                        End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateTarget
    End Function



    Protected Sub ddlTargetDescGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            'If grvTargetDetails.PageSize >= 10 Then
            '    grvTargetDetails.PageSize = TotDetailRecords + 1
            '    'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            'End If


            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlTargetDescGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGV"), TextBox)


            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT TargetId FROM tblTarget where descrip1= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("TargetId").ToString
            End If
            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            txtDuplicateTarget.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateTarget = True Then
                txtDuplicateTarget.Text = "Y"
                'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "Duplicate Target/Pests has been selected"
                Exit Sub
            End If


            If rowindex1 = grvTargetDetails.Rows.Count - 1 Then
                btnAddDetail_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If
            'txtTargetDesc.Text = txtTargetDesc.Text & lblid1.Text & ", "
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ddlTargetDescGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub grvTargetDetails_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvTargetDetails.RowDeleting
        Try

            If txtRecordDeleted.Text = "Y" Then
                txtRecordDeleted.Text = "N"
                Exit Sub
            End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                txtRecordDeleted.Text = "N"
                Dim Query As String
                SetRowData()

                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



                Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                        Dim conn As MySqlConnection = New MySqlConnection(constr)
                        conn.Open()

                        Dim commandUpdGS As MySqlCommand = New MySqlCommand
                        commandUpdGS.CommandType = CommandType.Text
                        commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
                        commandUpdGS.Connection = conn
                        commandUpdGS.ExecuteNonQuery()
                        conn.Close()
                        conn.Dispose()
                        'UpdateTargetDescription()

                    End If
                End If

                If dt.Rows.Count > 1 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTable") = dt
                    grvTargetDetails.DataSource = dt
                    grvTargetDetails.DataBind()

                    SetPreviousData()

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)

                    ''''''''''''''''''''''''''
                    HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

                    txtDuplicateTarget.Text = "N"

                    If HasDuplicateTarget = True Then
                        txtDuplicateTarget.Text = "Y"
                        'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                        lblAlert.Text = "Duplicate Target/Pests has been selected"
                        Exit Sub
                    End If


                    'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

                    'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
                    'Dim rowindex1 As Integer = xrow1.RowIndex

                    If txtRecordAdded.Text = "N" Then
                        btnAddDetail_Click(sender, e)
                    End If

                    txtRecordDeleted.Text = "Y"
                    'UpdateTargetDescription()

                    ''''''''''''''''''''''
                    'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
                End If


                ' '''''''''''''''''''''''
                'Start:Target
                SetRowData()

                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                If tableAdd IsNot Nothing Then
                    txtTargetDesc.Text = ""

                    For rowIndex1 As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargetId As TextBox = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("txtTargtIdGV"), TextBox)


                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex1).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                        If (TextBoxTargetDesc.Text) <> "-1" Then
                            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargetId.Text.Trim
                            Else
                                txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = TextBoxTargetId.Text.Trim
                            End If

                        End If
                    Next rowIndex1
                End If

                UpdateTargetDescription()
                grvContractDetail.DataSourceID = "SqlDSContractDet"
                grvContractDetail.DataBind()
                lblMessage.Text = "DELETE : DETAIL TARGET RECORD SUCCESSFULLY UPDATED"

                dt.Dispose()

                'lblAlert.Text = ""

                'updpnlTarget.Update()
                'UpdatePanel1.Update()
                'UpdatePanel2.Update()

                'grvContractDetail.DataSourceID = "SqlDSContractDet"
                'grvContractDetail.DataBind()
                'End:Target

                ' ''''''''''''''''''''''''''''
                ''UpdateTargetDescription()
            End If
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION grvTargetDetails_RowDeleting", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateTargetDescription()
        Try
            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcnoDetail.Text)
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)

            command1.CommandText = "Update tblcontractdet set TargetId ='" & txtTargetId.Text & "', TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)

            command1.Connection = conn
            command1.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command1.Dispose()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateTargetDescription", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    
    Protected Sub grvTargetDetails_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvTargetDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvTargetDetails_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvTargetDetails.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRec()
        Else
            AddNewRow()
        End If
    End Sub

    ''''''''''' End : Target


    '''''''''' Start: Location


    Private Sub FirstGridViewRowLocation()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceName", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceAddress", GetType(String)))
            dt.Columns.Add(New DataColumn("Zone", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))
            dt.Columns.Add(New DataColumn("LocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Branch", GetType(String)))

            dr = dt.NewRow()

            dr("LocationId") = String.Empty
            dr("ServiceName") = String.Empty
            dr("ServiceAddress") = String.Empty
            dr("Zone") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty
           
            dr("Rcno") = 0
            dr("LocationGroup") = String.Empty
            dr("Branch") = String.Empty

            dt.Rows.Add(dr)

            ViewState("CurrentTableLoc") = dt

            grvServiceLocation.DataSource = dt
            grvServiceLocation.DataBind()

            Dim btnAdd As Button = CType(grvServiceLocation.FooterRow.Cells(1).FindControl("btnAddDetailLoc"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowLoc()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            'AddNewRow()
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    grvServiceLocation.DataSource = dtCurrentTable
                    grvServiceLocation.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(rowIndex2).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                        ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"

                        'If ddlContactType.Text.Trim = "CORPORATE" Then
                        '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                        'Else
                        '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                        'End If
                        'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId1)

                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxLocationId2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    ''Query = "Select LocationId, LocationId from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"

                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId2)
                   
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecLoc()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(rowIndex1).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                        ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                        'If ddlContactType.Text.Trim = "CORPORATE" Then
                        '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                        'Else
                        '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                        'End If
                        'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId1)
                      
                        rowIndex1 += 1
                    Next j

                    'Dim TextBoxLocationId2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    ''Query = "Select LocationId, LocationId from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId2)
                    dtCurrentTable.Dispose()
                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataLoc()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            'txtLocationId.Text = ""
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)


                        TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
                        TextBoxServiceName.Text = dt.Rows(i)("ServiceName").ToString()
                        TextBoxServiceAddress.Text = dt.Rows(i)("ServiceAddress").ToString()
                        TextBoxZone.Text = dt.Rows(i)("Zone").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()
                        TextBoxLocationGroup.Text = dt.Rows(i)("LocationGroup").ToString()
                        TextBoxBranch.Text = dt.Rows(i)("Branch").ToString()

                        'If (TextBoxLocationId.Text <> "0") And (TextBoxLocationId.Text <> "") And (String.IsNullOrEmpty(TextBoxLocationId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("ddlLocationIdGV"), DropDownList)
                        '    Query = "Select LocationID, LocationID from tblCompanyLocation"
                        '    PopulateDropDownList(Query, "LocationID", "LocationID", TextBoxTargetDesc2)
                        'End If

                        'If (String.IsNullOrEmpty(TextBoxLocationId.Text) = False) And (TextBoxLocationId.Text <> "0") And (TextBoxLocationId.Text <> "-1") Then

                        '    If dt.Rows.Count > 0 Then
                        '        If i < dt.Rows.Count - 2 Then
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString() & ", "
                        '        Else
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString()
                        '        End If
                        '        ''
                        '    End If
                        'End If
                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataLoc()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableLoc") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    'Public Function HighlightDuplicateLoc(ByVal gridview As GridView) As Boolean
    '    HasDuplicateLocaion = False
    '    For currentRow As Integer = 0 To grvServiceLocation.Rows.Count - 2
    '        Dim rowToCompare As GridViewRow = grvServiceLocation.Rows(currentRow)

    '        For otherRow As Integer = currentRow + 1 To grvServiceLocation.Rows.Count - 1
    '            Dim row As GridViewRow = grvServiceLocation.Rows(otherRow)
    '            Dim duplicateRow As Boolean = False
    '            Dim TextBoxlLocationIdGV As DropDownList = CType(grvServiceLocation.Rows(currentRow).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
    '            Dim TextBoxlLocationIdGV1 As DropDownList = CType(grvServiceLocation.Rows(otherRow).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

    '            If ((TextBoxlLocationIdGV.Text) = (TextBoxlLocationIdGV1.Text)) Then

    '                duplicateRow = True

    '                TextBoxlLocationIdGV.BackColor = Drawing.Color.LightCoral
    '                TextBoxlLocationIdGV1.BackColor = Drawing.Color.LightCoral


    '                HasDuplicateLocaion = True
    '                Return HasDuplicateLocaion


    '            Else
    '                duplicateRow = False
    '                HasDuplicateLocaion = False
    '            End If

    '        Next otherRow
    '    Next currentRow

    '    Return HighlightDuplicateLoc
    'End Function



    'Protected Sub ddlLocationIdGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        lblAlert.Text = ""
    '        Dim lLocationId As String

    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlLocationIdGV"), DropDownList)
    '        Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
    '        Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
    '        Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

    '        lLocationId = lblid1.Text

    '        Dim rowindex1 As Integer = xrow1.RowIndex

    '        'Get Contact Details

    '        Dim conn As MySqlConnection = New MySqlConnection()

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()
    '        Dim command1 As MySqlCommand = New MySqlCommand

    '        command1.CommandType = CommandType.Text

    '        If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
    '            command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
    '        ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
    '            command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
    '        End If
    '        command1.Connection = conn

    '        Dim dr As MySqlDataReader = command1.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            lblid2.Text = dt.Rows(0)("ServiceName").ToString
    '            lblid3.Text = dt.Rows(0)("Address1").ToString + ", " + dt.Rows(0)("AddStreet").ToString + ", " + dt.Rows(0)("AddBuilding").ToString + ", " + dt.Rows(0)("Addcity").ToString
    '            lblid4.Text = dt.Rows(0)("LocateGrp").ToString

    '            txtLocationId.Text = lblid1.Text
    '            txtServiceName.Text = lblid2.Text
    '            txtServiceAddress.Text = lblid3.Text
    '            txtZone.Text = lblid4.Text

    '            RetrieveContactDetails(lLocationId)
    '            '    txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString
    '            '    txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString

    '            '    txtPosition.Text = dt.Rows(0)("Contact1Position").ToString
    '            '    txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString

    '            '    txtTelephone.Text = dt.Rows(0)("Telephone").ToString
    '            '    txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString

    '            '    txtFax.Text = dt.Rows(0)("Fax").ToString
    '            '    txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString

    '            '    txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
    '            '    txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString

    '            '    txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString
    '            '    txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString

    '            '    txtEmail1.Text = dt.Rows(0)("Contact2Tel").ToString
    '            '    txtEmail2.Text = dt.Rows(0)("Contact2Tel2").ToString

    '            '    txtEmail1.Text = dt.Rows(0)("Email").ToString
    '            '    txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString

    '            '    txtLocationId.Text = lblid1.Text
    '            '    txtServiceName.Text = lblid2.Text
    '            '    txtServiceAddress.Text = lblid3.Text
    '            '    txtZone.Text = lblid4.Text

    '            '    txtContactPerson.Enabled = True
    '            '    txtContactPerson2.Enabled = True
    '            '    txtPosition.Enabled = True
    '            '    txtPosition2.Enabled = True
    '            '    txtTelephone.Enabled = True
    '            '    txtTelephone2.Enabled = True
    '            '    txtFax.Enabled = True
    '            '    txtFax2.Enabled = True
    '            '    txtCP2Telephone.Enabled = True
    '            '    txtCP2Telephone2.Enabled = True
    '            '    txtConPerMobile.Enabled = True
    '            '    txtConPerMobile2.Enabled = True
    '            '    txtEmail1.Enabled = True
    '            '    txtEmail2.Enabled = True
    '            '    txtAddress.Enabled = True
    '        End If
    '        ''HasDuplicateTarget = False
    '        ''Dim HasDuplicate As Boolean
    '        'HasDuplicateLocaion = HighlightDuplicateLoc(grvServiceLocation)

    '        'txtDuplicateTarget.Text = "N"
    '        'txtRecordAdded.Text = "N"

    '        'If HasDuplicateLocaion = True Then
    '        '    txtDuplicateTarget.Text = "Y"
    '        '    Dim message As String = "alert('Duplicate Location has been selected!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    lblAlert.Text = "Duplicate Location has been selected"
    '        '    Exit Sub
    '        'End If




    '        updpnlLocation.Update()
    '        updnLocationDet1.Update()
    '        updnLocationDet2.Update()
    '        UpdatePanel1.Update()
    '    Catch ex As Exception
    '        Throw ex
    '    End Try
    'End Sub



    Protected Sub ddlLocationIdGV_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim lLocationId As String

            Dim ddl1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("ddlLocationIdGV"), TextBox)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

            lLocationId = lblid1.Text
            lblLocationID.Text = lLocationId

            updPanelContract1.Update()

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Contact Details

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                command1.CommandText = "SELECT ContractGroup FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
            ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                command1.CommandText = "SELECT ContractGroup FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
            End If
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("ContractGroup").ToString.Trim <> ddlContractGrp.Text.Trim Then
                    mdlMismatchContractGroupLocationID.Show()
                    lblid1.Text = ""
                    lLocationId = ""
                    '"The Contract Group of Location ID [Location ID] does not match with this contract." [OK]. 
                End If
            Else
                mdlMismatchContractGroupLocationID.Show()
                lblid1.Text = ""
                lLocationId = ""

            End If





            'updpnlLocation.Update()
            'updnLocationDet1.Update()
            'updnLocationDet2.Update()
            'UpdatePanel1.Update()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlLocationIdGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub grvServiceLocation_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocation.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            'Dim confirmValue As String
            'confirmValue = ""

            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then

            '    txtRecordDeleted.Text = "N"
            '    Dim Query As String
            '    SetRowData()

            '    Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            '    Dim drCurrentRow As DataRow = Nothing
            '    Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



            '    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
            '    If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
            '        If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

            '            Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            conn.Open()

            '            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '            commandUpdGS.CommandType = CommandType.Text
            '            commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
            '            commandUpdGS.Connection = conn
            '            commandUpdGS.ExecuteNonQuery()

            '            conn.Close()
            '        End If
            '    End If

            '    If dt.Rows.Count > 1 Then
            '        dt.Rows.Remove(dt.Rows(rowIndex))
            '        drCurrentRow = dt.NewRow()
            '        ViewState("CurrentTableLoc") = dt
            '        grvTargetDetails.DataSource = dt
            '        grvTargetDetails.DataBind()

            '        SetPreviousData()

            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select * from tblTarget"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


            '        ''''''''''''''''''''''''''
            '        HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            '        txtDuplicateTarget.Text = "N"

            '        If HasDuplicateTarget = True Then
            '            txtDuplicateTarget.Text = "Y"
            '            Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
            '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            Exit Sub
            '        End If


            '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            '        'Dim rowindex1 As Integer = xrow1.RowIndex

            '        If txtRecordAdded.Text = "N" Then
            '            btnAddDetail_Click(sender, e)
            '        End If

            '        txtRecordDeleted.Text = "Y"

            '        UpdateTargetDescription()
            '        ''''''''''''''''''''''
            '        'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
            '    End If
            'End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    'Private Sub UpdateTargetDescription()
    '    Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcno.Text)
    '    command1.Connection = conn
    '    command1.ExecuteNonQuery()

    '    conn.Close()

    'End Sub

    Protected Sub grvServiceLocation_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvServiceLocation_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServiceLocation.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetailLoc_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecLoc()
        Else
            AddNewRowLoc()
        End If
    End Sub

    ''''''''''' End : Location
    '''''''''' Start: Services


    Private Sub FirstGridViewRowServices()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("ProductId", GetType(String)))
            dt.Columns.Add(New DataColumn("ProductDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerService", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalServices", GetType(String)))
            dt.Columns.Add(New DataColumn("CompletedServices", GetType(String)))
            dt.Columns.Add(New DataColumn("BalanceServices", GetType(String)))

            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("MonthByWhichMonth", GetType(String)))
            dt.Columns.Add(New DataColumn("DOWByWhichWeek", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Area", GetType(String)))

            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("ProductId") = String.Empty
            dr("ProductDescription") = String.Empty
            dr("PricePerService") = String.Empty
            dr("ServiceFrequency") = String.Empty
            dr("TotalServices") = String.Empty
            dr("CompletedServices") = String.Empty
            dr("BalanceServices") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty
            dr("MonthByWhichMonth") = String.Empty
            dr("DOWByWhichWeek") = String.Empty
            dr("UOM") = String.Empty
            dr("Area") = 0.0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTableServices") = dt

            grvServices.DataSource = dt
            grvServices.DataBind()

            Dim btnAdd As Button = CType(grvServices.FooterRow.Cells(1).FindControl("btnAddDetailServices"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowServices()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text

                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvServices.DataSource = dtCurrentTable
                    grvServices.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)


                        Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)


                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    Query = "Select ProductID, ProductDesc from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)
                   

                    Dim TextBoxServiceFrequency2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency2)
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecServices()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()

                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxProductID1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID, ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID1)

                        Dim TextBoxFrequency As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency)

                        rowIndex1 += 1
                    Next j

                    Dim TextBoxProductID2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID2)

                    Dim TextBoxFrequency2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency2)
             
                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataServices()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1
                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        TextBoxServiceId.Text = dt.Rows(i)("ProductId").ToString()
                        TextBoxServiceDescription.Text = dt.Rows(i)("ProductDescription").ToString()
                        TextBoxPricePerService.Text = dt.Rows(i)("PricePerService").ToString()
                        TextBoxServiceFrequency.Text = dt.Rows(i)("ServiceFrequency").ToString()
                        TextBoxTotalServices.Text = dt.Rows(i)("TotalServices").ToString()
                        TextBoxCompletedServices.Text = dt.Rows(i)("CompletedServices").ToString()
                        TextBoxBalanceServices.Text = dt.Rows(i)("BalanceServices").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()

                        TextBoxMonthByWhichMonth.Text = dt.Rows(i)("MonthByWhichMonth").ToString()
                        TextBoxDOWByWhichWeek.Text = dt.Rows(i)("DOWByWhichWeek").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxServiceId.Text <> "0") And (TextBoxServiceId.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        '    Query = "Select * from tblProduct"
                        '    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)
                        'End If

                        'If (TextBoxServiceFrequency.Text <> "0") And (TextBoxServiceFrequency.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceFrequency.Text) = False) Then
                        '    Dim TextBoxTargetDesc3 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        '    Query = "Select * from tblServiceFrequency"
                        '    PopulateDropDownList(Query, "Frequency", "Frequency", TextBoxTargetDesc3)
                        'End If

                    
                        rowIndex += 1
                    Next i
                End If

                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataServices()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text

                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        'dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableServices") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    Public Function HighlightDuplicateServices(ByVal gridview As GridView) As Boolean
        HasDuplicateServices = False
        For currentRow As Integer = 0 To grvServices.Rows.Count - 2
            Dim rowToCompare As GridViewRow = grvServices.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To grvServices.Rows.Count - 1
                Dim row As GridViewRow = grvServices.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxlServiceIdGV As DropDownList = CType(grvServices.Rows(currentRow).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                Dim TextBoxlServiceIdGV1 As DropDownList = CType(grvServices.Rows(otherRow).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)

                If ((TextBoxlServiceIdGV.Text) = (TextBoxlServiceIdGV1.Text)) Then

                    duplicateRow = True

                    TextBoxlServiceIdGV.BackColor = Drawing.Color.LightCoral
                    TextBoxlServiceIdGV1.BackColor = Drawing.Color.LightCoral
                    HasDuplicateServices = True
                    Return HasDuplicateServices

                Else
                    duplicateRow = False
                    HasDuplicateServices = False
                End If

            Next otherRow
        Next currentRow

        Return HighlightDuplicateServices
    End Function



    Protected Sub ddlServiceIdGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceIdGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceDescriptionGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtAreaGV"), TextBox)

            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT ProductDesc, WithArea FROM tblproduct where ProductID= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("ProductDesc").ToString

                If dt.Rows(0)("WithArea").ToString = "Y" Then
                    lblid3.Enabled = True
                    lblid3.ReadOnly = False
                Else
                    lblid3.Enabled = False
                    lblid3.ReadOnly = True
                End If

            End If

            txtServiceId.Text = lblid1.Text
            txtServiceDesc.Text = lblid2.Text


            UpdatePanel1.Update()

            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            HasDuplicateServices = HighlightDuplicateServices(grvServices)

            txtDuplicateTarget.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateServices = True Then
                txtDuplicateTarget.Text = "Y"
                'Dim message As String = "alert('Duplicate Service has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "Duplicate Service has been selected"
                Exit Sub
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()

            'If rowindex1 = grvServices.Rows.Count - 1 Then

            '    btnAddDetailServices_Click(sender, e)
            '    txtRecordAdded.Text = "Y"
            'End If


        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceIdGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub RecalculateServiceFrequency()

        Try

            Dim lFrequency As String
            Dim lRcno As Long

            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            'Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGV"), TextBox)

            'lFrequency = lblid1.Text
            lblAlert.Text = ""
            lFrequency = ""
            'Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Start: Frequency

            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text

            command2.CommandText = "SELECT Rcno, Frequency, NoService FROM tblcontractdet where ContractNo = '" & txtContractNo.Text & "'"
            command2.Connection = conn

            Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            If dt2.Rows.Count > 0 Then
                Dim command1 As MySqlCommand = New MySqlCommand

              

                For i = 0 To dt2.Rows.Count - 1
                    'lblid2.Text = dt.Rows(0)("Frequency").ToString
                    txtFrequencyDesc.Text = dt2.Rows(i)("Frequency").ToString
                    txtFrequency.Text = dt2.Rows(i)("Frequency").ToString
                    lRcno = dt2.Rows(i)("Rcno").ToString

                    'lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString


                    lFrequency = txtFrequency.Text
                    'End:Frequeny

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                  
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then
                        'lblid2.Text = dt.Rows(0)("Frequency").ToString
                        'lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                        'lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
                        txtMonthByWhichMonth.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                        txtDOWByWhichWeek.Text = dt.Rows(0)("DOWByWhichWeek").ToString
                    End If


                    'Start: Frequency

                    'txtFrequencyDesc.Text = lFrequency
                    'txtFrequency.Text = lFrequency


                    'txtMonthByWhichMonth.Text = lblid3.Text
                    'txtDOWByWhichWeek.Text = lblid4.Text

                    'grvFreqDetails.Enabled = True
                    'grvTargetDetails.Enabled = True

                    UpdatePanel1.Update()

                    grvFreqDetails.Enabled = True
                    grvTargetDetails.Enabled = True

                    If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        txtNoofSvcInterval.Text = 2

                    ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                        txtNoofSvcInterval.Text = 3
                        'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                        '    txtNoofSvcInterval.Text = 3
                    ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        txtNoofSvcInterval.Text = 4
                    ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-MONTHLY" Then
                        txtNoofSvcInterval.Text = 5
                    ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-MONTHLY" Then
                        txtNoofSvcInterval.Text = 6
                    Else
                        txtNoofSvcInterval.Text = 1
                    End If



                    lblInterval.Text = ""
                    Select Case txtFrequency.Text.ToUpper
                        Case "DAILY"
                            lblInterval.Text = "Days"
                        Case "WEEKLY", "TWICE-WEEKLY"
                            lblInterval.Text = "Wks"
                        Case "BI-WEEKLY", "FORTNIGHTLY"
                            lblInterval.Text = "Bi-wks"
                        Case "TRI-WEEKLY"
                            lblInterval.Text = "Tri-wks"
                        Case "MONTHLY", "THRICE-MONTHLY"
                            lblInterval.Text = "Mths"
                        Case "BI-MONTHLY"
                            lblInterval.Text = "Bi-mths"
                        Case "QUARTERLY"
                            lblInterval.Text = "Quarterly"
                        Case "HALF-ANNUALLY"
                            lblInterval.Text = "Half-Annually"
                        Case "THRICE-ANNUALLY"
                            lblInterval.Text = "Thrice-Annually"
                        Case "ANNUALLY"
                            lblInterval.Text = "Annually"
                        Case "BI-ANNUALLY"
                            lblInterval.Text = "Bi-Annually"
                    End Select




                    Dim lInterval As Integer
                    lInterval = txtNoofSvcInterval.Text


                    Dim interval As Integer
                    Dim endDate As Date
                    If txtFrequencyDesc.Text = "MONTHLY" Then
                        Dim monthno As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If

                        ''''''''''''
                        Dim dayno As Integer
                        dayno = 0

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            If monthno = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                            End If
                        Else
                            If monthno = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                            End If
                        End If
                        'If monthno = 0 Then
                        '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        'End If

                        If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                            'If monthno = 0 And ((dayno = 30) Or (dayno = 31)) Then
                            monthno = 1
                        End If

                        '''''''''''''''''''
                        If monthno > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthno = monthno + 1
                            'End If
                        End If
                        txtNoofInterval.Text = monthno
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


                    ElseIf txtFrequencyDesc.Text = "DAILY" Then
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                        Else
                            txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text)) + 1
                        End If
                        'txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        If interval > 0 Then


                            endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)



                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    interval = interval + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    interval = interval + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    interval = interval + 1
                            'End If
                        End If
                        txtNoofInterval.Text = interval
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        Dim weekNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        If weekNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    weekNo = weekNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    weekNo = weekNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    weekNo = weekNo + 1
                            'End If
                        End If
                        Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                        If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                        txtNoofInterval.Text = tempInt
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        'If interval > 0 Then
                        '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        interval = interval + 1
                        '    End If
                        'End If
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        txtNoofInterval.Text = interval

                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"

                    ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                        Dim weekNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        If weekNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    weekNo = weekNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    weekNo = weekNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    weekNo = weekNo + 1
                            'End If
                        End If

                        Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                        If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                        txtNoofInterval.Text = tempInt
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                        'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        'If weekNo > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        weekNo = weekNo + 1
                        '    End If
                        'End If

                        'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                        'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                        'txtNoofInterval.Text = tempInt
                        'If txtNoofInterval.Text.Contains(".") Then
                        '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        'End If
                        'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
                    ElseIf txtFrequencyDesc.Text = "THRICE-WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))


                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        'If interval > 0 Then
                        '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        interval = interval + 1
                        '    End If
                        'End If
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        txtNoofInterval.Text = interval


                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
                    ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        'If interval > 0 Then
                        '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        interval = interval + 1
                        '    End If
                        'End If
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        txtNoofInterval.Text = interval


                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
                    ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        'If interval > 0 Then
                        '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        interval = interval + 1
                        '    End If
                        'End If
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        txtNoofInterval.Text = interval


                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "5"

                    ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        Else
                            interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                        End If
                        'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        'If interval > 0 Then
                        '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                        '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        '        interval = interval + 1
                        '    End If
                        'End If
                        'quoted by Sen on 10.06.17 as no. of services were coming more
                        txtNoofInterval.Text = interval


                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "6"
                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                        Dim monthNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        'If monthNo > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthNo = monthNo - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthNo = monthNo + 1
                        'End If
                        If monthNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthNo = monthNo + 1
                            'End If
                        End If

                        txtNoofInterval.Text = Math.Round(monthNo / 2, 2)
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                    ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        Dim monthno As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        Dim dayno As Integer
                        dayno = 0

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            If monthno = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                            End If
                        Else
                            If monthno = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                            End If
                        End If
                        'If monthno = 0 Then
                        '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        'End If


                        If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                            monthno = 1
                        End If

                        'If monthno > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthno = monthno - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthno = monthno + 1
                        'End If
                        If monthno > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthno = monthno + 1
                            'End If
                        End If
                        txtNoofInterval.Text = monthno
                        If txtNoofInterval.Text = 0 Then
                            txtNoofInterval.Text = 1
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"
                    ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                        Dim monthno As Integer

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        'If monthno > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthno = monthno - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthno = monthno + 1
                        'End If
                        If monthno > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthno = monthno + 1
                            'End If
                        End If
                        txtNoofInterval.Text = monthno

                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"

                    ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim monthno As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        'If monthno > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthno = monthno - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthno = monthno + 1
                        'End If
                        If monthno > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthno = monthno + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthno = monthno + 1
                            'End If
                        End If
                        txtNoofInterval.Text = monthno

                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
                    ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                        Dim monthNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        ''''''''''''''''''''''''''''''''''
                        Dim dayno As Integer
                        dayno = 0

                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            If monthNo = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                            End If
                        Else
                            If monthNo = 0 Then
                                dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                            End If
                        End If
                        'If monthNo = 0 Then
                        '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        'End If


                        If monthNo = 0 And ((dayno = 30) Or (dayno = 31)) Then
                            monthNo = 1
                        End If
                        ''''''''''''''''''''''
                        'If monthNo > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthNo = monthNo - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthNo = monthNo + 1
                        'End If
                        If monthNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthNo = monthNo + 1
                            'End If
                        End If
                        txtNoofInterval.Text = Math.Round(monthNo / 3, 2)
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                        Dim monthNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        'If monthNo > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        monthNo = monthNo - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    monthNo = monthNo + 1
                        'End If
                        If monthNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    monthNo = monthNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    monthNo = monthNo + 1
                            'End If
                        End If
                        txtNoofInterval.Text = Math.Round((monthNo / 6), 2)
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Then
                        Dim monthNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                        If monthNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                            If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                monthNo = monthNo + 1
                            End If
                        End If
                        txtNoofInterval.Text = Math.Round((monthNo / 4), 2)
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "ANNUALLY" Then
                        Dim yearNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If

                        'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                        'If yearNo > 0 Then
                        '    endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo).AddDays(-1)
                        '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                        '        yearNo = yearNo - 1
                        '    End If
                        'End If
                        'endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo + 1).AddDays(-1)
                        'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                        '    yearNo = yearNo + 1
                        'End If

                        If yearNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    yearNo = yearNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    yearNo = yearNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    yearNo = yearNo + 1
                            'End If
                        End If

                        txtNoofInterval.Text = yearNo
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    ElseIf txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        Dim yearNo As Integer
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                        Else
                            yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                        End If
                        'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                        If yearNo > 0 Then
                            endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                            If rbtFixedContinuous.SelectedIndex = 0 Then
                                If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                                    yearNo = yearNo + 1
                                End If
                            Else
                                If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                                    yearNo = yearNo + 1
                                End If
                            End If
                            'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            '    yearNo = yearNo + 1
                            'End If
                        End If

                        txtNoofInterval.Text = Math.Round(yearNo / 2, 2)
                        If txtNoofInterval.Text.Contains(".") Then
                            txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                        End If
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
                    Else
                        txtNoofInterval.Text = 1
                        If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


                    End If
                    fGetInterval()
                    txtNoService.Text = CDec((txtNoofSvcInterval.Text)) * CDec((txtNoofInterval.Text))


                    'lblid2.Text = txtNoService.Text

                    Dim lNoService As String
                    lNoService = ""
                    lNoService = txtNoService.Text


                    '''''''''''''''''''''''''''''''''''''''''
                    If Convert.ToInt64(txtNoofInterval.Text) > 0 Then
                        'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                        '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                        'End If
                    Else
                        'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                        lblAlert.Text = "This Frequency CANNOT be selected within this Date Range"
                        Exit Sub
                    End If

                    'command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)
                    Dim commandUpdServiceNo As MySqlCommand = New MySqlCommand
                    commandUpdServiceNo.CommandType = CommandType.Text
                    commandUpdServiceNo.CommandText = "Update tblcontractdet set NoService = @NoService, NoOfInterval=@NoOfInterval where Rcno = @Rcno"
                    commandUpdServiceNo.Parameters.Clear()

                    commandUpdServiceNo.Parameters.AddWithValue("@Rcno", lRcno)
                    commandUpdServiceNo.Parameters.AddWithValue("@NoService", lNoService)
                    commandUpdServiceNo.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

                    commandUpdServiceNo.Connection = conn
                    commandUpdServiceNo.ExecuteScalar()

                    commandUpdServiceNo.Dispose()

                    dt.Dispose()
                Next

                command1.Dispose()

            End If
            '''''''''''''''''''''''''''''''''''''''''
            'Start:Frequency

            ' 'Delete first row

            'SetRowDataFreq()

            'Dim dtFreq As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq As DataRow = Nothing

            'For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
            '    dtFreq.Rows.Remove(dtFreq.Rows(0))
            '    drCurrentRowFreq = dtFreq.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq
            '    grvFreqDetails.DataSource = dtFreq
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()
            'Next i

            'FirstGridViewRowFreq()



            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            'Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            'Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(3).FindControl("txtDayNoGV"), TextBox)
            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'If txtFrequencyDesc.Text = "DAILY" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
            '    gFreqMTD = "DOW"
            '    gSeq = "001"
            '    gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"

            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        If i = 0 Then
            '            gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '        Else
            '            gDOW = ""
            '        End If
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    'gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()

            '        TextBoxFreqMTD.Enabled = False
            '        TextBoxMonthNo.Enabled = False
            '        TextBoxDayNo.Enabled = False

            '        '
            '    Next i

            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
            '    gSeq = "001"
            '    TextBoxWeekNo.Enabled = True
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    '14.11.19
            '    TextBoxMonthNo.Enabled = True
            '    '14.11.19

            '    TextBoxDayNo.Enabled = False

            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False


            'ElseIf txtFrequencyDesc.Text = "ADHOC" Or txtFrequencyDesc.Text = "ONE-TIME" Or txtFrequencyDesc.Text = "SVC CALL" Or txtFrequencyDesc.Text = "FOLLOW UP" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False

            'End If

            ''Delete last row

            'SetRowDataFreq()

            'Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq2 As DataRow = Nothing

            'If dtFreq2.Rows.Count > 1 Then
            '    dtFreq2.Rows.Remove(dtFreq2.Rows(0))
            '    drCurrentRowFreq2 = dtFreq2.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq2
            '    grvFreqDetails.DataSource = dtFreq2
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()

            'End If

            '''''''''''''''''End:Frequency



            'End: Frequency

            conn.Close()
            conn.Dispose()
            command2.Dispose()
            dt2.Dispose()
            'dtFreq.Dispose()
            'dtFreq2.Dispose()

        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "RecalculateServiceFrequency", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub ddlServiceFrequencyGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            Dim lFrequency As String
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGV"), TextBox)

            lFrequency = lblid1.Text
            lblAlert.Text = ""
            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'lblid2.Text = dt.Rows(0)("Frequency").ToString
                lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
            End If


            'Start: Frequency

            txtFrequencyDesc.Text = lFrequency
            txtFrequency.Text = lFrequency

            txtMonthByWhichMonth.Text = lblid3.Text
            txtDOWByWhichWeek.Text = lblid4.Text

            'grvFreqDetails.Enabled = True
            'grvTargetDetails.Enabled = True

            UpdatePanel1.Update()

            grvFreqDetails.Enabled = True
            grvTargetDetails.Enabled = True

            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                txtNoofSvcInterval.Text = 2
            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                txtNoofSvcInterval.Text = 3
                'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                '    txtNoofSvcInterval.Text = 3
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 4
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 5
            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 6
            Else
                txtNoofSvcInterval.Text = 1
            End If



            lblInterval.Text = ""
            Select Case txtFrequency.Text.ToUpper
                Case "DAILY"
                    lblInterval.Text = "Days"
                Case "WEEKLY", "TWICE-WEEKLY"
                    lblInterval.Text = "Wks"
                Case "BI-WEEKLY", "FORTNIGHTLY"
                    lblInterval.Text = "Bi-wks"
                Case "TRI-WEEKLY"
                    lblInterval.Text = "Tri-wks"
                Case "MONTHLY", "THRICE-MONTHLY"
                    lblInterval.Text = "Mths"
                Case "BI-MONTHLY"
                    lblInterval.Text = "Bi-mths"
                Case "QUARTERLY"
                    lblInterval.Text = "Quarterly"
                Case "HALF-ANNUALLY"
                    lblInterval.Text = "Half-Annually"
                Case "THRICE-ANNUALLY"
                    lblInterval.Text = "Thrice-Annually"
                Case "ANNUALLY"
                    lblInterval.Text = "Annually"
                Case "BI-ANNUALLY"
                    lblInterval.Text = "Bi-Annually"
            End Select


            Dim lInterval As Integer
            lInterval = txtNoofSvcInterval.Text

            Dim interval As Integer
            Dim endDate As Date
            If txtFrequencyDesc.Text = "MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If

                ''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If

                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    'If monthno = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                '''''''''''''''''''
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            ElseIf txtFrequencyDesc.Text = "DAILY" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                Else
                    txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text)) + 1
                End If
                'txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If interval > 0 Then

                 
                    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)



                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    interval = interval + 1
                    'End If
                End If
                txtNoofInterval.Text = interval
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If
                Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"

            ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If

                Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'If weekNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        weekNo = weekNo + 1
                '    End If
                'End If

                'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                'txtNoofInterval.Text = tempInt
                'If txtNoofInterval.Text.Contains(".") Then
                '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                'End If
                'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "THRICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))


                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "5"

            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "6"
            ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If

                txtNoofInterval.Text = Math.Round(monthNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

            ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofInterval.Text = 0 Then
                    txtNoofInterval.Text = 1
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"
            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                'Dim monthno As Integer

                'If rbtFixedContinuous.SelectedIndex = 0 Then
                '    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'Else
                '    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                'End If
                ''Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                ''If monthno > 0 Then
                ''    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                ''    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                ''        monthno = monthno - 1
                ''    End If
                ''End If
                ''endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                ''If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                ''    monthno = monthno + 1
                ''End If
                'If monthno > 0 Then
                '    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                '    If rbtFixedContinuous.SelectedIndex = 0 Then
                '        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '            monthno = monthno + 1
                '        End If
                '    Else
                '        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                '            monthno = monthno + 1
                '        End If
                '    End If
                '    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '    '    monthno = monthno + 1
                '    'End If
                'End If
                'txtNoofInterval.Text = monthno


                'If txtNoofInterval.Text = 0 Then
                '    txtNoofInterval.Text = 1
                'End If

                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofInterval.Text = 0 Then
                    txtNoofInterval.Text = 1
                End If

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"

            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                ''''''''''''''''''''''''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthNo = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthNo = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthNo = 1
                End If
                ''''''''''''''''''''''
                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If

                If monthNo = 11 Or monthNo = 23 Then
                    monthNo = monthNo + 1
                End If

                txtNoofInterval.Text = Math.Round(monthNo / 3, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 6), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)


                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If


                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 4), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    'yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), DateAdd(DateInterval.Day, 1, CDate(txtServEnd.Text)))
                Else
                    'yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), DateAdd(DateInterval.Day, 1, CDate(txtEndofLastSchedule.Text)))
                End If

                'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If yearNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        yearNo = yearNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    yearNo = yearNo + 1
                'End If

                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofInterval.Text = yearNo
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))

              
                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofInterval.Text = Math.Round(yearNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            Else
                txtNoofInterval.Text = 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            End If
                fGetInterval()
                txtNoService.Text = CDec((txtNoofSvcInterval.Text)) * CDec((txtNoofInterval.Text))


                lblid2.Text = txtNoService.Text




                '''''''''''''''''''''''''''''''''''''''''
                If Convert.ToInt64(txtNoofInterval.Text) > 0 Then
                    'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                    '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                    'End If
                Else
                    'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    lblAlert.Text = "This Frequency CANNOT be selected within this Date Range"
                    Exit Sub

                End If


                '''''''''''''''''''''''''''''''''''''''''
                'Start:Frequency

                ' 'Delete first row

                SetRowDataFreq()

                Dim dtFreq As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRowFreq As DataRow = Nothing

                For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
                    dtFreq.Rows.Remove(dtFreq.Rows(0))
                    drCurrentRowFreq = dtFreq.NewRow()
                    ViewState("CurrentTableFreq") = dtFreq
                    grvFreqDetails.DataSource = dtFreq
                    grvFreqDetails.DataBind()

                    SetPreviousDataFreq()
                Next i

                FirstGridViewRowFreq()



                Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(3).FindControl("txtDayNoGV"), TextBox)
                Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                If txtFrequencyDesc.Text = "DAILY" Then
                    gSeq = "001"

                    gFreqMTD = "DAY"
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    TextBoxWeekDOW.Enabled = False
                    TextBoxLocation.Enabled = False
                    TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                    gFreqMTD = "DOW"
                    gSeq = "001"
                    gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    'TextBoxSeqNo.Text = "001"
                    gSeq = "001"
                    gFreqMTD = "DOW"
                    TextBoxWeekNo.Enabled = True
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        AddNewRowFreq()
                    Next i
                    'AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False

                    TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                    'TextBoxSeqNo.Text = "001"
                    gSeq = "001"
                    gFreqMTD = "DOW"

                    TextBoxFreqMTD.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        If i = 0 Then
                            gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                        Else
                            gDOW = ""
                        End If
                        AddNewRowFreq()
                    Next i
                    'AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False

                    TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                    'TextBoxSeqNo.Text = "001"
                    'gFreqMTD = "DOW"
                    TextBoxWeekNo.Enabled = True
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        AddNewRowFreq()

                        TextBoxFreqMTD.Enabled = False
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False

                        '
                    Next i
                    'AddNewRowFreq()
                    'TextBoxFreqMTD.Enabled = False
                    'TextBoxMonthNo.Enabled = False
                    'TextBoxDayNo.Enabled = False
                    'TextBoxWeekNo.Enabled = True
                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    gSeq = "001"
                    TextBoxWeekNo.Enabled = True
                    AddNewRowFreq()
                TextBoxFreqMTD.Enabled = False
                '14.11.19
                TextBoxMonthNo.Enabled = True
                '14.11.19

                TextBoxDayNo.Enabled = False


                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                    'For i As Integer = 0 To lInterval
                    '    If i = 0 Then
                    '        AddNewRow()
                    '    Else
                    '        AddNewRowWithDetailRecFreq()

                    '    End If

                    'Next i

                ElseIf txtFrequencyDesc.Text = "ADHOC" Or txtFrequencyDesc.Text = "ONE-TIME" Or txtFrequencyDesc.Text = "SVC CALL" Or txtFrequencyDesc.Text = "FOLLOW UP" Then
                    gSeq = "001"

                    gFreqMTD = "DAY"
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    TextBoxWeekDOW.Enabled = False
                    TextBoxLocation.Enabled = False
                    TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False

                End If

                'Delete last row

                SetRowDataFreq()

                Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRowFreq2 As DataRow = Nothing

                If dtFreq2.Rows.Count > 1 Then
                    dtFreq2.Rows.Remove(dtFreq2.Rows(0))
                    drCurrentRowFreq2 = dtFreq2.NewRow()
                    ViewState("CurrentTableFreq") = dtFreq2
                    grvFreqDetails.DataSource = dtFreq2
                    grvFreqDetails.DataBind()

                    SetPreviousDataFreq()

                End If

                '''''''''''''''''End:Frequency


                'If rowindex1 = grvServices.Rows.Count - 1 Then
                '    btnAddDetailServices_Click(sender, e)
                '    txtRecordAdded.Text = "Y"
                'End If
                'End: Frequency

                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dtFreq.Dispose()
                dtFreq2.Dispose()

        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceFrequencyGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub grvServices_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocation.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            'Dim confirmValue As String
            'confirmValue = ""

            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then

            '    txtRecordDeleted.Text = "N"
            '    Dim Query As String
            '    SetRowData()

            '    Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            '    Dim drCurrentRow As DataRow = Nothing
            '    Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



            '    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
            '    If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
            '        If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

            '            Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            conn.Open()

            '            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '            commandUpdGS.CommandType = CommandType.Text
            '            commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
            '            commandUpdGS.Connection = conn
            '            commandUpdGS.ExecuteNonQuery()

            '            conn.Close()
            '        End If
            '    End If

            '    If dt.Rows.Count > 1 Then
            '        dt.Rows.Remove(dt.Rows(rowIndex))
            '        drCurrentRow = dt.NewRow()
            '        ViewState("CurrentTableLoc") = dt
            '        grvTargetDetails.DataSource = dt
            '        grvTargetDetails.DataBind()

            '        SetPreviousData()

            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select * from tblTarget"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


            '        ''''''''''''''''''''''''''
            '        HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            '        txtDuplicateTarget.Text = "N"

            '        If HasDuplicateTarget = True Then
            '            txtDuplicateTarget.Text = "Y"
            '            Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
            '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            Exit Sub
            '        End If


            '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            '        'Dim rowindex1 As Integer = xrow1.RowIndex

            '        If txtRecordAdded.Text = "N" Then
            '            btnAddDetail_Click(sender, e)
            '        End If

            '        txtRecordDeleted.Text = "Y"

            '        UpdateTargetDescription()
            '        ''''''''''''''''''''''
            '        'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
            '    End If
            'End If
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub

    'Private Sub UpdateTargetDescription()
    '    Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcno.Text)
    '    command1.Connection = conn
    '    command1.ExecuteNonQuery()

    '    conn.Close()

    'End Sub

    Protected Sub grvServices_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvServices.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvServices_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServices.PageIndex = e.NewPageIndex
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetailServices_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecServices()
        Else
            AddNewRowServices()
        End If
    End Sub

    ''''''''''' End : Services

   
   
    Protected Sub btnReset_Click(sender As Object, e As EventArgs) Handles btnReset.Click
        Try
            Session("serviceschedulefrom") = ""
            Session("contractno") = ""
            Session("contractdetailfrom") = ""

            lblAccountIdContact.Visible = False
            'lblAccountIdContact1.Text = ""

            txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit " & txtLimit.Text
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SqlDSContract"

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnReset_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    

    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        txtMode.Text = ""
        MakeMeNull()
        DisableControls()

        '   txt.Text = "select * from tblasset where rcno<>0;"
        'SqlDataSource1.SelectCommand = "SELECT * FROM tblcompany WHERE  Inactive=0 order by AccountId desc limit 100;"
        'SqlDataSource1.DataBind()

        'SQLDSContract.DataBind()
        'GridView1.DataBind()



        btnClient0.Visible = False
        'btnClient1.Visible = False
        btnMultiplePO.Visible = False '25.10.21
        btnClient2.Visible = False
        btnClient3.Visible = False
        btnClient4.Visible = False
        btnClient5.Visible = False
        btnClient6.Visible = False
        btnClient7.Visible = False
        btnClient8.Visible = False
        btnClient9.Visible = False
        btnClient10.Visible = False
        btnAutoRenew.Visible = False
        btnRecalculate.Visible = False
        btnExtendContractEndDate.Visible = False
        btnClient11.Visible = False
        btnClient12.Visible = False
        btnHistory.Visible = False
        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
    End Sub

    Private Sub EditContract()
        'If txtStatus.Text = "O" Then
        If Left(txtStatus.Text, 1) = "O" Then
            'btnSave.Enabled = True
        Else
            'btnSave.Enabled = False
            lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
            Exit Sub
        End If

        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 0 Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                ' '''''''''''''''''''''''''''''''''''''''''''''''
                'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                '    Dim conn As MySqlConnection = New MySqlConnection()
                '    Dim command As MySqlCommand = New MySqlCommand

                '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                '    conn.Open()

                '    command.CommandType = CommandType.Text
                '    command.CommandText = "SELECT  x2412Edit FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                '    command.Connection = conn

                '    Dim dr1 As MySqlDataReader = command.ExecuteReader()
                '    Dim dt1 As New DataTable
                '    dt1.Load(dr1)

                '    If dt1.Rows.Count > 0 Then

                '        If Convert.ToBoolean(dt1.Rows(0)("x2412Edit")) = True Then
                '            txtPONo.Enabled = dt1.Rows(0)("x2412Edit")
                '            ddlBillingFreq.Enabled = dt1.Rows(0)("x2412Edit")
                '            txtContractNotes.Enabled = dt1.Rows(0)("x2412Edit")
                '            lblAlert.Text = ""

                '            EnableControls()
                '            btnSave.Enabled = True
                '            btnSave.ForeColor = System.Drawing.Color.Black
                '            btnCancel.Enabled = True
                '            btnCancel.ForeColor = System.Drawing.Color.Black
                '        End If
                '    End If
                '    conn.Close()
                '    conn.Dispose()
                'Else

                '    txtPONo.Enabled = True
                '    ddlBillingFreq.Enabled = True
                '    txtContractNotes.Enabled = True
                '    lblAlert.Text = ""
                '    EnableControls()
                '    btnSave.Enabled = True
                '    btnSave.ForeColor = System.Drawing.Color.Black

                '    btnCancel.Enabled = True
                '    btnCancel.ForeColor = System.Drawing.Color.Black
                'End If


                ' '''''''''''''''''''''''''''''''''''''''''''''''''''

                'lblMessage.Text = "ACTION: EDIT RECORD"
                'txtMode.Text = "EDIT"
                Exit Sub
            End If
        End If


        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 1 Then
                If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                    lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

                    ' '''''''''''''''''''''''''''''''''''''''''''''''
                    'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                    '    Dim conn As MySqlConnection = New MySqlConnection()
                    '    Dim command As MySqlCommand = New MySqlCommand

                    '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    '    conn.Open()

                    '    command.CommandType = CommandType.Text
                    '    command.CommandText = "SELECT  x2412Edit FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                    '    command.Connection = conn

                    '    Dim dr1 As MySqlDataReader = command.ExecuteReader()
                    '    Dim dt1 As New DataTable
                    '    dt1.Load(dr1)

                    '    If dt1.Rows.Count > 0 Then

                    '        If Convert.ToBoolean(dt1.Rows(0)("x2412Edit")) = True Then
                    '            txtPONo.Enabled = dt1.Rows(0)("x2412Edit")
                    '            ddlBillingFreq.Enabled = dt1.Rows(0)("x2412Edit")
                    '            txtContractNotes.Enabled = dt1.Rows(0)("x2412Edit")
                    '            lblAlert.Text = ""

                    '            EnableControls()
                    '            btnSave.Enabled = True
                    '            btnSave.ForeColor = System.Drawing.Color.Black
                    '            btnCancel.Enabled = True
                    '            btnCancel.ForeColor = System.Drawing.Color.Black
                    '        End If
                    '    End If
                    '    conn.Close()
                    '    conn.Dispose()
                    'Else

                    '    txtPONo.Enabled = True
                    '    ddlBillingFreq.Enabled = True
                    '    txtContractNotes.Enabled = True
                    '    lblAlert.Text = ""
                    '    EnableControls()
                    '    btnSave.Enabled = True
                    '    btnSave.ForeColor = System.Drawing.Color.Black

                    '    btnCancel.Enabled = True
                    '    btnCancel.ForeColor = System.Drawing.Color.Black
                    'End If


                    ' '''''''''''''''''''''''''''''''''''''''''''''''''''

                    'lblMessage.Text = "ACTION: EDIT RECORD"
                    'txtMode.Text = "EDIT"
                    Exit Sub
                End If
            End If
        End If

        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return
        End If
        'DisableControls()
        'txtMode.Text = "EDIT"
        lblMessage.Text = "ACTION: EDIT RECORD"

        txtMode.Text = "EDIT"
        EnableControls()
        txtOriginalAccountId.Text = txtAccountId.Text
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black

        tb1.ActiveTabIndex = 0

        '''''' User Access
        'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
        Dim conn As MySqlConnection = New MySqlConnection()
        Dim command As MySqlCommand = New MySqlCommand

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        command.CommandType = CommandType.Text
        command.CommandText = "SELECT x2412EditAgreeValue, x2412EditPortFolioValue, x2412Edit FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
        command.Connection = conn

        Dim dr1 As MySqlDataReader = command.ExecuteReader()
        Dim dt1 As New DataTable
        dt1.Load(dr1)

        If dt1.Rows.Count > 0 Then
            If Convert.ToBoolean(dt1.Rows(0)("x2412EditAgreeValue")) = False Then
                'If dt.Rows(0)("x2412EditAgreeValue").ToString() = False Then
                'Me.btnADD.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                txtConDetVal.Attributes.Add("readonly", "readonly")
                txtAgreeVal.Attributes.Add("readonly", "readonly")
                txtDisPercent.Attributes.Add("readonly", "readonly")
                txtDisAmt.Attributes.Add("readonly", "readonly")

                txtConDetVal.BackColor = txtContractNo.BackColor
                txtAgreeVal.BackColor = txtContractNo.BackColor
                txtDisPercent.BackColor = txtContractNo.BackColor
                txtDisAmt.BackColor = txtContractNo.BackColor
            End If


            If Convert.ToBoolean(dt1.Rows(0)("x2412EditPortFolioValue")) = True Then
                txtPortfolioValue.Enabled = dt1.Rows(0)("x2412EditPortFolioValue")
            End If

            If Convert.ToBoolean(dt1.Rows(0)("x2412Edit")) = True Then
                txtPONo.Enabled = dt1.Rows(0)("x2412Edit")
                ddlBillingFreq.Enabled = dt1.Rows(0)("x2412Edit")
                txtContractNotes.Enabled = dt1.Rows(0)("x2412Edit")
            End If
        End If
        conn.Close()
        conn.Dispose()
        command.Dispose()
        dt1.Dispose()
        dr1.Close()
        'Else
        'txtPONo.Enabled = True
        'ddlBillingFreq.Enabled = True
        'txtContractNotes.Enabled = True
        'End If



        '11.09.21

        btnADD.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray

        btnRevision.Enabled = False
        btnRevision.ForeColor = System.Drawing.Color.Gray

        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnContractDetail.Enabled = False
        btnContractDetail.ForeColor = System.Drawing.Color.Gray

        btnTerminate.Enabled = False
        btnContractDetail.ForeColor = System.Drawing.Color.Gray

        btnEarlyCompletion.Enabled = False
        btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

        btnContractRenewal.Enabled = False
        btnContractRenewal.ForeColor = System.Drawing.Color.Gray

        btnCancelByCompany.Enabled = False
        btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

        btnServiceSchedule.Enabled = False
        btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
        'btnServiceSchedule.Text = "SCHEDULE"

        btnServiceRecords.Enabled = False
        btnServiceRecords.ForeColor = System.Drawing.Color.Gray

        btnTransactions.Enabled = False
        btnTransactions.ForeColor = System.Drawing.Color.Gray

        btnInvoice.Enabled = False
        btnInvoice.ForeColor = System.Drawing.Color.Gray

        btnFilter.Enabled = False
        btnFilter.ForeColor = System.Drawing.Color.Gray

        btnReset.Enabled = False
        btnReset.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        '11.09.21
        btnClient0.Visible = False
        'btnClient1.Visible = False
        btnMultiplePO.Visible = False '25.10.21
        btnClient2.Visible = False
        btnClient3.Visible = False
        btnClient4.Visible = False
        btnClient5.Visible = False
        btnClient6.Visible = False
        btnClient7.Visible = False
        btnClient8.Visible = False
        btnClient9.Visible = False
        btnClient10.Visible = False
        btnAutoRenew.Visible = False
        btnRecalculate.Visible = False
        btnExtendContractEndDate.Visible = False

        btnClient11.Visible = False
        btnClient12.Visible = False

        btnHistory.Visible = False

        txtContractDate.Enabled = False

        ddlContractGrp.Enabled = False

        If grvContractDetail.Rows.Count > 0 Then
            ddlContractGrp.Enabled = False
        End If
        btnSave.Text = "SAVE"
        'btnRecalculate.Visible = False
        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
        '''''' User Access
    End Sub


    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        lblMessage.Text = ""
        'txtMode.Text = ""
        Try
            Label51.Text = " This contract is dated " & txtContractDate.Text & " which is more than 60 days in the past."

            ddlContractGrp.Enabled = False

            Dim NoofDays As Integer
            NoofDays = DateDiff(DateInterval.Day, CDate(txtContractDate.Text), (Now))
            If NoofDays > 60 Then
                mdlEditContract.Show()
            Else
                EditContract()
            End If



        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEdit_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    'Protected Sub btnCancelSvc_Click(sender As Object, e As EventArgs) Handles btnCancelSvc.Click
    '    'MakeMeNull()
    '    'DisableControls()


    '    'SQLDSContract.DataBind()
    '    'GridView1.DataBind()
    'End Sub

    'Protected Sub btnSvcSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnSvcSearch.Click


    '    'Dim qry As String
    '    'qry = "SELECT * FROM tblcompanylocation where accountid='" & txtAccountIDtab2.Text & "'"

    '    'If String.IsNullOrEmpty(txtSearch.Text) = False Then
    '    '    qry = qry + " and (locationid='" & txtSearch.Text & "'"
    '    '    ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
    '    '    qry = qry + " or description like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or address1 like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addbuilding like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addstreet like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addpostal like '" + txtSearch.Text + "%')"
    '    'End If

    '    'MakeSvcNull()
    '    'SqlDataSource2.SelectCommand = qry
    '    'SqlDataSource2.DataBind()
    '    'GridView2.DataBind()
    '    txtSearch.Text = "Search here"
    'End Sub

    Protected Sub btnSvcAdd_Click(sender As Object, e As EventArgs) Handles btnSvcAdd.Click
        Try

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
                    Exit Sub
                End If
            End If

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                        lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

                        Exit Sub
                    End If
                End If
            End If

            'If txtStatus.Text = "O" Then
            If Left(txtStatus.Text, 1) = "O" Then
            Else
                'btnSave.Enabled = False
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            MakeSvcDetailNull()
            DisableSvcControls()
            'MakeSvcNull()
            lblMessage.Text = "ACTION: ADD SERVICE DETAILS"

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnQuit.Enabled = False
            btnQuit.ForeColor = System.Drawing.Color.Gray
            btnSvcAdd.Enabled = False
            btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            btnRevisionNCR.Enabled = False
            btnRevisionNCR.ForeColor = System.Drawing.Color.Gray

            txtSvcMode.Text = "NEW"
            txtContractGroupSelected.Text = ddlContractGrp.Text


            '''''''''''''''''''''''''''''''''''''''
            FindLocations()

            ''''''''''''''''''''''''''''''''''''''
            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    SqlDSCompanyLocation.SelectCommand=
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"

            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"
            'End If
            gvLocation.DataBind()

            '''''''''''''''''' Find Location

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                Dim sqlstr As String
                sqlstr = ""


                'If String.IsNullOrEmpty(lblAccountIdLocation1.Text.Trim) = False Then

                'If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                End If
                'Else
                '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                '        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                '    ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                '        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                '    End If
                'End If


                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstr
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New System.Data.DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '''''''''''''''''''''''''''''''''''''
                    Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
                    Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
                    Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
                    Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)
                    Dim lblid5 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtLocationGroupGV"), TextBox)
                    Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtBranchGV"), TextBox)
                    'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

                    'If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    '    txtLocationId.Text = " "
                    'Else
                    '    txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
                    '    lblid1.Text = txtLocationId.Text
                    'End If

                    txtLocationId.Text = lblAccountIdContactLocation1.Text.Trim
                    lblid1.Text = txtLocationId.Text

                    'If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
                    '    txtServiceName.Text = " "
                    'Else
                    '    txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
                    '    lblid2.Text = txtServiceName.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceName").ToString.Trim) = False Then
                        txtServiceName.Text = dt.Rows(0)("ServiceName").ToString
                        lblid2.Text = txtServiceName.Text
                    End If

                    'If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    '    txtServiceAddress.Text = " "
                    'Else
                    '    txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("Address1").ToString.Trim) = False Then
                        txtServiceAddress.Text = dt.Rows(0)("Address1").ToString
                        lblid3.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("Address1").ToString
                    End If


                    'If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddStreet").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddStreet").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddBuilding").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddBuilding").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddCity").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddPostal").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceLocationGroup").ToString.Trim) = False Then
                        lblid5.Text = dt.Rows(0)("ServiceLocationGroup").ToString
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("LocateGRP").ToString.Trim) = False Then
                        lblid4.Text = dt.Rows(0)("LocateGRP").ToString
                        txtLocationGroup.Text = lblid5.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("Location").ToString.Trim) = False Then
                        lblid6.Text = dt.Rows(0)("Location").ToString
                        txtBranch.Text = lblid6.Text
                    End If


                    'If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then
                    '    lblid4.Text = " "
                    'Else
                    '    lblid4.Text = gvLocation.SelectedRow.Cells(7).Text
                    'End If

                    'If gvLocation.SelectedRow.Cells(22).Text = "&nbsp;" Then
                    '    lblid5.Text = " "
                    'Else
                    '    txtLocationGroup.Text = gvLocation.SelectedRow.Cells(22).Text
                    '    lblid5.Text = gvLocation.SelectedRow.Cells(22).Text
                    'End If

                    'If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(23).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    RetrieveContactDetails(txtLocationId.Text.Trim)

                    ''''''''''''''''''''''''''''''''''''''
                End If


                conn.Close()
                conn.Dispose()
                dt.Dispose()
                command.Dispose()
                dr.Close()
            End If
            'End If


            'Start : 15.03.20

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                Dim sqlstr As String
                sqlstr = ""


                If String.IsNullOrEmpty(lblAccountIdLocation1.Text.Trim) = False Then

                    'If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                    '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    '        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                    '    ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    '        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                    '    End If
                    'Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                    ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                    End If
                    'End If


                    Dim command As MySqlCommand = New MySqlCommand

                    Dim conn As MySqlConnection = New MySqlConnection()
                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    command.CommandType = CommandType.Text
                    command.CommandText = sqlstr
                    command.Connection = conn

                    Dim dr As MySqlDataReader = command.ExecuteReader()
                    Dim dt As New System.Data.DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        '''''''''''''''''''''''''''''''''''''
                        Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
                        Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
                        Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)
                        Dim lblid5 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtLocationGroupGV"), TextBox)
                        Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtBranchGV"), TextBox)
                        'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

                        'If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
                        '    txtLocationId.Text = " "
                        'Else
                        '    txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
                        '    lblid1.Text = txtLocationId.Text
                        'End If

                        txtLocationId.Text = lblAccountIdLocation1.Text.Trim
                        lblid1.Text = txtLocationId.Text

                        'If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
                        '    txtServiceName.Text = " "
                        'Else
                        '    txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
                        '    lblid2.Text = txtServiceName.Text
                        'End If

                        If String.IsNullOrEmpty(dt.Rows(0)("ServiceName").ToString.Trim) = False Then
                            txtServiceName.Text = dt.Rows(0)("ServiceName").ToString
                            lblid2.Text = txtServiceName.Text
                        End If

                        'If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
                        '    txtServiceAddress.Text = " "
                        'Else
                        '    txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
                        '    lblid3.Text = txtServiceAddress.Text
                        'End If

                        If String.IsNullOrEmpty(dt.Rows(0)("Address1").ToString.Trim) = False Then
                            txtServiceAddress.Text = dt.Rows(0)("Address1").ToString
                            lblid3.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("Address1").ToString
                        End If


                        'If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then

                        'Else
                        '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
                        '    lblid3.Text = txtServiceAddress.Text
                        'End If

                        If String.IsNullOrEmpty(dt.Rows(0)("AddStreet").ToString.Trim) = False Then
                            txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddStreet").ToString
                            lblid3.Text = txtServiceAddress.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("AddBuilding").ToString.Trim) = False Then
                            txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddBuilding").ToString
                            lblid3.Text = txtServiceAddress.Text
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString.Trim) = False Then
                            txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddCity").ToString
                            lblid3.Text = txtServiceAddress.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString.Trim) = False Then
                            txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddPostal").ToString
                            lblid3.Text = txtServiceAddress.Text
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("ServiceLocationGroup").ToString.Trim) = False Then
                            lblid5.Text = dt.Rows(0)("ServiceLocationGroup").ToString
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("LocateGRP").ToString.Trim) = False Then
                            lblid4.Text = dt.Rows(0)("LocateGRP").ToString
                            txtLocationGroup.Text = lblid5.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("Location").ToString.Trim) = False Then
                            lblid6.Text = dt.Rows(0)("Location").ToString
                            txtBranch.Text = lblid6.Text
                        End If


                        'If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then
                        '    lblid4.Text = " "
                        'Else
                        '    lblid4.Text = gvLocation.SelectedRow.Cells(7).Text
                        'End If

                        'If gvLocation.SelectedRow.Cells(22).Text = "&nbsp;" Then
                        '    lblid5.Text = " "
                        'Else
                        '    txtLocationGroup.Text = gvLocation.SelectedRow.Cells(22).Text
                        '    lblid5.Text = gvLocation.SelectedRow.Cells(22).Text
                        'End If

                        'If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then

                        'Else
                        '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(23).Text)
                        '    lblid3.Text = txtServiceAddress.Text
                        'End If

                        RetrieveContactDetails(txtLocationId.Text.Trim)

                        ''''''''''''''''''''''''''''''''''''''
                    End If


                    conn.Close()
                    conn.Dispose()
                    dt.Dispose()
                    command.Dispose()
                    dr.Close()
                End If
            End If
            'End : 15.03.20
            '''''''''''''''''' Find Location

            'txtServiceName.Focus()

            'FirstGridViewRowLocation()
            'Dim Query10 As String
            'Query10 = ""
            'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    Query10 = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'End If

            'PopulateDropDownList(Query10, "LocationID", "LocationID", TextBoxLocationId1)


            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If

            tb1.ActiveTabIndex = 1
            tb1.Tabs(0).Enabled = False
            tb1.Tabs(2).Enabled = False
            tb1.Tabs(3).Enabled = False
            tb1.Tabs(4).Enabled = False
            tb1.Tabs(5).Enabled = False
            tb1.Tabs(6).Enabled = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcAdd_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnSvcEdit_Click(sender As Object, e As EventArgs) Handles btnSvcEdit.Click
        lblMessage.Text = ""

        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 0 Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

        End If

        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 1 Then
                If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                    lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

                    Exit Sub
                End If
            End If
        End If

        'If txtStatus.Text = "O" Then
        If Left(txtStatus.Text, 1) = "O" Then
        Else
            lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If txtRcnoDetail.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return

        End If
        DisableSvcControls()

        btnRevisionNCR.Enabled = False
        btnRevisionNCR.ForeColor = System.Drawing.Color.Gray

        txtSvcMode.Text = "EDIT"
        lblMessage.Text = "ACTION: EDIT SERVICE DETAILS"
        FindLocations()
    End Sub

    Protected Sub btnSvcDelete_Click(sender As Object, e As EventArgs) Handles btnSvcDelete.Click
        lblMessage.Text = ""

        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 0 Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
                Exit Sub
            End If
        End If

        If txtGS.Text = "P" Then
            If rbtFixedContinuous.SelectedIndex = 1 Then
                If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                    lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

                    Exit Sub
                End If
            End If
        End If
        'If txtStatus.Text = "O" Then
        '    btnSave.Enabled = True
        'Else
        '    'btnSave.Enabled = False
        '    lblAlert.Text = "ONLY 'O-OPEN' CONTRACTS CANE BE DELETED"
        '    Exit Sub
        'End If

        If txtRcnoDetail.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If



        'If txtStatus.Text <> "O" Then
        If Left(txtStatus.Text, 1) <> "O" Then
            'Dim message1 As String = "alert('Contract status is POSTED.. Cannot be DELETED!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)
            lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
            Exit Sub
        End If

        'If txtStatus.Text = "V" Then
        '    'Dim message1 As String = "alert('Contract status is VOID.. Cannot be DELETED!!!')"
        '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)
        '    lblAlert.Text = "CONTRACT STATUS IS VOID.. CANNOT BE DELETED"
        '    Exit Sub
        'End If

        If grvContractDetail.Rows.Count = 1 Then
            lblAlert.Text = "CANNOT BE DELETED.. THERE SHOULD BE AT LEAST 1 SERVICE DETAIL"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        btnRevisionNCR.Enabled = False
        btnRevisionNCR.ForeColor = System.Drawing.Color.Gray

        mdlPopupContractDetailDelete.Show()


    End Sub


    Private Sub svcDeleteDetailRecord()
        Try
          

                lblMessage.Text = "ACTION: DELETE CONTRACT DETAILS"
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()



                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim qry2 As String = "DELETE from tblContractDet where Rcno= @Rcno "

                command2.CommandText = qry2
                command2.Parameters.Clear()

                command2.Parameters.AddWithValue("@Rcno", txtRcnoDetail.Text)
                command2.Connection = conn
                command2.ExecuteNonQuery()

                Dim command3 As MySqlCommand = New MySqlCommand
                command3.CommandType = CommandType.Text

                Dim qry3 As String = "DELETE from tblContractServingTarget where SourceSQLId= @OrigCode "

                command3.CommandText = qry3
                command3.Parameters.Clear()

                command3.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
                command3.Connection = conn
                command3.ExecuteNonQuery()


                Dim command4 As MySqlCommand = New MySqlCommand
                command4.CommandType = CommandType.Text

                Dim qry4 As String = "DELETE from tblServiceContractFrequency where SourceSQLId= @OrigCode "

                command4.CommandText = qry4
                command4.Parameters.Clear()

                command4.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
                command4.Connection = conn
                command4.ExecuteNonQuery()

                conn.Close()
                conn.Dispose()
                command2.Dispose()
                command3.Dispose()
                command4.Dispose()
                'UpdateContractHeader()

                'Dim message As String = "alert('Contract Detail is deleted Successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                'btnADD_Click(sender, e)

                'grvContractDetail.DataBind()
                lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcDelete_Click", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try
        EnableSvcControls()

        SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

        grvContractDetail.DataSourceID = "SqlDSContractDet"
        grvContractDetail.DataBind()

        'SqlDSContractDet.DataBind()
        'grvContractDetail.DataBind()
        'MakeSvcNull()
        MakeSvcDetailNull()
        UpdateContractHeader()
        lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"


        mdlPopupContractDetailDelete.Hide()
        'End If
    End Sub
    Protected Sub grvContractDetail_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvContractDetail.SelectedIndexChanged
        'Start: Detail Records
        'MakeMeNull()

        'grvFreqDetails.Enabled = True
        'grvTargetDetails.Enabled = True

        Try
            txtErrorMsg.Text = ""
            MakeSvcDetailNull()

            'Dim editindex As Integer
            Dim editindex As Integer = grvContractDetail.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then

                editindex = txtSelectedIndex.Text
            Else
                editindex = grvContractDetail.SelectedIndex
            End If

            If editindex < 0 Then

                btnSvcAdd.Enabled = True
                btnSvcAdd.ForeColor = System.Drawing.Color.Black
                Exit Sub


            End If

            'MakeSvcDetailNull()
            DisableSvcControls()
            FirstGridViewRowLocation()

            rcno = DirectCast(grvContractDetail.Rows(editindex).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()
            txtRcnoDetail.Text = rcno.ToString()
            'Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractDet where rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Frequency").ToString <> "" Then : txtFrequency.Text = dt.Rows(0)("Frequency").ToString : End If
                If dt.Rows(0)("FrequencyDesc").ToString <> "" Then : txtFrequencyDesc.Text = dt.Rows(0)("FrequencyDesc").ToString : End If
                If dt.Rows(0)("ServiceID").ToString <> "" Then : txtServiceId.Text = dt.Rows(0)("ServiceID").ToString : End If
                If dt.Rows(0)("ServiceDesc").ToString <> "" Then : txtServiceDesc.Text = dt.Rows(0)("ServiceDesc").ToString : End If
                If dt.Rows(0)("NoService").ToString <> "" Then : txtNoService.Text = dt.Rows(0)("NoService").ToString : End If
                If dt.Rows(0)("NoofSvcInterval").ToString <> "" Then : txtNoofSvcInterval.Text = dt.Rows(0)("NoofSvcInterval").ToString : End If
                If dt.Rows(0)("NoofInterval").ToString <> "" Then : txtNoofInterval.Text = dt.Rows(0)("NoofInterval").ToString : End If
                If dt.Rows(0)("ServiceNotes").ToString <> "" Then : txtServiceNotes.Text = dt.Rows(0)("ServiceNotes").ToString : End If
                If dt.Rows(0)("Value").ToString <> "" Then : txtValuePerService.Text = dt.Rows(0)("Value").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtSourceSQLID.Text = dt.Rows(0)("OrigCode").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtOrigCode.Text = dt.Rows(0)("OrigCode").ToString : End If

                If dt.Rows(0)("UOM").ToString <> "" Then : txtUOM.Text = dt.Rows(0)("UOM").ToString : End If
                If dt.Rows(0)("Area").ToString <> "" Then : txtArea.Text = dt.Rows(0)("Area").ToString : End If

                If dt.Rows(0)("ContactPerson").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString : End If
                If dt.Rows(0)("ContactPerson2").ToString <> "" Then : txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString : End If
                If dt.Rows(0)("Contact1Position").ToString <> "" Then : txtPosition.Text = dt.Rows(0)("Contact1Position").ToString : End If
                If dt.Rows(0)("Contact2Position").ToString <> "" Then : txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString : End If
                If dt.Rows(0)("Telephone").ToString <> "" Then : txtTelephone.Text = dt.Rows(0)("Telephone").ToString : End If

                If dt.Rows(0)("Telephone2").ToString <> "" Then : txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString : End If
                If dt.Rows(0)("Fax").ToString <> "" Then : txtFax.Text = dt.Rows(0)("Fax").ToString : End If
                If dt.Rows(0)("Contact2Fax").ToString <> "" Then : txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString : End If
                If dt.Rows(0)("Contact2Tel").ToString <> "" Then : txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString : End If
                If dt.Rows(0)("Contact2Tel2").ToString <> "" Then : txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString : End If

                If dt.Rows(0)("Mobile").ToString <> "" Then : txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString : End If
                If dt.Rows(0)("Contact2Mobile").ToString <> "" Then : txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString : End If
                If dt.Rows(0)("Email").ToString <> "" Then : txtEmail1.Text = dt.Rows(0)("Email").ToString : End If
                If dt.Rows(0)("Contact2Email").ToString <> "" Then : txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString : End If

                If dt.Rows(0)("LocationID").ToString <> "" Then : txtLocationId.Text = dt.Rows(0)("LocationID").ToString : End If
                If dt.Rows(0)("ServiceName").ToString <> "" Then : txtServiceName.Text = dt.Rows(0)("ServiceName").ToString : End If
                If dt.Rows(0)("Address1").ToString <> "" Then : txtServiceAddress.Text = dt.Rows(0)("Address1").ToString : End If
                If dt.Rows(0)("LocateGRP").ToString <> "" Then : txtZone.Text = dt.Rows(0)("LocateGRP").ToString : End If
                If dt.Rows(0)("ServiceLocationGroup").ToString <> "" Then : txtLocationGroup.Text = dt.Rows(0)("ServiceLocationGroup").ToString : End If
                If dt.Rows(0)("Location").ToString <> "" Then : txtBranch.Text = dt.Rows(0)("Location").ToString : End If


            End If

            EnableSvcControls()
            btnSvcEdit.Enabled = True

            btnSvcDelete.Enabled = True
            btnSvcEdit.ForeColor = Color.Black
            btnSvcDelete.ForeColor = Color.Black

            'Start: Location

            SetRowDataLoc()

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvServiceLocation.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableLoc") = dtScdrLoc
                grvServiceLocation.DataSource = dtScdrLoc
                grvServiceLocation.DataBind()

                SetPreviousDataLoc()
            Next i



            FirstGridViewRowLocation()
            Dim cmdContratLoc As MySqlCommand = New MySqlCommand
            cmdContratLoc.CommandType = CommandType.Text
            cmdContratLoc.CommandText = "SELECT * FROM tblcontractDet where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratLoc.Connection = conn

            Dim drLocation As MySqlDataReader = cmdContratLoc.ExecuteReader()
            Dim dtLocation As New DataTable
            dtLocation.Load(drLocation)

            Dim TotDetailRecordsTarget = dtLocation.Rows.Count
            If dtLocation.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtLocation.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocationID"))

                    Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtServiceNameGV"), TextBox)
                    TextBoxServiceName.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceName"))

                    Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtServiceAddressGV"), TextBox)
                    TextBoxServiceAddress.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Address1"))

                    Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtZoneGV"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocateGRP"))

                    'Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGV"), TextBox)
                    'TextBoxSourceSQLID.Text = Convert.ToString(dtLocation.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Rcno"))

                    Dim TextBoxLocaionGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtLocationGroupGV"), TextBox)
                    TextBoxLocaionGroup.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceLocationGroup"))

                    Dim TextBoxLocaion As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtBranchGV"), TextBox)
                    TextBoxLocaion.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Location"))

                    'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" ThenIf txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then



                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    'Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If

                    'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'End If

                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else
                FirstGridViewRowLocation()
                'Dim Query As String
                'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                'Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                'If ddlContactType.Text.Trim = "CORPORATE" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'Else
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                'End If

                'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'End If
                'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc)
            End If

            'End: Location



            'Start: Service Detail


            SetRowDataServices()
            Dim dtScdrServices As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
            Dim drCurrentRowServices As DataRow = Nothing

            For i As Integer = 0 To grvServices.Rows.Count - 1
                dtScdrServices.Rows.Remove(dtScdrServices.Rows(0))
                drCurrentRowServices = dtScdrServices.NewRow()
                ViewState("CurrentTableServices") = dtScdrServices
                grvServices.DataSource = dtScdrServices
                grvServices.DataBind()
                SetPreviousDataServices()

            Next i




            FirstGridViewRowServices()
            Dim cmdContratServices As MySqlCommand = New MySqlCommand
            cmdContratServices.CommandType = CommandType.Text
            cmdContratServices.CommandText = "SELECT * FROM tblcontractDet where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratServices.Connection = conn

            Dim drServices As MySqlDataReader = cmdContratServices.ExecuteReader()
            Dim dtServices As New DataTable
            dtServices.Load(drServices)

            Dim TotDetailRecordsServices = dtServices.Rows.Count
            If dtServices.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtServices.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    TextBoxServiceId.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceId"))

                    Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtServiceDescriptionGV"), TextBox)
                    TextBoxServiceDescription.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceDesc"))

                    Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtServices.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtPricePerServiceGV"), TextBox)
                    TextBoxPricePerService.Text = Convert.ToString(dtServices.Rows(rowIndex)("Value"))

                    Dim TextBoxLocationId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    TextBoxLocationId.Text = Convert.ToString(dtServices.Rows(rowIndex)("Frequency"))

                    Dim TextBoxZone As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtTotalServicesGV"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoService"))

                    Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtCompletedServicesGV"), TextBox)
                    TextBoxCompletedServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoServiceCompleted"))

                    'Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtBalanceServicesGV"), TextBox)
                    'TextBoxBalanceServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtServices.Rows(rowIndex)("Rcno"))

                    Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = Convert.ToString(dtServices.Rows(rowIndex)("UOM"))

                    Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtAreaGV"), TextBox)
                    TextBoxArea.Text = Convert.ToString(dtServices.Rows(rowIndex)("Area"))

                    Dim Query As String
                    Dim TextBoxTargetDesc1 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)

                    Dim Query1 As String
                    Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)

                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    'Query = "Select * from tblCompanyLocation"
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else

                FirstGridViewRowServices()
                'Dim Query As String
                'Dim TextBoxTargetDesc As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                'If ddlContactType.Text.Trim = "CORPORATE" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'Else
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                'End If
                'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc)
            End If

            'End: Service Detail



            '26.02.23

            'Start: Target
            SetRowData()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTable"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvTargetDetails.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTable") = dtScdrTarget1
                grvTargetDetails.DataSource = dtScdrTarget1
                grvTargetDetails.DataBind()

                SetPreviousData()

            Next i


            FirstGridViewRowTarget()

            Dim cmdContratTarget As MySqlCommand = New MySqlCommand
            cmdContratTarget.CommandType = CommandType.Text
            cmdContratTarget.CommandText = "SELECT Rcno, TargetDesc, TargetID, ContractNo, ServiceID, SourceSQLID FROM tblcontractServingTarget where SourceSQLID=" & Convert.ToInt32(txtOrigCode.Text)
            cmdContratTarget.Connection = conn

            Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
            Dim dtTarget As New DataTable
            dtTarget.Load(drTarget)

            Dim TotDetailRecordsLoc = dtTarget.Rows.Count
            If dtTarget.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtTarget.Rows
                    If (TotDetailRecordsLoc > (rowIndex + 1)) Then

                        AddNewRow()
                    End If

                    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetDesc"))

                    Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtTargtIdGV"), TextBox)
                    TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetID"))

                    Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceIDGV"), TextBox)
                    TextBoxServiceID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ServiceID"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGV"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))


                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                AddNewRow()
                SetPreviousData()

            Else
                FirstGridViewRowTarget()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                Query = "Select descrip1 from tblTarget order by descrip1"

                PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            End If

            'End: Target
            '26.02.23



            'Start: Frequency

            ''''''''''''''
            Dim commandByWhich As MySqlCommand = New MySqlCommand
            commandByWhich.CommandType = CommandType.Text
            commandByWhich.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblservicefrequency where Frequency= '" & txtFrequency.Text & "'"
            commandByWhich.Connection = conn

            Dim drByWhich As MySqlDataReader = commandByWhich.ExecuteReader()
            Dim dtByWhich As New DataTable
            dtByWhich.Load(drByWhich)

            If dtByWhich.Rows.Count > 0 Then

                If dtByWhich.Rows(0)("MonthByWhichMonth").ToString <> "" Then : txtMonthByWhichMonth.Text = dtByWhich.Rows(0)("MonthByWhichMonth").ToString : End If
                If dtByWhich.Rows(0)("DOWByWhichWeek").ToString <> "" Then : txtDOWByWhichWeek.Text = dtByWhich.Rows(0)("DOWByWhichWeek").ToString : End If

            End If

            '''''''''''''''''''

            SetRowDataFreq()


            Dim dtFreq1 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            Dim drCurrentRowFreq As DataRow = Nothing

            For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
                dtFreq1.Rows.Remove(dtFreq1.Rows(0))
                drCurrentRowFreq = dtFreq1.NewRow()
                ViewState("CurrentTableFreq") = dtFreq1
                grvFreqDetails.DataSource = dtFreq1
                grvFreqDetails.DataBind()

                SetPreviousDataFreq()

            Next i


            FirstGridViewRowFreq()

            Dim cmdContratFreq As MySqlCommand = New MySqlCommand
            cmdContratFreq.CommandType = CommandType.Text
            cmdContratFreq.CommandText = "SELECT Rcno, FreqMtd, SeqNo, DayNo, MonthNo, WeekNo, WeekDOW, Location, BranchID, ContractNo, SourceSQLID  FROM tblServicecontractFrequency where SourceSQLID=" & Convert.ToInt32(txtOrigCode.Text)
            cmdContratFreq.Connection = conn

            Dim drFreq As MySqlDataReader = cmdContratFreq.ExecuteReader()
            Dim dtFreq As New DataTable
            dtFreq.Load(drFreq)


            If dtFreq.Rows.Count > 0 Then   '23.02.17 ???

                If txtNoofSvcInterval.Text = "1" Then

                    Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                    TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(0)("SeqNo"))

                    'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(0)("FreqMtd")), "str")
                    Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)

                    If txtFrequencyDesc.Text = "DAILY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DAY")
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("DATE")

                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("MONTH")
                    Else
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    End If

                    TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(0)("FreqMtd").ToString.Trim())

                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtDayNoGV"), TextBox)
                    TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(0)("DayNo"))

                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtWeekNoGV"), TextBox)
                    TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(0)("WeekNo"))

                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtMonthNoGV"), TextBox)
                    TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(0)("MonthNo"))

                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                    TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(0)("WeekDOW"))

                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlLocationGV"), DropDownList)
                    TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(0)("Location"))

                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlBranchIDGV"), DropDownList)
                    TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(0)("BranchID"))

                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtContractNoGVF"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(0)("ContractNo"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSourceSQLIDGVF"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(0)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtRcnoGVF"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(0)("Rcno"))


                    If txtFrequency.Text = "DAILY" Or txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Bi-Weekly" Or txtFrequency.Text = "Tri-Weekly" Or txtFrequency.Text = "Fortnightly" Or txtFrequency.Text = "Twice-Weekly" Then
                        TextBoxFreqMtd.Enabled = False
                    End If


                    If TextBoxFreqMtd.Text = "DAY" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False


                    ElseIf TextBoxFreqMtd.Text = "DATE" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    ElseIf TextBoxFreqMtd.Text = "DOW" Then

                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = True
                        TextBoxWeekDOW.Enabled = True


                        If txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Thrice-Weekly" Or txtFrequency.Text = "Twice-Weekly" Or txtFrequency.Text = "Four-Times-Weekly" Or txtFrequency.Text = "Five-Times-Weekly" Or txtFrequency.Text = "Six-Times-Weekly" Then
                            TextBoxWeekNo.Enabled = False
                        End If

                    ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                        TextBoxMonthNo.Enabled = True
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    End If

                    'Start: 14.11.19
                    If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If
                    'End: 14.11.19

                    'End If  '23.02.17 ''''''''''''''????
                ElseIf Convert.ToInt32(txtNoofSvcInterval.Text) > 1 Then
                    Dim rowIndex = 0
                    rowIndex = Convert.ToInt32(txtNoofSvcInterval.Text)

                    'For i As Integer = 0 To rowIndex




                    For i As Integer = 0 To (rowIndex - 1)
                        'If (i < (rowIndex 1 )) Then
                        If (i < (rowIndex - 1)) Then
                            AddNewRowFreqEdit()
                        End If


                        'If (i <= (rowIndex - 1)) Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        txtErrorMsg.Text = "Blank WeekDay"
                        TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(i)("SeqNo"))

                        Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)

                        'sen
                        If txtFrequencyDesc.Text = "DAILY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DAY")

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("DATE")

                            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                            'TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                            'TextBoxWeekDOW.Text = gDOW

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            ''Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("MONTH")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then

                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Enabled = False

                        Else
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            'TextBoxFreqMTD.Items.Clear()
                            'TextBoxFreqMTD.Items.Add(gFreqMTD)
                        End If
                        'sen

                        TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(i)("FreqMtd").ToString.Trim())

                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtDayNoGV"), TextBox)
                        TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(i)("DayNo"))

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(i)("WeekNo"))

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(i)("MonthNo"))

                        'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(i)("WeekDOW")), "str")
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(i)("WeekDOW"))

                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlLocationGV"), DropDownList)
                        TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(i)("Location"))

                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlBranchIDGV"), DropDownList)
                        TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(i)("BranchID"))

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtContractNoGVF"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(i)("ContractNo"))

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtSourceSQLIDGVF"), TextBox)
                        TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(i)("SourceSQLID"))

                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtRcnoGVF"), TextBox)
                        TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(i)("Rcno"))


                        If TextBoxFreqMtd.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                            End If


                        ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If

                        'Start: 14.11.19
                        If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If
                        'End: 14.11.19

                        'End If '''''  23.02.17 ????
                    Next i
                End If '12.06.17


                'AddNewRowFreq()
                'SetPreviousDataFreq()
            Else
                FirstGridViewRowFreq()
            End If


            'Delete last row

            'SetRowDataFreq()

            'Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq2 As DataRow = Nothing

            'If dtFreq2.Rows.Count > 1 Then
            '    dtFreq2.Rows.Remove(dtFreq2.Rows(dtFreq2.Rows.Count - 1))
            '    drCurrentRowFreq2 = dtFreq2.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq2
            '    grvFreqDetails.DataSource = dtFreq2
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()

            'End If
            'End: Frequency



            ''Start: Target
            'SetRowData()


            'Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTable"), DataTable)
            'Dim drCurrentRowTarget1 As DataRow = Nothing

            'For i As Integer = 0 To grvTargetDetails.Rows.Count - 1
            '    dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
            '    drCurrentRowTarget1 = dtScdrTarget1.NewRow()
            '    ViewState("CurrentTable") = dtScdrTarget1
            '    grvTargetDetails.DataSource = dtScdrTarget1
            '    grvTargetDetails.DataBind()

            '    SetPreviousData()

            'Next i


            'FirstGridViewRowTarget()

            'Dim cmdContratTarget As MySqlCommand = New MySqlCommand
            'cmdContratTarget.CommandType = CommandType.Text
            'cmdContratTarget.CommandText = "SELECT Rcno, TargetDesc, TargetID, ContractNo, ServiceID, SourceSQLID FROM tblcontractServingTarget where SourceSQLID=" & Convert.ToInt32(txtOrigCode.Text)
            'cmdContratTarget.Connection = conn

            'Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
            'Dim dtTarget As New DataTable
            'dtTarget.Load(drTarget)

            'Dim TotDetailRecordsLoc = dtTarget.Rows.Count
            'If dtTarget.Rows.Count > 0 Then

            '    Dim rowIndex = 0

            '    For Each row As DataRow In dtTarget.Rows
            '        If (TotDetailRecordsLoc > (rowIndex + 1)) Then

            '            AddNewRow()
            '        End If

            '        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '        TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetDesc"))

            '        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtTargtIdGV"), TextBox)
            '        TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetID"))

            '        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
            '        TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

            '        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceIDGV"), TextBox)
            '        TextBoxServiceID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ServiceID"))

            '        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGV"), TextBox)
            '        TextBoxSourceSQLID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("SourceSQLID"))

            '        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
            '        TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))


            '        Dim Query As String
            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select descrip1 from tblTarget order by descrip1"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
            '        rowIndex += 1

            '    Next row

            '    AddNewRow()
            '    SetPreviousData()

            'Else
            '    FirstGridViewRowTarget()
            '    Dim Query As String
            '    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '    Query = "Select descrip1 from tblTarget order by descrip1"

            '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            'End If

            ''End: Target

            'End: Detail Records
            command1.Dispose()
            commandByWhich.Dispose()
            cmdContratFreq.Dispose()
            cmdContratLoc.Dispose()
            cmdContratServices.Dispose()
            cmdContratTarget.Dispose()
            dt.Dispose()
            dtByWhich.Dispose()
            dtFreq.Dispose()
            dtFreq1.Dispose()
            dtLocation.Dispose()
            dtTarget.Dispose()
            dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            dtServices.Dispose()

            '09.11.21

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    btnSvcAdd.Enabled = False
                    btnSvcAdd.ForeColor = System.Drawing.Color.Gray

                    btnSvcEdit.Enabled = False
                    btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                    btnSvcDelete.Enabled = False
                    btnSvcDelete.ForeColor = System.Drawing.Color.Gray

                    'btnRevisionNCR.Enabled = False
                    'btnRevisionNCR.ForeColor = System.Drawing.Color.Gray
                End If
            End If

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                        btnSvcAdd.Enabled = False
                        btnSvcAdd.ForeColor = System.Drawing.Color.Gray

                        btnSvcEdit.Enabled = False
                        btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                        btnSvcDelete.Enabled = False
                        btnSvcDelete.ForeColor = System.Drawing.Color.Gray


                    End If
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                btnRevisionNCR.Visible = False
            Else
                txtFixedContinuousPH.Text = "CONTINUOUS"
                If txtGS.Text = "P" Then
                    If txtRevisionUA.Text = True Then
                        btnRevisionNCR.Visible = True
                    Else
                        btnRevisionNCR.Visible = False
                    End If


                    btnSvcAdd.Enabled = False
                    btnSvcEdit.Enabled = False
                    btnSvcDelete.Enabled = False

                    btnSvcAdd.ForeColor = Color.Gray
                    btnSvcEdit.ForeColor = Color.Gray
                    btnSvcDelete.ForeColor = Color.Gray
                Else
                    btnRevisionNCR.Visible = False
                End If

            End If


            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                btnSvcAdd.Enabled = False
                btnSvcAdd.ForeColor = System.Drawing.Color.Gray

                btnSvcEdit.Enabled = False
                btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                btnSvcDelete.Enabled = False
                btnSvcDelete.ForeColor = System.Drawing.Color.Gray

                btnRevisionNCR.Enabled = False
                btnRevisionNCR.ForeColor = System.Drawing.Color.Gray
            End If
            '09.11.21


            If Left(txtStatus.Text, 1) = "T" Then
                btnRevisionNCR.Visible = False
                'btnRevisionNCR.ForeColor = System.Drawing.Color.Gray
            End If
        Catch ex As Exception

            If txtErrorMsg.Text = "Blank WeekDay" Then
                lblAlert.Text = "SELECT 'DAY OF WEEK' FOR ALL WEEKS"
                txtErrorMsg.Text = ""
            Else
                lblAlert.Text = ex.Message.ToString
                txtErrorMsg.Text = ""
            End If

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    btnSvcAdd.Enabled = False
                    btnSvcAdd.ForeColor = System.Drawing.Color.Gray

                    btnSvcEdit.Enabled = False
                    btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                    btnSvcDelete.Enabled = False
                    btnSvcDelete.ForeColor = System.Drawing.Color.Gray

                    'btnRevisionNCR.Enabled = False
                    'btnRevisionNCR.ForeColor = System.Drawing.Color.Gray
                End If
            End If

            If txtGS.Text = "P" Then
                If rbtFixedContinuous.SelectedIndex = 1 Then
                    If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
                        btnSvcAdd.Enabled = False
                        btnSvcAdd.ForeColor = System.Drawing.Color.Gray

                        btnSvcEdit.Enabled = False
                        btnSvcEdit.ForeColor = System.Drawing.Color.Gray

                        btnSvcDelete.Enabled = False
                        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

                    End If
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                btnRevisionNCR.Visible = False
            Else
                txtFixedContinuousPH.Text = "CONTINUOUS"
                If txtGS.Text = "P" Then
                    If txtRevisionUA.Text = True Then
                        btnRevisionNCR.Visible = True
                    Else
                        btnRevisionNCR.Visible = False
                    End If

                    btnSvcAdd.Enabled = False
                    btnSvcEdit.Enabled = False
                    btnSvcDelete.Enabled = False

                    btnSvcAdd.ForeColor = Color.Gray
                    btnSvcEdit.ForeColor = Color.Gray
                    btnSvcDelete.ForeColor = Color.Gray
                Else
                    btnRevisionNCR.Visible = False
                End If

            End If

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grvContractDetail_SelectedIndexChanged", lblAlert.Text, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try


    End Sub

    Protected Sub btnSvcSave_Click(sender As Object, e As EventArgs) Handles btnSvcSave.Click
        'If txtMode.Text = "New" Then

        btnSvcSave.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        If txtDuplicateFreq.Text = "Y" Then
            lblAlert.Text = "DUPLICATE FREQUENCY HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            Exit Sub
        End If

        If txtDuplicateTarget.Text = "Y" Then
            lblAlert.Text = "DUPLICATE TARGET HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            Exit Sub
        End If


        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
            ConvertUpperService()
        End If



        'ElseIf txtMode.Text = "Edit" Then
        Try
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", "Start - " & txtAccountId.Text, txtContractNo.Text)

            Dim t As DateTime
            Dim d As Double
            'Dim dt As Date
            If String.IsNullOrEmpty(txtServTimeIn.Text) = False And txtServTimeIn.Text.Trim <> "__:__" Then
                If (DateTime.TryParse(txtServTimeIn.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                    lblAlert.Text = "PREFERRED TIME-IN IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                    'Return False
                    Exit Sub
                End If
            End If
            If String.IsNullOrEmpty(txtServTimeOut.Text) = False And txtServTimeOut.Text.Trim <> "__:__" Then
                If (DateTime.TryParse(txtServTimeOut.Text, t) = True) Then
                Else
                    'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                    lblAlert.Text = "PREFERRED TIME-OUT IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                    'Return False
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtServTimeIn.Text) = False Then
                If txtServTimeIn.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtServTimeIn.Text, t) = True) Then
                    Else
                        '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                        lblAlert.Text = "PREFERRED TIME-IN IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSvcSave.Enabled = True
                        btnADD.ForeColor = System.Drawing.Color.Black
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                        'Return False
                        Exit Sub
                    End If
                End If


            End If
            If String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
                If txtServTimeOut.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtServTimeOut.Text, t) = True) Then
                    Else
                        ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                        lblAlert.Text = "PREFERRED TIME-OUT IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSvcSave.Enabled = True
                        btnADD.ForeColor = System.Drawing.Color.Black
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                        'Return False
                        Exit Sub
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtAllocTime.Text) = False Then
                If Double.TryParse(txtAllocTime.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Allocated time is invalid!!! Enter time in mins!!", "str")
                    lblAlert.Text = "ALLOCATED TIME IS INVALID, ENTER TIME IN MINUTES"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                    'Return False
                    Exit Sub
                End If
            End If
            'If txtTeamIDMandatory.Text = "1" Then
            '    If String.IsNullOrEmpty(txtTeam.Text) = True Then
            '        lblAlert.Text = "Team ID Is Mandatory"
            '        btnSvcSave.Enabled = True
            '        'btnADD.ForeColor = System.Drawing.Color.Black
            '        Exit Sub
            '    End If
            'End If

            'If txtServiceByMandatory.Text = "1" Then
            '    If String.IsNullOrEmpty(txtServiceBy.Text) = True Then
            '        lblAlert.Text = "Service BY is Mandatory"
            '        btnSvcSave.Enabled = True
            '        'btnADD.ForeColor = System.Drawing.Color.Black
            '        Exit Sub
            '    End If
            'End If

           

            LabelServiceID.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            Label17Schdl.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            If txtServiceId.Text <> ddlContractGrp.Text Then
                mdlPopupServiceID.Show()
            Else
                svcSave()

            End If

            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '    conn.Open()

            '    Dim command1 As MySqlCommand = New MySqlCommand
            '    command1.CommandType = CommandType.Text
            '    command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
            '    command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '    command1.Connection = conn

            '    Dim dr As MySqlDataReader = command1.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then
            '        MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
            '    Else
            '        'Dim strdate As DateTime
            '        Dim GstNo As String

            '        GstNo = txtGstNo.Text.Trim

            '        Dim command As MySqlCommand = New MySqlCommand
            '        command.CommandType = CommandType.Text

            '        Dim qry As String = "Update tblContract set "
            '        qry = qry + "TimeIn=@TimeIn, TimeOut=@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  Supervisor =@Supervisor,"
            '        qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            '        'total 77 fields

            '        command.CommandText = qry
            '        command.Parameters.Clear()
            '        command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
            '        command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
            '        command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)

            '        If String.IsNullOrEmpty(txtAllocTime.Text) = True Then
            '            command.Parameters.AddWithValue("@AllocatedSvcTime", 0.0)
            '        Else
            '            command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
            '        End If

            '        command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.Trim.ToUpper)

            '        command.Parameters.AddWithValue("@Comments", Left(txtServInst.Text.Trim.ToUpper, 500))

            '        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtOurRef.Text).ToString("yyyy-MM-dd"))
            '        command.Connection = conn
            '        command.ExecuteNonQuery()
            '        ''MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")

            '        'Dim message As String = "alert('Record updated successfully!!!')"
            '        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '        command.Dispose()
            '    End If
            '    'conn.Close()


            '    ''''''''''''''''''''''''''''''''''''

            '    Dim sqlstr As String
            '    sqlstr = ""


            '    sqlstr = "SELECT SalesmanSvc FROM tblCompanyLocation where LocationId = '" & txtLocationId.Text & "'"

            '    Dim commandSalesmanSvc As MySqlCommand = New MySqlCommand

            '    Dim connSalesmanSvc As MySqlConnection = New MySqlConnection()
            '    connSalesmanSvc.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connSalesmanSvc.Open()

            '    commandSalesmanSvc.CommandType = CommandType.Text
            '    commandSalesmanSvc.CommandText = sqlstr
            '    commandSalesmanSvc.Connection = conn

            '    Dim drSalesmanSvc As MySqlDataReader = commandSalesmanSvc.ExecuteReader()
            '    Dim dtSalesmanSvc As New DataTable
            '    dtSalesmanSvc.Load(drSalesmanSvc)

            '    If dtSalesmanSvc.Rows.Count > 0 Then
            '        txtSalesman.Text = dtSalesmanSvc.Rows(0)("SalesmanSvc").ToString()
            '    End If
            '    connSalesmanSvc.Close()
            '    commandSalesmanSvc.Dispose()


            '    '''''''''''''''''''''''''''''''''''

            '    txtTargetDesc.Text = ""
            '    txtTargetId.Text = ""
            '    'Start: Detail Records

            '    If txtSvcMode.Text = "NEW" Then
            '        Try
            '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            'conn.Open()

            '            Dim command As MySqlCommand = New MySqlCommand
            '            command.CommandType = CommandType.Text

            '            Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
            '            qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
            '            qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
            '            qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
            '            qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '            qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
            '            qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
            '            qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
            '            qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
            '            qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '            command.CommandText = qry
            '            command.Parameters.Clear()

            '            Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
            '            Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
            '            Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)
            '            txtValuePerService.Text = lblid1.Text

            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '            command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

            '            If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
            '                command.Parameters.AddWithValue("@Value", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
            '            End If

            '            If String.IsNullOrEmpty(txtNoService.Text) = True Then
            '                command.Parameters.AddWithValue("@NoService", 0)
            '            Else
            '                command.Parameters.AddWithValue("@NoService", txtNoService.Text)
            '            End If

            '            command.Parameters.AddWithValue("@Location", txtBranch.Text)
            '            command.Parameters.AddWithValue("@BranchId", "")
            '            command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
            '            command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

            '            command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
            '            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
            '                command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
            '            Else
            '                command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
            '                command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
            '            End If

            '            'command.Parameters.AddWithValue("@ContactPerson", "")
            '            command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim.ToUpper)

            '            command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
            '            'command.Parameters.AddWithValue("@ServiceName", "")
            '            command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim.ToUpper)

            '            command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Email", txtEmail2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim.ToUpper)
            '            'command.Parameters.AddWithValue("@UOM", lblid2.Text.Trim)
            '            command.Parameters.AddWithValue("@UOM", "")

            '            If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
            '                command.Parameters.AddWithValue("@Area", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Area", Convert.ToDecimal(lblid3.Text.Trim))
            '            End If
            '            'command.Parameters.AddWithValue("@Area", txtArea.Text.Trim)
            '            'txtServiceName.Text = lblid2.Text
            '            'txtServiceAddress.Text = lblid3.Text
            '            'txtZone.Text

            '            command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
            '            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '            command.Connection = conn
            '            command.ExecuteNonQuery()
            '            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '            ''Exit Sub


            '            Dim sqlLastId As String
            '            sqlLastId = "SELECT last_insert_id() from tblcontractdet"




            '            Dim command3 As MySqlCommand = New MySqlCommand
            '            command3.CommandType = CommandType.Text

            '            command3.CommandText = sqlLastId
            '            command3.Parameters.Clear()

            '            'SqlCommand cmd = new SqlCommand(sql, conn);
            '            'conn.Open();
            '            command3.Connection = conn
            '            txtSourceSQLID.Text = command3.ExecuteScalar()

            '            ''''''''''''''''''''''''''
            '            'txtRcnoDetail.Text = txtSourceSQLID.Text
            '            ''''''''''''''''''''''''''


            '            Dim command4 As MySqlCommand = New MySqlCommand
            '            command4.CommandType = CommandType.Text
            '            command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
            '            command4.Connection = conn
            '            command4.ExecuteNonQuery()

            '            'Start:Target
            '            SetRowData()

            '            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

            '            If tableAdd IsNot Nothing Then

            '                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
            '                    'string txSpareId = row.ItemArray[0] as string;
            '                    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)

            '                    If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

            '                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim commandTarget As MySqlCommand = New MySqlCommand
            '                        commandTarget.CommandType = CommandType.Text

            '                        Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
            '                        qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
            '                        qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

            '                        qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
            '                        qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                        commandTarget.CommandText = qryTarget
            '                        commandTarget.Parameters.Clear()

            '                        commandTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        commandTarget.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

            '                        commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        commandTarget.Connection = conn
            '                        commandTarget.ExecuteNonQuery()

            '                        If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                            txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
            '                            txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargtId.Text.Trim
            '                        Else
            '                            txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
            '                            txtTargetId.Text = TextBoxTargtId.Text.Trim
            '                        End If

            '                    End If
            '                Next rowIndex
            '            End If

            '            UpdateTargetDescription()
            '            'End:Target

            '            ''
            '            'SetRowDataFreq()

            '            Dim tableFreq As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

            '            If tableFreq IsNot Nothing Then

            '                For rowIndexFreq As Integer = 0 To tableFreq.Rows.Count - 1
            '                    Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

            '                    If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

            '                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            '                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            '                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
            '                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            '                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            '                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            '                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            '                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            '                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            '                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            '                        Dim commandFreq As MySqlCommand = New MySqlCommand
            '                        commandFreq.CommandType = CommandType.Text

            '                        Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
            '                        qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                        qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
            '                        qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                        commandFreq.CommandText = qryFreq
            '                        commandFreq.Parameters.Clear()

            '                        commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

            '                        If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@DayNo", 0)
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
            '                        End If

            '                        If String.IsNullOrEmpty(TextBoxWeekNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@WeekNo", "")
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
            '                        End If

            '                        If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@MonthNo", 0)
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                        End If

            '                        'commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

            '                        If TextBoxWeekDOW.Text.Trim = "-1" Then
            '                            commandFreq.Parameters.AddWithValue("@WeekDow", "")
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                        End If

            '                        'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

            '                        commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        commandFreq.Connection = conn
            '                        commandFreq.ExecuteNonQuery()
            '                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '                        'End If
            '                        'conn.Close()

            '                    End If
            '                Next rowIndexFreq
            '            End If

            '            conn.Close()
            '            conn.Dispose()
            '            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '            'Dim message As String = "alert('Record added successfully!!!')"
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            lblMessage.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
            '            lblAlert.Text = ""
            '            'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            '            'grvContractDetail.DataSourceID = "SqlDSContractDet"

            '            SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            '            grvContractDetail.DataSourceID = "SqlDSContractDet"
            '            grvContractDetail.DataBind()
            '        Catch ex As Exception
            '            Dim exstr As String
            '            exstr = ex.Message.ToString
            '            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            '            lblAlert.Text = ex.Message.ToString
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '            Exit Sub
            '        End Try

            '        'DisableControls()
            '    ElseIf txtSvcMode.Text = "EDIT" Then
            '        Try
            '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            'conn.Open()

            '            Dim command As MySqlCommand = New MySqlCommand
            '            command.CommandType = CommandType.Text

            '            Dim qry As String = "UPDATE tblContractdet SET  Frequency = @Frequency, Value = @Value, NoService =@NoService, "
            '            qry = qry + "Location = @Location, BranchId = @BranchId, NoOfSvcInterval =@NoOfSvcInterval,"
            '            qry = qry + "NoOfInterval = @NoOfInterval, ServiceId = @ServiceId, ServiceDesc =@ServiceDesc,"
            '            qry = qry + "FrequencyDesc = @FrequencyDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
            '            qry = qry + "FrequencyDesc = @FrequencyDesc, TargetID = @TargetID, TargetDesc = @TargetDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
            '            qry = qry + "AccountID = @AccountID, ServiceName = @ServiceName, ContactPerson = @ContactPerson, ContactPerson2 = @ContactPerson2, Contact1Position=@Contact1Position, Contact2Position = @Contact2Position, Telephone = @Telephone, Telephone2 = @Telephone2, "
            '            qry = qry + "Contact2Tel=@Contact2Tel, Contact2Tel2 =@Contact2Tel2, Fax =@Fax, Contact2Fax =@Contact2Fax, Mobile =@Mobile, Contact2Mobile = @Contact2Mobile, Email =@Email, Contact2Email =@Contact2Email, "
            '            qry = qry + "LocationID =@LocationID,  Address1 =@Address1, LocateGRP = @Zone, UOM =@UOM, Area = @Area, ServiceLocationGroup=@ServiceLocationGroup, Salesman =@Salesman,"
            '            qry = qry + "LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn where rcno = @rcno"

            '            command.CommandText = qry
            '            command.Parameters.Clear()

            '            command.Parameters.AddWithValue("@rcno", txtRcnoDetail.Text.Trim)
            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '            command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

            '            Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
            '            Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
            '            Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)

            '            'If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
            '            '    command.Parameters.AddWithValue("@Value", 0.0)
            '            'Else
            '            '    command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
            '            'End If

            '            If String.IsNullOrEmpty(lblid1.Text) = True Or lblid1.Text = "" Then
            '                command.Parameters.AddWithValue("@Value", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Value", Convert.ToDecimal(lblid1.Text))
            '            End If

            '            'command.Parameters.AddWithValue("@NoService", txtNoService.Text)

            '            If String.IsNullOrEmpty(txtNoService.Text) = True Then
            '                command.Parameters.AddWithValue("@NoService", 0)
            '            Else
            '                command.Parameters.AddWithValue("@NoService", txtNoService.Text)
            '            End If

            '            command.Parameters.AddWithValue("@Location", txtBranch.Text.Trim)
            '            command.Parameters.AddWithValue("@BranchId", "")
            '            command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
            '            command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

            '            command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim)
            '            command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
            '            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
            '                command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)
            '            Else
            '                command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
            '                command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)

            '            End If

            '            'command.Parameters.AddWithValue("@ContactPerson", "")
            '            command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim)

            '            command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
            '            'command.Parameters.AddWithValue("@ServiceName", "")
            '            command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim)
            '            command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim)

            '            command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim)
            '            command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim)
            '            command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim)
            '            command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim)
            '            command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Email", txtServiceNotes.Text.Trim)
            '            command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim)
            '            command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim)
            '            command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim)
            '            'command.Parameters.AddWithValue("@UOM", lblid2.Text)
            '            command.Parameters.AddWithValue("@UOM", "")
            '            If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
            '                command.Parameters.AddWithValue("@Area", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Area", Convert.ToDecimal(txtArea.Text.Trim))
            '            End If
            '            command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
            '            'command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
            '            'command.Parameters.AddWithValue("@CreatedOn", DateAndTime.Now)
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '            command.Connection = conn
            '            command.ExecuteNonQuery()
            '            'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
            '            'Dim message As String = "alert('Record updated successfully!!!')"
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '            'End If
            '            grvContractDetail.DataSourceID = "SqlDSContractDet"
            '            lblMessage.Text = "EDIT: DETAIL RECORD SUCCESSFULLY UPDATED"
            '            lblAlert.Text = ""
            '            'conn.Close()

            '        Catch ex As Exception
            '            Dim exstr As String
            '            exstr = ex.Message.ToString
            '            'lblAlert.Text = exstr
            '            lblAlert.Text = ex.Message.ToString
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            '            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '            Exit Sub
            '            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", ex.Message.ToString, True)
            '        End Try

            '        'DisableControls()

            '        ''
            '        SetRowData()

            '        Dim table As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

            '        If table IsNot Nothing Then

            '            For rowIndex As Integer = 0 To table.Rows.Count - 1
            '                'string txSpareId = row.ItemArray[0] as string;
            '                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '                Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)


            '                If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then


            '                    'New
            '                    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)

            '                    If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then


            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim command As MySqlCommand = New MySqlCommand
            '                        command.CommandType = CommandType.Text

            '                        Dim qry As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
            '                        qry = qry + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
            '                        qry = qry + " LastModifiedBy, LastModifiedOn)"

            '                        qry = qry + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
            '                        qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


            '                        command.CommandText = qry
            '                        command.Parameters.Clear()

            '                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        command.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

            '                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        command.Connection = conn
            '                        command.ExecuteNonQuery()

            '                    Else
            '                        'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim command As MySqlCommand = New MySqlCommand
            '                        command.CommandType = CommandType.Text

            '                        Dim qry As String = "Update tblcontractservingtarget set TargetId = @TargetId, TargetDesc = @TargetDesc,  ServiceId = @ServiceId,"
            '                        qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"


            '                        command.CommandText = qry
            '                        command.Parameters.Clear()

            '                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)
            '                        command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
            '                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        command.Connection = conn
            '                        command.ExecuteNonQuery()
            '                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '                        'End If
            '                        'conn.Close()
            '                    End If

            '                    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                        txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
            '                        txtTargetId.Text = txtTargetId.Text + ", " + TextBoxTargtId.Text.Trim
            '                    Else
            '                        txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
            '                        txtTargetId.Text = TextBoxTargtId.Text.Trim
            '                    End If
            '                End If

            '            Next rowIndex

            '            UpdateTargetDescription()
            '        End If

            '        ' ''

            '        ' ''
            '        'SetRowDataFreq()

            '        Dim conndel As MySqlConnection = New MySqlConnection(constr)
            '        conndel.Open()

            '        If String.IsNullOrEmpty(txtRcno.Text) = False And (txtRcno.Text) <> "0" Then
            '            'Delete
            '            Dim commandFreqDel As MySqlCommand = New MySqlCommand
            '            commandFreqDel.CommandType = CommandType.Text

            '            Dim qrydel As String = "DELETE from tblservicecontractfrequency where SourceSQLId = @SourceSQLId"

            '            commandFreqDel.CommandText = qrydel
            '            commandFreqDel.Parameters.Clear()

            '            commandFreqDel.Parameters.AddWithValue("@SourceSQLId", Convert.ToInt32(txtRcnoDetail.Text))

            '            commandFreqDel.Connection = conndel
            '            commandFreqDel.ExecuteNonQuery()

            '            conndel.Close()
            '            commandFreqDel.Dispose()
            '        End If
            '        'Delete


            '        Dim tableFreqEdit As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

            '        If tableFreqEdit IsNot Nothing Then

            '            For rowIndexFreq As Integer = 0 To tableFreqEdit.Rows.Count - 1
            '                'string txSpareId = row.ItemArray[0] as string;
            '                Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

            '                If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

            '                    Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            '                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            '                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
            '                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            '                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            '                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            '                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            '                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            '                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            '                    Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            '                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                    'conn.Open()

            '                    Dim commandFreq As MySqlCommand = New MySqlCommand
            '                    commandFreq.CommandType = CommandType.Text

            '                    Dim qry As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
            '                    qry = qry + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                    qry = qry + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
            '                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                    commandFreq.CommandText = qry
            '                    commandFreq.Parameters.Clear()

            '                    commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                    commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

            '                    If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                        commandFreq.Parameters.AddWithValue("@DayNo", 0)
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
            '                    End If

            '                    'If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                    '    commandFreq.Parameters.AddWithValue("@WeekNo", 0)
            '                    'Else
            '                    '    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
            '                    'End If

            '                    If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
            '                        commandFreq.Parameters.AddWithValue("@MonthNo", 0)
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                    End If


            '                    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

            '                    If TextBoxWeekDOW.Text.Trim = "-1" Then
            '                        commandFreq.Parameters.AddWithValue("@WeekDow", "")
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                    End If

            '                    'commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                    'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

            '                    commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                    commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                    commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                    commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                    commandFreq.Connection = conn
            '                    commandFreq.ExecuteNonQuery()

            '                    'End If
            '                    'conn.Close()

            '                End If
            '            Next rowIndexFreq

            '        End If
            '        'MessageBox.Message.Alert(Page, "Record Updated successfully!!!", "str")
            '        'grvContractDetail.DataSourceID = "SqlDSContractDet"

            '        SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"
            '        grvContractDetail.DataSourceID = "SqlDSContractDet"
            '        grvContractDetail.DataBind()

            '        lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
            '        lblAlert.Text = ""
            '        conn.Close()
            '        conn.Dispose()
            '    End If

            '    txtServiceAddressCons.Text = ""
            '    UpdateContractHeader()

            '    command1.Dispose()
            '    dt.Dispose()
            '    dtSalesmanSvc.Dispose()
            '    'End: Detail Records

            '    'If String.IsNullOrEmpty(txtAccountId.Text) Then
            '    '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = '" & txtclientid.Text & "'"
            '    'Else
            '    '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = '" & txtAccountId.Text & "'"
            '    'End If

            '    'SqlDataSource2.DataBind()
            '    'GridView2.DataBind()
            '    '' MakeSvcNull()
            '    'txtSvcMode.Text = ""
            '    EnableSvcControls()
            '    btnSvcAdd.Enabled = True
            '    btnSvcAdd.ForeColor = System.Drawing.Color.Black
            '    btnADD.Enabled = True
            '    btnADD.ForeColor = System.Drawing.Color.Black

            '    btnSvcEdit.Enabled = True
            '    btnSvcEdit.ForeColor = System.Drawing.Color.Black

            '    btnSvcDelete.Enabled = False
            '    btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            '    'btnCopyAdd.Enabled = True
            '    'btnCopyAdd.ForeColor = System.Drawing.Color.Black
            '    'btnDelete.Enabled = True
            '    'btnDelete.ForeColor = System.Drawing.Color.Black

            '    btnQuit.Enabled = True
            '    btnQuit.ForeColor = System.Drawing.Color.Black
            '    'AddrConcat()
            '    txtSvcMode.Text = ""

            '    btnServiceSchedule.Enabled = True
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            'Catch ex As Exception
            '    Dim exstr As String
            '    exstr = ex.Message.ToString
            '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            '    'lblAlert.Text = exstr

            '    lblAlert.Text = ex.Message.ToString
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)


            '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '    Exit Sub
            '    'Dim message As String = "alert('" + exstr + "')"
            '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            'End Try

            'DisableControls()
            'btnContractDetail.Enabled = True
            'btnServiceSchedule.Enabled = True
            ''End If

            ''GridView1.DataSourceID = "SQLDSContract"

            'Try
            '    If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
            '        'GridView1.DataSourceID = "SQLDSContract"
            '        SQLDSContract.SelectCommand = txt.Text
            '        GridView1.DataSourceID = "SqlDSContract"
            '        GridView1.DataBind()
            '    Else

            '        If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
            '            Dim ContractClientIdLocation As String = ""

            '            ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
            '            ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
            '            ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
            '            ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
            '            ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '            SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation
            '            GridView1.DataSourceID = "SQLDSContractClientIdLocation"
            '            GridSelected = "SQLDSContractClientIdLocation"
            '        Else
            '            Dim ContractClientId As String = ""

            '            ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
            '            ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, Amtbalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '            SQLDSContractClientId.SelectCommand = ContractClientId
            '            GridView1.DataSourceID = "SQLDSContractClientId"
            '            GridSelected = "SQLDSContractClientId"
            '        End If

            '        'GridView1.DataSourceID = "SQLDSContractClientId"
            '        'GridSelected = "SQLDSContractClientId"
            '    End If

            '    ''SQLDSContract.DataBind()
            '    GridView1.DataBind()

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", "End - " & txtAccountId.Text, txtContractNo.Text)
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub



    Private Sub svcSave()
        Dim isAgreeValueBlank As String
        Try
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Enter", "Start")
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - " & txtAccountId.Text, txtContractNo.Text)

            Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(0).Cells(3).FindControl("ddlServiceFrequencyGV"), DropDownList)
            txtErrorMsg.Text = "N"
            If grvFreqDetails.Rows.Count > 1 Then
                For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
                    Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetails.Rows(i).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                    Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetails.Rows(i).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                    Dim TextBoxFreqMTDGV1 As DropDownList = CType(grvFreqDetails.Rows(i).Cells(5).FindControl("ddlFreqMTDGV"), DropDownList)



                    'If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                    '    If TextBoxServiceFrequency1.Text.Trim = "MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "QUARTERLY" Or TextBoxServiceFrequency1.Text.Trim = "WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FORTNIGHTLY" Or TextBoxServiceFrequency1.Text.Trim = "HALF-ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-ANNUALLY" Then
                    '        If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then

                    '            lblAlert.Text = "PLEASE SELECT 'DAY OF WEEK FOR DOW " & i + 1
                    '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '            Exit Sub
                    '        End If

                    '    End If
                    'End If

                    If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                        If TextBoxServiceFrequency1.Text.Trim = "TWICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FIVE-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "SIX-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "TWICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-MONTHLY" Then
                            If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then

                                lblAlert.Text = "PLEASE SELECT 'DAY OF WEEK' FOR DOW " & i + 1
                                txtErrorMsg.Text = "Y"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If
                    End If


                    'ddlWeekDOWGV

                    'For k As Integer = i To grvFreqDetails.Rows.Count - 1

                    'Next

                    For j As Integer = i + 1 To grvFreqDetails.Rows.Count - 1


                        Dim TextBoxWeekNo2 As TextBox = CType(grvFreqDetails.Rows(j).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW2 As DropDownList = CType(grvFreqDetails.Rows(j).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)

                        If TextBoxWeekNo1.Text.Trim = TextBoxWeekNo2.Text.Trim And TextBoxWeekDOW1.Text.Trim = TextBoxWeekDOW2.Text.Trim Then
                            If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                                txtErrorMsg.Text = "Y"
                                lblAlert.Text = "SAME WEEK NO '" & TextBoxWeekNo1.Text.Trim & "' AND DAY OF WEEK '" & TextBoxWeekDOW1.Text.Trim & "' HAS BEEN SELECTED"
                                Exit Sub
                            End If

                            'Exit Sub
                        End If
                    Next j

                Next i
            End If


            '26.02.23

            If grvFreqDetails.Rows.Count = 1 Then
                For k As Integer = 0 To grvFreqDetails.Rows.Count - 1
                    Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetails.Rows(k).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                    Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetails.Rows(k).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                    Dim TextBoxFreqMTDGV1 As DropDownList = CType(grvFreqDetails.Rows(k).Cells(5).FindControl("ddlFreqMTDGV"), DropDownList)

                    If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                        If TextBoxServiceFrequency1.Text.Trim = "MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "QUARTERLY" Or TextBoxServiceFrequency1.Text.Trim = "WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FORTNIGHTLY" Or TextBoxServiceFrequency1.Text.Trim = "HALF-ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-ANNUALLY" Then
                            If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then
                                txtErrorMsg.Text = "Y"
                                lblAlert.Text = "PLEASE SELECT 'DAY OF WEEK"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If
                    End If

                    'If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                    '    If TextBoxServiceFrequency1.Text.Trim = "TWICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FIVE-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "SIX-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "TWICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-MONTHLY" Then
                    '        If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then

                    '            lblAlert.Text = "PLEASE SELECT 'DAY OF WEEK' FOR DOW "
                    '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '            Exit Sub
                    '        End If

                    '    End If
                    'End If

                Next k
            End If

            '26.02.23
            txtErrorMsg.Text = "N"

            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                txtRcno.Text = 0
            End If

            isAgreeValueBlank = "N"

            If String.IsNullOrEmpty(txtAgreeVal.Text) = True Or Convert.ToDecimal(txtAgreeVal.Text) = 0.0 Then
                isAgreeValueBlank = "Y"
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
            command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
            Else
                If String.IsNullOrEmpty(txtContractNo.Text) = True Then
                    '19.06.22
                    Dim commandInsertIntoTblContractFromTblContractTemp As MySqlCommand = New MySqlCommand

                    commandInsertIntoTblContractFromTblContractTemp.CommandType = CommandType.StoredProcedure
                    commandInsertIntoTblContractFromTblContractTemp.CommandText = "InsertIntoTblContractFromTblContractTemp"
                    commandInsertIntoTblContractFromTblContractTemp.Parameters.Clear()
                    commandInsertIntoTblContractFromTblContractTemp.Parameters.AddWithValue("@pr_DraftBy", Session("UserID"))
                    commandInsertIntoTblContractFromTblContractTemp.Connection = conn
                    commandInsertIntoTblContractFromTblContractTemp.ExecuteScalar()
                    'conn.Close()
                    commandInsertIntoTblContractFromTblContractTemp.Dispose()

                    txtContractNo.Text = txtContractNoTemp.Text
                    lblContractNo.Text = txtContractNoTemp.Text


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontract"


                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcno.Text = commandRcno.ExecuteScalar()
                    commandRcno.Dispose()



                    'Renewal
                    If txtModeRenew.Text = "R" Then

                        'updateContractDetailsInfo()   'quoted on 27.02.2023

                        Dim lContractCode As String
                        lContractCode = ""

                        If String.IsNullOrEmpty(txtRenewalTerminationContract.Text) = False Then
                            Dim hyphenpos As Integer

                            hyphenpos = 0
                            hyphenpos = (txtRenewalTerminationContract.Text.IndexOf("-"))

                            lContractCode = Left(txtRenewalTerminationContract.Text, (hyphenpos - 1))

                        End If

                        Dim commandRenew As MySqlCommand = New MySqlCommand
                        commandRenew.CommandType = CommandType.Text

                        Dim qryRenew As String = "Update tblContract set  RenewalDate =@RenewalDate, Status = 'C', RenewalSt = 'R', RenewalContractNo =@RenewalContractNo, ActualEnd=@ActualEnd, TerminationCode=@TerminationCode, TerminationDescription=@TerminationDescription where rcno = @rcno  "

                        commandRenew.CommandText = qryRenew
                        commandRenew.Parameters.Clear()

                        commandRenew.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                        commandRenew.Parameters.AddWithValue("@RenewalDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandRenew.Parameters.AddWithValue("@RenewalContractNo", txtContractNo.Text.Trim)
                        commandRenew.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEndChStForReNew.Text).ToString("yyyy-MM-dd HH:mm:ss"))

                        If String.IsNullOrEmpty(txtRenewalTerminationContract.Text) = False Then
                            commandRenew.Parameters.AddWithValue("@TerminationCode", lContractCode.Trim)
                            commandRenew.Parameters.AddWithValue("@TerminationDescription", Right(txtRenewalTerminationContract.Text.Trim, Len(txtRenewalTerminationContract.Text.Trim) - (Len(lContractCode.Trim) + 3)))

                        Else
                            commandRenew.Parameters.AddWithValue("@TerminationCode", "")
                            commandRenew.Parameters.AddWithValue("@TerminationDescription", "")

                        End If
                        commandRenew.Connection = conn
                        commandRenew.ExecuteNonQuery()
                        commandRenew.Dispose()

                        ''''''''''
                        'UpdateSignedAgreementReference(txtOContract.Text, )
                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - UpdateSignedAgreementReference -" & txtAccountId.Text, txtContractNo.Text)
                        UpdateSignedAgreementReference(txtOContract.Text, txtRcno.Text)
                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - UpdateSignedAgreementReference -" & txtAccountId.Text, txtContractNo.Text)


                        ''''''''''
                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - UpdateAgreeValue (ReNew) -" & txtAccountId.Text, txtContractNo.Text)

                        UpdateAgreeValue("ReNew")

                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - UpdateAgreeValue (ReNew) -" & txtAccountId.Text, txtContractNo.Text)


                        lblMessage.Text = "EDIT: CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text & " SUCCESSFULLY "
                        lblAlert.Text = ""
                        commandRenew.Dispose()
                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtOContract.Text, "RENEWED", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcnoRenew.Text)

                        txtModeRenew.Text = ""
                    End If
                        'Renewal



                        'Revision
                        If txtModeRenew.Text = "REV" Then

                            ''''''''''''''''''''''''''''''''''''''''
                            Dim CountBilledServiceRecords As Integer
                            CountBilledServiceRecords = 0

                            Dim CountPostedServiceRecords As Integer
                            CountPostedServiceRecords = 0
                            Dim commandT1 As MySqlCommand = New MySqlCommand

                            Dim strdate1 As DateTime

                            commandT1.CommandType = CommandType.Text
                            'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtPrevContract.Text & "'"

                            commandT1.Connection = conn

                            Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
                            Dim dtserviceT As New DataTable
                            dtserviceT.Load(drserviceT)

                            If dtserviceT.Rows.Count > 0 Then

                                For x As Integer = 0 To dtserviceT.Rows.Count - 1

                                    '''''''''''''''''''''''''
                                    Dim commandIsBilled As MySqlCommand = New MySqlCommand

                                    commandIsBilled.CommandType = CommandType.Text
                                    commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                                    commandIsBilled.Connection = conn

                                    Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                                    Dim dtIsBilled As New DataTable
                                    dtIsBilled.Load(drIsBilled)

                                    If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                        CountBilledServiceRecords = CountBilledServiceRecords + 1
                                        commandIsBilled.Dispose()
                                        dtIsBilled.Dispose()
                                        GoTo nextrecR
                                    End If

                                    commandIsBilled.Dispose()
                                    dtIsBilled.Dispose()
                                    '''''''''''''''''''''''''''

                                    Dim commandE2 As MySqlCommand = New MySqlCommand
                                    commandE2.CommandType = CommandType.Text
                                    'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                                    commandE2.CommandText = "update  tblServiceRecord set Status='V' where  RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"

                                    commandE2.Connection = conn
                                    commandE2.ExecuteNonQuery()
                                    commandE2.Dispose()
nextrecR:
                                Next

                            End If

                            Dim commandT As MySqlCommand = New MySqlCommand
                            commandT.CommandType = CommandType.Text

                            Dim qryT As String = "UPDATE tblContract SET  Status ='R', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription where ContractNo= @ContractNo "

                            commandT.CommandText = qryT
                            commandT.Parameters.Clear()

                            If txtActualEndChSt.Text = "" Then
                                commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                            Else
                                strdate1 = DateTime.Parse(txtActualEndChSt.Text.Trim)
                                commandT.Parameters.AddWithValue("@ActualEnd", strdate1.ToString("yyyy-MM-dd"))
                            End If


                            commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                            commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                            commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                            'commandT.Parameters.AddWithValue("@TerminationDescription", Strings.Mid(ddlTerminationCode.Text,9)

                            commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                            commandT.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
                            'commandT.Parameters.AddWithValue("@Rcno", txtPrevContract.TexttxtRcno.Text)
                            commandT.Parameters.AddWithValue("@ContractNo", txtPrevContract.Text)
                            commandT.Connection = conn
                            commandT.ExecuteNonQuery()

                            GridView1.DataBind()

                            'originalStatus = ""
                            ddlStatusChSt.SelectedIndex = 0
                            txtActualEndChSt.Text = ""
                            txtCommentChSt.Text = ""

                            '26.05.22
                            'txtModeRenew.Text = ""
                            '26.05.22
                            ''''''''''''''''''''''''''''''''''''''''

                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - UpdateSignedAgreementReference -" & txtAccountId.Text, txtContractNo.Text)

                            UpdateSignedAgreementReference(txtPrevContract.Text, txtRcno.Text)

                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - UpdateSignedAgreementReference -" & txtAccountId.Text, txtContractNo.Text)


                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - InsertCommissionNotes -" & txtAccountId.Text, txtContractNo.Text)

                            InsertCommissionNotes()

                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - InsertCommissionNotes -" & txtAccountId.Text, txtContractNo.Text)


                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - UpdateAgreeValue (Revise) -" & txtAccountId.Text, txtContractNo.Text)

                            UpdateAgreeValue("Revise")
                            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - UpdateAgreeValue (Revise) -" & txtAccountId.Text, txtContractNo.Text)


                            lblMessage.Text = "EDIT: CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text & " SUCCESSFULLY "
                            lblAlert.Text = ""

                            txtModeRenew.Text = ""
                        End If
                        'Revision

                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "Start - UpdateAgreeValue (New) -" & txtAccountId.Text, txtContractNo.Text)

                        UpdateAgreeValue("New")

                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - UpdateAgreeValue (New) -" & txtAccountId.Text, txtContractNo.Text)


                        txtMode.Text = ""
                    End If
                    '19.06.22


                    Dim GstNo As String

                    GstNo = txtGstNo.Text.Trim

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "Update tblContract set "
                    qry = qry + "TimeIn=@TimeIn, TimeOut=@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  Supervisor =@Supervisor,"
                    qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                    'total 77 fields

                    command.CommandText = qry
                    command.Parameters.Clear()
                    command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                    command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)

                    If String.IsNullOrEmpty(txtAllocTime.Text) = True Then
                        command.Parameters.AddWithValue("@AllocatedSvcTime", 0.0)
                    Else
                        command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
                    End If

                    command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.Trim.ToUpper)

                    'command.Parameters.AddWithValue("@Comments", Left(txtServInst.Text.Trim.ToUpper, 500))

                    command.Parameters.AddWithValue("@Comments", (txtServInst.Text.Trim.ToUpper))

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtOurRef.Text).ToString("yyyy-MM-dd"))
                    command.Connection = conn
                    command.ExecuteNonQuery()
                    ''MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")

                    'Dim message As String = "alert('Record updated successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    command.Dispose()
                End If
                'conn.Close()


                ''''''''''''''''''''''''''''''''''''

                Dim sqlstr As String
                sqlstr = ""


                sqlstr = "SELECT SalesmanSvc FROM tblCompanyLocation where LocationId = '" & txtLocationId.Text & "'"

                Dim commandSalesmanSvc As MySqlCommand = New MySqlCommand

                Dim connSalesmanSvc As MySqlConnection = New MySqlConnection()
                connSalesmanSvc.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connSalesmanSvc.Open()

                commandSalesmanSvc.CommandType = CommandType.Text
                commandSalesmanSvc.CommandText = sqlstr
                commandSalesmanSvc.Connection = conn

                Dim drSalesmanSvc As MySqlDataReader = commandSalesmanSvc.ExecuteReader()
                Dim dtSalesmanSvc As New DataTable
                dtSalesmanSvc.Load(drSalesmanSvc)

                If dtSalesmanSvc.Rows.Count > 0 Then
                    txtSalesman.Text = dtSalesmanSvc.Rows(0)("SalesmanSvc").ToString()
                End If
                connSalesmanSvc.Close()
                commandSalesmanSvc.Dispose()


                '''''''''''''''''''''''''''''''''''

                txtTargetDesc.Text = ""
                txtTargetId.Text = ""
                'Start: Detail Records

                If txtSvcMode.Text = "NEW" Then
                    Try
                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
                        'conn.Open()

                        Dim command As MySqlCommand = New MySqlCommand
                        command.CommandType = CommandType.Text

                        Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                        qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                        qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                        qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                        qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                        qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
                        qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
                        qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
                        qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
                        qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                        command.CommandText = qry
                        command.Parameters.Clear()

                        Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
                        Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)
                        txtValuePerService.Text = lblid1.Text

                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

                        If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                            command.Parameters.AddWithValue("@Value", 0.0)
                        Else
                            command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
                        End If

                        If String.IsNullOrEmpty(txtNoService.Text) = True Then
                            command.Parameters.AddWithValue("@NoService", 0)
                        Else
                            command.Parameters.AddWithValue("@NoService", txtNoService.Text)
                        End If

                        command.Parameters.AddWithValue("@Location", txtBranch.Text)
                        command.Parameters.AddWithValue("@BranchId", "")
                        command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
                        command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
                        If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                            command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
                            command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
                        Else
                            command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
                            command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
                        End If

                        'command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim.ToUpper)

                        command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                        'command.Parameters.AddWithValue("@ServiceName", "")
                        command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim.ToUpper)

                        command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact2Email", txtEmail2.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim.ToUpper)
                        'command.Parameters.AddWithValue("@UOM", lblid2.Text.Trim)
                        command.Parameters.AddWithValue("@UOM", "")

                        If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                            command.Parameters.AddWithValue("@Area", 0.0)
                        Else
                            command.Parameters.AddWithValue("@Area", Convert.ToDecimal(lblid3.Text.Trim))
                        End If
                        'command.Parameters.AddWithValue("@Area", txtArea.Text.Trim)
                        'txtServiceName.Text = lblid2.Text
                        'txtServiceAddress.Text = lblid3.Text
                        'txtZone.Text

                        command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Connection = conn
                        command.ExecuteNonQuery()
                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                        ''Exit Sub


                        Dim sqlLastId As String
                        sqlLastId = "SELECT last_insert_id() from tblcontractdet"

                        Dim command3 As MySqlCommand = New MySqlCommand
                        command3.CommandType = CommandType.Text

                        command3.CommandText = sqlLastId
                        command3.Parameters.Clear()

                        'SqlCommand cmd = new SqlCommand(sql, conn);
                        'conn.Open();
                        command3.Connection = conn
                        txtSourceSQLID.Text = command3.ExecuteScalar()

                        txtRcnoDetailLog.Text = txtSourceSQLID.Text

                        ''''''''''''''''''''''''''
                        'txtRcnoDetail.Text = txtSourceSQLID.Text
                        ''''''''''''''''''''''''''


                        Dim command4 As MySqlCommand = New MySqlCommand
                        command4.CommandType = CommandType.Text
                        command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                        command4.Connection = conn
                        command4.ExecuteNonQuery()

                        'Start:Target
                        SetRowData()

                        Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                        If tableAdd IsNot Nothing Then

                            For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                                'string txSpareId = row.ItemArray[0] as string;
                                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)

                                If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                                    Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                    'conn.Open()

                                    Dim commandTarget As MySqlCommand = New MySqlCommand
                                    commandTarget.CommandType = CommandType.Text

                                    Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
                                    qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                    qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

                                    qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                    qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                    commandTarget.CommandText = qryTarget
                                    commandTarget.Parameters.Clear()

                                    commandTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                    commandTarget.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                    commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                    commandTarget.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                    commandTarget.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                    commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                    'commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    commandTarget.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                    'commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    commandTarget.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    commandTarget.Connection = conn
                                    commandTarget.ExecuteNonQuery()

                                    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                        txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                        txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargtId.Text.Trim
                                    Else
                                        txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                        txtTargetId.Text = TextBoxTargtId.Text.Trim
                                    End If

                                End If
                            Next rowIndex
                        End If

                        UpdateTargetDescription()
                        'End:Target

                        ''
                        'SetRowDataFreq()

                        Dim tableFreq As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                        If tableFreq IsNot Nothing Then

                            For rowIndexFreq As Integer = 0 To tableFreq.Rows.Count - 1
                                Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

                                If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                                    Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
                                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                                    Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                                    Dim commandFreq As MySqlCommand = New MySqlCommand
                                    commandFreq.CommandType = CommandType.Text

                                    Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                                    qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                                    qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                                    qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                    commandFreq.CommandText = qryFreq
                                    commandFreq.Parameters.Clear()

                                    commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                    commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                                    commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                    commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                                    If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                        commandFreq.Parameters.AddWithValue("@DayNo", 0)
                                    Else
                                        commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                                    End If

                                    If String.IsNullOrEmpty(TextBoxWeekNo.Text.Trim) = True Then
                                        commandFreq.Parameters.AddWithValue("@WeekNo", "")
                                    Else
                                        commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                                    End If

                                    If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                        commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                                    Else
                                        commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                    End If

                                    'commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                                    If TextBoxWeekDOW.Text.Trim = "-1" Then
                                        commandFreq.Parameters.AddWithValue("@WeekDow", "")
                                    Else
                                        commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                                    End If

                                    'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                    commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                                    commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                                    commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                    'commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    commandFreq.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                    'commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    commandFreq.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    commandFreq.Connection = conn
                                    commandFreq.ExecuteNonQuery()
                                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                                    'End If
                                    'conn.Close()

                                End If
                            Next rowIndexFreq
                        End If

                        conn.Close()
                        conn.Dispose()
                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                        'Dim message As String = "alert('Record added successfully!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                        lblMessage.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
                        lblAlert.Text = ""
                        'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

                        'grvContractDetail.DataSourceID = "SqlDSContractDet"

                        SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by LocationId, Frequency, ServiceId limit 20"

                        grvContractDetail.DataSourceID = "SqlDSContractDet"
                        grvContractDetail.DataBind()
                    Catch ex As Exception
                        Dim exstr As String
                        exstr = ex.Message.ToString
                        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                        lblAlert.Text = ex.Message.ToString
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
                        Exit Sub
                    End Try

                    'DisableControls()
                ElseIf txtSvcMode.Text = "EDIT" Then
                    Try
                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
                        'conn.Open()
                        txtRcnoDetailLog.Text = txtRcnoDetail.Text

                        Dim command As MySqlCommand = New MySqlCommand
                        command.CommandType = CommandType.Text

                        Dim qry As String = "UPDATE tblContractdet SET  Frequency = @Frequency, Value = @Value, NoService =@NoService, "
                        qry = qry + "Location = @Location, BranchId = @BranchId, NoOfSvcInterval =@NoOfSvcInterval,"
                        qry = qry + "NoOfInterval = @NoOfInterval, ServiceId = @ServiceId, ServiceDesc =@ServiceDesc,"
                        qry = qry + "FrequencyDesc = @FrequencyDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                        qry = qry + "FrequencyDesc = @FrequencyDesc, TargetID = @TargetID, TargetDesc = @TargetDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                        qry = qry + "AccountID = @AccountID, ServiceName = @ServiceName, ContactPerson = @ContactPerson, ContactPerson2 = @ContactPerson2, Contact1Position=@Contact1Position, Contact2Position = @Contact2Position, Telephone = @Telephone, Telephone2 = @Telephone2, "
                        qry = qry + "Contact2Tel=@Contact2Tel, Contact2Tel2 =@Contact2Tel2, Fax =@Fax, Contact2Fax =@Contact2Fax, Mobile =@Mobile, Contact2Mobile = @Contact2Mobile, Email =@Email, Contact2Email =@Contact2Email, "
                        qry = qry + "LocationID =@LocationID,  Address1 =@Address1, LocateGRP = @Zone, UOM =@UOM, Area = @Area, ServiceLocationGroup=@ServiceLocationGroup, Salesman =@Salesman,"
                        qry = qry + "LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn where rcno = @rcno"

                        command.CommandText = qry
                        command.Parameters.Clear()

                        command.Parameters.AddWithValue("@rcno", txtRcnoDetail.Text.Trim)
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

                        Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
                        Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)

                        'If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                        '    command.Parameters.AddWithValue("@Value", 0.0)
                        'Else
                        '    command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
                        'End If

                        If String.IsNullOrEmpty(lblid1.Text) = True Or lblid1.Text = "" Then
                            command.Parameters.AddWithValue("@Value", 0.0)
                        Else
                            command.Parameters.AddWithValue("@Value", Convert.ToDecimal(lblid1.Text))
                        End If

                        'command.Parameters.AddWithValue("@NoService", txtNoService.Text)

                        If String.IsNullOrEmpty(txtNoService.Text) = True Then
                            command.Parameters.AddWithValue("@NoService", 0)
                        Else
                            command.Parameters.AddWithValue("@NoService", txtNoService.Text)
                        End If

                        command.Parameters.AddWithValue("@Location", txtBranch.Text.Trim)
                        command.Parameters.AddWithValue("@BranchId", "")
                        command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
                        command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim)
                        command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
                        If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                            command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
                            command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)
                        Else
                            command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
                            command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)

                        End If

                        'command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim)

                        command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                        'command.Parameters.AddWithValue("@ServiceName", "")
                        command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim)
                        command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim)
                        command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim)

                        command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim)
                        command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim)
                        command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim)
                        command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim)
                        command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim)
                        command.Parameters.AddWithValue("@Contact2Email", txtServiceNotes.Text.Trim)
                        command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim)
                        command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim)
                        command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim)
                        'command.Parameters.AddWithValue("@UOM", lblid2.Text)
                        command.Parameters.AddWithValue("@UOM", "")
                        If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                            command.Parameters.AddWithValue("@Area", 0.0)
                        Else
                            command.Parameters.AddWithValue("@Area", Convert.ToDecimal(txtArea.Text.Trim))
                        End If
                        command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                        'command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        'command.Parameters.AddWithValue("@CreatedOn", DateAndTime.Now)
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Connection = conn
                        command.ExecuteNonQuery()
                        'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        'Dim message As String = "alert('Record updated successfully!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                        'End If
                        grvContractDetail.DataSourceID = "SqlDSContractDet"
                        lblMessage.Text = "EDIT: DETAIL RECORD SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        'conn.Close()

                    Catch ex As Exception
                        Dim exstr As String
                        exstr = ex.Message.ToString
                        'lblAlert.Text = exstr
                        lblAlert.Text = ex.Message.ToString
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
                        Exit Sub
                        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", ex.Message.ToString, True)
                    End Try

                    'DisableControls()

                    ''
                    SetRowData()

                    Dim table As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                    If table IsNot Nothing Then

                        For rowIndex As Integer = 0 To table.Rows.Count - 1
                            'string txSpareId = row.ItemArray[0] as string;
                            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                            Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)


                            If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then


                                'New
                                Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)

                                If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then


                                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                    'conn.Open()

                                    Dim command As MySqlCommand = New MySqlCommand
                                    command.CommandType = CommandType.Text

                                    Dim qry As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
                                    qry = qry + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                    qry = qry + " LastModifiedBy, LastModifiedOn)"

                                    qry = qry + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                                    command.CommandText = qry
                                    command.Parameters.Clear()

                                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                    command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                    command.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                    command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                    command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    command.Connection = conn
                                    command.ExecuteNonQuery()

                                Else
                                    'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                    'conn.Open()

                                    Dim command As MySqlCommand = New MySqlCommand
                                    command.CommandType = CommandType.Text

                                    Dim qry As String = "Update tblcontractservingtarget set TargetId = @TargetId, TargetDesc = @TargetDesc,  ServiceId = @ServiceId,"
                                    qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"


                                    command.CommandText = qry
                                    command.Parameters.Clear()

                                    command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                    command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                    command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)
                                    command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
                                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                    command.Connection = conn
                                    command.ExecuteNonQuery()
                                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                                    'End If
                                    'conn.Close()
                                End If

                                If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                    txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                    txtTargetId.Text = txtTargetId.Text + ", " + TextBoxTargtId.Text.Trim
                                Else
                                    txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                    txtTargetId.Text = TextBoxTargtId.Text.Trim
                                End If
                            End If

                        Next rowIndex

                        UpdateTargetDescription()
                    End If

                    ' ''

                    ' ''
                    'SetRowDataFreq()

                    Dim conndel As MySqlConnection = New MySqlConnection(constr)
                    conndel.Open()

                    If String.IsNullOrEmpty(txtRcno.Text) = False And (txtRcno.Text) <> "0" Then
                        'Delete
                        Dim commandFreqDel As MySqlCommand = New MySqlCommand
                        commandFreqDel.CommandType = CommandType.Text

                        Dim qrydel As String = "DELETE from tblservicecontractfrequency where SourceSQLId = @SourceSQLId"

                        commandFreqDel.CommandText = qrydel
                        commandFreqDel.Parameters.Clear()

                        commandFreqDel.Parameters.AddWithValue("@SourceSQLId", Convert.ToInt32(txtRcnoDetail.Text))

                        commandFreqDel.Connection = conndel
                        commandFreqDel.ExecuteNonQuery()

                        conndel.Close()
                        commandFreqDel.Dispose()
                    End If
                    'Delete


                    Dim tableFreqEdit As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                    If tableFreqEdit IsNot Nothing Then

                        For rowIndexFreq As Integer = 0 To tableFreqEdit.Rows.Count - 1
                            'string txSpareId = row.ItemArray[0] as string;
                            Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

                            If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                                Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                                Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                                Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
                                Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                                Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                                Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                                Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                                Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                                Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                                Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim commandFreq As MySqlCommand = New MySqlCommand
                                commandFreq.CommandType = CommandType.Text

                                Dim qry As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                                qry = qry + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                                qry = qry + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                                qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                commandFreq.CommandText = qry
                                commandFreq.Parameters.Clear()

                                commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                                If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                    commandFreq.Parameters.AddWithValue("@DayNo", 0)
                                Else
                                    commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                                End If

                                'If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                '    commandFreq.Parameters.AddWithValue("@WeekNo", 0)
                                'Else
                                '    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                                'End If

                                If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                    commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                                Else
                                    commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                End If


                                commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                                If TextBoxWeekDOW.Text.Trim = "-1" Then
                                    commandFreq.Parameters.AddWithValue("@WeekDow", "")
                                Else
                                    commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                                End If

                                'commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                                'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                                commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                'commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandFreq.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandFreq.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                commandFreq.Connection = conn
                                commandFreq.ExecuteNonQuery()

                                'End If
                                'conn.Close()

                            End If
                        Next rowIndexFreq

                    End If
                    'MessageBox.Message.Alert(Page, "Record Updated successfully!!!", "str")
                    'grvContractDetail.DataSourceID = "SqlDSContractDet"

                    SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"
                    grvContractDetail.DataSourceID = "SqlDSContractDet"
                    grvContractDetail.DataBind()

                    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                    lblAlert.Text = ""
                    conn.Close()
                    conn.Dispose()
                End If

                txtServiceAddressCons.Text = ""
                UpdateContractHeader()

                command1.Dispose()
                dt.Dispose()
                dtSalesmanSvc.Dispose()
                'End: Detail Records

                'If String.IsNullOrEmpty(txtAccountId.Text) Then
                '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = '" & txtclientid.Text & "'"
                'Else
                '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = '" & txtAccountId.Text & "'"
                'End If

                'SqlDataSource2.DataBind()
                'GridView2.DataBind()
                '' MakeSvcNull()
                'txtSvcMode.Text = ""
                EnableSvcControls()
                btnSvcAdd.Enabled = True
                btnSvcAdd.ForeColor = System.Drawing.Color.Black
                btnADD.Enabled = True
                btnADD.ForeColor = System.Drawing.Color.Black

                btnSvcEdit.Enabled = True
                btnSvcEdit.ForeColor = System.Drawing.Color.Black

                btnSvcDelete.Enabled = False
                btnSvcDelete.ForeColor = System.Drawing.Color.Gray
                'btnCopyAdd.Enabled = True
                'btnCopyAdd.ForeColor = System.Drawing.Color.Black
                'btnDelete.Enabled = True
                'btnDelete.ForeColor = System.Drawing.Color.Black

                btnQuit.Enabled = True
                btnQuit.ForeColor = System.Drawing.Color.Black
                'AddrConcat()
                txtSvcMode.Text = ""

                btnServiceSchedule.Enabled = True
                btnServiceSchedule.ForeColor = System.Drawing.Color.Black


                If rbtFixedContinuous.SelectedIndex = 0 Then
                    btnRevisionNCR.Visible = False
                Else
                    txtFixedContinuousPH.Text = "CONTINUOUS"
                    If txtGS.Text = "P" Then
                        If txtRevisionUA.Text = True Then
                            btnRevisionNCR.Visible = True
                            btnRevisionNCR.Enabled = True
                            btnRevisionNCR.ForeColor = System.Drawing.Color.Black
                        Else
                            btnRevisionNCR.Visible = False
                        End If
                        'btnRevisionNCR.Visible = True
                        'btnRevisionNCR.Enabled = True
                        'btnRevisionNCR.ForeColor = System.Drawing.Color.Black
                    Else
                        btnRevisionNCR.Visible = False
                    End If
                End If

                tb1.Tabs(0).Enabled = True
                tb1.Tabs(2).Enabled = True
                tb1.Tabs(3).Enabled = True
                tb1.Tabs(4).Enabled = True
                tb1.Tabs(5).Enabled = True
                tb1.Tabs(6).Enabled = True

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            'lblAlert.Text = exstr

            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try

        DisableControls()
        btnContractDetail.Enabled = True
        btnServiceSchedule.Enabled = True
        'End If

        'GridView1.DataSourceID = "SQLDSContract"

        Try
            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                'GridView1.DataSourceID = "SQLDSContract"
                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()
            Else

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                    Dim ContractClientIdLocation As String = ""

                    ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                    ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                    ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                    ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                    ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation
                    GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                    GridSelected = "SQLDSContractClientIdLocation"
                Else
                    Dim ContractClientId As String = ""

                    ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                    ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, Amtbalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientId.SelectCommand = ContractClientId
                    GridView1.DataSourceID = "SQLDSContractClientId"
                    GridSelected = "SQLDSContractClientId"
                End If

            End If


            If txtGS.Text = "O" And isAgreeValueBlank = "Y" Then
                UpdateAgreeValue("New")
            End If

            ''SQLDSContract.DataBind()
            GridView1.DataBind()


            UpdateServiceDescriptionContractPriceHistory()
            'InsertNewLogDetail()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SvcSave", "End - " & txtAccountId.Text, txtContractNo.Text)
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateServiceDescriptionContractPriceHistory()
        Try
            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
            command1.Connection = conn1

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            '12.09.22

            'Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            'conn1.Open()

            Dim cmdConcatServiceDescContractPriceHistory As MySqlCommand = New MySqlCommand

            cmdConcatServiceDescContractPriceHistory.CommandType = CommandType.Text
            cmdConcatServiceDescContractPriceHistory.CommandText = "SELECT Frequency, TargetID FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
            cmdConcatServiceDescContractPriceHistory.Connection = conn1

            Dim drUpdateServiceDescContractPriceHistory As MySqlDataReader = cmdConcatServiceDescContractPriceHistory.ExecuteReader()
            Dim dtUpdateServiceDescContractPriceHistory As New DataTable
            dtUpdateServiceDescContractPriceHistory.Load(drUpdateServiceDescContractPriceHistory)

            txtServiceDescriptionCons.Text = ""

            For i = 0 To dtservicecontractDet.Rows.Count - 1

                If i = 0 Then
                    txtServiceDescriptionCons.Text = dtUpdateServiceDescContractPriceHistory.Rows(i)("Frequency").ToString() & " : " & dtUpdateServiceDescContractPriceHistory.Rows(i)("TargetID").ToString()
                Else
                    txtServiceDescriptionCons.Text = txtServiceDescriptionCons.Text & " ;  " & dtUpdateServiceDescContractPriceHistory.Rows(i)("Frequency").ToString() & " : " & dtUpdateServiceDescContractPriceHistory.Rows(i)("TargetID").ToString()
                End If

            Next i

            Dim cmdUpdateServiceDescContractPriceHistory As MySqlCommand = New MySqlCommand
            cmdUpdateServiceDescContractPriceHistory.CommandType = CommandType.Text

            Dim qry As String = "Update tblcontractPriceHistory set ServiceDescription = @ServiceDescription "
            qry = qry + "where ContractNo = @ContractNo"


            cmdUpdateServiceDescContractPriceHistory.CommandText = qry
            cmdUpdateServiceDescContractPriceHistory.Parameters.Clear()
            cmdUpdateServiceDescContractPriceHistory.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            cmdUpdateServiceDescContractPriceHistory.Parameters.AddWithValue("@ServiceDescription", txtServiceDescriptionCons.Text.Trim)

            cmdUpdateServiceDescContractPriceHistory.Connection = conn1
            cmdUpdateServiceDescContractPriceHistory.ExecuteNonQuery()

            '12.09.22

            conn1.Close()
            conn1.Dispose()

        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION UpdateContractHeader", ex.Message.ToString, "")
            Exit Sub

        End Try
    End Sub


    Private Sub UpdateContractHeader()
        Try
            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
            command1.Connection = conn1

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            Dim notes As String = "", totalValue, totalNoService, maxNoService, perServiceValue, ContractValue, totalServiceAmt, discpercent, discAmt, agreeValue, ValuePerMonth As Decimal
            Dim ServiceAddress As String = "", lLocationId As String = ""
            totalValue = 0
            totalNoService = 0
            perServiceValue = 0
            maxNoService = 0
            totalServiceAmt = 0
            ValuePerMonth = 0
            discpercent = 0
            discAmt = 0.0
            lLocationId = ""
            txtServiceAddressCons.Text = ""
            txtServiceDescriptionCons.Text = ""

            For i = 0 To dtservicecontractDet.Rows.Count - 1
                totalValue = totalValue + Val(dtservicecontractDet.Rows(i)("Value").ToString())
                totalNoService = totalNoService + Val(dtservicecontractDet.Rows(i)("NoService").ToString())
                totalServiceAmt = totalServiceAmt + CDec(Val(dtservicecontractDet.Rows(i)("Value").ToString())) * CDec(Val(dtservicecontractDet.Rows(i)("NoService").ToString()))
                If Val(dtservicecontractDet.Rows(i)("NoService").ToString()) > maxNoService Then maxNoService = Val(dtservicecontractDet.Rows(i)("NoService").ToString())

                If lLocationId <> dtservicecontractDet.Rows(i)("LocationId").ToString() Then

                    If i = 0 Then
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & dtservicecontractDet.Rows(i)("Address1").ToString()
                    Else
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & ";  " & vbNewLine & dtservicecontractDet.Rows(i)("Address1").ToString()
                    End If
                    lLocationId = dtservicecontractDet.Rows(i)("LocationId").ToString()
                End If

                If i = 0 Then
                    txtServiceDescriptionCons.Text = dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                Else
                    txtServiceDescriptionCons.Text = txtServiceDescriptionCons.Text & "   " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                End If

            Next i

            'If maxNoService <> 0 Then perServiceValue = Math.Round(totalServiceAmt / maxNoService, 2)

            If totalNoService > 0 Then
                perServiceValue = Math.Round(totalServiceAmt / totalNoService, 2)
            End If

            discpercent = Val(txtDisPercent.Text)
            discAmt = Val(txtDisAmt.Text)

            totalNoService = Math.Round(totalNoService, 0)
            totalServiceAmt = Math.Round(totalServiceAmt, 2)


            If (totalValue > 0) Then
                If discpercent <> 0 Then
                    ContractValue = totalServiceAmt
                    discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)

                ElseIf discpercent = 0 And discAmt > 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)
                ElseIf discpercent = 0 And discAmt = 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue
                    agreeValue = Math.Round(agreeValue, 2)

                End If
            Else
                ContractValue = Convert.ToDecimal(txtConDetVal.Text)
                agreeValue = ContractValue - discAmt
                agreeValue = Math.Round(agreeValue, 2)
            End If


            If String.IsNullOrEmpty(txtNoofMonth.Text) = True Then
                'txtNoofMonth.Text = DateDiff(DateInterval.Month, txtServStart.Text, txtServEnd.Text)
                Dim NoofMonth As Integer
                NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                txtNoofMonth.Text = Convert.ToInt32(NoofMonth)
            End If


            If Convert.ToInt32(txtNoofMonth.Text) > 0 Then
                ValuePerMonth = Convert.ToDecimal(agreeValue / Convert.ToInt32(txtNoofMonth.Text))
            Else
                ValuePerMonth = Convert.ToDecimal(agreeValue)
            End If


            If (totalValue > 0) Then
                'txtConDetVal.Text = totalServiceAmt.ToString
                'txtAgreeVal.Text = agreeValue.ToString
                ''txtValPerMnth.Text = ValuePerMonth.ToString
                txtValPerMnth.Text = 0.0   '30.10.17
            Else
                ValuePerMonth = Math.Round(ValuePerMonth, 2)
            End If


            'Update
            Dim commandUpdateDetail As MySqlCommand = New MySqlCommand

            commandUpdateDetail.CommandType = CommandType.StoredProcedure
            commandUpdateDetail.CommandText = "UpdateContractFromContractDetail"
            commandUpdateDetail.Parameters.Clear()

            commandUpdateDetail.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
            commandUpdateDetail.Parameters.AddWithValue("@pr_totalNoService", totalNoService)
            commandUpdateDetail.Parameters.AddWithValue("@pr_totalServiceAmt", totalServiceAmt)
            commandUpdateDetail.Parameters.AddWithValue("@pr_perServiceValue", perServiceValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ContractValue", ContractValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValue", agreeValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValueContract", Convert.ToDecimal(txtAgreeVal.Text))
            commandUpdateDetail.Parameters.AddWithValue("@pr_NoofMonths", Convert.ToInt64(txtNoofMonth.Text))
            commandUpdateDetail.Parameters.AddWithValue("@pr_discpercent", discpercent)
            commandUpdateDetail.Parameters.AddWithValue("@pr_discAmt", discAmt)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ValuePerMonth", ValuePerMonth)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceAddress", txtServiceAddressCons.Text)
            'commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", Left(txtServiceDescriptionCons.Text, 500))
            commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", (txtServiceDescriptionCons.Text))

            commandUpdateDetail.Connection = conn1
            commandUpdateDetail.ExecuteScalar()
            conn1.Close()

            If (totalValue > 0) Then
                txtConDetVal.Text = totalServiceAmt.ToString
                txtAgreeVal.Text = agreeValue.ToString
                'txtValPerMnth.Text = ValuePerMonth.ToString
                txtValPerMnth.Text = 0.0   '30.10.17
            End If


         
            conn1.Close()
            conn1.Dispose()
            command1.Dispose()
            commandUpdateDetail.Dispose()
            dtservicecontractDet.Dispose()
            'conn.Close()
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION UpdateContractHeader", ex.Message.ToString, "")
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub


    Private Sub UpdateContractHeaderNCR()
        Try
            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractdetTemp where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
            command1.Connection = conn1

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            Dim notes As String = "", totalValue, totalNoService, maxNoService, perServiceValue, ContractValue, totalServiceAmt, discpercent, discAmt, agreeValue, ValuePerMonth As Decimal
            Dim ServiceAddress As String = "", lLocationId As String = ""
            totalValue = 0
            totalNoService = 0
            perServiceValue = 0
            maxNoService = 0
            totalServiceAmt = 0
            ValuePerMonth = 0
            discpercent = 0
            discAmt = 0.0
            lLocationId = ""
            txtServiceAddressCons.Text = ""
            txtServiceDescriptionCons.Text = ""

            For i = 0 To dtservicecontractDet.Rows.Count - 1
                totalValue = totalValue + Val(dtservicecontractDet.Rows(i)("Value").ToString())
                totalNoService = totalNoService + Val(dtservicecontractDet.Rows(i)("NoService").ToString())
                totalServiceAmt = totalServiceAmt + CDec(Val(dtservicecontractDet.Rows(i)("Value").ToString())) * CDec(Val(dtservicecontractDet.Rows(i)("NoService").ToString()))
                If Val(dtservicecontractDet.Rows(i)("NoService").ToString()) > maxNoService Then maxNoService = Val(dtservicecontractDet.Rows(i)("NoService").ToString())

                If lLocationId <> dtservicecontractDet.Rows(i)("LocationId").ToString() Then

                    If i = 0 Then
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & dtservicecontractDet.Rows(i)("Address1").ToString()
                    Else
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & ";  " & vbNewLine & dtservicecontractDet.Rows(i)("Address1").ToString()
                    End If
                    lLocationId = dtservicecontractDet.Rows(i)("LocationId").ToString()
                End If

                If i = 0 Then
                    txtServiceDescriptionCons.Text = dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                Else
                    txtServiceDescriptionCons.Text = txtServiceDescriptionCons.Text & " ;  " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                End If

            Next i

            'If maxNoService <> 0 Then perServiceValue = Math.Round(totalServiceAmt / maxNoService, 2)

            If totalNoService > 0 Then
                perServiceValue = Math.Round(totalServiceAmt / totalNoService, 2)
            End If

            discpercent = Val(txtDisPercent.Text)
            discAmt = Val(txtDisAmt.Text)

            totalNoService = Math.Round(totalNoService, 0)
            totalServiceAmt = Math.Round(totalServiceAmt, 2)


            If (totalValue > 0) Then
                If discpercent <> 0 Then
                    ContractValue = totalServiceAmt
                    discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)

                ElseIf discpercent = 0 And discAmt > 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)
                ElseIf discpercent = 0 And discAmt = 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue
                    agreeValue = Math.Round(agreeValue, 2)

                End If
            Else
                ContractValue = Convert.ToDecimal(txtConDetVal.Text)
                agreeValue = ContractValue - discAmt
                agreeValue = Math.Round(agreeValue, 2)
            End If


            'If String.IsNullOrEmpty(txtNoofMonth.Text) = True Then
            '    'txtNoofMonth.Text = DateDiff(DateInterval.Month, txtServStart.Text, txtServEnd.Text)
            '    Dim NoofMonth As Integer
            '    NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
            '    txtNoofMonth.Text = Convert.ToInt32(NoofMonth)
            'End If


            If String.IsNullOrEmpty(txtNoofMonth.Text) = True Then
                'txtNoofMonth.Text = DateDiff(DateInterval.Month, txtServStart.Text, txtServEnd.Text)
                Dim NoofMonth As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    txtNoofMonth.Text = (Year(txtEndofLastSchedule.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtEndofLastSchedule.Text) - Month(txtContractStart.Text))
                End If

                txtNoofMonth.Text = Convert.ToInt32(NoofMonth)
            End If


                'If rbtLstDuration.SelectedIndex = 3 Then
                '    txtNoofMonth.Text = txtDuration.Text * 12
                'ElseIf rbtLstDuration.SelectedIndex = 2 Then
                '    txtNoofMonth.Text = txtDuration.Text
                'Else
                '    If rbtFixedContinuous.SelectedIndex = 0 Then
                '        txtNoofMonth.Text = (Year(txtContractEnd.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtContractEnd.Text) - Month(txtContractStart.Text))
                '    Else
                '        'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-6", txtContractNo.Text)
                '        txtNoofMonth.Text = (Year(txtEndofLastSchedule.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtEndofLastSchedule.Text) - Month(txtContractStart.Text))
                '    End If
                'End If



                If Convert.ToInt32(txtNoofMonth.Text) > 0 Then
                    ValuePerMonth = Convert.ToDecimal(agreeValue / Convert.ToInt32(txtNoofMonth.Text))
                Else
                    ValuePerMonth = Convert.ToDecimal(agreeValue)
                End If


                If (totalValue > 0) Then
                    'txtConDetVal.Text = totalServiceAmt.ToString
                    'txtAgreeVal.Text = agreeValue.ToString
                    ''txtValPerMnth.Text = ValuePerMonth.ToString
                    txtValPerMnth.Text = 0.0   '30.10.17
                Else
                    ValuePerMonth = Math.Round(ValuePerMonth, 2)
                End If


                'Update
                Dim commandUpdateDetail As MySqlCommand = New MySqlCommand

                commandUpdateDetail.CommandType = CommandType.StoredProcedure
                commandUpdateDetail.CommandText = "UpdateContractFromContractDetail"
                commandUpdateDetail.Parameters.Clear()

                commandUpdateDetail.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
                commandUpdateDetail.Parameters.AddWithValue("@pr_totalNoService", totalNoService)
                commandUpdateDetail.Parameters.AddWithValue("@pr_totalServiceAmt", totalServiceAmt)
                commandUpdateDetail.Parameters.AddWithValue("@pr_perServiceValue", perServiceValue)
                commandUpdateDetail.Parameters.AddWithValue("@pr_ContractValue", ContractValue)
                commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValue", agreeValue)
                commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValueContract", Convert.ToDecimal(txtAgreeVal.Text))
                commandUpdateDetail.Parameters.AddWithValue("@pr_NoofMonths", Convert.ToInt64(txtNoofMonth.Text))
                commandUpdateDetail.Parameters.AddWithValue("@pr_discpercent", discpercent)
                commandUpdateDetail.Parameters.AddWithValue("@pr_discAmt", discAmt)
                commandUpdateDetail.Parameters.AddWithValue("@pr_ValuePerMonth", ValuePerMonth)
                commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceAddress", txtServiceAddressCons.Text)
                'commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", Left(txtServiceDescriptionCons.Text, 500))
                commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", (txtServiceDescriptionCons.Text))

                commandUpdateDetail.Connection = conn1
                commandUpdateDetail.ExecuteScalar()
                conn1.Close()

                If (totalValue > 0) Then
                    txtConDetVal.Text = totalServiceAmt.ToString
                txtAgreeVal.Text = agreeValue.ToString
                txtAgreeValueNCR.Text = agreeValue.ToString
                    'txtValPerMnth.Text = ValuePerMonth.ToString
                    txtValPerMnth.Text = 0.0   '30.10.17
                End If
                conn1.Close()
                conn1.Dispose()
                command1.Dispose()
                commandUpdateDetail.Dispose()
                dtservicecontractDet.Dispose()
                mdlPopupNCR.Show()
                'conn.Close()
        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION UpdateContractHeaderNCR", ex.Message.ToString, "")
            mdlPopupNCR.Show()
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub
    Protected Sub btnSvcCancel_Click(sender As Object, e As EventArgs) Handles btnSvcCancel.Click
        'MakeSvcNull()
        MakeSvcDetailNull()
        EnableSvcControls()
        btnSvcEdit.Enabled = False
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        btnSvcDelete.Enabled = False
        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        btnADD.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black
        btnEdit.Enabled = True
        btnEdit.ForeColor = System.Drawing.Color.Black
        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray
        btnDelete.Enabled = True
        btnDelete.ForeColor = System.Drawing.Color.Black

        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black


        If rbtFixedContinuous.SelectedIndex = 0 Then
            btnRevisionNCR.Visible = False
        Else
            txtFixedContinuousPH.Text = "CONTINUOUS"
            If txtGS.Text = "P" Then
                If txtRevisionUA.Text = True Then
                    btnRevisionNCR.Visible = True
                    btnRevisionNCR.Enabled = True
                    btnRevisionNCR.ForeColor = System.Drawing.Color.Black
                Else
                    btnRevisionNCR.Visible = False
                End If

              
            Else
                btnRevisionNCR.Visible = False
            End If
        End If

        tb1.Tabs(0).Enabled = True
        tb1.Tabs(2).Enabled = True
        tb1.Tabs(3).Enabled = True
        tb1.Tabs(4).Enabled = True
        tb1.Tabs(5).Enabled = True
        tb1.Tabs(6).Enabled = True
    End Sub

    Protected Sub BtnTeam_Click(sender As Object, e As ImageClickEventArgs) Handles BtnTeam.Click
        Try
            txtTeamSelection.Text = ""

            ''''''''''''''''''''''''''''''
            Dim strsql As String
            strsql = ""

            ''SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
            'strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            'End If

            'strsql = strsql + " order by TeamID"

            'SqlDSTeam.SelectCommand = strsql

            '''''''''''''''''''''''''

            If String.IsNullOrEmpty(txtTeam.Text.Trim) = False Then
                txtPopupTeamSearch.Text = txtTeam.Text.Trim
                txtPopUpTeam.Text = txtPopupTeamSearch.Text

                strsql = "SELECT  TeamId, TeamName, InChargeId, Supervisor From tblTeam where  1=1  and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql

                'SqlDSTeam.SelectCommand = "SELECT * From tblTeam where  1=1  and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            Else
                strsql = "SELECT   TeamId, TeamName, InChargeId, Supervisor From tblTeam where 1 =1  and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                SqlDSTeam.SelectCommand = strsql
                strsql = strsql + " Order by TeamName"
                'SqlDSTeam.SelectCommand = "SELECT  * From tblTeam where 1 =1  and Status <> 'N' order by TeamName"
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            End If

            mdlPopUpTeam.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "BtnTeam_Click", ex.Message.ToString, "")
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        'If txtPopUpClient.Text.Trim = "" Then
        '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

        '    SqlDSClient.DataBind()
        '    gvClient.DataBind()
        '    mdlPopUpClient.Show()
        'End If
    End Sub

    Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging
        Try
            gvClient.PageIndex = e.NewPageIndex


            'If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.status = 'O' order by A.name, B.LocationId"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal From tblPERSON  A Left join tblPersonLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.status = 'O' order by A.name, B.LocationId"
            '    End If
            '    'SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, C.Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.status = 'O' and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "

            'Else
            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and and A.status = 'O' and (upper(A.Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopUpClient.Text + "%' or A.contactperson like '%" + txtPopUpClient.Text + "%') order by A.name, B.LocationId"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and and A.status = 'O' and (upper(A.Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopUpClient.Text + "%' or A.contACTperson like '%" + txtPopUpClient.Text + "%') order by A.name, B.LocationId"
            '    End If


            'End If

            'If txtPopUpClient.Text.Trim = "" Then
            '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
            'Else
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            '    'SqlDSClient.SelectCommand = "SELECT ContType, AccountID, ContID, ContName, ContPerson, ContAddress1, ContHP, ContEmail,  ContLocationGroup, ContGroup, ContAddBlock, ContAddNos, ContAddFloor, ContAddUnit, ContAddStreet, ContAddBuilding, ContAddCity, ContAddState, ContAddCountry, ContAddPostal, ContFax, Mobile, ContTel, ContSales From tblContactMaster where 1=1 and (upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' or accountid like '" + txtPopUpClient.Text + "%' or contperson like '%" + txtPopUpClient.Text + "%') and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"


            If txtSearchPopup.Text = "SELECTION" Then
                If String.IsNullOrEmpty(txtPopUpClient.Text.Trim) = False Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, B.ContractGroup,B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and A.status = 'O' and (upper(A.Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like '%" + txtPopUpClient.Text + "%' or A.contactperson like '%" + txtPopUpClient.Text + "%' or B.LocationId like '%" + txtPopUpClient.Text + "%') order by A.name, B.LocationId"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and status = 'O' and (upper(A.Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like '%" + txtPopUpClient.Text + "%' or A.contACTperson like '%" + txtPopUpClient.Text + "%' or B.LocationId like '%" + txtPopUpClient.Text + "%') order by A.name, B.LocationId"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by A.Accountid, b.LocationId "
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, AddPostal, TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"
                    End If
                End If
            ElseIf txtSearchPopup.Text = "SEARCH" Then
                If String.IsNullOrEmpty(txtPopUpClient.Text.Trim) = False Then
                    txtPopUpClient.Text = txtPopUpClient.Text
                    txtPopupClientSearch.Text = txtPopUpClient.Text

                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(A.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, C.Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.status = 'O' and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(C.Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "

                    SqlDSClient.DataBind()
                    gvClient.DataBind()
                Else

                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, C.Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.status = 'O' and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                    'SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, A.Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, AddPostal, TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and A.status = 'O' and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"


                    SqlDSClient.DataBind()
                    gvClient.DataBind()
                End If
            End If

            'SqlDSClient.DataBind()
            'gvClient.DataBind()
            'mdlPopUpClient.Show()
            'txtIsPopup.Text = "Client"
            'End If
            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            'End If


        Catch ex As Exception
           
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvClient_PageIndexChanging", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub btnPopUpTeamSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpTeamSearch.Click
        Try
            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                Dim strsql As String
                strsql = ""

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by TeamID"

                SqlDSTeam.SelectCommand = strsql
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopup.Text = "Team"
                'IsPopUpTeam = "Y"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpTeam_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    
    Protected Sub gvService_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        Try

            'Dim lLocationId As String

            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            'Dim lblid2 As TextBox= (Textbox)grvServiceLocation.Rows[0].FindControl("txtServiceNameGV")

            'Dim lblid2 As TextBox= (Textbox)grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid2 As TextBox = (TextBox)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim xrow1 As GridViewRow = CType(grvServiceLocation)


            'Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlLocationIdGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

            'lLocationId = lblid1.Text

            'Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
            'End If
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    lblid2.Text = dt.Rows(0)("ServiceName").ToString
            '    lblid3.Text = dt.Rows(0)("Address1").ToString + ", " + dt.Rows(0)("AddStreet").ToString + ", " + dt.Rows(0)("AddBuilding").ToString + ", " + dt.Rows(0)("Addcity").ToString
            '    lblid4.Text = dt.Rows(0)("LocateGrp").ToString
            'End If


            Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtLocationGroupGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtBranchGV"), TextBox)

            'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

            If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
                txtLocationId.Text = " "
            Else
                txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
                lblid1.Text = txtLocationId.Text
            End If


            If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
                txtServiceName.Text = " "
            Else
                txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
                lblid2.Text = txtServiceName.Text
            End If

            If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then
                txtServiceAddress.Text = " "
            Else
                txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(5).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(5).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(6).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(6).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(7).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(8).Text = "&nbsp;" Then
                lblid4.Text = " "
            Else
                lblid4.Text = gvLocation.SelectedRow.Cells(8).Text
            End If

            If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then
                lblid5.Text = " "
            Else
                txtLocationGroup.Text = gvLocation.SelectedRow.Cells(23).Text
                lblid5.Text = gvLocation.SelectedRow.Cells(23).Text
            End If

            If gvLocation.SelectedRow.Cells(24).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(24).Text)
                lblid3.Text = txtServiceAddress.Text
            End If

            If gvLocation.SelectedRow.Cells(25).Text = "&nbsp;" Then

            Else
                txtBranch.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(25).Text)
                lblid6.Text = gvLocation.SelectedRow.Cells(24).Text
            End If

            'If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
            '    txtServiceName.Text = " "
            'Else
            '    txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
            '    lblid2.Text = txtServiceName.Text
            'End If

            'If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '    txtServiceAddress.Text = " "
            'Else
            '    txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(5).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(5).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(6).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(6).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then
            '    lblid4.Text = " "
            'Else
            '    lblid4.Text = gvLocation.SelectedRow.Cells(7).Text
            'End If

            'If gvLocation.SelectedRow.Cells(22).Text = "&nbsp;" Then
            '    lblid5.Text = " "
            'Else
            '    txtLocationGroup.Text = gvLocation.SelectedRow.Cells(22).Text
            '    lblid5.Text = gvLocation.SelectedRow.Cells(22).Text
            'End If

            'If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(23).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If

            'If gvLocation.SelectedRow.Cells(24).Text = "&nbsp;" Then

            'Else
            '    txtBranch.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(24).Text)
            '    lblid6.Text = gvLocation.SelectedRow.Cells(24).Text
            'End If

            RetrieveContactDetails(txtLocationId.Text.Trim)
            grvServiceLocation.Focus()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvService_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Private Sub RetrieveContactDetails(lLocationIdContact As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Start:Check whether  Contract Detail Record exists

            Dim commandLocationIdContact As MySqlCommand = New MySqlCommand

            commandLocationIdContact.CommandType = CommandType.Text
            commandLocationIdContact.CommandText = "SELECT count(*) as totcontractdetrec FROM tblcontractdet where contractno ='" & txtContractNo.Text & "' and LocationID ='" & lLocationIdContact & "'"
            commandLocationIdContact.Connection = conn

            Dim drLocationIdContact As MySqlDataReader = commandLocationIdContact.ExecuteReader()
            Dim dtLocationIdContact As New DataTable
            dtLocationIdContact.Load(drLocationIdContact)

            'If dtLocationIdContact.Rows.Count = 0 Then
            If Val(dtLocationIdContact.Rows(0)("totcontractdetrec").ToString).ToString = 0 Then
                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2, AddCountry, AddPostal FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2,AddCountry, AddPostal FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationIdContact & "'"
                End If
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString
                    txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString

                    txtPosition.Text = dt.Rows(0)("Contact1Position").ToString
                    txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString

                    txtTelephone.Text = dt.Rows(0)("Telephone").ToString
                    txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString

                    txtFax.Text = dt.Rows(0)("Fax").ToString
                    txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString

                    txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString
                    txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString

                    txtEmail1.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtEmail2.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtEmail1.Text = dt.Rows(0)("Email").ToString
                    txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString

                    'txtLocationId.Text = lblid1.Text
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text = lblid4.Text

                    txtContactPerson.Enabled = True
                    txtContactPerson2.Enabled = True
                    txtPosition.Enabled = True
                    txtPosition2.Enabled = True
                    txtTelephone.Enabled = True
                    txtTelephone2.Enabled = True
                    txtFax.Enabled = True
                    txtFax2.Enabled = True
                    txtCP2Telephone.Enabled = True
                    txtCP2Telephone2.Enabled = True
                    txtConPerMobile.Enabled = True
                    txtConPerMobile2.Enabled = True
                    txtEmail1.Enabled = True
                    txtEmail2.Enabled = True
                    txtAddress.Enabled = True
                End If
            Else
                Dim commandcontractdet As MySqlCommand = New MySqlCommand
                commandcontractdet.CommandType = CommandType.Text

                commandcontractdet.CommandText = "SELECT ServiceName, Address1, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblContractDet where ContractNo = '" & txtContractNo.Text.Trim & "' and AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                commandcontractdet.Connection = conn

                Dim drcontractdet As MySqlDataReader = commandcontractdet.ExecuteReader()
                Dim dtcontractdet As New DataTable
                dtcontractdet.Load(drcontractdet)

                If dtcontractdet.Rows.Count > 0 Then

                    txtContactPerson.Text = dtcontractdet.Rows(0)("ContactPerson").ToString
                    txtContactPerson2.Text = dtcontractdet.Rows(0)("ContactPerson2").ToString
                    txtPosition.Text = dtcontractdet.Rows(0)("Contact1Position").ToString
                    txtPosition2.Text = dtcontractdet.Rows(0)("Contact2Position").ToString
                    txtTelephone.Text = dtcontractdet.Rows(0)("Telephone").ToString
                    txtTelephone2.Text = dtcontractdet.Rows(0)("Telephone2").ToString
                    txtFax.Text = dtcontractdet.Rows(0)("Fax").ToString
                    txtFax2.Text = dtcontractdet.Rows(0)("Contact2Fax").ToString

                    txtCP2Telephone.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobile.Text = dtcontractdet.Rows(0)("Mobile").ToString
                    txtConPerMobile2.Text = dtcontractdet.Rows(0)("Contact2Mobile").ToString

                    txtEmail1.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtEmail2.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtEmail1.Text = dtcontractdet.Rows(0)("Email").ToString
                    txtEmail2.Text = dtcontractdet.Rows(0)("Contact2Email").ToString

                    'txtLocationId.Text = lblid1.Text
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text = lblid4.Text

                    txtContactPerson.Enabled = False
                    txtContactPerson2.Enabled = False
                    txtPosition.Enabled = False
                    txtPosition2.Enabled = False
                    txtTelephone.Enabled = False
                    txtTelephone2.Enabled = False
                    txtFax.Enabled = False
                    txtFax2.Enabled = False
                    txtCP2Telephone.Enabled = False
                    txtCP2Telephone2.Enabled = False
                    txtConPerMobile.Enabled = False
                    txtConPerMobile2.Enabled = False
                    txtEmail1.Enabled = False
                    txtEmail2.Enabled = False
                    txtAddress.Enabled = False
                End If
                dtcontractdet.Dispose()
            End If
            'End:Check whether  Contract Detail Record exists

            conn.Close()
            conn.Dispose()
            commandLocationIdContact.Dispose()
            dtLocationIdContact.Dispose()
        Catch ex As Exception
              lblAlert.Text=ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "RetrieveContactDetails", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click
        Try

            ' '''''''''''
            'Dim conn2 As MySqlConnection = New MySqlConnection()
            'Dim command2 As MySqlCommand = New MySqlCommand

            'conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            'If conn2.State = ConnectionState.Open Then
            '    conn2.Close()
            '    conn2.Dispose()
            'End If
            'conn2.Open()


            'command2.CommandType = CommandType.StoredProcedure
            'command2.CommandText = "InsertIntotblcontractPricehistory"
            'command2.Parameters.Clear()

            'command2.Parameters.AddWithValue("@pr_BatchNo", "2020-07-16 00:33:51")

            'command2.Connection = conn2
            'command2.ExecuteScalar()

            'Exit Sub


            ' ''''''
       
        lblMessage.Text = ""
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO COPY"
            Return

        End If
        'DisableControls()
        'txtMode.Text = "EDIT"
        lblMessage.Text = "ACTION: COPY RECORD"

        txtMode.Text = "NEW"
        EnableControls()
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black


        btnADD.Enabled = False
        btnCopy.Enabled = False
        btnRevision.Enabled = False
        btnSearch.Enabled = False
        btnReset.Enabled = False
        btnPrint.Enabled = False
        btnContractRenewal.Enabled = False
        btnServiceRecords.Enabled = False
        btnTransactions.Enabled = False
        btnEdit.Enabled = False
        btnChangeStatus.Enabled = False
        btnPrint.Enabled = False
        'btnHistory.Enabled = False
        btnRecalculate.Visible = False
        btnADD.ForeColor = System.Drawing.Color.Gray
        btnCopy.ForeColor = System.Drawing.Color.Gray
        btnRevision.ForeColor = System.Drawing.Color.Gray
        btnSearch.ForeColor = System.Drawing.Color.Gray
        btnReset.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
        btnContractRenewal.ForeColor = System.Drawing.Color.Gray
        btnServiceRecords.ForeColor = System.Drawing.Color.Gray
        btnTransactions.ForeColor = System.Drawing.Color.Gray
        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
            'btnHistory.ForeColor = System.Drawing.Color.Gray



        updPanelContract1.Update()

        'If Not (txtStatus.Text = "O" Or txtStatus.Text = "P" Or txtStatus.Text = "E" Or txtStatus.Text = "T" Or txtStatus.Text = "C") Then
        '    Dim message As String = "alert('Contract Status should be [O/C/E/P/T]!!!')"
        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        '    Exit Sub
        'End If



        txtContractNo.Text = ""
        txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
        txtConDetVal.Text = "0.00"
        txtAgreeVal.Text = "0.00"
        txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")

        'txtContractEnd.Text = ""
        txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
        txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
        'txtServEnd.Text = ""
        'txtServEndDay.Text = ""
        'TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
        txtServTimeIn.Text = ""
        txtServTimeOut.Text = ""
        txtAllocTime.Text = "0"
        ''txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")
        'txtWarrEnd.Text = ""
        txtValPerMnth.Text = ""
        'txtContractNotes.Text = ""
        'txtServInst.Text = ""
        'txtStatus.Text = "O"
        txtStatus.Text = "O - Open"
        txtRs.Text = "O"
        txtNS.Text = "O"
        txtProspectId.Text = ""
        txtGS.Text = "O"
        'txtRemarks.Text = ""
        txtPrintBody.Text = ""
        'txtClient.Text = ""
        'txtContactPerson.Text = ""

        txtPortfolioValue.Text = "0.00"

        txtServiceNo.Text = "0.00"
        txtServiceAmt.Text = "0.00"
        txtServiceNoActual.Text = "0.00"
        txtServiceBal.Text = "0.00"
        txtServiceAmtActual.Text = "0.00"
        txtTotalArea.Text = "0.00"
        txtCompletedArea.Text = "0.00"
        txtBalanceArea.Text = "0.00"
        txtServiceAmtBal.Text = "0.00"

        txtBillingAmount.Text = "0.00"
        txtRetentionPerc.Text = "0"
        txtRetentionValue.Text = "0.00"

        txtWarrantyBillingAmount.Text = "0.00"
        txtBaitStationTotal.Text = "0.00"
        txtBaitStationInstalled.Text = "0.00"
        txtBaitStationBalance.Text = "0.00"

        txtActualServiceStart.Text = ""
        txtActualEnd.Text = ""

        txtTerminationCode.Text = ""
        txtTerminationDescription.Text = ""

        ddlPortfolioYN.SelectedItem.Text = "YES"
        txtLastBillDate.Text = ""
        ddlAgreementType.Items.Clear()
        ddlAgreementType.Items.Add("--SELECT--")
        ddlAgreementType.Items.Add("NEW")
        ddlAgreementType.Items.Add("ADDITION")

            If txtAgreementTypeContractCode.Text <> "0" Then
                ddlAgreementType.Enabled = True
                ddlContractCode.Enabled = True
            End If

            'ddlAgreementType.Enabled = True

        ddlScheduler.Text = Session("StaffID")

        txtOnHoldCode.Text = ""
        txtOnHoldDate.Text = ""
        txtOnHoldComments.Text = ""
        txtOnHoldDescription.Text = ""
        txtLastServiceDate.Text = ""

            '08.05.22
            txtOContract.Text = ""
            txtRenewalDate.Text = ""
            txtRenewed.Text = ""

            '08.05.22

            lblFileUploadCount.Text = "File Upload"
            lblServiceDetailsCount.Text = "Service Details"
            lblNotesCount.Text = "Notes"
            lblItemsIssuedCount.Text = "Items Issued"
            lblRatescheduleCount.Text = "Schedule of Rate"

        If rbtLstDuration.SelectedIndex = 0 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text)
        ElseIf rbtLstDuration.SelectedIndex = 1 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text * 7)
        ElseIf rbtLstDuration.SelectedIndex = 2 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddMonths(txtDuration.Text)
        ElseIf rbtLstDuration.SelectedIndex = 3 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddYears(txtDuration.Text)
        End If

        txtContractEnd.Text = Convert.ToDateTime(txtContractEnd.Text).AddDays(-1)
        txtServEnd.Text = txtContractEnd.Text
        TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString().ToUpper

        

        btnClient0.Visible = False
            'btnClient1.Visible = False
            btnMultiplePO.Visible = False '25.10.21
        btnClient2.Visible = False
        btnClient3.Visible = False
        btnClient4.Visible = False
        btnClient5.Visible = False
        btnClient6.Visible = False
        btnClient7.Visible = False
        btnClient8.Visible = False
        btnClient9.Visible = False
        btnClient10.Visible = False

        btnAutoRenew.Visible = False
        btnHistory.Visible = False
            btnExtendContractEndDate.Visible = False

            btnClient11.Visible = False
            btnClient12.Visible = False

            btnClient.Visible = False
            txtAccountId.Enabled = False
            txtCustName.Enabled = False

            txtContractDateOriginal.Text = ""
            btnSave.Text = "NEXT STEP"
            FindIsActiveContract()
            FindDuration()
            tb1.ActiveTabIndex = 0

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnCopy_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


  
    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        Try

            If txtSearchPopup.Text = "SEARCH" Then
                If String.IsNullOrEmpty(txtPopUpClient.Text.Trim) = False Then

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location  From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text + "%"" or C.ID like ""%" + txtPopUpClient.Text + "%"" or C.contactperson like ""%" + txtPopUpClient.Text + "%"" or D.LocationId like """ + txtPopUpClient.Text + "%"") order by Accountid, LocationId "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location  From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text + "%"" or C.ID like ""%" + txtPopUpClient.Text + "%"" or C.contactperson like ""%" + txtPopUpClient.Text + "%"" or D.LocationId like """ + txtPopUpClient.Text + "%"") order by Accountid, LocationId "
                    End If
              
                    SqlDSClient.DataBind()
                    gvClient.DataBind()
                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                Else
                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                    End If
                    SqlDSClient.DataBind()
                    gvClient.DataBind()
                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                End If

            Else

                If txtPopUpClient.Text.Trim = "" Then
                    MessageBox.Message.Alert(Page, "Please enter client name", "str")
                Else

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location   From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')   and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contACTperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        End If
                    Else
                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')   and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contACTperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        End If
                    End If
                  

                    SqlDSClient.DataBind()
                    gvClient.DataBind()
                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                End If
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpClient_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click
        lblAlert.Text = ""
        Dim strsql As String
        strsql = ""

        Try

            Dim hyphenpos As Integer
            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                hyphenpos = InStr(4, txtAccountIdSearch.Text.Trim, "-", CompareMethod.Text)
            End If

            txtIsPopup.Text = "N"

            If txtDisplayRecordsLocationwise.Text = "N" Then

                If hyphenpos = 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID,  A.ServiceAddress, A.AmtBalance, A.Location,  A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  where 1=1  "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If

                End If


                If hyphenpos > 0 Then

                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress,  A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup,  A.CategoryID, A.ServiceAddress, A.AmtBalance, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If


                End If



                If hyphenpos > 0 Then
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and (B.LocationId like '%" & txtAccountIdSearch.Text.Trim & "%' or A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%') "
                    End If
                Else
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%' "
                    End If
                End If


                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                    Dim YrStrList As List(Of [String]) = New List(Of String)()

                    For Each str As String In stringList
                        str = "'" + str + "'"
                        YrStrList.Add(str.ToUpper)
                    Next

                    Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                    strsql = strsql + " and A.status in (" + YrStr + ")"

                End If

                'strsql = strsql & vStrStatus

                If String.IsNullOrEmpty(txtContractnoSearch.Text) = False Then
                    strsql = strsql & " and A.contractno like '%" & txtContractnoSearch.Text.Trim + "%'"
                End If

                'If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                '    strsql = strsql & " and A.TeamID like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                'End If


                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    strsql = strsql & " and A.InChargeId like '%" & txtInchargeSearch.Text.Trim + "%'"
                'End If

                'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                '    strsql = strsql & " and (CustCode like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                'End If


                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    txtServiceAddressSearch.Text = txtServiceAddressSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                End If


                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    txtClientNameSearch.Text = txtClientNameSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
                End If

              
                If ddlContractGrpSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.ContractGroup = '" & ddlContractGrpSearch.Text.Trim & "'"
                End If

                If ddlSalesmanSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.Salesman = """ & ddlSalesmanSearch.Text.Trim & """"
                End If

                If ddlCategorySearch.SelectedIndex > 0 Then

                    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                End If


            End If 'If txtDisplayRecordsLocationwise.Text = "N" 

          
            '''''''''''''''''''''''''''''''''''''''

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                   If hyphenpos = 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID,  A.ServiceAddress, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  where 1=1  "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If

                End If


                If hyphenpos > 0 Then

                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress,  A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup,  A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If


                End If



                If hyphenpos > 0 Then
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and (B.LocationId like '%" & txtAccountIdSearch.Text.Trim & "%' or A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%') "
                    End If
                Else
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%' "
                    End If
                End If


                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                    Dim YrStrList As List(Of [String]) = New List(Of String)()

                    For Each str As String In stringList
                        str = "'" + str + "'"
                        YrStrList.Add(str.ToUpper)
                    Next

                    Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                    strsql = strsql + " and A.status in (" + YrStr + ")"

                End If

                'strsql = strsql & vStrStatus

                If String.IsNullOrEmpty(txtContractnoSearch.Text) = False Then
                    strsql = strsql & " and A.contractno like '%" & txtContractnoSearch.Text.Trim + "%'"
                End If

                'If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                '    strsql = strsql & " and A.TeamID like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                'End If


                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    strsql = strsql & " and A.InChargeId like '%" & txtInchargeSearch.Text.Trim + "%'"
                'End If

                'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                '    strsql = strsql & " and (CustCode like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                'End If


                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    txtServiceAddressSearch.Text = txtServiceAddressSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                End If


                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    txtClientNameSearch.Text = txtClientNameSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
                End If

                If ddlContractGrpSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.ContractGroup = '" & ddlContractGrpSearch.Text.Trim & "'"
                End If

                If ddlSalesmanSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.Salesman = """ & ddlSalesmanSearch.Text.Trim & """"
                End If

                'If String.IsNullOrEmpty(ddlCategorySearch.Text) = False Then
                '    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                'End If

                If ddlCategorySearch.SelectedIndex > 0 Then

                    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                End If

                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    strsql = strsql + " and A.location in (" + YrStr + ")"
                    'selFormula = selFormula + " and {tblsales1.CompanyGroup} in [" + YrStr + "]"
                    'If selection = "" Then
                    '    selection = "CompanyGroup : " + YrStr
                    'Else
                    '    selection = selection + ", CompanyGroup : " + YrStr
                    'End If
                Else
                    strsql = strsql & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

            End If 'If txtDisplayRecordsLocationwise.Text = "Y" 



            '''''''''''''''''''''''''''''''''''''''''



            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    strsql = strsql & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            'End If

            strsql = strsql + " order by A.rcno desc, A.custname limit " & txtLimit.Text

            txt.Text = strsql

            MakeMeNull()

            SQLDSContract.SelectCommand = ""
            SQLDSContract.SelectCommand = strsql
            SQLDSContract.DataBind()

            GridView1.DataSourceID = "SQLDSContract"
            GridView1.DataBind()
            GridView1.Visible = True
            GridSelected = "SQLDSContract"

            lblMessage.Text = ""
            'lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text
            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"

            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                MakeMeNull()
                'MakeMeNullBillingDetails()



                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"
                    txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    btnRecalculate_Click(sender, e)

                    GridView1.SelectedIndex = 0
                    GridView1.DataBind()
                End If
            End If



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnQuickSearch_Click", ex.Message.ToString, Right(strsql, 1500))
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton2_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton2.Click
        lblAlert.Text = ""

        txtContType1.Text = "CORPORATE"
        txtContType2.Text = "COMPANY"
        txtContType3.Text = "RESIDENTIAL"
        txtContType4.Text = "PERSON"

        'mdlPopUpClient.Show()

        lblAlert.Text = ""


        txtPopUpClient.Text = ""
        Try
            txtSearchPopup.Text = "SEARCH"

            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountIdSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.ID like '%" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '%" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, C.Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Location = '" & txtLocation.Text & "' and C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '%" + txtPopupClientSearch.Text + "%' or C.ID like '%" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '%" + txtPopupClientSearch.Text + "%' or A.ID like '%" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '%" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, C.Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where  C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '%" + txtPopupClientSearch.Text + "%' or C.ID like '%" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                End If
         
                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Location = '" & txtLocation.Text & "' and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                End If
                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ImageButton2_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

   

    Protected Sub txtPopUpTeam_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpTeam.TextChanged
        Try
            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                Dim strsql As String
                strsql = ""

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by TeamID"

                SqlDSTeam.SelectCommand = strsql
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopup.Text = "Team"
                'IsPopUpTeam = "Y"
                End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpTeam_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton3_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton3.Click
        'txtTeamSelection.Text = "Search"
        'mdlPopUpTeam.Show()

        lblAlert.Text = ""

        txtContType1.Text = "CORPORATE"
        txtContType2.Text = "COMPANY"
        txtContType3.Text = "RESIDENTIAL"
        txtContType4.Text = "PERSON"

        'mdlPopUpClient.Show()

        lblAlert.Text = ""


        'If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
        '    txtContType1.Text = "CORPORATE"
        '    txtContType2.Text = "COMPANY"
        '    txtContType3.Text = "CORPORATE"
        '    txtContType4.Text = "COMPANY"
        'Else
        '    txtContType1.Text = "RESIDENTIAL"
        '    txtContType2.Text = "PERSON"
        '    txtContType3.Text = "RESIDENTIAL"
        '    txtContType4.Text = "PERSON"
        'End If


        'If String.IsNullOrEmpty(txtOriginalAccountId.Text) = False Then
        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then

        '    Else
        '        Exit Sub
        '    End If
        'End If
        Try
            txtPopUpClient.Text = ""

            txtSearchPopup.Text = "SEARCH"


            If String.IsNullOrEmpty(txtClientNameSearch.Text.Trim) = False Then
                txtPopUpClient.Text = txtClientNameSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Location = '" & txtLocation.Text & "' and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                End If
          
                SqlDSClient.DataBind()
                gvClient.DataBind()
            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Location = '" & txtLocation.Text & "' and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                End If
                SqlDSClient.DataBind()
                gvClient.DataBind()
            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ImageButton3_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnPopUpTeamReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpTeamReset.Click
        txtPopUpTeam.Text = "Search Here for Team or In-ChargeId"
        SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%'"
        SqlDSTeam.DataBind()
        gvTeam.DataBind()

        mdlPopUpTeam.Show()
        txtIsPopup.Text = "Team"
    End Sub

    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
            Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            For Each str As String In stringList
                For Each item As ListItem In chkStatusSearch.Items
                    If item.Value = str Then
                        item.Selected = True
                    End If
                Next
            Next


        End If
        mdlPopupStatusSearch.Show()
    End Sub

    'Protected Sub rdbStatusSearch_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rdbStatusSearch.SelectedIndexChanged
    '    If rdbStatusSearch.SelectedValue = "ALL" Then
    '        chkStatusSearch.ClearSelection()
    '        chkStatusSearch.Enabled = False
    '    Else
    '        chkStatusSearch.Enabled = True
    '    End If
    '    mdlPopupStatusSearch.Show()

    'End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    YrStrList.Add(item.Value)
                End If
            Next

           

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            If String.IsNullOrEmpty(YrStr) = True Then
                Dim message As String = "alert('PLEASE SELECT A STATUS')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                mdlPopupStatusSearch.Show()
                Exit Sub
            End If

            txtSearch1Status.Text = YrStr

            txtSearch1Status.Focus()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnQuickReset_Click(sender As Object, e As EventArgs) Handles btnQuickReset.Click
        txtContractnoSearch.Text = ""
        txtAccountIdSearch.Text = ""
        txtServiceAddressSearch.Text = ""
        'txtInchargeSearch.Text = ""
        txtClientNameSearch.Text = ""
        txtSearch1Status.Text = "O,P,H,R,C,T,E"
        'btnQuickSearch_Click(sender, e)
    End Sub

    Protected Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click

    End Sub

    Protected Sub btnInvoice_Click(sender As Object, e As EventArgs) Handles btnInvoice.Click

        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO VIEW INVOICES"
            Return
        End If

        ModalPopupInvoice.Show()
    End Sub

    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click

        'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
        '    Session("contractno") = txtContractNo.Text

        '    If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
        '        Session("searchstatus") = txtSearch1Status.Text
        '    End If

        '    If String.IsNullOrEmpty(txtTeamSearch.Text) = False Then
        '        Session("searchteam") = txtTeamSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
        '        Session("searchincharge") = txtInchargeSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
        '        Session("searchaccountid") = txtAccountIdSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
        '        Session("searchclientname") = txtClientNameSearch.Text
        '    End If

        '    ''''''''''''''''''''''''''''''

        '    Session("gridsqlcontract") = txt.Text
        '    Session("rcno") = txtRcno.Text

        'End If


        'Session("contractdetailfrom") = "contract"
        'Response.Redirect("RV_ContractServiceSchedule.aspx")
        'SASI - 20/07/2017

        If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            Session("contractno") = txtContractNo.Text

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Session("searchstatus") = txtSearch1Status.Text
            End If

            If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                Session("searchteam") = txtServiceAddressSearch.Text
            End If

            'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
            '    Session("searchincharge") = txtInchargeSearch.Text
            'End If

            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                Session("searchaccountid") = txtAccountIdSearch.Text
            End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                Session("searchclientname") = txtClientNameSearch.Text
            End If

            ''''''''''''''''''''''''''''''

            Session("gridsqlcontract") = txt.Text
            Session("rcno") = txtRcno.Text

        End If

        '  Session.Add("ContractNo", txtContractNo.Text)

        Session("contractdetailfrom") = "contract"


        SqlDSNotesTemplate.SelectCommand = "SELECT NoteId, Module, Content, DefaultDisplay from tblNotesTemplate where Module ='ZSERVICE-CONTRACT' order by NoteID"
        SqlDSNotesTemplate.DataBind()
        grvNotesTemplate.DataBind()

        ' Check if the grid has same Account ID, to display the Schedule summary button

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = txt.Text
        command1.Connection = conn

        Dim dr1 As MySqlDataReader = command1.ExecuteReader()

        Dim dt1 As New DataTable
        dt1.Load(dr1)

        Dim accountid As String = ""
        Dim count As Integer = 0

        If dt1.Rows.Count > 0 Then
            accountid = dt1.Rows(0)("AccountID").ToString
            For i As Integer = 0 To dt1.Rows.Count - 1
                If accountid = dt1.Rows(i)("AccountID").ToString Then
                    count = 1

                Else
                    count = 0
                    '  lblAlert.Text = "SCHEDULE SUMMARY WILL BE DISPLAYED ONLY FOR UNIQUE ACCOUNTID"

                    Exit For

                End If
            Next
        End If
        command1.Dispose()
        dt1.Clear()
        dt1.Dispose()
        dr1.Close()
        conn.Close()
        conn.Dispose()

        'If count = 1 Then
        '    btnScheduleSummary.Visible = True
        'Else
        '    btnScheduleSummary.Visible = False
        'End If


        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub ChkRequireInspection_CheckedChanged(sender As Object, e As EventArgs) Handles ChkRequireInspection.CheckedChanged

    End Sub

    Function IsContractPeriodlocked(lContractOrService As String) As Boolean
        lblAlert.Text = ""
        Dim IsContractLocked As Boolean
        IsContractLocked = False

        Dim sqlstr As String
        sqlstr = ""

        sqlstr = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

        Dim commandLocked As MySqlCommand = New MySqlCommand

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        commandLocked.CommandType = CommandType.Text
        commandLocked.CommandText = sqlstr
        commandLocked.Connection = conn

        Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("ContractLock").ToString = "Y" Then
                'lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                IsContractLocked = True
                'btnSave.Enabled = False
                'btnSave.ForeColor = System.Drawing.Color.Gray
                'Exit Sub
                'Else
                '    If btnSave.Enabled = False Then
                '        btnSave.Enabled = True
                '        btnSave.ForeColor = System.Drawing.Color.Black
                '    End If
            End If
        End If

        conn.Close()
        conn.Dispose()
        commandLocked.Dispose()
        dr.Close()
        Return IsContractLocked
    End Function


    Function IsContractStartPeriodlocked() As Boolean
        lblAlert.Text = ""
        Dim IsContractLocked As Boolean
        IsContractLocked = False

        Dim sqlstr As String
        sqlstr = ""

        sqlstr = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

        Dim commandLocked As MySqlCommand = New MySqlCommand

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        commandLocked.CommandType = CommandType.Text
        commandLocked.CommandText = sqlstr
        commandLocked.Connection = conn

        Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("ContractLock").ToString = "Y" Then
                'lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                IsContractLocked = True
                'btnSave.Enabled = False
                'btnSave.ForeColor = System.Drawing.Color.Gray
                'Exit Sub
                'Else
                '    If btnSave.Enabled = False Then
                '        btnSave.Enabled = True
                '        btnSave.ForeColor = System.Drawing.Color.Black
                '    End If
            End If
        End If

        conn.Close()
        conn.Dispose()
        commandLocked.Dispose()
        dr.Close()
        Return IsContractLocked
    End Function

    Function IsServicePeriodlocked(pContractOrService As String) As Boolean
        lblAlert.Text = ""
        updPanelContract1.Update()
        Dim lContractOrService As String
        lContractOrService = pContractOrService

        Dim IsContractLocked As Boolean
        IsContractLocked = False

        If lContractOrService = "ServiceEnd" Then
            Dim sqlstr As String
            sqlstr = ""

            If String.IsNullOrEmpty(txtServEnd.Text) = False Then
                sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                Dim commandLocked As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                commandLocked.CommandType = CommandType.Text
                commandLocked.CommandText = sqlstr
                commandLocked.Connection = conn

                Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)


                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("svcLock").ToString = "Y" Then
                        'lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                        IsContractLocked = True
                        'btnSave.Enabled = False
                        'btnSave.ForeColor = System.Drawing.Color.Gray
                        'Exit Sub
                        'Else
                        '    If btnSave.Enabled = False Then
                        '        btnSave.Enabled = True
                        '        btnSave.ForeColor = System.Drawing.Color.Black
                        '    End If
                    End If
                End If

                conn.Close()
                conn.Dispose()
                commandLocked.Dispose()
                dr.Close()
            End If

            Return IsContractLocked
        End If

        If lContractOrService = "ServiceStart" Then
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstr
            commandLocked.Connection = conn

            Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("svcLock").ToString = "Y" Then
                    'lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    IsContractLocked = True
                    'btnSave.Enabled = False
                    'btnSave.ForeColor = System.Drawing.Color.Gray
                    'Exit Sub
                    'Else
                    '    If btnSave.Enabled = False Then
                    '        btnSave.Enabled = True
                    '        btnSave.ForeColor = System.Drawing.Color.Black
                    '    End If
                End If
            End If

            conn.Close()
            conn.Dispose()
            commandLocked.Dispose()
            dr.Close()
            Return IsContractLocked
        End If





        If lContractOrService = "Contract" Then
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstr
            commandLocked.Connection = conn

            Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("ContractLock").ToString = "Y" Then
                    'lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    IsContractLocked = True

                    'btnSave.Enabled = False
                    'btnSave.ForeColor = System.Drawing.Color.Gray
                    'Exit Sub
                    'Else
                    '    If btnSave.Enabled = False Then
                    '        btnSave.Enabled = True
                    '        btnSave.ForeColor = System.Drawing.Color.Black
                    '    End If
                End If
            End If

            conn.Close()
            conn.Dispose()
            commandLocked.Dispose()
            dr.Close()
            Return IsContractLocked
        End If

    End Function


    Protected Sub txtContractDate_TextChanged(sender As Object, e As EventArgs) Handles txtContractDate.TextChanged
        Try

            If txtContractDate.Enabled = True Then
                txtContractServiceLocked.Text = "Contract"
                If IsServicePeriodlocked("Contract") = True Then
                    If txtContractServiceLocked.Text = "Contract" Then
                        lblAlert.Text = "CONTRACT PERIOD IS LOCKED"
                        updPanelContract1.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        txtContractDate.Focus()
                    End If
                End If
            End If

            'Else


            IsContractDateHoliday()
            IsServiceDateHoliday()



            'If Convert.ToDateTime(txtContractDate.Text.Trim) < DateTime.Today Then
            '    If txtBackDateContractSetup.Text = False Then
            '        lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '        txtContractDate.Focus()
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub
            '    Else
            '        If txtBackDateContract.Text = False Then
            '            lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '            txtContractDate.Focus()
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            Exit Sub
            '        End If

            '    End If
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

   
    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click
        Try
            txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity,  A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblCompany  A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                End If

            Else
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblCompany  A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                End If
            End If
         
            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            txtIsPopup.Text = "Client"
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Protected Sub SQLDSContract_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SQLDSContract.Selected
        txtRowCount.Text = e.AffectedRows.ToString
    End Sub

    Protected Sub gvClient_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        'System.Threading.Thread.Sleep(5000)
        'Label50.Visible = True
        lblAlert.Text = ""
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            If txtContType2.Text.Trim = txtContType4.Text.Trim Then
                'If txtStatus.Text = "O" And txtRs.Text = "O" And txtGS.Text = "O" Then
                If Left(txtStatus.Text, 1) = "O" And txtRs.Text = "O" And txtGS.Text = "O" Then
                    txtAccountId.Text = ""
                    txtClient.Text = ""
                    txtCustName.Text = ""
                    txtContactPerson.Text = ""
                    txtOfficeAddress.Text = ""
                    txtTelephone.Text = ""

                    ddlCompanyGrp.SelectedIndex = 0
                    ddlSalesman.SelectedIndex = 0
                    txtFax.Text = ""
                    txtConPerMobile.Text = ""
                    txtPostal.Text = ""

                    txtAccountId.Focus()

                    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                        txtAccountId.Text = ""
                    Else
                        txtAccountId.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                    End If


                    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                        lblAccountIdLocation1.Text = ""
                    Else
                        lblAccountIdLocation1.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                    End If


                    If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                        txtClient.Text = ""
                    Else
                        txtClient.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                    End If

                    If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                        txtCustName.Text = ""
                    Else
                        txtCustName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(4).Text.Trim)
                    End If

                    Dim lContractGroup As String
                    lContractGroup = gvClient.SelectedRow.Cells(5).Text

                    If String.IsNullOrEmpty(lContractGroup.Trim) = True Or lContractGroup.Trim = "&nbsp;" Then
                        ddlContractGrp.SelectedIndex = 0
                    Else

                        If ddlContractGrp.Items.FindByValue(lContractGroup) Is Nothing Then
                            ddlContractGrp.Items.Add(lContractGroup)
                            ddlContractGrp.Text = lContractGroup
                        Else
                            ddlContractGrp.Text = lContractGroup
                            FindCategoryId()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
                        End If
                    End If

                    FindDuration()


                    If (gvClient.SelectedRow.Cells(32).Text = "&nbsp;") Or String.IsNullOrEmpty(gvClient.SelectedRow.Cells(32).Text) = True Then
                    Else
                        txtLocation.Text = gvClient.SelectedRow.Cells(32).Text
                    End If
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                    'Dim conn As MySqlConnection = New MySqlConnection()

                    'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'conn.Open()
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    If ddlContactType.Text = "COMPANY" Then
                        command1.CommandText = "SELECT ContactPerson, Mobile,  Fax,  AddPostal, Salesman, Industry, BillAddress1, BillStreet, BillBuilding, BillCity, BillPostal, BillCountry, Location FROM tblcompany where accountid='" & txtAccountId.Text & "'"
                    ElseIf ddlContactType.Text = "PERSON" Then
                        command1.CommandText = "SELECT ContactPerson, TelMobile, TelFax, AddPostal, Salesman, BillAddress1, BillStreet, BillBuilding, BillCity, BillPostal, BillCountry, Location FROM tblPerson where accountid='" & txtAccountId.Text & "'"
                    End If

                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then
                        'txtOffAddress1.Text = dt.Rows(0)("Address1").ToString

                        If String.IsNullOrEmpty(dt.Rows(0)("ContactPerson").ToString) = True Or dt.Rows(0)("ContactPerson").ToString = "&nbsp;" Then
                            txtContactPerson.Text = ""
                        Else
                            txtContactPerson.Text = Server.HtmlDecode(dt.Rows(0)("ContactPerson").ToString)
                        End If


                        If ddlContactType.Text = "COMPANY" Then
                            If String.IsNullOrEmpty(dt.Rows(0)("Mobile").ToString) = True Or dt.Rows(0)("Mobile").ToString = "&nbsp;" Then
                                txtTelephone.Text = ""
                            Else
                                txtTelephone.Text = Server.HtmlDecode(dt.Rows(0)("Mobile").ToString)
                            End If

                        ElseIf ddlContactType.Text = "PERSON" Then
                            If String.IsNullOrEmpty(dt.Rows(0)("TelMobile").ToString) = True Or dt.Rows(0)("TelMobile").ToString = "&nbsp;" Then
                                txtTelephone.Text = ""
                            Else
                                txtTelephone.Text = Server.HtmlDecode(dt.Rows(0)("TelMobile").ToString)
                            End If

                        End If


                        'If ddlContactType.Text = "COMPANY" Then
                        '    If String.IsNullOrEmpty(dt.Rows(0)("CompanyGroup").ToString) = True Or dt.Rows(0)("CompanyGroup").ToString = "&nbsp;" Then
                        '        ddlCompanyGrp.SelectedIndex = 0
                        '    Else
                        '        ddlCompanyGrp.Text = Server.HtmlDecode(dt.Rows(0)("CompanyGroup").ToString)
                        '    End If
                        'Else
                        '    If String.IsNullOrEmpty(dt.Rows(0)("PersonGroup").ToString) = True Or dt.Rows(0)("PersonGroup").ToString = "&nbsp;" Then
                        '        ddlCompanyGrp.SelectedIndex = 0
                        '    Else
                        '        ddlCompanyGrp.Text = Server.HtmlDecode(dt.Rows(0)("PersonGroup").ToString)
                        '    End If
                        'End If



                        If (gvClient.SelectedRow.Cells(31).Text = "&nbsp;") Then
                            ddlCompanyGrp.SelectedIndex = 0
                        Else
                            ddlCompanyGrp.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(31).Text.Trim)
                        End If

                        'ddlCompanyGrp.Text = Server.HtmlDecode(dt.Rows(0)("CompanyGroup").ToString)

                        If ddlContactType.Text = "COMPANY" Then
                            If String.IsNullOrEmpty(dt.Rows(0)("Fax").ToString) = True Or dt.Rows(0)("Fax").ToString = "&nbsp;" Then
                                txtFax.Text = ""
                            Else
                                txtFax.Text = Server.HtmlDecode(dt.Rows(0)("Fax").ToString)
                            End If
                        Else
                            If String.IsNullOrEmpty(dt.Rows(0)("TelFax").ToString) = True Or dt.Rows(0)("TelFax").ToString = "&nbsp;" Then
                                txtFax.Text = ""
                            Else
                                txtFax.Text = Server.HtmlDecode(dt.Rows(0)("TelFax").ToString)
                            End If

                        End If




                        If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString) = True Or dt.Rows(0)("AddPostal").ToString = "&nbsp;" Then
                            txtPostal.Text = ""
                        Else
                            txtPostal.Text = Server.HtmlDecode(dt.Rows(0)("AddPostal").ToString)
                        End If
                        Dim lsalesman As String




                        lsalesman = dt.Rows(0)("Salesman").ToString

                        If String.IsNullOrEmpty(lsalesman.Trim) = True Or lsalesman.Trim = "&nbsp;" Then
                            ddlSalesman.SelectedIndex = 0
                        Else

                            If ddlSalesman.Items.FindByValue(lsalesman) Is Nothing Then
                                ddlSalesman.Items.Add(lsalesman)
                                ddlSalesman.Text = lsalesman
                            Else
                                ddlSalesman.Text = lsalesman
                            End If
                        End If



                        If ddlContactType.Text = "COMPANY" Then
                            If (dt.Rows(0)("Industry").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("Industry").ToString) = True Then
                                ddlIndustry.Text = ""
                            Else
                                ddlIndustry.Text = dt.Rows(0)("Industry").ToString
                            End If
                        End If

                        If String.IsNullOrEmpty(ddlIndustry.Text) = False Then
                            FindMarketSegmentID()
                        End If

                        If (dt.Rows(0)("billaddress1").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billaddress1").ToString) = True Then
                            txtBillingAddress.Text = ""
                        Else
                            txtBillingAddress.Text = dt.Rows(0)("billaddress1").ToString
                        End If

                        If (dt.Rows(0)("billstreet").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billstreet").ToString) = True Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + dt.Rows(0)("billstreet").ToString
                        End If



                        If (dt.Rows(0)("billbuilding").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billbuilding").ToString) = True Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + dt.Rows(0)("billbuilding").ToString
                        End If

                        If (dt.Rows(0)("billcity").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billcity").ToString) = True Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + dt.Rows(0)("billcity").ToString
                        End If

                        If (dt.Rows(0)("billcountry").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billcountry").ToString) = True Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + dt.Rows(0)("billcountry").ToString
                        End If

                        If (dt.Rows(0)("billpostal").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("billpostal").ToString) = True Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + dt.Rows(0)("billpostal").ToString
                        End If

                        'If (dt.Rows(0)("location").ToString = "&nbsp;") Or String.IsNullOrEmpty(dt.Rows(0)("location").ToString) = True Then
                        'Else
                        '    txtLocation.Text = dt.Rows(0)("location").ToString
                        'End If




                        txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
                        If String.IsNullOrEmpty(txtPostal.Text) = False Then
                            RetrieveLocation()
                        End If

                        FirstGridViewRowLocation()
                        'Dim Query1 As String
                        'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

                        'If ddlContactType.Text.Trim = "CORPORATE" Or ddlContactType.Text.Trim = "COMPANY" Then
                        '    Query1 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                        'Else
                        '    Query1 = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                        'End If

                        'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


                        If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                            ddlProjectCode.Items.Clear()
                            ddlProjectCode.Items.Add("--SELECT--")

                            Dim query1 As String
                            query1 = "SELECT CONCAT(ProjectNo, ' - ', ProjectName) AS ProjectCode FROM tblProject where Status ='O' and AccountID = '" & txtAccountId.Text & "' and ProjectName is not null ORDER BY ProjectNo  "
                            PopulateDropDownList(query1, "ProjectCode", "ProjectCode", ddlProjectCode)
                        End If
                    End If
                    conn.Close()
                    conn.Dispose()
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''


                    If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                        txtContactPerson.Text = ""
                    Else
                        txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                    End If
                Else
                    lblAlert.Text = "Account Id can be selected only for Open Contracts"
                End If
            Else


                'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                'Else
                '    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                'End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                Else
                    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtClient.Text = ""
                'Else
                '    txtClient.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If

                If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtClientNameSearch.Text = ""
                Else
                    txtClientNameSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(4).Text.Trim)
                End If
                txtClientNameSearch.Focus()

            End If
            txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

            ''26.03.21

            FindIsActiveContract()

          
            conn.Close()
            conn.Dispose()

            ''26.03.21
            mdlPopUpClient.Hide()
            'Dim lblidlocation As ImageButton = CType(grvServiceLocation.Rows(0).FindControl("BtnLocation"), ImageButton)
            'lblidlocation.Visible = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvClient_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindIsActiveContract()
        Try

            If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()
                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT count(ContractNo) as IsActiveContract FROM tblContract where accountid='" & txtAccountId.Text & "' and ((Status='O') or (Status='E') or (Status='H')) limit 1"

                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows(0)("IsActiveContract").ToString = 0 Then
                    ddlAgreementType.Items.Clear()
                    'ddlAgreementType.Items.Add("--SELECT--")
                    ddlAgreementType.Items.Add("NEW")

                    ddlAgreementType.Text = "NEW"
                    lblAgreentTypeRemarks.Text = "This account does not have an active contract, the Agreement Type of this contract is defaulted as NEW"

                Else
                    ddlAgreementType.Items.Clear()
                    'ddlAgreementType.Items.Add("--SELECT--")

                    ddlAgreementType.Items.Add("ADDITION")

                    ddlAgreementType.Text = "ADDITION"
                    lblAgreentTypeRemarks.Text = "This account has one or more active contract/s, the Agreement Type of this contract is defaulted as ADDITION"

                End If

                conn.Close()
                conn.Dispose()
                command2.Dispose()
                dr2.Close()
                dt2.Dispose()

                If txtModeRenew.Text = "REV" Or txtModeRenew.Text = "R" Then
                Else
                    FindContractCode()
                End If

            End If

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindIsActiveContract", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindContractCode()
        Try

            If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                Dim strsql As String

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim command3 As MySqlCommand = New MySqlCommand
                command3.CommandType = CommandType.Text

                command2.CommandText = "SELECT count(ContractNo) as IsContract FROM tblContract where accountid='" & txtAccountId.Text & "' limit 1"
                command3.CommandText = "SELECT count(ContractNo) as IsContract FROM tblContractDet where LocationId='" & lblAccountIdContactLocation1.Text & "' limit 1"


                Dim command4 As MySqlCommand = New MySqlCommand

                command4.CommandType = CommandType.Text
                If ddlAgreementType.Text = "NEW" Then
                    command2.Connection = conn


                    Dim dr2 As MySqlDataReader = command2.ExecuteReader()
                    Dim dt2 As New DataTable
                    dt2.Load(dr2)

                    If dt2.Rows(0)("IsContract").ToString = 0 Then
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where NewCustomer='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where NewCustomer='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    Else
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where ExistingCustomer='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where ExistingCustomer='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    End If


                ElseIf ddlAgreementType.Text = "ADDITION" Then
                    command3.Connection = conn


                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt3 As New DataTable
                    dt3.Load(dr3)

                    If dt3.Rows(0)("IsContract").ToString = 0 Then
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where NewSite='Y'  and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where NewSite='Y'  and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    Else
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where ExistingSite='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where ExistingSite='Y' and AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    End If

                    '09.04.23
                Else

                    command3.Connection = conn


                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt3 As New DataTable
                    dt3.Load(dr3)

                    If dt3.Rows(0)("IsContract").ToString = 0 Then
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    Else
                        command4.CommandText = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where  AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                        strsql = "SELECT CONCAT(Code, ' : ', Description) AS CC FROM tblContractCode where  AgreementType ='" & ddlAgreementType.Text & "' and  Status = 'Y' ORDER BY Code"
                    End If
                    '09.04.23
                End If

                command4.Connection = conn

                Dim dr4 As MySqlDataReader = command4.ExecuteReader()
                Dim dt4 As New DataTable
                dt4.Load(dr4)

                'ddlContractCode.Text = dt4.Rows(0)("CC").ToString


                'If dt2.Rows(0)("IsContract").ToString = 0 Then
                '    ddlContractCode.Text = "CC001"
                'Else
                '    ddlContractCode.Text = "CC002"
                'End If

                'ddlAgreementType.Enabled = False
                'ddlContractCode.Enabled = False
                conn.Close()
                conn.Dispose()
                command2.Dispose()
                command3.Dispose()
                command4.Dispose()
                'dr2.Close()
                'dt2.Dispose()

                ddlContractCode.Items.Clear()
                ddlContractCode.Items.Add("--SELECT--")

                sqlDSContractCode.SelectCommand = strsql
                sqlDSContractCode.DataBind()

                ddlContractCode.DataSourceID = "sqlDSContractCode"
                ddlContractCode.DataBind()
                ddlContractCode.SelectedIndex = 1
            End If

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindContractCode", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub FindMarketSegmentID()
        Try
            Dim connBillingDetails As MySqlConnection = New MySqlConnection()

            connBillingDetails.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connBillingDetails.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT marketsegmentid FROM tblindustry where industry= """ & ddlIndustry.Text & """"
            command1.Connection = connBillingDetails

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                ddlMarketSegmentID.Text = dt.Rows(0)("marketsegmentid").ToString
            End If

            connBillingDetails.Close()
            command1.Dispose()
            dt.Dispose()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindMarketSegmentID", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindDuration()
        Try

            If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text

                command.CommandText = "SELECT FixedContinuous FROM tblContractGroup where contractGroup='" & ddlContractGrp.Text & "'"
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows(0)("FixedContinuous").ToString <> "" Then

                    If dt.Rows(0)("FixedContinuous").ToString = "F" Then
                        rbtFixedContinuous.SelectedIndex = 0
                    ElseIf dt.Rows(0)("FixedContinuous").ToString = "C" Then
                        rbtFixedContinuous.SelectedIndex = 1
                    End If

                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> CalculateDates();</Script>", False)

                Else
                    mdlDurationType.Show()
                    DisableControls()
                End If
              

               
                conn.Close()
                conn.Dispose()
                command.Dispose()
               

            End If

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindDuration", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged
        Try
            'If String.IsNullOrEmpty(txtContractNo.Text) = True Then
            '    lblAlert.Text = "Please Select a Contract to proceed."
            '    tb1.TabIndex = 0
            '    Exit Sub
            'End If

            lblAlert.Text = ""

            If tb1.ActiveTabIndex = 0 Then
                DisplayContractPriceHistory()
            End If

            If tb1.ActiveTabIndex = 1 Then
                'If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch to 'Service Details' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If

             
            End If

            If tb1.ActiveTabIndex = 2 Then
                'If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch to 'Items Issued' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If
            End If


            If tb1.ActiveTabIndex = 3 Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch to 'Schedule of Rate' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If
            End If

            If tb1.ActiveTabIndex = 4 Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch 'Commission' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If
            End If

            If tb1.ActiveTabIndex = 5 Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch 'File Upload' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If
            End If


            If tb1.ActiveTabIndex = 6 Then
                If lblMessage.Text = "ACTION: ADD RECORD" Or lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or (txtMode.Text = "NEW" And txtModeRenew.Text = "REV") Then
                    lblAlert.Text = "Cannot switch 'Notes' tab during COPY/RENEW/REVISE"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If
            End If



            If tb1.ActiveTabIndex = 1 Then
                If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If

                If String.IsNullOrEmpty(txtContractNo.Text) Then
                    lblAlert.Text = "Select a Contract to Proceed"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If


                'GridView1.Visible = False
                txtServStartSvc.Text = txtServStart.Text
                txtServEndSvc.Text = txtServEnd.Text
                txtServStartDaySvc.Text = txtServStartDay.Text
                txtServEndDaySvc.Text = TxtServEndDay.Text
                txtContractGroupSelected.Text = ddlContractGrp.Text

                SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by LocationId, Frequency, ServiceId limit 20"

                grvContractDetail.DataSourceID = "SqlDSContractDet"
                grvContractDetail.DataBind()
                'grvContractDetail.DataBind = "SqlDSContractDet"

                If grvContractDetail.Rows.Count = 0 Then
                    txtSelectedIndex.Text = "-1"
                Else
                    txtSelectedIndex.Text = "0"
                End If


                grvContractDetail_SelectedIndexChanged(New Object(), New EventArgs)
                OnSelectedIndexChanged2(New Object(), New EventArgs)
                'SASI - 17/04/2017
            ElseIf tb1.ActiveTabIndex = 2 Then
                If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If

                If String.IsNullOrEmpty(txtContractNo.Text) Then
                    lblAlert.Text = "Select a Contract to proceed"
                    tb1.ActiveTabIndex = 0
                    Exit Sub
                End If


                'GridView1.Visible = False
            End If

            If tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Or tb1.ActiveTabIndex = 6 Then
                'txtSvcMode.Text = "NEW"
                If txtSvcMode.Text = "NEW" Or txtSvcMode.Text = "EDIT" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 1
                    Exit Sub
                End If

                'GridView1.Visible = True
            ElseIf tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Or tb1.ActiveTabIndex = 6 Then
                'txtSvcMode.Text = "NEW"
                If txtCommMode.Text = "EDIT" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 2
                    Exit Sub
                End If

            ElseIf tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Then
                'txtSvcMode.Text = "NEW"
                If txtNotesMode.Text = "EDIT" Then
                    lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    tb1.ActiveTabIndex = 6
                    Exit Sub
                End If

            End If


            If tb1.ActiveTabIndex = 2 Then
                lbItemsIssued.Text = txtContractNo.Text
                'lbItemsIssued.Text = Session("UserID").ToString.ToUpper

                sqlDSItemsIssued.SelectCommand = "select tblservicerecordissueditem.rcno,ItemID, ItemName, sum(Qty) as Qty, UnitMS FROM tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' Group by ItemID order by ItemID"
                sqlDSItemsIssued.DataBind()
                gvItemsIssued.DataBind()

                If gvItemsIssued.Rows.Count > 0 Then
                    gvItemsIssued.SelectedIndex = 0

                    Dim ItemID As String = Server.HtmlDecode(gvItemsIssued.Rows(0).Cells(1).Text)
                    sqlDSItemsIssuedDetail.SelectCommand = "select tblservicerecordissueditem.rcno,ServiceDate,tblservicerecordissueditem.RecordNo as ServiceRecordNo,Qty,tblservicerecordissueditem.Remarks FROM tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' and tblservicerecordissueditem.ItemID = '" & ItemID & "' order by ServiceDate desc"
                    sqlDSItemsIssuedDetail.DataBind()
                    gvItemsIssuedDetail.DataBind()

                End If
               
               
            ElseIf tb1.ActiveTabIndex = 3 Then
                Dim query As String
                query = ""

                query = "Select TargetId from tblTarget order by descrip1"
                PopulateDropDownList(query, "TargetId", "TargetId", ddlTagetIDRateSchedule)

                lblScheduleRate1.Text = txtContractNo.Text
                'lbItemsIssued.Text = Session("UserID").ToString.ToUpper

                sqlDSRateSchedule.SelectCommand = "select * FROM tblrateschedule where ContractNo = '" + txtContractNo.Text + "'order by TargetID"
                sqlDSRateSchedule.DataBind()

                gvRateSchedule.DataSourceID = "sqlDSRateSchedule"
                gvRateSchedule.DataBind()

                EnableRateScheduleControls()

                btnEditRateSchedule.Enabled = False
                btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
                btnDeleteRateSchedule.Enabled = False
                btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

                'AccessControl()
                'EnablecommControls()
            ElseIf tb1.ActiveTabIndex = 6 Then
                lblNotesKeyField.Text = txtContractNo.Text
                lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

                SqlDSNotesMaster.SelectCommand = "select Rcno, StaffId, Notes, CreatedBy, CreatedOn, LastModifiedBy, lastModifiedOn from tblnotes where keyfield = '" + txtContractNo.Text + "'"
                SqlDSNotesMaster.DataBind()
                gvNotesMaster.DataBind()
            ElseIf tb1.ActiveTabIndex = 5 Then
                'View Uploaded files
                iframeid.Attributes.Add("src", "about:blank")

                'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract/"))
                'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
                'Dim files As List(Of ListItem) = New List(Of ListItem)

                'For Each foundFile As FileInfo In filesInDir
                '    Dim fullName As String = foundFile.FullName
                '    files.Add(New ListItem(foundFile.Name))
                'Next
                ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                ''For Each filePath As String In filePaths
                ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                ''Next
                'gvUpload.DataSource = files
                'gvUpload.DataBind()
                SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
                gvUpload.DataSourceID = "SqlDSUpload"
                gvUpload.DataBind()

                'TabPanel3.HeaderText = "File Upload [" & gvUpload.Rows.Count & "]"
                lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
                updPanelContract1.Update()
            End If
            '  if (sender.get_activeTabIndex() == 1) {
            '    if (document.getElementById("<%=txtContractNo.ClientID%>").value == '') {
            '        $find('<%=tb1.ClientID%>').set_activeTabIndex(0);
            '        alert("Please select a Contract record to proceed.");
            '        return;
            '    }

            '    document.getElementById('<%=GridView1.ClientID()%>').style.display = 'none';

            '        document.getElementById("<%=txtServStartSvc.ClientID%>").value = document.getElementById("<%=txtServStart.ClientID%>").value
            '        document.getElementById("<%=txtServEndSvc.ClientID%>").value = document.getElementById("<%=txtServEnd.ClientID%>").value

            '        document.getElementById("<%=txtServStartDaySvc.ClientID%>").value = document.getElementById("<%=txtServStartDay.ClientID%>").value
            '        document.getElementById("<%=txtServEndDaySvc.ClientID%>").value = document.getElementById("<%=TxtServEndDay.ClientID%>").value

            '}
            'else {
            '    document.getElementById('<%=GridView1.ClientID()%>').style.display = 'inline';

            '}
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "tb1_ActiveTabChanged", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If String.IsNullOrEmpty(txtContractNo.Text) Then
                lblAlert.Text = "SELECT ACCOUNT TO UPLOAD FILE"
                Return

            End If

            If String.IsNullOrEmpty(txtFileDescription.Text) Then
                lblAlert.Text = "ENTER FILE DESCRIPTION TO UPLOAD FILE"
                Exit Sub
            End If

            If ddlDocumentType.SelectedIndex = 0 Then
                lblAlert.Text = "ENTER DOCUMENT TYPE TO UPLOAD FILE"
                Exit Sub
            End If

            ''''''''''''''''''
            If (FileUpload1.FileBytes.Length > 20971520) Then
                lblAlert.Text = "FILE SIZE SHOULD BE LESS THAN 20MB"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            ''''''''''''''''''''''


            If FileUpload1.HasFile Then

                Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
                Dim ext As String = Path.GetExtension(fileName)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

                    If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName) Then

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtContractNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            '  MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                            lblAlert.Text = "FILE ALREADY EXISTS"
                            conn.Close()
                            conn.Dispose()
                            Exit Sub
                        End If
                    Else




                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtContractNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text

                            command2.CommandText = "delete from fileupload where filenamelink='" + txtContractNo.Text + "_" + fileName + "'"

                            command2.Connection = conn

                            command2.ExecuteNonQuery()
                        End If
                    End If
                    FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName))

                    'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
                    'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
                    'Dim files As List(Of ListItem) = New List(Of ListItem)

                    'For Each foundFile As FileInfo In filesInDir
                    '    Dim fullName As String = foundFile.FullName
                    '    files.Add(New ListItem(foundFile.Name))
                    'Next
                    ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                    ''For Each filePath As String In filePaths
                    ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                    ''Next

                    'ADD FILE UPLOAD INFORMATION TO DATABASE INORDER TO STORE FILES WITH DESCRIPTION - 20170930



                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblfileupload(FileGroup,FileRef,FileName,FileDescription,FileType,FileNameLink, DocumentType, CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                    qry = qry + "VALUES(@FileGroup,@FileRef,@FileName,@FileDescription,@FileType,@FileNameLink, @DocumentType, @CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"


                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@FileGroup", "CONTRACT")
                        command.Parameters.AddWithValue("@FileRef", txtContractNo.Text)
                        command.Parameters.AddWithValue("@FileName", fileName.ToUpper)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtContractNo.Text + "_" + fileName.ToUpper)

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@FileGroup", "CONTRACT")
                        command.Parameters.AddWithValue("@FileRef", txtAccountId.Text)
                        command.Parameters.AddWithValue("@FileName", fileName)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtContractNo.Text + "_" + fileName)

                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()

                    ''''''''''''''''''''''''''''
                    If ddlDocumentType.Text = "SIGNED SERVICE AGREEMENT" Then
                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text
                        Dim qry1 As String = "UPDATE tblContract SET SignedServiceAgreement = True, SignedAgreementReference= 'Uploaded File'  where ContractNo ='" & txtContractNo.Text & "'"


                        command1.CommandText = qry1
                        command1.Parameters.Clear()

                        'command1.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                        'command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))

                        command1.Connection = conn

                        command1.ExecuteNonQuery()

                        chkSignedServiceAgreement.Checked = True
                        txtSignedAgreementReference.Text = "Signed Service Agreement Refer to the Uploaded File"
                    End If

                    ''''''''''''''''''''''''''


                    conn.Close()
                    conn.Dispose()
                    command.Dispose()

                    SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
                    gvUpload.DataSourceID = "SqlDSUpload"
                    gvUpload.DataBind()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtContractNo.Text, "ADD FILE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, "", txtContractNo.Text + "_" + fileName, txtContractNo.Text)

                    txtFileDescription.Text = ""
                    ddlDocumentType.SelectedIndex = 0
                    lblMessage.Text = "FILE UPLOADED"
                    lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"

                Else
                    lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
                    Return
                End If
            Else
                lblAlert.Text = "SELECT FILE TO UPLOAD"
            End If
            '  Response.Redirect(Request.Url.AbsoluteUri)

            'lblMessage.Text = ""
            'lblAlert.Text = ""

            'If FileUpload1.HasFile Then

            '    Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
            '    Dim ext As String = Path.GetExtension(fileName)

            '    If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

            '        ' If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtAccountId.Text + "_CONTRACT_" + txtContractNo.Text + "_" + fileName) Then
            '        If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName) Then
            '            lblAlert.Text = "FILE ALREADY EXISTS"
            '            Return

            '        End If
            '        'FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtAccountId.Text + "_CONTRACT_" + txtContractNo.Text + "_" + fileName))
            '        FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName))
            '        lblMessage.Text = "FILE UPLOADED"

            '        Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract"))
            '        '   Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountId.Text + "_")) + "*.*")
            '        Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
            '        Dim files As List(Of ListItem) = New List(Of ListItem)

            '        For Each foundFile As FileInfo In filesInDir
            '            Dim fullName As String = foundFile.FullName
            '            files.Add(New ListItem(foundFile.Name))
            '        Next
            '        'Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            '        'For Each filePath As String In filePaths
            '        '    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            '        'Next
            '        gvUpload.DataSource = files
            '        gvUpload.DataBind()
            '    Else
            '        lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
            '        Return
            '    End If
            'Else
            '    lblAlert.Text = "SELECT FILE TO UPLOAD"
            'End If
            ''  Response.Redirect(Request.Url.AbsoluteUri)
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UploadFile", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
        Dim filePath As String = CType(sender, LinkButton).CommandArgument
        ' filePath = Uri.EscapeDataString(filePath)

        filePath = Server.MapPath("~/Uploads/Contract/") + filePath

        Response.ContentType = ContentType
        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
        Response.WriteFile(filePath)
        Response.End()

    End Sub

    Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Session.Add("FileName", filePath)
            filePath = Server.MapPath("~/Uploads/Contract/") + filePath
            'lblMessage.Text = filePath
            'Return
            Session.Add("FilePath", filePath)
            Session.Add("ContractNo", txtContractNo.Text)
            Response.Redirect("Email.aspx?Type=ContractFileUpload")

        Catch ex As Exception
            InsertIntoTblWebEventLog(Session("UserID"), "EmailFile", ex.Message.ToString, txtContractNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '    ' filePath = Uri.EscapeDataString(filePath)

    '    filePath = Server.MapPath("~/Uploads/Contract/") + filePath
    '    Session.Add("FilePath", filePath)

    '    Response.Redirect("Email.aspx?Type=ContractUpload")

    '    'Response.ContentType = ContentType
    '    'Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '    'Response.WriteFile(filePath)
    '    'Response.End()
    'End Sub

    Protected Sub DeleteFile(ByVal sender As Object, ByVal e As EventArgs)

        If txtFileDelete.Text = False Then
            lblAlert.Text = "FILE DELETION ACCESS RIGHT HAS NOT BEEN PROVIDED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        Dim filePath As String = CType(sender, LinkButton).CommandArgument

        '     txtFileLink.Text = Uri.EscapeDataString(filePath)
        txtFileLink.Text = filePath
        filePath = Server.MapPath("~/Uploads/Contract/") + filePath

        txtDeleteUploadedFile.Text = filePath
        iframeid.Attributes.Add("src", "about:blank")

        lblQuery.Text = "Are you sure to DELETE the File? <br><br> File Name : " + txtFileLink.Text

        mdlPopupDeleteUploadedFile.Show()

        'File.Delete(filePath)
        ''  Response.Redirect(Request.Url.AbsoluteUri)
        'lblMessage.Text = "FILE DELETED"
        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/"))
        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
        'Dim files As List(Of ListItem) = New List(Of ListItem)

        'For Each foundFile As FileInfo In filesInDir
        '    Dim fullName As String = foundFile.FullName
        '    files.Add(New ListItem(foundFile.Name))
        'Next
        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
        ''For Each filePath As String In filePaths
        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
        ''Next
        'gvUpload.DataSource = files
        'gvUpload.DataBind()
    End Sub


    Private Sub MakeCommNull()
        lblContractNo2.Text = ""
        lblAccountID2.Text = ""
        lblAccountName.Text = ""
        txtCommMode.Text = ""

        txtSalesCommPercent.Text = "0.00"
        txtSalesCommAmt.Text = "0.00"

        txtTechCommPercent.Text = "0.00"
        txtTechCommAmt.Text = "0.00"


        lblContractNo1.Text = ""
        lblAccountID1.Text = ""
        lblName1.Text = ""

    End Sub

    Private Sub EnablecommControls()
        btnCommSave.Enabled = False
        btnCommSave.ForeColor = System.Drawing.Color.Gray
        btnCommCancel.Enabled = False
        btnCommCancel.ForeColor = System.Drawing.Color.Gray

        btnCommEdit.Enabled = True
        btnCommEdit.ForeColor = System.Drawing.Color.Black

        txtSalesCommPercent.Enabled = False
        txtSalesCommAmt.Enabled = False

        txtTechCommPercent.Enabled = False
        txtTechCommAmt.Enabled = False
    End Sub

    Private Sub DisablecommControls()
        btnCommSave.Enabled = True
        btnCommSave.ForeColor = System.Drawing.Color.Black
        btnCommCancel.Enabled = True
        btnCommCancel.ForeColor = System.Drawing.Color.Black

        btnCommEdit.Enabled = False
        btnCommEdit.ForeColor = System.Drawing.Color.Gray


        txtSalesCommPercent.Enabled = True
        txtSalesCommAmt.Enabled = True

        txtTechCommPercent.Enabled = True
        txtTechCommAmt.Enabled = True

    End Sub

    Protected Sub btnCommCancel_Click(sender As Object, e As EventArgs) Handles btnCommCancel.Click
        MakeCommNull()
        DisablecommControls()

    End Sub

    Protected Sub btnCommEdit_Click(sender As Object, e As EventArgs) Handles btnCommEdit.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If

        DisablecommControls()
        txtCommMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT COMMISSION"

    End Sub

    Protected Sub btnCommSave_Click(sender As Object, e As EventArgs) Handles btnCommSave.Click
        Try
            Dim d, d1 As Double
            If String.IsNullOrEmpty(txtSalesCommPercent.Text) = False Then
                If Double.TryParse(txtSalesCommPercent.Text, d) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: SALES COMMISSION PERCENT"
                    Return
                End If
            Else
                txtSalesCommPercent.Text = "0"
            End If

            If String.IsNullOrEmpty(txtSalesCommAmt.Text) = False Then
                If Double.TryParse(txtSalesCommAmt.Text, d) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: SALES COMMISSION AMOUNT"
                    Return
                End If
            Else
                txtSalesCommAmt.Text = "0.00"
            End If


            Dim d2, d3 As Double
            If String.IsNullOrEmpty(txtTechCommPercent.Text) = False Then
                If Double.TryParse(txtTechCommPercent.Text, d2) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: TECHNICIAN COMMISSION PERCENT"
                    Return
                End If
            Else
                txtTechCommPercent.Text = "0"
            End If

            If String.IsNullOrEmpty(txtTechCommAmt.Text) = False Then
                If Double.TryParse(txtTechCommAmt.Text, d3) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: TECHNICIAN COMMISSION AMOUNT"
                    Return
                End If
            Else
                txtTechCommAmt.Text = "0.00"
            End If

            If txtRcno.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            '    Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()



            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblCONTRACT where rcno=" & Convert.ToInt32(txtRcno.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "UPDATE tblcontract SET SalesCommissionPerc = @SalesCommissionPerc,SalesCommissionAmt = @SalesCommissionAmt,TechCommissionPerc = @TechCommissionPerc,TechCommissionAmt = @TechCommissionAmt WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@SalesCommissionPerc", txtSalesCommPercent.Text)
                command.Parameters.AddWithValue("@SalesCommissionAmt", txtSalesCommAmt.Text)
                command.Parameters.AddWithValue("@TechCommissionPerc", txtTechCommPercent.Text)
                command.Parameters.AddWithValue("@TechCommissionAmt", txtTechCommAmt.Text)

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()
                lblMessage.Text = "EDIT: COMMISSION SUCCESSFULLY UPDATED"
                lblAlert.Text = ""
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()

            EnablecommControls()

            txtCommMode.Text = ""
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnCommSave_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub txtSalesCommPercent_TextChanged(sender As Object, e As EventArgs) Handles txtSalesCommPercent.TextChanged
        txtSalesCommAmt.Text = Convert.ToDecimal(txtSalesCommPercent.Text) * Convert.ToDecimal(txtAgreeVal.Text) * 0.01
    End Sub

    Protected Sub txtTechCommPercent_TextChanged(sender As Object, e As EventArgs) Handles txtTechCommPercent.TextChanged
        txtTechCommAmt.Text = Convert.ToDecimal(txtTechCommPercent.Text) * Convert.ToDecimal(txtAgreeVal.Text) * 0.01

    End Sub



    Protected Sub btnAddTeam_Click(sender As Object, e As EventArgs) Handles btnAddTeam.Click
        Session("teamfrom") = "contract"

        If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            Session("rcno") = txtRcno.Text
            Session("contractno") = txtContractNo.Text

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                Session("accountid") = lblAccountIdContact1.Text
            End If

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                Session("locationid") = lblAccountIdContactLocation1.Text
            End If


            'Session("contractdate") = txtContractDate.Text
            'Session("contracttype") = ddlContactType.Text
            'Session("client") = txtClient.Text
            'Session("custname") = txtCustName.Text
            'Session("accountid") = txtAccountId.Text
            'Session("contact") = txtContactPerson.Text
            'Session("servstart") = txtServStart.Text
            'Session("servend") = txtServEnd.Text
            'Session("companygrp") = ddlCompanyGrp.Text
            'Session("billingfreq") = ddlBillingFreq.Text
            'Session("billingamount") = txtBillingAmount.Text
            'Session("agreevalue") = txtAgreeVal.Text
            'Session("ValPerMnth") = txtValPerMnth.Text

            'Session("technician") = txtServiceBy.Text
            'Session("timein") = txtServTimeIn.Text
            'Session("timeout") = txtServTimeOut.Text

            'txt.Text = SQLDSContract.SelectCommand
            Session("gridsqlcontract") = txt.Text

            'Session("computationmethod") = rbtComputationMethod.SelectedIndex
        End If
        Response.Redirect("Master_Team.aspx")
    End Sub

    Protected Sub ddlContractGrp_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlContractGrp.SelectedIndexChanged

        FindCategoryId()
        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
    End Sub

    Private Sub FindCategoryId()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Category, IncludeinPortfolio, BackDateContract,BackDateContractTermination, ReviseTerminatedContract FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtCategoryID.Text = dt.Rows(0)("Category").ToString()
                txtIncludeinPortfolio.Text = dt.Rows(0)("IncludeinPortfolio").ToString()

                txtBackDateContractSetup.Text = dt.Rows(0)("BackDateContract").ToString()
                txtBackDateContractTerminationSetup.Text = dt.Rows(0)("BackDateContractTermination").ToString()
                txtReviseTerminatedContract.Text = dt.Rows(0)("ReviseTerminatedContract").ToString()
            End If

            If txtIncludeinPortfolio.Text = "1" Then
                txtIncludeinPortfolio.Text = "True"
                'lblAlert.Text = "True"
            Else
                txtIncludeinPortfolio.Text = "False"
                'lblAlert.Text = "False"
            End If

           
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            updPanelContract1.Update()

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
            'ddlContractGrp.Attributes.Add("onchange", "calculateportfolio();")
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindCategoryId", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindBackDateContractTermination()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Category, IncludeinPortfolio, BackDateContract,BackDateContractTermination FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'txtCategoryID.Text = dt.Rows(0)("Category").ToString()
                'txtIncludeinPortfolio.Text = dt.Rows(0)("IncludeinPortfolio").ToString()

                txtBackDateContractSetup.Text = dt.Rows(0)("BackDateContract").ToString()
                txtBackDateContractTerminationSetup.Text = dt.Rows(0)("BackDateContractTermination").ToString()
            End If

            If txtIncludeinPortfolio.Text = "1" Then
                txtIncludeinPortfolio.Text = "True"
                'lblAlert.Text = "True"
            Else
                txtIncludeinPortfolio.Text = "False"
                'lblAlert.Text = "False"
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            updPanelContract1.Update()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindCategoryId", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindPriceIncreaseDecreaseLimit()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT PriceIncreaseLimit, PriceDecreaseLimit, RevisionIncreaseLimit, RevisionDecreaseLimit FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtPriceIncreaseLimit.Text = dt.Rows(0)("PriceIncreaseLimit").ToString()
                txtPriceDecreaseLimit.Text = dt.Rows(0)("PriceDecreaseLimit").ToString()

                txtRevisionIncreaseLimit.Text = dt.Rows(0)("RevisionIncreaseLimit").ToString()
                txtRevisionDecreaseLimit.Text = dt.Rows(0)("RevisionDecreaseLimit").ToString()
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            updPanelContract1.Update()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindPriceIncreaseDecreaseLimit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub btnPrintSchedule_Click(sender As Object, e As EventArgs) Handles btnPrintSchedule.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "Update tblContract set PrintingRemarks =@PrintingRemarks"
            qry = qry + " where Rcno = @Rcno"

            command.CommandText = qry
            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text.ToUpper)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            End If

            command.Connection = conn

            command.ExecuteNonQuery()


            '  MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            'lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'lblAlert.Text = ""


            conn.Close()
            conn.Dispose()
            command.Dispose()
            ''''''''''''''''''''''''''''''

            If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                Session("contractno") = txtContractNo.Text

                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Session("searchstatus") = txtSearch1Status.Text
                End If

                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    Session("searchteam") = txtServiceAddressSearch.Text
                End If

                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    Session("searchincharge") = txtInchargeSearch.Text
                'End If

                If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                    Session("searchaccountid") = txtAccountIdSearch.Text
                End If

                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    Session("searchclientname") = txtClientNameSearch.Text
                End If

                ''''''''''''''''''''''''''''''

                Session("gridsqlcontract") = txt.Text
                Session("rcno") = txtRcno.Text

            End If


            Session("contractdetailfrom") = "contract"
            Response.Redirect("RV_ContractServiceSchedule.aspx")
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintSchedule_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton5_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton5.Click
        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub btnCloseNotesTemplateGrid_Click(sender As Object, e As EventArgs) Handles btnCloseNotesTemplateGrid.Click
        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub btnSelectNotesTemplateGrid_Click(sender As Object, e As EventArgs) Handles btnSelectNotesTemplateGrid.Click
        Dim totalRows As Long
        totalRows = 0
        Dim strContent As String
        strContent = ""

        For rowIndex1 As Integer = 0 To grvNotesTemplate.Rows.Count - 1
            Dim TextBoxchkSelect1 As CheckBox = CType(grvNotesTemplate.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
            If (TextBoxchkSelect1.Checked = True) Then
                totalRows = totalRows + 1
            End If
        Next rowIndex1



        If totalRows = 0 Then
            'mdlImportServices.Show()
            Dim message As String = "alert('PLEASE SELECT A RECORD')"
            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
            'lblAlert.Text = "PLEASE SELECT A RECORD"
            'lblAlert.Focus()
            'updPnlMsg.Update()

            Exit Sub
        End If

        'Start: Billing Details

        'Start: From tblBillingDetailItem

        Dim rowselected As Integer
        rowselected = 0

        For rowIndex As Integer = 0 To grvNotesTemplate.Rows.Count - 1
            'string txSpareId = row.ItemArray[0] as string;
            Dim TextBoxchkSelect As CheckBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)

            If (TextBoxchkSelect.Checked = True) Then

                Dim qry As String
                qry = ""

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text
                ''Header
                rowselected = rowselected + 1

                Dim NoteIdNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtNoteIdGV"), TextBox)
                Dim ContentNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtContentGV"), TextBox)
                Dim ModuleNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtModuleGV"), TextBox)

                If rowselected = 1 Then
                    strContent = ContentNT.Text
                Else
                    strContent = strContent + "; " + ContentNT.Text
                End If
            End If


        Next

        txtNotesTemplate.Text = strContent
        ModalPopupNotestemplate.Show()
        'btnSave.Enabled = True
        'updpnlBillingDetails.Update()
        'updPanelSave.Update()
        'updPnlBillingRecs.Update()
    End Sub

    Protected Sub PreviewFile(ByVal sender As Object, ByVal e As EventArgs)
        Dim filePath As String = CType(sender, LinkButton).CommandArgument
        Dim ext As String = Path.GetExtension(filePath)
        filePath = Uri.EscapeDataString(filePath)
        filePath = "Uploads/Contract/" + filePath
        ext = ext.ToLower

        '  filePath = Server.MapPath("~/Uploads/") + filePath
        '    frmWord.Attributes["src"] = http://localhost/MyApp/resume.doc;
        ' iframeid.Attributes.Add("src", Server.HtmlDecode("D:\1_CWBInfotech\A_Sitapest\Program\Sitapest\Uploads\10000145_photo (1).JPG"))
        If ext = ".doc" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Then
            Dim strFilePath As String = Server.MapPath("Uploads\Contract\")
            Dim strFile As String = CType(sender, LinkButton).CommandArgument
            Dim File As String() = strFile.Split("."c)
            Dim strExtension As String = ext
            Dim strUrl As String = "http://" + Request.Url.Authority + "/WordinIFrame/ConvertedLocation/"
            InsertIntoTblWebEventLog("Test", "PreviewFile", strUrl, txtContractNo.Text)
            Dim Filename As String = strFilePath + strFile.Split("."c)(0) & Convert.ToString(".html")

            If System.IO.File.Exists(Filename) Then
                System.IO.File.Delete(Filename)
            End If
            Dim Filename1 As String = strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html")

            If System.IO.File.Exists(Filename1) Then
                System.IO.File.Delete(Filename1)
            End If

            If ext = ".doc" Or ext = ".docx" Then
                ConvertHTMLFromWord(strFilePath & strFile, strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html"))

            ElseIf ext = ".xls" Or ext = ".xlsx" Then
                InsertIntoTblWebEventLog("Contract", "PreviewFile", strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
                ConvertHtmlFromExcel(strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
            End If

            iframeid.Attributes("src") = "Uploads/Contract/A" + strFile.Split("."c)(0) & Convert.ToString(".html")

        Else


            iframeid.Attributes.Add("src", filePath)

        End If
        '  iframeid.Attributes.Add("src", "https://docs.google.com/viewer?url={D:/1_CWBInfotech/A_Sitapest/Program/Sitapest/Uploads/10000145_ActualVsForecast_Format1.pdf?pid=explorer&efh=false&a=v&chrome=false&embedded=true")

    End Sub

    Public Sub ConvertHTMLFromWord(Source As Object, Target As Object)
        If Word Is Nothing Then
            ' Check for the prior instance of the OfficeWord Object
            Word = New Microsoft.Office.Interop.Word.ApplicationClass()
        End If

        Try
            ' To suppress window display the following code will help
            Word.Visible = False
            Word.Application.Visible = False
            Word.WindowState = Microsoft.Office.Interop.Word.WdWindowState.wdWindowStateMinimize



            Word.Documents.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Word.WdSaveFormat.wdFormatHTML

            Word.ActiveDocument.SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS
            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
            Exit Sub
        Finally
            If Word IsNot Nothing Then
                Word.Documents.Close(Unknown, Unknown, Unknown)
                Word.Quit(Unknown, Unknown, Unknown)
            End If

        End Try
    End Sub

    Public Sub ConvertHtmlFromExcel(Source As String, Target As String)
        'If Excel Is Nothing Then
        '    Excel = New Microsoft.Office.Interop.Excel.ApplicationClass()
        'End If

        Try

            'Excel.Visible = False
            'Excel.Application.Visible = False
            'Excel.WindowState = Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized

            'Excel.Workbooks.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
            '    Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
            '    Unknown, Unknown, Unknown)
            'InsertIntoTblWebEventLog("Test1", "ConvertHtml", Source, txtContractNo.Text)
            '  Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml


            'Excel.Workbooks(1).SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
            '    Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, Unknown, Unknown, Unknown, Unknown, Unknown)
            '  InsertIntoTblWebEventLog("Test2", "ConvertHtml", Target, txtContractNo.Text)
            'Status = StatusType.SUCCESS

            'Message = Status.ToString()

            Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            Dim excel As New Microsoft.Office.Interop.Excel.Application
            Dim xls As Microsoft.Office.Interop.Excel.Workbook
            xls = excel.Workbooks.Open(Source)
            xls.SaveAs(Target, format)
            xls.Close()
            '  excel.Quit()

        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
            Exit Sub
        Finally
            'If Excel IsNot Nothing Then
            '    Excel.Workbooks.Close()
            '    Excel.Quit()
            'End If

        End Try
    End Sub

    Protected Sub gvLocation_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvLocation.PageIndexChanging

        GridView1.PageIndex = e.NewPageIndex
        SqlDSCompanyLocation.DataBind()
        gvLocation.DataBind()

    End Sub

    Protected Sub btnUpdateNotes_Click(sender As Object, e As EventArgs) Handles btnUpdateNotes.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "Update tblContract set PrintingRemarks =@PrintingRemarks"
            qry = qry + " where Rcno = @Rcno"

            command.CommandText = qry
            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text.ToUpper)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            End If

            command.Connection = conn

            command.ExecuteNonQuery()


            '  MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            'lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'lblAlert.Text = ""


            conn.Close()
            conn.Dispose()
            command.Dispose()
            ModalPopupNotestemplate.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnUpdateNotes_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub OnRowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."

                If txtDisplayRecordsLocationwise.Text = "N" Then
                    'If ConfigurationManager.AppSettings("SMSEnabled").ToString() = "No" Then
                    e.Row.Cells(8).Visible = False
                    GridView1.HeaderRow.Cells(8).Visible = False

                ElseIf txtDisplayRecordsLocationwise.Text = "Y" Then
                    e.Row.Cells(8).Visible = True
                    GridView1.HeaderRow.Cells(8).Visible = True
                End If
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Gridview1 OnRowDataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub OnSelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        'For Each row As GridViewRow In GridView1.Rows
        '    If row.RowIndex = GridView1.SelectedIndex Then
        '        row.BackColor = ColorTranslator.FromHtml("#738A9C")
        '        row.ToolTip = String.Empty
        '    Else
        '        row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
        '        row.ToolTip = "Click to select this row."
        '    End If
        'Next

        For Each row As GridViewRow In GridView1.Rows
            If row.RowIndex = GridView1.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next

    End Sub

    Protected Sub OnRowDataBound2(sender As Object, e As GridViewRowEventArgs) Handles grvContractDetail.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grvContractDetail, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChanged2(sender As Object, e As EventArgs) Handles grvContractDetail.SelectedIndexChanged
        For Each row As GridViewRow In grvContractDetail.Rows

            If row.RowIndex = grvContractDetail.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#ffffff")
                row.ToolTip = "Click to select this row."
            End If

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                'If row.RowIndex = grvContractDetail.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = grvContractDetail.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Else
                If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                    'If row.RowIndex = txtSelectedIndex.Text Then
                    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                    '    row.ToolTip = String.Empty
                    '    txtSelectedIndex.Text = ""
                    'Else
                    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                    '    row.ToolTip = "Click to select this row."
                    'End If

                    If row.RowIndex = txtSelectedIndex.Text Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                        txtSelectedIndex.Text = ""
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If

                End If

            End If

        Next
    End Sub


    Private Sub DisableNotesControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddRateSchedule.Enabled = False
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnableNotesControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddRateSchedule.Enabled = True
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakeNotesNull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub

    Public NotesRcno As String

    Protected Sub gvNotesMaster_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvNotesMaster.PageIndexChanging
        gvNotesMaster.PageIndex = e.NewPageIndex

        SqlDSNotesMaster.SelectCommand = "SELECT * From tblnotes where keyfield='" + txtContractNo.Text + "'"

        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()
    End Sub

    Protected Sub gvNotesMaster_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        Try
            MakeNotesNull()

            Dim editindex As Integer = gvNotesMaster.SelectedIndex
            rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            txtNotesRcNo.Text = rcno.ToString()
            txtNotes.Text = Server.HtmlDecode(gvNotesMaster.SelectedRow.Cells(2).Text)
            EnableNotesControls()

            btnEditRateSchedule.Enabled = True
            btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
            btnDeleteRateSchedule.Enabled = True
            btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black


        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvNotesMaster_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCancelNotesMaster_Click(sender As Object, e As EventArgs) Handles btnCancelNotesMaster.Click
        MakeNotesNull()
        EnableNotesControls()
        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnAddNotesMaster_Click(sender As Object, e As EventArgs) Handles btnAddNotesMaster.Click
        DisableNotesControls()

        MakeNotesNull()
        lblMessage.Text = "ACTION: ADD NOTES"


        txtNotesMode.Text = "Add"
        txtNotes.Focus()
    End Sub

    Protected Sub btnSaveNotesMaster_Click(sender As Object, e As EventArgs) Handles btnSaveNotesMaster.Click
        If String.IsNullOrEmpty(txtNotes.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER NOTES"
            Return
        End If

        If txtNotesMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and notes=@notes"
                command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "NOTES ALREADY EXISTS"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblnotes(KeyModule,SubKeyModule,KeyField,SubKeyField,StaffID,CreatedOn,ContactType,CustCode,CustName,ContactPerson,Notes,Internal,Printable,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@KeyModule,@SubKeyModule,@KeyField,@SubKeyField,@StaffID,@CreatedOn,@ContactType,@CustCode,@CustName,@ContactPerson,@Notes,@Internal,@Printable,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@KeyModule", "CONTRACT")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text.ToUpper)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountId.Text)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text.ToUpper)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))


                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@KeyModule", "CONTRACT")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                        command.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountId.Text)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    End If

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: NOTES SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSaveNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

        ElseIf txtNotesMode.Text = "Edit" Then
            If txtNotesRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "NOTES ALREADY EXISTS"



                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblnotes where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblnotes SET notes=@notes,StaffID = @StaffID,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text.ToUpper)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                    End If
                    command1.Dispose()
                End If


                txtNotesMode.Text = ""

                conn.Close()
                conn.Dispose()

                command2.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSaveNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

        End If
        SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtContractNo.Text + "'"
        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()

        txtNotesMode.Text = ""

    End Sub

    Protected Sub btnEditNotesMaster_Click(sender As Object, e As EventArgs) Handles btnEditNotesMaster.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableNotesControls()
        txtNotesMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT NOTES"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub btnDeleteNotesMaster_Click(sender As Object, e As EventArgs) Handles btnDeleteNotesMaster.Click
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE NOTES"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDeleteNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

            SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtContractNo.Text + "'"
            SqlDSNotesMaster.DataBind()

            gvNotesMaster.DataBind()
            MakeNotesNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub


    Protected Sub OnRowDataBoundgNotes(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgNotes(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        For Each row As GridViewRow In gvNotesMaster.Rows
            'If row.RowIndex = gvNotesMaster.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = gvNotesMaster.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub


    Protected Sub OnRowDataBoundgTeam(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvTeam, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgTeam(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvTeam.Rows
            If row.RowIndex = gvTeam.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgClient(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        For Each row As GridViewRow In gvClient.Rows
            If row.RowIndex = gvClient.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgLoc(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocation, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgLoc(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        For Each row As GridViewRow In gvLocation.Rows
            If row.RowIndex = gvLocation.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub


    'Start: Multiple PO

    Private Sub DisablePONOControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddRateSchedule.Enabled = False
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnablePONOControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddRateSchedule.Enabled = True
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakePONONull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub
    'End: Multiple PO



    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        Try
            '  File.Delete(txtDeleteUploadedFile.Text)
            '  Response.Redirect(Request.Url.AbsoluteUri)
            '   Dim deletefilepath = Server.MapPath("~/Uploads/Contract/DeletedFiles/") + txtFileLink.Text

            Dim deletefilepath1 As String = Server.MapPath("~/Uploads/Contract/DeletedFiles/") + txtFileLink.Text
            Dim deletefilepath As String = Server.MapPath("~/Uploads/Contract/DeletedFiles/") + Path.GetFileNameWithoutExtension(deletefilepath1) + "_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh") + Path.GetExtension(deletefilepath1)

            File.Move(txtDeleteUploadedFile.Text, deletefilepath)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblfileupload where filenamelink='" + txtFileLink.Text + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblfileupload where filenamelink='" + txtFileLink.Text + "'"

                command.CommandText = qry
                command.Connection = conn
                command.ExecuteNonQuery()

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtFileLink.Text, "DELETE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")), 0, 0, 0, "", "", txtContractNo.Text)
            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            lblMessage.Text = "FILE DELETED"

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
            'File.Delete(txtDeleteUploadedFile.Text)
            ''  Response.Redirect(Request.Url.AbsoluteUri)
            'lblMessage.Text = "FILE DELETED"
            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract/"))
            ''  Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountId.Text + "_")) + "*.*")
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnConfirmDelete_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)

        If GridSelected = "SQLDSContract" Then
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SQLDSContract"
        ElseIf GridSelected = "SQLDSContractClientId" Then
            SQLDSContractClientId.SelectCommand = txt.Text
            SQLDSContractClientId.DataBind()
            GridView1.DataSourceID = "SQLDSContractClientId"
        ElseIf GridSelected = "SQLDSContractNo" Then
            ''SqlDataSource1.SelectCommand = txt.Text
            SqlDSContractNo.DataBind()
            GridView1.DataSourceID = "SQLDSContractNo"
        Else
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SQLDSContract"
        End If

        GridView1.DataBind()
    End Sub

    Protected Sub btnClient0_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient0.Click
        lblAlertSchDate.Text = ""
        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text
        txtEffectiveDateEditPONO.Text = ""

        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub btnSchSave_Click(sender As Object, e As EventArgs)

    End Sub

    Protected Sub btnPONoEditSave_Click(sender As Object, e As EventArgs) Handles btnPONoEditSave.Click

        lblAlertSchDate.Text = ""

        Label33.Text = txtEffectiveDateEditPONO.Text
        If txtOurRef.Text = txtOurReferenceEdit.Text And txtYourRef.Text = txtYourReferenceEdit.Text And txtPONo.Text = txtPONoEdit.Text Then
            lblAlertSchDate.Text = "NO CHANGES MADE"
            mdlPopupPONoEdit.Show()
            Return

        End If

        If String.IsNullOrEmpty(txtEffectiveDateEditPONO.Text) = True Then
            lblAlertSchDate.Text = "PLEASE ENTER EFFECTIVE DATE"
            mdlPopupPONoEdit.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try
            mdlEditPONOSave.Show()
            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text
            'command.CommandText = "UPDATE tblContract SET OurReference = @OurRef, YourReference = @YourRef, PONO=@PONO,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where rcno=" & Convert.ToInt32(txtRcno.Text)
            'command.Parameters.Clear()

            'command.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            'command.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            'command.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            ''command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))


            'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            'command.Connection = conn

            'command.ExecuteNonQuery()
            'command.Dispose()

            ' '''''''''''''''''''''''''''''''''''
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text
            'command1.CommandText = "UPDATE tblServiceRecord SET PONO=@PONO, YourRef=@YourReference, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where ContractNo ='" & txtContractNo.Text & "' and Status ='O'"
            'command1.Parameters.Clear()

            ''command1.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            ''command1.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            'command1.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            'command1.Parameters.AddWithValue("@YourReference", txtYourReferenceEdit.Text)

            'command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            ''command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            'command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            'command1.Connection = conn

            'command1.ExecuteNonQuery()

            'command1.Dispose()


            ' '''''''''''''''''''''''''''''''
            'conn.Close()
            'conn.Dispose()
            ''command.Dispose()


            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITPONO", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "MANUAL CONTRACT NO :" + txtYourRef.Text + " - " + txtYourReferenceEdit.Text.ToUpper + "; OTHER REF : " + txtOurRef.Text + " - " + txtOurReferenceEdit.Text.ToUpper + "; PO NO : " + txtPONo.Text + " - " + txtPONoEdit.Text.ToUpper, txtRcno.Text)


            'txtOurRef.Text = txtOurReferenceEdit.Text
            'txtYourRef.Text = txtYourReferenceEdit.Text
            'txtPONo.Text = txtPONoEdit.Text


            'SQLDSContract.SelectCommand = txt.Text
            'SQLDSContract.DataBind()
            'GridView1.DataBind()


            ''InsertNewLog()

            ''GridView1.DataSourceID = "SqlDataSource1"
            'mdlPopupPONoEdit.Hide()
        Catch ex As Exception
            lblAlertSchDate.Text = ex.Message.ToString
            mdlPopupPONoEdit.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPONoEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient1_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient1.Click
        lblAlertSchDate.Text = ""
        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text
        txtEffectiveDateEditPONO.Text = ""
        txtContractNoPONo.Text = ""
        txtContractNoPONo.Text = txtContractNo.Text
        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub btnClient2_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient2.Click
        lblAlertSchDate.Text = ""
        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text
        txtEffectiveDateEditPONO.Text = ""
        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub txtAccountId_TextChanged(sender As Object, e As EventArgs) Handles txtAccountId.TextChanged
        If Len(txtAccountId.Text) > 2 Then
            btnClient_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub txtAccountIdSearch_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdSearch.TextChanged
        If Len(txtAccountIdSearch.Text) > 2 Then
            btnQuickSearch_Click(sender, e)
            'ImageButton2_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub btnZeroValueYes_Click(sender As Object, e As EventArgs) Handles btnZeroValueYes.Click
        SaveContract()
    End Sub


    Private Sub InsertCommissionNotes()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            '''''''''''''''''''''''
            Dim commandContract As MySqlCommand = New MySqlCommand

            commandContract.CommandType = CommandType.Text

            commandContract.CommandText = "SELECT SalesCommissionPerc,SalesCommissionAmt,TechCommissionPerc, TechCommissionAmt  FROM tblCONTRACT where rcno=" & Convert.ToInt32(txtRcnoRenew.Text.Trim)
            commandContract.Connection = conn

            Dim dr As MySqlDataReader = commandContract.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim commandUpdContract As MySqlCommand = New MySqlCommand

                commandUpdContract.CommandType = CommandType.Text
                Dim qry As String = "UPDATE tblcontract SET SalesCommissionPerc = @SalesCommissionPerc,SalesCommissionAmt = @SalesCommissionAmt,TechCommissionPerc = @TechCommissionPerc,TechCommissionAmt = @TechCommissionAmt WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

                commandUpdContract.CommandText = qry
                commandUpdContract.Parameters.Clear()

                commandUpdContract.Parameters.AddWithValue("@SalesCommissionPerc", dt.Rows(0)("SalesCommissionPerc").ToString)
                commandUpdContract.Parameters.AddWithValue("@SalesCommissionAmt", dt.Rows(0)("SalesCommissionAmt").ToString)
                commandUpdContract.Parameters.AddWithValue("@TechCommissionPerc", dt.Rows(0)("TechCommissionPerc").ToString)
                commandUpdContract.Parameters.AddWithValue("@TechCommissionAmt", dt.Rows(0)("TechCommissionAmt").ToString)

                commandUpdContract.Connection = conn

                commandUpdContract.ExecuteNonQuery()
                commandUpdContract.Dispose()
            End If


            conn.Close()
            conn.Dispose()
            commandContract.Dispose()
            dt.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION InsertCommissionNotes", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Public Sub InsertIntoTblWebEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblContractWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception
            Exit Sub
        End Try
    End Sub

    Private Sub FindLocations()
        Try
            Dim lContractGroup As String
            lContractGroup = ""
            Dim sqlstr1 As String
            sqlstr1 = ""

            lContractGroup = Left(ddlContractGrp.Text, 2)
            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and InActiveD = False and ContractGroup like '" & lContractGroup & "%'"
                SqlDSCompanyLocation.SelectCommand = sqlstr1
                gvLocation.DataSourceID = "SqlDSCompanyLocation"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and InActiveD = False and ContractGroup  like '" & lContractGroup & "%'"
                SqlDSPersonLocation.SelectCommand = sqlstr1
                gvLocation.DataSourceID = "SqlDSPersonLocation"
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocations", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub btnClient3_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient3.Click
        mdlPopupNotes.Show()
    End Sub

    Protected Sub btnNoteEditSave_Click(sender As Object, e As EventArgs) Handles btnNoteEditSave.Click
        If txtNotes.Text = txtNotesEdit.Text Then
            lblAlertNote.Text = "NO CHANGES MADE"
            mdlPopupNotes.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-BEFORE UPDATE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, txtContractNotes.Text, txtRcno.Text)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Notes = @Notes, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Notes", txtNotesEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtContractNotes.Text = txtNotesEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-AFTER UPDATE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, txtNotesEdit.Text, txtRcno.Text)

            'InsertNewLog()

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupNotes.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnNoteEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnZeroValueNo_Click(sender As Object, e As EventArgs) Handles btnZeroValueNo.Click
        btnSave.Enabled = True
        btnSave.ForeColor = System.Drawing.Color.Black
        mdlPopupZeroValue.Hide()
        txtAgreeVal.Focus()
    End Sub

    Protected Sub txtContractnoSearch_TextChanged(sender As Object, e As EventArgs) Handles txtContractnoSearch.TextChanged
        If Len(txtContractnoSearch.Text) > 3 Then
            btnQuickSearch_Click(sender, e)
        End If
    End Sub

    Protected Sub btnSvcSaveSchedule_Click(sender As Object, e As EventArgs) Handles btnSvcSaveSchedule.Click
        'btnSvcSave_Click(sender, e)

        'If txtTeamIDMandatory.Text = "1" Then
        '    If String.IsNullOrEmpty(txtTeam.Text) = True Then
        '        lblAlert.Text = "Team ID Is Mandatory"
        '        btnSvcSave.Enabled = True
        '        'btnADD.ForeColor = System.Drawing.Color.Black
        '        Exit Sub
        '    End If
        'End If

        'If txtServiceByMandatory.Text = "1" Then
        '    If String.IsNullOrEmpty(txtServiceBy.Text) = True Then
        '        lblAlert.Text = "Service BY is Mandatory"
        '        btnSvcSave.Enabled = True
        '        'btnADD.ForeColor = System.Drawing.Color.Black
        '        Exit Sub
        '    End If
        'End If

        Try
            Dim t As DateTime
            Dim d As Double

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveSchedule_Click", "Start - " & txtAccountId.Text, txtContractNo.Text)

            If txtDuplicateFreq.Text = "Y" Then
                lblAlert.Text = "DUPLICATE FREQUENCY HAS BEEN SELECTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSvcSave.Enabled = True
                Exit Sub
            End If

            If txtDuplicateTarget.Text = "Y" Then
                lblAlert.Text = "DUPLICATE TARGET HAS BEEN SELECTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSvcSave.Enabled = True
                Exit Sub
            End If


            'If grvTargetDetails.Rows.Count = 1 Then
            '    lblAlert.Text = "PLEASE ENTER TARGET DETAILS"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    btnSvcSave.Enabled = True
            '    Exit Sub
            'End If

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                ConvertUpperService()
            End If


            If String.IsNullOrEmpty(txtServTimeIn.Text) = False And txtServTimeIn.Text.Trim <> "__:__" Then
                If (DateTime.TryParse(txtServTimeIn.Text, t) = True) Then
                Else
                    '   MessageBox.Message.Alert(Page, "Actual Service - Time In is invalid", "str")
                    lblAlert.Text = "PREFERRED TIME-IN IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    'Return False
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtServTimeOut.Text) = False And txtServTimeOut.Text.Trim <> "__:__" Then
                If (DateTime.TryParse(txtServTimeOut.Text, t) = True) Then
                Else
                    'MessageBox.Message.Alert(Page, "Actual Service - Time Out is invalid", "str")
                    lblAlert.Text = "PREFERRED TIME-OUT IS INVALID"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    'Return False
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtServTimeIn.Text) = False Then
                If txtServTimeIn.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtServTimeIn.Text, t) = True) Then
                    Else
                        '   MessageBox.Message.Alert(Page, "Schedule Time In is invalid", "str")
                        lblAlert.Text = "PREFERRED TIME-IN IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSvcSave.Enabled = True
                        btnADD.ForeColor = System.Drawing.Color.Black
                        'Return False
                        Exit Sub
                    End If
                End If


            End If
            If String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
                If txtServTimeOut.Text = "__:__" Then

                Else
                    If (DateTime.TryParse(txtServTimeOut.Text, t) = True) Then
                    Else
                        ' MessageBox.Message.Alert(Page, "Schedule Time Out is invalid", "str")
                        lblAlert.Text = "PREFERRED TIME-OUT IS INVALID"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSvcSave.Enabled = True
                        btnADD.ForeColor = System.Drawing.Color.Black
                        'Return False
                        Exit Sub
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtAllocTime.Text) = False Then
                If Double.TryParse(txtAllocTime.Text, d) = False Then
                    '   MessageBox.Message.Alert(Page, "Allocated time is invalid!!! Enter time in mins!!", "str")
                    lblAlert.Text = "ALLOCATED TIME IS INVALID, ENTER TIME IN MINUTES"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSvcSave.Enabled = True
                    btnADD.ForeColor = System.Drawing.Color.Black
                    'Return False
                    Exit Sub
                End If
            End If

            LabelServiceID.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            Label17Schdl.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            If txtServiceId.Text <> ddlContractGrp.Text Then
                'mdlPopupServiceID.Show()
                mdlPopupServiceIDSchdl.Show()
            Else
                svcSave()
                If txtErrorMsg.Text = "Y" Then
                    txtErrorMsg.Text = "N"
                    Exit Sub
                End If
                btnServiceSchedule_Click(sender, e)
            End If

            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveSchedule_Click", "End - " & txtAccountId.Text, txtContractNo.Text)

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveSchedule_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Public Sub FindLocation()
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT LocationID, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtLocation.Text = dt.Rows(0)("LocationID").ToString
            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocation", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Public Sub FindLastServiceDate()
        Try

            Dim connLastServiceDate As MySqlConnection = New MySqlConnection()

            connLastServiceDate.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLastServiceDate.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Servicedate FROM tblServiceRecord where Status in ('O','H','P') and ContractNo ='" & txtContractNo.Text & "' order by Servicedate desc limit 1"
            command1.Connection = connLastServiceDate

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).Value.ToString("dd/MM/yyyy") 
            If dt.Rows.Count > 0 Then
                txtLastServiceDate.Text = Convert.ToDateTime(dt.Rows(0)("Servicedate")).ToString("dd/MM/yyyy")
            End If
            'Convert.ToDateTime(command1.Parameters("@pr_ContractDate").Value).ToString("dd/MM/yyyy") : End If
            connLastServiceDate.Close()
            connLastServiceDate.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()


            ''''''''
            Dim connLastBillamount As MySqlConnection = New MySqlConnection()

            connLastBillamount.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLastBillamount.Open()

            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text
            command2.CommandText = "SELECT sum(b.ValueBase) as LastBillamount FROM tblSales a, tblSalesDetail b where a.InvoiceNumber =b.InvoiceNumber and a.PostStatus ='P' and b.CostCode ='" & txtContractNo.Text & "' group by b.Invoicenumber order by a.Invoicenumber desc limit 1"
            command2.Connection = connLastBillamount

            Dim drLastBillamount As MySqlDataReader = command2.ExecuteReader()
            Dim dtLastBillamount As New DataTable
            dtLastBillamount.Load(drLastBillamount)

            If dtLastBillamount.Rows.Count > 0 Then
                txtLastBillAmount.Text = dtLastBillamount.Rows(0)("LastBillamount").ToString()
            End If

            connLastBillamount.Close()
            connLastBillamount.Dispose()
            command2.Dispose()
            dtLastBillamount.Dispose()
            drLastBillamount.Close()


            ''''
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocation", ex.Message.ToString, txtContractNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'Exit Function
        End Try
    End Sub
    Protected Sub btnRecalculate_Click(sender As Object, e As EventArgs) Handles btnRecalculate.Click
        Try
            'CType(Me.Master, MasterPage).UpdateContract(txtContractNo.Text)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandUpdateContractServiceInfo As MySqlCommand = New MySqlCommand

            commandUpdateContractServiceInfo.CommandType = CommandType.StoredProcedure
            commandUpdateContractServiceInfo.CommandText = "UpdateContractServiceInfo"
            commandUpdateContractServiceInfo.Parameters.Clear()
            commandUpdateContractServiceInfo.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
            commandUpdateContractServiceInfo.Connection = conn
            commandUpdateContractServiceInfo.ExecuteScalar()
            conn.Close()
            commandUpdateContractServiceInfo.Dispose()

            PopulateRecord()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRecalculate_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient4_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient4.Click
        mdlPopupBillingFrequency.Show()
    End Sub

    Protected Sub btnBillingFrequencyEditSave_Click(sender As Object, e As EventArgs) Handles btnBillingFrequencyEditSave.Click
        If ddlBillingFreq.Text = ddlBillingFreqEdit.Text Then
            lblAlertBillingFrequency.Text = "NO CHANGES MADE"
            mdlPopupBillingFrequency.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET BillingFrequency = @billingfreq, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@billingfreq", ddlBillingFreqEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlBillingFreq.Text = ddlBillingFreqEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGFREQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            'InsertNewLog()
            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupBillingFrequency.Hide()
            'mdlPopupNotes.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnBillingFrequencyEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient5_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient5.Click
        mdlPopupScheduler.Show()
    End Sub

    Protected Sub Button1_Click(sender As Object, e As EventArgs)

    End Sub

    Protected Sub btnSchedulerEditSave_Click(sender As Object, e As EventArgs) Handles btnSchedulerEditSave.Click
        If ddlScheduler.Text = ddlSchedulerEdit.Text Then
            lblAlertScheduler.Text = "NO CHANGES MADE"
            mdlPopupScheduler.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Scheduler = @Scheduler, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Scheduler", ddlSchedulerEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET Scheduler = @Scheduler, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and ((Status = 'O') or (Status = 'H'))"
            command1.Parameters.Clear()

            command1.Parameters.AddWithValue("@Scheduler", ddlSchedulerEdit.Text)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlScheduler.Text = ddlSchedulerEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITSCHEDULER", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'InsertNewLog()
            mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub txtClientNameSearch_TextChanged(sender As Object, e As EventArgs) Handles txtClientNameSearch.TextChanged
        If Len(txtClientNameSearch.Text) > 4 Then
            btnQuickSearch_Click(sender, e)
        End If
    End Sub

    Protected Sub btnClient6_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient6.Click
        mdlPopupSalesman.Show()
    End Sub

    Protected Sub btnSalesmanEditSave_Click(sender As Object, e As EventArgs) Handles btnSalesmanEditSave.Click
        If ddlSalesman.Text = ddlSalesmanEdit.Text Then
            lblAlertSalesman.Text = "NO CHANGES MADE"
            mdlPopupSalesman.Show()
            Return
        End If


        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Salesman = @Salesman, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Salesman", ddlSalesmanEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()


            'Start: Update Service Records

            Dim commandUpdateSvcRecords As MySqlCommand = New MySqlCommand

            commandUpdateSvcRecords.CommandType = CommandType.Text
            commandUpdateSvcRecords.CommandText = "UPDATE tblServiceRecord SET Salesman = @Salesman, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = @ContractNo and Status = 'O'"
            commandUpdateSvcRecords.Parameters.Clear()

            commandUpdateSvcRecords.Parameters.AddWithValue("@Salesman", ddlSalesmanEdit.Text)
            commandUpdateSvcRecords.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
            commandUpdateSvcRecords.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            commandUpdateSvcRecords.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            commandUpdateSvcRecords.Connection = conn

            commandUpdateSvcRecords.ExecuteNonQuery()

            'End: Update Service Records

            conn.Close()
            conn.Dispose()
            command.Dispose()
            commandUpdateSvcRecords.Dispose()
            ddlSalesman.Text = ddlSalesmanEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITSALESMAN", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, ddlSalesman.Text + " - " + ddlSalesmanEdit.Text.ToUpper, txtRcno.Text)
            'InsertNewLog()
            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupSalesman.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSalesmanEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCompanyGroupEditSave_Click(sender As Object, e As EventArgs) Handles btnCompanyGroupEditSave.Click
        If ddlCompanyGrp.Text = ddlCompanyGroupEdit.Text Then
            lblAlertScheduler.Text = "NO CHANGES MADE"
            mdlPopupScheduler.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET CompanyGroup = @CompanyGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGroupEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET CompanyGroup = @CompanyGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and ((Status = 'O') or (Status = 'H'))"
            command1.Parameters.Clear()

            command1.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGroupEdit.Text)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlCompanyGrp.Text = ddlCompanyGroupEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITCOMPANYGROUP", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'InsertNewLog()
            mdlPopupCompanyGroup.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnCompanyGroupEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnClient7_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient7.Click
        mdlPopupCompanyGroup.Show()
    End Sub

    Protected Sub txtContractNotes_TextChanged(sender As Object, e As EventArgs) Handles txtContractNotes.TextChanged

    End Sub

    Protected Sub btnClient8_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient8.Click
        lblAlertEditAgreeValue.Text = ""

        txtAgreeValueEdit.Enabled = False
        txtPercentageChangeAgreeValueEdit.Enabled = False
        txtEffectiveDate.Text = ""
        txtAgreeValueEdit.Text = ""
        txtCommentsAgreeValue.Text = ""

        'txtContractStartDateEditAgreeValue.Text = ""
        'txtContractEndDateEditAgreeValue.Text = ""
        'txtContractActualEndDateEditAgreeValue.Text = ""

        txtContractStartDateEditAgreeValue.Text = txtContractStart.Text
        txtContractEndDateEditAgreeValue.Text = txtContractEnd.Text
        txtContractActualEndDateEditAgreeValue.Text = txtActualEnd.Text

        txtContractGrpEditAgreeValue.Text = ddlContractGrp.Text

        txtEditAgreeValuePercChange.Text = 0
        txtAgreeValueToUpdate.Text = 0
        rdbFixedValueChange.Checked = False
        rdbPercentageChange.Checked = False
        txtPercentageChangeAgreeValueEdit.Text = ""
        lblTotalRecords.Text = ""
        txtNewValue.Text = ""
        txtCurrentAgreeValue.Text = txtAgreeVal.Text
        txtContractNoEditAgreeValue.Text = txtContractNo.Text
        txtAccountIDEditAgreeValue.Text = txtAccountId.Text
        txtCustomerNameEditAgreeValue.Text = txtCustName.Text

        FindPriceIncreaseDecreaseLimit()

        Dim sqlstr As String

        sqlstr = ""
        SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

        grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
        grvServiceRecAgreeValueEdit.DataBind()


        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim commandMaxDateHistory As MySqlCommand = New MySqlCommand

        commandMaxDateHistory.CommandType = CommandType.Text
        commandMaxDateHistory.CommandText = "SELECT Date FROM tblcontractpricehistory where rcno = (Select  max(rcno) from tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = false) and  ContractNo= '" & txtContractNo.Text & "' and Void = false"
        commandMaxDateHistory.Connection = conn

        Dim drMaxDateHistory As MySqlDataReader = commandMaxDateHistory.ExecuteReader()
        Dim dtMaxDateHistory As New DataTable
        dtMaxDateHistory.Load(drMaxDateHistory)

        If dtMaxDateHistory.Rows.Count > 0 Then
            txtLastPriceChangeDate.Text = Convert.ToDateTime(dtMaxDateHistory.Rows(0)("Date")).ToString("dd/MM/yyyy")
        End If

        conn.Close()
        conn.Dispose()
        commandMaxDateHistory.Dispose()
        dtMaxDateHistory.Dispose()
        drMaxDateHistory.Dispose()

        mdlPopupAgreeValue.Show()
    End Sub

    Protected Sub btnAgreeValueSave_Click(sender As Object, e As EventArgs) Handles btnAgreeValueSave.Click
        Try
            lblAlertEditAgreeValue.Text = ""

            If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = True Then
                lblAlertEditAgreeValue.Text = "Effective Date cannot be Blank"
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = False Then
                    If Convert.ToDateTime(txtEffectiveDate.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                        ''txtAlertStatus.Visible = True
                        lblAlertEditAgreeValue.Text = "Effective Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                        mdlPopupAgreeValue.Show()
                        Exit Sub
                    End If
                End If
            End If

            If rdbFixedValueChange.Checked = False And rdbPercentageChange.Checked = False Then
                lblAlertEditAgreeValue.Text = "Please Select either 'Fixed Value' or Percentage Change'"
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If


            If rdbFixedValueChange.Checked = True Then
                If String.IsNullOrEmpty(txtAgreeValueEdit.Text.Trim) = True Then
                    lblAlertEditAgreeValue.Text = "Agree Value cannot be Blank or Zero"
                    txtAgreeValueEdit.Text = txtAgreeVal.Text
                    txtAgreeValueEdit.Focus()
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If rdbFixedValueChange.Checked = True Then
                If Convert.ToDecimal(txtAgreeValueEdit.Text.Trim) = 0.0 Then
                    lblAlertEditAgreeValue.Text = "Agree Value cannot be Blank or Zero"
                    txtAgreeValueEdit.Text = txtAgreeVal.Text
                    txtAgreeValueEdit.Focus()
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If rdbPercentageChange.Checked = True Then
                If String.IsNullOrEmpty(txtPercentageChangeAgreeValueEdit.Text.Trim) = True Then
                    lblAlertEditAgreeValue.Text = "Percentage Change cannot be Blank or Zero"
                    'txtAgreeValueEdit.Text = txtAgreeVal.Text
                    txtPercentageChangeAgreeValueEdit.Focus()
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If rdbPercentageChange.Checked = True Then
                If Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text.Trim) = 0.0 Then
                    lblAlertEditAgreeValue.Text = "Percentage Change cannot be Blank or Zero"
                    'txtAgreeValueEdit.Text = txtAgreeVal.Text
                    txtPercentageChangeAgreeValueEdit.Focus()
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(txtCommentsAgreeValue.Text.Trim) = True Then
                lblAlertEditAgreeValue.Text = "Reason for Price Change cannot be Blank"
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If Len(txtCommentsAgreeValue.Text.Trim) < 20 Then
                lblAlertEditAgreeValue.Text = "Minimum Characters for 'Reason for Price Change' should be 20"
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If


            'If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = False Then
            '    If Convert.ToDateTime(txtEffectiveDate.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
            '        ''txtAlertStatus.Visible = True
            '        lblAlertEditAgreeValue.Text = "Effective Date cannot be earlier than Contract Start Date " & txtContractStart.Text
            '        mdlPopupAgreeValue.Show()
            '        Exit Sub
            '    End If
            'End If

            'If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
            '    If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = False Then
            '        If Convert.ToDateTime(txtEffectiveDate.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
            '            ''txtAlertStatus.Visible = True
            '            lblAlertEditAgreeValue.Text = "Effective Date cannot be earlier than Last Price Change Date " & txtLastPriceChangeDate.Text
            '            mdlPopupAgreeValue.Show()
            '            Exit Sub
            '        End If
            '    End If
            'End If

            'If rbtFixedContinuous.SelectedIndex = 0 Then
            '    If Convert.ToDateTime(txtEffectiveDate.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
            '        'txtAlertStatus.Visible = True
            '        lblAlertEditAgreeValue.Text = "Effective Date cannot be later than Contract End Date " & txtContractEnd.Text
            '        mdlPopupAgreeValue.Show()
            '        Exit Sub
            '    End If
            'Else
            '    If Convert.ToDateTime(txtEffectiveDate.Text.Trim) > Convert.ToDateTime(txtEndofLastSchedule.Text.Trim) Then
            '        'txtAlertStatus.Visible = True
            '        lblAlertEditAgreeValue.Text = "Effective Date cannot be later than Contract End Date " & txtEndofLastSchedule.Text
            '        mdlPopupAgreeValue.Show()
            '        Exit Sub
            '    End If
            'End If


            '''''
            ' '''''''''Price History

            ' Dim conn As MySqlConnection = New MySqlConnection()

            ' conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            ' conn.Open()

            ' Dim lEffectiveDate As String

            ' lEffectiveDate = Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd")
            ' Dim commandHistory As MySqlCommand = New MySqlCommand

            ' commandHistory.CommandType = CommandType.Text
            ' commandHistory.CommandText = "SELECT count(Date) as HistoryCount FROM tblcontractpricehistory where Date ='" & lEffectiveDate.Trim & "' and ContractNo= '" & txtContractNo.Text & "'"
            ' commandHistory.Connection = conn

            ' Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            ' Dim dtHistory As New DataTable
            ' dtHistory.Load(drHistory)

            'If Val(dtHistory.Rows(0)("HistoryCount").ToString) > 0 Then
            '     lblAlertEditAgreeValue.Text = "Price change record already exists for " & txtEffectiveDate.Text & ", you can only choose any date after this."
            '     mdlPopupAgreeValue.Show()
            '     Exit Sub
            ' End If

            ' commandHistory.Dispose()
            ' dtHistory.Dispose()
            ' drHistory.Dispose()

            ''''''''''
            lblLine3EditAgreeValueSave.Text = txtEffectiveDate.Text & " ?"
            If txtAgreeVal.Text = txtAgreeValueEdit.Text Then
                mdlPopupAgreeValue.Hide()
                mdlEditAgreeValueSaveNoChange.Show()
                'mdlPopupAgreeValue.Show()
            Else
                'UpdateAgreeValue("Update")
                mdlEditAgreeValueSave.Show()
            End If


            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            ''command.CommandType = CommandType.Text
            ''command.CommandText = "UPDATE tblContract SET AgreeValue = @AgreeValue, ServiceAmt = @ServiceAmt, AmtBalance=@AmtBalance, PortFolioValue=@PortFolioValue,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno= @Rcno"

            'command.CommandType = CommandType.StoredProcedure
            'command.CommandText = "UpdateAgreeValue"

            'command.Parameters.Clear()

            'command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            'command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            'command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            'command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueEdit.Text)
            'command.Parameters.AddWithValue("@pr_ValuePerMonth", txtValPerMnth.Text)

            'command.Parameters.AddWithValue("@pr_ServiceAmt", txtServiceAmt.Text)
            'command.Parameters.AddWithValue("@pr_AmtBalance", txtServiceAmtBal.Text)
            'command.Parameters.AddWithValue("@pr_PortFolioValue", txtPortfolioValueEdit.Text)
            'command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            'command.Connection = conn
            'command.ExecuteScalar()

            ' ''''''''''''''''''''''
            'conn.Close()
            'conn.Dispose()
            'command.Dispose()

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

            'txtAgreeVal.Text = txtAgreeValueEdit.Text
            'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
            'txtServiceAmt.Text = txtAgreeValueEdit.Text
            'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

            'SQLDSContract.SelectCommand = txt.Text
            'SQLDSContract.DataBind()
            'GridView1.DataBind()

            'mdlPopupAgreeValue.Hide()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnAgreeValueSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Private Sub UpdateAgreeValue(lUpdateType As String)
        Try

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", lUpdateType & " Start - " & txtAccountId.Text, txtContractNo.Text)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            'Dim cmdServiceDescription As MySqlCommand = New MySqlCommand

            'cmdServiceDescription.CommandType = CommandType.Text
            'cmdServiceDescription.CommandText = "select ServiceDescription from tblContract where ContractNo = '" & txtContractNo.Text & "'"
            'cmdServiceDescription.Connection = conn

            'Dim drServiceDescription As MySqlDataReader = cmdServiceDescription.ExecuteReader()
            'Dim dtServiceDescription As New DataTable
            'dtServiceDescription.Load(drServiceDescription)

            'txtServiceDescriptionCons.Text = dtServiceDescription.Rows(0)("ServiceDescription")

            Dim cmdServiceDescription As MySqlCommand = New MySqlCommand

            cmdServiceDescription.CommandType = CommandType.Text
            cmdServiceDescription.CommandText = "select ServiceDescription from tblContract where ContractNo = '" & txtContractNo.Text & "'"
            cmdServiceDescription.Connection = conn

            Dim drServiceDescription As MySqlDataReader = cmdServiceDescription.ExecuteReader()
            Dim dtServiceDescription As New DataTable
            dtServiceDescription.Load(drServiceDescription)

            If Not IsDBNull(dtServiceDescription.Rows(0)("ServiceDescription")) Then
                If String.IsNullOrEmpty(dtServiceDescription.Rows(0)("ServiceDescription")) = False Then
                    txtServiceDescriptionCons.Text = dtServiceDescription.Rows(0)("ServiceDescription")
                Else
                    txtServiceDescriptionCons.Text = ""
                End If
            Else
                txtServiceDescriptionCons.Text = ""
            End If

            If lUpdateType = "ReNew" Then

                Dim cmdServiceDescriptionRenew As MySqlCommand = New MySqlCommand

                cmdServiceDescriptionRenew.CommandType = CommandType.Text
                cmdServiceDescriptionRenew.CommandText = "select ServiceDescription from tblContract where ContractNo = '" & txtOContract.Text & "'"
                cmdServiceDescriptionRenew.Connection = conn

                Dim drServiceDescriptionRenew As MySqlDataReader = cmdServiceDescriptionRenew.ExecuteReader()
                Dim dtServiceDescriptionRenew As New DataTable
                dtServiceDescriptionRenew.Load(drServiceDescriptionRenew)

                If Not IsDBNull(dtServiceDescriptionRenew.Rows(0)("ServiceDescription")) Then
                    If String.IsNullOrEmpty(dtServiceDescriptionRenew.Rows(0)("ServiceDescription")) = False Then
                        txtServiceDescriptionCons.Text = dtServiceDescriptionRenew.Rows(0)("ServiceDescription")
                    Else
                        txtServiceDescriptionCons.Text = ""
                    End If
                Else
                    txtServiceDescriptionCons.Text = ""
                End If
            End If

            '12.09.22

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue1", "1", txtContractNo.Text)
            '''

            Dim commandUpdateServiceRecord As MySqlCommand = New MySqlCommand
            For rowIndex As Integer = 0 To grvServiceRecAgreeValueEdit.Rows.Count - 1

                Dim lblid13 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                Dim lblid14 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtNewBillAmtGV"), TextBox)
                Dim lblid27 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)

                'If String.IsNullOrEmpty(lblid13.Text) = True Then
                '    lblid13.Text = 0.0
                'End If

                'If String.IsNullOrEmpty(lblid14.Text) = True Then
                '    lblid14.Text = 0.0
                'End If

                commandUpdateServiceRecord.CommandType = CommandType.Text
                commandUpdateServiceRecord.CommandText = "UPDATE tblServiceRecord SET BillAmount = @ToBillAmt, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(lblid27.Text)
                commandUpdateServiceRecord.Parameters.Clear()

                commandUpdateServiceRecord.Parameters.AddWithValue("@ToBillAmt", Convert.ToDecimal(lblid14.Text))
                commandUpdateServiceRecord.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'commandUpdateServiceRecord.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                commandUpdateServiceRecord.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                commandUpdateServiceRecord.Connection = conn

                commandUpdateServiceRecord.ExecuteNonQuery()
            Next rowIndex

            commandUpdateServiceRecord.Dispose()

            '''

            ''
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue2", "2", txtContractNo.Text)


            FindLastRcnoContractpricehistory()
            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.StoredProcedure
            'command.CommandText = "UpdateAgreeValueNew2"
            command.CommandText = "UpdateAgreeValueNew3"
            command.Parameters.Clear()

            If lUpdateType = "Update" Then
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-1", txtContractNo.Text)

                If rbtLstDuration.SelectedIndex = 3 Then
                    txtNoofMonth.Text = txtDuration.Text * 12
                ElseIf rbtLstDuration.SelectedIndex = 2 Then
                    txtNoofMonth.Text = txtDuration.Text
                Else
                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        txtNoofMonth.Text = (Year(txtContractEnd.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtContractEnd.Text) - Month(txtContractStart.Text))
                    Else
                        'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-6", txtContractNo.Text)
                        txtNoofMonth.Text = (Year(txtEndofLastSchedule.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtEndofLastSchedule.Text) - Month(txtContractStart.Text))
                    End If
                End If

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue3", "3", txtContractNo.Text)

                If rdbFixedValueChange.Checked = True Then
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-7", txtContractNo.Text)
                    txtAgreeValueToUpdate.Text = txtAgreeValueEdit.Text
                Else
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-8", txtContractNo.Text)
                    txtAgreeValueToUpdate.Text = txtAgreeVal.Text + (txtAgreeVal.Text * txtPercentageChangeAgreeValueEdit.Text * 0.01)
                End If

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue31", "31", txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-9", txtContractNo.Text)
                txtServiceAmt.Text = txtAgreeValueToUpdate.Text
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue32", "31", txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-10", txtContractNo.Text)

                If String.IsNullOrEmpty(txtServiceAmtBal.Text) = True Then
                    txtServiceAmtActual.Text = 0.0
                End If
                If String.IsNullOrEmpty(txtAgreeValueToUpdate.Text) = True Then
                    txtServiceAmtActual.Text = 0.0
                End If

                If String.IsNullOrEmpty(txtServiceAmtActual.Text) = True Then
                    txtServiceAmtActual.Text = 0.0
                End If
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue32a", "txtServiceAmtBal.Text :" & txtServiceAmtBal.Text, txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue32a", "txtAgreeValueToUpdate.Text :" & txtAgreeValueToUpdate.Text, txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue32a", "txtServiceAmtActual.Text : " & txtServiceAmtActual.Text, txtContractNo.Text)

                txtServiceAmtBal.Text = txtAgreeValueToUpdate.Text - txtServiceAmtActual.Text

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue33", "31", txtContractNo.Text)

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue331", txtAgreeValueToUpdate.Text, txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue332", txtNoofMonth.Text, txtContractNo.Text)

                If Convert.ToDecimal(txtNoofMonth.Text) = 0 Then
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-11", txtContractNo.Text)
                    txtValPerMnth.Text = txtAgreeValueToUpdate.Text
                Else
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-12", txtContractNo.Text)
                    txtValPerMnth.Text = txtAgreeValueToUpdate.Text / txtNoofMonth.Text
                End If

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue34", "31", txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-13", txtContractNo.Text)
                txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue35", "31", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-14", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-15", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-16", txtContractNo.Text)

                If String.IsNullOrEmpty(txtAgreeValueToUpdate.Text) = True Then
                    command.Parameters.AddWithValue("@pr_AgreeValue", 0)
                Else
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-17", txtContractNo.Text)
                    command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueToUpdate.Text)
                End If

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue36", "31", txtContractNo.Text)

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-18", txtContractNo.Text)
                If String.IsNullOrEmpty(txtValPerMnth.Text) = True Then
                    command.Parameters.AddWithValue("@pr_ValuePerMonth", 0)
                Else
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-19", txtContractNo.Text)
                    command.Parameters.AddWithValue("@pr_ValuePerMonth", txtValPerMnth.Text)
                End If
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue37", "31", txtContractNo.Text)

                If String.IsNullOrEmpty(txtServiceAmt.Text) = True Then
                    command.Parameters.AddWithValue("@pr_ServiceAmt", 0)
                Else
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-20", txtContractNo.Text)
                    command.Parameters.AddWithValue("@pr_ServiceAmt", txtServiceAmt.Text)
                End If
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue38", "31", txtContractNo.Text)
                If String.IsNullOrEmpty(txtServiceAmtBal.Text) = True Then
                    command.Parameters.AddWithValue("@pr_AmtBalance", 0)
                Else
                    'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-21", txtContractNo.Text)
                    command.Parameters.AddWithValue("@pr_AmtBalance", txtServiceAmtBal.Text)
                End If
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-22", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_PortFolioValue", txtPortfolioValueEdit.Text)

                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd"))
                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-23", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_Comments", txtCommentsAgreeValue.Text)
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                command.Connection = conn
                command.ExecuteScalar()

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-24", txtContractNo.Text)
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, txtAgreeValueToUpdate.Text, 0, txtAccountId.Text, "", txtRcno.Text)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-25", txtContractNo.Text)

                txtLastPriceChangeDate.Text = txtEffectiveDate.Text

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-26", txtContractNo.Text)
                txtAgreeVal.Text = txtAgreeValueToUpdate.Text
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-27", txtContractNo.Text)
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()

                GridView1.DataSourceID = "SQLDSContract"
                GridView1.DataBind()

                'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-28", txtContractNo.Text)
                Dim sqlstr As String

                sqlstr = ""
                SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

                grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                grvServiceRecAgreeValueEdit.DataBind()

                mdlPopupAgreeValue.Hide()
            End If

            If lUpdateType = "New" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)


                'command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                'command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeVal.Text)
                'command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)
                'command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                'command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                'command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)

                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeVal.Text)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)
                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)

                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

                'txtAgreeVal.Text = txtAgreeValueEdit.Text
                'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'txtServiceAmt.Text = txtAgreeValueEdit.Text
                'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

                'SQLDSContract.SelectCommand = txt.Text
                'SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SQLDSContract"
                'GridView1.DataBind()

                'mdlPopupAgreeValue.Hide()
            End If


            'If lUpdateType = "Terminate" Then

            '    command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            '    command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            '    command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            '    command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
            '    command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

            '    command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
            '    command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
            '    command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
            '    command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            '    If txtFutureDated.Text = "Y" Then
            '        If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
            '            command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
            '        Else
            '            command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
            '        End If

            '        'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
            '    Else
            '        If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
            '            command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
            '        Else
            '            command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
            '        End If
            '        'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
            '    End If

            '    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
            '    command.Parameters.AddWithValue("@pr_Comments", "")
            '    command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
            '    'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
            '    command.Connection = conn
            '    command.ExecuteScalar()

            '    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

            '    'txtAgreeVal.Text = txtAgreeValueEdit.Text
            '    'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
            '    'txtServiceAmt.Text = txtAgreeValueEdit.Text
            '    'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

            '    'SQLDSContract.SelectCommand = txt.Text
            '    'SQLDSContract.DataBind()

            '    'GridView1.DataSourceID = "SQLDSContract"
            '    'GridView1.DataBind()

            '    'mdlPopupAgreeValue.Hide()
            'End If

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "1 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)

            If lUpdateType = "Terminate" And txtIsTerminationExists.Text <> "YV" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                If txtFutureDated.Text = "Y" Then
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                Else
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If
                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "2 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

                'txtAgreeVal.Text = txtAgreeValueEdit.Text
                'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'txtServiceAmt.Text = txtAgreeValueEdit.Text
                'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

                'SQLDSContract.SelectCommand = txt.Text
                'SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SQLDSContract"
                'GridView1.DataBind()

                'mdlPopupAgreeValue.Hide()
            End If

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "3 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            If lUpdateType = "Terminate" And txtIsTerminationExists.Text = "YV" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                If txtFutureDated.Text = "Y" Then
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                Else
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If
                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "4 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

                'txtAgreeVal.Text = txtAgreeValueEdit.Text
                'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'txtServiceAmt.Text = txtAgreeValueEdit.Text
                'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

                'SQLDSContract.SelectCommand = txt.Text
                'SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SQLDSContract"
                'GridView1.DataBind()

                'mdlPopupAgreeValue.Hide()
            End If


            If lUpdateType = "Revise" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcnoRenew.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtPrevContract.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeValueOriginalForReviseandRenewal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                'If txtFutureDated.Text = "Y" Then
                '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                'Else
                '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                'End If

                If txtFutureDated.Text = "Y" Then
                    'If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                    '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    'Else
                    '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    'End If
                    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChStForRevise.Text).ToString("yyyy-MM-dd"))
                Else
                    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChStForRevise.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChStForRevise.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", "Terminate")
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

                'txtAgreeVal.Text = txtAgreeValueEdit.Text
                'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'txtServiceAmt.Text = txtAgreeValueEdit.Text
                'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

                'SQLDSContract.SelectCommand = txt.Text
                'SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SQLDSContract"
                'GridView1.DataBind()

                'mdlPopupAgreeValue.Hide()
            End If


            If lUpdateType = "ReNew" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcnoRenew.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtOContract.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeValueOriginalForReviseandRenewal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                'If txtFutureDated.Text = "Y" Then
                '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                'Else
                '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                'End If

                If txtFutureDated.Text = "Y" Then
                    'If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                    '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    'Else
                    '    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    'End If
                    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChStForReNew.Text).ToString("yyyy-MM-dd"))
                Else
                    command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChStForReNew.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", "Terminate")
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationType.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

                'txtAgreeVal.Text = txtAgreeValueEdit.Text
                'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
                'txtServiceAmt.Text = txtAgreeValueEdit.Text
                'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

                'SQLDSContract.SelectCommand = txt.Text
                'SQLDSContract.DataBind()

                'GridView1.DataSourceID = "SQLDSContract"
                'GridView1.DataBind()

                'mdlPopupAgreeValue.Hide()
            End If
            command.Dispose()



            '''''''''Price History
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-30", txtContractNo.Text)

            If txtMode.Text = "NEW" Then
                If lUpdateType = "New" Then
                    'Dim commandHistory As MySqlCommand = New MySqlCommand

                    'commandHistory.CommandType = CommandType.Text
                    'commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
                    'commandHistory.Connection = conn

                    'Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
                    'Dim dtHistory As New DataTable
                    'dtHistory.Load(drHistory)

                    'If dtHistory.Rows.Count > 0 Then
                    '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                    '    btnHistory.Text = "HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
                    '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                    '    'btnServiceRecords.Enabled = True
                    '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
                    'End If

                    'commandHistory.Dispose()
                    'dtHistory.Dispose()
                    'drHistory.Dispose()
                    ' '''''''''''''''''''


                    '18.01.22

                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    'conn.Open()

                    '26.05.22

                    If txtModeRenew.Text = "R" Then

                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " Select '" & txtContractNo.Text.Trim & "', '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " DistributionSummary, '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistributionSummary where ContractNo ='" & txtOContract.Text & "' order by DistributionDate desc limit 1"

                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionSummary", ddlContractGrp.Text.Trim & ": 100%")
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistribution = qryContractValueDistribution + " Select '" & txtContractNo.Text.Trim & "', '" & ddlContractGrp.Text.Trim & "',  Percentage, "
                        qryContractValueDistribution = qryContractValueDistribution + " CalculatedValue, '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistribution = qryContractValueDistribution + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistribution where ContractNo ='" & txtOContract.Text & "' and DistributionDate = (Select max(DistributionDate) from tblContractValueDistribution where ContractNo ='" & txtOContract.Text & "')"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()

                        'commandContractValueDistribution.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        'commandContractValueDistribution.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.Text.Trim)
                        'commandContractValueDistribution.Parameters.AddWithValue("@Percentage", 100)
                        'commandContractValueDistribution.Parameters.AddWithValue("@CalculatedValue", txtAgreeVal.Text)
                        'commandContractValueDistribution.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        'commandContractValueDistribution.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"

                    ElseIf txtModeRenew.Text = "REV" Then
                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " Select '" & txtContractNo.Text.Trim & "', '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " DistributionSummary, '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistributionSummary where ContractNo ='" & txtPrevContract.Text & "'  order by DistributionDate desc limit 1"


                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionSummary", ddlContractGrp.Text.Trim & ": 100%")
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                        qryContractValueDistribution = qryContractValueDistribution + " Select '" & txtContractNo.Text.Trim & "', '" & ddlContractGrp.Text.Trim & "',  Percentage, "
                        qryContractValueDistribution = qryContractValueDistribution + " CalculatedValue, '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistribution = qryContractValueDistribution + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistribution where ContractNo ='" & txtPrevContract.Text & "' and DistributionDate = (Select max(DistributionDate) from tblContractValueDistribution where ContractNo ='" & txtPrevContract.Text & "')"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()

                        'commandContractValueDistribution.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        'commandContractValueDistribution.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.Text.Trim)
                        'commandContractValueDistribution.Parameters.AddWithValue("@Percentage", 100)
                        'commandContractValueDistribution.Parameters.AddWithValue("@CalculatedValue", txtAgreeVal.Text)
                        'commandContractValueDistribution.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        'commandContractValueDistribution.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"

                    Else
                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn,"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " VALUES(@ContractNo,   @DistributionDate,  @DistributionSummary, @BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionSummary", ddlContractGrp.Text.Trim & ": 100%")
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn,"
                        qryContractValueDistribution = qryContractValueDistribution + " LastModifiedBy, LastModifiedOn)"

                        qryContractValueDistribution = qryContractValueDistribution + " VALUES(@ContractNo, @ContractGroup, @Percentage, @CalculatedValue,  @DistributionDate,  @BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()

                        commandContractValueDistribution.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandContractValueDistribution.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.Text.Trim)
                        commandContractValueDistribution.Parameters.AddWithValue("@Percentage", 100)
                        commandContractValueDistribution.Parameters.AddWithValue("@CalculatedValue", txtAgreeVal.Text)
                        commandContractValueDistribution.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                        commandContractValueDistribution.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        commandContractValueDistribution.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        commandContractValueDistribution.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"
                    End If


                    '26.05.22


                    'txtRemarks.Text = txtModeRenew.Text

                    'txtRemarks.Text = txtOContract.Text
                    'txtRemarks.Text = txtPrevContract.Text

                    'Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                    'commandContractValueDistributionSummary.CommandType = CommandType.Text

                    'Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                    'qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn,"
                    'qryContractValueDistributionSummary = qryContractValueDistributionSummary + " LastModifiedBy, LastModifiedOn)"
                    'qryContractValueDistributionSummary = qryContractValueDistributionSummary + " VALUES(@ContractNo,   @DistributionDate,  @DistributionSummary, @BatchNo, "
                    'qryContractValueDistributionSummary = qryContractValueDistributionSummary + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                    'commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                    'commandContractValueDistributionSummary.Parameters.Clear()

                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))

                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionSummary", ddlContractGrp.Text.Trim & ": 100%")
                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    'commandContractValueDistributionSummary.Connection = conn
                    'commandContractValueDistributionSummary.ExecuteNonQuery()


                    'Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                    'commandContractValueDistribution.CommandType = CommandType.Text

                    'Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                    'qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn,"
                    'qryContractValueDistribution = qryContractValueDistribution + " LastModifiedBy, LastModifiedOn)"

                    'qryContractValueDistribution = qryContractValueDistribution + " VALUES(@ContractNo, @ContractGroup, @Percentage, @CalculatedValue,  @DistributionDate,  @BatchNo, "
                    'qryContractValueDistribution = qryContractValueDistribution + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                    'commandContractValueDistribution.CommandText = qryContractValueDistribution
                    'commandContractValueDistribution.Parameters.Clear()

                    'commandContractValueDistribution.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    'commandContractValueDistribution.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.Text.Trim)
                    'commandContractValueDistribution.Parameters.AddWithValue("@Percentage", 100)
                    'commandContractValueDistribution.Parameters.AddWithValue("@CalculatedValue", txtAgreeVal.Text)
                    'commandContractValueDistribution.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    'commandContractValueDistribution.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                    'commandContractValueDistribution.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'commandContractValueDistribution.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    'commandContractValueDistribution.Connection = conn
                    'commandContractValueDistribution.ExecuteNonQuery()

                    'btnContractGroupDistribution.Text = "DISTRIBUTION [1]"
                End If
            End If

            '18.01.22
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "5 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)


            '28.07.22

            Dim commandHistory As MySqlCommand = New MySqlCommand

            commandHistory.CommandType = CommandType.Text
            commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
            commandHistory.Connection = conn

            Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            Dim dtHistory As New DataTable
            dtHistory.Load(drHistory)

            If dtHistory.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnHistory.Text = "PRICE HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            commandHistory.Dispose()
            dtHistory.Dispose()
            drHistory.Dispose()
            '''''''''''''''''''
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "6 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)


            '28.07.22
            conn.Close()
            conn.Dispose()

            If String.IsNullOrEmpty(txtAgreeValueEdit.Text) = True Then
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "7 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                'EventLog_InsertL(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "8 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            Else
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "91 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                'EventLog_InsertL(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)
                'mdlPopupAgreeValue.Hide()
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "10 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            End If
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "11 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGREMARKS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            mdlPopupAgreeValue.Hide()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", lUpdateType & " End - " & txtAccountId.Text, txtContractNo.Text)

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", ex.Message.ToString, txtContractNo.Text)
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            mdlPopupAgreeValue.Show()
            Exit Sub
        End Try
    End Sub
    Protected Sub btnPopUpTeamSearch_Load(sender As Object, e As EventArgs) Handles btnPopUpTeamSearch.Load

    End Sub

    Protected Sub btnClient9_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient9.Click
        mdlPopupBillingRemarks.Show()
    End Sub

    Protected Sub btnEditBillingRemarksSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingRemarksSave.Click
        If txtRemarks.Text = txtBillingRemarksEdit.Text Then
            lblAlertBillingRemarks.Text = "NO CHANGES MADE"
            mdlPopupBillingRemarks.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Remarks = @Remarks, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Remarks", txtBillingRemarksEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''



            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtRemarks.Text = txtBillingRemarksEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGREMARKS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'InsertNewLog()
            mdlPopupBillingRemarks.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditBillingRemarksSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnPrintService_Click(sender As Object, e As EventArgs) Handles btnPrintService.Click
        '  InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step1", txtContractNo.Text)

        Dim qry As String = "select a.rcno,a.status,a.recordno,a.schservicedate,a.servicedate,a.schservicetime,a.schservicetimeout,a.notes"
        qry = qry + " from tblservicerecord a where a.contractno='" + txtContractNo.Text + "' and a.status in ('O','P','H')"
        SqlDSServicesPrint.SelectCommand = qry
        SqlDSServicesPrint.DataBind()
        grdViewServicesPrint.DataBind()
        '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step2", txtContractNo.Text)
        txtSvcDateFrom.Text = ""
        txtSvcDateTo.Text = ""
        lblAlertServicePrint.Text = ""
        txtPrintContractNo.Text = txtContractNo.Text

        mdlPopupServicesPrint.Show()
    End Sub

    Protected Sub btnPrintServicesPrint_Click(sender As Object, e As EventArgs) Handles btnPrintServicesPrint.Click
        Session.Remove("Services")

        Dim invcheck As String = ""
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewServicesPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewServicesPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectServicesPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblRecNo"), Label).Text() + """")

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            InsertIntoTblWebEventLog("ServicesPrint", invcheck, grdViewServicesPrint.Rows.Count.ToString, txtContractNo.Text)
            Session("Services") = invcheck
            Dim url As String = "RV_ContractServiceSchedule.aspx?Status=Services"
            Dim s As String = "window.open('" & url + "', 'Contract Service Schedule');"
            ClientScript.RegisterStartupScript(Me.GetType(), "script", s, True)
            '   mdlPopupServicesPrint.Hide()

        End If
        mdlPopupServicesPrint.Show()

        '  mdlPopupPrint.Show()
    End Sub

    Protected Sub btnCancelServicesPrint_Click(sender As Object, e As EventArgs) Handles btnCancelServicesPrint.Click
        'mdlPopupServicesPrint.Hide()

        '  mdlPopupNotes.Show()

    End Sub

    Protected Sub chkServicesPrint_CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
        Session.Remove("Services")

        Dim invcheck As String = ""
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewServicesPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewServicesPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectServicesPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblRecNo"), Label).Text() + """")

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            Session("Services") = invcheck
            mdlPopupServicesPrint.Show()

        End If

    End Sub

    Protected Sub btnDiffContGrpYes_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYes.Click
        svcSave()
    End Sub

    Protected Sub btnDiffContGrpNo_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpNo.Click
        'btnSvcSave.Enabled = True
        'btnADD.ForeColor = System.Drawing.Color.Black
        mdlPopupServiceID.Hide()
    End Sub

    Protected Sub btnDiffContGrpYesSchdl_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYesSchdl.Click
        svcSave()
        'svcSaveNCR()
        btnServiceSchedule_Click(sender, e)
    End Sub

    Protected Sub btnDiffContGrpNoSchdl_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpNoSchdl.Click
        btnSvcSave.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black
        mdlPopupServiceID.Hide()
    End Sub

    Protected Sub btnTransactions_Click(sender As Object, e As EventArgs) Handles btnTransactions.Click
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO VIEW INVOICES"
            Return
        End If

        Try

            SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  group_concat(tblsalesdetail.Description SEPARATOR '; ') as Description,tblsalesdetail.RefType as Reference, sum(tblsalesdetail.Valuebase) as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P'  and CostCode= '" & txtContractNo.Text & "' Group By tblsalesdetail.InvoiceNumber ORDER BY VoucherDate"

            SqlDSInvoiceDetails.DataBind()
            grdViewInvoiceDetails.DataBind()

            Session.Add("customerfrom", "Service")

            'If grdViewInvoiceDetails.Rows.Count = 0 Then
            'lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS SERVICE"
            'Else
            'lblAlertTransactions.Text = ""
            'End If
            ModalPopupInvoice.Show()
        Catch ex As Exception
            'InsertIntoTblWebEventLog("btnTransactions_Click", ex.Message.ToString, txtContractNo.Text)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnTransactions_Click", ex.Message.ToString, lblContractNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
        ModalPopupInvoice.Show()
    End Sub


    'Start: Rate Schedule


    Private Sub AccessControlRateSchedule()

        '''''''''''''''''''Access Control 
        Try
            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                command.CommandType = CommandType.Text
                command.CommandText = "SELECT  x2412SORAdd, x2412SOREdit, x2412SORDelete FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If Not IsDBNull(dt.Rows(0)("x2412SORAdd")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAdd")) = False Then
                            Me.btnAddRateSchedule.Enabled = dt.Rows(0)("x2412SORAdd").ToString()
                        End If
                    End If



                    If Not IsDBNull(dt.Rows(0)("x2412SOREdit")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SOREdit")) = False Then
                            Me.btnEditRateSchedule.Enabled = dt.Rows(0)("x2412SOREdit").ToString()
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x2412SORDelete")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SORDelete")) = False Then
                            Me.btnDeleteRateSchedule.Enabled = dt.Rows(0)("x2412SORDelete").ToString()
                        End If
                    End If
                End If

                If btnAddRateSchedule.Enabled = True Then
                    btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEditRateSchedule.Enabled = True Then
                    btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDeleteRateSchedule.Enabled = True Then
                    btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ACCESS CONTROL", ex.Message.ToString, "")
            Exit Sub
        End Try
        '''''''''''''''''''Access Control 
    End Sub

    Private Sub DisableRateScheduleControls()

        btnSaveRateSchedule.Enabled = True
        btnSaveRateSchedule.ForeColor = System.Drawing.Color.Black
        btnCancelRateSchedule.Enabled = True
        btnCancelRateSchedule.ForeColor = System.Drawing.Color.Black
        'AccessControlRateSchedule()

        btnAddRateSchedule.Enabled = False
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        ddlTagetIDRateSchedule.Enabled = True
        txtTargetDescriptionRateSchedule.Enabled = False
        txtPricePerServiceRateSchedule.Enabled = True
        txtDiscountPercentageRateSchedule.Enabled = True
        txtFinalPricePerServiceRateSchedule.Enabled = False

    End Sub


    Private Sub EnableRateScheduleControls()
        btnSaveRateSchedule.Enabled = False
        btnSaveRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnCancelRateSchedule.Enabled = False
        btnCancelRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnAddRateSchedule.Enabled = True
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        AccessControlRateSchedule()

        'txtNotes.Enabled = False
        ddlTagetIDRateSchedule.Enabled = False
        txtTargetDescriptionRateSchedule.Enabled = False
        txtPricePerServiceRateSchedule.Enabled = False
        txtDiscountPercentageRateSchedule.Enabled = False
        txtFinalPricePerServiceRateSchedule.Enabled = False

    End Sub

    Public Sub MakeRateScheduleNull()
        txtRateScheduleMode.Text = ""
        txtRateScheduleRcNo.Text = ""

        ddlTagetIDRateSchedule.SelectedIndex = 0
        txtTargetDescriptionRateSchedule.Text = ""
        txtPricePerServiceRateSchedule.Text = "0.00"
        txtDiscountPercentageRateSchedule.Text = "0.00"
        txtFinalPricePerServiceRateSchedule.Text = "0.00"
    End Sub

    Public RateScheduleRcno As String

    Protected Sub gvRateSchedule_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvRateSchedule.PageIndexChanging
        gvRateSchedule.PageIndex = e.NewPageIndex

        sqlDSRateSchedule.SelectCommand = "SELECT * From tblnotes where keyfield='" + txtContractNo.Text + "'"

        sqlDSRateSchedule.DataBind()
        sqlDSRateSchedule.DataBind()
    End Sub

    Protected Sub btnCancelRateSchedule_Click(sender As Object, e As EventArgs) Handles btnCancelRateSchedule.Click
        MakeRateScheduleNull()
        EnableRateScheduleControls()

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        ddlTagetIDRateSchedule.SelectedIndex = 0
        txtTargetDescriptionRateSchedule.Text = ""
        txtPricePerServiceRateSchedule.Text = "0.00"
        txtDiscountPercentageRateSchedule.Text = "0.00"
        txtFinalPricePerServiceRateSchedule.Text = "0.00"
    End Sub

    Protected Sub btnAddRateSchedule_Click(sender As Object, e As EventArgs) Handles btnAddRateSchedule.Click
        DisableRateScheduleControls()

        MakeRateScheduleNull()
        lblMessage.Text = "ACTION: ADD RATE SCHEDULE"

        txtRateScheduleMode.Text = "Add"
        ddlTagetIDRateSchedule.Focus()
    End Sub

    Protected Sub btnSaveRateSchedule_Click(sender As Object, e As EventArgs) Handles btnSaveRateSchedule.Click
        If String.IsNullOrEmpty(txtPricePerServiceRateSchedule.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER RATE"
            Return
        End If

        If txtRateScheduleMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblrateschedule where ContractNo=@ContractNo and TargetID=@TargetID"
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command1.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "RATE ALREADY EXISTS FOR THIS TARGET"
                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblrateschedule(ContractNo, TargetID, Descrip1, PricePerService, DiscountPercent, FinalPricePerService,CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@ContractNo, @TargetID,@Descrip1,@PricePerService,@DiscountPercent,@FinalPricePerService,@CreatedOn,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                        command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)
                        command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text)
                        command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text)
                        command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                        command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    End If

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: RATE SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSaveRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()



        ElseIf txtRateScheduleMode.Text = "Edit" Then
            If txtRateScheduleRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblrateschedule where ContractNo=@ContractNo and TargetID=@TargetID and rcno<>" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command2.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "RATE ALREADY EXISTS FOR THIS TARGET"
                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblrateschedule SET TargetID=@TargetID,Descrip1 = @Descrip1, PricePerService=@PricePerService,DiscountPercent = @DiscountPercent, FinalPricePerService = @FinalPricePerService, LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                            command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                            command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)
                            command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text)
                            command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text)
                            command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                            command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                    End If
                    command1.Dispose()
                End If

                txtRateScheduleMode.Text = ""

                conn.Close()
                conn.Dispose()

                command2.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSaveRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()

        End If
        sqlDSRateSchedule.SelectCommand = "select * from tblrateschedule where ContractNo = '" + txtContractNo.Text + "'"
        sqlDSRateSchedule.DataBind()
        gvRateSchedule.DataBind()

        txtRateScheduleMode.Text = ""
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray
    End Sub

    Protected Sub btnEditRateSchedule_Click(sender As Object, e As EventArgs) Handles btnEditRateSchedule.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtRateScheduleRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableRateScheduleControls()
        txtRateScheduleMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT RATE"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub OnRowDataBoundgRateSchedule(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgRateSchedule(sender As Object, e As EventArgs) Handles gvRateSchedule.SelectedIndexChanged
        For Each row As GridViewRow In gvRateSchedule.Rows

            If row.RowIndex = gvRateSchedule.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub

    Protected Sub ddlTagetIDRateSchedule_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlTagetIDRateSchedule.SelectedIndexChanged
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT descrip1 FROM tblTarget where TargetId= '" & ddlTagetIDRateSchedule.Text & "'"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtTargetDescriptionRateSchedule.Text = dt.Rows(0)("descrip1").ToString
        End If

        command1.Dispose()
        conn.Close()
        conn.Dispose()
    End Sub

    Protected Sub gvRateSchedule_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvRateSchedule.SelectedIndexChanged
        Try
            MakeRateScheduleNull()

            Dim editindex As Integer = gvRateSchedule.SelectedIndex
            rcno = DirectCast(gvRateSchedule.Rows(editindex).FindControl("Label1"), Label).Text
            txtRateScheduleRcNo.Text = rcno.ToString()
            ddlTagetIDRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(1).Text)
            txtTargetDescriptionRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(2).Text)
            txtPricePerServiceRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(3).Text)
            txtDiscountPercentageRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(4).Text)
            txtFinalPricePerServiceRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(6).Text)

            'EnableRateScheduleControls()

            btnEditRateSchedule.Enabled = True
            btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
            btnDeleteRateSchedule.Enabled = True
            btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black

            AccessControlRateSchedule()
            'AccessControl()
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvNotesMaster_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnDeleteRateSchedule_Click1(sender As Object, e As EventArgs) Handles btnDeleteRateSchedule.Click
        lblMessage.Text = ""
        If txtRateScheduleRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE RATE SCHEDULE"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDeleteRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()

            sqlDSRateSchedule.SelectCommand = "select * from tblrateschedule where ContractNo = '" + txtContractNo.Text + "'"
            sqlDSRateSchedule.DataBind()

            gvRateSchedule.DataBind()
            MakeRateScheduleNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub

    'End: Rate Schedule

    Protected Sub ddlStatusChSt_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlStatusChSt.SelectedIndexChanged
        Try
            If String.IsNullOrEmpty(txtActualEndChSt.Text) = False Then
                txtFirstDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day + 1)
                txtLastDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day)
                txtLastDate.Text = Convert.ToDateTime(txtLastDate.Text).AddMonths(1)
            End If
            ddlTerminationCode.SelectedIndex = 0

            txtAlertStatus.Text = ""

            txtAlertStatus.Visible = False
            If Left(ddlStatusChSt.Text, 1) = "T" Then

                ''''
                'Dim conn As MySqlConnection = New MySqlConnection()

                'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'conn.Open()
                'Dim commandIsTermRecordExists As MySqlCommand = New MySqlCommand
                'commandIsTermRecordExists.CommandType = CommandType.Text
                'commandIsTermRecordExists.CommandText = "SELECT ifnull(count(ContractNo),0) as countcontract FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and type='TERMINATION'"
                'commandIsTermRecordExists.Connection = conn
                'commandIsTermRecordExists.ExecuteNonQuery()

                'Dim drIsTermRecordExists As MySqlDataReader = commandIsTermRecordExists.ExecuteReader()
                'Dim dtIsTermRecordExists As New DataTable
                'dtIsTermRecordExists.Load(drIsTermRecordExists)

                'If dtIsTermRecordExists.Rows(0)("countcontract").ToString > 0 Then
                '    txtAlertStatus.Visible = True
                '    txtAlertStatus.Text = "There is already a Termination Record in Contract Price History. Cannot be terminated."
                '    txtAlertStatus.Text = "Termination Record already exists in Contract Price History."
                '    ddlStatusChSt.SelectedIndex = 0
                '    conn.Close()
                '    commandIsTermRecordExists.Dispose()
                '    ModalPopupExtender5.Show()
                '    Exit Sub
                'End If
                '''


                lblActualEnd.Text = "Actual End"

                lblActualEnd.Visible = True
                txtActualEndChSt.Visible = True

                lblTermCode.Visible = True
                Label62.Visible = True
                ddlTerminationCode.Visible = True

                lblCommetsChSt.Visible = True
                txtCommentChSt.Visible = True
                Label66.Visible = True
                Label29.Visible = True

                lblTermType.Visible = True
                txtTerminationTypeChSt.Visible = True

                lblOnHoldCode.Visible = False
                ddlOnHoldCodeChSt.Visible = False
                lblOnHoldDescription.Visible = False
                txtOnHoldDscriptionChSt.Visible = False
                lblOnHoldComments.Visible = False
                txtOnHoldCommentsChSt.Visible = False
                Label67.Visible = False
                Label68.Visible = False

                txtOnHoldDscriptionChSt.Visible = False
                txtOnHoldCommentsChSt.Visible = False

                If Left(txtStatus.Text, 1) <> "E" Then
                    If txtFutureDated.Text = "Y" Then
                        txtActualEndChSt.Text = txtContractStart.Text
                        'txtActualEndChSt.Attributes.Add("disabled", "true")

                    Else
                        If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                            txtActualEndChSt.Attributes.Add("disabled", "true")
                            txtActualEndChSt.Text = txtActualEnd.Text
                        Else
                            txtActualEndChSt.Attributes.Remove("disabled")
                            txtActualEndChSt.Text = ""
                        End If

                    End If
                End If


                '03.08.22

                If Left(txtStatus.Text.Trim, 1) = "E" Then

                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()
                    Dim commandIsTermRecordExists As MySqlCommand = New MySqlCommand
                    commandIsTermRecordExists.CommandType = CommandType.Text
                    commandIsTermRecordExists.CommandText = "SELECT ContractNo, Date FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and type='TERMINATION' and Void = False"
                    commandIsTermRecordExists.Connection = conn
                    commandIsTermRecordExists.ExecuteNonQuery()

                    Dim drIsTermRecordExists As MySqlDataReader = commandIsTermRecordExists.ExecuteReader()
                    Dim dtIsTermRecordExists As New DataTable
                    dtIsTermRecordExists.Load(drIsTermRecordExists)

                    If dtIsTermRecordExists.Rows.Count > 0 Then
                        'Convert.ToDateTime(dt1.Rows(0)("FirstService")).ToString("dd/MM/yyyy") 
                        txtActualEndChSt.Text = Convert.ToDateTime(dtIsTermRecordExists.Rows(0)("Date")).ToString("dd/MM/yyyy")
                        'txtAlertStatus.Visible = True
                        'txtAlertStatus.Text = "There is already a Termination Record in Contract Price History. Cannot be terminated."
                        'txtAlertStatus.Text = "Termination Record already exists in Contract Price History."
                        'ddlStatusChSt.SelectedIndex = 0
                        conn.Close()
                        commandIsTermRecordExists.Dispose()
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If

                    conn.Close()
                    commandIsTermRecordExists.Dispose()
                    ModalPopupExtender5.Show()
                End If


                '03.08.22

            ElseIf Left(ddlStatusChSt.Text, 1) = "V" Then

                ''''
                txtActualEndChSt.Text = ""

                If txtVoidContract.Text = False Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "This user account is not allowed to VOID Contract"
                    txtActualEndChSt.Text = ""
                    ddlStatusChSt.SelectedIndex = 0
                    ModalPopupExtender5.Show()
                    Exit Sub


                End If
                If Left(txtStatus.Text, 1) <> "O" Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Contract Status should be 'O-Open' to VOId Contract"
                    txtActualEndChSt.Text = ""
                    ddlStatusChSt.SelectedIndex = 0
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If





                lblActualEnd.Text = "Actual End"

                lblActualEnd.Visible = True
                txtActualEndChSt.Visible = True

                lblTermCode.Visible = True
                Label62.Visible = True
                ddlTerminationCode.Visible = True

                lblCommetsChSt.Visible = True
                txtCommentChSt.Visible = True
                Label66.Visible = True
                Label29.Visible = True

                lblTermType.Visible = True
                txtTerminationTypeChSt.Visible = True

                lblOnHoldCode.Visible = False
                ddlOnHoldCodeChSt.Visible = False
                lblOnHoldDescription.Visible = False
                txtOnHoldDscriptionChSt.Visible = False
                lblOnHoldComments.Visible = False
                txtOnHoldCommentsChSt.Visible = False
                Label67.Visible = False
                Label68.Visible = False

                txtOnHoldDscriptionChSt.Visible = False
                txtOnHoldCommentsChSt.Visible = False

                If String.IsNullOrEmpty(txtVoidContractChSt.Text) = False Then
                    ddlTerminationCode.Text = txtVoidContractChSt.Text
                End If

                'If Left(txtStatus.Text, 1) <> "O" Then
                '    If txtFutureDated.Text = "Y" Then
                '        txtActualEndChSt.Text = txtContractStart.Text
                '        'txtActualEndChSt.Attributes.Add("disabled", "true")

                '    Else
                '        If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                '            txtActualEndChSt.Attributes.Add("disabled", "true")
                '            txtActualEndChSt.Text = txtActualEnd.Text
                '        Else
                '            txtActualEndChSt.Attributes.Remove("disabled")
                '            txtActualEndChSt.Text = ""
                '        End If

                '    End If
                'End If
            ElseIf Left(ddlStatusChSt.Text, 1) = "R" Then
                lblActualEnd.Text = "Actual End"

                lblActualEnd.Visible = True
                txtActualEndChSt.Visible = True

                lblTermCode.Visible = True
                Label62.Visible = True
                ddlTerminationCode.Visible = True

                lblCommetsChSt.Visible = True
                txtCommentChSt.Visible = True
                Label66.Visible = True


                lblOnHoldCode.Visible = False
                ddlOnHoldCodeChSt.Visible = False
                lblOnHoldDescription.Visible = False
                txtOnHoldDscriptionChSt.Visible = False
                lblOnHoldComments.Visible = False
                txtOnHoldCommentsChSt.Visible = False
                Label67.Visible = False
                Label68.Visible = False

                txtOnHoldDscriptionChSt.Visible = False
                txtOnHoldCommentsChSt.Visible = False

                lblTermType.Visible = False
                txtTerminationTypeChSt.Visible = False

                If txtFutureDated.Text = "Y" Then
                    txtActualEndChSt.Text = txtContractStart.Text
                    'txtActualEndChSt.Attributes.Add("disabled", "true")

                Else
                    txtActualEndChSt.Attributes.Remove("disabled")
                    txtActualEndChSt.Text = ""
                End If


                '29.01.22

                txtIsPopupChSt.Text = "ContractNo"

                lblMessage.Text = "ACTION: REVISE RECORD"
                BtnChSt.Text = "Continue"

                If String.IsNullOrEmpty(txtContractRevisionTerminationCode.Text) = False Then
                    ddlTerminationCode.Text = txtContractRevisionTerminationCode.Text
                End If

                lblActualEnd.Text = "Actual End"


                '29.01.22
            ElseIf Left(ddlStatusChSt.Text, 1) = "H" Then

                lblActualEnd.Text = "OnHold Date"

                lblActualEnd.Visible = True
                txtActualEndChSt.Visible = True

                lblTermCode.Visible = False
                Label62.Visible = False
                ddlTerminationCode.Visible = False

                lblCommetsChSt.Visible = False
                txtCommentChSt.Visible = False
                Label66.Visible = False

                lblTermType.Visible = False
                txtTerminationTypeChSt.Visible = False

                lblOnHoldCode.Visible = True
                ddlOnHoldCodeChSt.Visible = True
                lblOnHoldDescription.Visible = True
                txtOnHoldDscriptionChSt.Visible = True
                lblOnHoldComments.Visible = True
                txtOnHoldCommentsChSt.Visible = True

                ddlOnHoldCodeChSt.Enabled = True
                txtOnHoldCommentsChSt.Enabled = True
                Label67.Visible = True
                Label68.Visible = True
                Label29.Visible = True
            ElseIf Left(ddlStatusChSt.Text, 1) = "O" Then

                lblActualEnd.Text = "Resume Date"

                lblActualEnd.Visible = True
                txtActualEndChSt.Visible = True

                lblTermCode.Visible = False
                Label62.Visible = False
                ddlTerminationCode.Visible = False

                lblCommetsChSt.Visible = False
                txtCommentChSt.Visible = False
                Label66.Visible = False
                Label29.Visible = True

                lblTermType.Visible = False
                txtTerminationTypeChSt.Visible = False


                'If txtStatus.Text = "H" Then
                If Left(txtStatus.Text, 1) = "H" Then
                    lblOnHoldCode.Visible = False
                    ddlOnHoldCodeChSt.Visible = False
                    lblOnHoldDescription.Visible = False
                    txtOnHoldDscriptionChSt.Visible = False
                    lblOnHoldComments.Visible = False
                    txtOnHoldCommentsChSt.Visible = False

                    txtActualEndChSt.Attributes.Remove("disabled")

                    ddlOnHoldCodeChSt.Enabled = True
                    txtOnHoldCommentsChSt.Enabled = True
                    Label67.Visible = False
                    Label68.Visible = False
                Else
                    lblOnHoldCode.Visible = False
                    ddlOnHoldCodeChSt.Visible = False
                    lblOnHoldDescription.Visible = False
                    txtOnHoldDscriptionChSt.Visible = False
                    lblOnHoldComments.Visible = False
                    txtOnHoldCommentsChSt.Visible = False
                End If

            End If


            'Added on 07.07.20

            If txtIsPopupChSt.Text = "ContractNo" Then
                txtAlertStatus.Text = ""

                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                        'txtActualEndChSt.Text = ""
                        ddlStatusChSt.SelectedIndex = 0
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If
                End If


                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                                'txtActualEndChSt.Text = ""
                                ddlStatusChSt.SelectedIndex = 0
                                ModalPopupExtender5.Show()
                                Exit Sub
                            End If
                        End If
                    End If
                End If

                txtFirstDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day + 1)
                txtLastDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day)
                txtLastDate.Text = Convert.ToDateTime(txtLastDate.Text).AddMonths(1)

                'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1

                'If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "H" Then

                If Left(ddlStatusChSt.Text, 1) = "T" Then
                    If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                            'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtFirstDate.Text) Then  '1
                                FindBackDateContractTermination()
                                If txtBackDateContractTerminationSetup.Text = False Then                       '2
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow BACK dated Contract termination."
                                    'txtActualEndChSt.Text = ""
                                    ddlStatusChSt.SelectedIndex = 0
                                    ModalPopupExtender5.Show()
                                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                    Exit Sub
                                Else
                                    If txtBackDateContractTermination.Text = False Then   '3
                                        txtAlertStatus.Visible = True
                                        txtAlertStatus.Text = "This user account is not allowed for BACK dated Contract termination"
                                        ddlStatusChSt.SelectedIndex = 0
                                        'txtActualEndChSt.Text = ""
                                        ModalPopupExtender5.Show()

                                    End If  '3
                                End If  '2
                            ElseIf Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtLastDate.Text) Then  '1
                                If txtFutureDateContractTermination.Text = False Then
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "This user account is not allowed to enter FUTURE dated Contract termination"
                                    ddlStatusChSt.SelectedIndex = 0
                                    'txtActualEndChSt.Text = ""
                                    ModalPopupExtender5.Show()
                                    Exit Sub
                                End If
                            Else
                                If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "This user account is not allowed for SAME month Contract termination"
                                    ddlStatusChSt.SelectedIndex = 0
                                    'txtActualEndChSt.Text = ""
                                    ModalPopupExtender5.Show()
                                    Exit Sub
                                End If
                            End If      '1



                        End If '  If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then
                    End If ' If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                End If 'If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "H" Then

            End If


            'Added on 07.07

            'SqlDSTerminationCode.SelectCommand = ""
            'ddlTerminationCode.DataBind()

            'ddlTerminationCode.DataSourceID = "SqlDSTerminationCode"
            'ddlTerminationCode.DataBind()
            'SqlDSTerminationCode.SelectCommand = "SELECT CONCAT(a.Code, ' - ', a.Description) AS TC FROM tblterminationcode a, tblterminationcodestatus b where a.Status = 'Y' and a.Code = b.Code and b.Selected ='Y' and b.Status ='" & ddlStatusChSt.Text & "' ORDER BY b.Code"
            'SqlDSTerminationCode.DataBind()

            'ddlTerminationCode.DataSourceID = "SqlDSTerminationCode"
            'ddlTerminationCode.DataBind()

            'SELECT CONCAT(Code, ' - ', Description) AS TC FROM tblterminationcode where Status = 'Y' ORDER BY Code
            '''''''''''''''''
            'ModalPopupExtender5.Show()
            ModalPopupExtender5.Show()
        Catch ex As Exception
            lblMessageStatus.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlStatusChSt_SelectedIndexChanged", ex.Message.ToString, "")
            ModalPopupExtender5.Show()

            Exit Sub
        End Try
    End Sub


    Private Sub FindIsContractValueAllowEdit()
        Dim sqlstr As String
        sqlstr = ""

        Try

            sqlstr = "SELECT ContractValueAllowEdit, AllowExtension, ContractValueAllowEditAfterExpiry FROM tblcontractgroup where ContractGroup = '" & ddlContractGrp.Text & "'"


            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then

                If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEdit"))) = False Then
                    If Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEdit")) = False Then
                        btnClient8.Visible = False
                    End If
                End If

                If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("AllowExtension"))) = False Then
                    If Convert.ToBoolean(dt.Rows(0)("AllowExtension")) = False Then
                        btnExtendContractEndDate.Visible = False
                    End If
                End If


                'Start: 29.04.20

                If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEditAfterExpiry"))) = False Then
                    If Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEditAfterExpiry")) = False Then
                        If rbtFixedContinuous.SelectedIndex = 0 Then
                            If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                                btnClient8.Visible = False
                            End If
                        Else
                            If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                                btnClient8.Visible = False
                            End If
                        End If


                        If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                            If Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                                btnClient8.Visible = False
                            End If
                        End If


                    End If
                End If
                'End: 29.04.20
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditAgreeValueSaveYes_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueSaveYes.Click
        UpdateAgreeValue("Update")
        'mdlPopupAgreeValue.Hide()
    End Sub

    Protected Sub btnEditAgreeValueNoChange_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueNoChange.Click
        mdlEditAgreeValueSaveNoChange.Hide()
        mdlPopupAgreeValue.Show()

    End Sub

    Protected Sub btnEditAgreeValueSaveNo_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueSaveNo.Click
        txtAgreeValueEdit.Text = txtAgreeVal.Text
        mdlEditAgreeValueSave.Hide()
        mdlPopupAgreeValue.Hide()
    End Sub

    Protected Sub BtnChStClose_Click(sender As Object, e As EventArgs) Handles BtnChStClose.Click
        ModalPopupExtender5.Hide()
        lblMessage.Text = ""
        txtIsPopupChSt.Text = ""
    End Sub


    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try


            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno
            'RetrieveData()

            GridView1.SelectedIndex = rowindex1

            'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
            'txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")

        End Try

    End Sub

    Protected Sub btnAutoRenew_Click(sender As Object, e As ImageClickEventArgs) Handles btnAutoRenew.Click
        chkAutoRenewEdit.Text = chkAutoRenew.Text
        'txtYourReferenceEdit.Text = txtYourRef.Text
        'txtPONoEdit.Text = txtPONo.Text

        mdlPopupAutoRenewalEdit.Show()
    End Sub

    Protected Sub btnEditAutoRenewalSave_Click(sender As Object, e As EventArgs) Handles btnEditAutoRenewalSave.Click
        If chkAutoRenew.Checked = chkAutoRenewEdit.Checked Then
            lblAlertAutoRenewal.Text = "NO CHANGES MADE"
            mdlPopupAutoRenewalEdit.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET AutoRenew = @AutoRenew, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@AutoRenew", chkAutoRenewEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''
            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()

            chkAutoRenew.Checked = chkAutoRenewEdit.Checked
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAUTORENEWAL", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'InsertNewLog()
            mdlPopupAutoRenewalEdit.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditAutoRenewalSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub grdViewInvoiceDetails_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdViewInvoiceDetails.PageIndexChanging
        Try
            grdViewInvoiceDetails.PageIndex = e.NewPageIndex

            SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  tblsalesdetail.Description as Description,tblsalesdetail.RefType as Reference,tblsalesdetail.Valuebase as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P'  and CostCode= '" & txtContractNo.Text & "' ORDER BY VoucherDate"
            SqlDSInvoiceDetails.DataBind()
            grdViewInvoiceDetails.DataBind()

            ModalPopupInvoice.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grdViewInvoiceDetails_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub btnExtendContractEndDate_Click(sender As Object, e As ImageClickEventArgs) Handles btnExtendContractEndDate.Click
        Try
            txtEditEndDate.Text = ""
            txtAlertExtendContract.Text = ""

            txtContractNotesEdit.Text = txtContractNotes.Text.Trim

            txtEndDate.Text = txtContractEnd.Text
            mdlPopupExtendContract.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnExtendContractEndDate_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub btnConfirmExtendContract_Click(sender As Object, e As EventArgs) Handles btnConfirmExtendContract.Click
        Try
            txtAlertExtendContract.Text = ""

            If String.IsNullOrEmpty(txtEditEndDate.Text.Trim) = True Then
                txtAlertExtendContract.Text = "Extension Date cannot be blank"
                mdlPopupExtendContract.Show()
                Exit Sub
            End If


            If txtEndDate.Text.Trim = txtEditEndDate.Text.Trim And txtContractNotes.Text.Trim = txtContractNotesEdit.Text.Trim Then
                txtAlertExtendContract.Text = "No Change has been made in Contract End Date or Contract Note"
                mdlPopupExtendContract.Show()
                Exit Sub
            End If


            If Convert.ToDateTime(txtEditEndDate.Text.Trim) < DateTime.Today Then
                txtAlertExtendContract.Text = "End Date should not be Past Date"
                mdlPopupExtendContract.Show()
            Else
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                ''If txtContractStart.Text = "" Then
                ''    command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                ''Else
                ''    command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                ''End If


                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-BEFORE UPDATE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, txtContractNotes.Text, txtRcno.Text)

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "UPDATE tblContract SET Notes = @Notes, Status = 'O', ActualEnd = @ActualEnd, EndDate = @EndDate, ServiceEnd = @ServiceEnd, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtEditEndDate.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtEditEndDate.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@Notes", txtContractNotesEdit.Text.Trim)

                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Connection = conn

                command.ExecuteNonQuery()



                '''''''''''''''''''''''''
                ''''''''''''''''''''''

                command.Dispose()

                ''''''''

                '' Void the Termination Record in tblContractPriceHistory table for 1st Contract
                Dim commandDeleteContractPriceHistory As MySqlCommand = New MySqlCommand
                commandDeleteContractPriceHistory.CommandType = CommandType.Text

                Dim qryDeleteContractPriceHistory As String = "UPDATE tblContractPriceHistory SET VOID = True where ContractNo= @ContractNo and Type ='TERMINATION'"

                commandDeleteContractPriceHistory.CommandText = qryDeleteContractPriceHistory
                commandDeleteContractPriceHistory.Parameters.Clear()
                commandDeleteContractPriceHistory.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                commandDeleteContractPriceHistory.Connection = conn
                commandDeleteContractPriceHistory.ExecuteNonQuery()

                commandDeleteContractPriceHistory.Dispose()

                ''''

                Dim commandEventLog As MySqlCommand = New MySqlCommand

                commandEventLog.CommandType = CommandType.Text
                commandEventLog.CommandText = "INSERT INTO tblEventLog (StaffId, DocRef, Module, LogDate, CustCode, Action, Comments) VALUES(@LastModifiedBy, @DocRef, @Module, @LastModifiedOn, @AccountId, @Action, @Comments)"
                commandEventLog.Parameters.Clear()

                'commandEventLog.Parameters.AddWithValue("@ActualEnd", txtEndDate.Text)
                'commandEventLog.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtEditEndDate.Text).ToString("yyyy-MM-dd"))
                commandEventLog.Parameters.AddWithValue("@Accountid", txtAccountId.Text)
                commandEventLog.Parameters.AddWithValue("@Module", "SERVCONT")
                commandEventLog.Parameters.AddWithValue("@Action", "EXTENSION ; EDITNOTES-AFTER UPDATE")
                commandEventLog.Parameters.AddWithValue("@DocRef", txtContractNo.Text)
                commandEventLog.Parameters.AddWithValue("@Comments", "Original End Date: " & txtEndDate.Text & "; Actual End: " & txtActualEnd.Text & "; Extended Until: " & txtEditEndDate.Text & " ; Notes : " & txtContractNotesEdit.Text.Trim)
                commandEventLog.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'commandEventLog.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                commandEventLog.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                commandEventLog.Connection = conn

                commandEventLog.ExecuteNonQuery()

                txtContractEnd.Text = txtEditEndDate.Text
                txtActualEnd.Text = ""

                ''''''''''''''''''''''
                conn.Close()
                conn.Dispose()
                command.Dispose()
                commandEventLog.Dispose()

                '''''''
                'txtStatus.Text = "O"
                txtStatus.Text = "O - Open"
                txtContractEnd.Text = txtEditEndDate.Text
                txtActualEnd.Text = ""
                txtContractNotes.Text = txtContractNotesEdit.Text.Trim

                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()

                'InsertNewLog()
                'GridView1.DataBind()
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnConfirmExtendContract_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub txtActualEnd_TextChanged(sender As Object, e As EventArgs) Handles txtActualEnd.TextChanged

    End Sub

    Protected Sub btnSearchDatePrint_Click(sender As Object, e As EventArgs) Handles btnSearchDatePrint.Click
        Try
            lblAlertServicePrint.Text = ""

            Dim qry As String = "select a.rcno,a.status,a.recordno,a.schservicedate,a.servicedate,a.schservicetime,a.schservicetimeout,a.notes"
            qry = qry + " from tblservicerecord a where a.contractno='" + txtPrintContractNo.Text + "'"

            If String.IsNullOrEmpty(txtSvcDateFrom.Text) = False Then
                Dim d As DateTime
                If Date.TryParseExact(txtSvcDateFrom.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then

                Else
                    '  MessageBox.Message.Alert(Page, "Invoice Date From is invalid", "str")
                    lblAlertServicePrint.Text = "INVALID SERVICE FROM DATE"
                    mdlPopupServicesPrint.Show()
                    Return
                End If
                qry = qry + " and a.servicedate>= '" + Convert.ToDateTime(txtSvcDateFrom.Text).ToString("yyyy-MM-dd") + "'"

            Else
                lblAlertServicePrint.Text = "ENTER SERVICE FROM DATE"
                mdlPopupServicesPrint.Show()
                Return

            End If

            If String.IsNullOrEmpty(txtSvcDateTo.Text) = False Then
                Dim d As DateTime
                If Date.TryParseExact(txtSvcDateTo.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then

                Else
                    lblAlertServicePrint.Text = "INVALID SERVICE TO DATE"
                    mdlPopupServicesPrint.Show()
                    Return
                End If
                qry = qry + " and a.servicedate <= '" + Convert.ToDateTime(txtSvcDateTo.Text).ToString("yyyy-MM-dd") + "'"

            Else
                lblAlertServicePrint.Text = "ENTER SERVICE TO DATE"
                mdlPopupServicesPrint.Show()
                Return
            End If

            SqlDSServicesPrint.SelectCommand = qry
            SqlDSServicesPrint.DataBind()
            grdViewServicesPrint.DataBind()
            '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step2", txtContractNo.Text)
            '   lblAlertServicePrint.Text = qry

            mdlPopupServicesPrint.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSearchDatePrint_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub ddlOnHoldCodeChSt_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlOnHoldCodeChSt.SelectedIndexChanged
        Try
            If ddlOnHoldCodeChSt.SelectedIndex > 0 Then
                Dim hyphenpos As Integer
                hyphenpos = 0
                hyphenpos = (ddlOnHoldCodeChSt.Text.IndexOf(":"))

                Dim OnHoldCode As String
                OnHoldCode = Left(ddlOnHoldCodeChSt.Text, (hyphenpos - 1))
                txtOnHoldDscriptionChSt.Text = Right(ddlOnHoldCodeChSt.Text, Len(ddlOnHoldCodeChSt.Text) - (Len(OnHoldCode.Trim) + 3))
                ModalPopupExtender5.Show()

                ddlOnHoldCodeChSt.Enabled = True
                txtOnHoldCommentsChSt.Enabled = True
                'ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                'txtOnHoldCommentsChSt.Attributes.Remove("disabled")

                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> statuschange();</Script>", False)

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlOnHoldCodeChSt_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub txtActualEndChSt_TextChanged(sender As Object, e As EventArgs) Handles txtActualEndChSt.TextChanged
        Try


            If txtIsPopupChSt.Text = "ContractNo" Then
                txtAlertStatus.Text = ""
                txtAlertStatus.Visible = False

                If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then '22.06.22
                Else
                    If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Or Left(ddlStatusChSt.Text, 1) = "R" Or Left(ddlStatusChSt.Text, 1) = "V" Then

                        If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                            If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                                If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "Effective Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                                    txtActualEndChSt.Text = ""
                                    ddlStatusChSt.SelectedIndex = 0
                                    ModalPopupExtender5.Show()
                                    Exit Sub
                                End If
                            End If
                        End If
                    End If
                End If



                If Left(ddlStatusChSt.Text, 1) = "V" Then

                    If Convert.ToDateTime(txtContractDate.Text).ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And Convert.ToDateTime(txtContractDate.Text).ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then  '5
                    Else
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "'VOID DATE' SHOULD BE WITHIN THE SAME MONTH AS THE 'CONTRACT DATE'"
                        txtActualEndChSt.Text = ""
                        ddlStatusChSt.SelectedIndex = 0
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If


                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") <> Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "'VOID Date' should be same as Contract Start Date"
                        txtActualEndChSt.Text = ""
                        ddlStatusChSt.SelectedIndex = 0
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If

                    'Dim CurrentYear, currentmonth As String
                    'CurrentYear = DateTime.Now.Year.ToString()
                    'currentmonth = DateTime.Now.Month.ToString()

                    'If Year(txtActualEndChSt.Text) = CurrentYear And Month(txtActualEndChSt.Text) <> currentmonth Then

                    '    txtAlertStatus.Visible = True
                    '    txtAlertStatus.Text = "ACTUAL END DATE SHOULD BE WITHIN CURRENT MONTH TO VOID CONTRACT"
                    '    txtActualEndChSt.Text = ""
                    '    ModalPopupExtender5.Show()
                    '    Exit Sub
                    'End If



                    Dim sqlstr As String
                    sqlstr = ""

                    'sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"
                    sqlstr = "SELECT SvcLock, ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                    Dim commandLocked As MySqlCommand = New MySqlCommand

                    Dim connLocked As MySqlConnection = New MySqlConnection()
                    connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connLocked.Open()

                    commandLocked.CommandType = CommandType.Text
                    commandLocked.CommandText = sqlstr
                    commandLocked.Connection = connLocked

                    Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
                    Dim dtLocked As New DataTable
                    dtLocked.Load(drLocked)

                    If dtLocked.Rows.Count > 0 Then
                        If dtLocked.Rows(0)("ContractLock").ToString = "Y" Then
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "CONTRACT PERIOD IS LOCKED FOR THIS DATE"
                            txtActualEndChSt.Text = ""
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    End If

                    connLocked.Close()
                    connLocked.Dispose()
                    commandLocked.Dispose()
                    drLocked.Close()
                End If



                If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Or Left(ddlStatusChSt.Text, 1) = "R" Then
                    Dim sqlstr As String
                    sqlstr = ""

                    'sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"
                    sqlstr = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                    Dim commandLocked As MySqlCommand = New MySqlCommand

                    Dim connLocked As MySqlConnection = New MySqlConnection()
                    connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connLocked.Open()

                    commandLocked.CommandType = CommandType.Text
                    commandLocked.CommandText = sqlstr
                    commandLocked.Connection = connLocked

                    Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
                    Dim dtLocked As New DataTable
                    dtLocked.Load(drLocked)

                    If dtLocked.Rows.Count > 0 Then
                        If dtLocked.Rows(0)("ContractLock").ToString = "Y" Then
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "CONTRACT PERIOD IS LOCKED FOR THIS DATE"
                            txtActualEndChSt.Text = ""
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    End If

                    connLocked.Close()
                    connLocked.Dispose()
                    commandLocked.Dispose()
                    drLocked.Close()
                End If

                'End: Check for Service Lock


                '09.01.22


                ''Start:Check for Last date in tblcontractpricehistory


                If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Or Left(ddlStatusChSt.Text, 1) = "R" Then

                    If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "Selected Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                                txtActualEndChSt.Text = ""
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                                Exit Sub
                            End If
                        End If
                    End If

                End If

                'End: Check for Last date in tblcontractpricehistory

                '09.01.22

                '15.06.21

                If Left(txtStatus.Text, 1) = "T" And Left(ddlStatusChSt.Text, 1) = "T" Then
                    '''

                    If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then

                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtActualEnd.Text.Trim) Then
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "Selected Date cannot be later than Actual End Date " & txtActualEnd.Text
                                txtActualEndChSt.Text = ""
                                ModalPopupExtender5.Show()
                                Exit Sub
                            End If
                        End If
                    End If

                    'sqlstr = "SELECT count(ContractNo) as TerminateCount1 FROM tblcontractpricehistory where ContractNo = '" & txtContractNo.Text & "' and Type='TERMINATION' and VOID = false"

                    'Dim commandIsRecordInContractPriceHistory1 As MySqlCommand = New MySqlCommand

                    'Dim connIsRecordInContractPriceHistory1 As MySqlConnection = New MySqlConnection()
                    'connIsRecordInContractPriceHistory1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'connIsRecordInContractPriceHistory1.Open()

                    'commandIsRecordInContractPriceHistory1.CommandType = CommandType.Text
                    'commandIsRecordInContractPriceHistory1.CommandText = sqlstr
                    'commandIsRecordInContractPriceHistory1.Connection = connIsRecordInContractPriceHistory1

                    'Dim drIsRecordInContractPriceHistory1 As MySqlDataReader = commandIsRecordInContractPriceHistory1.ExecuteReader()
                    'Dim dtIsRecordInContractPriceHistory1 As New DataTable
                    'dtIsRecordInContractPriceHistory1.Load(drIsRecordInContractPriceHistory1)

                    'If dtIsRecordInContractPriceHistory1.Rows.Count > 0 Then
                    '    If dtIsRecordInContractPriceHistory1.Rows(0)("TerminateCount1").ToString > 0 Then
                    txtIsTerminationExists.Text = "YV"
                    '    End If
                    'End If
                End If

                '15.06.21
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                        txtActualEndChSt.Text = ""
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If
                End If


                'If txtStatus.Text = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
                '    GoTo bypassenddatevalidation
                'End If
                'Else

                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                        If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                            txtActualEndChSt.Text = ""
                            ModalPopupExtender5.Show()
                            Exit Sub
                        End If
                    End If
                End If

                txtFirstDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day + 1)
                txtLastDate.Text = DateTime.Today.AddDays(-DateTime.Today.Day)
                txtLastDate.Text = Convert.ToDateTime(txtLastDate.Text).AddMonths(1)

                'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1

                If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "H" Then
                    If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                        If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then


                            'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtFirstDate.Text) Then  '1
                                FindBackDateContractTermination()
                                If txtBackDateContractTerminationSetup.Text = False Then                       '2
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow BACK dated Contract termination."
                                    txtActualEndChSt.Text = ""
                                    ModalPopupExtender5.Show()
                                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                    Exit Sub
                                Else
                                    If txtBackDateContractTermination.Text = False Then   '3
                                        txtAlertStatus.Visible = True
                                        txtAlertStatus.Text = "This user account is not allowed for BACK dated Contract termination"
                                        txtActualEndChSt.Text = ""
                                        ModalPopupExtender5.Show()

                                    End If  '3
                                End If  '2
                            ElseIf Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtLastDate.Text) Then  '1
                                If txtFutureDateContractTermination.Text = False Then
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "This user account is not allowed to enter FUTURE dated Contract termination"
                                    txtActualEndChSt.Text = ""
                                    ModalPopupExtender5.Show()
                                    Exit Sub
                                End If
                            Else
                                If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "This user account is not allowed for SAME month Contract termination"
                                    txtActualEndChSt.Text = ""
                                    ModalPopupExtender5.Show()
                                    Exit Sub
                                End If
                            End If      '1

                            ''If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                            'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1
                            '    FindBackDateContractTermination()
                            '    If txtBackDateContractTerminationSetup.Text = False Then                       '2
                            '        txtAlertStatus.Visible = True
                            '        txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract termination."
                            '        ModalPopupExtender5.Show()
                            '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            '        Exit Sub
                            '    Else
                            '        If txtBackDateContractTermination.Text = True Then   '3
                            '            'GoTo proceedcontracttermination
                            '        ElseIf txtBackDateContractTermination.Text = False Then

                            '            If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                            '                txtAlertStatus.Visible = True
                            '                txtAlertStatus.Text = "This user account is not allowed to enter different month Contract termination"
                            '                ModalPopupExtender5.Show()

                            '                Exit Sub
                            '            ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                            '                If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then  '5
                            '                Else
                            '                    txtAlertStatus.Visible = True
                            '                    txtAlertStatus.Text = "This user account is restricted to enter different month Contract termination"
                            '                    ModalPopupExtender5.Show()

                            '                    Exit Sub
                            '                End If '5
                            '            End If '4
                            '        End If  '3
                            '    End If  '2
                            'End If      '1



                            'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                            '    If txtFutureDateContractTermination.Text = True Then   '3
                            '        'GoTo proceedcontracttermination
                            '    ElseIf txtFutureDateContractTermination.Text = False Then
                            '        txtAlertStatus.Visible = True
                            '        txtAlertStatus.Text = "This user account is not allowed to enter future dated Contract termination"
                            '        ModalPopupExtender5.Show()
                            '        Exit Sub
                            '    End If  '3
                            'End If      '1




                        End If '  If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then
                    End If ' If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                End If 'If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "H" Then



                ''''''''' Start: Modification 01.11.20


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim commandMaxDateService As MySqlCommand = New MySqlCommand

                commandMaxDateService.CommandType = CommandType.Text
                commandMaxDateService.CommandText = "SELECT max(ServiceDate) as MaxServiceDate from tblServiceRecord where ContractNo= '" & txtContractNo.Text & "' and Status ='P'"
                commandMaxDateService.Connection = conn

                Dim drMaxDateService As MySqlDataReader = commandMaxDateService.ExecuteReader()
                Dim dtMaxDateService As New DataTable
                dtMaxDateService.Load(drMaxDateService)

                'If IsDate(Convert.ToDateTime(dtMaxDateService.Rows(0)("MaxServiceDate")).ToString("yyyy-MM-dd")) = True Then
                If IsDBNull((dtMaxDateService.Rows(0)("MaxServiceDate"))) = False Then
                    If Convert.ToDateTime(dtMaxDateService.Rows(0)("MaxServiceDate")).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        If txtAllowTerminationBeforeLastService.Text = False Then
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "Actual End should be later than Last Service Date (" & Convert.ToDateTime(dtMaxDateService.Rows(0)("MaxServiceDate")).ToString("dd/MM/yyyy") & ") for the Contract"
                            txtActualEndChSt.Text = ""
                            conn.Close()
                            conn.Dispose()
                        End If

                    End If
                End If

                conn.Close()
                conn.Dispose()
                commandMaxDateService.Dispose()
                dtMaxDateService.Dispose()
                dtMaxDateService.Dispose()
                'End If

                ''End: Modification 01.11.20
                '''''''''''''''''''
            End If

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            txtAlertStatus.Visible = True
            txtAlertStatus.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtActualEndChSt_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub btnHistory_Click(sender As Object, e As EventArgs) Handles btnHistory.Click
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            LabelContractPriceHistory.Visible = False
            LabelContractPriceHistory.Text = ""

            'Dim btn1 As Button = DirectCast(sender, Button)

            'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            'Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            'Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            'txtRcno.Text = lblidRcno
            'RetrieveData()

            'GridView1.SelectedIndex = rowindex1

            'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
            'Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
            'txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString
            chkShowVoidRcords.Checked = False
            txtAgreeValuePH.Text = txtAgreeVal.Text

            txtContractStartPH.Text = txtContractStart.Text
            txtContractEndPH.Text = txtContractEnd.Text

            '18.12.22

            ''Start:Check for Service Lock

            Dim sqlstrLocked As String
            sqlstrLocked = ""

            sqlstrLocked = "SELECT sum(ChangeInAgreedValue) as TotalPriceChange FROM tblcontractPriceHistory where ContractNo ='" & txtContractNo.Text & "' and Void = False"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim connLocked As MySqlConnection = New MySqlConnection()
            connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocked.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstrLocked
            commandLocked.Connection = connLocked

            Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dtLocked As New DataTable
            dtLocked.Load(drLocked)
            'txtRemarks.Text = CdtLocked.Rows(0)("TotalPriceChange").ToString("N2"))
            'Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text) * 0.01)).ToString("N2")
            'txtRemarks.Text = Convert.ToDecimal(dtLocked.Rows(0)("TotalPriceChange")).ToString("N2")
            'txtRemarks.Text = Convert.ToDecimal(txtAgreeVal.Text).ToString("N2")
            If dtLocked.Rows.Count > 0 Then
                If Left(txtStatus.Text, 1) = "T" Or Left(txtStatus.Text, 1) = "C" Then
                Else

                    If Convert.ToDecimal(dtLocked.Rows(0)("TotalPriceChange")).ToString("N2") <> Convert.ToDecimal(txtAgreeVal.Text).ToString("N2") Then
                        LabelContractPriceHistory.Visible = True
                        LabelContractPriceHistory.Text = "ERROR: The Agreed Value " & txtAgreeVal.Text & " is not equal to the Total Value of Contract Groups " & dtLocked.Rows(0)("TotalPriceChange").ToString
                    End If
                End If

            End If

            connLocked.Close()
            connLocked.Dispose()
            commandLocked.Dispose()
            drLocked.Close()

            'End: Check for Service Lock


            '18.12.22

            'SqlDSViewPriceHistory.SelectCommand = "Select a.ContractNo, a.Date, a.OldAgreedValue,a.NewAgreedValue, a.ChangeInAgreedValue, a.PortfolioValueChange,a.PercentChange, a.Type, a.Comments, a.Void,  a.PriceModifiedBy, a.ModifiedOn, a.ContractGroup from tblcontractpricehistory a, tblContract b where a.ContractNo = b.ContractNo and  a.ContractNo = '" & txtContractNo.Text & "' and a.Void = False order by  a.date, a.ModifiedOn"
            SqlDSViewPriceHistory.SelectCommand = "Select a.ContractNo, a.Date, a.OldAgreedValue,a.NewAgreedValue, a.ChangeInAgreedValue, a.PortfolioValueChange,a.PercentChange, a.Type, a.SubType, a.Comments, a.Void,  a.PriceModifiedBy, a.ModifiedOn, a.ContractGroup, a.RefRcno, a.ServiceDescription from tblcontractpricehistory a where a.ContractNo = '" & txtContractNo.Text & "' and a.Void = False order by  a.date, a.ModifiedOn"

            SqlDSViewPriceHistory.DataBind()

            grdViewPriceHistory.DataSourceID = "SqlDSViewPriceHistory"
            grdViewPriceHistory.DataBind()



            SqlDSViewPriceHistory0.SelectCommand = "Select a.ContractGroup, sum(a.ChangeInAgreedValue) as TotalPriceChange from tblcontractpricehistory a where a.ContractNo = '" & txtContractNo.Text & "' and a.Void = False group by a.ContractGroup order by  a.ContractGroup"
            SqlDSViewPriceHistory0.DataBind()

            grdViewPriceHistory0.DataSourceID = "SqlDSViewPriceHistory0"
            grdViewPriceHistory0.DataBind()

            mdlViewContractPriceHistory.Show()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnHistory_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    ''''''

    'Private Sub GridViewRowServiceRecsAgreeValueEdit()
    '    Try
    '        Dim dt As New DataTable()
    '        Dim dr As DataRow = Nothing
    '        'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

    '        dt.Columns.Add(New DataColumn("SelRec", GetType(String)))
    '        dt.Columns.Add(New DataColumn("ClientName", GetType(String)))
    '        dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))
    '        dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
    '        dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
    '        dt.Columns.Add(New DataColumn("ToBillAmt", GetType(String)))
    '        dt.Columns.Add(New DataColumn("NewBillAmt", GetType(String)))
    '        dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
    '        dr = dt.NewRow()

    '        dr("SelRec") = String.Empty
    '        dr("ClientName") = String.Empty
    '        dr("ServiceRecordNo") = String.Empty
    '        dr("ServiceDate") = String.Empty
    '        dr("LocationId") = String.Empty
    '        dr("ToBillAmt") = 0
    '        dr("NewBillAmt") = 0

    '        dr("RcnoServiceRecord") = 0
    '        dt.Rows.Add(dr)

    '        ViewState("CurrentTableServiceRecAgreeValueEdit") = dt

    '        grvServiceRecDetailsAgreeValueEdit.DataSource = dt
    '        grvServiceRecDetailsAgreeValueEdit.DataBind()

    '        'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
    '        'Page.Form.DefaultFocus = btnAdd.ClientID

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Private Sub AddNewRowServiceRecsAgreeValueEdit()
    '    Try
    '        Dim rowIndex As Integer = 0
    '        'Dim Query As String

    '        If ViewState("CurrentTableServiceRecAgreeValueEdit") IsNot Nothing Then
    '            Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRecAgreeValueEdit"), DataTable)
    '            Dim drCurrentRow As DataRow = Nothing
    '            If dtCurrentTable.Rows.Count > 0 Then
    '                For i As Integer = 1 To dtCurrentTable.Rows.Count

    '                    Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
    '                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
    '                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
    '                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
    '                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(6).FindControl("txtToBillAmtGV"), TextBox)
    '                    Dim TextBoxNewBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(7).FindControl("txtNewBillAmtGV"), TextBox)

    '                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)


    '                    drCurrentRow = dtCurrentTable.NewRow()


    '                    dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
    '                    dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
    '                    dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
    '                    dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("NewBillAmt") = TextBoxNewBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

    '                    'If TextBoxStatus.Text = "P" Then
    '                    '    TextBoxStatus.ForeColor = Color.Blue
    '                    '    TextBoxAccountId.ForeColor = Color.Blue
    '                    '    TextBoxClientName.ForeColor = Color.Blue
    '                    '    TextBoxServiceRecordNo.ForeColor = Color.Blue
    '                    '    TextBoxServiceDate.ForeColor = Color.Blue
    '                    '    TextBoxBillingFrequency.ForeColor = Color.Blue
    '                    '    TextBoxLocationId.ForeColor = Color.Blue
    '                    '    TextBoxServiceAddress.ForeColor = Color.Blue
    '                    '    TextBoxToBillAmt.ForeColor = Color.Blue
    '                    '    TextBoxContractNo.ForeColor = Color.Blue
    '                    '    TextBoxDept.ForeColor = Color.Blue
    '                    'End If

    '                    rowIndex += 1

    '                Next i
    '                dtCurrentTable.Rows.Add(drCurrentRow)
    '                ViewState("CurrentTableServiceRecAgreeValueEdit") = dtCurrentTable

    '                grvServiceRecDetailsAgreeValueEdit.DataSource = dtCurrentTable
    '                grvServiceRecDetailsAgreeValueEdit.DataBind()



    '            End If
    '            dtCurrentTable.Dispose()
    '        Else
    '            Response.Write("ViewState is null")
    '        End If
    '        SetPreviousDataServiceRecsAgreeValueEdit()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub


    'Private Sub AddNewRowWithDetailRecServiceRecsAgreeValueEdit()
    '    Try
    '        Dim rowIndex As Integer = 0
    '        'Dim Query As String
    '        If ViewState("CurrentTableServiceRecAgreeValueEdit") IsNot Nothing Then
    '            Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRecAgreeValueEdit"), DataTable)
    '            Dim drCurrentRow As DataRow = Nothing
    '            If TotDetailRecords > 0 Then
    '                For i As Integer = 1 To (dtCurrentTable.Rows.Count)

    '                    Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
    '                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
    '                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
    '                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
    '                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(6).FindControl("txtToBillAmtGV"), TextBox)
    '                    Dim TextBoxNewBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(7).FindControl("txtNewBillAmtGV"), TextBox)

    '                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)



    '                    drCurrentRow = dtCurrentTable.NewRow()

    '                    dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
    '                    dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
    '                    dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
    '                    dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("NewBillAmt") = TextBoxNewBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

    '                    rowIndex += 1

    '                Next i
    '                dtCurrentTable.Rows.Add(drCurrentRow)
    '                ViewState("CurrentTableServiceRecAgreeValueEdit") = dtCurrentTable

    '                grvServiceRecDetails.DataSource = dtCurrentTable
    '                grvServiceRecDetails.DataBind()



    '            End If

    '            dtCurrentTable.Dispose()
    '        Else
    '            Response.Write("ViewState is null")
    '        End If
    '        SetPreviousDataServiceRecsAgreeValueEdit()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Private Sub SetPreviousDataServiceRecsAgreeValueEdit()
    '    Try
    '        Dim rowIndex As Integer = 0

    '        'Dim Query As String

    '        If ViewState("CurrentTableServiceRecAgreeValueEdit") IsNot Nothing Then
    '            Dim dt As DataTable = CType(ViewState("CurrentTableServiceRecAgreeValueEdit"), DataTable)
    '            If dt.Rows.Count > 0 Then
    '                For i As Integer = 0 To dt.Rows.Count - 1

    '                    Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
    '                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
    '                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
    '                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
    '                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(6).FindControl("txtToBillAmtGV"), TextBox)
    '                    Dim TextBoxNewBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(7).FindControl("txtNewBillAmtGV"), TextBox)

    '                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)

    '                    TextBoxSelect.Text = dt.Rows(i)("SelRec").ToString()
    '                    TextBoxClientName.Text = dt.Rows(i)("ClientName").ToString()
    '                    TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()
    '                    TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
    '                    TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
    '                    TextBoxToBillAmt.Text = dt.Rows(i)("ToBillAmt").ToString()
    '                    TextBoxNewBillAmt.Text = dt.Rows(i)("NewBillAmt").ToString()

    '                    TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()

    '                    'If TextBoxStatus.Text = "P" Then
    '                    '    TextBoxStatus.ForeColor = Color.Blue
    '                    '    TextBoxAccountId.ForeColor = Color.Blue
    '                    '    TextBoxClientName.ForeColor = Color.Blue
    '                    '    TextBoxServiceRecordNo.ForeColor = Color.Blue
    '                    '    TextBoxServiceDate.ForeColor = Color.Blue
    '                    '    TextBoxBillingFrequency.ForeColor = Color.Blue
    '                    '    TextBoxLocationId.ForeColor = Color.Blue
    '                    '    TextBoxServiceAddress.ForeColor = Color.Blue
    '                    '    TextBoxToBillAmt.ForeColor = Color.Blue
    '                    '    TextBoxContractNo.ForeColor = Color.Blue
    '                    '    TextBoxDept.ForeColor = Color.Blue
    '                    'End If

    '                    rowIndex += 1
    '                Next i
    '            End If
    '            dt.Dispose()
    '        End If
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Private Sub SetRowDataServiceRecs()
    '    Dim rowIndex As Integer = 0
    '    Try
    '        If ViewState("CurrentTableServiceRecAgreeValueEdit") IsNot Nothing Then
    '            Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRecAgreeValueEdit"), DataTable)
    '            Dim drCurrentRow As DataRow = Nothing
    '            If dtCurrentTable.Rows.Count > 0 Then
    '                For i As Integer = 1 To dtCurrentTable.Rows.Count

    '                    Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
    '                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
    '                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
    '                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
    '                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(6).FindControl("txtToBillAmtGV"), TextBox)
    '                    Dim TextBoxNewBillAmt As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(7).FindControl("txtNewBillAmtGV"), TextBox)

    '                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetailsAgreeValueEdit.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)


    '                    drCurrentRow = dtCurrentTable.NewRow()


    '                    dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
    '                    dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
    '                    dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
    '                    dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
    '                    dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("NewBillAmt") = TextBoxNewBillAmt.Text
    '                    dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

    '                    rowIndex += 1
    '                Next i

    '                ViewState("CurrentTableServiceRec") = dtCurrentTable
    '                dtCurrentTable.Dispose()

    '            End If
    '        Else
    '            Response.Write("ViewState is null")
    '        End If
    '        SetPreviousDataServiceRecs()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try

    'End Sub

    'End: Serice Record Grid


    ''''''

    Protected Sub txtPercentageChangeAgreeValueEdit_TextChanged(sender As Object, e As EventArgs) Handles txtPercentageChangeAgreeValueEdit.TextChanged
        Try
            'btnAgreeValueSave.Enabled = True
            'btnAgreeValueSave.ForeColor = Color.Black

            lblAlertEditAgreeValue.Text = ""
            lblTotalRecords.Text = ""

            If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = True Then
                txtPercentageChangeAgreeValueEdit.Text = 0.0
                txtNewValue.Text = 0.0
                lblAlertEditAgreeValue.Text = "Please Enter Effective Date first"
                txtPercentageChangeAgreeValueEdit.Text = ""
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            Dim CurrentYear, currentmonth As String
            CurrentYear = DateTime.Now.Year.ToString()
            currentmonth = DateTime.Now.Month.ToString()


            If Year(txtEffectiveDate.Text) = CurrentYear And Month(txtEffectiveDate.Text) < currentmonth Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                SqlDSServicesAgreeValueEdit.SelectCommand = ""

                grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                grvServiceRecAgreeValueEdit.DataBind()
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If Year(txtEffectiveDate.Text) < CurrentYear Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                SqlDSServicesAgreeValueEdit.SelectCommand = ""

                grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                grvServiceRecAgreeValueEdit.DataBind()
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtPercentageChangeAgreeValueEdit.Text.Trim) = True Then
                txtPercentageChangeAgreeValueEdit.Text = 0.0
                mdlPopupAgreeValue.Show()
                'Exit Sub
            End If

            If Convert.ToDecimal(txtPriceDecreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text) < Convert.ToDecimal(txtPriceDecreaseLimit.Text) Then
                    txtPercentageChangeAgreeValueEdit.Text = 0.0
                    txtNewValue.Text = 0.0
                    lblAlertEditAgreeValue.Text = "Price Decrease Cannot Exceed the Limit of " & txtPriceDecreaseLimit.Text & " %"

                    txtAgreeValueEdit.Text = 0
                    txtPercentageChangeAgreeValueEdit.Text = 0
                    txtNewValue.Text = 0

                    SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    'btnAgreeValueSave.Enabled = False
                    'btnAgreeValueSave.ForeColor = Color.Gray
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If Convert.ToDecimal(txtPriceIncreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text) > Convert.ToDecimal(txtPriceIncreaseLimit.Text) Then
                    txtPercentageChangeAgreeValueEdit.Text = 0.0
                    txtNewValue.Text = 0.0
                    lblAlertEditAgreeValue.Text = "Price Increase Cannot Exceed the Limit of " & txtPriceIncreaseLimit.Text & " %"

                    txtAgreeValueEdit.Text = 0
                    txtPercentageChangeAgreeValueEdit.Text = 0
                    txtNewValue.Text = 0

                    SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    'btnAgreeValueSave.Enabled = False
                    'btnAgreeValueSave.ForeColor = Color.Gray
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If



            txtEditAgreeValuePercChange.Text = txtPercentageChangeAgreeValueEdit.Text

            txtNewValue.Text = (Convert.ToDecimal(txtAgreeVal.Text) + (Convert.ToDecimal(txtAgreeVal.Text) * Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text) * 0.01)).ToString("N2")


            Dim sqlstr As String
            lblAlertEditAgreeValue.Text = ""
            sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "' and ((status ='O') or (status ='H')) and Servicedate >= '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "'"
            SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

            grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
            grvServiceRecAgreeValueEdit.DataBind()

            lblTotalRecords.Text = grvServiceRecAgreeValueEdit.Rows.Count & " Records Found"
            'mdlPopupAgreeValue.Show()

            For rowIndex As Integer = 0 To grvServiceRecAgreeValueEdit.Rows.Count - 1

                Dim lblid13 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                Dim lblid14 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtNewBillAmtGV"), TextBox)
                Dim lblid27 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)

                lblid14.Text = (Convert.ToDecimal(lblid13.Text) + (Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01)).ToString("N2")

            Next rowIndex

            mdlPopupAgreeValue.Show()
            grvServiceRecAgreeValueEdit.Visible = True

        Catch ex As Exception
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPercentageChangeAgreeValueEdit_TextChanged", ex.Message.ToString, "")
            mdlPopupAgreeValue.Show()
        End Try
    End Sub

    Protected Sub rdbPercentageChange_CheckedChanged(sender As Object, e As EventArgs) Handles rdbPercentageChange.CheckedChanged
        Try
            'Dim sqlstr As String
            'lblAlertEditAgreeValue.Text = ""
            'sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "'"
            'SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

            'grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
            'grvServiceRecAgreeValueEdit.DataBind()
            lblAlertEditAgreeValue.Text = ""
            txtPercentageChangeAgreeValueEdit.Enabled = True
            txtAgreeValueEdit.Text = ""
            txtAgreeValueEdit.Enabled = False
            txtPercentageChangeAgreeValueEdit.Focus()
            mdlPopupAgreeValue.Show()

        Catch ex As Exception
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "rdbPercentageChange_CheckedChanged", ex.Message.ToString, "")
            mdlPopupAgreeValue.Show()
        End Try
    End Sub

    Protected Sub txtAgreeValueEdit_TextChanged(sender As Object, e As EventArgs) Handles txtAgreeValueEdit.TextChanged
        Try
            'txtEditAgreeValuePercChange.Text = txtPercentageChangeAgreeValueEdit.Text
            lblAlertEditAgreeValue.Text = ""
            lblTotalRecords.Text = ""

            If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = True Then
                lblAlertEditAgreeValue.Text = "Please Enter Effective Date first"
                txtAgreeValueEdit.Text = ""

                mdlPopupAgreeValue.Show()
                Exit Sub
            End If


            Dim CurrentYear, currentmonth As String
            CurrentYear = DateTime.Now.Year.ToString()
            currentmonth = DateTime.Now.Month.ToString()


            If Year(txtEffectiveDate.Text) = CurrentYear And Month(txtEffectiveDate.Text) < currentmonth Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                SqlDSServicesAgreeValueEdit.SelectCommand = ""

                grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                grvServiceRecAgreeValueEdit.DataBind()
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If Year(txtEffectiveDate.Text) < CurrentYear Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                SqlDSServicesAgreeValueEdit.SelectCommand = ""

                grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                grvServiceRecAgreeValueEdit.DataBind()
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If


            If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
                txtEditAgreeValuePercChange.Text = ((txtAgreeValueEdit.Text) / 1) * 100
            Else
                txtEditAgreeValuePercChange.Text = ((txtAgreeValueEdit.Text - txtAgreeVal.Text) / txtAgreeVal.Text) * 100
            End If


            If Convert.ToDecimal(txtPriceDecreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtEditAgreeValuePercChange.Text) < Convert.ToDecimal(txtPriceDecreaseLimit.Text) Then
                    txtEditAgreeValuePercChange.Text = 0.0
                    txtAgreeValueEdit.Text = 0.0
                    txtNewValue.Text = 0.0
                    lblAlertEditAgreeValue.Text = "Price Decrease Cannot Exceed the Limit of " & txtPriceDecreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text

                    txtAgreeValueEdit.Text = 0
                    txtPercentageChangeAgreeValueEdit.Text = 0
                    txtNewValue.Text = 0

                    SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    'btnAgreeValueSave.Enabled = False
                    'btnAgreeValueSave.ForeColor = Color.Gray
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If Convert.ToDecimal(txtPriceIncreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtEditAgreeValuePercChange.Text) > Convert.ToDecimal(txtPriceIncreaseLimit.Text) Then
                    txtEditAgreeValuePercChange.Text = 0.0
                    txtNewValue.Text = 0.0
                    txtAgreeValueEdit.Text = 0.0
                    lblAlertEditAgreeValue.Text = "Price Increase Cannot Exceed the Limit of " & txtPriceIncreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text

                    txtAgreeValueEdit.Text = 0
                    txtPercentageChangeAgreeValueEdit.Text = 0
                    txtNewValue.Text = 0

                    SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    'btnAgreeValueSave.Enabled = False
                    'btnAgreeValueSave.ForeColor = Color.Gray
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If


            Dim sqlstr As String
            lblAlertEditAgreeValue.Text = ""
            sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "' and ((status ='O') or (status ='H')) and Servicedate >= '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "'"
            SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

            grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
            grvServiceRecAgreeValueEdit.DataBind()

            lblTotalRecords.Text = grvServiceRecAgreeValueEdit.Rows.Count & " Records Found"
            'mdlPopupAgreeValue.Show()

            For rowIndex As Integer = 0 To grvServiceRecAgreeValueEdit.Rows.Count - 1

                Dim lblid13 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                Dim lblid14 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtNewBillAmtGV"), TextBox)
                Dim lblid27 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)


                If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
                    lblid14.Text = (Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01).ToString("N2")
                Else
                    lblid14.Text = (Convert.ToDecimal(lblid13.Text) + (Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01)).ToString("N2")
                End If
            Next rowIndex

            grvServiceRecAgreeValueEdit.Visible = True
            mdlPopupAgreeValue.Show()

        Catch ex As Exception
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtAgreeValueEdit_TextChanged", ex.Message.ToString, "")
            mdlPopupAgreeValue.Show()
        End Try
    End Sub

    Protected Sub rdbFixedValueChange_CheckedChanged(sender As Object, e As EventArgs) Handles rdbFixedValueChange.CheckedChanged
        Try
            lblAlertEditAgreeValue.Text = ""
            txtPercentageChangeAgreeValueEdit.Enabled = False
            txtPercentageChangeAgreeValueEdit.Text = ""
            txtNewValue.Text = ""

            txtAgreeValueEdit.Enabled = True
            txtAgreeValueEdit.Focus()
            mdlPopupAgreeValue.Show()
        Catch ex As Exception
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "rdbFixedValueChange_CheckedChanged", ex.Message.ToString, "")
            mdlPopupAgreeValue.Show()
        End Try
    End Sub

    Protected Sub txtEffectiveDate_TextChanged(sender As Object, e As EventArgs) Handles txtEffectiveDate.TextChanged
        Try
            lblAlertEditAgreeValue.Text = ""
            lblTotalRecords.Text = ""

            ''
            'Quoted on 04.05.20

            If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = False Then
                If Convert.ToDateTime(txtEffectiveDate.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                    ''txtAlertStatus.Visible = True
                    lblAlertEditAgreeValue.Text = "Effective Date cannot be earlier than Contract Start Date " & txtContractStart.Text

                    txtEffectiveDate.Text = ""
                    txtAgreeValueEdit.Text = 0
                    txtPercentageChangeAgreeValueEdit.Text = 0
                    txtNewValue.Text = 0

                    SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()
                    mdlPopupAgreeValue.Show()
                    Exit Sub

                    'mdlPopupAgreeValue.Show()
                    'Exit Sub
                End If
            End If

            'Quoted on 04.05.20

            '13.12.20


            ''Start:Check for Service Lock

            'If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Then
            Dim sqlstrLocked As String
            sqlstrLocked = ""

            sqlstrLocked = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim connLocked As MySqlConnection = New MySqlConnection()
            connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocked.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstrLocked
            commandLocked.Connection = connLocked

            Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dtLocked As New DataTable
            dtLocked.Load(drLocked)

            If dtLocked.Rows.Count > 0 Then
                If dtLocked.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlertEditAgreeValue.Visible = True
                    lblAlertEditAgreeValue.Text = "Service Period is Locked for this Date"
                    txtEffectiveDate.Text = ""
                    mdlPopupAgreeValue.Show()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
            End If

            connLocked.Close()
            connLocked.Dispose()
            commandLocked.Dispose()
            drLocked.Close()
            'End If

            'End: Check for Service Lock

            '13.12.20

            If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then '22.06.22
            Else
                If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtEffectiveDate.Text.Trim) = False Then
                        If Convert.ToDateTime(txtEffectiveDate.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                            ''txtAlertStatus.Visible = True
                            lblAlertEditAgreeValue.Text = "Effective Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                            txtEffectiveDate.Text = ""
                            txtAgreeValueEdit.Text = 0
                            txtPercentageChangeAgreeValueEdit.Text = 0
                            txtNewValue.Text = 0

                            SqlDSServicesAgreeValueEdit.SelectCommand = ""

                            grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                            grvServiceRecAgreeValueEdit.DataBind()
                            mdlPopupAgreeValue.Show()
                            Exit Sub
                        End If
                    End If
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtEffectiveDate.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                    'txtAlertStatus.Visible = True
                    lblAlertEditAgreeValue.Text = "Effective Date cannot be later than Contract End Date " & txtContractEnd.Text
                    txtEffectiveDate.Text = ""
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            Else
                If Convert.ToDateTime(txtEffectiveDate.Text.Trim) > Convert.ToDateTime(txtEndofLastSchedule.Text.Trim) Then
                    'txtAlertStatus.Visible = True
                    lblAlertEditAgreeValue.Text = "Effective Date cannot be later than Contract End Date " & txtEndofLastSchedule.Text
                    txtEffectiveDate.Text = ""
                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            'txtNoofMonth.Text = (Year(txtEndofLastSchedule.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtEndofLastSchedule.Text) - Month(txtContractStart.Text))
            Dim CurrentYear, currentmonth As String
            CurrentYear = DateTime.Now.Year.ToString()
            currentmonth = DateTime.Now.Month.ToString()


            If Year(txtEffectiveDate.Text) = CurrentYear And Month(txtEffectiveDate.Text) < currentmonth Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If

            If Year(txtEffectiveDate.Text) < CurrentYear Then
                lblAlertEditAgreeValue.Text = "Effective Date should be within current month "
                txtEffectiveDate.Text = ""
                mdlPopupAgreeValue.Show()
                Exit Sub
            End If


            'UpdateGrid()

            If String.IsNullOrEmpty(txtAgreeValueEdit.Text) = False Then
                If Convert.ToDecimal(txtAgreeValueEdit.Text) <> 0.0 Then


                    Dim sqlstr As String
                    lblAlertEditAgreeValue.Text = ""
                    sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "' and ((status ='O') or (status ='H')) and Servicedate >= '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "'"
                    SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    lblTotalRecords.Text = grvServiceRecAgreeValueEdit.Rows.Count & " Records Found"

                    For rowIndex As Integer = 0 To grvServiceRecAgreeValueEdit.Rows.Count - 1

                        Dim lblid13 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim lblid14 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtNewBillAmtGV"), TextBox)
                        Dim lblid27 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)


                        If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
                            lblid14.Text = (Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01).ToString("N2")
                        Else
                            lblid14.Text = (Convert.ToDecimal(lblid13.Text) + (Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01)).ToString("N2")
                        End If
                    Next rowIndex

                    mdlPopupAgreeValue.Show()
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtPercentageChangeAgreeValueEdit.Text) = False Then
                If Convert.ToDecimal(txtPercentageChangeAgreeValueEdit.Text) <> 0.0 Then

                    Dim sqlstr As String
                    lblAlertEditAgreeValue.Text = ""
                    sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "' and ((status ='O') or (status ='H')) and Servicedate >= '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "'"
                    SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

                    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    grvServiceRecAgreeValueEdit.DataBind()

                    For rowIndex As Integer = 0 To grvServiceRecAgreeValueEdit.Rows.Count - 1

                        Dim lblid13 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim lblid14 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtNewBillAmtGV"), TextBox)
                        Dim lblid27 As TextBox = CType(grvServiceRecAgreeValueEdit.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)


                        If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
                            lblid14.Text = (Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01).ToString("N2")
                        Else
                            lblid14.Text = (Convert.ToDecimal(lblid13.Text) + (Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01)).ToString("N2")
                        End If
                    Next rowIndex


                End If
            End If

            mdlPopupAgreeValue.Show()
        Catch ex As Exception
            lblAlertEditAgreeValue.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "rdbFixedValueChange_CheckedChanged", ex.Message.ToString, "")
            mdlPopupAgreeValue.Show()
        End Try
    End Sub

    'Private Sub UpdateGrid()
    '    Dim sqlstr As String
    '    lblAlertEditAgreeValue.Text = ""
    '    sqlstr = "Select RecordNo,ServiceDate, LocationID, CustName, BillAmount, Rcno  from tblServiceRecord where ContractNo ='" & txtContractNo.Text.Trim & "' and ((status ='O') or (status ='H')) and Servicedate >= '" & Convert.ToDateTime(txtEffectiveDate.Text).ToString("yyyy-MM-dd") & "'"
    '    SqlDSServicesAgreeValueEdit.SelectCommand = sqlstr

    '    grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
    '    grvServiceRecAgreeValueEdit.DataBind()
    '    mdlPopupAgreeValue.Show()
    'End Sub

    Protected Sub btnRegenerateConfirm_Click(sender As Object, e As EventArgs) Handles btnRegenerateConfirm.Click
        lblWarningAlert.Text = ""

        If String.IsNullOrEmpty(txtConfirmationCode.Text.Trim) = True Then
            lblWarningAlert.Text = "Please Enter Confirmation Code"
            mdlWarning.Show()
            Exit Sub
        End If

        If txtConfirmationCode.Text.Trim <> lblRandom.Text.Trim Then
            lblWarningAlert.Text = "Confirmation Code does not match"
            mdlWarning.Show()
            Exit Sub
        End If

        ScheduleContract()
    End Sub

    Protected Sub btnExcludeFromBatchPriceEdit_Click(sender As Object, e As EventArgs) Handles btnExcludeFromBatchPriceEdit.Click
        If chkExcludeFromBatchPriceChange.Checked = chkExcludeFromBatchPriceEdit.Checked Then
            lblExcludeFromBatchPrice.Text = "NO CHANGES MADE"
            mdlExcludeFromBatchPriceEdit.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET ExcludeBatchPriceChange = @ExcludeBatchPriceChange, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@ExcludeBatchPriceChange", chkExcludeFromBatchPriceEdit.Checked)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''
            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()

            chkExcludeFromBatchPriceChange.Checked = chkExcludeFromBatchPriceEdit.Checked
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "btnExcludeFromBatchPriceEdit_Click", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            'InsertNewLog()
            mdlPopupExtendContract.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnExcludeFromBatchPriceEdit_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient10_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient10.Click
        mdlExcludeFromBatchPriceEdit.Show()
    End Sub

    Protected Sub chkGSTInclusive_CheckedChanged(sender As Object, e As EventArgs) Handles chkGSTInclusive.CheckedChanged
        mdlGSTInclusive.Show()
        chkGSTInclusive.Checked = False
    End Sub

    Protected Sub txtGSTInclusiveAmount_TextChanged(sender As Object, e As EventArgs) Handles txtGSTInclusiveAmount.TextChanged
        Try
            lblAlertGSTInclusive.Text = ""
            Dim checkNumber As Decimal
            If Decimal.TryParse(txtGSTInclusiveAmount.Text, checkNumber) = False Then
                lblAlertGSTInclusive.Text = "Please Enter Numeric Value"
                txtAgreedValueAmount.Text = "0.00"
                txtGSTAmount.Text = "0.00"
                mdlGSTInclusive.Show()
                Exit Sub
            End If


            Dim perc As Double
            perc = (1 + (0.01 * txtGSTRatePct.Text))
            'txtGSTAmount.Text = perc.ToString
            txtAgreedValueAmount.Text = Convert.ToDecimal(txtGSTInclusiveAmount.Text / perc).ToString("N2")
            txtGSTAmount.Text = Convert.ToDecimal(txtGSTInclusiveAmount.Text - txtAgreedValueAmount.Text).ToString("N2")
            mdlGSTInclusive.Show()
        Catch ex As Exception
            lblAlertGSTInclusive.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnExcludeFromBatchPriceEdit_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnGSTInclusiveOK_Click(sender As Object, e As EventArgs) Handles btnGSTInclusiveOK.Click

        If String.IsNullOrEmpty(txtGSTAmount.Text) = True Then
            lblAlertGSTInclusive.Text = "Please Enter GST Amount"
            mdlGSTInclusive.Show()
            Exit Sub
        End If

        txtAgreeVal.Text = txtAgreedValueAmount.Text
        txtAgreeVal.Focus()

        'If txtGS.Text = "O" Then
        '    UpdateAgreeValue("New")
        'End If

        'onchange = "getValuePerMonth()"
        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> getValuePerMonth();</Script>", False)
        mdlGSTInclusive.Hide()
    End Sub


    Protected Sub btnGSTInclusive_Click(sender As Object, e As EventArgs) Handles btnGSTInclusive.Click
        lblAlertGSTInclusive.Text = ""
        mdlGSTInclusive.Show()
        'chkGSTInclusive.Checked = False
    End Sub

    Protected Sub btnScheduleSummary_Click(sender As Object, e As EventArgs) Handles btnScheduleSummary.Click
        ModalPopupNotestemplate.Hide()

        '  Dim dt As DataTable = GetDataSet()
        Dim dt As New DataTable

        Dim strContract As String = ""
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = txt.Text
        command1.Connection = conn

        Dim dr1 As MySqlDataReader = command1.ExecuteReader()

        Dim dt1 As New DataTable
        dt1.Load(dr1)

        If dt1.Rows.Count > 0 Then

            For i As Integer = 0 To dt1.Rows.Count - 1

                YrStrList.Add("'" + dt1.Rows(i)("ContractNo").ToString + "'")
            Next


            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                ' strContract = "'" + YrStr + "'"
                strContract = YrStr
            End If

            '   InsertIntoTblWebEventLog("1 " + dt1.Rows.Count.ToString, "ScheduleSummary", strContract, txtCreatedBy.Text)

            command1.Dispose()
            dt1.Clear()
            dr1.Close()
            dt1.Dispose()

            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text

            command2.CommandText = " SELECT recordno,contractno from tblservicerecord where contractno in (" + strContract + ");"
            command2.Connection = conn

            Dim dr2 As MySqlDataReader = command2.ExecuteReader()

            Dim dt2 As New DataTable
            dt2.Load(dr2)

            If dt2.Rows.Count > 0 Then



                Dim cmd As MySqlCommand = New MySqlCommand

                Dim sda As New MySqlDataAdapter()

                cmd.CommandType = CommandType.StoredProcedure

                cmd.CommandText = "spContractService"

                cmd.Connection = conn

                cmd.Parameters.Clear()
                cmd.Parameters.AddWithValue("pr_contractno", strContract)

                Try

                    sda.SelectCommand = cmd
                    sda.Fill(dt)

                    '  InsertIntoTblWebEventLog("2 " + dt.Rows.Count.ToString, "ScheduleSummary", strContract, txtCreatedBy.Text)

                Catch ex As Exception
                    Throw ex
                Finally

                    sda.Dispose()

                    conn.Close()
                    conn.Dispose()

                End Try

            Else
                lblAlert.Text = "NO SUMMARY TO DISPLAY"
                Return

            End If

        Else
            lblAlert.Text = "NO SUMMARY TO DISPLAY"
            Return

        End If


        Dim attachment As String = "attachment; filename=ContractServiceSchedule.xls"
        Response.ClearContent()
        Response.AddHeader("content-disposition", attachment)
        Response.ContentType = "application/vnd.ms-excel"
        Dim tab As String = ""
        For Each dc As DataColumn In dt.Columns
            If dc.ColumnName.Substring(6, 3) = " Wk" Then
                Response.Write(tab + dc.ColumnName.Substring(0, 6) + "  ")
            Else
                Response.Write(tab + dc.ColumnName)

            End If

            tab = vbTab
        Next
        Response.Write(vbLf)

        For Each dc As DataColumn In dt.Columns

            If dc.ColumnName.Substring(6, 3) = " Wk" Then
                Response.Write("  " + dc.ColumnName.Substring(6) + tab)
            Else
                Response.Write(tab)
            End If

            tab = vbTab
        Next
        Response.Write(vbLf)

        Dim i1 As Integer
        For Each dr As DataRow In dt.Rows
            tab = ""
            For i1 = 0 To dt.Columns.Count - 1

                Response.Write(tab & dr(i1).ToString())
                tab = vbTab
            Next
            Response.Write(vbLf)
        Next
        Response.[End]()
        dt.Clear()

    End Sub

    Protected Sub chkShowVoidRcords_CheckedChanged(sender As Object, e As EventArgs) Handles chkShowVoidRcords.CheckedChanged
        If chkShowVoidRcords.Checked = False Then
            SqlDSViewPriceHistory.SelectCommand = "Select a.ContractNo, a.Date, a.OldAgreedValue,a.NewAgreedValue, a.ChangeInAgreedValue, a.PortfolioValueChange,a.PercentChange, a.Type, a.Comments, a.Void,  a.PriceModifiedBy, a.ModifiedOn, a.ContractGroup, a.subType, a.RefRcno,  a.ServiceDescription from tblcontractpricehistory a where a.ContractNo = '" & txtContractNo.Text & "' and a.Void = False order by a.date, a.Type, a.ModifiedOn"
        Else
            SqlDSViewPriceHistory.SelectCommand = "Select a.ContractNo, a.Date, a.OldAgreedValue,a.NewAgreedValue, a.ChangeInAgreedValue, a.PortfolioValueChange,a.PercentChange, a.Type, a.Comments, a.Void,  a.PriceModifiedBy, a.ModifiedOn,a.ContractGroup, a.subType, a.RefRcno, a.ServiceDescription from tblcontractpricehistory a where  a.ContractNo = '" & txtContractNo.Text & "' order by  a.date, a.Type,  a.ModifiedOn"
        End If

        SqlDSViewPriceHistory.DataBind()

        grdViewPriceHistory.DataSourceID = "SqlDSViewPriceHistory"
        grdViewPriceHistory.DataBind()

        mdlViewContractPriceHistory.Show()
    End Sub

    Protected Sub grdViewPriceHistory_RowCreated(sender As Object, e As GridViewRowEventArgs) Handles grdViewPriceHistory.RowCreated
        If chkShowVoidRcords.Checked = False Then
            'PopulateRecordWOPartnerCustomer()
            e.Row.Cells(0).CssClass = "dummybutton"
            'e.Row.Cells(3).CssClass = "dummybutton"
        End If
    End Sub

    Protected Sub btnTerminateExpiredContractsYes_Click(sender As Object, e As EventArgs) Handles btnTerminateExpiredContractsYes.Click
        ''''''''''''''''''''''''' TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
        Try
            Dim strdate As DateTime

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandT1 As MySqlCommand = New MySqlCommand

            commandT1.CommandType = CommandType.Text
            'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
            commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

            commandT1.Connection = conn

            Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
            Dim dtserviceT As New DataTable
            dtserviceT.Load(drserviceT)

            If dtserviceT.Rows.Count > 0 Then
                'ChangeStatus()

                For x As Integer = 0 To dtserviceT.Rows.Count - 1

                    '''''''''''''''''''''''''
                    'Dim commandIsBilled As MySqlCommand = New MySqlCommand

                    'commandIsBilled.CommandType = CommandType.Text
                    'commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                    'commandIsBilled.Connection = conn

                    'Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                    'Dim dtIsBilled As New DataTable
                    'dtIsBilled.Load(drIsBilled)

                    'If dtIsBilled.Rows(0)("isBilled") = 0 Then
                    '    CountBilledServiceRecords = CountBilledServiceRecords + 1
                    '    commandIsBilled.Dispose()
                    '    dtIsBilled.Dispose()
                    '    GoTo nextrecT
                    'End If

                    'commandIsBilled.Dispose()
                    'dtIsBilled.Dispose()
                    '''''''''''''''''''''''''''
                    Dim commandE2 As MySqlCommand = New MySqlCommand
                    commandE2.CommandType = CommandType.Text
                    'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    commandE2.CommandText = "update  tblServiceRecord set Status='T' where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"
                    commandE2.Connection = conn
                    commandE2.ExecuteNonQuery()
                    commandE2.Dispose()
nextrecT:
                Next
            End If

            Dim commandT As MySqlCommand = New MySqlCommand
            commandT.CommandType = CommandType.Text

            Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

            'Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

            commandT.CommandText = qryT
            commandT.Parameters.Clear()


            If txtActualEndChSt.Text = "" Then
                commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
            Else
                strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
            End If

            commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
            commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
            commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
            commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
            commandT.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
            commandT.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            commandT.Connection = conn
            commandT.ExecuteNonQuery()

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()

            GridView1.DataSourceID = "SQLDSContract"
            GridView1.DataBind()
            'txtStatus.Text = "T"

            commandT.Dispose()
            commandT1.Dispose()
            dtserviceT.Dispose()

            UpdateAgreeValue("Terminate")

            ' '' 23.06.19
            'If ddlAgreementType.Text = "RENEWAL" Then


            '    Dim commandIsBilled As MySqlCommand = New MySqlCommand

            '    commandIsBilled.CommandType = CommandType.Text
            '    commandIsBilled.CommandText = "select count(RecordNo) as isServiced from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and Status ='P'"
            '    commandIsBilled.Connection = conn

            '    Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
            '    Dim dtIsBilled As New DataTable
            '    dtIsBilled.Load(drIsBilled)

            '    If dtIsBilled.Rows(0)("isServiced") = 0 Then

            '        If txtActualEnd.Text = txtContractStart.Text Then

            '            ' if following 2 conditions are met :
            '            '1. if there is no Service done (No record with Service Status 'P') and 
            '            '2. Actual End = Contract Start date

            '            '' Clear Renewal info and Status from 1st Contract

            '            Dim commandPrevContractUpdate As MySqlCommand = New MySqlCommand
            '            commandPrevContractUpdate.CommandType = CommandType.Text

            '            Dim qryPrevContractUpdate As String = "UPDATE tblContract SET Status =@Status,  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = @ActualEnd where ContractNo= @ContractNo "

            '            commandPrevContractUpdate.CommandText = qryPrevContractUpdate
            '            commandPrevContractUpdate.Parameters.Clear()
            '            commandPrevContractUpdate.Parameters.AddWithValue("@Status", "O")
            '            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalSt", "O")
            '            'commandPrevContractUpdate.Parameters.AddWithValue("@RenewalDate", vbNull)
            '            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalContractNo", "")

            '            'commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))

            '            commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
            '            commandPrevContractUpdate.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
            '            commandPrevContractUpdate.Connection = conn
            '            commandPrevContractUpdate.ExecuteNonQuery()

            '            commandPrevContractUpdate.Dispose()
            '            '''

            '            ' Clear OContract from 2nd Contract

            '            Dim commandRenewalUpdate As MySqlCommand = New MySqlCommand
            '            commandRenewalUpdate.CommandType = CommandType.Text

            '            Dim qryRenewalUpdate As String = "UPDATE tblContract SET  OContractNo = @OContractNo where rcno= @rcno "

            '            commandRenewalUpdate.CommandText = qryRenewalUpdate
            '            commandRenewalUpdate.Parameters.Clear()
            '            commandRenewalUpdate.Parameters.AddWithValue("@OContractNo", "")
            '            commandRenewalUpdate.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            '            commandRenewalUpdate.Connection = conn
            '            commandRenewalUpdate.ExecuteNonQuery()

            '            commandRenewalUpdate.Dispose()

            '            '' Void the Termination Record in tblContractPriceHistory table for 1st Contract
            '            Dim commandDeleteContractPriceHistory As MySqlCommand = New MySqlCommand
            '            commandDeleteContractPriceHistory.CommandType = CommandType.Text

            '            Dim qryDeleteContractPriceHistory As String = "UPDATE tblContractPriceHistory SET VOID = True where ContractNo= @ContractNo and Type ='TERMINATION'"

            '            commandDeleteContractPriceHistory.CommandText = qryDeleteContractPriceHistory
            '            commandDeleteContractPriceHistory.Parameters.Clear()
            '            commandDeleteContractPriceHistory.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
            '            commandDeleteContractPriceHistory.Connection = conn
            '            commandDeleteContractPriceHistory.ExecuteNonQuery()

            '            commandDeleteContractPriceHistory.Dispose()

            '            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "RENEWAL TERMINATED", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "CONTRACT " & txtContractNo.Text.Trim & " HAS BEEN TERMINATED, RENEWAL INFORMATION IS CLEARED", txtRcno.Text)

            '        End If

            '        ''
            '    End If
            'End If

            txtOContract.Text = ""

            ''23.06.19
            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & txtStatus.Text & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " Termination Code: " & ddlTerminationCode.Text.Trim & " : " & txtCommentChSt.Text, txtRcno.Text)


            'originalStatus = ""
            ddlStatusChSt.SelectedIndex = 0
            txtActualEndChSt.Text = ""
            txtCommentChSt.Text = ""

            txtStatus.Text = "T - Terminated"
            txtActualEnd.Text = txtActualEndChSt.Text

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnRevision.Enabled = False
            btnRevision.ForeColor = System.Drawing.Color.Gray

            btnServiceSchedule.Enabled = False
            btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

            btnContractRenewal.Enabled = False
            btnContractRenewal.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            ''''''''''''''''''T

            txtIsPopup.Text = "N"
            txtIsPopupChSt.Text = ""
            ModalPopupExtender5.Hide()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnTerminateExpiredContractsYes_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub BtnTerminateExpiredContractsNo_Click(sender As Object, e As EventArgs) Handles BtnTerminateExpiredContractsNo.Click
        ModalPopupExtender5.Hide()
    End Sub

    Protected Sub txtEffectiveDateEditPONO_TextChanged(sender As Object, e As EventArgs) Handles txtEffectiveDateEditPONO.TextChanged
        Try
            lblAlertSchDate.Text = ""

            If IsDate(txtEffectiveDateEditPONO.Text) = False Then
                lblAlertSchDate.Visible = True
                lblAlertSchDate.Text = "Please Enter Valid Date"
                txtEffectiveDateEditPONO.Text = ""
                txtEffectiveDateEditPONO.Focus()
                mdlPopupPONoEdit.Show()

                Exit Sub

            End If


            If String.IsNullOrEmpty(txtEffectiveDateEditPONO.Text.Trim) = False Then
                If Convert.ToDateTime(txtEffectiveDateEditPONO.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                    lblAlertSchDate.Visible = True
                    lblAlertSchDate.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                    txtEffectiveDateEditPONO.Text = ""
                    mdlPopupPONoEdit.Show()
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(txtEffectiveDateEditPONO.Text.Trim) = False Then
                If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                    If Convert.ToDateTime(txtEffectiveDateEditPONO.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                        lblAlertSchDate.Visible = True
                        lblAlertSchDate.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                        txtEffectiveDateEditPONO.Text = ""
                        mdlPopupPONoEdit.Show()
                        Exit Sub
                    End If
                End If
            End If

            mdlPopupPONoEdit.Show()
        Catch ex As Exception
            lblAlertSchDate.Text = ex.Message.ToString
            mdlPopupPONoEdit.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtEffectiveDateEditPONO_TextChanged", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditPONOSaveYes_Click(sender As Object, e As EventArgs) Handles btnEditPONOSaveYes.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET OurReference = @OurRef, YourReference = @YourRef, PONO=@PONO,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            command.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            command.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))


            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()
            command.Dispose()

            '''''''''''''''''''''''''''''''''''
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            'command1.CommandText = "UPDATE tblServiceRecord SET PONO=@PONO, YourRef=@YourReference, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where ContractNo ='" & txtContractNo.Text & "' and Status ='O'"
            command1.CommandText = "UPDATE tblServiceRecord SET PONO=@PONO, YourRef=@YourReference, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where ContractNo ='" & txtContractNo.Text & "' and servicedate >='" & Convert.ToDateTime(txtEffectiveDateEditPONO.Text).ToString("yyyy-MM-dd") & "'"

            command1.Parameters.Clear()

            'command1.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            'command1.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            command1.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            command1.Parameters.AddWithValue("@YourReference", txtYourReferenceEdit.Text)

            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            'command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command1.Connection = conn

            command1.ExecuteNonQuery()

            command1.Dispose()


            '''''''''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            'command.Dispose()


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITPONO", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "MANUAL CONTRACT NO :" + txtYourRef.Text + " - " + txtYourReferenceEdit.Text.ToUpper + "; OTHER REF : " + txtOurRef.Text + " - " + txtOurReferenceEdit.Text.ToUpper + "; P.O. NO : " + txtPONo.Text + " - " + txtPONoEdit.Text.ToUpper, txtRcno.Text)


            txtOurRef.Text = txtOurReferenceEdit.Text
            txtYourRef.Text = txtYourReferenceEdit.Text
            txtPONo.Text = txtPONoEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()


            'InsertNewLog()

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlEditPONOSave.Hide()
        Catch ex As Exception
            lblAlertSchDate.Text = ex.Message.ToString
            mdlEditPONOSave.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditPONOSaveYes_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditPONOSaveNo_Click(sender As Object, e As EventArgs) Handles btnEditPONOSaveNo.Click
        mdlEditPONOSave.Hide()
        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub btnOkInActiveAccounts_Click(sender As Object, e As EventArgs) Handles btnOkInActiveAccounts.Click
        mdlInActiveAccount.Hide()
    End Sub

    Protected Sub btnMultiplePO_Click(sender As Object, e As EventArgs) Handles btnMultiplePO.Click
        lblAlertPO.Text = ""
        txtContractNoPONo.Text = ""
        txtContractNoPONo.Text = txtContractNo.Text
        lblMessagePO.Text = ""
        SqlDSMultiplePO.SelectCommand = "Select * from tblcontractponumber where ContractNo ='" & txtContractNo.Text & "'"
        SqlDSMultiplePO.DataBind()

        grdViewMultiplePO.DataSourceID = "SqlDSMultiplePO"
        grdViewMultiplePO.DataBind()

        MakeMultiplePONull()
        EnableMultiplePOControls()
        mdlMultiplePO.Show()
    End Sub

    Private Sub DisableMultiplePOControls()

        btnSaveMultiplePO.Enabled = True
        btnSaveMultiplePO.ForeColor = System.Drawing.Color.Black
        btnCancelMultiplePO.Enabled = True
        btnCancelMultiplePO.ForeColor = System.Drawing.Color.Black

        btnAddMultiplePO.Enabled = False
        btnAddMultiplePO.ForeColor = System.Drawing.Color.Gray

        btnEditMultiplePO.Enabled = False
        btnEditMultiplePO.ForeColor = System.Drawing.Color.Gray

        btnDeleteMultiplePO.Enabled = False
        btnDeleteMultiplePO.ForeColor = System.Drawing.Color.Gray

        txtContractStartDatePO.Enabled = True
        txtContractEndDatePO.Enabled = True
        txtPONumber.Enabled = True
    End Sub


    Private Sub EnableMultiplePOControls()
        btnSaveMultiplePO.Enabled = False
        btnSaveMultiplePO.ForeColor = System.Drawing.Color.Gray
        btnCancelMultiplePO.Enabled = False
        btnCancelMultiplePO.ForeColor = System.Drawing.Color.Gray

        btnAddMultiplePO.Enabled = True
        btnAddMultiplePO.ForeColor = System.Drawing.Color.Black
        btnEditMultiplePO.Enabled = False
        btnEditMultiplePO.ForeColor = System.Drawing.Color.Gray
        btnDeleteMultiplePO.Enabled = False
        btnDeleteMultiplePO.ForeColor = System.Drawing.Color.Gray

        txtContractStartDatePO.Enabled = False
        txtContractEndDatePO.Enabled = False
        txtPONumber.Enabled = False

    End Sub


    Public Sub MakeMultiplePONull()
        txtPOMode.Text = ""
        txtContractStartDatePO.Text = ""
        txtContractEndDatePO.Text = ""
        txtPONumber.Text = ""
        txtMultiplePORcNo.Text = ""
    End Sub


    Protected Sub btnSaveMultiplePO_Click(sender As Object, e As EventArgs) Handles btnSaveMultiplePO.Click
        Try
            lblAlertPO.Text = ""
            lblMessagePO.Text = ""


            If String.IsNullOrEmpty(txtContractStartDatePO.Text.Trim) = True Then
                lblAlertPO.Text = "P.O. START DATE CANNOT BE BLANK"
                mdlMultiplePO.Show()
                Exit Sub
            End If


            'If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = True Then
            '    lblAlertPO.Text = "P.O. END DATE CANNOT BE BLANK"
            '    mdlMultiplePO.Show()
            '    Exit Sub
            'End If

            If IsDate(txtContractStartDatePO.Text.Trim) = False Then
                lblAlertPO.Text = "INVALID P.O. START DATE"
                mdlMultiplePO.Show()
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then
                If IsDate(txtContractEndDatePO.Text.Trim) = False Then
                    lblAlertPO.Text = "INVALID P.O. END DATE"
                    mdlMultiplePO.Show()
                    Exit Sub
                End If
            End If


            If Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") < Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") Then
                lblAlertPO.Text = "P.O. START DATE " & txtContractStartDatePO.Text & " CANNOT BE EARLIER THAN CONTRACT START DATE " & txtContractStart.Text
                mdlMultiplePO.Show()
                Exit Sub
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then

                    If Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd") > Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") Then
                        lblAlertPO.Text = "P.O. END DATE " & txtContractEndDatePO.Text & " CANNOT BE LATER THAN CONTRACT END DATE " & txtContractEnd.Text
                        mdlMultiplePO.Show()
                        Exit Sub
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then
                If Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") > Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd") Then
                    lblAlertPO.Text = "P.O. START DATE CANNOT BE LATER THAN P.O. END DATE"
                    mdlMultiplePO.Show()
                    Exit Sub
                End If
            End If

            If String.IsNullOrEmpty(txtPONumber.Text.Trim) = True Then
                lblAlertPO.Text = "P.O. NUMBER CANNOT BE BLANK"
                mdlMultiplePO.Show()
                Exit Sub
            End If


            '05.02.22

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandIsFirstPNO As MySqlCommand = New MySqlCommand

            commandIsFirstPNO.CommandType = CommandType.Text


            commandIsFirstPNO.CommandText = "SELECT count(ContractNo) as CountPONo from tblcontractponumber where ContractNo= '" & txtContractNo.Text & "' limit 1"
            
            commandIsFirstPNO.Connection = conn

            Dim drIsFirstPNO As MySqlDataReader = commandIsFirstPNO.ExecuteReader()
            Dim dtIsFirstPNO As New DataTable
            dtIsFirstPNO.Load(drIsFirstPNO)

            If dtIsFirstPNO.Rows(0)("CountPONo") = 0 Then
                If Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") <> Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") Then
                    lblAlertPO.Text = "P.O. START DATE SHOULD BE SAME AS CONTRACT START DATE " & txtContractStart.Text & " FOR THE FIRST P.O."
                    mdlMultiplePO.Show()
                    Exit Sub
                End If

            End If

            conn.Close()
            conn.Dispose()
            commandIsFirstPNO.Dispose()
            '05.02.22




            Dim conn1 As MySqlConnection = New MySqlConnection()

            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()
            Dim commandMaxPONO As MySqlCommand = New MySqlCommand

            commandMaxPONO.CommandType = CommandType.Text

            If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then
                commandMaxPONO.CommandText = "SELECT count(RecordNo) as CountServiceNo from tblServicerecord where ContractNo= '" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd") & "'"
            Else
                commandMaxPONO.CommandText = "SELECT count(RecordNo) as CountServiceNo from tblServicerecord where ContractNo= '" & txtContractNo.Text & "' and ServiceDate >= '" & Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") & "'"

            End If

            'commandMaxPONO.CommandText = "SELECT count(ServiceDate) as MaxStartate from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "'"
            commandMaxPONO.Connection = conn1

            Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
            Dim dtMaxPONO As New DataTable
            dtMaxPONO.Load(drMaxPONO)

            'If dtMaxPONO.Rows(0)("CountServiceNo") = 0 Then

            '    If Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") <> Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") Then
            '        lblAlertPO.Text = "P.O. START DATE SHOULD BE SAME AS CONTRACT START DATE " & txtContractStart.Text & " FOR THE FIRST P.O."
            '        mdlMultiplePO.Show()
            '        Exit Sub
            '    End If
            'End If

            If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then
                Label53.Text = "There are " & dtMaxPONO.Rows(0)("CountServiceNo") & " Service(s) from "
                Label59.Text = txtContractStartDatePO.Text & " To " & txtContractEndDatePO.Text & " that will be updated with"
                Label75.Text = "P.O. Number " & txtPONumber.Text
            Else
                Label53.Text = "There are " & dtMaxPONO.Rows(0)("CountServiceNo") & " Service(s) from "
                Label59.Text = txtContractStartDatePO.Text & " that will be updated with"
                Label75.Text = "P.O. Number " & txtPONumber.Text
            End If



            mdlUpdateConfirmationMultiplePO.Show()


            'If txtPOMode.Text = "Add" Then

            '    'Start:11.01.22

            '    Dim conn1 As MySqlConnection = New MySqlConnection()

            '    conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn1.Open()
            '    Dim commandMaxPONO As MySqlCommand = New MySqlCommand

            '    commandMaxPONO.CommandType = CommandType.Text
            '    commandMaxPONO.CommandText = "SELECT Max(StartDate) as MaxStartate from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "'"
            '    commandMaxPONO.Connection = conn1

            '    Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
            '    Dim dtMaxPONO As New DataTable
            '    dtMaxPONO.Load(drMaxPONO)


            '    If IsDBNull((dtMaxPONO.Rows(0)("MaxStartate"))) = False Then
            '        If Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") Then

            '            lblAlertPO.Text = "P.O. Start Date should be later than the Last P.O. Start Date (" & Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("dd/MM/yyyy") & ") for the Contract"
            '                commandMaxPONO.Dispose()
            '                conn1.Close()
            '            conn1.Dispose()
            '            mdlMultiplePO.Show()
            '                Exit Sub

            '        End If
            '    End If


            '    'End: 11.01.22

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn.Open()

            '    Dim command1 As MySqlCommand = New MySqlCommand

            '    command1.CommandType = CommandType.Text

            '    command1.CommandText = "SELECT * FROM tblContractPoNumber where ContractNo=@ContractNo and PONumber = @PONumber"
            '    command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
            '    command1.Parameters.AddWithValue("@PONumber", txtPONumber.Text.Trim)
            '    command1.Connection = conn

            '    Dim dr As MySqlDataReader = command1.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then
            '        lblAlertPO.Text = "P.O. NUMBER ALREADY EXISTS"
            '        mdlMultiplePO.Show()
            '        Exit Sub
            '    Else

            '        Dim command As MySqlCommand = New MySqlCommand

            '        command.CommandType = CommandType.Text
            '        Dim qry As String = "INSERT INTO tblContractPoNumber(ContractNo,PONumber, StartDate, EndDate,CreatedBy,  CreatedOn,LastModifiedBy,LastModifiedOn)VALUES(@ContractNo,@PONumber,@StartDate,@EndDate, @CreatedBy, @CreatedOn,@LastModifiedBy,@LastModifiedOn);"
            '        command.CommandText = qry
            '        command.Parameters.Clear()
            '        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
            '            command.Parameters.AddWithValue("@PONumber", txtPONumber.Text.ToUpper)
            '            command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))
            '            command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
            '            command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
            '            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
            '            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            '        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
            '            command.Parameters.AddWithValue("@PONumber", txtPONumber.Text)
            '            command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))
            '            command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
            '            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))

            '            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
            '            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            '        End If

            '        command.Connection = conn
            '        command.ExecuteNonQuery()
            '        txtMultiplePORcNo.Text = command.LastInsertedId

            '        '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '        lblMessagePO.Text = "ADD: P.O. SUCCESSFULLY ADDED"
            '        lblAlert.Text = ""
            '        command.Dispose()
            '        UpdateLatestPO()
            '    End If
            '    conn.Close()
            '    conn.Dispose()
            '    command1.Dispose()
            '    dt.Dispose()
            '    dr.Close()

            '    EnableMultiplePOControls()

            'ElseIf txtPOMode.Text = "Edit" Then
            '    If txtMultiplePORcNo.Text = "" Then
            '        '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            '        lblAlertPO.Text = "SELECT RECORD TO EDIT"
            '        mdlMultiplePO.Show()
            '        Exit Sub

            '    End If


            '    'Start:11.01.22

            '    Dim conn2 As MySqlConnection = New MySqlConnection()

            '    conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn2.Open()
            '    Dim commandMaxPONO As MySqlCommand = New MySqlCommand

            '    commandMaxPONO.CommandType = CommandType.Text
            '    commandMaxPONO.CommandText = "SELECT Max(StartDate) as MaxStartate from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "' and rcno <> " & txtMultiplePORcNo.Text
            '    commandMaxPONO.Connection = conn2

            '    Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
            '    Dim dtMaxPONO As New DataTable
            '    dtMaxPONO.Load(drMaxPONO)


            '    If IsDBNull((dtMaxPONO.Rows(0)("MaxStartate"))) = False Then
            '        If Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") Then

            '            lblAlertPO.Text = "P.O. Start Date should be later than the Last P.O. Start Date (" & Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("dd/MM/yyyy") & ") for the Contract"
            '            commandMaxPONO.Dispose()
            '            conn2.Close()
            '            conn2.Dispose()
            '            mdlMultiplePO.Show()
            '            Exit Sub
            '        End If
            'End If


            ''End: 11.01.22
            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim command2 As MySqlCommand = New MySqlCommand

            'command2.CommandType = CommandType.Text
            'command2.CommandText = "SELECT * FROM tblContractPoNumber where ContractNo=@ContractNo and  PONumber = @PONumber and rcno <> @rcno"
            'command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
            'command2.Parameters.AddWithValue("@PONumber", txtPONumber.Text.Trim)
            'command2.Parameters.AddWithValue("@rcno", txtMultiplePORcNo.Text.Trim)
            'command2.Connection = conn

            'Dim dr1 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt1 As New DataTable
            'dt1.Load(dr1)

            'If dt1.Rows.Count > 0 Then

            '    lblAlertPO.Text = "P.O. NUMBER ALREADY EXISTS"
            '    mdlMultiplePO.Show()
            '    Return
            'Else

            '    Dim command1 As MySqlCommand = New MySqlCommand

            '    command1.CommandType = CommandType.Text

            '    command1.CommandText = "SELECT * FROM tblContractPoNumber where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)
            '    command1.Connection = conn

            '    Dim dr As MySqlDataReader = command1.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then

            '        Dim command As MySqlCommand = New MySqlCommand

            '        command.CommandType = CommandType.Text
            '        command.CommandText = "UPDATE tblContractPoNumber SET ContractNo =@ContractNo, StartDate = @StartDate, EndDate = @EndDate, PONumber=@PONumber, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)
            '        command.Parameters.Clear()

            '        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
            '        command.Parameters.AddWithValue("@PONumber", txtPONumber.Text.ToUpper)
            '        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))
            '        command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))

            '        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
            '        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            '        command.Connection = conn

            '        command.ExecuteNonQuery()

            '        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
            '        lblMessagePO.Text = "EDIT: P.O. SUCCESSFULLY UPDATED"
            '        lblAlert.Text = ""
            '        command.Dispose()
            '        UpdateLatestPO()
            '    End If
            '    command1.Dispose()
            'End If

            'txtPOMode.Text = ""

            'conn.Close()
            'conn.Dispose()

            'command2.Dispose()

            'EnableMultiplePOControls()

            'End If
            'SqlDSMultiplePO.SelectCommand = "select * from tblContractPoNumber where ContractNo = '" + txtContractNo.Text + "'"
            'SqlDSMultiplePO.DataBind()
            'gvNotesMaster.DataBind()

            'txtPOMode.Text = ""
            'mdlMultiplePO.Show()

            '15.09.21

        Catch ex As Exception
            lblAlertPO.Text = ex.Message.ToString

            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSaveNotesMaster_Click", ex.Message.ToString, "")
            mdlMultiplePO.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnYesEditContract_Click(sender As Object, e As EventArgs) Handles btnYesEditContract.Click
        EditContract()
    End Sub

    Protected Sub btnCancelMultiplePO_Click(sender As Object, e As EventArgs) Handles btnCancelMultiplePO.Click
        MakeMultiplePONull()
        EnableMultiplePOControls()
        txtPOMode.Text = ""
        mdlMultiplePO.Show()
    End Sub

    Protected Sub btnAddMultiplePO_Click(sender As Object, e As EventArgs) Handles btnAddMultiplePO.Click
        DisableMultiplePOControls()

        MakeMultiplePONull()
        lblMessagePO.Text = "ACTION: ADD P.O."

        txtPOMode.Text = "Add"
        mdlMultiplePO.Show()

    End Sub

    Protected Sub btnQuitMultiplePO_Click(sender As Object, e As EventArgs) Handles btnQuitMultiplePO.Click
        mdlMultiplePO.Hide()
    End Sub

    Protected Sub btnEditMultiplePO_Click(sender As Object, e As EventArgs) Handles btnEditMultiplePO.Click
        lblAlertPO.Text = ""
        lblMessagePO.Text = ""
        If txtMultiplePORcNo.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableMultiplePOControls()
        txtPOMode.Text = "Edit"
        lblMessagePO.Text = "ACTION: EDIT P.O."
        mdlMultiplePO.Show()
    End Sub

    Protected Sub btnDeleteMultiplePO_Click(sender As Object, e As EventArgs) Handles btnDeleteMultiplePO.Click
        lblMessagePO.Text = ""
        If txtMultiplePORcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlertPO.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessagePO.Text = "ACTION: DELETE P.O."

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblContractPoNumber where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblContractPoNumber where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    lblMessagePO.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
                    UpdateLatestPO()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
            Catch ex As Exception
                lblAlertPO.Text = ex.Message.ToString
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDeleteMultiplePO_Click", ex.Message.ToString, "")
                mdlMultiplePO.Show()
                Exit Sub
            End Try
            EnableMultiplePOControls()

            'SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtContractNo.Text + "'"
            'SqlDSNotesMaster.DataBind()

            'gvNotesMaster.DataBind()
            'MakeNotesNull()
            'lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"


            SqlDSMultiplePO.SelectCommand = "select * from tblContractPoNumber where ContractNo = '" + txtContractNo.Text + "'"
            SqlDSMultiplePO.DataBind()
            gvNotesMaster.DataBind()

            txtPOMode.Text = ""
            mdlMultiplePO.Show()

        End If
    End Sub

    Private Sub UpdateLatestPO()
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandMaxPONO As MySqlCommand = New MySqlCommand

            commandMaxPONO.CommandType = CommandType.Text
            'commandMaxPONO.CommandText = "SELECT PONumber  as MaxPONO from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "' and StartDate = (Select max(StartDate) from tblContractPONumber)"
            commandMaxPONO.CommandText = "SELECT PONumber  as MaxPONO from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "' and StartDate = (Select max(StartDate) from tblContractPONumber where ContractNo = '" & txtContractNo.Text & "')"
            commandMaxPONO.Connection = conn

            Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
            Dim dtMaxPONO As New DataTable
            dtMaxPONO.Load(drMaxPONO)


            If dtMaxPONO.Rows.Count > 0 Then

                'If IsDate(Convert.ToDateTime(dtMaxDateService.Rows(0)("MaxServiceDate")).ToString("yyyy-MM-dd")) = True Then
                If IsDBNull((dtMaxPONO.Rows(0)("MaxPONO"))) = False Then
                    txtPONo.Text = dtMaxPONO.Rows(0)("MaxPONO")

                    '18.08.21

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    command.CommandText = "UPDATE tblContract SET PONO =@PONO, LastModifiedBy=@LastModifiedBy, LastModifiedOn=@LastModifiedOn where  rcno=" & Convert.ToInt32(txtRcno.Text)
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@PONO", txtPONumber.Text.ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    command.Dispose()


                    'Service

                    Dim commandService As MySqlCommand = New MySqlCommand

                    commandService.CommandType = CommandType.Text

                    If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = False Then
                        commandService.CommandText = "UPDATE tblServicerecord SET PONO =@PONO,  LastModifiedBy=@LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo= '" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd") & "'"
                    Else
                        commandService.CommandText = "UPDATE tblServicerecord SET PONO =@PONO,  LastModifiedBy=@LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo= '" & txtContractNo.Text & "' and ServiceDate >= '" & Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") & "'"

                    End If


                    commandService.Parameters.Clear()

                    commandService.Parameters.AddWithValue("@PONO", txtPONumber.Text.ToUpper)
                    commandService.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
                    commandService.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    commandService.Connection = conn
                    commandService.ExecuteNonQuery()
                    commandService.Dispose()

                    'Service
                    '18.08.21


                    'Start: Contract Multiple PO

                    Dim commandContractPO As MySqlCommand = New MySqlCommand

                    commandContractPO.CommandType = CommandType.Text
                    commandContractPO.CommandText = "SELECT count(PONumber) as PODetails FROM tblcontractponumber where ContractNo = '" & txtContractNo.Text & "'"
                    commandContractPO.Connection = conn

                    Dim drContractPO As MySqlDataReader = commandContractPO.ExecuteReader()
                    Dim dtContractPO As New DataTable
                    dtContractPO.Load(drContractPO)

                    If dtContractPO.Rows.Count > 0 Then
                        btnMultiplePO.Text = "P.O. [" & Val(dtContractPO.Rows(0)("PODetails").ToString).ToString & "]"
                    End If

                    commandContractPO.Dispose()
                    dtContractPO.Dispose()
                    drContractPO.Dispose()

                    'End : Contract Multiple PO
                Else
                    btnMultiplePO.Text = "P.O. [0]"
                End If
                Else
                    btnMultiplePO.Text = "P.O. [0]"
                End If
            conn.Close()
            conn.Dispose()
            commandMaxPONO.Dispose()
            dtMaxPONO.Dispose()

        Catch ex As Exception
            lblAlertPO.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateLatestPO", ex.Message.ToString, "")
            mdlMultiplePO.Show()
            'Exit Sub
        End Try

    End Sub

    Protected Sub OnRowDataBoundgMultiplePO(sender As Object, e As GridViewRowEventArgs) Handles grdViewMultiplePO.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grdViewMultiplePO, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgMultiplePO(sender As Object, e As EventArgs) Handles grdViewMultiplePO.SelectedIndexChanged
        For Each row As GridViewRow In gvNotesMaster.Rows
            'If row.RowIndex = gvNotesMaster.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = grdViewMultiplePO.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub

    Protected Sub grdViewMultiplePO_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grdViewMultiplePO.SelectedIndexChanged
        Try

            MakeMultiplePONull()
            Dim editindex As Integer = grdViewMultiplePO.SelectedIndex
            rcno = DirectCast(grdViewMultiplePO.Rows(editindex).FindControl("Label1"), Label).Text
            txtMultiplePORcNo.Text = rcno.ToString()
            txtContractStartDatePO.Text = Server.HtmlDecode(grdViewMultiplePO.SelectedRow.Cells(1).Text)
            txtContractEndDatePO.Text = Server.HtmlDecode(grdViewMultiplePO.SelectedRow.Cells(2).Text)
            txtPONumber.Text = Server.HtmlDecode(grdViewMultiplePO.SelectedRow.Cells(3).Text)
            EnableMultiplePOControls()

            btnEditMultiplePO.Enabled = True
            btnEditMultiplePO.ForeColor = System.Drawing.Color.Black
            btnDeleteMultiplePO.Enabled = True
            btnDeleteMultiplePO.ForeColor = System.Drawing.Color.Black
            mdlMultiplePO.Show()

        Catch ex As Exception
            lblAlertPO.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grdViewMultiplePO_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub txtContractEndPH_TextChanged(sender As Object, e As EventArgs) Handles txtContractEndPH.TextChanged

    End Sub

    Protected Sub txtContractEndPH0_TextChanged(sender As Object, e As EventArgs) Handles txtFixedContinuousPH.TextChanged

    End Sub

    Protected Sub Button16_Click(sender As Object, e As EventArgs) Handles Button16.Click
        btnEdit.Enabled = False
        btnSvcEdit.Enabled = False

        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray

    End Sub

    Protected Sub Button14_Click(sender As Object, e As EventArgs) Handles Button14.Click
        btnEdit.Enabled = False
        btnSvcEdit.Enabled = False

        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray
    End Sub

    Protected Sub btnContractGroupDistribution_Click(sender As Object, e As EventArgs) Handles btnContractGroupDistribution.Click
        Try

            lblAlertContractGroupDistribution.Text = ""
            lblMsgContractGroupDistribution.Text = ""

            txtContractNoDistribution.Text = txtContractNo.Text
            txtTotalAgreedValueDistribution.Text = txtAgreeVal.Text

            txtDistributionDate.Text = "__/__/____"
            txtDistributionDate.Enabled = False

            If Left(txtStatus.Text, 1) <> "O" Then
                btnAddDistribution.Enabled = False
                btnAddDistribution.ForeColor = Color.Gray

                btnEditDistribution.Enabled = False
                btnEditDistribution.ForeColor = Color.Gray

                btnDeleteDistribution.Enabled = False
                btnDeleteDistribution.ForeColor = Color.Gray

            Else
                btnAddDistribution.Enabled = True
                btnAddDistribution.ForeColor = Color.Black

                btnEditDistribution.Enabled = False
                btnEditDistribution.ForeColor = Color.Gray

                btnDeleteDistribution.Enabled = False
                btnDeleteDistribution.ForeColor = Color.Gray
            End If
         

            btnSaveContractGroupDistribution.Enabled = False
            btnSaveContractGroupDistribution.ForeColor = Color.Gray

            btnCancelContractGroupDistribution.Enabled = False
            btnCancelContractGroupDistribution.ForeColor = Color.Gray



            'Heafer

            SqlDSDistributionSummary.SelectCommand = "Select * from tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "' order by DistributionDate"
            SqlDSDistributionSummary.DataBind()

            grdViewDistributionSummary.DataSourceID = "SqlDSDistributionSummary"
            grdViewDistributionSummary.DataBind()
            'Header



            'Start: Check whether the Selected Record is the last Record

            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT rcno, DistributionDate FROM tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "' order by DistributionDate desc limit 1"

            Dim commandLastRecord As MySqlCommand = New MySqlCommand

            Dim conn1 As MySqlConnection = New MySqlConnection()
            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()

            commandLastRecord.CommandType = CommandType.Text
            commandLastRecord.CommandText = sqlstr
            commandLastRecord.Connection = conn1

            Dim drLastRecord As MySqlDataReader = commandLastRecord.ExecuteReader()
            Dim dtLastRecord As New DataTable
            dtLastRecord.Load(drLastRecord)


            If dtLastRecord.Rows.Count > 0 Then
                grdViewDistributionSummary.SelectedIndex = Convert.ToInt16(grdViewDistributionSummary.Rows.Count - 1)

                txtDistributionDate.Text = Convert.ToDateTime(dtLastRecord.Rows(0)("DistributionDate")).ToString("dd/MM/yyyy")
                txtSelectedDistributionDate.Text = txtDistributionDate.Text

                txtDistributionRcno.Text = dtLastRecord.Rows(0)("rcno")

                If Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(dtLastRecord.Rows(0)("DistributionDate")).ToString("yyyy-MM-dd") Then
                    If Left(txtStatus.Text, 1) = "O" Then
                        btnEditDistribution.Enabled = True
                        btnDeleteDistribution.Enabled = True

                        btnEditDistribution.ForeColor = Color.Black
                        btnDeleteDistribution.ForeColor = Color.Black
                    End If

                Else
                    btnEditDistribution.Enabled = False
                    btnDeleteDistribution.Enabled = False

                    btnEditDistribution.ForeColor = Color.Gray
                    btnDeleteDistribution.ForeColor = Color.Gray

                    conn1.Close()
                    conn1.Dispose()
                    commandLastRecord.Dispose()
                    drLastRecord.Close()

                    'mdlContractGroupDistribution.Show()
                    Exit Sub
                End If
            End If



            'End: Check whether the Selected Record is the last Record

            'Check

            If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                If txtDistributionDate.Text <> "__/__/____" Then
                    Dim sqlstr1 As String
                    sqlstr1 = ""

                    sqlstr1 = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                    Dim commandLocked1 As MySqlCommand = New MySqlCommand

                    'Dim conn1 As MySqlConnection = New MySqlConnection()
                    'conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'conn1.Open()

                    commandLocked1.CommandType = CommandType.Text
                    commandLocked1.CommandText = sqlstr1
                    commandLocked1.Connection = conn1

                    Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    If dt1.Rows.Count > 0 Then

                        If dt1.Rows(0)("ContractLock").ToString = "Y" Then
                            'lblAlertContractGroupDistribution.Text = "CONTRACT PERIOD IS LOCKED"
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            conn1.Close()
                            conn1.Dispose()
                            commandLocked1.Dispose()
                            dr1.Close()

                            btnEditDistribution.Enabled = False
                            btnDeleteDistribution.Enabled = False

                            btnEditDistribution.ForeColor = Color.Gray
                            btnDeleteDistribution.ForeColor = Color.Gray
                            'mdlContractGroupDistribution.Show()
                            'Exit Sub

                        Else
                            If Left(txtStatus.Text, 1) = "O" Then
                                btnEditDistribution.Enabled = True
                                btnDeleteDistribution.Enabled = True

                                btnEditDistribution.ForeColor = Color.Black
                                btnDeleteDistribution.ForeColor = Color.Black
                            End If

                        End If
                    Else
                        If Left(txtStatus.Text, 1) = "O" Then
                            btnEditDistribution.Enabled = True
                            btnDeleteDistribution.Enabled = True

                            btnEditDistribution.ForeColor = Color.Black
                            btnDeleteDistribution.ForeColor = Color.Black
                        End If

                    End If

                    conn1.Close()
                    conn1.Dispose()
                    commandLocked1.Dispose()
                    dr1.Close()
                End If
            End If

            '26.07.22
            Dim conn2 As MySqlConnection = New MySqlConnection()
            conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn2.Open()
            Dim commandLastPriceHistoryDate As MySqlCommand = New MySqlCommand

            commandLastPriceHistoryDate.CommandType = CommandType.Text
            commandLastPriceHistoryDate.CommandText = "SELECT Date FROM tblcontractpricehistory where rcno = (Select  max(rcno) from tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = false) and  ContractNo= '" & txtContractNo.Text & "' and Void = false"
            commandLastPriceHistoryDate.Connection = conn2

            Dim drLastPriceHistoryDate As MySqlDataReader = commandLastPriceHistoryDate.ExecuteReader()
            Dim dtLastPriceHistoryDate As New DataTable
            dtLastPriceHistoryDate.Load(drLastPriceHistoryDate)

            If dtLastPriceHistoryDate.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                'Convert.ToDateTime(dt.Rows(0)("WarrantyStart")).ToString("dd/MM/yyyy")

                'txtLastPriceChangeDate.Text = dtMaxDateHistory.Rows(0)("Date").ToString("dd/MM/yyyy")
                txtLatestPriceHistoryDate.Text = Convert.ToDateTime(dtLastPriceHistoryDate.Rows(0)("Date")).ToString("dd/MM/yyyy")
            End If

            commandLastPriceHistoryDate.Dispose()
            dtLastPriceHistoryDate.Dispose()
            drLastPriceHistoryDate.Dispose()
            conn2.Close()
            conn2.Dispose()
            '26.07.22
            'Check
            PopulateDistributionRecords()

            grvContractGroupDistributionDetails.Enabled = False
            txtIsPopup.Text = "Distribution"
            mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnContractGroupDistribution_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub PopulateDistributionRecords()
        Try
            'Start: Target

            lblAlertContractGroupDistribution.Text = ""

            SetRowDataContractGroupDistribution()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvContractGroupDistributionDetails.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTableCGDistribution") = dtScdrTarget1
                grvContractGroupDistributionDetails.DataSource = dtScdrTarget1
                grvContractGroupDistributionDetails.DataBind()

                SetPreviousDataContractGroupDistribution()

            Next i


            FirstGridViewRowContractGroupDistribution()

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()


            If String.IsNullOrEmpty(txtDistributionDate.Text) = False And txtDistributionDate.Text <> "__/__/____" Then
                Dim cmdContratTarget As MySqlCommand = New MySqlCommand
                cmdContratTarget.CommandType = CommandType.Text
                cmdContratTarget.CommandText = "SELECT Rcno, ContractNo, ContractGroup, Percentage, CalculatedValue FROM tblcontractvaluedistribution where ContractNo ='" & txtContractNo.Text & "' and Distributiondate ='" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "'"
                cmdContratTarget.Connection = conn

                Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
                Dim dtTarget As New DataTable
                dtTarget.Load(drTarget)

                Dim TotDetailRecordsLoc = dtTarget.Rows.Count
                If dtTarget.Rows.Count > 0 Then
                    txtNoofContractDistribution.Text = 1
                    Dim rowIndex = 0

                    For Each row As DataRow In dtTarget.Rows
                        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                            AddNewRowContractGroupDistribution()
                        End If

                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractGroup"))

                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                        TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Percentage"))

                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)
                        TextBoxCalculatedValue.Text = Convert.ToString(dtTarget.Rows(rowIndex)("CalculatedValue"))

                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))


                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))

                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                        TextBoxNeworExisting.Text = "E"

                        Dim Query As String
                        Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                        Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                        PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                        rowIndex += 1

                    Next row

                    AddNewRowContractGroupDistribution()
                    SetPreviousDataContractGroupDistribution()
                    cmdContratTarget.Dispose()
                    dtTarget.Dispose()
                    GoTo Endofsub
                    'Exit Sub
                End If
            End If



            'If dtTarget.Rows.Count = 0 Then
            Dim cmdIndustry As MySqlCommand = New MySqlCommand
            cmdIndustry.CommandType = CommandType.Text
            cmdIndustry.CommandText = "SELECT Rcno, Industry, ContractGroup, Percentage FROM tblindustrycontractvaluedistribution where Industry ='" & ddlIndustry.Text.Trim & "' and ContractGroupMain ='" & ddlContractGrp.Text & "'"
            cmdIndustry.Connection = conn

            Dim drIndustry As MySqlDataReader = cmdIndustry.ExecuteReader()
            Dim dtIndustry As New DataTable
            dtIndustry.Load(drIndustry)

            Dim TotDetailRecordsLocdtIndustry = dtIndustry.Rows.Count

            If dtIndustry.Rows.Count > 0 Then
                txtNoofContractDistribution.Text = 1
                Dim rowIndex = 0

                For Each row As DataRow In dtIndustry.Rows
                    If (TotDetailRecordsLocdtIndustry > (rowIndex + 1)) Then
                        AddNewRowContractGroupDistribution()
                    End If

                    Dim TextBoxTargetDescIndustry As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    TextBoxTargetDescIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("ContractGroup"))

                    Dim TextBoxTargtIdIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                    TextBoxTargtIdIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))

                    Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)
                    TextBoxCalculatedValue.Text = Val(txtTotalAgreedValueDistribution.Text) * Val(Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))) * 0.01

                    Dim TextBoxContractNoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                    TextBoxContractNoIndustry.Text = txtContractNo.Text.Trim


                    Dim TextBoxRcnoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                    TextBoxRcnoIndustry.Text = 0

                    Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                    TextBoxNeworExisting.Text = "E"

                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                AddNewRowContractGroupDistribution()
                SetPreviousDataContractGroupDistribution()
                'End If

            Else

                FirstGridViewRowContractGroupDistribution()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc)

                AddNewRowContractGroupDistribution()
                'TextBoxTargetDesc.Text = ddlContractGrp.Text
                TextBoxTargetDesc.Enabled = False
                txtNoofContractDistribution.Text = 0
            End If

Endofsub:

            'End: Target

            'End: Detail Records
            'command1.Dispose()
            'commandByWhich.Dispose()
            'cmdContratFreq.Dispose()
            'cmdContratLoc.Dispose()
            'cmdContratServices.Dispose()

            'dt.Dispose()
            'dtByWhich.Dispose()
            'dtFreq.Dispose()
            'dtFreq1.Dispose()
            'dtLocation.Dispose()

            'dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            'dtServices.Dispose()

            CalculatePercentage()

            If txtNoofContractDistribution.Text = 0 Then
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                TextBoxTargetDesc.Text = ddlContractGrp.Text
            End If

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "PopulateDistributionRecords", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub




    Private Sub PopulateDistributionRecordsAdd()
        Try
            'Start: Target

            lblAlertContractGroupDistribution.Text = ""

            SetRowDataContractGroupDistribution()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvContractGroupDistributionDetails.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTableCGDistribution") = dtScdrTarget1
                grvContractGroupDistributionDetails.DataSource = dtScdrTarget1
                grvContractGroupDistributionDetails.DataBind()

                SetPreviousDataContractGroupDistribution()

            Next i


            FirstGridViewRowContractGroupDistribution()

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()


            If String.IsNullOrEmpty(txtDistributionDate.Text) = False And txtDistributionDate.Text <> "__/__/____" Then
                Dim cmdContratTarget As MySqlCommand = New MySqlCommand
                cmdContratTarget.CommandType = CommandType.Text
                cmdContratTarget.CommandText = "SELECT Rcno, ContractNo, ContractGroup, Percentage, CalculatedValue FROM tblcontractvaluedistribution where Percentage > 0 and ContractNo ='" & txtContractNo.Text & "' and Distributiondate ='" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "'"
                cmdContratTarget.Connection = conn

                Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
                Dim dtTarget As New DataTable
                dtTarget.Load(drTarget)

                Dim TotDetailRecordsLoc = dtTarget.Rows.Count
                If dtTarget.Rows.Count > 0 Then

                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)


                    txtNoofContractDistribution.Text = 1
                    Dim rowIndex = 0

                    For Each row As DataRow In dtTarget.Rows
                        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                            AddNewRowContractGroupDistribution()
                        End If

                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        'TextBoxTargetDesc.Items.Clear()
                        'TextBoxTargetDesc.Items.Add("--SELECT--")

                        'Dim Query As String
                        'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc)
                        TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractGroup"))
                        TextBoxTargetDesc.Enabled = False

                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                        TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Percentage"))


                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)
                        TextBoxCalculatedValue.Text = Convert.ToString(dtTarget.Rows(rowIndex)("CalculatedValue"))

                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        TextBoxRcno.Text = 0

                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                        TextBoxNeworExisting.Text = "E"

                        Dim Query As String
                        Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        'Query = "Select distinct(ContractGroup) from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                        Query = "Select distinct(ContractGroup) from tblContractGroup order by ContractGroup"
                        'TextBoxTargetDesc2.Items.Clear()
                        'TextBoxTargetDesc2.Items.Add("--SELECT--")
                        PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                        rowIndex += 1

                    Next row

                    AddNewRowContractGroupDistribution()
                    SetPreviousDataContractGroupDistribution()
                    cmdContratTarget.Dispose()
                    dtTarget.Dispose()
                    GoTo Endofsub
                    'Exit Sub
                End If
            End If


            Dim cmdIndustry As MySqlCommand = New MySqlCommand
            cmdIndustry.CommandType = CommandType.Text
            cmdIndustry.CommandText = "SELECT Rcno, Industry, ContractGroup, Percentage FROM tblindustrycontractvaluedistribution where Industry ='" & ddlIndustry.Text.Trim & "' and ContractGroupMain ='" & ddlContractGrp.Text & "'"
            cmdIndustry.Connection = conn

            Dim drIndustry As MySqlDataReader = cmdIndustry.ExecuteReader()
            Dim dtIndustry As New DataTable
            dtIndustry.Load(drIndustry)

            Dim TotDetailRecordsLocdtIndustry = dtIndustry.Rows.Count

            If dtIndustry.Rows.Count > 0 Then
                txtNoofContractDistribution.Text = 1
                Dim rowIndex = 0

                For Each row As DataRow In dtIndustry.Rows
                    If (TotDetailRecordsLocdtIndustry > (rowIndex + 1)) Then
                        AddNewRowContractGroupDistribution()
                    End If

                    Dim TextBoxTargetDescIndustry As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    TextBoxTargetDescIndustry.Items.Clear()
                    TextBoxTargetDescIndustry.Items.Add("--SELECT--")
                    TextBoxTargetDescIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("ContractGroup"))
                    TextBoxTargetDescIndustry.Enabled = False

                    Dim TextBoxTargtIdIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                    TextBoxTargtIdIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))

                    Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)
                    TextBoxCalculatedValue.Text = Val(txtTotalAgreedValueDistribution.Text) * Val(Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))) * 0.01

                    Dim TextBoxContractNoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                    TextBoxContractNoIndustry.Text = txtContractNo.Text.Trim


                    Dim TextBoxRcnoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                    TextBoxRcnoIndustry.Text = 0

                    Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                    TextBoxNeworExisting.Text = "E"


                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                AddNewRowContractGroupDistribution()
                SetPreviousDataContractGroupDistribution()
                'End If

            Else

                FirstGridViewRowContractGroupDistribution()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc)

                AddNewRowContractGroupDistribution()
                'TextBoxTargetDesc.Text = ddlContractGrp.Text
                TextBoxTargetDesc.Enabled = False
                txtNoofContractDistribution.Text = 0
            End If

Endofsub:

            'End: Target

            'End: Detail Records
            'command1.Dispose()
            'commandByWhich.Dispose()
            'cmdContratFreq.Dispose()
            'cmdContratLoc.Dispose()
            'cmdContratServices.Dispose()

            'dt.Dispose()
            'dtByWhich.Dispose()
            'dtFreq.Dispose()
            'dtFreq1.Dispose()
            'dtLocation.Dispose()

            'dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            'dtServices.Dispose()

            CalculatePercentage()

            If txtNoofContractDistribution.Text = 0 Then
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                TextBoxTargetDesc.Text = ddlContractGrp.Text
            End If

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "PopulateDistributionRecordsAdd", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub


    Private Sub PopulateDistributionRecords100Pct(lContractGroup As String, lRcno As Long)
        Try
            'Start: Target
            'txtDistributionMode.Text = "EDIT"
            'lblMsgContractGroupDistribution.Text = "ACTION: EDIT DISTRIBUTION"

            lblAlertContractGroupDistribution.Text = ""

            SetRowDataContractGroupDistribution()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvContractGroupDistributionDetails.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTableCGDistribution") = dtScdrTarget1
                grvContractGroupDistributionDetails.DataSource = dtScdrTarget1
                grvContractGroupDistributionDetails.DataBind()

                SetPreviousDataContractGroupDistribution()

            Next i


            FirstGridViewRowContractGroupDistribution()

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()


            If String.IsNullOrEmpty(txtDistributionDate.Text) = False And txtDistributionDate.Text <> "__/__/____" Then
                Dim cmdContratTarget As MySqlCommand = New MySqlCommand
                cmdContratTarget.CommandType = CommandType.Text
                'cmdContratTarget.CommandText = "SELECT Rcno, ContractNo, ContractGroup, Percentage, CalculatedValue FROM tblcontractvaluedistribution where ContractNo ='" & txtContractNo.Text & "' and Distributiondate ='" & Convert.ToDateTime(txtSelectedDistributionDate.Text).ToString("yyyy-MM-dd") & "'"
                cmdContratTarget.CommandText = "SELECT Rcno, ContractNo, ContractGroup, Percentage, CalculatedValue FROM tblcontractvaluedistribution where Percentage > 0 and ContractNo ='" & txtContractNo.Text & "' and Distributiondate ='" & Convert.ToDateTime(txtSelectedDistributionDate.Text).ToString("yyyy-MM-dd") & "'"

                cmdContratTarget.Connection = conn

                Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
                Dim dtTarget As New DataTable
                dtTarget.Load(drTarget)

                Dim TotDetailRecordsLoc = dtTarget.Rows.Count
                If dtTarget.Rows.Count > 0 Then
                    txtNoofContractDistribution.Text = 1
                    Dim rowIndex = 0

                    For Each row As DataRow In dtTarget.Rows
                        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                            AddNewRowContractGroupDistribution()
                        End If

                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractGroup"))
                        'TextBoxTargetDesc.Enabled = False

                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)

                        If Convert.ToString(dtTarget.Rows(rowIndex)("ContractGroup")) = lContractGroup Then
                            TextBoxTargtId.Text = 100.0
                        Else
                            TextBoxTargtId.Text = 0.0
                        End If
                        'TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Percentage"))



                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)

                        If Convert.ToString(dtTarget.Rows(rowIndex)("ContractGroup")) = lContractGroup Then
                            TextBoxCalculatedValue.Text = txtTotalAgreedValueDistribution.Text
                        Else
                            TextBoxCalculatedValue.Text = 0.0
                        End If


                        'TextBoxCalculatedValue.Text = Convert.ToString(dtTarget.Rows(rowIndex)("CalculatedValue"))

                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))


                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))

                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                        TextBoxNeworExisting.Text = "E"

                        Dim Query As String
                        Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                        Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                        PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                        rowIndex += 1


                        If txtCentPercent.Text = "Y" Then
                            TextBoxTargetDesc2.Enabled = False
                        End If

                    Next row

                    'AddNewRowContractGroupDistribution()
                    'SetPreviousDataContractGroupDistribution()
                    cmdContratTarget.Dispose()
                    dtTarget.Dispose()
                    GoTo Endofsub
                    'Exit Sub
                End If
            End If

            CalculatePercentage()

            'If dtTarget.Rows.Count = 0 Then
            Dim cmdIndustry As MySqlCommand = New MySqlCommand
            cmdIndustry.CommandType = CommandType.Text
            cmdIndustry.CommandText = "SELECT Rcno, Industry, ContractGroup, Percentage FROM tblindustrycontractvaluedistribution where Industry ='" & ddlIndustry.Text.Trim & "' and ContractGroupMain ='" & ddlContractGrp.Text & "'"
            cmdIndustry.Connection = conn

            Dim drIndustry As MySqlDataReader = cmdIndustry.ExecuteReader()
            Dim dtIndustry As New DataTable
            dtIndustry.Load(drIndustry)

            Dim TotDetailRecordsLocdtIndustry = dtIndustry.Rows.Count

            If dtIndustry.Rows.Count > 0 Then
                txtNoofContractDistribution.Text = 1
                Dim rowIndex = 0

                For Each row As DataRow In dtIndustry.Rows
                    If (TotDetailRecordsLocdtIndustry > (rowIndex + 1)) Then
                        AddNewRowContractGroupDistribution()
                    End If

                    Dim TextBoxTargetDescIndustry As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    TextBoxTargetDescIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("ContractGroup"))

                    Dim TextBoxTargtIdIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                    TextBoxTargtIdIndustry.Text = Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))

                    Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtCalculatedValueGV"), TextBox)
                    TextBoxCalculatedValue.Text = Val(txtTotalAgreedValueDistribution.Text) * Val(Convert.ToString(dtIndustry.Rows(rowIndex)("Percentage"))) * 0.01

                    Dim TextBoxContractNoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                    TextBoxContractNoIndustry.Text = txtContractNo.Text.Trim


                    Dim TextBoxRcnoIndustry As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                    TextBoxRcnoIndustry.Text = 0

                    Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                    TextBoxNeworExisting.Text = "E"

                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)
                    rowIndex += 1

                    If txtCentPercent.Text = "Y" Then
                        TextBoxTargetDesc2.Enabled = False
                    End If
                Next row

                'AddNewRowContractGroupDistribution()
                'SetPreviousDataContractGroupDistribution()


            Else

                FirstGridViewRowContractGroupDistribution()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc)

                'AddNewRowContractGroupDistribution()

                TextBoxTargetDesc.Enabled = False
                txtNoofContractDistribution.Text = 0
            End If

Endofsub:

            'End: Target

            'End: Detail Records
            'command1.Dispose()
            'commandByWhich.Dispose()
            'cmdContratFreq.Dispose()
            'cmdContratLoc.Dispose()
            'cmdContratServices.Dispose()

            'dt.Dispose()
            'dtByWhich.Dispose()
            'dtFreq.Dispose()
            'dtFreq1.Dispose()
            'dtLocation.Dispose()

            'dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            'dtServices.Dispose()

            CalculatePercentage()

            If txtNoofContractDistribution.Text = 0 Then
                Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(0).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                TextBoxTargetDesc.Text = ddlContractGrp.Text
            End If

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSaveContractGroupDistribution_Click", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub
    Protected Sub btnAddDetailContractGroupDistribution_Click(ByVal sender As Object, ByVal e As EventArgs)
        AddNewRowContractGroupDistribution()
    End Sub

    Private Sub FindLastRcnoContractpricehistory()



        Dim conn As MySqlConnection = New MySqlConnection(constr)
        conn.Open()

        txtRcnoFirstContractPriceHistory.Text = 0

        Dim commandLastRcno As MySqlCommand = New MySqlCommand
        commandLastRcno.CommandType = CommandType.Text
        commandLastRcno.CommandText = "SELECT BatchNo FROM tblcontractpricehistory where ContractNo=@ContractNo order by rcno desc Limit 1 "

        commandLastRcno.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
        commandLastRcno.Connection = conn

        Dim drLastRcno As MySqlDataReader = commandLastRcno.ExecuteReader()
        Dim dtLastRcno As New DataTable
        dtLastRcno.Load(drLastRcno)


        If dtLastRcno.Rows.Count > 0 Then
            txtRcnoFirstPrevContractPriceHistory.Text = dtLastRcno.Rows(0)("BatchNo").ToString
        End If

        'If String.IsNullOrEmpty(txtRcnoFirstContractPriceHistory.Text) = True Then
        '    txtRcnoFirstContractPriceHistory.Text = 0
        'End If

        If String.IsNullOrEmpty(txtRcnoFirstPrevContractPriceHistory.Text) = True Then
            txtRcnoFirstPrevContractPriceHistory.Text = 0
        End If
        txtRcnoFirstContractPriceHistory.Text = txtRcnoFirstPrevContractPriceHistory.Text + 1
        'Catch ex As Exception
        '    lblAlert.Text = ex.Message.ToString
        '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSaveContractGroupDistribution_Click", ex.Message.ToString, txtContractNo.Text)
        '    mdlContractGroupDistribution.Show()
        '    Exit Sub
        'End Try
    End Sub

    Protected Sub btnSaveContractGroupDistribution_Click(sender As Object, e As EventArgs) Handles btnSaveContractGroupDistribution.Click
        Try
            lblAlertContractGroupDistribution.Text = ""


            If String.IsNullOrEmpty(txtDistributionDate.Text) = True Or txtDistributionDate.Text = "__/__/____" Then
                lblAlertContractGroupDistribution.Text = "PLEASE ENTER DISTRIBUTION DATE"
                txtDistributionDate.Focus()
                mdlContractGroupDistribution.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)

                Exit Sub
            End If


            If Val(txtTotalPercent.Text) <> 100 Then
                lblAlertContractGroupDistribution.Text = "TOTAL PERCENTAGE SHOULD BE 100%"
                mdlContractGroupDistribution.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                Exit Sub
            End If

           
                If String.IsNullOrEmpty(txtLastPriceChangeDate.Text.Trim) = False Then
                If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                    If Convert.ToDateTime(txtDistributionDate.Text.Trim) < Convert.ToDateTime(txtLastPriceChangeDate.Text.Trim) Then
                        'txtAlertStatus.Visible = True
                        txtDistributionDate.Text = ""
                        lblAlertContractGroupDistribution.Text = "Distribution Date cannot be earlier than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                          txtDistributionDate.Focus()
                        mdlContractGroupDistribution.Show()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                        Exit Sub
                    End If
                End If
                End If

            If txtDuplicateContractGroup.Text = "Y" Then
                lblAlertContractGroupDistribution.Text = "DUPLICATE CONTRACT GROUP HAS BEEN SELECTED"
                mdlContractGroupDistribution.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                Exit Sub
            End If

            SetRowDataContractGroupDistribution()

            Dim table As DataTable = TryCast(ViewState("CurrentTableCGDistribution"), DataTable)

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()



            Dim conn3 As MySqlConnection = New MySqlConnection(constr)
            conn3.Open()

            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text
            command3.CommandText = "UPDATE  tblcontractpricehistory SET Void = True where ContractNo = @ContractNo and Date =@DistributionDate   and BatchNo <> " & txtRcnoFirstContractPriceHistory.Text
            command3.Parameters.Clear()

            command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
            command3.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))

            command3.Connection = conn3

            command3.ExecuteNonQuery()
            conn3.Close()
            conn3.Dispose()
            command3.Dispose()


            'FindLastRcnoContractpricehistory()

            'txtRcnoFirstContractPriceHistory.Text = 0

            'Dim commandLastRcno As MySqlCommand = New MySqlCommand
            'commandLastRcno.CommandType = CommandType.Text
            'commandLastRcno.CommandText = "SELECT FirstRcno FROM tblcontractpricehistory where ContractNo=@ContractNo order by rcno desc Limit 1 "

            'commandLastRcno.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            'commandLastRcno.Connection = conn

            'Dim drLastRcno As MySqlDataReader = commandLastRcno.ExecuteReader()
            'Dim dtLastRcno As New DataTable
            'dtLastRcno.Load(drLastRcno)


            'If dtLastRcno.Rows.Count > 0 Then
            '    txtRcnoFirstContractPriceHistory.Text = dtLastRcno.Rows(0)("FirstRcno").ToString
            'End If

            'txtRcnoFirstContractPriceHistory.Text = txtRcnoFirstContractPriceHistory.Text + 1

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            Dim lcount As Integer
            lcount = 1
            If table IsNot Nothing Then

                Dim lDistributionSummary As String
                lDistributionSummary = ""
                txtIsContractGroupPercExists.Text = ""
                Dim lExistingContractGroup As String
                lExistingContractGroup = ""

                '25.07.22
                'FindLastRcnoContractpricehistory()
                For rowIndex1 As Integer = 0 To table.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxTargetDesc1 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    Dim TextBoxTargtId1 As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(1).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                    Dim TextBoxCalculatedValue1 As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(1).FindControl("txtCalculatedValueGV"), TextBox)


                    If (String.IsNullOrEmpty(TextBoxTargetDesc1.Text) = False) And (TextBoxTargetDesc1.Text <> "0") And (TextBoxTargetDesc1.Text <> "-1") Then

                        '09.07.22

                        Dim commandExistingContractGroup As MySqlCommand = New MySqlCommand
                        commandExistingContractGroup.CommandType = CommandType.Text
                        lblAlertContractGroupDistribution.Text = "Contract Group " & TextBoxTargetDesc1.Text.Trim & " already Exists for this Contract"
                        'commandExistingContractGroup.CommandText = "SELECT DistributionDate, ContractNo, ContractGroup, Percentage FROM tblcontractvaluedistribution where ContractNo=@ContractNo and ContractGroup=@ContractGroup and Percentage=@Percentage and DistributionDate = (Select DistributionDate from tblcontractvaluedistributionsummary where ContractNo=@ContractNo order by DistributionDate desc limit 1) "
                        commandExistingContractGroup.CommandText = "SELECT DistributionDate, ContractNo, ContractGroup, Percentage FROM tblcontractvaluedistribution where ContractNo=@ContractNo and ContractGroup=@ContractGroup and Percentage=@Percentage and DistributionDate = (Select DistributionDate from tblcontractvaluedistributionsummary where ContractNo=@ContractNo and distributiondate <> '" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' order by DistributionDate desc limit 1) "

                        commandExistingContractGroup.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandExistingContractGroup.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc1.Text.Trim)
                        commandExistingContractGroup.Parameters.AddWithValue("@Percentage", TextBoxTargtId1.Text.Trim)

                        commandExistingContractGroup.Connection = conn

                        Dim drExistingContractGroup As MySqlDataReader = commandExistingContractGroup.ExecuteReader()
                        Dim dtExistingContractGroup As New DataTable
                        dtExistingContractGroup.Load(drExistingContractGroup)

                        If dtExistingContractGroup.Rows.Count > 0 Then
                            txtIsContractGroupPercExists.Text = "Y"

                            If String.IsNullOrEmpty(lExistingContractGroup) = True Then
                                lExistingContractGroup = TextBoxTargetDesc1.Text.Trim & ": " & TextBoxTargtId1.Text.Trim & "%"
                            Else
                                lExistingContractGroup = lExistingContractGroup & ", " & TextBoxTargetDesc1.Text.Trim & ": " & TextBoxTargtId1.Text.Trim & "%"

                            End If

                        Else
                            txtIsContractGroupPercExists.Text = "N"
                        End If

                            '10.07
                        End If


                    lcount = lcount + 1
                Next rowIndex1


                If txtIsContractGroupPercExists.Text = "Y" Then
                    lblAlertContractGroupDistribution.Text = "The latest Distribution record is already " & lExistingContractGroup.Trim
                    Exit Sub
                End If

                '25.07.22

                'SetRowDataContractGroupDistribution()

                lcount = 1
                FindLastRcnoContractpricehistory()
                Dim RcnoLastIdDistribution As Long
                RcnoLastIdDistribution = 0

                For rowIndex As Integer = 0 To table.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                    Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("txtCalculatedValueGV"), TextBox)


                    If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        '09.07.22

                        'Dim commandCountRecord1 As MySqlCommand = New MySqlCommand
                        'commandCountRecord1.CommandType = CommandType.Text
                        'lblAlertContractGroupDistribution.Text = "Contract Group " & TextBoxTargetDesc.Text.Trim & " already Exists for this Contract"
                        ''commandCountRecord1.CommandText = "SELECT ifnull(count(ContractNo),0) as CountRecord1, ContractGroup FROM tblcontractvaluedistribution where ContractNo=@ContractNo "
                        'commandCountRecord1.CommandText = "SELECT ContractNo, ContractGroup, Percentage FROM tblcontractvaluedistribution where ContractNo=@ContractNo and ContractGroup=@ContractGroup and Percentage=@Percentage order by DistributionDate desc Limit 1 "

                        'commandCountRecord1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        'commandCountRecord1.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc.Text.Trim)
                        'commandCountRecord1.Parameters.AddWithValue("@Percentage", TextBoxTargtId.Text.Trim)

                        'commandCountRecord1.Connection = conn

                        'Dim drCountRecord1 As MySqlDataReader = commandCountRecord1.ExecuteReader()
                        'Dim dtCountRecord1 As New DataTable
                        'dtCountRecord1.Load(drCountRecord1)

                        '10.07
                        'If dtCountRecord1.Rows(0)("CountRecord1").ToString = 1 Then
                        'If dtCountRecord1.Rows(0)("ContractGroup").ToString = TextBoxTargetDesc.Text.Trim And dtCountRecord1.Rows(0)("Percentage").ToString = 100 And TextBoxTargtId.Text = "100" Then
                        '    lblAlertContractGroupDistribution.Text = "Contract Group " & TextBoxTargetDesc.Text.Trim & " already Exists for this Contract"
                        '    Exit Sub
                        'End If


                        '10.07
                        'End If


                        '09.07.22
                        'New

                      
                        'Dim RcnoLastIdDistribution As Long

                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)

                        If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then

                            Dim qry As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                            qry = qry + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                            'qry = qry + " LastModifiedBy, LastModifiedOn)"

                            qry = qry + " VALUES(@ContractNo, @ContractGroup, @Percentage, @CalculatedValue,  @DistributionDate,  @BatchNo, "
                            qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                            command.CommandText = qry
                            command.Parameters.Clear()

                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                            command.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc.Text.Trim)
                            command.Parameters.AddWithValue("@Percentage", TextBoxTargtId.Text)
                            command.Parameters.AddWithValue("@CalculatedValue", TextBoxCalculatedValue.Text)
                            command.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                            command.Parameters.AddWithValue("@BatchNo", txtDistributionDate.Text + txtContractNo.Text)

                            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            command.Connection = conn
                            command.ExecuteNonQuery()

                            '27.07.22


                            Dim sqlLastIdDistribution As String

                            sqlLastIdDistribution = "SELECT last_insert_id() from tblContractValueDistribution"

                            Dim commandRcnoDistribution As MySqlCommand = New MySqlCommand
                            commandRcnoDistribution.CommandType = CommandType.Text
                            commandRcnoDistribution.CommandText = sqlLastIdDistribution
                            commandRcnoDistribution.Parameters.Clear()
                            commandRcnoDistribution.Connection = conn
                            'txtRcno.Text = commandRcno.ExecuteScalar()
                            RcnoLastIdDistribution = commandRcnoDistribution.ExecuteScalar()
                            commandRcnoDistribution.Dispose()


                            '27.07.22
                            '    'Populate ContratPriceHistory

                            '    Dim lOldContractValue As Decimal = 0.0


                            '    'Start: Select Last oldContractValue
                            '    Dim commandLastOldContractValue As MySqlCommand = New MySqlCommand
                            '    commandLastOldContractValue.CommandType = CommandType.Text
                            '    commandLastOldContractValue.CommandText = "Select ifnull(NewAgreedValue,0) as LastAgreeVal from tblContractPriceHistory where ContractNo ='" & txtContractNo.Text & "' and ContractGroup ='" & TextBoxTargetDesc.Text.Trim & "' order by Date desc limit 1"
                            '    commandLastOldContractValue.Connection = conn

                            '    Dim drLastOldContractValue As MySqlDataReader = commandLastOldContractValue.ExecuteReader()
                            '    Dim dtLastOldContractValue As New DataTable
                            '    dtLastOldContractValue.Load(drLastOldContractValue)


                            '    If dtLastOldContractValue.Rows.Count > 0 Then

                            '        lOldContractValue = dtLastOldContractValue.Rows(0)("LastAgreeVal").ToString

                            '        commandLastOldContractValue.Dispose()
                            '        drLastOldContractValue.Close()

                            '    End If

                            ''End:Select Last oldContractValue

                            '    'Populate ContratPriceHistory
                            'Dim commandContratPriceHistory As MySqlCommand = New MySqlCommand
                            '    commandContratPriceHistory.CommandType = CommandType.StoredProcedure


                            '    'Dim qryContratPriceHistory As String = "INSERT INTO tblContractPriceHistory(ContractNo, Date, OldAgreedValue, NewAgreedValue, ChangeinAgreedValue, PortfolioValueChange, PercentChange, Type, SubType, Comments, ContractGroup,  "
                            '    ''qryContratPriceHistory = qryContratPriceHistory + "  CreatedBy, CreatedOn,"
                            '    'qryContratPriceHistory = qryContratPriceHistory + " PriceModifiedBy, PriceModifiedOn)"

                            '    'qryContratPriceHistory = qryContratPriceHistory + " VALUES(@ContractNo, @Date, @OldAgreedValue, @NewAgredeValue, @ChangeinAgreedValue, @PortfolioValueChange, @PercentChange, @Type, @SubType,@Comments, @ContractGroup,  "
                            '    ''qryContratPriceHistory = qryContratPriceHistory + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"
                            '    'qryContratPriceHistory = qryContratPriceHistory + " @PriceModifiedBy, @PriceModifiedOn)"

                            '    commandContratPriceHistory.CommandText = "UpdateAgreeValueFromDistribution"
                            'commandContratPriceHistory.Parameters.Clear()

                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_OldAgreedValue", lOldContractValue)
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeVal.Text)
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_NewAgreedValue", TextBoxCalculatedValue.Text)
                            '    'commandContratPriceHistory.Parameters.AddWithValue("@pr_ChangeinAgreedValue", (TextBoxCalculatedValue.Text - lOldContractValue))


                            '    'commandContratPriceHistory.Parameters.AddWithValue("@pr_PortfolioValueChange", txtContractNo.Text.Trim)


                            '    'commandContratPriceHistory.Parameters.AddWithValue("@PercentChange", (TextBoxCalculatedValue.Text - lOldContractValue) * 0.01)
                            '    'commandContratPriceHistory.Parameters.AddWithValue("@Type", "CONVERSION")
                            '    'commandContratPriceHistory.Parameters.AddWithValue("@SubType", "CONVERSION")
                            '    'commandContratPriceHistory.Parameters.AddWithValue("@Comments", "")
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_ContractGroup", TextBoxTargetDesc.Text.Trim)

                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                            '    commandContratPriceHistory.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            '    commandContratPriceHistory.Connection = conn
                            '    commandContratPriceHistory.ExecuteNonQuery()

                            '    'Populate ContratPriceHistory

                        Else
                            'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                            'Dim conn As MySqlConnection = New MySqlConnection(constr)
                            'conn.Open()

                            'Dim command As MySqlCommand = New MySqlCommand
                            'command.CommandType = CommandType.Text

                            Dim qry As String = "Update tblContractValueDistribution set ContractGroup = @ContractGroup,  Percentage = @Percentage, CalculatedValue=@CalculatedValue, DistributionDate=@DistributionDate, BatchNo=@BatchNo,"
                            qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"

                            command.CommandText = qry
                            command.Parameters.Clear()

                            command.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc.Text.Trim)
                            command.Parameters.AddWithValue("@Percentage", TextBoxTargtId.Text)
                            command.Parameters.AddWithValue("@CalculatedValue", TextBoxCalculatedValue.Text)
                            command.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                            command.Parameters.AddWithValue("@BatchNo", txtDistributionDate.Text + txtContractNo.Text)
                            command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))

                            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            command.Connection = conn
                            command.ExecuteNonQuery()
                            RcnoLastIdDistribution = TextBoxRcno.Text.Trim
                        End If



                        If lDistributionSummary <> "" Then
                            lDistributionSummary = lDistributionSummary + "; "
                        End If
                        lDistributionSummary = lDistributionSummary + TextBoxTargetDesc.Text.Trim + ": " + TextBoxTargtId.Text + "%"

                        'Populate ContratPriceHistory

                        Dim lOldContractValue As Decimal = 0.0


                        'Start: Select Last oldContractValue
                        Dim commandLastOldContractValue As MySqlCommand = New MySqlCommand
                        commandLastOldContractValue.CommandType = CommandType.Text
                        commandLastOldContractValue.CommandText = "Select ifnull(NewAgreedValue,0) as LastAgreeVal from tblContractPriceHistory where ContractNo ='" & txtContractNo.Text & "' and ContractGroup ='" & TextBoxTargetDesc.Text.Trim & "' and Void =False  order by Date desc limit 1"
                        commandLastOldContractValue.Connection = conn

                        Dim drLastOldContractValue As MySqlDataReader = commandLastOldContractValue.ExecuteReader()
                        Dim dtLastOldContractValue As New DataTable
                        dtLastOldContractValue.Load(drLastOldContractValue)

                        If dtLastOldContractValue.Rows.Count > 0 Then

                            lOldContractValue = dtLastOldContractValue.Rows(0)("LastAgreeVal").ToString

                            commandLastOldContractValue.Dispose()
                            drLastOldContractValue.Close()

                        End If

                        'End:Select Last oldContractValue

                        'ServiceDescription

                        Dim cmdConcatServiceDescContractPriceHistory As MySqlCommand = New MySqlCommand

                        cmdConcatServiceDescContractPriceHistory.CommandType = CommandType.Text
                        cmdConcatServiceDescContractPriceHistory.CommandText = "SELECT Frequency, TargetID FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
                        cmdConcatServiceDescContractPriceHistory.Connection = conn

                        Dim drUpdateServiceDescContractPriceHistory As MySqlDataReader = cmdConcatServiceDescContractPriceHistory.ExecuteReader()
                        Dim dtUpdateServiceDescContractPriceHistory As New DataTable
                        dtUpdateServiceDescContractPriceHistory.Load(drUpdateServiceDescContractPriceHistory)

                        txtServiceDescriptionConsPH.Text = ""

                        For i = 0 To dtUpdateServiceDescContractPriceHistory.Rows.Count - 1

                            If i = 0 Then
                                txtServiceDescriptionConsPH.Text = dtUpdateServiceDescContractPriceHistory.Rows(i)("Frequency").ToString() & " : " & dtUpdateServiceDescContractPriceHistory.Rows(i)("TargetID").ToString()
                            Else
                                txtServiceDescriptionConsPH.Text = txtServiceDescriptionConsPH.Text & " ;  " & dtUpdateServiceDescContractPriceHistory.Rows(i)("Frequency").ToString() & " : " & dtUpdateServiceDescContractPriceHistory.Rows(i)("TargetID").ToString()
                            End If

                        Next i

                        'Service Desctption

                        Dim commandContratPriceHistory As MySqlCommand = New MySqlCommand
                        commandContratPriceHistory.CommandType = CommandType.StoredProcedure

                        commandContratPriceHistory.CommandText = "UpdateAgreeValueFromDistributionNew"
                        commandContratPriceHistory.Parameters.Clear()

                        commandContratPriceHistory.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_OldAgreedValue", lOldContractValue)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeVal.Text)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_NewAgreedValue", TextBoxCalculatedValue.Text)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_count", lcount)

                        If txtContractDate.Text = txtDistributionDate.Text Then
                            commandContratPriceHistory.Parameters.AddWithValue("@pr_Type", "OPENING")
                        Else
                            commandContratPriceHistory.Parameters.AddWithValue("@pr_Type", "CONVERSION")
                        End If

                        'commandContratPriceHistory.Parameters.AddWithValue("@SubType", "CONVERSION")
                        'commandContratPriceHistory.Parameters.AddWithValue("@Comments", "")
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_ContractGroup", TextBoxTargetDesc.Text.Trim)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                        'commandContratPriceHistory.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))

                        commandContratPriceHistory.Parameters.AddWithValue("@pr_RcnoDistribution", RcnoLastIdDistribution)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_DistributionPercentage", TextBoxTargtId.Text)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_DistributionBatchNo", txtDistributionDate.Text + txtContractNo.Text)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionConsPH.Text)
                        commandContratPriceHistory.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))


                        commandContratPriceHistory.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContratPriceHistory.Connection = conn
                        commandContratPriceHistory.ExecuteNonQuery()

                        'Dim sqlLastId As String
                        'sqlLastId = "SELECT last_insert_id() from tblcontractpricehistory"


                        'Dim commandRcno As MySqlCommand = New MySqlCommand
                        'commandRcno.CommandType = CommandType.Text
                        'commandRcno.CommandText = sqlLastId
                        'commandRcno.Parameters.Clear()
                        'commandRcno.Connection = conn

                        'txtRcnoFirstContractPriceHistory.Text = ""
                        'Populate ContratPriceHistory
                    End If

                    'Quote: 17.11.2022
                    'Start: Update Other Contract Groups for 100% Distribution
                    'txtCentPercent.Text = "Y"

                    If TextBoxTargtId.Text = "100" Then

                        'If txtCentPercent.Text = "Y" And TextBoxTargetDesc.Text = "-1" Then
                        Dim command1 As MySqlCommand = New MySqlCommand
                        command1.CommandType = CommandType.Text

                        'command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
                        command1.CommandText = "SELECT *  FROM tblcontractpricehistory where ContractNo ='" & txtContractNo.Text & "' and BatchNo =" & txtRcnoFirstPrevContractPriceHistory.Text & " and ContractGroup <> '" & TextBoxTargetDesc.Text.Trim & "'"

                        command1.Connection = conn

                        Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
                        Dim dtservicecontractDet As New DataTable
                        dtservicecontractDet.Load(drservicecontractDet)

                        'If dtservicecontractDet.Rows.Count > 0 Then
                        '    For x As Integer = 0 To dtservicecontractDet.Rows.Count - 1

                        '        Dim commandContratPriceHistory1 As MySqlCommand = New MySqlCommand
                        '        commandContratPriceHistory1.CommandType = CommandType.StoredProcedure

                        '        commandContratPriceHistory1.CommandText = "UpdateAgreeValueFromDistributionNew"
                        '        commandContratPriceHistory1.Parameters.Clear()

                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_OldAgreedValue", dtservicecontractDet.Rows(x)("NewAgreedValue").ToString())
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeVal.Text)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_NewAgreedValue", 0)
                        '        'commandContratPriceHistory1.Parameters.AddWithValue("@pr_count", lcount)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_count", 0)
                        '        If txtContractDate.Text = txtDistributionDate.Text Then
                        '            commandContratPriceHistory1.Parameters.AddWithValue("@pr_Type", "OPENING")
                        '        Else
                        '            commandContratPriceHistory1.Parameters.AddWithValue("@pr_Type", "CONVERSION")
                        '        End If

                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_ContractGroup", dtservicecontractDet.Rows(x)("ContractGroup").ToString())
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))

                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_RcnoDistribution", RcnoLastIdDistribution)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_DistributionPercentage", TextBoxTargtId.Text)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_DistributionBatchNo", txtDistributionDate.Text + txtContractNo.Text)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionConsPH.Text)
                        '        commandContratPriceHistory1.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        '        commandContratPriceHistory1.Connection = conn
                        '        commandContratPriceHistory1.ExecuteNonQuery()
                        '        commandContratPriceHistory1.Dispose()
                        '    Next x

                        'End If
                        command1.Dispose()

                        'Quote: 17.11.2022

                        'Start: 14.10.22
                        'where ContractNo ='" & txtContractNo.Text & "' and BatchNo =" & txtRcnoFirstPrevContractPriceHistory.Text & " and ContractGroup <> '" & TextBoxTargetDesc.Text.Trim & "'"
                        Dim qry As String = "Update tblContract set ContractGroup = @ContractGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn =@LastModifiedOn where ContractNo = @ContractNo"
                        'qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"

                        Dim commandUpdContractGroup1 As MySqlCommand = New MySqlCommand
                        commandUpdContractGroup1.CommandText = qry
                        commandUpdContractGroup1.Parameters.Clear()

                        commandUpdContractGroup1.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc.Text.Trim)
                        commandUpdContractGroup1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandUpdContractGroup1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandUpdContractGroup1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandUpdContractGroup1.Connection = conn
                        commandUpdContractGroup1.ExecuteNonQuery()

                        qry = ""

                        Dim commandUpdContractGroup2 As MySqlCommand = New MySqlCommand
                        commandUpdContractGroup2.CommandType = CommandType.Text

                        'command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
                        commandUpdContractGroup2.CommandText = "SELECT distinct(LocationId) as LocId FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"

                        commandUpdContractGroup2.Connection = conn

                        Dim drUpdContractGroup2 As MySqlDataReader = commandUpdContractGroup2.ExecuteReader()
                        Dim dtUpdContractGroup2 As New DataTable
                        dtUpdContractGroup2.Load(drUpdContractGroup2)

                        If dtUpdContractGroup2.Rows.Count > 0 Then
                            If IsDBNull((dtUpdContractGroup2.Rows(0)("LocId"))) = False Then
                                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                                    qry = "Update tblCompanyLocation set ContractGroup = @ContractGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn =@LastModifiedOn where LocationID=@LocationID"
                                Else
                                    qry = "Update tblPersonLocation set ContractGroup = @ContractGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn =@LastModifiedOn where LocationID=@LocationID"

                                End If


                                Dim commandUpdContractGroup3 As MySqlCommand = New MySqlCommand
                                commandUpdContractGroup3.CommandText = qry
                                commandUpdContractGroup3.Parameters.Clear()

                                commandUpdContractGroup3.Parameters.AddWithValue("@ContractGroup", TextBoxTargetDesc.Text.Trim)
                                commandUpdContractGroup3.Parameters.AddWithValue("@LocationID", dtUpdContractGroup2.Rows(0)("LocId").Trim)
                                commandUpdContractGroup3.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                commandUpdContractGroup3.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                commandUpdContractGroup3.Connection = conn
                                commandUpdContractGroup3.ExecuteNonQuery()

                                ddlContractGrp.Text = TextBoxTargetDesc.Text.Trim
                            End If
                        End If

                        'End: 14.10.22

                    End If

                    'End: Update Other Contract Groups for 100% Distribution

                    lcount = lcount + 1
                Next rowIndex



                'Dim conn As MySqlConnection = New MySqlConnection()

                'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'conn.Open()
                If txtDistributionMode.Text = "ADD" Then
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    command1.CommandText = "INSERT INTO  tblcontractvaluedistributionsummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn) values ( @ContractNo, @DistributionDate, @DistributionSummary, @BatchNo, @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"
                    command1.Parameters.Clear()

                    command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command1.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                    command1.Parameters.AddWithValue("@BatchNo", txtDistributionDate.Text + txtContractNo.Text)
                    command1.Parameters.AddWithValue("@DistributionSummary", lDistributionSummary.Trim)
                    command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command1.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command1.Connection = conn

                    command1.ExecuteNonQuery()
                    conn.Close()
                    conn.Dispose()
                    command1.Dispose()
                ElseIf txtDistributionMode.Text = "EDIT" Then

                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text
                    command1.CommandText = "UPDATE  tblcontractvaluedistributionsummary SET DistributionDate=@DistributionDate , DistributionSummary =@DistributionSummary, BatchNo=@BatchNo, LastModifiedBy=@LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno =" & txtDistributionRcno.Text
                    command1.Parameters.Clear()

                    command1.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                    command1.Parameters.AddWithValue("@BatchNo", txtDistributionDate.Text + txtContractNo.Text)
                    command1.Parameters.AddWithValue("@DistributionSummary", lDistributionSummary.Trim)
                    command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command1.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command1.Connection = conn

                    command1.ExecuteNonQuery()
                    conn.Close()
                    conn.Dispose()
                    command1.Dispose()


                    'Dim conn3 As MySqlConnection = New MySqlConnection(constr)
                    'conn3.Open()

                    'Dim command3 As MySqlCommand = New MySqlCommand
                    'command3.CommandType = CommandType.Text
                    'command3.CommandText = "UPDATE  tblcontractpricehistory SET Void = True where ContractNo = @ContractNo and Date =@DistributionDate   and BatchNo <> " & txtRcnoFirstContractPriceHistory.Text
                    'command3.Parameters.Clear()

                    'command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    'command3.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd"))
                    ''command3.Parameters.AddWithValue("@BatchNo", txtDistributionDate.Text + txtContractNo.Text)
                    ''command3.Parameters.AddWithValue("@DistributionSummary", lDistributionSummary.Trim)
                    ''command3.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    ''command3.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    'command3.Connection = conn3

                    'command3.ExecuteNonQuery()
                    'conn3.Close()
                    'conn3.Dispose()
                    'command3.Dispose()
                End If


                'Dim conn4 As MySqlConnection = New MySqlConnection(constr)
                'conn4.Open()

                'Dim command4 As MySqlCommand = New MySqlCommand
                'command4.CommandType = CommandType.Text
                'command4.CommandText = "UPDATE  tblcontractpricehistory SET Comments = @Comments where  BatchNo =@BatchNo "
                'command4.Parameters.Clear()

                ''command4.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                'command4.Parameters.AddWithValue("@Comments", lDistributionSummary.Trim)
                'command4.Parameters.AddWithValue("@BatchNo", txtRcnoFirstContractPriceHistory.Text)
                ''command3.Parameters.AddWithValue("@DistributionSummary", lDistributionSummary.Trim)
                ''command3.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                ''command3.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                'command4.Connection = conn4

                'command4.ExecuteNonQuery()
                'conn4.Close()
                'conn4.Dispose()
                'command4.Dispose()
            End If


         

            '26.01.22

            DisplayContractPriceHistory()
            'Dim connHistory As MySqlConnection = New MySqlConnection(constr)
            'connHistory.Open()
            'Dim commandHistory As MySqlCommand = New MySqlCommand

            'commandHistory.CommandType = CommandType.Text
            'commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
            'commandHistory.Connection = connHistory

            'Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            'Dim dtHistory As New DataTable
            'dtHistory.Load(drHistory)

            'If dtHistory.Rows.Count > 0 Then
            '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
            '    btnHistory.Text = "PRICE HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
            '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If

            'commandHistory.Dispose()
            'dtHistory.Dispose()
            'drHistory.Dispose()

            ''26.02.22
            'connHistory.Close()
            'connHistory.Dispose()
            command.Dispose()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGFREQ", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            CalculateTotalDistribution()

            txtLastPriceChangeDate.Text = txtDistributionDate.Text
            txtIsPopup.Text = ""
            mdlContractGroupDistribution.Hide()

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSaveContractGroupDistribution_Click", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub


    Protected Sub ddlContractGroupDistributionGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try


            lblMsgContractGroupDistribution.Text = ""
            lblAlertContractGroupDistribution.Text = ""
            'Dim lTargetDesciption As String
            updPanelContract1.Update()


            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtPercContractGroupDistributionGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtCalculatedValueGV"), TextBox)


            'lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex
            If lblid1.SelectedIndex = 0 Then
                lblid2.Text = 0.0
                lblid3.Text = 0.0
                CalculatePercentage()
                mdlContractGroupDistribution.Show()
                Exit Sub
            End If

            'If txtCentPercent.Text = "Y" Then
            '    If lblid1.Text <> "-1" Then
            '        lblAlertContractGroupDistribution.Text = "For 100% Distribution for a Contract Group, No other Contract Group can be selected.."
            '        lblid1.SelectedIndex = 0
            '        mdlContractGroupDistribution.Show()
            '        Exit Sub
            '    End If
            'End If


            'Get Targt Id

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text

            'command1.CommandText = "SELECT ContractGroup FROM tblContractGroup where descrip1= '" & lTargetDesciption & "'"
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            ''If dt.Rows.Count > 0 Then
            ''    lblid2.Text = dt.Rows(0)("TargetId").ToString
            ''End If
            ''HasDuplicateTarget = False
            ''Dim HasDuplicate As Boolean
            HasDuplicateTarget = HighlightDuplicateContractGroupDistribution(grvContractGroupDistributionDetails)

            txtDuplicateContractGroup.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateTarget = True Then
                txtDuplicateContractGroup.Text = "Y"
                'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlertContractGroupDistribution.Text = "Duplicate Contract Group has been selected"
                mdlContractGroupDistribution.Show()
                Exit Sub
            End If


            If rowindex1 = grvContractGroupDistributionDetails.Rows.Count - 1 Then
                btnAddDetailContractGroupDistribution_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If
            'txtTargetDesc.Text = txtTargetDesc.Text & lblid1.Text & ", "
            'conn.Close()
            'conn.Dispose()
            'command1.Dispose()
            'dt.Dispose()
            mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlContractGroupDistributionGV_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub



    Private Sub FirstGridViewRowContractGroupDistribution()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("ContractGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Percentage", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("CalculatedValue", GetType(String)))
            dt.Columns.Add(New DataColumn("DistributionDate", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))
            dt.Columns.Add(New DataColumn("NeworExisting", GetType(String)))

            dr = dt.NewRow()

            dr("ContractGroup") = String.Empty
            dr("Percentage") = String.Empty
            dr("ContractNo") = String.Empty
            dr("CalculatedValue") = 0.0
            dr("DistributionDate") = String.Empty
            dr("Rcno") = 0
            dr("NeworExisting") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableCGDistribution") = dt

            grvContractGroupDistributionDetails.DataSource = dt
            grvContractGroupDistributionDetails.DataBind()

            Dim btnAdd As Button = CType(grvContractGroupDistributionDetails.FooterRow.Cells(1).FindControl("btnAddDetailContractGroupDistribution"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FirstGridViewRowContractGroupDistribution", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowContractGroupDistribution()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTableCGDistribution") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtCalculatedValueGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxDistributionDate As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtDistibutionDateGV"), TextBox)

                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtNeworExistingGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("ContractGroup") = ""
                        drCurrentRow("Percentage") = 0.0
                        drCurrentRow("CalculatedValue") = 0.0
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("DistributionDate") = ""
                        drCurrentRow("Rcno") = 0
                        drCurrentRow("NeworExisting") = ""

                        dtCurrentTable.Rows(i - 1)("ContractGroup") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Percentage") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("CalculatedValue") = TextBoxCalculatedValue.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("DistributionDate") = TextBoxDistributionDate.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("NeworExisting") = TextBoxNeworExisting.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableCGDistribution") = dtCurrentTable

                    grvContractGroupDistributionDetails.DataSource = dtCurrentTable
                    grvContractGroupDistributionDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex2).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)

                        'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                        Query = "Select ContractGroup from tblContractGroup order by ContractGroup"
                        PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc1)

                        Dim TextBoxNeworExisting1 As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex2).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                        'TextBoxNeworExisting1.Text = "E"


                        If TextBoxNeworExisting1.Text = "E" Then
                            TextBoxTargetDesc1.Enabled = False
                        Else
                            TextBoxTargetDesc1.Enabled = True
                        End If

                        If txtCentPercent.Text = "Y" Then
                            TextBoxTargetDesc1.Enabled = False
                        End If
                        'If rowIndex2 = 0 Then
                        '    TextBoxTargetDesc1.Enabled = False

                        'End If
                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    Query = "Select ContractGroup from tblContractGroup  order by ContractGroup"
                    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If

            SetPreviousDataContractGroupDistribution()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "AddNewRowContractGroupDistribution", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub




    Private Sub SetPreviousDataContractGroupDistribution()
        Try
            Dim rowIndex As Integer = 0

            Dim Query As String
            'txtTargetDesc.Text = ""
            If ViewState("CurrentTableCGDistribution") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtCalculatedValueGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxDistributionDate As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtDistibutionDateGV"), TextBox)

                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtNeworExistingGV"), TextBox)


                        TextBoxTargetDesc.Text = dt.Rows(i)("ContractGroup").ToString()
                        TextBoxTargtId.Text = dt.Rows(i)("Percentage").ToString()
                        TextBoxCalculatedValue.Text = dt.Rows(i)("CalculatedValue").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxDistributionDate.Text = dt.Rows(i)("DistributionDate").ToString()

                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()
                        TextBoxNeworExisting.Text = dt.Rows(i)("NeworExisting").ToString()

                        If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                            Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                            'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                            Query = "Select ContractGroup from tblContractGroup  order by ContractGroup"
                            PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)

                            If rowIndex = 0 Then
                                TextBoxTargetDesc2.Enabled = False
                            End If

                            Dim TextBoxNeworExisting1 As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("txtNeworExistingGV"), TextBox)
                            'TextBoxNeworExisting1.Text = "E"


                            If TextBoxNeworExisting1.Text = "E" Then
                                TextBoxTargetDesc2.Enabled = False
                            Else
                                TextBoxTargetDesc2.Enabled = True
                            End If

                            If txtCentPercent.Text = "Y" Then
                                TextBoxTargetDesc2.Enabled = False
                                'TextBoxTargetDesc2.Items.Clear()
                            End If
                        End If

                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SetPreviousDataContractGroupDistribution", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataContractGroupDistribution()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableCGDistribution") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(1).FindControl("txtPercContractGroupDistributionGV"), TextBox)
                        Dim TextBoxCalculatedValue As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtCalculatedValueGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxDistributionDate As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(2).FindControl("txtDistibutionDateGV"), TextBox)

                        Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)
                        Dim TextBoxNeworExisting As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(5).FindControl("txtNeworExistingGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("ContractGroup") = TextBoxTargetDesc.Text
                        dtCurrentTable.Rows(i - 1)("Percentage") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("CalculatedValue") = TextBoxCalculatedValue.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("DistributionDate") = TextBoxDistributionDate.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("NeworExisting") = TextBoxNeworExisting.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableCGDistribution") = dtCurrentTable

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataContractGroupDistribution()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "SetRowDataContractGroupDistribution", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try

    End Sub

    Public Function HighlightDuplicateContractGroupDistribution(ByVal gridview As GridView) As Boolean
        HasDuplicateTarget = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As DropDownList = CType(grvContractGroupDistributionDetails.Rows(currentRow).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                Dim TextBoxTargetDescGV1 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(otherRow).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)

                If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                        GoTo nextrec
                    End If

                    duplicateRow = True

                    TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                    TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral

                    'TextBoxTargetDescGV.Font.Bold = True
                    'TextBoxTargetDescGV1.Font.Bold = True
                    'TextBoxTargetDescGV.BackColor = Drawing.Color.Purple
                    'TextBoxTargetDescGV1.BackColor = Drawing.Color.Purple


                    'Dim custVal As New CustomValidator()
                    'custVal.IsValid = False
                    'custVal.ErrorMessage = ""
                    'custVal.ErrorMessage = "Selected Target Already Exists"
                    'custVal.EnableClientScript = True

                    'custVal.ValidationGroup = "VGroup"
                    'Me.Page.Form.Controls.Add(custVal)

                    HasDuplicateTarget = True
                    Return HasDuplicateTarget


                Else
                    duplicateRow = False
                    HasDuplicateTarget = False
                End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateTarget
    End Function

    Protected Sub grvContractGroupDistributionDetails_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvContractGroupDistributionDetails.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub grvContractGroupDistributionDetails_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvContractGroupDistributionDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete


                If txtDistributionMode.Text = "EDIT" Then
                    e.Row.Cells(7).Visible = False
                End If

                'If e.Row.Cells(6).Text.Trim = "E" Then
                '    'e.Row.Cells(0).Enabled = False
                '    e.Row.Cells(1).Text = 11
                'End If
              

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                     


                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

               

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub grvContractGroupDistributionDetails_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvContractGroupDistributionDetails.RowDeleting
        Try
            'lblAlertContractGroupDistribution.Text = ""
            'lblMsgContractGroupDistribution.Text = ""

            If txtRecordDeleted.Text = "Y" Then
                txtRecordDeleted.Text = "N"
                Exit Sub
            End If


            SetRowDataContractGroupDistribution()

            Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

            Dim dt As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
            Dim drCurrentRow As DataRow = Nothing

            Dim TextBoxContractGroup As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)

            If TextBoxContractGroup.Text = ddlContractGrp.Text.Trim Then
                lblMsgContractGroupDistribution.Text = ""
                lblAlertContractGroupDistribution.Text = "This Contract Group cannot be Deleted"
                updPanelContract1.Update()
                mdlContractGroupDistribution.Show()
                Exit Sub

            End If

            'If txtDistributionMode.Text = "EDIT" Then
            '    'grvContractGroupDistributionDetails.
            '    lblMsgContractGroupDistribution.Text = ""
            '    lblAlertContractGroupDistribution.Text = "This Contract Group cannot be Deleted"
            '    updPanelContract1.Update()
            '    mdlContractGroupDistribution.Show()
            '    Exit Sub
            'End If

            'lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                txtRecordDeleted.Text = "N"
                Dim Query As String
                'SetRowDataContractGroupDistribution()

                'Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

                'Dim dt As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
                'Dim drCurrentRow As DataRow = Nothing

                'Dim TextBoxContractGroup As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)

                'If TextBoxContractGroup.Text = ddlContractGrp.Text.Trim Then
                '    lblAlertContractGroupDistribution.Text = "This Contract Group cannot be Deleted"
                '    UpdatePanel1.Update()
                '    mdlContractGroupDistribution.Show()
                '    Exit Sub

                'End If




                '04.08.22
                'Dim TextBoxRcno As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex).Cells(4).FindControl("txtRcnoContractGroupDistributionGV"), TextBox)


                'If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                '    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                '        Dim conn As MySqlConnection = New MySqlConnection(constr)
                '        conn.Open()

                '        Dim commandUpdGS As MySqlCommand = New MySqlCommand
                '        commandUpdGS.CommandType = CommandType.Text
                '        commandUpdGS.CommandText = "Delete from tblContractValueDistribution where rcno = " & TextBoxRcno.Text
                '        commandUpdGS.Connection = conn
                '        commandUpdGS.ExecuteNonQuery()
                '        conn.Close()
                '        conn.Dispose()
                '        'UpdateTargetDescription()

                '    End If
                'End If

                '04.08.22

                If dt.Rows.Count > 1 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTableCGDistribution") = dt
                    grvContractGroupDistributionDetails.DataSource = dt
                    grvContractGroupDistributionDetails.DataBind()

                    SetPreviousDataContractGroupDistribution()

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc2)

                    ''''''''''''''''''''''''''
                    'HasDuplicateTarget = HighlightDuplicateContractGroupDistribution(grvContractGroupDistributionDetails)

                    txtDuplicateTarget.Text = "N"

                    If HasDuplicateTarget = True Then
                        txtDuplicateTarget.Text = "Y"
                        'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                        lblAlertContractGroupDistribution.Text = "Duplicate Contract Group has been selected"
                        mdlContractGroupDistribution.Show()
                        Exit Sub
                    End If



                    If txtRecordAdded.Text = "N" Then
                        btnAddDetailContractGroupDistribution_Click(sender, e)
                    End If

                    txtRecordDeleted.Text = "Y"

                End If


                ' '''''''''''''''''''''''
                'Start:Target
                SetRowDataContractGroupDistribution()

                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableCGDistribution"), DataTable)

                Dim TextBoxTargetDesc3 As DropDownList = CType(grvContractGroupDistributionDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                'Query = "Select ContractGroup from tblContractGroup where Category = '" & txtCategoryID.Text.Trim & "' order by ContractGroup"
                Query = "Select ContractGroup from tblContractGroup  order by ContractGroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", TextBoxTargetDesc3)


                If tableAdd IsNot Nothing Then
                    'txtTargetDesc.Text = ""

                    For rowIndex1 As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                        'Dim TextBoxTargetId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)


                        'If (TextBoxTargetDesc.Text) <> "-1" Then
                        '    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                        '        txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                        '        txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargetId.Text.Trim
                        '    Else
                        '        txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                        '        txtTargetId.Text = TextBoxTargetId.Text.Trim
                        '    End If

                        'End If
                    Next rowIndex1
                End If

                'UpdateTargetDescription()
                'grvContractDetail.DataSourceID = "SqlDSContractDet"
                'grvContractDetail.DataBind()
                lblAlertContractGroupDistribution.Text = ""
                lblMsgContractGroupDistribution.Text = "DELETE : RECORD SUCCESSFULLY UPDATED"

                dt.Dispose()
                CalculateTotalDistribution()
                CalculatePercentage()

                If Val(txtTotalPercent.Text) = 0 Or Val(txtTotalPercent.Text) = 100 Then
                    btnCancelContractGroupDistribution.Enabled = True
                    btnCancelContractGroupDistribution.ForeColor = Color.Black
                Else
                    btnCancelContractGroupDistribution.Enabled = False
                    btnCancelContractGroupDistribution.ForeColor = Color.Gray
                End If
                mdlContractGroupDistribution.Show()
            End If
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grvContractGroupDistributionDetails_RowDeleting", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub



    'Protected Sub ddlContractGroupDistributionGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
    '    Try

    '        'If grvTargetDetails.PageSize >= 10 Then
    '        '    grvTargetDetails.PageSize = TotDetailRecords + 1
    '        '    'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
    '        'End If


    '        lblAlertContractGroupDistribution.Text = ""
    '        'Dim lTargetDesciption As String

    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
    '        'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGV"), TextBox)


    '        'lTargetDesciption = lblid1.Text

    '        Dim rowindex1 As Integer = xrow1.RowIndex

    '        ''Get Targt Id

    '        'Dim conn As MySqlConnection = New MySqlConnection()

    '        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        'conn.Open()
    '        'Dim command1 As MySqlCommand = New MySqlCommand

    '        'command1.CommandType = CommandType.Text

    '        'command1.CommandText = "SELECT TargetId FROM tblTarget where descrip1= '" & lTargetDesciption & "'"
    '        'command1.Connection = conn

    '        'Dim dr As MySqlDataReader = command1.ExecuteReader()
    '        'Dim dt As New DataTable
    '        'dt.Load(dr)

    '        'If dt.Rows.Count > 0 Then
    '        '    lblid2.Text = dt.Rows(0)("TargetId").ToString
    '        'End If


    '        HasDuplicateTarget = HighlightDuplicateContractGroupDistribution(grvContractGroupDistributionDetails)

    '        txtDuplicateTarget.Text = "N"
    '        txtRecordAdded.Text = "N"

    '        If HasDuplicateTarget = True Then
    '            txtDuplicateTarget.Text = "Y"
    '            'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
    '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '            lblAlertContractGroupDistribution.Text = "Duplicate Contract Group has been selected"
    '            mdlContractGroupDistribution.Show()
    '            Exit Sub
    '        End If


    '        If rowindex1 = grvContractGroupDistributionDetails.Rows.Count - 1 Then
    '            btnAddDetailContractGroupDistribution_Click(sender, e)
    '            txtRecordAdded.Text = "Y"
    '        End If
    '        'txtTargetDesc.Text = txtTargetDesc.Text & lblid1.Text & ", "
    '        'conn.Close()
    '        'conn.Dispose()
    '        'command1.Dispose()
    '        'dt.Dispose()

    '        mdlContractGroupDistribution.Show()
    '    Catch ex As Exception
    '        Throw ex
    '        InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ddlTargetDescGV_SelectedIndexChanged", ex.Message.ToString, "")
    '        Exit Sub
    '    End Try
    'End Sub

    Protected Sub txtPercContractGroupDistributionGV_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlertContractGroupDistribution.Text = ""
            lblMsgContractGroupDistribution.Text = ""

            updPanelContract1.Update()

            Dim ddl1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtPercContractGroupDistributionGV"), TextBox)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtCalculatedValueGV"), TextBox)
            Dim lblid3 As DropDownList = CType(xrow1.FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtRcnoContractGroupDistributionGV"), TextBox)



            Dim rowindex1 As Integer = xrow1.RowIndex

            If lblid3.SelectedIndex = 0 Then
                lblAlertContractGroupDistribution.Text = "PLEASE SELECT CONTRACT GROUP FIRST"
                lblid1.Text = 0.0
                mdlContractGroupDistribution.Show()
                Exit Sub
            End If
            lblid2.Text = Val(lblid1.Text) * Val(txtTotalAgreedValueDistribution.Text) * 0.01


            If lblid1.Text = "100" Then
                txtCentPercent.Text = "Y"

                '17.12.2022
                'CalculatePercentage()
                lblid3.Enabled = False

                'PopulateDistributionRecords100Pct(lblid3.Text, lblid4.Text)


                'UpdatePanel5.Update()
                '17.12.2022
            Else
                If txtCentPercent.Text = "Y" Then
                    AddNewRowContractGroupDistribution()
                    SetPreviousDataContractGroupDistribution()

                End If
                txtCentPercent.Text = "N"
            End If


            CalculatePercentage()

            If txtTotalPercent.Text > 100 Then
                lblAlertContractGroupDistribution.Text = "TOTAL PERCENTAGE SHOULD NOT EXCEED 100"
                lblid1.Text = 0.0
                lblid2.Text = 0.0
                mdlContractGroupDistribution.Show()

            End If

            CalculatePercentage()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPercContractGroupDistributionGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try

    End Sub

    Private Sub CalculatePercentage()
        Try
            'Start:Target
            SetRowDataContractGroupDistribution()

            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableCGDistribution"), DataTable)

            If tableAdd IsNot Nothing Then

                txtTotalPercent.Text = 0
                For rowIndex1 As Integer = 0 To tableAdd.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxTargetDesc As DropDownList = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(0).FindControl("ddlContractGroupContractGroupDistributionGV"), DropDownList)
                    Dim TextBoxTargetId As TextBox = CType(grvContractGroupDistributionDetails.Rows(rowIndex1).Cells(0).FindControl("txtPercContractGroupDistributionGV"), TextBox)

                    txtTotalPercent.Text = Val(txtTotalPercent.Text) + Val(TextBoxTargetId.Text)

                    If rowIndex1 = 0 Then
                        TextBoxTargetDesc.Enabled = False
                    End If

                Next rowIndex1
            End If
            txtTotalPercent.Text = Convert.ToDecimal(txtTotalPercent.Text).ToString("N2")

            updPanelContract1.Update()

            mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "CalculatePercentage", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Private Sub CalculateTotalDistribution()
        Try
            'Start: Contract Group %
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandContractGroupPerc As MySqlCommand = New MySqlCommand

            commandContractGroupPerc.CommandType = CommandType.Text
            commandContractGroupPerc.CommandText = "SELECT count(rcno) as CGDetails FROM tblcontractvaluedistributionSummary where ContractNo = '" & txtContractNo.Text & "'"
            commandContractGroupPerc.Connection = conn

            Dim drContractGroupPerc As MySqlDataReader = commandContractGroupPerc.ExecuteReader()
            Dim dtContractGroupPerc As New DataTable
            dtContractGroupPerc.Load(drContractGroupPerc)

            If dtContractGroupPerc.Rows.Count > 0 Then
                btnContractGroupDistribution.Text = "DISTRIBUTION [" & Val(dtContractGroupPerc.Rows(0)("CGDetails").ToString).ToString & "]"
            End If

            conn.Close()
            conn.Dispose()

            commandContractGroupPerc.Dispose()
            dtContractGroupPerc.Dispose()
            drContractGroupPerc.Dispose()

            'End : Contract Multiple PO
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "CalculateTotalDistribution", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnYesMultiplePO_Click(sender As Object, e As EventArgs) Handles btnYesMultiplePO.Click
        Try
            If txtPOMode.Text = "Add" Then

                'Start:11.01.22

                Dim conn1 As MySqlConnection = New MySqlConnection()

                conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn1.Open()
                Dim commandMaxPONO As MySqlCommand = New MySqlCommand

                commandMaxPONO.CommandType = CommandType.Text
                commandMaxPONO.CommandText = "SELECT Max(StartDate) as MaxStartate from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "'"
                commandMaxPONO.Connection = conn1

                Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
                Dim dtMaxPONO As New DataTable
                dtMaxPONO.Load(drMaxPONO)


                If IsDBNull((dtMaxPONO.Rows(0)("MaxStartate"))) = False Then
                    If Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") Then

                        lblAlertPO.Text = "P.O. Start Date should be later than the Last P.O. Start Date (" & Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("dd/MM/yyyy") & ") for the Contract"
                        commandMaxPONO.Dispose()
                        conn1.Close()
                        conn1.Dispose()
                        mdlMultiplePO.Show()
                        Exit Sub

                    End If
                End If


                'End: 11.01.22

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblContractPoNumber where ContractNo=@ContractNo and PONumber = @PONumber"
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command1.Parameters.AddWithValue("@PONumber", txtPONumber.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    lblAlertPO.Text = "P.O. NUMBER ALREADY EXISTS"
                    mdlMultiplePO.Show()
                    Exit Sub
                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblContractPoNumber(ContractNo,PONumber, StartDate, EndDate,CreatedBy,  CreatedOn,LastModifiedBy,LastModifiedOn)VALUES(@ContractNo,@PONumber,@StartDate,@EndDate, @CreatedBy, @CreatedOn,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@PONumber", txtPONumber.Text.ToUpper)
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))

                        If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
                        End If
                        'command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command.Parameters.AddWithValue("@PONumber", txtPONumber.Text)
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))

                        If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
                        End If

                        'command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))

                        command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    End If

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    txtMultiplePORcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessagePO.Text = "ADD: P.O. SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    command.Dispose()
                    UpdateLatestPO()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()

                EnableMultiplePOControls()

            ElseIf txtPOMode.Text = "Edit" Then
                If txtMultiplePORcNo.Text = "" Then
                    '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                    lblAlertPO.Text = "SELECT RECORD TO EDIT"
                    mdlMultiplePO.Show()
                    Exit Sub

                End If


                'Start:11.01.22

                Dim conn2 As MySqlConnection = New MySqlConnection()

                conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn2.Open()
                Dim commandMaxPONO As MySqlCommand = New MySqlCommand

                commandMaxPONO.CommandType = CommandType.Text
                commandMaxPONO.CommandText = "SELECT Max(StartDate) as MaxStartate from tblContractPONumber where ContractNo= '" & txtContractNo.Text & "' and rcno <> " & txtMultiplePORcNo.Text
                commandMaxPONO.Connection = conn2

                Dim drMaxPONO As MySqlDataReader = commandMaxPONO.ExecuteReader()
                Dim dtMaxPONO As New DataTable
                dtMaxPONO.Load(drMaxPONO)


                If IsDBNull((dtMaxPONO.Rows(0)("MaxStartate"))) = False Then
                    If Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("yyyy-MM-dd") >= Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd") Then

                        lblAlertPO.Text = "P.O. Start Date should be later than the Last P.O. Start Date (" & Convert.ToDateTime(dtMaxPONO.Rows(0)("MaxStartate")).ToString("dd/MM/yyyy") & ") for the Contract"
                        commandMaxPONO.Dispose()
                        conn2.Close()
                        conn2.Dispose()
                        mdlMultiplePO.Show()
                        Exit Sub
                    End If
                End If


                'End: 11.01.22
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblContractPoNumber where ContractNo=@ContractNo and  PONumber = @PONumber and rcno <> @rcno"
                command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command2.Parameters.AddWithValue("@PONumber", txtPONumber.Text.Trim)
                command2.Parameters.AddWithValue("@rcno", txtMultiplePORcNo.Text.Trim)
                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlertPO.Text = "P.O. NUMBER ALREADY EXISTS"
                    mdlMultiplePO.Show()
                    Return
                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblContractPoNumber where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        command.CommandText = "UPDATE tblContractPoNumber SET ContractNo =@ContractNo, StartDate = @StartDate, EndDate = @EndDate, PONumber=@PONumber, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtMultiplePORcNo.Text)
                        command.Parameters.Clear()

                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@PONumber", txtPONumber.Text.ToUpper)
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStartDatePO.Text).ToString("yyyy-MM-dd"))

                        If String.IsNullOrEmpty(txtContractEndDatePO.Text.Trim) = True Then
                            command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))
                        End If
                        'command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEndDatePO.Text).ToString("yyyy-MM-dd"))

                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToUpper)
                        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessagePO.Text = "EDIT: P.O. SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                        UpdateLatestPO()
                    End If
                    command1.Dispose()
                End If

                txtPOMode.Text = ""

                conn.Close()
                conn.Dispose()

                command2.Dispose()

                EnableMultiplePOControls()

            End If
            SqlDSMultiplePO.SelectCommand = "select * from tblContractPoNumber where ContractNo = '" + txtContractNo.Text + "'"
            SqlDSMultiplePO.DataBind()
            gvNotesMaster.DataBind()

            txtPOMode.Text = ""
            mdlMultiplePO.Show()

        Catch ex As Exception
            lblAlertPO.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnYesMultiplePO_Click", ex.Message.ToString, "")
            mdlMultiplePO.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnAddDistribution_Click(sender As Object, e As EventArgs) Handles btnAddDistribution.Click
        Try
            txtDistributionMode.Text = "ADD"
            txtDistributionDate.Text = "__/__/____"
            lblMsgContractGroupDistribution.Text = "ACTION: ADD DISTRIBUTION"
            txtDistributionDate.Enabled = True

            btnSaveContractGroupDistribution.Enabled = True
            btnSaveContractGroupDistribution.ForeColor = Color.Black
            btnCancelContractGroupDistribution.Enabled = True
            btnCancelContractGroupDistribution.ForeColor = Color.Black

            btnAddDistribution.Enabled = False
            btnEditDistribution.Enabled = False
            btnDeleteDistribution.Enabled = False

            btnAddDistribution.ForeColor = Color.Gray
            btnEditDistribution.ForeColor = Color.Gray
            btnDeleteDistribution.ForeColor = Color.Gray
            txtRcnoFirstContractPriceHistory.Text = 0
            txtCentPercent.Text = "N"
            'SetRowDataContractGroupDistribution()


            'Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTableCGDistribution"), DataTable)
            'Dim drCurrentRowTarget1 As DataRow = Nothing

            'For i As Integer = 0 To grvContractGroupDistributionDetails.Rows.Count - 1
            '    dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
            '    drCurrentRowTarget1 = dtScdrTarget1.NewRow()
            '    ViewState("CurrentTableCGDistribution") = dtScdrTarget1
            '    grvContractGroupDistributionDetails.DataSource = dtScdrTarget1
            '    grvContractGroupDistributionDetails.DataBind()

            '    SetPreviousDataContractGroupDistribution()

            'Next i


            FirstGridViewRowContractGroupDistribution()
            'FirstGridViewRowContractGroupDistribution()

            'Start: 16.12.22

            'Start: Check whether the Selected Record is the last Record

            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT rcno, DistributionDate FROM tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "' order by DistributionDate desc limit 1"

            Dim commandLastRecord As MySqlCommand = New MySqlCommand

            Dim conn1 As MySqlConnection = New MySqlConnection()
            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()

            commandLastRecord.CommandType = CommandType.Text
            commandLastRecord.CommandText = sqlstr
            commandLastRecord.Connection = conn1

            Dim drLastRecord As MySqlDataReader = commandLastRecord.ExecuteReader()
            Dim dtLastRecord As New DataTable
            dtLastRecord.Load(drLastRecord)


            If dtLastRecord.Rows.Count > 0 Then
                grdViewDistributionSummary.SelectedIndex = Convert.ToInt16(grdViewDistributionSummary.Rows.Count - 1)

                txtDistributionDate.Text = Convert.ToDateTime(dtLastRecord.Rows(0)("DistributionDate")).ToString("dd/MM/yyyy")
                'txtDistributionRcno.Text = dtLastRecord.Rows(0)("rcno")

                'If Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(dtLastRecord.Rows(0)("DistributionDate")).ToString("yyyy-MM-dd") Then
                '    If Left(txtStatus.Text, 1) = "O" Then
                '        btnEditDistribution.Enabled = True
                '        btnDeleteDistribution.Enabled = True

                '        btnEditDistribution.ForeColor = Color.Black
                '        btnDeleteDistribution.ForeColor = Color.Black
                '    End If

                'Else
                '    btnEditDistribution.Enabled = False
                '    btnDeleteDistribution.Enabled = False

                '    btnEditDistribution.ForeColor = Color.Gray
                '    btnDeleteDistribution.ForeColor = Color.Gray

                '    conn1.Close()
                '    conn1.Dispose()
                '    commandLastRecord.Dispose()
                '    drLastRecord.Close()

                '    'mdlContractGroupDistribution.Show()
                '    Exit Sub
                'End If
            End If



            'End: Check whether the Selected Record is the last Record


            'End: 16.12.22


            PopulateDistributionRecordsAdd()
            txtDistributionDate.Text = "__/__/____"
            'pnlContractGroupDistribution.Enabled = True
            grvContractGroupDistributionDetails.Enabled = True
            'AddNewRowContractGroupDistribution()
            mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnAddDistribution_Click", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditDistribution_Click(sender As Object, e As EventArgs) Handles btnEditDistribution.Click

        Try
            lblAlertContractGroupDistribution.Text = ""

            'If txtLatestPriceHistoryDate.Text > txtDistributionDate.Text Then
            '    lblAlertContractGroupDistribution.Text = ""
            '    mdlContractGroupDistribution.Show()
            '    Exit Sub
            'End If

            If String.IsNullOrEmpty(txtLatestPriceHistoryDate.Text.Trim) = False Then
                If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                    If Convert.ToDateTime(txtDistributionDate.Text.Trim) < Convert.ToDateTime(txtLatestPriceHistoryDate.Text.Trim) Then
                        'txtAlertStatus.Visible = True
                        'txtDistributionDate.Text = ""
                        lblAlertContractGroupDistribution.Text = "Distribution Date should be later than the Date of Last Price Change " & txtLastPriceChangeDate.Text & " for EDIT"
                        'txtDistributionDate.Focus()
                        mdlContractGroupDistribution.Show()
                        Exit Sub
                    End If
                End If
            End If


            'Dim sqlstr1 As String
            'sqlstr1 = ""

            'sqlstr1 = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            'Dim commandLocked1 As MySqlCommand = New MySqlCommand

            'Dim conn1 As MySqlConnection = New MySqlConnection()
            'conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn1.Open()

            'commandLocked1.CommandType = CommandType.Text
            'commandLocked1.CommandText = sqlstr1
            'commandLocked1.Connection = conn1

            'Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
            'Dim dt1 As New DataTable
            'dt1.Load(dr1)


            'If dt1.Rows.Count > 0 Then
            '    If dt1.Rows(0)("ContractLock").ToString = "Y" Then
            '        lblAlertContractGroupDistribution.Text = "CONTRACT PERIOD IS LOCKED"
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        txtDistributionDate.Text = "__/__/____"
            '        conn1.Close()
            '        conn1.Dispose()
            '        commandLocked1.Dispose()
            '        dr1.Close()
            '        mdlContractGroupDistribution.Show()
            '        Exit Sub
            '    Else
            '        txtDistributionMode.Text = "EDIT"
            '        lblMsgContractGroupDistribution.Text = "ACTION: EDIT DISTRIBUTION"

            '        btnSaveContractGroupDistribution.Enabled = True
            '        btnSaveContractGroupDistribution.ForeColor = Color.Black
            '        btnCancelContractGroupDistribution.Enabled = True
            '        btnCancelContractGroupDistribution.ForeColor = Color.Black

            '        btnAddDistribution.Enabled = False
            '        btnEditDistribution.Enabled = False
            '        btnDeleteDistribution.Enabled = False

            '        btnAddDistribution.ForeColor = Color.Gray
            '        btnEditDistribution.ForeColor = Color.Gray
            '        btnDeleteDistribution.ForeColor = Color.Gray

            '        grvContractGroupDistributionDetails.Enabled = True

            '        mdlContractGroupDistribution.Show()
            '    End If
            'End If

            'conn1.Close()
            'conn1.Dispose()
            'commandLocked1.Dispose()
            'dr1.Close()


            txtDistributionMode.Text = "EDIT"
            lblMsgContractGroupDistribution.Text = "ACTION: EDIT DISTRIBUTION"

            btnSaveContractGroupDistribution.Enabled = True
            btnSaveContractGroupDistribution.ForeColor = Color.Black
            btnCancelContractGroupDistribution.Enabled = True
            btnCancelContractGroupDistribution.ForeColor = Color.Black


            btnAddDistribution.Enabled = False
            btnEditDistribution.Enabled = False
            btnDeleteDistribution.Enabled = False
            btnCloseDistribution.Enabled = False

            btnAddDistribution.ForeColor = Color.Gray
            btnEditDistribution.ForeColor = Color.Gray
            btnDeleteDistribution.ForeColor = Color.Gray
            btnCloseDistribution.ForeColor = Color.Gray

            txtRcnoFirstContractPriceHistory.Text = 0
            grvContractGroupDistributionDetails.Enabled = True
            FirstGridViewRowContractGroupDistribution()
            'FirstGridViewRowContractGroupDistribution()
            PopulateDistributionRecords()
            mdlContractGroupDistribution.Show()

        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grdViewDistributionSummary_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try

    End Sub

    Protected Sub btnDeleteDistribution_Click(sender As Object, e As EventArgs) Handles btnDeleteDistribution.Click


        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command As MySqlCommand = New MySqlCommand

        command.CommandType = CommandType.Text

        command.CommandText = "SELECT count(rcno) as RecCount FROM tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "'"
        command.Connection = conn

        Dim dr As MySqlDataReader = command.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows(0)("RecCount").ToString = 1 Then

            lblAlertContractGroupDistribution.Text = "THERE SHOULD BE AT LEAST 1 DISTRIBUTION RECORD"

            conn.Close()
            conn.Dispose()
            Exit Sub
        End If

        txtDistributionMode.Text = "DELETE"
        mdlDistributionDelete.Show()
    End Sub

    Protected Sub grdViewDistributionSummary_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grdViewDistributionSummary.SelectedIndexChanged
        Try
            txtDistributionDate.Text = "__/__/____"
            lblAlertContractGroupDistribution.Text = ""
            'MakeMultiplePONull()
            Dim editindex As Integer = grdViewDistributionSummary.SelectedIndex
            rcno = DirectCast(grdViewDistributionSummary.Rows(editindex).FindControl("LabelDist"), Label).Text
            txtDistributionRcno.Text = rcno.ToString()
            'txtMultiplePORcNo.Text = rcno.ToString()
            txtDistributionDate.Text = Server.HtmlDecode(grdViewDistributionSummary.SelectedRow.Cells(1).Text)
            txtSelectedDistributionDate.Text = Server.HtmlDecode(grdViewDistributionSummary.SelectedRow.Cells(1).Text)

            PopulateDistributionRecords()

            'Start: Check whether the Selected Record is the last Record

            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT DistributionDate FROM tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "' order by DistributionDate desc limit 1"

            Dim commandLastRecord As MySqlCommand = New MySqlCommand

            Dim conn1 As MySqlConnection = New MySqlConnection()
            conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn1.Open()

            commandLastRecord.CommandType = CommandType.Text
            commandLastRecord.CommandText = sqlstr
            commandLastRecord.Connection = conn1

            Dim drLastRecord As MySqlDataReader = commandLastRecord.ExecuteReader()
            Dim dtLastRecord As New DataTable
            dtLastRecord.Load(drLastRecord)


            If dtLastRecord.Rows.Count > 0 Then
                If Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(dtLastRecord.Rows(0)("DistributionDate")).ToString("yyyy-MM-dd") Then
                    If Left(txtStatus.Text, 1) = "O" Then
                        btnEditDistribution.Enabled = True
                        btnDeleteDistribution.Enabled = True

                        btnEditDistribution.ForeColor = Color.Black
                        btnDeleteDistribution.ForeColor = Color.Black
                    End If

                Else
                    btnEditDistribution.Enabled = False
                    btnDeleteDistribution.Enabled = False

                    btnEditDistribution.ForeColor = Color.Gray
                    btnDeleteDistribution.ForeColor = Color.Gray

                    conn1.Close()
                    conn1.Dispose()
                    commandLastRecord.Dispose()
                    drLastRecord.Close()

                    mdlContractGroupDistribution.Show()
                    Exit Sub
                End If
            End If



            'End: Check whether the Selected Record is the last Record



            'Check
            Dim sqlstr1 As String
            sqlstr1 = ""

            sqlstr1 = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked1 As MySqlCommand = New MySqlCommand

            'Dim conn1 As MySqlConnection = New MySqlConnection()
            'conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn1.Open()

            commandLocked1.CommandType = CommandType.Text
            commandLocked1.CommandText = sqlstr1
            commandLocked1.Connection = conn1

            Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)




            If dt1.Rows.Count > 0 Then

                If dt1.Rows(0)("ContractLock").ToString = "Y" Then
                    lblAlertContractGroupDistribution.Text = "CONTRACT PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    conn1.Close()
                    conn1.Dispose()
                    commandLocked1.Dispose()
                    dr1.Close()

                    btnEditDistribution.Enabled = False
                    btnDeleteDistribution.Enabled = False

                    btnEditDistribution.ForeColor = Color.Gray
                    btnDeleteDistribution.ForeColor = Color.Gray
                    mdlContractGroupDistribution.Show()
                    Exit Sub

                Else
                    If Left(txtStatus.Text, 1) = "O" Then
                        btnEditDistribution.Enabled = True
                        btnDeleteDistribution.Enabled = True

                        btnEditDistribution.ForeColor = Color.Black
                        btnDeleteDistribution.ForeColor = Color.Black
                    End If

                    End If
            Else
                If Left(txtStatus.Text, 1) = "O" Then
                    btnEditDistribution.Enabled = True
                    btnDeleteDistribution.Enabled = True

                    btnEditDistribution.ForeColor = Color.Black
                    btnDeleteDistribution.ForeColor = Color.Black
                End If
                End If

                conn1.Close()
                conn1.Dispose()
                commandLocked1.Dispose()
                dr1.Close()



                'Check



                'txtContractEndDatePO.Text = Server.HtmlDecode(grdViewMultiplePO.SelectedRow.Cells(2).Text)
                'txtPONumber.Text = Server.HtmlDecode(grdViewMultiplePO.SelectedRow.Cells(3).Text)
                'EnableMultiplePOControls()

                'btnEditMultiplePO.Enabled = True
                'btnEditMultiplePO.ForeColor = System.Drawing.Color.Black
                'btnDeleteMultiplePO.Enabled = True
                'btnDeleteMultiplePO.ForeColor = System.Drawing.Color.Black
                'mdlMultiplePO.Show()
                mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grdViewDistributionSummary_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub OnRowDataBoundgDistribution(sender As Object, e As GridViewRowEventArgs) Handles grdViewDistributionSummary.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grdViewDistributionSummary, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedDistributionSummary(sender As Object, e As EventArgs)
        For Each row As GridViewRow In grdViewDistributionSummary.Rows

            If row.RowIndex = grdViewDistributionSummary.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub

    Protected Sub btnCancelContractGroupDistribution_Click(sender As Object, e As EventArgs) Handles btnCancelContractGroupDistribution.Click
        lblAlertContractGroupDistribution.Text = ""
        btnAddDistribution.Enabled = True
        btnEditDistribution.Enabled = False
        btnDeleteDistribution.Enabled = False
        btnSaveContractGroupDistribution.Enabled = False
        btnCancelContractGroupDistribution.Enabled = False

        btnCloseDistribution.Enabled = True

        btnAddDistribution.ForeColor = Color.Black
        btnEditDistribution.ForeColor = Color.Gray
        btnDeleteDistribution.ForeColor = Color.Gray
        btnSaveContractGroupDistribution.ForeColor = Color.Gray
        btnCancelContractGroupDistribution.ForeColor = Color.Gray
        btnCloseDistribution.ForeColor = Color.Black

        txtDistributionMode.Text = "VIEW"

        lblMsgContractGroupDistribution.Text = ""
        'FirstGridViewRowContractGroupDistribution()
        txtDistributionDate.Enabled = False
        txtDistributionDate.Text = "__/__/____"
        grvContractGroupDistributionDetails.Enabled = False

        btnContractGroupDistribution_Click(sender, e)
        'PopulateDistributionRecords()
        'grvContractGroupDistributionDetails.Enabled = True

        'FirstGridViewRowContractGroupDistribution()
        mdlContractGroupDistribution.Show()
    End Sub

    Protected Sub txtDistributionDate_TextChanged(sender As Object, e As EventArgs) Handles txtDistributionDate.TextChanged
        Try

            If String.IsNullOrEmpty(txtDistributionDate.Text) = True Or txtDistributionDate.Text = "__/__/____" Then
            Else

                If String.IsNullOrEmpty(txtLatestPriceHistoryDate.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                        If Convert.ToDateTime(txtDistributionDate.Text.Trim) <= Convert.ToDateTime(txtLatestPriceHistoryDate.Text.Trim) Then
                            'txtAlertStatus.Visible = True
                            txtDistributionDate.Text = ""
                            lblAlertContractGroupDistribution.Text = "Distribution Date should be later than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                            txtDistributionDate.Focus()
                            mdlContractGroupDistribution.Show()
                            Exit Sub
                        End If
                    End If
                End If


                If txtDistributionMode.Text = "ADD" Or txtDistributionMode.Text = "EDIT" Or txtDistributionMode.Text = "DELETE" Then

                    lblAlertContractGroupDistribution.Text = ""

                    If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                        If Convert.ToDateTime(txtDistributionDate.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                            'txtAlertStatus.Visible = True
                            lblAlertContractGroupDistribution.Text = "Distribution Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                            updPanelContract1.Update()
                            mdlContractGroupDistribution.Show()
                            Exit Sub
                        End If
                    End If


                    'If txtStatus.Text = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
                    '    GoTo bypassenddatevalidation
                    'End If
                    'Else

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                            If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                                If Convert.ToDateTime(txtDistributionDate.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                                    'txtAlertStatus.Visible = True
                                    lblAlertContractGroupDistribution.Text = "Distribution Date cannot be later than Contract End Date " & txtContractEnd.Text
                                    updPanelContract1.Update()
                                    mdlContractGroupDistribution.Show()
                                    Exit Sub
                                End If
                            End If
                        End If
                    Else

                        If String.IsNullOrEmpty(txtDistributionDate.Text.Trim) = False Then
                            If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then


                                If Convert.ToDateTime(txtDistributionDate.Text.Trim) > Convert.ToDateTime(txtEndofLastSchedule.Text.Trim) Then
                                    'txtAlertStatus.Visible = True
                                    lblAlertContractGroupDistribution.Text = "Distribution Date cannot be later than Contract End Date " & txtContractEnd.Text
                                    updPanelContract1.Update()
                                    mdlContractGroupDistribution.Show()
                                    Exit Sub
                                End If
                            End If
                        End If
                    End If


                    Dim sqlstr1 As String
                    sqlstr1 = ""

                    sqlstr1 = "SELECT ContractLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                    Dim commandLocked1 As MySqlCommand = New MySqlCommand

                    Dim conn1 As MySqlConnection = New MySqlConnection()
                    conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn1.Open()

                    commandLocked1.CommandType = CommandType.Text
                    commandLocked1.CommandText = sqlstr1
                    commandLocked1.Connection = conn1

                    Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)


                    If dt1.Rows.Count > 0 Then

                        If dt1.Rows(0)("ContractLock").ToString = "Y" Then
                            lblAlertContractGroupDistribution.Text = "CONTRACT PERIOD IS LOCKED"
                            updPanelContract1.Update()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            txtDistributionDate.Text = "__/__/____"
                            conn1.Close()
                            conn1.Dispose()
                            commandLocked1.Dispose()
                            dr1.Close()
                            mdlContractGroupDistribution.Show()
                            Exit Sub
                        End If


                    End If

                    conn1.Close()
                    conn1.Dispose()
                    commandLocked1.Dispose()
                    dr1.Close()


                    Dim sqlstr As String
                    sqlstr = ""

                    If txtDistributionMode.Text = "ADD" Or txtDistributionMode.Text = "EDIT" Then
                        sqlstr = "SELECT DistributionDate  FROM tblcontractvaluedistributionsummary where ContractNo = '" & txtContractNo.Text & "' and Distributiondate ='" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' limit 1"
                    Else
                        sqlstr = "SELECT DistributionDate  FROM tblcontractvaluedistributionsummary where ContractNo = '" & txtContractNo.Text & "' and rcno <> " & txtDistributionRcno.Text & " and Distributiondate ='" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' limit 1"
                    End If


                    Dim commandIsDateExist As MySqlCommand = New MySqlCommand

                    Dim connIsDateExist As MySqlConnection = New MySqlConnection()
                    connIsDateExist.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsDateExist.Open()

                    commandIsDateExist.CommandType = CommandType.Text
                    commandIsDateExist.CommandText = sqlstr
                    commandIsDateExist.Connection = connIsDateExist

                    Dim drIsDateExist As MySqlDataReader = commandIsDateExist.ExecuteReader()
                    Dim dtIsDateExist As New DataTable
                    dtIsDateExist.Load(drIsDateExist)


                    If dtIsDateExist.Rows.Count > 0 Then
                        'If dtIsDateExist.Rows(0)("DistDate").ToString = "Y" Then
                        lblAlertContractGroupDistribution.Text = "DISTRIBUTION DATE ALREADY EXISTS"
                        updPanelContract1.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        txtDistributionDate.Text = "__/__/____"
                        connIsDateExist.Close()
                        connIsDateExist.Dispose()
                        commandIsDateExist.Dispose()
                        drIsDateExist.Close()
                        mdlContractGroupDistribution.Show()
                        Exit Sub
                        'End If
                    End If

                    connIsDateExist.Close()
                    connIsDateExist.Dispose()
                    commandIsDateExist.Dispose()
                    drIsDateExist.Close()


                    'Is Latest date

                    'Dim sqlstr As String
                    sqlstr = ""

                    If txtDistributionMode.Text = "ADD" Or txtDistributionMode.Text = "EDIT" Then
                        sqlstr = "SELECT DistributionDate  FROM tblcontractvaluedistributionsummary where ContractNo = '" & txtContractNo.Text & "' order by Distributiondate desc  limit 1"
                        'Else
                        '    sqlstr = "SELECT DistributionDate  FROM tblcontractvaluedistributionsummary where ContractNo = '" & txtContractNo.Text & "' and rcno <> " & txtDistributionRcno.Text & " and Distributiondate ='" & Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") & "' limit 1"
                    End If


                    Dim commandIsLaterThanLatestDate As MySqlCommand = New MySqlCommand

                    Dim connLaterThanLatestDate As MySqlConnection = New MySqlConnection()
                    connLaterThanLatestDate.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connLaterThanLatestDate.Open()

                    commandIsLaterThanLatestDate.CommandType = CommandType.Text
                    commandIsLaterThanLatestDate.CommandText = sqlstr
                    commandIsLaterThanLatestDate.Connection = connLaterThanLatestDate

                    Dim drLaterThanLatestDate As MySqlDataReader = commandIsLaterThanLatestDate.ExecuteReader()
                    Dim dtLaterThanLatestDate As New DataTable
                    dtLaterThanLatestDate.Load(drLaterThanLatestDate)


                    If dtLaterThanLatestDate.Rows.Count > 0 Then

                        If Convert.ToDateTime(dtLaterThanLatestDate.Rows(0)("DistributionDate")).ToString("yyyy-MM-dd") > Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM-dd") Then
                            'If dtIsDateExist.Rows(0)("DistDate").ToString = "Y" Then
                            lblAlertContractGroupDistribution.Text = "DISTRIBUTION DATE SHOULD BE LATER THAN LAST DISTRIBUTION DATE"
                            updPanelContract1.Update()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            txtDistributionDate.Text = "__/__/____"
                            connLaterThanLatestDate.Close()
                            connLaterThanLatestDate.Dispose()
                            commandIsLaterThanLatestDate.Dispose()
                            drLaterThanLatestDate.Close()
                            mdlContractGroupDistribution.Show()
                            Exit Sub
                        End If
                    End If

                    connLaterThanLatestDate.Close()
                    connLaterThanLatestDate.Dispose()
                    commandIsLaterThanLatestDate.Dispose()
                    drLaterThanLatestDate.Close()

                    'Is Latest Date



                    'within same month
                    sqlstr = ""

                    If txtDistributionMode.Text = "ADD" Then
                        sqlstr = "SELECT DistributionDate  FROM tblcontractvaluedistributionsummary where ContractNo = '" & txtContractNo.Text & "' order by Distributiondate desc  limit 1"
                    End If


                    Dim commandIsSameMonth As MySqlCommand = New MySqlCommand

                    Dim connIsSameMonth As MySqlConnection = New MySqlConnection()
                    connIsSameMonth.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsSameMonth.Open()

                    commandIsSameMonth.CommandType = CommandType.Text
                    commandIsSameMonth.CommandText = sqlstr
                    commandIsSameMonth.Connection = connIsSameMonth

                    Dim drIsSameMonth As MySqlDataReader = commandIsSameMonth.ExecuteReader()
                    Dim dtIsSameMonth As New DataTable
                    dtIsSameMonth.Load(drIsSameMonth)


                    If dtIsSameMonth.Rows.Count > 0 Then

                        If Convert.ToDateTime(dtIsSameMonth.Rows(0)("DistributionDate")).ToString("yyyy-MM") = Convert.ToDateTime(txtDistributionDate.Text).ToString("yyyy-MM") Then
                            'If dtIsDateExist.Rows(0)("DistDate").ToString = "Y" Then
                            lblAlertContractGroupDistribution.Text = "THERE SHOULD BE ONLY 1 DISTRIBUTION RECORD FOR EACH MONTH. PLEASE SELECT A DIFFERENT DATE."
                            updPanelContract1.Update()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            txtDistributionDate.Text = "__/__/____"
                            connIsSameMonth.Close()
                            connIsSameMonth.Dispose()
                            commandIsSameMonth.Dispose()
                            drIsSameMonth.Close()
                            mdlContractGroupDistribution.Show()
                            Exit Sub
                        End If
                    End If

                    connIsSameMonth.Close()
                    connIsSameMonth.Dispose()
                    commandIsSameMonth.Dispose()
                    drIsSameMonth.Close()



                    'within same month


                    mdlContractGroupDistribution.Show()
                End If
            End If
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtDistributionDate_TextChanged", ex.Message.ToString, txtContractNo.Text)
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub CalendarExtender22_DataBinding(sender As Object, e As EventArgs) Handles CalendarExtender22.DataBinding
        mdlContractGroupDistribution.Show()
    End Sub

    Protected Sub CalendarExtender22_Load(sender As Object, e As EventArgs) Handles CalendarExtender22.Load

    End Sub

    Protected Sub btnDistributionDeleteSave_Click(sender As Object, e As EventArgs) Handles btnDistributionDeleteSave.Click
        lblMsgContractGroupDistribution.Text = ""
        If txtDistributionRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlertContractGroupDistribution.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMsgContractGroupDistribution.Text = "ACTION: DELETE DISTRIBUTION"


        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            command.CommandText = "SELECT Rcno, DistributionDate, BatchNo FROM tblcontractvaluedistributionsummary where rcno=" & Convert.ToInt32(txtDistributionRcno.Text)
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text
                Dim qry1 As String = "delete from tblcontractvaluedistributionsummary where rcno =" & Convert.ToInt32(txtDistributionRcno.Text)

                command1.CommandText = qry1
                command1.Connection = conn
                command1.ExecuteNonQuery()


                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                Dim qry2 As String = "delete from tblcontractvaluedistribution where BatchNo='" & dt.Rows(0)("BatchNo").ToString() & "'"

                command2.CommandText = qry2
                command2.Connection = conn
                command2.ExecuteNonQuery()

                Dim command3 As MySqlCommand = New MySqlCommand

                command3.CommandType = CommandType.Text
                Dim qry3 As String = "Update tblcontractpricehistory Set Void = True where ContractNo ='" & txtContractNo.Text & "' and Void = False and Date ='" & Convert.ToDateTime(dt.Rows(0)("DistributionDate")).ToString("yyyy-MM-dd") & "'"

                command3.CommandText = qry3
                command3.Connection = conn
                command3.ExecuteNonQuery()

                CalculateTotalDistribution()

                lblMsgContractGroupDistribution.Text = "VOID: RECORD SUCCESSFULLY VOIDED"

                lblAlertContractGroupDistribution.Text = ""
                txtDistributionDate.Text = ""

                conn.Close()
                conn.Dispose()
                'command1.Dispose()
                dt.Dispose()
                SqlDSDistributionSummary.SelectCommand = "Select * from tblcontractvaluedistributionsummary where ContractNo ='" & txtContractNo.Text & "' order by DistributionDate"
                SqlDSDistributionSummary.DataBind()

                grdViewDistributionSummary.DataSourceID = "SqlDSDistributionSummary"
                grdViewDistributionSummary.DataBind()

                FirstGridViewRowContractGroupDistribution()
            End If

            mdlContractGroupDistribution.Show()
        Catch ex As Exception
            lblAlertContractGroupDistribution.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDistributionDeleteSave_Click", ex.Message.ToString, "")
            mdlContractGroupDistribution.Show()
            Exit Sub
        End Try

    End Sub


    Protected Sub CalendarExtender22_Unload(sender As Object, e As EventArgs) Handles CalendarExtender22.Unload
        'mdlContractGroupDistribution.Show()
    End Sub

    Protected Sub btnCloseDistribution_Click(sender As Object, e As EventArgs) Handles btnCloseDistribution.Click
        txtIsPopup.Text = ""
        mdlContractGroupDistribution.Hide()
    End Sub

    Protected Sub btnClient12_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient12.Click
        txtWarrStartEdit.Text = txtWarrStart.Text
        txtWarrEndEdit.Text = txtWarrEnd.Text
        mdlPopupEditWarrantyDates.Show()
    End Sub

    Protected Sub btnConfirmEditWarrantyDates_Click(sender As Object, e As EventArgs) Handles btnConfirmEditWarrantyDates.Click
        Try
            txtAlertEditWarrantyDates.Text = ""

            If IsDate(txtWarrStartEdit.Text) = False Then
                txtAlertEditWarrantyDates.Text = "Invalid Warranty Start Date"
                mdlPopupEditWarrantyDates.Show()
                Exit Sub
            End If

            If IsDate(txtWarrEndEdit.Text) = False Then
                txtAlertEditWarrantyDates.Text = "Invalid Warranty End Date"
                mdlPopupEditWarrantyDates.Show()
                Exit Sub
            End If
            'If String.IsNullOrEmpty(txtEditEndDate.Text.Trim) = True Then
            '    txtAlertExtendContract.Text = "Extension Date cannot be blank"
            '    mdlPopupExtendContract.Show()
            '    Exit Sub
            'End If


            'If txtEndDate.Text.Trim = txtEditEndDate.Text.Trim And txtContractNotes.Text.Trim = txtContractNotesEdit.Text.Trim Then
            '    txtAlertExtendContract.Text = "No Change has been made in Contract End Date or Contract Note"
            '    mdlPopupExtendContract.Show()
            '    Exit Sub
            'End If


            'If Convert.ToDateTime(txtEditEndDate.Text.Trim) < DateTime.Today Then
            '    'txtAlertExtendContract.Text = "End Date should not be Past Date"
            '    'mdlPopupExtendContract.Show()
            'Else
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            ''If txtContractStart.Text = "" Then
            ''    command.Parameters.AddWithValue("@StartDate", DBNull.Value)
            ''Else
            ''    command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
            ''End If


            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-BEFORE UPDATE", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, txtContractNotes.Text, txtRcno.Text)

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET WarrantyStart = @WarrantyStart,  WarrantyEnd = @WarrantyEnd, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            If String.IsNullOrEmpty(txtWarrStartEdit.Text) = True Then
                command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
            Else
                command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStartEdit.Text).ToString("yyyy-MM-dd"))
            End If

            If String.IsNullOrEmpty(txtWarrEndEdit.Text) = True Then
                command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
            Else
                command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEndEdit.Text).ToString("yyyy-MM-dd"))
            End If

            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

            command.Connection = conn

            command.ExecuteNonQuery()

            command.Dispose()

            ''''''''

            txtWarrStart.Text = txtWarrStartEdit.Text
            txtWarrEnd.Text = txtWarrEndEdit.Text

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()

            '''''''

            SQLDSContract.SelectCommand = txt.Text
            GridView1.DataSourceID = "SqlDSContract"
            GridView1.DataBind()


            'End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnConfirmEditWarrantyDates_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub btnClient11_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient11.Click
        txtWarrStartEdit.Text = txtWarrStart.Text
        txtWarrEndEdit.Text = txtWarrEnd.Text
        mdlPopupEditWarrantyDates.Show()
    End Sub

    Protected Sub btnRevisionNCR_Click(sender As Object, e As EventArgs) Handles btnRevisionNCR.Click
        Try
            'FirstGridViewRowLocationNCR()
            'FindLocationsNCR()

            txtContractNoNCR.Text = txtContractNo.Text
            txtContractDateNCR.Text = txtContractDate.Text
            txtCurrentAgreeValueNCR.Text = txtAgreeVal.Text
            txtServInstNCR.Text = txtServInst.Text.ToUpper.Trim

            'If rbtLstDuration.SelectedIndex = 0 Then
            txtDurationNCR.Text = txtDuration.Text & " " & rbtLstDuration.SelectedValue
            'ElseIf rbtLstDuration.SelectedIndex = 1 Then
            '    txtDurationNCR.Text = txtDuration.Text & rbtLstDuration.SelectedValue
            'ElseIf rbtLstDuration.SelectedIndex = 2 Then
            '    txtDurationNCR.Text = txtDuration.Text & rbtLstDuration.SelectedValue
            'ElseIf rbtLstDuration.SelectedIndex = 3 Then
            '    txtDurationNCR.Text = txtDuration.Text & rbtLstDuration.SelectedValue
            'End If

            If txtDuration.Text = "1" And Right(txtDurationNCR.Text, 1) = "S" Then
                'txtDurationNCR.Text = remove Replace(txtDurationNCR.Text, "", txtDurationNCR.Text.Length - 1)
                txtDurationNCR.Text = txtDurationNCR.Text.Remove(txtDurationNCR.Text.Length - 1, 1)
            End If
            'FirstGridViewRowLocationNCR()
            'FirstGridViewRowServicesNCR()
            'FirstGridViewRowFreqNCR()
            'FirstGridViewRowTargetNCR()

            btnSvcAddNCR.Enabled = True
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Black

            'txtEffectiveDateNCR.Text = ""
            'txtAgreeValueNCR.Text = 0.0

            SqlDSContractDetNCR.SelectCommand = "Select * from tblcontractdettemp where ContractNo ='" & txtContractNo.Text & "'"
            SqlDSContractDetNCR.DataBind()

            grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
            grvContractDetailNCR.DataBind()

            MakeSvcDetailNullNCR()
            EnableSvcControlsNCR()
            If grvContractDetailNCR.Rows.Count > 0 Then
                btnSvcSaveScheduleNCR.Enabled = True
                btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Black
            Else
                btnSvcSaveScheduleNCR.Enabled = False
                btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Gray
            End If


            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim cmdContractDetailTemp As MySqlCommand = New MySqlCommand
            'cmdContractDetailTemp.CommandType = CommandType.Text
            'cmdContractDetailTemp.CommandText = "SELECT * from tblContractDetTemp where ContractNo = '" & txtContractNo.Text & "'"
            'cmdContractDetailTemp.Connection = conn

            'Dim drContractDetailTemp As MySqlDataReader = cmdContractDetailTemp.ExecuteReader()
            'Dim dtContractDetailTemp As New DataTable
            'dtContractDetailTemp.Load(drContractDetailTemp)

            'If dtContractDetailTemp.Rows.Count = 0 Then
            '    PopulateRevisionTempTable()
            'End If

            'conn.Close()
            'conn.Dispose()

            btnSvcEditNCR.Enabled = False
            btnSvcEditNCR.ForeColor = System.Drawing.Color.Gray
            btnSvcDeleteNCR.Enabled = False
            btnSvcDeleteNCR.ForeColor = System.Drawing.Color.Gray

            FindPriceIncreaseDecreaseLimit()
            UpdateEffectiveDateAgreeValueInContractTableNCR()
            PopulateRevisionTempTable()
            mdlPopupNCR.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRevisionNCR_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Private Sub PopulateRevisionTempTable()
      
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim cmdContractDetailTemp As MySqlCommand = New MySqlCommand
            cmdContractDetailTemp.CommandType = CommandType.Text
            cmdContractDetailTemp.CommandText = "SELECT * from tblContractDet where ContractNo = '" & txtContractNo.Text & "' order by rcno"
            cmdContractDetailTemp.Connection = conn

            Dim drContractDetailTemp As MySqlDataReader = cmdContractDetailTemp.ExecuteReader()
            Dim dtContractDetailTemp As New DataTable
            dtContractDetailTemp.Load(drContractDetailTemp)

            If dtContractDetailTemp.Rows.Count > 0 Then

                For x As Integer = 0 To dtContractDetailTemp.Rows.Count - 1


                    'start
                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "INSERT INTO tblContractdetTemp(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                    qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
                    qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
                    qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
                    qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"
                    'qry = qry + " from tblContractdetTemp where ContractNo = '" & txtContractNo.Text & "'"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@ContractNo", dtContractDetailTemp.Rows(x)("ContractNo"))
                    command.Parameters.AddWithValue("@Frequency", dtContractDetailTemp.Rows(x)("Frequency"))
                    command.Parameters.AddWithValue("@Value", dtContractDetailTemp.Rows(x)("Value"))
                    command.Parameters.AddWithValue("@NoService", dtContractDetailTemp.Rows(x)("NoService"))
                    command.Parameters.AddWithValue("@Location", dtContractDetailTemp.Rows(x)("Location"))
                    command.Parameters.AddWithValue("@BranchId", dtContractDetailTemp.Rows(x)("BranchId"))
                    command.Parameters.AddWithValue("@NoOfSvcInterval", dtContractDetailTemp.Rows(x)("NoOfSvcInterval"))
                    command.Parameters.AddWithValue("@NoOfInterval", dtContractDetailTemp.Rows(x)("NoOfInterval"))

                    command.Parameters.AddWithValue("@ServiceId", dtContractDetailTemp.Rows(x)("ServiceId"))
                    command.Parameters.AddWithValue("@ServiceDesc", dtContractDetailTemp.Rows(x)("ServiceDesc"))
                    command.Parameters.AddWithValue("@FrequencyDesc", dtContractDetailTemp.Rows(x)("FrequencyDesc"))

                    command.Parameters.AddWithValue("@TargetDesc", dtContractDetailTemp.Rows(x)("TargetDesc"))
                    command.Parameters.AddWithValue("@TargetId", dtContractDetailTemp.Rows(x)("TargetId"))
                    command.Parameters.AddWithValue("@ServiceNotes", dtContractDetailTemp.Rows(x)("ServiceNotes"))

                    command.Parameters.AddWithValue("@AccountID", dtContractDetailTemp.Rows(x)("AccountID"))

                    command.Parameters.AddWithValue("@ContactPerson", dtContractDetailTemp.Rows(x)("ContactPerson"))
                    command.Parameters.AddWithValue("@ContactPerson2", dtContractDetailTemp.Rows(x)("ContactPerson2"))
                    command.Parameters.AddWithValue("@Contact1Position", dtContractDetailTemp.Rows(x)("Contact1Position"))
                    command.Parameters.AddWithValue("@Contact2Position", dtContractDetailTemp.Rows(x)("Contact2Position"))

                    command.Parameters.AddWithValue("@Telephone", dtContractDetailTemp.Rows(x)("Telephone"))
                    command.Parameters.AddWithValue("@Telephone2", dtContractDetailTemp.Rows(x)("Telephone2"))
                    command.Parameters.AddWithValue("@Contact2Tel", dtContractDetailTemp.Rows(x)("Contact2Tel"))
                    command.Parameters.AddWithValue("@Contact2Tel2", dtContractDetailTemp.Rows(x)("Contact2Tel2"))
                    command.Parameters.AddWithValue("@Fax", dtContractDetailTemp.Rows(x)("Fax"))
                    command.Parameters.AddWithValue("@Contact2Fax", dtContractDetailTemp.Rows(x)("Contact2Fax"))
                    command.Parameters.AddWithValue("@Mobile", dtContractDetailTemp.Rows(x)("Mobile"))
                    command.Parameters.AddWithValue("@Contact2Mobile", dtContractDetailTemp.Rows(x)("Contact2Mobile"))
                    command.Parameters.AddWithValue("@Email", dtContractDetailTemp.Rows(x)("Email"))
                    command.Parameters.AddWithValue("@Contact2Email", dtContractDetailTemp.Rows(x)("Contact2Email"))
                    command.Parameters.AddWithValue("@LocationID", dtContractDetailTemp.Rows(x)("LocationID"))
                    command.Parameters.AddWithValue("@ServiceName", dtContractDetailTemp.Rows(x)("ServiceName"))
                    command.Parameters.AddWithValue("@Address1", dtContractDetailTemp.Rows(x)("Address1"))
                    command.Parameters.AddWithValue("@Zone", dtContractDetailTemp.Rows(x)("LocateGRP"))
                    command.Parameters.AddWithValue("@ServiceLocationGroup", dtContractDetailTemp.Rows(x)("ServiceLocationGroup"))
                    command.Parameters.AddWithValue("@UOM", dtContractDetailTemp.Rows(x)("UOM"))

                    command.Parameters.AddWithValue("@Area", dtContractDetailTemp.Rows(x)("Area"))

                    command.Parameters.AddWithValue("@Salesman", dtContractDetailTemp.Rows(x)("Salesman"))
                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Connection = conn
                    command.ExecuteNonQuery()


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdetTemp"

                    Dim command3 As MySqlCommand = New MySqlCommand
                    command3.CommandType = CommandType.Text

                    command3.CommandText = sqlLastId
                    command3.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command3.Connection = conn
                    txtSourceSQLID.Text = command3.ExecuteScalar()

                    txtRcnoDetailLog.Text = txtSourceSQLID.Text

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''


                    Dim command4 As MySqlCommand = New MySqlCommand
                    command4.CommandType = CommandType.Text
                    command4.CommandText = "Update tblcontractdetTemp set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command4.Connection = conn
                    command4.ExecuteNonQuery()

                    'Start:Target

                    Dim cmdContractTargetTemp As MySqlCommand = New MySqlCommand
                    cmdContractTargetTemp.CommandType = CommandType.Text
                    cmdContractTargetTemp.CommandText = "SELECT * from tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
                    cmdContractTargetTemp.Connection = conn

                    Dim drContractTargetTemp As MySqlDataReader = cmdContractTargetTemp.ExecuteReader()
                    Dim dtContractTargetTemp As New DataTable
                    dtContractTargetTemp.Load(drContractTargetTemp)

                    If dtContractTargetTemp.Rows.Count > 0 Then

                        For y As Integer = 0 To dtContractTargetTemp.Rows.Count - 1

                            Dim commandTarget As MySqlCommand = New MySqlCommand
                            commandTarget.CommandType = CommandType.Text

                            Dim qryTarget As String = "INSERT INTO tblcontractservingtargetTemp(ContractNo, ServiceId, SourceSQLId,"
                            qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                            qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

                            qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                            qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandTarget.CommandText = qryTarget
                            commandTarget.Parameters.Clear()

                            commandTarget.Parameters.AddWithValue("@ContractNo", dtContractTargetTemp.Rows(y)("ContractNo"))
                            commandTarget.Parameters.AddWithValue("@ServiceId", dtContractTargetTemp.Rows(y)("ServiceId"))
                            commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                            commandTarget.Parameters.AddWithValue("@TargetId", dtContractTargetTemp.Rows(y)("TargetId"))
                            commandTarget.Parameters.AddWithValue("@TargetDesc", dtContractTargetTemp.Rows(y)("TargetDesc"))

                            commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandTarget.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandTarget.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandTarget.Connection = conn
                            commandTarget.ExecuteNonQuery()

                            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                txtTargetDesc.Text = txtTargetDesc.Text + ", " + dtContractTargetTemp.Rows(y)("TargetDesc")
                                txtTargetId.Text = txtTargetId.Text + "," + dtContractTargetTemp.Rows(y)("TargetId")
                            Else
                                txtTargetDesc.Text = dtContractTargetTemp.Rows(y)("TargetDesc")
                                txtTargetId.Text = dtContractTargetTemp.Rows(y)("TargetId")
                            End If
                        Next y


                    End If

                    'End:Target

                    ''
                    'Start Frequency

                    Dim cmdContractFrequencyTemp As MySqlCommand = New MySqlCommand
                    cmdContractFrequencyTemp.CommandType = CommandType.Text
                    cmdContractFrequencyTemp.CommandText = "SELECT * from tblservicecontractfrequency where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
                    cmdContractFrequencyTemp.Connection = conn

                    Dim drContractFrequencyTemp As MySqlDataReader = cmdContractFrequencyTemp.ExecuteReader()
                    Dim dtContractFrequencyTemp As New DataTable
                    dtContractFrequencyTemp.Load(drContractFrequencyTemp)

                    If dtContractFrequencyTemp.Rows.Count > 0 Then

                        For z As Integer = 0 To dtContractFrequencyTemp.Rows.Count - 1
                            Dim commandFrequency As MySqlCommand = New MySqlCommand
                            commandFrequency.CommandType = CommandType.Text

                            Dim qryFreq As String = "INSERT INTO tblservicecontractfrequencyTemp(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                            qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                            qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                            qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandFrequency.CommandText = qryFreq
                            commandFrequency.Parameters.Clear()

                            commandFrequency.Parameters.AddWithValue("@ContractNo", dtContractFrequencyTemp.Rows(z)("ContractNo"))
                            commandFrequency.Parameters.AddWithValue("@FreqMTD", dtContractFrequencyTemp.Rows(z)("FreqMTD"))
                            commandFrequency.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                            commandFrequency.Parameters.AddWithValue("@SeqNo", dtContractFrequencyTemp.Rows(z)("SeqNo"))
                            commandFrequency.Parameters.AddWithValue("@DayNo", dtContractFrequencyTemp.Rows(z)("DayNo"))
                            commandFrequency.Parameters.AddWithValue("@WeekNo", dtContractFrequencyTemp.Rows(z)("WeekNo"))
                            commandFrequency.Parameters.AddWithValue("@MonthNo", dtContractFrequencyTemp.Rows(z)("MonthNo"))
                            commandFrequency.Parameters.AddWithValue("@WeekDow", dtContractFrequencyTemp.Rows(z)("WeekDow"))
                            commandFrequency.Parameters.AddWithValue("@Location", dtContractFrequencyTemp.Rows(z)("Location"))
                            commandFrequency.Parameters.AddWithValue("@BranchId", dtContractFrequencyTemp.Rows(z)("BranchId"))
                            commandFrequency.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            commandFrequency.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFrequency.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            commandFrequency.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFrequency.Connection = conn
                            commandFrequency.ExecuteNonQuery()

                        Next z
                    End If

                    'end Frequency
                Next x

            End If

            SqlDSContractDetNCR.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDetTemp where (1 =1 )   and ContractNo = '" & txtContractNo.Text & "'  order by ServiceId limit 20"

            grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
            grvContractDetailNCR.DataBind()

            conn.Close()
            conn.Dispose()

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRevisionNCR_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Private Sub FindLocationsNCR()
        Try
            Dim lContractGroup As String
            lContractGroup = ""
            Dim sqlstr1 As String
            sqlstr1 = ""
            'txtContactPerson2NCR.Text = "Arghya"
            lContractGroup = Left(ddlContractGrp.Text, 2)
            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "'  and InActiveD = False  and ContractGroup like '" & lContractGroup & "%'"
                SqlDSCompanyLocationNCR.SelectCommand = sqlstr1
                SqlDSPersonLocationNCR.DataBind()
                gvLocationNCR.DataSourceID = "SqlDSCompanyLocationNCR"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "'  and InActiveD = False  and ContractGroup  like '" & lContractGroup & "%'"
                SqlDSPersonLocationNCR.SelectCommand = sqlstr1
                SqlDSPersonLocationNCR.DataBind()
                gvLocationNCR.DataSourceID = "SqlDSPersonLocationNCR"
            End If
            'txtFaxNCR.Text = "Sen"
            gvLocationNCR.DataBind()
            'txtFax2NCR.Text = "Gupta"
            UpdatePanel6.Update()
        Catch ex As Exception
            'txtContactPersonNCR.Text = ex.Message.ToString
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocationsNCR", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub
    '' ''31.05.22


    Protected Sub grvServiceLocationNCR_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocationNCR.RowDeleting
        'Try

        '    If txtRecordDeleted.Text = "Y" Then
        '        txtRecordDeleted.Text = "N"
        '        Exit Sub
        '    End If

        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then

        '        txtRecordDeleted.Text = "N"
        '        Dim Query As String
        '        SetRowData()

        '        Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



        '        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
        '        If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
        '            If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

        '                Dim conn As MySqlConnection = New MySqlConnection(constr)
        '                conn.Open()

        '                Dim commandUpdGS As MySqlCommand = New MySqlCommand
        '                commandUpdGS.CommandType = CommandType.Text
        '                commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
        '                commandUpdGS.Connection = conn
        '                commandUpdGS.ExecuteNonQuery()

        '                conn.Close()
        '            End If
        '        End If

        '        If dt.Rows.Count > 1 Then
        '            dt.Rows.Remove(dt.Rows(rowIndex))
        '            drCurrentRow = dt.NewRow()
        '            ViewState("CurrentTableLoc") = dt
        '            grvTargetDetails.DataSource = dt
        '            grvTargetDetails.DataBind()

        '            SetPreviousData()

        '            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
        '            Query = "Select * from tblTarget"
        '            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


        '            ''''''''''''''''''''''''''
        '            HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

        '            txtDuplicateTarget.Text = "N"

        '            If HasDuplicateTarget = True Then
        '                txtDuplicateTarget.Text = "Y"
        '                Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
        '                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

        '                Exit Sub
        '            End If


        '            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

        '            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        '            'Dim rowindex1 As Integer = xrow1.RowIndex

        '            If txtRecordAdded.Text = "N" Then
        '                btnAddDetail_Click(sender, e)
        '            End If

        '            txtRecordDeleted.Text = "Y"

        '            UpdateTargetDescription()
        '            ''''''''''''''''''''''
        '            'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
        '        End If
        '    End If
        'Catch ex As Exception
        '    Throw ex
        '    Exit Sub
        'End Try
    End Sub



    Protected Sub grvServiceLocationNCR_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvServiceLocationNCR_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServiceLocationNCR.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub grvServicesNCR_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocationNCR.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            'Dim confirmValue As String
            'confirmValue = ""

            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then

            '    txtRecordDeleted.Text = "N"
            '    Dim Query As String
            '    SetRowData()

            '    Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            '    Dim drCurrentRow As DataRow = Nothing
            '    Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



            '    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
            '    If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
            '        If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

            '            Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            conn.Open()

            '            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '            commandUpdGS.CommandType = CommandType.Text
            '            commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
            '            commandUpdGS.Connection = conn
            '            commandUpdGS.ExecuteNonQuery()

            '            conn.Close()
            '        End If
            '    End If

            '    If dt.Rows.Count > 1 Then
            '        dt.Rows.Remove(dt.Rows(rowIndex))
            '        drCurrentRow = dt.NewRow()
            '        ViewState("CurrentTableLoc") = dt
            '        grvTargetDetails.DataSource = dt
            '        grvTargetDetails.DataBind()

            '        SetPreviousData()

            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select * from tblTarget"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


            '        ''''''''''''''''''''''''''
            '        HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            '        txtDuplicateTarget.Text = "N"

            '        If HasDuplicateTarget = True Then
            '            txtDuplicateTarget.Text = "Y"
            '            Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
            '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            Exit Sub
            '        End If


            '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            '        'Dim rowindex1 As Integer = xrow1.RowIndex

            '        If txtRecordAdded.Text = "N" Then
            '            btnAddDetail_Click(sender, e)
            '        End If

            '        txtRecordDeleted.Text = "Y"

            '        UpdateTargetDescription()
            '        ''''''''''''''''''''''
            '        'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
            '    End If
            'End If
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub grvServicesNCR_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvServicesNCR.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub

    Protected Sub grvServicesNCR_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServicesNCR.PageIndex = e.NewPageIndex
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub grvTargetDetailsNCR_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvTargetDetailsNCR.RowDeleting
        Try

            If txtRecordDeletedNCR.Text = "Y" Then
                txtRecordDeletedNCR.Text = "N"
                Exit Sub
            End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                txtRecordDeletedNCR.Text = "N"
                Dim Query As String
                SetRowDataNCR()

                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



                Dim TextBoxRcnoNCR As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                If (String.IsNullOrEmpty(TextBoxRcnoNCR.Text) = False) Then
                    If (Convert.ToInt32(TextBoxRcnoNCR.Text) > 0) Then

                        Dim conn As MySqlConnection = New MySqlConnection(constr)
                        conn.Open()

                        Dim commandUpdGS As MySqlCommand = New MySqlCommand
                        commandUpdGS.CommandType = CommandType.Text
                        commandUpdGS.CommandText = "Delete from tblcontractservingtargettemp where rcno = " & TextBoxRcnoNCR.Text
                        commandUpdGS.Connection = conn
                        commandUpdGS.ExecuteNonQuery()
                        conn.Close()
                        conn.Dispose()
                        'UpdateTargetDescription()

                    End If
                End If

                If dt.Rows.Count > 1 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTable") = dt
                    grvTargetDetailsNCR.DataSource = dt
                    grvTargetDetailsNCR.DataBind()

                    SetPreviousDataNCR()

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetailsNCR.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGVNCR"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)

                    ''''''''''''''''''''''''''
                    HasDuplicateTargetNCR = HighlightDuplicateNCR(grvTargetDetailsNCR)

                    txtDuplicateTargetNCR.Text = "N"

                    If HasDuplicateTargetNCR = True Then
                        txtDuplicateTargetNCR.Text = "Y"
                        'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                        lblAlert.Text = "Duplicate Target/Pests has been selected"
                        Exit Sub
                    End If


                    'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

                    'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
                    'Dim rowindex1 As Integer = xrow1.RowIndex

                    If txtRecordAddedNCR.Text = "N" Then
                        btnAddDetailNCR_Click(sender, e)
                    End If

                    txtRecordDeletedNCR.Text = "Y"
                    'UpdateTargetDescription()

                    ''''''''''''''''''''''
                    'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
                End If


                ' '''''''''''''''''''''''
                'Start:Target
                SetRowDataNCR()

                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                If tableAdd IsNot Nothing Then
                    txtTargetDescNCR.Text = ""

                    For rowIndex1 As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDescNCR As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargetIdNCR As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex1).Cells(0).FindControl("txtTargtIdGVNCR"), TextBox)


                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex1).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                        If (TextBoxTargetDescNCR.Text) <> "-1" Then
                            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                txtTargetDescNCR.Text = txtTargetDescNCR.Text + ", " + TextBoxTargetDescNCR.Text.Trim
                                txtTargetIdNCR.Text = txtTargetIdNCR.Text + "," + TextBoxTargetIdNCR.Text.Trim
                            Else
                                txtTargetDesc.Text = TextBoxTargetDescNCR.Text.Trim
                                txtTargetId.Text = TextBoxTargetIdNCR.Text.Trim
                            End If

                        End If
                    Next rowIndex1
                End If

                UpdateTargetDescriptionNCR()
                grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
                grvContractDetailNCR.DataBind()
                lblMessageNCR.Text = "DELETE : DETAIL TARGET RECORD SUCCESSFULLY UPDATED"

                dt.Dispose()

                mdlPopupNCR.Show()
                'lblAlert.Text = ""

                'updpnlTarget.Update()
                'UpdatePanel1.Update()
                'UpdatePanel2.Update()

                'grvContractDetail.DataSourceID = "SqlDSContractDet"
                'grvContractDetail.DataBind()
                'End:Target

                ' ''''''''''''''''''''''''''''
                ''UpdateTargetDescription()
            End If
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION grvTargetDetailsNCR_RowDeleting", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub grvTargetDetailsNCR_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvTargetDetailsNCR.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Protected Sub grvTargetDetailsNCR_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvTargetDetailsNCR.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlLocationIdGVNCR_TextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim lLocationId As String

            Dim ddl1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("ddlLocationIdGVNCR"), TextBox)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

            lLocationId = lblid1.Text
            lblLocationID.Text = lLocationId

            'updPanelContract1.Update()

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Contact Details

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                command1.CommandText = "SELECT ContractGroup FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
            ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                command1.CommandText = "SELECT ContractGroup FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
            End If
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("ContractGroup").ToString.Trim <> ddlContractGrp.Text.Trim Then
                    mdlMismatchContractGroupLocationID.Show()
                    lblid1.Text = ""
                    lLocationId = ""
                    '"The Contract Group of Location ID [Location ID] does not match with this contract." [OK]. 



                End If
            Else
                mdlMismatchContractGroupLocationID.Show()
                lblid1.Text = ""
                lLocationId = ""


            End If
            'mdlPopupNCR.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlLocationIdGVNCR_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    ''=========== Done upto this part (Up)
    Protected Sub btnAddDetailNCR_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecNCR()
        Else
            AddNewRowNCR()
        End If
    End Sub


    Protected Sub ddlServiceIdGVNCR_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceIdGVNCR"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceDescriptionGVNCR"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtAreaGVNCR"), TextBox)

            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT ProductDesc, WithArea FROM tblproduct where ProductID= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("ProductDesc").ToString

                If dt.Rows(0)("WithArea").ToString = "Y" Then
                    lblid3.Enabled = True
                    lblid3.ReadOnly = False
                Else
                    lblid3.Enabled = False
                    lblid3.ReadOnly = True
                End If

            End If

            txtServiceIdNCR.Text = lblid1.Text
            txtServiceDescNCR.Text = lblid2.Text
            UpdatePanel1NCR.Update()

            'UpdatePanel1.Update()

            ''HasDuplicateTarget = False
            ''Dim HasDuplicate As Boolean
            'HasDuplicateServices = HighlightDuplicateServices(grvServices)

            'txtDuplicateTarget.Text = "N"
            'txtRecordAdded.Text = "N"

            'If HasDuplicateServices = True Then
            '    txtDuplicateTarget.Text = "Y"
            '    'Dim message As String = "alert('Duplicate Service has been selected!!!')"
            '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '    lblAlert.Text = "Duplicate Service has been selected"
            '    Exit Sub
            'End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()

            'If rowindex1 = grvServices.Rows.Count - 1 Then

            '    btnAddDetailServices_Click(sender, e)
            '    txtRecordAdded.Text = "Y"
            'End If


        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceIdGVNCR_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub ddlServiceFrequencyGVNCR_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If String.IsNullOrEmpty(txtEffectiveDateNCR.Text) = True Then
                txtPopupScrollNCR.Focus()
                lblAlertNCR.Text = "PLEASE ENTER EFFECTIVE DATE"
                updPanelContract1.Update()
                'btnSvcSaveNCR.Enabled = True
                'txtErrNCR.Text = "Y"
                mdlPopupNCR.Show()
                'btnSvcSaveNCR.Enabled = True
                Exit Sub
            End If

            Dim lFrequency As String
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGVNCR"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGVNCR"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGVNCR"), TextBox)

            lFrequency = lblid1.Text
            lblAlertNCR.Text = ""
            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'lblid2.Text = dt.Rows(0)("Frequency").ToString
                lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
            End If


            'Start: Frequency

            lblAlertNCR.Text = lFrequency
            txtFrequencyDescNCR.Text = lFrequency
            txtFrequencyNCR.Text = lFrequency
            txtAgreeValueNCR.Text = lFrequency
            UpdatePanel1NCR.Update()

            'updpnlFreqNCR.Update()

            txtMonthByWhichMonthNCR.Text = lblid3.Text
            txtDOWByWhichWeekNCR.Text = lblid4.Text

            'grvFreqDetails.Enabled = True
            'grvTargetDetails.Enabled = True

            'UpdatePanel1.Update()

            grvFreqDetailsNCR.Enabled = True
            grvTargetDetailsNCR.Enabled = True

            If txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Then
                txtNoofSvcIntervalNCR.Text = 2
            ElseIf txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Then
                txtNoofSvcIntervalNCR.Text = 3
                'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                '    txtNoofSvcInterval.Text = 3
            ElseIf txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                txtNoofSvcIntervalNCR.Text = 4
            ElseIf txtFrequencyDescNCR.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "FIVE-TIMES-MONTHLY" Then
                txtNoofSvcIntervalNCR.Text = 5
            ElseIf txtFrequencyDescNCR.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "SIX-TIMES-MONTHLY" Then
                txtNoofSvcIntervalNCR.Text = 6
            Else
                txtNoofSvcIntervalNCR.Text = 1
            End If



            lblIntervalNCR.Text = ""
            Select Case txtFrequencyNCR.Text.ToUpper
                Case "DAILY"
                    lblIntervalNCR.Text = "Days"
                Case "WEEKLY", "TWICE-WEEKLY"
                    lblIntervalNCR.Text = "Wks"
                Case "BI-WEEKLY", "FORTNIGHTLY"
                    lblIntervalNCR.Text = "Bi-wks"
                Case "TRI-WEEKLY"
                    lblIntervalNCR.Text = "Tri-wks"
                Case "MONTHLY", "THRICE-MONTHLY"
                    lblIntervalNCR.Text = "Mths"
                Case "BI-MONTHLY"
                    lblIntervalNCR.Text = "Bi-mths"
                Case "QUARTERLY"
                    lblIntervalNCR.Text = "Quarterly"
                Case "HALF-ANNUALLY"
                    lblIntervalNCR.Text = "Half-Annually"
                Case "THRICE-ANNUALLY"
                    lblIntervalNCR.Text = "Thrice-Annually"
                Case "ANNUALLY"
                    lblIntervalNCR.Text = "Annually"
                Case "BI-ANNUALLY"
                    lblIntervalNCR.Text = "Bi-Annually"
            End Select


            Dim lInterval As Integer
            lInterval = txtNoofSvcIntervalNCR.Text

            Dim interval As Integer
            Dim endDate As Date
            If txtFrequencyDescNCR.Text = "MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    'monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    monthno = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If

                ''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If

                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    'If monthno = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                '''''''''''''''''''
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                  
                End If
                txtNoofIntervalNCR.Text = monthno
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"


            ElseIf txtFrequencyDescNCR.Text = "DAILY" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    txtNoofIntervalNCR.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                Else
                    txtNoofIntervalNCR.Text = DateDiff(DateInterval.Day, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text)) + 1
                End If
                'txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"


            ElseIf txtFrequencyDescNCR.Text = "WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If


                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If interval > 0 Then


                    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)



                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    interval = interval + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = interval
                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofSvcIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "BI-WEEKLY" Or txtFrequencyDescNCR.Text = "FORTNIGHTLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If
                Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofIntervalNCR.Text = tempInt
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofIntervalNCR.Text = interval

                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "2"

            ElseIf txtFrequencyDescNCR.Text = "TRI-WEEKLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If

                Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofIntervalNCR.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofInterval.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofSvcIntervalNCR.Text = "1"

                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'If weekNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        weekNo = weekNo + 1
                '    End If
                'End If

                'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                'txtNoofInterval.Text = tempInt
                'If txtNoofInterval.Text.Contains(".") Then
                '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                'End If
                'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))


                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofIntervalNCR.Text = interval


                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "3"
            ElseIf txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofIntervalNCR.Text = interval


                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofSvcIntervalNCR.Text = "4"
            ElseIf txtFrequencyDescNCR.Text = "FIVE-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofIntervalNCR.Text = interval


                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "5"

            ElseIf txtFrequencyDescNCR.Text = "SIX-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofIntervalNCR.Text = interval


                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "6"
            ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If

                txtNoofIntervalNCR.Text = Math.Round(monthNo / 2, 2)
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"

            ElseIf txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = monthno
                If txtNoofIntervalNCR.Text = 0 Then
                    txtNoofIntervalNCR.Text = 1
                End If
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "2"
            ElseIf txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Then
               

                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

               
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = monthno
                If txtNoofIntervalNCR.Text = 0 Then
                    txtNoofIntervalNCR.Text = 1
                End If

                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "3"

            ElseIf txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
               
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = monthno

                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "4"
            ElseIf txtFrequencyDescNCR.Text = "QUARTERLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                ''''''''''''''''''''''''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                    End If
                End If
                'If monthNo = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthNo = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthNo = 1
                End If
               
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If

                If monthNo = 11 Or monthNo = 23 Then
                    monthNo = monthNo + 1
                End If

                txtNoofIntervalNCR.Text = Math.Round(monthNo / 3, 2)
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofSvcIntervalNCR.Text.Trim = "" Then txtNoofSvcIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
               
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = Math.Round((monthNo / 6), 2)
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "THRICE-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)


                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If


                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofIntervalNCR.Text = Math.Round((monthNo / 4), 2)
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    'yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), DateAdd(DateInterval.Day, 1, CDate(txtServEnd.Text)))
                Else
                    'yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    yearNo = DateDiff(DateInterval.Year, CDate(txtEffectiveDateNCR.Text), DateAdd(DateInterval.Day, 1, CDate(txtEndDateNCR.Text)))
                End If

               

                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofIntervalNCR.Text = yearNo
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"
            ElseIf txtFrequencyDescNCR.Text = "BI-ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    yearNo = DateDiff(DateInterval.Year, CDate(txtEffectiveDateNCR.Text), CDate(txtEndDateNCR.Text))
                End If
                'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofIntervalNCR.Text = Math.Round(yearNo / 2, 2)
                If txtNoofIntervalNCR.Text.Contains(".") Then
                    txtNoofIntervalNCR.Text = txtNoofIntervalNCR.Text.Substring(0, txtNoofIntervalNCR.Text.IndexOf("."))
                End If
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"
            Else
                txtNoofIntervalNCR.Text = 1
                If txtNoofIntervalNCR.Text.Trim = "" Then txtNoofIntervalNCR.Text = "1"


            End If
            fGetInterval()
            txtNoServiceNCR.Text = CDec((txtNoofSvcIntervalNCR.Text)) * CDec((txtNoofIntervalNCR.Text))


            lblid2.Text = txtNoServiceNCR.Text




            '''''''''''''''''''''''''''''''''''''''''
            If Convert.ToInt64(txtNoofIntervalNCR.Text) > 0 Then
                'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                'End If
            Else
                'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlertNCR.Text = "This Frequency CANNOT be selected within this Date Range"
                Exit Sub

            End If


            '''''''''''''''''''''''''''''''''''''''''
            'Start:Frequency

            ' 'Delete first row

            SetRowDataFreqNCR()

            Dim dtFreq As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            Dim drCurrentRowFreq As DataRow = Nothing

            For i As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
                dtFreq.Rows.Remove(dtFreq.Rows(0))
                drCurrentRowFreq = dtFreq.NewRow()
                ViewState("CurrentTableFreq") = dtFreq
                grvFreqDetailsNCR.DataSource = dtFreq
                grvFreqDetailsNCR.DataBind()

                SetPreviousDataFreqNCR()
            Next i

            FirstGridViewRowFreqNCR()



            Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
            Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
            Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
            Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
            Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
            Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
            Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

            If txtFrequencyDescNCR.Text = "DAILY" Then
                gSeq = "001"

                gFreqMTD = "DAY"
                AddNewRowFreqNCR()
                TextBoxFreqMTD.Enabled = False
                TextBoxMonthNo.Enabled = False
                TextBoxDayNo.Enabled = False
                TextBoxWeekNo.Enabled = False
                TextBoxWeekDOW.Enabled = False
                TextBoxLocation.Enabled = False
                TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
            ElseIf txtFrequencyDescNCR.Text = "WEEKLY" Then
                gFreqMTD = "DOW"
                gSeq = "001"
                gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                AddNewRowFreqNCR()
                TextBoxFreqMTD.Enabled = False
                TextBoxMonthNo.Enabled = False
                TextBoxDayNo.Enabled = False
                TextBoxWeekNo.Enabled = False
                'TextBoxWeekDOW.Enabled = False
                'TextBoxLocation.Enabled = False
                'TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
            ElseIf txtFrequencyDescNCR.Text = "BI-WEEKLY" Or txtFrequencyDescNCR.Text = "TRI-WEEKLY" Or txtFrequencyDescNCR.Text = "FORTNIGHTLY" Then
                'TextBoxSeqNo.Text = "001"
                gSeq = "001"
                gFreqMTD = "DOW"
                TextBoxWeekNo.Enabled = True
                For i As Integer = 0 To lInterval - 1
                    gSeq = "00" + (i + 1).ToString()
                    AddNewRowFreqNCR()
                Next i
                'AddNewRowFreq()
                TextBoxFreqMTD.Enabled = False
                TextBoxMonthNo.Enabled = False
                TextBoxDayNo.Enabled = False

                TextBoxWeekDOW.Enabled = False
                'TextBoxLocation.Enabled = False
                'TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
            ElseIf txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "SIX-TIMES-WEEKLY" Then
                'TextBoxSeqNo.Text = "001"
                gSeq = "001"
                gFreqMTD = "DOW"

                TextBoxFreqMTD.Enabled = False
                TextBoxWeekNo.Enabled = False
                For i As Integer = 0 To lInterval - 1
                    gSeq = "00" + (i + 1).ToString()
                    If i = 0 Then
                        gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                    Else
                        gDOW = ""
                    End If
                    AddNewRowFreqNCR()
                Next i
                'AddNewRowFreq()
                TextBoxFreqMTD.Enabled = False
                TextBoxMonthNo.Enabled = False
                TextBoxDayNo.Enabled = False

                TextBoxWeekDOW.Enabled = False
                'TextBoxLocation.Enabled = False
                'TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
            ElseIf txtFrequencyDescNCR.Text = "MONTHLY" Or txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Or txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                'TextBoxSeqNo.Text = "001"
                'gFreqMTD = "DOW"
                TextBoxWeekNo.Enabled = True
                For i As Integer = 0 To lInterval - 1
                    gSeq = "00" + (i + 1).ToString()
                    AddNewRowFreqNCR()

                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False

                    '
                Next i
                'AddNewRowFreq()
                'TextBoxFreqMTD.Enabled = False
                'TextBoxMonthNo.Enabled = False
                'TextBoxDayNo.Enabled = False
                'TextBoxWeekNo.Enabled = True
                'TextBoxWeekDOW.Enabled = False
                'TextBoxLocation.Enabled = False
                'TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
            ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Or txtFrequencyDescNCR.Text = "QUARTERLY" Or txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Or txtFrequencyDescNCR.Text = "THRICE-ANNUALLY" Or txtFrequencyDescNCR.Text = "ANNUALLY" Or txtFrequencyDescNCR.Text = "BI-ANNUALLY" Then
                gSeq = "001"
                TextBoxWeekNo.Enabled = True
                AddNewRowFreqNCR()
                TextBoxFreqMTD.Enabled = False
                '14.11.19
                TextBoxMonthNo.Enabled = True
                '14.11.19

                TextBoxDayNo.Enabled = False


                'TextBoxWeekDOW.Enabled = False
                'TextBoxLocation.Enabled = False
                'TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False
                'For i As Integer = 0 To lInterval
                '    If i = 0 Then
                '        AddNewRow()
                '    Else
                '        AddNewRowWithDetailRecFreq()

                '    End If

                'Next i

            ElseIf txtFrequencyDescNCR.Text = "ADHOC" Or txtFrequencyDescNCR.Text = "ONE-TIME" Or txtFrequencyDescNCR.Text = "SVC CALL" Or txtFrequencyDescNCR.Text = "FOLLOW UP" Then
                gSeq = "001"

                gFreqMTD = "DAY"
                AddNewRowFreqNCR()
                TextBoxFreqMTD.Enabled = False
                TextBoxMonthNo.Enabled = False
                TextBoxDayNo.Enabled = False
                TextBoxWeekNo.Enabled = False
                TextBoxWeekDOW.Enabled = False
                TextBoxLocation.Enabled = False
                TextBoxBranchID.Enabled = False
                TextBoxContractNo.Enabled = False
                TextBoxSourceSQLID.Enabled = False

            End If

            'Delete last row

            SetRowDataFreqNCR()

            Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            Dim drCurrentRowFreq2 As DataRow = Nothing

            If dtFreq2.Rows.Count > 1 Then
                dtFreq2.Rows.Remove(dtFreq2.Rows(0))
                drCurrentRowFreq2 = dtFreq2.NewRow()
                ViewState("CurrentTableFreq") = dtFreq2
                grvFreqDetailsNCR.DataSource = dtFreq2
                grvFreqDetailsNCR.DataBind()

                SetPreviousDataFreqNCR()

            End If

            '''''''''''''''''End:Frequency


            'If rowindex1 = grvServices.Rows.Count - 1 Then
            '    btnAddDetailServices_Click(sender, e)
            '    txtRecordAdded.Text = "Y"
            'End If
            'End: Frequency

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dtFreq.Dispose()
            dtFreq2.Dispose()

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            updpnlServiceNCR.Update()
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceFrequencyGVNCR_SelectedIndexChanged", ex.Message.ToString, "")

            'mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub grvFreqDetailsNCR_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvFreqDetails.RowDeleting
        '    Try

        '        Dim Query As String
        '        SetRowDataFreq()

        '        Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)


        '        If ViewState("CurrentTableFreq") IsNot Nothing Then
        '            'Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
        '            'Dim drCurrentRow As DataRow = Nothing
        '            'Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)
        '            ''
        '            'Dim CatIdGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(13).FindControl("ddlCatIdGV"), TextBox)
        '            'Dim SpareIdGV As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlSpareIdGV"), DropDownList)
        '            'Dim TransIdDetailGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(9).FindControl("txtTransIdDetailGV"), TextBox)

        '            'If Convert.ToInt32(TransIdDetailGV.Text) > 0 Then
        '            '    'DropDownList SpareIdGV = (DropDownList)grvTargetDetails.Rows[rowIndex].Cells[0].FindControl("ddlSpareIdGV");
        '            '    Dim SpareSerialNoGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("ddlSpareSerialNoGV"), TextBox)
        '            '    Dim QuantityGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtQuantityGV"), TextBox)
        '            '    Dim TotalGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(7).FindControl("txtTotalGV"), TextBox)

        '            '    'Delete

        '            '    objBL.CompId = Convert.ToInt32(HttpContext.Current.Session("CompId"))
        '            '    objBL.BranchId = Convert.ToInt32(HttpContext.Current.Session("BranchId"))
        '            '    objBL.AccessBy = Convert.ToInt32(HttpContext.Current.Session("UserId"))
        '            '    objBL.TransId = Convert.ToInt32(txtParentId.Text)
        '            '    objBL.TransIdDetail = Convert.ToInt32(TransIdDetailGV.Text)
        '            '    objBL.CatId = (CatIdGV.Text)
        '            '    objBL.SpareId = Convert.ToInt32(SpareIdGV.Text)

        '            '    Dim OutputParam As Integer = -10

        '            '    'objBL.SpareId = Convert.ToInt32(txtSpareId.Text);
        '            '    If SpareSerialNoGV.Text = "---Select---" Then
        '            '        objBL.SpareSerialNo = ""
        '            '    Else
        '            '        objBL.SpareSerialNo = (SpareSerialNoGV.Text)
        '            '    End If


        '            '    objBL.Qty = Convert.ToDecimal(QuantityGV.Text)


        '            '    Dim i As Boolean = objBL.DeleteSparePurchDetail(OutputParam)
        '            '    'If i Then
        '            '    '    If OutputParam = 1 Then
        '            '    '        ShowMsg(objConstant.GsMsgDelete)
        '            '    '    ElseIf OutputParam = 2 Then
        '            '    '        ShowMsg(objConstant.GsMsgNotDeleted)
        '            '    '    End If
        '            '    'End If

        '        End If


        '        'If SpareIdGV.Text = "0" Then
        '        '    Return
        '        'End If

        '        If dt.Rows.Count > 1 Then
        '            dt.Rows.Remove(dt.Rows(rowIndex))
        '            drCurrentRow = dt.NewRow()
        '            ViewState("CurrentTableFreq") = dt
        '            grvFreqDetails.DataSource = dt
        '            grvFreqDetails.DataBind()

        '            SetPreviousDataFreq()

        '            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
        '            Query = "Select * from tblTarget"
        '            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
        '            'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
        '        End If
        '        'End If
        '    Catch ex As Exception
        '        Throw ex
        '    End Try
    End Sub


    Protected Sub grvFreqDetailsNCR_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                'For Each cell As DataControlFieldCell In e.Row.Cells
                '    ' check all cells in one row
                '    For Each control As Control In cell.Controls

                '        Dim button As ImageButton = TryCast(control, ImageButton)
                '        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                '            ' Add delete confirmation
                '            button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                '        End If
                '    Next control
                'Next cell

            End If



        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub ddlFreqMTDGVNCR_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetailsNCR.PageSize >= 10 Then
                grvFreqDetailsNCR.PageSize = TotDetailRecords + 1
                'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            End If


            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGVNCR"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGVNCR"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGVNCR"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGVNCR"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGVNCR"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0

            If lblid1.Text = "DATE" Then
                lblid2.Enabled = False
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False
                lblid2.Text = ""
                lblid3.Text = Day(CDate(Me.txtServStart.Text))
                lblid4.Text = ""
                lblid5.SelectedIndex = 0

            ElseIf lblid1.Text = "DOW" Then

                If txtFrequencyDescNCR.Text = "QUARTERLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"

                ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                ElseIf txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                Else
                    lblid2.Enabled = False
                    TextBoxMonthNo.Text = ""
                    lblid2.Text = ""
                End If

                'lblid2.Enabled = False
                lblid3.Enabled = False
                lblid4.Enabled = True
                lblid5.Enabled = True

                'lblid2.Text = ""
                lblid3.Text = ""
                lblid4.Text = pWeekNumber(txtServStart.Text)
                lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

            ElseIf lblid1.Text = "MONTH" Then
                lblid2.Enabled = True
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False

                TextBoxMonthNo.Text = "1"
                TextBoxDayNo.Text = Day(CDate(Me.txtServStart.Text))
                TextBoxWeekNo.Text = ""
                TextBoxWeekDOW.SelectedIndex = 0
                'lblid2.Text = ""
                'lblid3.Text = Day(CDate(Me.txtServStart.Text))
                'lblid4.Text = ""
                'lblid5.SelectedIndex = 0

            End If

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlFreqMTDGVNCR_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub OnSelectedIndexChangedgLocNCR(sender As Object, e As EventArgs) Handles gvLocationNCR.SelectedIndexChanged
        For Each row As GridViewRow In gvLocationNCR.Rows
            If row.RowIndex = gvLocationNCR.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub




    Protected Sub ddlWeekDOWGVNCR_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetailsNCR.PageSize >= 10 Then
                grvFreqDetailsNCR.PageSize = TotDetailRecords + 1
            End If

            'Dim lTargetDesciption As String
            'SetRowDataFreq()
            'SetRowData()
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGVNCR"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGVNCR"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0
            '''''''''''''''''''
            txtDuplicateFreqNCR.Text = "N"
            txtRecordAdded.Text = "N"

            ''''''''''''''''''''''''
            If txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDescNCR.Text = "SIX-TIMES-WEEKLY" Then
                HasDuplicateFrequency = HighlightDuplicateFreqNCR(grvFreqDetailsNCR)

                If HasDuplicateFrequency = True Then
                    txtDuplicateFreqNCR.Text = "Y"
                    lblAlertNCR.Text = "Duplicate Frequency has been selected"
                    'btnSvcSave.Enabled = False
                    'UpdatePanel1.Update()
                    'updpnlFreq.Update()
                    'btnSvcSave.Enabled = False
                    Exit Sub
                Else
                    'btnSvcSave.Enabled = True
                End If
            End If

            If rowindex1 = grvFreqDetailsNCR.Rows.Count - 1 Then
                'btnAddDetail_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If


            If lblid1.Text = "DOW" Then
                If lblid5.Text = "--SELECT--" Then
                    'If lblid5.SelectedIndex = "0" Then
                    lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                    MsgBox("Invalid DOW for the Frequency.. ")
                End If


            End If

        Catch ex As Exception
            Throw ex
            lblAlertNCR.Text = ex.Message.ToString
            txtPopupScrollNCR.Focus()
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlWeekDOWGVNCR_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub txtWeekNoGVNCR_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtWeekNoGVNCR"), TextBox)

            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Week cannot be less than 0", "str")
                lblid1.Text = "1"

            End If


            If txtFrequencyNCR.Text = "BI-MONTHLY" Or txtFrequencyNCR.Text = "QUARTERLY" Or txtFrequencyNCR.Text = "HALF-ANNUALLY" Or txtFrequencyNCR.Text = "THRICE-ANNUALLY" Or txtFrequencyNCR.Text = "ANNUALLY" Or txtFrequencyNCR.Text = "BI-ANNUALLY" Then
                Dim maxWeekNo As String = (txtDOWByWhichWeek.Text)
                maxWeekNo = maxWeekNo.Substring(0, maxWeekNo.IndexOf(","))

                If Val(lblid1.Text) > Val(maxWeekNo) Then
                    MsgBox("Week No cannot be more than " & Val(maxWeekNo))
                    lblid1.Text = pWeekNumber(txtServStart.Text)
                    Exit Sub
                End If
            End If


            If txtFrequencyNCR.Text = "BI-WEEKLY" Or txtFrequencyNCR.Text = "TRI-WEEKLY" Or txtFrequencyNCR.Text = "MONTHLY" Or txtFrequencyNCR.Text = "FORTNIGHTLY" Or txtFrequencyNCR.Text = "THRICE-MONTHLY" Or txtFrequencyNCR.Text = "TWICE-MONTHLY" Or txtFrequencyNCR.Text = "FOUR-TIMES-MONTHLY" Then
                Dim maxWeekNo As Integer = Val(txtDOWByWhichWeek.Text)
                If Val(lblid1.Text) > maxWeekNo Then
                    If txtFrequency.Text.ToUpper = "MONTHLY" Then
                        If Val(lblid1.Text) > 5 Then
                            MsgBox("Week No cannot be more than 5")
                            lblid1.Text = pWeekNumber(txtServStart.Text)
                            Exit Sub
                        End If
                    Else
                        MsgBox("Week No can not be bigger than " & maxWeekNo)
                        lblid1.Text = pWeekNumber(txtServStart.Text)
                        Exit Sub
                    End If

                End If
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtWeekNoGVNCR_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub txtMonthNoGVNCR_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtMonthNoGVNCR"), TextBox)


            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Month cannot be less than 0", "str")
                lblid1.Text = "1"

            End If

            Dim maxMonthNo As Integer = Val(txtMonthByWhichMonth.Text)
            If Val(lblid1.Text) > maxMonthNo Then
                MsgBox("Month No cannot be more than " & maxMonthNo)
                lblid1.Text = "1"
                Exit Sub
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtMonthNoGVNCR_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub txtDayNoGVNCR_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtDayNoGVNCR"), TextBox)

            If Val(lblid1.Text) <= 0 Or Val(lblid1.Text) > 31 Then
                MessageBox.Message.Alert(Page, "Day cannot be less than 0 and more than 31", "str")
                lblid1.Text = Day(CDate(Me.txtServStart.Text))

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtDayNoGVNCR_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub ddlTargetDescGVNCR_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            'If grvTargetDetails.PageSize >= 10 Then
            '    grvTargetDetails.PageSize = TotDetailRecords + 1
            '    'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            'End If


            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlTargetDescGVNCR"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGVNCR"), TextBox)


            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT TargetId FROM tblTarget where descrip1= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("TargetId").ToString
            End If
            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            HasDuplicateTargetNCR = HighlightDuplicateNCR(grvTargetDetailsNCR)

            txtDuplicateTarget.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateTargetNCR = True Then
                txtDuplicateTarget.Text = "Y"
                'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlertNCR.Text = "Duplicate Target/Pests has been selected"
                Exit Sub
            End If


            If rowindex1 = grvTargetDetailsNCR.Rows.Count - 1 Then
                btnAddDetailNCR_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If
            'txtTargetDesc.Text = txtTargetDesc.Text & lblid1.Text & ", "
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ddlTargetDescGVNCR_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub FirstGridViewRowTargetNCR()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("TargetDesc", GetType(String)))
            dt.Columns.Add(New DataColumn("TargetId", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceID", GetType(String)))
            dt.Columns.Add(New DataColumn("SourceSQLID", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("TargetDesc") = String.Empty
            dr("TargetId") = String.Empty
            dr("ContractNo") = String.Empty

            dr("ServiceID") = String.Empty
            dr("SourceSQLID") = 0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTable") = dt

            grvTargetDetailsNCR.DataSource = dt
            grvTargetDetailsNCR.DataBind()

            Dim btnAdd As Button = CType(grvTargetDetailsNCR.FooterRow.Cells(1).FindControl("btnAddDetailNCR"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowTargetNCR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowNCR()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGVNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetailsNCR.DataSource = dtCurrentTable
                    grvTargetDetailsNCR.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex2).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)

                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If

            SetPreviousDataNCR()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowNCR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecNCR()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGVNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetailsNCR.DataSource = dtCurrentTable
                    grvTargetDetailsNCR.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)
                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and  BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                        rowIndex1 += 1
                    Next j

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)

                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataNCR()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataNCR()
        Try
            Dim rowIndex As Integer = 0

            Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGVNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)

                        TextBoxTargetDesc.Text = dt.Rows(i)("TargetDesc").ToString()
                        TextBoxTargtId.Text = dt.Rows(i)("TargetId").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxServiceID.Text = dt.Rows(i)("ServiceID").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLID").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxRcno.Text <> "0") And (TextBoxRcno.Text <> "") And (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                        '    Query = "Select * from tblTarget"
                        '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        'End If

                        If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGVNCR"), DropDownList)
                            Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        End If



                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        '    If dt.Rows.Count > 0 Then
                        '        If i < dt.Rows.Count - 2 Then
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString() & ", "
                        '        Else
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString()
                        '        End If
                        '        ''
                        '    End If
                        'End If
                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataNCR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGVNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.Text
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTable") = dtCurrentTable

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataNCR()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub


    Private Sub UpdateTargetDescriptionNCR()
        Try
            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcnoDetail.Text)
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)

            'command1.CommandText = "Update tblcontractdetTemp set TargetId ='" & txtTargetIdNCR.Text & "', TargetDesc = '" & txtTargetDescNCR.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
            command1.CommandText = "Update tblcontractdetTemp set TargetId ='" & txtTargetIdNCR.Text & "', TargetDesc = '" & txtTargetDescNCR.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLIDNCR.Text)


            command1.Connection = conn
            command1.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command1.Dispose()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateTargetDescriptionNCR", ex.Message.ToString, txtContractNo.Text)
            mdlPopupNCR.Show()
            'Exit Function
        End Try
    End Sub


    Protected Sub OnRowDataBoundgLocNCR(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocationNCR, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub


    Protected Sub btnAddDetailLocNCR_Click(ByVal sender As Object, ByVal e As EventArgs)

        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecLoc()
        Else
            AddNewRowLoc()
        End If
    End Sub


    Protected Sub btnAddDetailServicesNCR_Click(ByVal sender As Object, ByVal e As EventArgs)

        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecServices()
        Else
            AddNewRowServices()
        End If
    End Sub




    '03.06.22

    '''''''''' Start: Location


    Private Sub FirstGridViewRowLocationNCR()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceName", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceAddress", GetType(String)))
            dt.Columns.Add(New DataColumn("Zone", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))
            dt.Columns.Add(New DataColumn("LocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Branch", GetType(String)))

            dr = dt.NewRow()

            dr("LocationId") = String.Empty
            dr("ServiceName") = String.Empty
            dr("ServiceAddress") = String.Empty
            dr("Zone") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty

            dr("Rcno") = 0
            dr("LocationGroup") = String.Empty
            dr("Branch") = String.Empty

            dt.Rows.Add(dr)

            ViewState("CurrentTableLoc") = dt

            grvServiceLocationNCR.DataSource = dt
            grvServiceLocationNCR.DataBind()

            Dim btnAdd As Button = CType(grvServiceLocationNCR.FooterRow.Cells(1).FindControl("btnAddDetailLocNCR"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowLocNCR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            'AddNewRow()
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGVNCR"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGVNCR"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(3).FindControl("txtZoneGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(4).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGVNCR"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtBranchGVNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    grvServiceLocationNCR.DataSource = dtCurrentTable
                    grvServiceLocationNCR.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)


                        rowIndex2 += 1
                        j += 1
                    Loop



                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLocNCR()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecLocNCR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGVNCR"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGVNCR"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(3).FindControl("txtZoneGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(4).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGVNCR"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtBranchGVNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    'grvTargetDetails.DataSource = dtCurrentTable
                    'grvTargetDetails.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)


                        rowIndex1 += 1
                    Next j


                    dtCurrentTable.Dispose()
                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLocNCR()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataLocNCR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            'txtLocationId.Text = ""
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGVNCR"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGVNCR"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(3).FindControl("txtZoneGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(4).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGVNCR"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtBranchGVNCR"), TextBox)


                        TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
                        TextBoxServiceName.Text = dt.Rows(i)("ServiceName").ToString()
                        TextBoxServiceAddress.Text = dt.Rows(i)("ServiceAddress").ToString()
                        TextBoxZone.Text = dt.Rows(i)("Zone").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()
                        TextBoxLocationGroup.Text = dt.Rows(i)("LocationGroup").ToString()
                        TextBoxBranch.Text = dt.Rows(i)("Branch").ToString()


                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataLocNCR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGVNCR"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGVNCR"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(3).FindControl("txtZoneGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(4).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGVNCR"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(5).FindControl("txtBranchGVNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableLoc") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLocNCR()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    '03.06.22



    Protected Sub btnSvcAddNCR_Click(sender As Object, e As EventArgs) Handles btnSvcAddNCR.Click
        Try

            'If txtGS.Text = "P" Then
            '    If rbtFixedContinuous.SelectedIndex = 0 Then
            '        lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
            '        Exit Sub
            '    End If
            'End If

            'If txtGS.Text = "P" Then
            '    If rbtFixedContinuous.SelectedIndex = 1 Then
            '        If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
            '            lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

            '            Exit Sub
            '        End If
            '    End If
            'End If

            'If txtStatus.Text = "O" Then
            If Left(txtStatus.Text, 1) = "O" Then
            Else
                'btnSave.Enabled = False
                lblAlertNCR.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                mdlPopupNCR.Show()
                Exit Sub
            End If

            MakeSvcDetailNullNCR()
            DisableSvcControlsNCR()
            'MakeSvcNull()
            lblMessageNCR.Text = "ACTION: ADD SERVICE DETAILS"

            'btnADD.Enabled = False
            'btnADD.ForeColor = System.Drawing.Color.Gray
            'btnEdit.Enabled = False
            'btnEdit.ForeColor = System.Drawing.Color.Gray
            'btnDelete.Enabled = False
            'btnDelete.ForeColor = System.Drawing.Color.Gray

         

            'btnQuit.Enabled = False
            'btnQuit.ForeColor = System.Drawing.Color.Gray
            btnSvcAddNCR.Enabled = False
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Gray

            txtSvcModeNCR.Text = "NEW"
            txtContractGroupSelected.Text = ddlContractGrp.Text
            btnSvcSaveScheduleNCR.Text = "SAVE & FINALIZE"

            '''''''''''''''''''''''''''''''''''''''


            FindLocationsNCR()

          
            gvLocationNCR.DataBind()

            '''''''''''''''''' Find Location

            'txtAgreeValueNCR.Text = lblAccountIdContactLocation1.Text

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                Dim sqlstr As String
                sqlstr = ""


                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                End If



                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstr
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New System.Data.DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '''''''''''''''''''''''''''''''''''''
                    Dim lblid1 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                    Dim lblid2 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceNameGVNCR"), TextBox)
                    Dim lblid3 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceAddressGVNCR"), TextBox)
                    Dim lblid4 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtZoneGVNCR"), TextBox)
                    Dim lblid5 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtLocationGroupGVNCR"), TextBox)
                    Dim lblid6 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtBranchGVNCR"), TextBox)


                    txtLocationIdNCR.Text = lblAccountIdContactLocation1.Text.Trim
                    lblid1.Text = txtLocationId.Text


                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceName").ToString.Trim) = False Then
                        txtServiceNameNCR.Text = dt.Rows(0)("ServiceName").ToString
                        lblid2.Text = txtServiceNameNCR.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("Address1").ToString.Trim) = False Then
                        txtServiceAddressNCR.Text = dt.Rows(0)("Address1").ToString
                        lblid3.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("Address1").ToString
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("AddStreet").ToString.Trim) = False Then
                        txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddStreet").ToString
                        lblid3.Text = txtServiceAddressNCR.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddBuilding").ToString.Trim) = False Then
                        txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddBuilding").ToString
                        lblid3.Text = txtServiceAddressNCR.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString.Trim) = False Then
                        txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddCity").ToString
                        lblid3.Text = txtServiceAddressNCR.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString.Trim) = False Then
                        txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddPostal").ToString
                        lblid3.Text = txtServiceAddressNCR.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceLocationGroup").ToString.Trim) = False Then
                        lblid5.Text = dt.Rows(0)("ServiceLocationGroup").ToString
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("LocateGRP").ToString.Trim) = False Then
                        lblid4.Text = dt.Rows(0)("LocateGRP").ToString
                        txtLocationGroup.Text = lblid5.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("Location").ToString.Trim) = False Then
                        lblid6.Text = dt.Rows(0)("Location").ToString
                        txtBranch.Text = lblid6.Text
                    End If




                    RetrieveContactDetailsNCR(txtLocationIdNCR.Text.Trim)

                    ''''''''''''''''''''''''''''''''''''''
                End If


                conn.Close()
                conn.Dispose()
                dt.Dispose()
                command.Dispose()
                dr.Close()
            End If
            'End If


            'Start : 15.03.20

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                Dim sqlstr As String
                sqlstr = ""


                If String.IsNullOrEmpty(lblAccountIdLocation1.Text.Trim) = False Then


                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                    ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                    End If
                    'End If


                    Dim command As MySqlCommand = New MySqlCommand

                    Dim conn As MySqlConnection = New MySqlConnection()
                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    conn.Open()

                    command.CommandType = CommandType.Text
                    command.CommandText = sqlstr
                    command.Connection = conn

                    Dim dr As MySqlDataReader = command.ExecuteReader()
                    Dim dt As New System.Data.DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        '''''''''''''''''''''''''''''''''''''
                        Dim lblid1 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                        Dim lblid2 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceNameGVNCR"), TextBox)
                        Dim lblid3 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceAddressGVNCR"), TextBox)
                        Dim lblid4 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtZoneGVNCR"), TextBox)
                        Dim lblid5 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtLocationGroupGVNCR"), TextBox)
                        Dim lblid6 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtBranchGVNCR"), TextBox)


                        txtLocationIdNCR.Text = lblAccountIdLocation1.Text.Trim
                        lblid1.Text = txtLocationIdNCR.Text


                        If String.IsNullOrEmpty(dt.Rows(0)("ServiceName").ToString.Trim) = False Then
                            txtServiceNameNCR.Text = dt.Rows(0)("ServiceName").ToString
                            lblid2.Text = txtServiceNameNCR.Text
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("Address1").ToString.Trim) = False Then
                            txtServiceAddressNCR.Text = dt.Rows(0)("Address1").ToString
                            lblid3.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("Address1").ToString
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("AddStreet").ToString.Trim) = False Then
                            txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddStreet").ToString
                            lblid3.Text = txtServiceAddressNCR.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("AddBuilding").ToString.Trim) = False Then
                            txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddBuilding").ToString
                            lblid3.Text = txtServiceAddressNCR.Text
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString.Trim) = False Then
                            txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddCity").ToString
                            lblid3.Text = txtServiceAddressNCR.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString.Trim) = False Then
                            txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + dt.Rows(0)("AddPostal").ToString
                            lblid3.Text = txtServiceAddressNCR.Text
                        End If


                        If String.IsNullOrEmpty(dt.Rows(0)("ServiceLocationGroup").ToString.Trim) = False Then
                            lblid5.Text = dt.Rows(0)("ServiceLocationGroup").ToString
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("LocateGRP").ToString.Trim) = False Then
                            lblid4.Text = dt.Rows(0)("LocateGRP").ToString
                            txtLocationGroupNCR.Text = lblid5.Text
                        End If

                        If String.IsNullOrEmpty(dt.Rows(0)("Location").ToString.Trim) = False Then
                            lblid6.Text = dt.Rows(0)("Location").ToString
                            txtBranchNCR.Text = lblid6.Text
                        End If


                        RetrieveContactDetails(txtLocationIdNCR.Text.Trim)

                        ''''''''''''''''''''''''''''''''''''''
                    End If


                    conn.Close()
                    conn.Dispose()
                    dt.Dispose()
                    command.Dispose()
                    dr.Close()
                End If
            End If
            'End : 15.03.20
            '''''''''''''''''' Find Location
            'updPanelContract1.Update()
            updpnlServiceNCR.Update()
            'updpnlFreqNCR.Update()
            'updpnlTargetNCR.Update()
            'UpdatePanel1NCR.Update()


            mdlPopupNCR.Show()

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcAddNCR_Click", ex.Message.ToString, "")
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub

    Private Sub RetrieveContactDetailsNCR(lLocationIdContact As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Start:Check whether  Contract Detail Record exists

            Dim commandLocationIdContact As MySqlCommand = New MySqlCommand

            commandLocationIdContact.CommandType = CommandType.Text
            commandLocationIdContact.CommandText = "SELECT count(*) as totcontractdetrec FROM tblcontractdet where contractno ='" & txtContractNo.Text & "' and LocationID ='" & lLocationIdContact & "'"
            commandLocationIdContact.Connection = conn

            Dim drLocationIdContact As MySqlDataReader = commandLocationIdContact.ExecuteReader()
            Dim dtLocationIdContact As New DataTable
            dtLocationIdContact.Load(drLocationIdContact)

            'If dtLocationIdContact.Rows.Count = 0 Then
            If Val(dtLocationIdContact.Rows(0)("totcontractdetrec").ToString).ToString = 0 Then
                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2, AddCountry, AddPostal FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2,AddCountry, AddPostal FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationIdContact & "'"
                End If
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    txtContactPersonNCR.Text = dt.Rows(0)("ContactPerson").ToString
                    txtContactPerson2NCR.Text = dt.Rows(0)("ContactPerson2").ToString

                    txtPositionNCR.Text = dt.Rows(0)("Contact1Position").ToString
                    txtPosition2NCR.Text = dt.Rows(0)("Contact2Position").ToString

                    txtTelephoneNCR.Text = dt.Rows(0)("Telephone").ToString
                    txtTelephone2NCR.Text = dt.Rows(0)("Telephone2").ToString

                    txtFaxNCR.Text = dt.Rows(0)("Fax").ToString
                    txtFax2NCR.Text = dt.Rows(0)("Contact2Fax").ToString

                    txtCP2TelephoneNCR.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2NCR.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobileNCR.Text = dt.Rows(0)("Mobile").ToString
                    txtConPerMobile2NCR.Text = dt.Rows(0)("Contact2Mobile").ToString

                    txtEmail1NCR.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtEmail2NCR.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtEmail1NCR.Text = dt.Rows(0)("Email").ToString
                    txtEmail2NCR.Text = dt.Rows(0)("Contact2Email").ToString

                    'txtLocationId.Text = lblid1.Text
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text = lblid4.Text

                    txtContactPersonNCR.Enabled = True
                    txtContactPerson2NCR.Enabled = True
                    txtPositionNCR.Enabled = True
                    txtPosition2NCR.Enabled = True
                    txtTelephoneNCR.Enabled = True
                    txtTelephone2NCR.Enabled = True
                    txtFaxNCR.Enabled = True
                    txtFax2NCR.Enabled = True
                    txtCP2TelephoneNCR.Enabled = True
                    txtCP2Telephone2NCR.Enabled = True
                    txtConPerMobileNCR.Enabled = True
                    txtConPerMobile2NCR.Enabled = True
                    txtEmail1NCR.Enabled = True
                    txtEmail2NCR.Enabled = True
                    'txtAddressNCR.Enabled = True
                End If
            Else
                Dim commandcontractdet As MySqlCommand = New MySqlCommand
                commandcontractdet.CommandType = CommandType.Text

                commandcontractdet.CommandText = "SELECT ServiceName, Address1, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblContractDet where ContractNo = '" & txtContractNo.Text.Trim & "' and AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                commandcontractdet.Connection = conn

                Dim drcontractdet As MySqlDataReader = commandcontractdet.ExecuteReader()
                Dim dtcontractdet As New DataTable
                dtcontractdet.Load(drcontractdet)

                If dtcontractdet.Rows.Count > 0 Then

                    txtContactPersonNCR.Text = dtcontractdet.Rows(0)("ContactPerson").ToString
                    txtContactPerson2NCR.Text = dtcontractdet.Rows(0)("ContactPerson2").ToString
                    txtPositionNCR.Text = dtcontractdet.Rows(0)("Contact1Position").ToString
                    txtPosition2NCR.Text = dtcontractdet.Rows(0)("Contact2Position").ToString
                    txtTelephoneNCR.Text = dtcontractdet.Rows(0)("Telephone").ToString
                    txtTelephone2NCR.Text = dtcontractdet.Rows(0)("Telephone2").ToString
                    txtFaxNCR.Text = dtcontractdet.Rows(0)("Fax").ToString
                    txtFax2NCR.Text = dtcontractdet.Rows(0)("Contact2Fax").ToString

                    txtCP2TelephoneNCR.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2NCR.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobileNCR.Text = dtcontractdet.Rows(0)("Mobile").ToString
                    txtConPerMobile2NCR.Text = dtcontractdet.Rows(0)("Contact2Mobile").ToString

                    txtEmail1NCR.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtEmail2NCR.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtEmail1NCR.Text = dtcontractdet.Rows(0)("Email").ToString
                    txtEmail2NCR.Text = dtcontractdet.Rows(0)("Contact2Email").ToString


                    txtContactPersonNCR.Enabled = False
                    txtContactPerson2NCR.Enabled = False
                    txtPositionNCR.Enabled = False
                    txtPosition2NCR.Enabled = False
                    txtTelephoneNCR.Enabled = False
                    txtTelephone2NCR.Enabled = False
                    txtFaxNCR.Enabled = False
                    txtFax2NCR.Enabled = False
                    txtCP2TelephoneNCR.Enabled = False
                    txtCP2Telephone2NCR.Enabled = False
                    txtConPerMobileNCR.Enabled = False
                    txtConPerMobile2NCR.Enabled = False
                    txtEmail1NCR.Enabled = False
                    txtEmail2NCR.Enabled = False
                    'txtAddressNCR.Enabled = False
                End If
                dtcontractdet.Dispose()
            End If
            'End:Check whether  Contract Detail Record exists

            conn.Close()
            conn.Dispose()
            commandLocationIdContact.Dispose()
            dtLocationIdContact.Dispose()
        Catch ex As Exception
          
            lblAlertNCR.Text = ex.Message.ToString
            mdlPopupNCR.Show()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "RetrieveContactDetailsNCR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Public Sub MakeSvcDetailNullNCR()
        Try
            'Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimecontract();", True)
            txtContactPersonNCR.Text = ""
            txtContactPerson2NCR.Text = ""
            txtPositionNCR.Text = ""
            txtPosition2NCR.Text = ""
            txtTelephoneNCR.Text = ""
            txtTelephone2NCR.Text = ""
            txtFaxNCR.Text = ""
            txtFax2NCR.Text = ""
            txtCP2TelephoneNCR.Text = ""
            txtCP2Telephone2NCR.Text = ""
            txtConPerMobileNCR.Text = ""
            txtConPerMobile2NCR.Text = ""
            txtEmail1NCR.Text = ""
            txtEmail2NCR.Text = ""


            lblMessageNCR.Text = ""
            lblAlertNCR.Text = ""
            'txtMode.Text = ""
            txtSvcModeNCR.Text = ""

            txtLocationIdNCR.Text = ""
            txtServiceIdNCR.Text = ""
            txtServiceNameNCR.Text = ""
            txtServiceAddressNCR.Text = ""
            txtZoneNCR.Text = ""
            txtFrequencyNCR.Text = ""
            txtFrequencyDescNCR.Text = ""
            txtSalesmanNCR.Text = ""


            'Service Tab

            FirstGridViewRowLocationNCR()
            FirstGridViewRowServicesNCR()
            FirstGridViewRowFreqNCR()
            FirstGridViewRowTargetNCR()

            Dim Query As String
            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(0).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
            Query = "Select descrip1 from tblTarget order by descrip1"

            grvFreqDetailsNCR.Enabled = False
            grvTargetDetailsNCR.Enabled = False
            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServicesNCR.Rows(0).Cells(0).FindControl("ddlServiceIdGVNCR"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServicesNCR.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"


            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            'Dim Query4 As String
            'Dim TextBoxUOM As DropDownList = CType(grvServicesNCR.Rows(0).Cells(2).FindControl("txtUOMGVNCR"), DropDownList)
            'Query4 = "Select UnitMsID from tblUnitMs  order by UnitMsID"


            'PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)



        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeSvcDetailNullNCR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Private Sub FirstGridViewRowServicesNCR()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("ProductId", GetType(String)))
            dt.Columns.Add(New DataColumn("ProductDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerService", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalServices", GetType(String)))
            dt.Columns.Add(New DataColumn("CompletedServices", GetType(String)))
            dt.Columns.Add(New DataColumn("BalanceServices", GetType(String)))

            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("MonthByWhichMonth", GetType(String)))
            dt.Columns.Add(New DataColumn("DOWByWhichWeek", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Area", GetType(String)))

            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("ProductId") = String.Empty
            dr("ProductDescription") = String.Empty
            dr("PricePerService") = String.Empty
            dr("ServiceFrequency") = String.Empty
            dr("TotalServices") = String.Empty
            dr("CompletedServices") = String.Empty
            dr("BalanceServices") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty
            dr("MonthByWhichMonth") = String.Empty
            dr("DOWByWhichWeek") = String.Empty
            dr("UOM") = String.Empty
            dr("Area") = 0.0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTableServices") = dt

            grvServicesNCR.DataSource = dt
            grvServicesNCR.DataBind()

            Dim btnAdd As Button = CType(grvServicesNCR.FooterRow.Cells(1).FindControl("btnAddDetailServicesNCR"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowServicesNCR()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text

                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvServices.DataSource = dtCurrentTable
                    grvServices.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)


                        Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)


                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    Query = "Select ProductID, ProductDesc from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)


                    Dim TextBoxServiceFrequency2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency2)
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServicesNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecServicesNCR()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()

                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxProductID1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID, ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID1)

                        Dim TextBoxFrequency As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency)

                        rowIndex1 += 1
                    Next j

                    Dim TextBoxProductID2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID2)

                    Dim TextBoxFrequency2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency2)

                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServicesNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataServicesNCR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1
                        Dim TextBoxServiceId As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGVNCR"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGVNCR"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(2).FindControl("txtUOMGVNCR"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGVNCR"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(4).FindControl("txtAreaGVNCR"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGVNCR"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGVNCR"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(9).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGVNCR"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGVNCR"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)

                        TextBoxServiceId.Text = dt.Rows(i)("ProductId").ToString()
                        TextBoxServiceDescription.Text = dt.Rows(i)("ProductDescription").ToString()
                        TextBoxPricePerService.Text = dt.Rows(i)("PricePerService").ToString()
                        TextBoxServiceFrequency.Text = dt.Rows(i)("ServiceFrequency").ToString()
                        TextBoxTotalServices.Text = dt.Rows(i)("TotalServices").ToString()
                        TextBoxCompletedServices.Text = dt.Rows(i)("CompletedServices").ToString()
                        TextBoxBalanceServices.Text = dt.Rows(i)("BalanceServices").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()

                        TextBoxMonthByWhichMonth.Text = dt.Rows(i)("MonthByWhichMonth").ToString()
                        TextBoxDOWByWhichWeek.Text = dt.Rows(i)("DOWByWhichWeek").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxServiceId.Text <> "0") And (TextBoxServiceId.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        '    Query = "Select * from tblProduct"
                        '    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)
                        'End If

                        'If (TextBoxServiceFrequency.Text <> "0") And (TextBoxServiceFrequency.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceFrequency.Text) = False) Then
                        '    Dim TextBoxTargetDesc3 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        '    Query = "Select * from tblServiceFrequency"
                        '    PopulateDropDownList(Query, "Frequency", "Frequency", TextBoxTargetDesc3)
                        'End If


                        rowIndex += 1
                    Next i
                End If

                dt.Dispose()
            End If
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataServicesNCR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGVNCR"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGVNCR"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(2).FindControl("txtUOMGVNCR"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGVNCR"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(4).FindControl("txtAreaGVNCR"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGVNCR"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGVNCR"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGVNCR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(9).FindControl("txtContractNoGVNCR"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGVNCR"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGVNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(5).FindControl("txtRcnoGVNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text

                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        'dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableServices") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServicesNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            Exit Sub
        End Try

    End Sub




    Private Sub FirstGridViewRowFreqNCR()
        Try
            Dim dtFreq As New DataTable()
            Dim drFreq As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dtFreq.Columns.Add(New DataColumn("SeqNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("FreqMTD", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("MonthNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("DayNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekDOW", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("Location", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("BranchID", GetType(String)))

            dtFreq.Columns.Add(New DataColumn("ContractNoF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("SourceSQLIDF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("RcnoF", GetType(String)))

            drFreq = dtFreq.NewRow()

            drFreq("SeqNo") = "001"
            drFreq("FreqMTD") = String.Empty
            drFreq("MonthNo") = String.Empty
            drFreq("DayNo") = String.Empty
            drFreq("WeekNo") = String.Empty
            drFreq("WeekDOW") = String.Empty
            drFreq("Location") = String.Empty
            drFreq("BranchID") = String.Empty

            drFreq("ContractNoF") = String.Empty
            drFreq("SourceSQLIDF") = 0
            drFreq("RcnoF") = 0
            dtFreq.Rows.Add(drFreq)

            ViewState("CurrentTableFreq") = dtFreq

            grvFreqDetailsNCR.DataSource = dtFreq
            grvFreqDetailsNCR.DataBind()

            'Dim btnAdd As Button = CType(grvTargetDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowFreqNCR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowFreqNCR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("SeqNo") = ""
                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetailsNCR.DataSource = dtCurrentTable
                    grvFreqDetailsNCR.DataBind()



                    If txtFrequencyDescNCR.Text = "DAILY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")

                        TextBoxWeekDOW.Enabled = False
                    ElseIf txtFrequencyDescNCR.Text = "MONTHLY" Or txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If
                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDescNCR.Text = "WEEKLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then



                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDescNCR.Text = "THRICE-ANNUALLY" Or txtFrequencyDescNCR.Text = "ANNUALLY" Or txtFrequencyDescNCR.Text = "BI-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "QUARTERLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "BI-WEEKLY" Or txtFrequencyDescNCR.Text = "TRI-WEEKLY" Or txtFrequencyDescNCR.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecFreqNCR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetailsNCR.DataSource = dtCurrentTable
                    grvFreqDetailsNCR.DataBind()


                    If txtFrequencyDescNCR.Text = "DAILY" Then
                        'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        'TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")
                    ElseIf txtFrequencyDescNCR.Text = "MONTHLY" Or txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If

                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    ElseIf txtFrequencyDescNCR.Text = "QUARTERLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "THRICE-ANNUALLY" Or txtFrequencyDescNCR.Text = "ANNUALLY" Or txtFrequencyDescNCR.Text = "BI-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "BI-WEEKLY" Or txtFrequencyDescNCR.Text = "TRI-WEEKLY" Or txtFrequencyDescNCR.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        'TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If

                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowWithDetailRecFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataFreqNCR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If txtFrequencyDescNCR.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDescNCR.Text = "MONTHLY" Or txtFrequencyDescNCR.Text = "THRICE-MONTHLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                            If rowIndex = 0 Then
                                TextBoxWeekNo.Text = 1
                            ElseIf rowIndex = 1 Then
                                TextBoxWeekNo.Text = 2
                            ElseIf rowIndex = 2 Then
                                TextBoxWeekNo.Text = 3
                            ElseIf rowIndex = 3 Then
                                TextBoxWeekNo.Text = 4
                            End If

                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDescNCR.Text = "TWICE-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            If rowIndex = 0 Then
                                TextBoxWeekNo.Text = 1
                            ElseIf rowIndex = 1 Then
                                TextBoxWeekNo.Text = 3
                            End If

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                        ElseIf txtFrequencyDescNCR.Text = "QUARTERLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDescNCR.Text = "BI-MONTHLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper


                        ElseIf txtFrequencyDescNCR.Text = "HALF-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDescNCR.Text = "THRICE-ANNUALLY" Or txtFrequencyDescNCR.Text = "ANNUALLY" Or txtFrequencyDescNCR.Text = "BI-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDescNCR.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekDOW.Text = gDOW
                        ElseIf txtFrequencyDescNCR.Text = "BI-WEEKLY" Or txtFrequencyDescNCR.Text = "TRI-WEEKLY" Or txtFrequencyDescNCR.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True

                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekNo.Text = "1"
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDescNCR.Text = "TWICE-WEEKLY" Or txtFrequencyDescNCR.Text = "THRICE-WEEKLY" Or txtFrequencyDescNCR.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekNo.Enabled = False
                            TextBoxFreqMTD.Enabled = False
                            TextBoxWeekDOW.Text = gDOW


                            If TextBoxSeqNo.Text = "001" Then
                                TextBoxWeekDOW.Enabled = True
                            End If
                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If


                        rowIndex += 1
                    Next i
                End If
            End If

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreq", ex.Message.ToString, "")
            Exit Sub


            SetPreviousDataFreqNCR()
        End Try
    End Sub

    Private Sub SetRowDataFreqNCR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.Text
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.Text
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text

                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableFreq") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetRowDataFreq", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    '''''''''''''''''''''''''''''''''

    Private Sub AddNewRowFreqEditNCR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()


                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.Text
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1


                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetailsNCR.DataSource = dtCurrentTable
                    grvFreqDetailsNCR.DataBind()


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqEditNCR()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub




    Private Sub SetPreviousDataFreqEditNCR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If TextBoxFreqMTD.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMTD.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                                TextBoxFreqMTD.Enabled = False
                            End If


                        ElseIf TextBoxFreqMTD.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If


                        rowIndex += 1

                        If txtFrequencyDesc.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            ''TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("MONTH")



                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DATE").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DATE")
                            End If


                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("DATE")

                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("MONTH").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("MONTH")
                            End If


                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True
                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If
                    Next i


                End If
            End If
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    ''''''''''''''''''''''''''''''


    '''
    Public Function HighlightDuplicateFreqNCR(ByVal gridview As GridView) As Boolean
        Try
            Dim HasDuplicateFrequency As Boolean = False

            For currentRow As Integer = 0 To gridview.Rows.Count - 2
                Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

                For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                    Dim row As GridViewRow = gridview.Rows(otherRow)
                    Dim duplicateRow As Boolean = False

                    Dim TextBoxSeqGV As TextBox = CType(grvFreqDetailsNCR.Rows(currentRow).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                    Dim TextBoxdWeekDOWGVGV As DropDownList = CType(grvFreqDetailsNCR.Rows(currentRow).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                    Dim TextBoxdWeekDOWGVGV1 As DropDownList = CType(grvFreqDetailsNCR.Rows(otherRow).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)


                    Dim currentBacColor = TextBoxdWeekDOWGVGV.BackColor


                    If ((TextBoxdWeekDOWGVGV.Text) = (TextBoxdWeekDOWGVGV1.Text)) Then

                        If TextBoxdWeekDOWGVGV.Text = "-1" And TextBoxdWeekDOWGVGV1.Text = "-1" Then
                            GoTo nextrec
                        End If
                        duplicateRow = True

                        TextBoxdWeekDOWGVGV.BackColor = Drawing.Color.LightCoral
                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.LightCoral

                        HasDuplicateFrequency = True
                        Return HasDuplicateFrequency


                    Else
                        duplicateRow = False
                        HasDuplicateFrequency = False

                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.White
                        TextBoxdWeekDOWGVGV.BackColor = TextBoxSeqGV.BackColor
                    End If
nextrec:
                Next otherRow
            Next currentRow

            Return HasDuplicateFrequency
        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "HighlightDuplicateFreq", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Function

    Private Sub EnableSvcControlsNCR()
        Try
            btnSvcSaveNCR.Enabled = False
            btnSvcSaveNCR.ForeColor = System.Drawing.Color.Gray

            'btnSvcSaveSchedule.Enabled = False
            'btnSvcSaveSchedule.ForeColor = System.Drawing.Color.Gray

            btnSvcCancelNCR.Enabled = False
            btnSvcCancelNCR.ForeColor = System.Drawing.Color.Gray

            btnSvcAddNCR.Enabled = True
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Black
            btnSvcEditNCR.Enabled = True
            btnSvcEditNCR.ForeColor = System.Drawing.Color.Black
            btnSvcDeleteNCR.Enabled = True
            btnSvcDeleteNCR.ForeColor = System.Drawing.Color.Black


            grvServiceLocationNCR.Enabled = False
            grvServicesNCR.Enabled = False
            grvFreqDetailsNCR.Enabled = False
            grvTargetDetailsNCR.Enabled = False

            'txtEffectiveDateNCR.Enabled = False
            'txtAgreeValueNCR.Enabled = False

            txtContactPersonNCR.Enabled = False
            'BtnTeamNCR.Visible = False

            txtContactPersonNCR.Enabled = False
            txtContactPerson2NCR.Enabled = False
            txtPositionNCR.Enabled = False
            txtPosition2NCR.Enabled = False
            txtTelephoneNCR.Enabled = False
            txtTelephone2NCR.Enabled = False
            txtFaxNCR.Enabled = False
            txtFax2NCR.Enabled = False
            txtCP2TelephoneNCR.Enabled = False
            txtCP2Telephone2NCR.Enabled = False
            txtConPerMobileNCR.Enabled = False
            txtConPerMobile2NCR.Enabled = False
            txtEmail1NCR.Enabled = False
            txtEmail2NCR.Enabled = False
            'txtAddressNCR.Enabled = False

            'ddlScheduleTypeNCR.Enabled = False
            'txtTeamInchargeNCR.Enabled = False
            'txtTeamNCR.Enabled = False
            'txtServiceByNCR.Enabled = False
            'txtSupervisorNCR.Enabled = False
            'txtServTimeInNCR.Enabled = False
            'txtServTimeOutNCR.Enabled = False
            'txtAllocTimeNCR.Enabled = False
            'txtServInstNCR.Enabled = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION EnableSvcControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub DisableSvcControlsNCR()
        Try
            btnSvcSaveNCR.Enabled = True
            btnSvcSaveNCR.ForeColor = System.Drawing.Color.Black

            btnSvcSaveScheduleNCR.Enabled = True
            btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Black

            btnSvcCancelNCR.Enabled = True
            btnSvcCancelNCR.ForeColor = System.Drawing.Color.Black

            btnSvcAddNCR.Enabled = False
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Gray

            btnSvcEditNCR.Enabled = False
            btnSvcEditNCR.ForeColor = System.Drawing.Color.Gray

            btnSvcDeleteNCR.Enabled = False
            btnSvcDeleteNCR.ForeColor = System.Drawing.Color.Gray
            'BtnTeam.Visible = True

            grvServiceLocationNCR.Enabled = True
            grvServicesNCR.Enabled = True
            grvFreqDetailsNCR.Enabled = True
            grvTargetDetailsNCR.Enabled = True

            txtEffectiveDateNCR.Enabled = True
            txtAgreeValueNCR.Enabled = True

            txtContactPersonNCR.Enabled = True
            txtContactPerson2NCR.Enabled = True
            txtPositionNCR.Enabled = True
            txtPosition2NCR.Enabled = True
            txtTelephoneNCR.Enabled = True
            txtTelephone2NCR.Enabled = True
            txtFaxNCR.Enabled = True
            txtFax2NCR.Enabled = True
            txtCP2TelephoneNCR.Enabled = True
            txtCP2Telephone2NCR.Enabled = True
            txtConPerMobileNCR.Enabled = True
            txtConPerMobile2NCR.Enabled = True
            txtEmail1NCR.Enabled = True
            txtEmail2NCR.Enabled = True
            'txtAddress2NCR.Enabled = True

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION DisableSvcControlsNCR", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub


    Public Function HighlightDuplicateNCR(ByVal gridview As GridView) As Boolean
        HasDuplicateTarget = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As DropDownList = CType(grvTargetDetailsNCR.Rows(currentRow).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                Dim TextBoxTargetDescGV1 As DropDownList = CType(grvTargetDetailsNCR.Rows(otherRow).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)



                If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                        GoTo nextrec
                    End If

                    duplicateRow = True

                    TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                    TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral


                    HasDuplicateTarget = True
                    Return HasDuplicateTarget


                Else
                    duplicateRow = False
                    HasDuplicateTarget = False
                End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateTarget
    End Function
    'Function



    Protected Sub gvLocationNCR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocationNCR.SelectedIndexChanged
        Try

            Dim lblid1 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("ddlLocationIdGVNCR"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceNameGVNCR"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtServiceAddressGVNCR"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtZoneGVNCR"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtLocationGroupGVNCR"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("txtBranchGVNCR"), TextBox)

            'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

            If gvLocationNCR.SelectedRow.Cells(1).Text = "&nbsp;" Then
                txtLocationIdNCR.Text = " "
            Else
                txtLocationIdNCR.Text = gvLocationNCR.SelectedRow.Cells(1).Text
                lblid1.Text = txtLocationIdNCR.Text
            End If


            If gvLocationNCR.SelectedRow.Cells(3).Text = "&nbsp;" Then
                txtServiceNameNCR.Text = " "
            Else
                txtServiceNameNCR.Text = Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(3).Text)
                lblid2.Text = txtServiceNameNCR.Text
            End If

            If gvLocationNCR.SelectedRow.Cells(4).Text = "&nbsp;" Then
                txtServiceAddressNCR.Text = " "
            Else
                txtServiceAddressNCR.Text = Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(4).Text)
                lblid3.Text = txtServiceAddressNCR.Text
            End If


            If gvLocationNCR.SelectedRow.Cells(5).Text = "&nbsp;" Then

            Else
                txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(5).Text)
                lblid3.Text = txtServiceAddressNCR.Text
            End If


            If gvLocationNCR.SelectedRow.Cells(6).Text = "&nbsp;" Then

            Else
                txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(6).Text)
                lblid3.Text = txtServiceAddressNCR.Text
            End If


            If gvLocationNCR.SelectedRow.Cells(7).Text = "&nbsp;" Then

            Else
                txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(7).Text)
                lblid3.Text = txtServiceAddressNCR.Text
            End If


            If gvLocationNCR.SelectedRow.Cells(8).Text = "&nbsp;" Then
                lblid4.Text = " "
            Else
                lblid4.Text = gvLocationNCR.SelectedRow.Cells(8).Text
            End If

            If gvLocationNCR.SelectedRow.Cells(23).Text = "&nbsp;" Then
                lblid5.Text = " "
            Else
                txtLocationGroupNCR.Text = gvLocationNCR.SelectedRow.Cells(23).Text
                lblid5.Text = gvLocationNCR.SelectedRow.Cells(23).Text
            End If

            If gvLocationNCR.SelectedRow.Cells(24).Text = "&nbsp;" Then

            Else
                txtServiceAddressNCR.Text = txtServiceAddressNCR.Text + ", " + Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(24).Text)
                lblid3.Text = txtServiceAddressNCR.Text
            End If

            If gvLocationNCR.SelectedRow.Cells(25).Text = "&nbsp;" Then

            Else
                txtBranchNCR.Text = Server.HtmlDecode(gvLocationNCR.SelectedRow.Cells(25).Text)
                lblid6.Text = gvLocationNCR.SelectedRow.Cells(24).Text
            End If



            RetrieveContactDetailsNCR(txtLocationIdNCR.Text.Trim)
            'grvServiceLocationNCR.DataBind()
            updpnlLocationNCR.Update()
            UpdatePanel1NCR.Update()
            grvServiceLocationNCR.Focus()
            imgBtnService_ModalPopupExtenderNCR.Hide()
           
            'mdlPopupNCR.Show()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvServiceNCR_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    '' ''31.05.22


    Public Sub BtnLocationNCR_click()
        imgBtnService_ModalPopupExtenderNCR.Show()
    End Sub

    Protected Sub ImageButton1NCR_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton1NCR.Click
        imgBtnService_ModalPopupExtenderNCR.Hide()
        mdlPopupNCR.Show()
    End Sub

    Protected Sub btnsvcCloseNCR_Click(sender As Object, e As EventArgs) Handles btnsvcCloseNCR.Click
        mdlPopupCancelNCR.Show()
        mdlPopupNCR.Show()
    End Sub

    Protected Sub btnSvcSaveNCR_Click(sender As Object, e As EventArgs) Handles btnSvcSaveNCR.Click
        'If txtMode.Text = "New" Then

        'btnSvcSaveNCR.Enabled = False
        'btnADD.ForeColor = System.Drawing.Color.Gray
        lblAlertNCR.Text = ""
        txtErrNCR.Text = "N"

        If String.IsNullOrEmpty(txtEffectiveDateNCR.Text) = True Then
            lblAlertNCR.Text = "PLEASE ENTER EFFECTIVE DATE"
            txtPopupScrollNCR.Focus()
            btnSvcSaveNCR.Enabled = True
            txtErrNCR.Text = "Y"
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            Exit Sub
        End If


        'Start: Check for Agree Value Limit

        lblAlertNCR.Text = ""

        If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
            txtEditAgreeValuePercChangeNCR.Text = ((txtAgreeValueNCR.Text) / 1) * 100
        Else
            txtEditAgreeValuePercChangeNCR.Text = ((txtAgreeValueNCR.Text - txtAgreeVal.Text) / txtAgreeVal.Text) * 100
        End If


        If Convert.ToDecimal(txtRevisionDecreaseLimit.Text) <> 0.0 Then
            If Convert.ToDecimal(txtEditAgreeValuePercChangeNCR.Text) < Convert.ToDecimal(txtRevisionDecreaseLimit.Text) Then
                txtAgreeValueNCR.Text = 0.0
                txtEditAgreeValuePercChangeNCR.Text = 0.0

                lblAlertNCR.Text = "Price Decrease Cannot Exceed the Limit of " & txtRevisionDecreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text
                txtPopupScrollNCR.Focus()
                btnSvcSaveNCR.Enabled = True
                txtErrNCR.Text = "Y"
                mdlPopupNCR.Show()
                btnSvcSaveNCR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                Exit Sub

            End If
        End If

        If Convert.ToDecimal(txtRevisionIncreaseLimit.Text) <> 0.0 Then
            If Convert.ToDecimal(txtEditAgreeValuePercChangeNCR.Text) > Convert.ToDecimal(txtRevisionIncreaseLimit.Text) Then
                txtAgreeValueNCR.Text = 0.0
                txtEditAgreeValuePercChangeNCR.Text = 0.0

                lblAlertNCR.Text = "Price Increase Cannot Exceed the Limit of " & txtRevisionIncreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text

                txtPopupScrollNCR.Focus()
                btnSvcSaveNCR.Enabled = True
                txtErrNCR.Text = "Y"
                mdlPopupNCR.Show()
                btnSvcSaveNCR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                Exit Sub


            End If
        End If
        mdlPopupNCR.Show()
      

        'End: Check for Agree Value Limit

        If String.IsNullOrEmpty(txtRevisionReason.Text.Trim) = True Then
            lblAlertNCR.Text = "PLEASE ENTER REASON"
            txtPopupScrollNCR.Focus()
            btnSvcSaveNCR.Enabled = True
            txtErrNCR.Text = "Y"
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            Exit Sub
        End If




        If txtDuplicateFreqNCR.Text = "Y" Then
            lblAlertNCR.Text = "DUPLICATE FREQUENCY HAS BEEN SELECTED"
            txtPopupScrollNCR.Focus()
            btnSvcSaveNCR.Enabled = True
            txtErrNCR.Text = "Y"
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            'btnADDNCR.ForeColor = System.Drawing.Color.Black
            Exit Sub
        End If

        If txtDuplicateTargetNCR.Text = "Y" Then
            lblAlertNCR.Text = "DUPLICATE TARGET HAS BEEN SELECTED"
            txtPopupScrollNCR.Focus()
            txtErrNCR.Text = "Y"
            btnSvcSaveNCR.Enabled = True
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            'btnADD.ForeColor = System.Drawing.Color.Black
            Exit Sub
        End If

        Dim lblid3 As TextBox = CType(grvServiceLocationNCR.Rows(0).FindControl("ddlLocationIdGVNCR"), TextBox)

        Dim lblid4 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
        Dim lblid5 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceIdGVNCR"), DropDownList)

        Dim lblid6 As DropDownList = CType(grvFreqDetailsNCR.Rows(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
        Dim lblid7 As DropDownList = CType(grvFreqDetailsNCR.Rows(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)
        'If String.IsNullOrEmpty(lblid5.Text) = True Then
        '    lblAlertNCR.Text = "Please Select Service"
        '    btnSvcSaveNCR.Enabled = True
        '    mdlPopupNCR.Show()

        '    Exit Sub
        'End If

        'If String.IsNullOrEmpty(lblid4.Text) = True Then
        '    lblAlertNCR.Text = "Please Select Service Frequency"
        '    btnSvcSaveNCR.Enabled = True
        '    txtPopupScrollNCR.Focus()
        '    mdlPopupNCR.Show()

        '    Exit Sub
        'End If


        If String.IsNullOrEmpty(lblid3.Text.Trim) = True Then
            lblAlertNCR.Text = "PLEASE SELECT LOCATION"
            txtPopupScrollNCR.Focus()
            btnSvcSaveNCR.Enabled = True
            txtErrNCR.Text = "Y"
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
            Exit Sub
        End If


        If lblid4.Text = "MONTHLY" Or lblid4.Text = "QUARTERLY" Or lblid4.Text = "WEEKLY" Then
            If lblid7.Text = "DOW" Then
                If lblid6.SelectedIndex = 0 Then
                    lblAlertNCR.Text = "Please Select 'DAY of WEEK'"
                    btnSvcSaveNCR.Enabled = True
                    txtErrNCR.Text = "Y"
                    txtPopupScrollNCR.Focus()
                    mdlPopupNCR.Show()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                    Exit Sub
                End If
            End If
        End If


        If grvFreqDetailsNCR.Rows.Count > 1 Then
            For i As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
                Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

                For j As Integer = i + 1 To grvFreqDetailsNCR.Rows.Count - 1
                    Dim TextBoxWeekNo2 As TextBox = CType(grvFreqDetailsNCR.Rows(j).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                    Dim TextBoxWeekDOW2 As DropDownList = CType(grvFreqDetailsNCR.Rows(j).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                    Dim TextBoxFreqMTDGV1 As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(5).FindControl("ddlFreqMTDGVNCR"), DropDownList)


                    If TextBoxWeekNo1.Text.Trim = TextBoxWeekNo2.Text.Trim And TextBoxWeekDOW1.Text.Trim = TextBoxWeekDOW2.Text.Trim Then
                        If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                            lblAlertNCR.Text = "SAME WEEK NO '" & TextBoxWeekNo1.Text.Trim & "' AND DAY OF WEEK '" & TextBoxWeekDOW1.Text.Trim & "' HAS BEEN SELECTED"
                            txtPopupScrollNCR.Focus()
                            btnSvcSaveNCR.Enabled = True
                            txtErrNCR.Text = "Y"
                            mdlPopupNCR.Show()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                            Exit Sub
                        End If

                    End If
                Next j

            Next i
        End If
        Try

            txtRemarks.Text = txtLocationIdNCR.Text

            If txtServiceId.Text <> ddlContractGrp.Text Then
                'mdlPopupServiceID.Show()
                mdlPopupServiceIDNCR.Show()
            Else
                svcSaveNCR()
            End If

            'btnSvcSave.Enabled = True
            'btnADD.ForeColor = System.Drawing.Color.Black

            If grvContractDetailNCR.Rows.Count > 0 Then
                btnSvcSaveScheduleNCR.Enabled = True
                btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Black
            Else
                btnSvcSaveScheduleNCR.Enabled = False
                btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Gray
            End If

            mdlPopupNCR.Show()
        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            txtPopupScrollNCR.Focus()
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
            mdlPopupNCR.Show()
            btnSvcSaveNCR.Enabled = True
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateEffectiveDateAgreeValueInContractTableNCR()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()


            'Dim commandUpdateContract As MySqlCommand = New MySqlCommand

            'commandUpdateContract.CommandType = CommandType.Text
            'commandUpdateContract.CommandText = "Update tblContract set NotedDate = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', compensatemax= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"
            'commandUpdateContract.Connection = conn
            'commandUpdateContract.ExecuteNonQuery()


            Dim commandDeleteContractDetTemp As MySqlCommand = New MySqlCommand
            commandDeleteContractDetTemp.CommandType = CommandType.Text

            Dim qryDeleteContractDetTemp As String = "Delete from tblContractdetTemp "
            'qryDeleteContractDetTemp = qryDeleteContractDetTemp + " where ContractNo = @ContractNo and "
            qryDeleteContractDetTemp = qryDeleteContractDetTemp + " where CreatedBy =@CreatedBy"

            commandDeleteContractDetTemp.CommandText = qryDeleteContractDetTemp
            commandDeleteContractDetTemp.Parameters.Clear()

            'commandDeleteContractDetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            commandDeleteContractDetTemp.Parameters.AddWithValue("@CreatedBy", Session("UserID"))

            commandDeleteContractDetTemp.Connection = conn
            commandDeleteContractDetTemp.ExecuteNonQuery()



            Dim commandDeleteContractTargetTemp As MySqlCommand = New MySqlCommand
            commandDeleteContractTargetTemp.CommandType = CommandType.Text

            Dim qryDeleteContractTargetTemp As String = "Delete from tblcontractservingtargettemp "
            'qryDeleteContractTargetTemp = qryDeleteContractTargetTemp + " where ContractNo = @ContractNo and "
            qryDeleteContractTargetTemp = qryDeleteContractTargetTemp + " where CreatedBy =@CreatedBy"

            commandDeleteContractTargetTemp.CommandText = qryDeleteContractTargetTemp
            commandDeleteContractTargetTemp.Parameters.Clear()

            'commandDeleteContractTargetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            commandDeleteContractTargetTemp.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            commandDeleteContractTargetTemp.Connection = conn
            commandDeleteContractTargetTemp.ExecuteNonQuery()


            Dim commandDeleteContractFreqTemp As MySqlCommand = New MySqlCommand
            commandDeleteContractFreqTemp.CommandType = CommandType.Text

            Dim qryDeleteContractFreqTemp As String = "Delete from tblservicecontractfrequencytemp "
            'qryDeleteContractFreqTemp = qryDeleteContractFreqTemp + " where ContractNo = @ContractNo "
            qryDeleteContractFreqTemp = qryDeleteContractFreqTemp + " where CreatedBy =@CreatedBy"

            commandDeleteContractFreqTemp.CommandText = qryDeleteContractFreqTemp
            commandDeleteContractFreqTemp.Parameters.Clear()

            'commandDeleteContractFreqTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            commandDeleteContractFreqTemp.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            commandDeleteContractFreqTemp.Connection = conn
            commandDeleteContractFreqTemp.ExecuteNonQuery()

            Dim commandUpdateContract As MySqlCommand = New MySqlCommand

            commandUpdateContract.CommandType = CommandType.Text
            commandUpdateContract.CommandText = "Update tblContract set NotedDate = null, compensatemax= 0.00 where ContractNo = '" & txtContractNo.Text & "'"
            commandUpdateContract.Connection = conn
            commandUpdateContract.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()

            txtEffectiveDateNCR.Text = ""
            txtAgreeValueNCR.Text = 0.0
            txtRevisionReason.Text = ""

        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            txtPopupScrollNCR.Focus()
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
            mdlPopupNCR.Show()
            'btnSvcSaveNCR.Enabled = True
            Exit Sub
        End Try
    End Sub

    Private Sub svcSaveNCR()
        Dim isAgreeValueBlank As String
        Try

            'If grvFreqDetailsNCR.Rows.Count > 1 Then
            '    For i As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
            '        Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
            '        Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

            '        For j As Integer = i + 1 To grvFreqDetailsNCR.Rows.Count - 1
            '            Dim TextBoxWeekNo2 As TextBox = CType(grvFreqDetailsNCR.Rows(j).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
            '            Dim TextBoxWeekDOW2 As DropDownList = CType(grvFreqDetailsNCR.Rows(j).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

            '            If TextBoxWeekNo1.Text.Trim = TextBoxWeekNo2.Text.Trim And TextBoxWeekDOW1.Text.Trim = TextBoxWeekDOW2.Text.Trim Then
            '                lblAlertNCR.Text = "SAME WEEK NO '" & TextBoxWeekNo1.Text.Trim & "' AND DAY OF WEEK '" & TextBoxWeekDOW1.Text.Trim & "' HAS BEEN SELECTED"
            '                txtPopupScrollNCR.Focus()
            '                txtErrNCR.Text = "Y"
            '                Exit Sub
            '            End If
            '        Next j

            '    Next i
            'End If


            '26.02.23

            Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServicesNCR.Rows(0).Cells(3).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)

            If grvFreqDetailsNCR.Rows.Count > 1 Then
                For i As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
                    Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                    Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                    Dim TextBoxFreqMTDGV1 As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(5).FindControl("ddlFreqMTDGVNCR"), DropDownList)



                    If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                        If TextBoxServiceFrequency1.Text.Trim = "TWICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FIVE-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "SIX-TIMES-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "TWICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "FOUR-TIMES-MONTHLY" Then
                            If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then

                                lblAlertNCR.Text = "PLEASE SELECT 'DAY OF WEEK' FOR DOW " & i + 1
                                txtPopupScrollNCR.Focus()
                                txtErrNCR.Text = "Y"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If
                    End If


                    'ddlWeekDOWGV

                    'For k As Integer = i To grvFreqDetails.Rows.Count - 1

                    'Next

                    For j As Integer = i + 1 To grvFreqDetailsNCR.Rows.Count - 1


                        Dim TextBoxWeekNo2 As TextBox = CType(grvFreqDetailsNCR.Rows(j).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                        Dim TextBoxWeekDOW2 As DropDownList = CType(grvFreqDetailsNCR.Rows(j).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)

                        If TextBoxWeekNo1.Text.Trim = TextBoxWeekNo2.Text.Trim And TextBoxWeekDOW1.Text.Trim = TextBoxWeekDOW2.Text.Trim Then
                            If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                                lblAlertNCR.Text = "SAME WEEK NO '" & TextBoxWeekNo1.Text.Trim & "' AND DAY OF WEEK '" & TextBoxWeekDOW1.Text.Trim & "' HAS BEEN SELECTED"
                                txtPopupScrollNCR.Focus()
                                txtErrNCR.Text = "Y"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                                Exit Sub
                            End If

                            'Exit Sub
                        End If
                    Next j

                Next i
            End If




            If grvFreqDetailsNCR.Rows.Count = 1 Then
                For k As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
                    Dim TextBoxWeekNo1 As TextBox = CType(grvFreqDetailsNCR.Rows(k).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                    Dim TextBoxWeekDOW1 As DropDownList = CType(grvFreqDetailsNCR.Rows(k).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                    Dim TextBoxFreqMTDGV1 As DropDownList = CType(grvFreqDetailsNCR.Rows(k).Cells(5).FindControl("ddlFreqMTDGVNCR"), DropDownList)



                    If TextBoxFreqMTDGV1.Text.Trim = "DOW" Then
                        If TextBoxServiceFrequency1.Text.Trim = "MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "QUARTERLY" Or TextBoxServiceFrequency1.Text.Trim = "WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-MONTHLY" Or TextBoxServiceFrequency1.Text.Trim = "BI-WEEKLY" Or TextBoxServiceFrequency1.Text.Trim = "FORTNIGHTLY" Or TextBoxServiceFrequency1.Text.Trim = "HALF-ANNUALLY" Or TextBoxServiceFrequency1.Text.Trim = "THRICE-ANNUALLY" Then
                            If TextBoxWeekDOW1.Text.Trim = "--SELECT--" Or TextBoxWeekDOW1.Text.Trim = "-1" Then

                                lblAlertNCR.Text = "PLEASE SELECT 'DAY OF WEEK"
                                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                txtPopupScrollNCR.Focus()
                                txtErrNCR.Text = "Y"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> RefreshSubmit();</Script>", False)
                                Exit Sub
                            End If

                        End If
                    End If


                Next k
            End If

            '26.02.23




            isAgreeValueBlank = "N"

            If String.IsNullOrEmpty(txtAgreeVal.Text) = True Or Convert.ToDecimal(txtAgreeVal.Text) = 0.0 Then
                isAgreeValueBlank = "Y"
            End If

            'UpdateEffectiveDateAgreeValueInContractTableNCR()

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()


            'Dim commandUpdateContract As MySqlCommand = New MySqlCommand

            'commandUpdateContract.CommandType = CommandType.Text
            'commandUpdateContract.CommandText = "Update tblContract set NotedDate = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', compensatemax= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"
            'commandUpdateContract.Connection = conn
            'commandUpdateContract.ExecuteNonQuery()


            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT SalesmanSvc FROM tblCompanyLocation where LocationId = '" & txtLocationId.Text & "'"

            Dim commandSalesmanSvc As MySqlCommand = New MySqlCommand

            Dim connSalesmanSvc As MySqlConnection = New MySqlConnection()
            connSalesmanSvc.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connSalesmanSvc.Open()

            commandSalesmanSvc.CommandType = CommandType.Text
            commandSalesmanSvc.CommandText = sqlstr
            commandSalesmanSvc.Connection = conn

            Dim drSalesmanSvc As MySqlDataReader = commandSalesmanSvc.ExecuteReader()
            Dim dtSalesmanSvc As New DataTable
            dtSalesmanSvc.Load(drSalesmanSvc)

            If dtSalesmanSvc.Rows.Count > 0 Then
                txtSalesman.Text = dtSalesmanSvc.Rows(0)("SalesmanSvc").ToString()
            End If
            connSalesmanSvc.Close()
            commandSalesmanSvc.Dispose()

            '''''''''''''''''''''''''''''''''''

            txtTargetDescNCR.Text = ""
            txtTargetIdNCR.Text = ""
            'Start: Detail Records

            If txtSvcModeNCR.Text = "NEW" Then
                Try
                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    'conn.Open()
                    txtRemarks.Text = txtLocationIdNCR.Text
                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "INSERT INTO tblContractdetTemp(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                    qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
                    qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
                    qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
                    qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    Dim lblid1 As TextBox = CType(grvServicesNCR.Rows(0).FindControl("txtPricePerServiceGVNCR"), TextBox)
                    Dim lblid2 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("txtUOMGVNCR"), DropDownList)
                    Dim lblid3 As TextBox = CType(grvServicesNCR.Rows(0).FindControl("txtAreaGVNCR"), TextBox)
                    txtValuePerService.Text = lblid1.Text

                    Dim lblid4 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                    Dim lblid5 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceIdGVNCR"), DropDownList)


                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    'command.Parameters.AddWithValue("@Frequency", txtFrequencyNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Frequency", lblid4.Text.Trim)

                    If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                        command.Parameters.AddWithValue("@Value", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerServiceNCR.Text))
                    End If

                    If String.IsNullOrEmpty(txtNoServiceNCR.Text) = True Then
                        command.Parameters.AddWithValue("@NoService", 0)
                    Else
                        command.Parameters.AddWithValue("@NoService", txtNoServiceNCR.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtBranch.Text)
                    command.Parameters.AddWithValue("@BranchId", "")
                    command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcIntervalNCR.Text.Trim)
                    command.Parameters.AddWithValue("@NoOfInterval", txtNoofIntervalNCR.Text.Trim)

                    'command.Parameters.AddWithValue("@ServiceId", txtServiceIdNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceId", lblid5.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceDesc", txtServiceDescNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDescNCR.Text.Trim)
                    If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                        command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDescNCR.Text) >= 100, Left(txtTargetDescNCR.Text, 99), Left(txtTargetDescNCR.Text.Trim, (Len(txtTargetDescNCR.Text) - 1))))
                        command.Parameters.AddWithValue("@TargetId", txtTargetIdNCR.Text.Trim)
                    Else
                        command.Parameters.AddWithValue("@TargetDesc", txtTargetDescNCR.Text.Trim)
                        command.Parameters.AddWithValue("@TargetId", txtTargetIdNCR.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@ContactPerson", "")
                    command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim.ToUpper)

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                    'command.Parameters.AddWithValue("@ServiceName", "")
                    command.Parameters.AddWithValue("@ContactPerson", txtContactPersonNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Position", txtPositionNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Position", txtPosition2NCR.Text.Trim.ToUpper)

                    command.Parameters.AddWithValue("@Telephone", txtTelephoneNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Telephone2", txtTelephone2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel", txtCP2TelephoneNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Fax", txtFaxNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Fax", txtFax2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Mobile", txtConPerMobileNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Email", txtEmail1NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Email", txtEmail2NCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@LocationID", txtLocationIdNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceNameNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Address1", txtServiceAddressNCR.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Zone", txtZoneNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim.ToUpper)
                    'command.Parameters.AddWithValue("@UOM", lblid2.Text.Trim)
                    command.Parameters.AddWithValue("@UOM", "")

                    If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                        command.Parameters.AddWithValue("@Area", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Area", Convert.ToDecimal(lblid3.Text.Trim))
                    End If
                    'command.Parameters.AddWithValue("@Area", txtArea.Text.Trim)
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text

                    command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Connection = conn
                    command.ExecuteNonQuery()
                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    ''Exit Sub


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdetTemp"

                    Dim command3 As MySqlCommand = New MySqlCommand
                    command3.CommandType = CommandType.Text

                    command3.CommandText = sqlLastId
                    command3.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command3.Connection = conn
                    txtSourceSQLIDNCR.Text = command3.ExecuteScalar()

                    txtRcnoDetailLog.Text = txtSourceSQLIDNCR.Text

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''

                    Dim command4 As MySqlCommand = New MySqlCommand
                    command4.CommandType = CommandType.Text
                    'command4.CommandText = "Update tblcontractdetTemp set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command4.CommandText = "Update tblcontractdetTemp set OrigCode = " & Convert.ToInt32(txtSourceSQLIDNCR.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLIDNCR.Text)

                    command4.Connection = conn
                    command4.ExecuteNonQuery()

                    'Start:Target
                    SetRowDataNCR()

                    Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                    If tableAdd IsNot Nothing Then

                        For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                            'string txSpareId = row.ItemArray[0] as string;
                            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)

                            If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                                Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)

                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim commandTarget As MySqlCommand = New MySqlCommand
                                commandTarget.CommandType = CommandType.Text

                                Dim qryTarget As String = "INSERT INTO tblcontractservingtargetTemp(ContractNo, ServiceId, SourceSQLId,"
                                qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

                                qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                commandTarget.CommandText = qryTarget
                                commandTarget.Parameters.Clear()

                                commandTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLIDNCR.Text)
                                commandTarget.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                'commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandTarget.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandTarget.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                commandTarget.Connection = conn
                                commandTarget.ExecuteNonQuery()

                                If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                                    txtTargetDescNCR.Text = txtTargetDescNCR.Text + ", " + TextBoxTargetDesc.Text.Trim
                                    txtTargetIdNCR.Text = txtTargetIdNCR.Text + "," + TextBoxTargtId.Text.Trim
                                Else
                                    txtTargetDescNCR.Text = TextBoxTargetDesc.Text.Trim
                                    txtTargetIdNCR.Text = TextBoxTargtId.Text.Trim
                                End If

                            End If
                        Next rowIndex
                    End If

                    UpdateTargetDescriptionNCR()
                    'End:Target

                    ''
                    'SetRowDataFreqNCR()

                    Dim tableFreq As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                    If tableFreq IsNot Nothing Then

                        For rowIndexFreq As Integer = 0 To tableFreq.Rows.Count - 1
                            Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)

                            'If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                            Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                            Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                            Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                            Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                            Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                            Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                            Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

                            'If TextBoxWeekDOW.Text.Trim = "-1" Then
                            '    txtRevisionReason.Text = txtRevisionReason.Text & "ARGHTA"
                            'Else
                            '    txtRevisionReason.Text = txtRevisionReason.Text & "SEN"
                            'End If

                            Dim commandFreq As MySqlCommand = New MySqlCommand
                            commandFreq.CommandType = CommandType.Text

                            Dim qryFreq As String = "INSERT INTO tblservicecontractfrequencyTemp(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                            qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                            qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                            qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandFreq.CommandText = qryFreq
                            commandFreq.Parameters.Clear()

                            commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLIDNCR.Text)
                            commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                            If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@DayNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                            End If

                            If String.IsNullOrEmpty(TextBoxWeekNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@WeekNo", "")
                            Else
                                commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                            End If

                            If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            End If

                            'commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                            If TextBoxWeekDOW.Text.Trim = "-1" Then
                                commandFreq.Parameters.AddWithValue("@WeekDow", "")
                            Else
                                commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                            End If

                            'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                            commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandFreq.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandFreq.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFreq.Connection = conn
                            commandFreq.ExecuteNonQuery()


                            'End If
                        Next rowIndexFreq
                    End If

                    conn.Close()
                    conn.Dispose()
                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    'Dim message As String = "alert('Record added successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                    btnSvcSaveScheduleNCR.Text = "FINALIZE"
                    lblMessageNCR.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
                    lblAlertNCR.Text = ""
                    'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

                    'grvContractDetail.DataSourceID = "SqlDSContractDet"

                    SqlDSContractDetNCR.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDetTemp where (1 =1 )   and ContractNo = '" & txtContractNo.Text & "'  order by ServiceId limit 20"

                    grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
                    grvContractDetailNCR.DataBind()
                Catch ex As Exception
                    'Dim exstr As String
                    'exstr = ex.Message.ToString
                    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                    lblAlertNCR.Text = ex.Message.ToString
                    txtPopupScrollNCR.Focus()
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
                    mdlPopupNCR.Show()
                    Exit Sub
                End Try

                'DisableControls()
            ElseIf txtSvcModeNCR.Text = "EDIT" Then
                Try
                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    'conn.Open()
                    txtRcnoDetailLog.Text = txtRcnoDetail.Text

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "UPDATE tblContractdetTemp SET  Frequency = @Frequency, Value = @Value, NoService =@NoService, "
                    qry = qry + "Location = @Location, BranchId = @BranchId, NoOfSvcInterval =@NoOfSvcInterval,"
                    qry = qry + "NoOfInterval = @NoOfInterval, ServiceId = @ServiceId, ServiceDesc =@ServiceDesc,"
                    qry = qry + "FrequencyDesc = @FrequencyDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                    qry = qry + "FrequencyDesc = @FrequencyDesc, TargetID = @TargetID, TargetDesc = @TargetDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                    qry = qry + "AccountID = @AccountID, ServiceName = @ServiceName, ContactPerson = @ContactPerson, ContactPerson2 = @ContactPerson2, Contact1Position=@Contact1Position, Contact2Position = @Contact2Position, Telephone = @Telephone, Telephone2 = @Telephone2, "
                    qry = qry + "Contact2Tel=@Contact2Tel, Contact2Tel2 =@Contact2Tel2, Fax =@Fax, Contact2Fax =@Contact2Fax, Mobile =@Mobile, Contact2Mobile = @Contact2Mobile, Email =@Email, Contact2Email =@Contact2Email, "
                    qry = qry + "LocationID =@LocationID,  Address1 =@Address1, LocateGRP = @Zone, UOM =@UOM, Area = @Area, ServiceLocationGroup=@ServiceLocationGroup, Salesman =@Salesman,"
                    qry = qry + "LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn where rcno = @rcno"

                    command.CommandText = qry
                    command.Parameters.Clear()

                   

                    Dim lblid1 As TextBox = CType(grvServicesNCR.Rows(0).FindControl("txtPricePerServiceGVNCR"), TextBox)
                    Dim lblid2 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("txtUOMGVNCR"), DropDownList)
                    Dim lblid3 As TextBox = CType(grvServicesNCR.Rows(0).FindControl("txtAreaGVNCR"), TextBox)


                    Dim lblid4 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                    Dim lblid5 As DropDownList = CType(grvServicesNCR.Rows(0).FindControl("ddlServiceIdGVNCR"), DropDownList)

                    'If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                    '    command.Parameters.AddWithValue("@Value", 0.0)
                    'Else
                    '    command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
                    'End If

                    command.Parameters.AddWithValue("@rcno", txtRcnoDetail.Text.Trim)
                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    command.Parameters.AddWithValue("@Frequency", lblid4.Text.Trim)

                    If String.IsNullOrEmpty(lblid1.Text) = True Or lblid1.Text = "" Then
                        command.Parameters.AddWithValue("@Value", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Value", Convert.ToDecimal(lblid1.Text))
                    End If

                    'command.Parameters.AddWithValue("@NoService", txtNoService.Text)

                    If String.IsNullOrEmpty(txtNoServiceNCR.Text) = True Then
                        command.Parameters.AddWithValue("@NoService", 0)
                    Else
                        command.Parameters.AddWithValue("@NoService", txtNoServiceNCR.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtBranchNCR.Text.Trim)
                    command.Parameters.AddWithValue("@BranchId", "")
                    command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcIntervalNCR.Text.Trim)
                    command.Parameters.AddWithValue("@NoOfInterval", txtNoofIntervalNCR.Text.Trim)

                    'command.Parameters.AddWithValue("@ServiceId", txtServiceIdNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceId", lblid5.Text.Trim)

                    command.Parameters.AddWithValue("@ServiceDesc", txtServiceDescNCR.Text.Trim)
                    command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDescNCR.Text.Trim)

                    If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                        command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDescNCR.Text) >= 100, Left(txtTargetDescNCR.Text, 99), Left(txtTargetDescNCR.Text.Trim, (Len(txtTargetDescNCR.Text) - 1))))
                        command.Parameters.AddWithValue("@TargetID", txtTargetIdNCR.Text.Trim)
                    Else
                        command.Parameters.AddWithValue("@TargetDesc", txtTargetDescNCR.Text.Trim)
                        command.Parameters.AddWithValue("@TargetID", txtTargetIdNCR.Text.Trim)

                    End If


                    'If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                    '    command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDescNCR.Text) >= 100, Left(txtTargetDescNCR.Text, 99), Left(txtTargetDescNCR.Text.Trim, (Len(txtTargetDescNCR.Text) - 1))))
                    '    command.Parameters.AddWithValue("@TargetId", txtTargetIdNCR.Text.Trim)
                    'Else
                    '    command.Parameters.AddWithValue("@TargetDesc", txtTargetDescNCR.Text.Trim)
                    '    command.Parameters.AddWithValue("@TargetId", txtTargetIdNCR.Text.Trim)
                    'End If

                    'command.Parameters.AddWithValue("@ContactPerson", "")
                    command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotesNCR.Text.Trim)

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                    'command.Parameters.AddWithValue("@ServiceName", "")
                    command.Parameters.AddWithValue("@ContactPerson", txtContactPersonNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2NCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact1Position", txtPositionNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Position", txtPosition2NCR.Text.Trim)

                    command.Parameters.AddWithValue("@Telephone", txtTelephoneNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Tel", txtCP2TelephoneNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2NCR.Text.Trim)
                    command.Parameters.AddWithValue("@Fax", txtFaxNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Fax", txtFax2NCR.Text.Trim)
                    command.Parameters.AddWithValue("@Mobile", txtConPerMobileNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2NCR.Text.Trim)
                    command.Parameters.AddWithValue("@Email", txtEmail1NCR.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Email", txtServiceNotesNCR.Text.Trim)
                    command.Parameters.AddWithValue("@LocationID", txtLocationIdNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceNameNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Address1", txtServiceAddressNCR.Text.Trim)
                    command.Parameters.AddWithValue("@Zone", txtZoneNCR.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroupNCR.Text.Trim)
                    'command.Parameters.AddWithValue("@UOM", lblid2.Text)
                    command.Parameters.AddWithValue("@UOM", "")
                    If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                        command.Parameters.AddWithValue("@Area", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Area", Convert.ToDecimal(txtArea.Text.Trim))
                    End If
                    command.Parameters.AddWithValue("@Salesman", txtSalesmanNCR.Text)
                    'command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.TextNCR
                    'command.Parameters.AddWithValue("@CreatedOn", DateAndTime.Now)
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Connection = conn
                    command.ExecuteNonQuery()
                    'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                    'Dim message As String = "alert('Record updated successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    'End If
                    'grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
                    'lblMessage.Text = "EDIT: DETAIL RECORD SUCCESSFULLY UPDATED"
                    'lblAlert.Text = ""
                    'conn.Close()

                Catch ex As Exception

                    lblAlertNCR.Text = ex.Message.ToString
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    txtPopupScrollNCR.Focus()
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
                    mdlPopupNCR.Show()
                    Exit Sub
                    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", ex.Message.ToString, True)
                End Try

                'DisableControls()

                ''
                'SetRowData()
                SetRowDataNCR()


                Dim table As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                If table IsNot Nothing Then

                    For rowIndex As Integer = 0 To table.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGVNCR"), TextBox)


                        If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then


                            'New
                            Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVNCR"), TextBox)

                            If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then


                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim command As MySqlCommand = New MySqlCommand
                                command.CommandType = CommandType.Text

                                Dim qry As String = "INSERT INTO tblcontractservingtargetTemp(ContractNo, ServiceId, SourceSQLId,"
                                qry = qry + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                qry = qry + " LastModifiedBy, LastModifiedOn)"

                                qry = qry + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                                command.CommandText = qry
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                command.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLIDNCR.Text)
                                command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                command.Connection = conn
                                command.ExecuteNonQuery()

                            Else

                                Dim command As MySqlCommand = New MySqlCommand
                                command.CommandType = CommandType.Text

                                Dim qry As String = "Update tblcontractservingtargetTemp set TargetId = @TargetId, TargetDesc = @TargetDesc,  ServiceId = @ServiceId,"
                                qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"


                                command.CommandText = qry
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)
                                command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                                command.Connection = conn
                                command.ExecuteNonQuery()
                                'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                                'End If
                                'conn.Close()
                            End If

                            If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                                txtTargetDescNCR.Text = txtTargetDescNCR.Text + ", " + TextBoxTargetDesc.Text.Trim
                                txtTargetIdNCR.Text = txtTargetIdNCR.Text + "," + TextBoxTargtId.Text.Trim
                            Else
                                txtTargetDescNCR.Text = TextBoxTargetDesc.Text.Trim
                                txtTargetIdNCR.Text = TextBoxTargtId.Text.Trim
                            End If
                        End If

                    Next rowIndex

                    UpdateTargetDescriptionNCR()
                End If

                ' ''
                'SetRowDataFreq()

                Dim conndel As MySqlConnection = New MySqlConnection(constr)
                conndel.Open()

                If String.IsNullOrEmpty(txtRcno.Text) = False And (txtRcno.Text) <> "0" Then
                    'Delete
                    Dim commandFreqDel As MySqlCommand = New MySqlCommand
                    commandFreqDel.CommandType = CommandType.Text

                    Dim qrydel As String = "DELETE from tblservicecontractfrequencyTemp where SourceSQLId = @SourceSQLId"

                    commandFreqDel.CommandText = qrydel
                    commandFreqDel.Parameters.Clear()

                    commandFreqDel.Parameters.AddWithValue("@SourceSQLId", Convert.ToInt32(txtRcnoDetail.Text))

                    commandFreqDel.Connection = conndel
                    commandFreqDel.ExecuteNonQuery()

                    conndel.Close()
                    commandFreqDel.Dispose()
                End If
                'Delete


                Dim tableFreqEdit As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                If tableFreqEdit IsNot Nothing Then

                    For rowIndexFreq As Integer = 0 To tableFreqEdit.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)

                        If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                            Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGVNCR"), DropDownList)
                            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGVNCR"), TextBox)
                            Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGVNCR"), TextBox)
                            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGVNCR"), TextBox)
                            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                            Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGVNCR"), DropDownList)
                            Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGVNCR"), DropDownList)
                            Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVFNCR"), TextBox)
                            Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                            Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVFNCR"), TextBox)

                            'Dim conn As MySqlConnection = New MySqlConnection(constr)
                            'conn.Open()

                            Dim commandFreq As MySqlCommand = New MySqlCommand
                            commandFreq.CommandType = CommandType.Text

                            Dim qry As String = "INSERT INTO tblservicecontractfrequencyTemp(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                            qry = qry + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                            qry = qry + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                            qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandFreq.CommandText = qry
                            commandFreq.Parameters.Clear()

                            commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLIDNCR.Text)
                            commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                            If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@DayNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                            End If

                            'If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                            '    commandFreq.Parameters.AddWithValue("@WeekNo", 0)
                            'Else
                            '    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                            'End If

                            If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            End If


                            commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                            If TextBoxWeekDOW.Text.Trim = "-1" Then
                                commandFreq.Parameters.AddWithValue("@WeekDow", "")
                            Else
                                commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                            End If

                            'commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                            'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                            commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandFreq.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandFreq.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFreq.Connection = conn
                            commandFreq.ExecuteNonQuery()

                            'End If
                            'conn.Close()

                        End If
                    Next rowIndexFreq

                End If
                'MessageBox.Message.Alert(Page, "Record Updated successfully!!!", "str")
                'grvContractDetail.DataSourceID = "SqlDSContractDet"

                'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDetTemp where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"
                'grvContractDetail.DataSourceID = "SqlDSContractDetNCR"
                'grvContractDetail.DataBind()


                SqlDSContractDetNCR.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDetTemp where (1 =1 )   and ContractNo = '" & txtContractNo.Text & "'  order by ServiceId limit 20"

                grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
                grvContractDetailNCR.DataBind()

                btnSvcSaveScheduleNCR.Text = "FINALIZE"

                lblMessageNCR.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                lblAlertNCR.Text = ""
                conn.Close()
                conn.Dispose()
            End If

            txtServiceAddressCons.Text = ""
            'UpdateContractHeader()

            UpdateContractHeaderNCR()
            'command1.Dispose()
            'dt.Dispose()
            dtSalesmanSvc.Dispose()
            'End: Detail Records

            'If String.IsNullOrEmpty(txtAccountId.Text) Then
            '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = '" & txtclientid.Text & "'"
            'Else
            '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = '" & txtAccountId.Text & "'"
            'End If

            'SqlDataSource2.DataBind()
            'GridView2.DataBind()
            '' MakeSvcNull()
            'txtSvcMode.Text = ""
            EnableSvcControlsNCR()
            btnSvcAddNCR.Enabled = True
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Black
            'btnADD.Enabled = True
            'btnADD.ForeColor = System.Drawing.Color.Black

            btnSvcEditNCR.Enabled = True
            btnSvcEditNCR.ForeColor = System.Drawing.Color.Black

            btnSvcDeleteNCR.Enabled = False
            btnSvcDeleteNCR.ForeColor = System.Drawing.Color.Gray
            'btnCopyAdd.Enabled = True
            'btnCopyAdd.ForeColor = System.Drawing.Color.Black
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black

            'btnQuit.Enabled = True
            'btnQuit.ForeColor = System.Drawing.Color.Black
            'AddrConcat()
            txtSvcModeNCR.Text = ""

            'btnServiceSchedule.Enabled = True
            'btnServiceSchedule.ForeColor = System.Drawing.Color.Black



        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            txtPopupScrollNCR.Focus()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
            mdlPopupNCR.Show()
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try

        'DisableSvcControlsNCR()
       

        'GridView1.DataSourceID = "SQLDSContract"

        Try
            'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
            '    'GridView1.DataSourceID = "SQLDSContract"
            '    SQLDSContract.SelectCommand = txt.Text
            '    GridView1.DataSourceID = "SqlDSContract"
            '    GridView1.DataBind()
            'Else

            '    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
            '        Dim ContractClientIdLocation As String = ""

            '        ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
            '        ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
            '        ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
            '        ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
            '        ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '        SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation
            '        GridView1.DataSourceID = "SQLDSContractClientIdLocation"
            '        GridSelected = "SQLDSContractClientIdLocation"
            '    Else
            '        Dim ContractClientId As String = ""

            '        ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
            '        ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, Amtbalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '        SQLDSContractClientId.SelectCommand = ContractClientId
            '        GridView1.DataSourceID = "SQLDSContractClientId"
            '        GridSelected = "SQLDSContractClientId"
            '    End If

            'End If

        Catch ex As Exception
           
            lblAlertNCR.Text = ex.Message.ToString
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "svcSaveNCR", ex.Message.ToString, txtContractNo.Text)
            txtPopupScrollNCR.Focus()
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub


    Private Sub svcFinalizeNCR()
        Try


            txtNCR.Text = "Y"

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            '22.08.22
            Dim ExistingNoOfServices As Integer = 0
            Dim RevisedNoOfServices As Integer = 0
            Dim ChangeInScope As String
            ChangeInScope = "No"

            Dim ExistingNoOfPests As Integer = 0
            Dim RevisedNoOfPests As Integer = 0

            'Existing services

            Dim cmdExistingNoOfServices As MySqlCommand = New MySqlCommand

            cmdExistingNoOfServices.CommandType = CommandType.Text
            cmdExistingNoOfServices.CommandText = "select count(NoService) as existingnoofservices from tblContractDet where ContractNo = '" & txtContractNo.Text & "'"
            cmdExistingNoOfServices.Connection = conn

            Dim drExistingNoOfServices As MySqlDataReader = cmdExistingNoOfServices.ExecuteReader()
            Dim dtExistingNoOfServices As New DataTable
            dtExistingNoOfServices.Load(drExistingNoOfServices)

            ExistingNoOfServices = dtExistingNoOfServices.Rows(0)("existingnoofservices")


            'Revised services

            Dim cmdRevisedNoOfServices As MySqlCommand = New MySqlCommand

            cmdRevisedNoOfServices.CommandType = CommandType.Text
            cmdRevisedNoOfServices.CommandText = "select count(NoService) as revisednoofservices from tblContractDetTemp where ContractNo = '" & txtContractNo.Text & "'"
            cmdRevisedNoOfServices.Connection = conn

            Dim drRevisedNoOfServices As MySqlDataReader = cmdRevisedNoOfServices.ExecuteReader()
            Dim dtRevisedNoOfServices As New DataTable
            dtRevisedNoOfServices.Load(drRevisedNoOfServices)

            RevisedNoOfServices = dtRevisedNoOfServices.Rows(0)("revisednoofservices")

            'Existing Pests

            Dim cmdExistingNoOfPests As MySqlCommand = New MySqlCommand

            cmdExistingNoOfPests.CommandType = CommandType.Text
            cmdExistingNoOfPests.CommandText = "select count(ContractNo) as existingnoofpests from tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "'"
            cmdExistingNoOfPests.Connection = conn

            Dim drExistingNoOfPests As MySqlDataReader = cmdExistingNoOfPests.ExecuteReader()
            Dim dtExistingNoOfPests As New DataTable
            dtExistingNoOfPests.Load(drExistingNoOfPests)

            ExistingNoOfPests = dtExistingNoOfPests.Rows(0)("existingnoofpests")

            'Revised Pests

            Dim cmdRevisedNoOfPests As MySqlCommand = New MySqlCommand

            cmdRevisedNoOfPests.CommandType = CommandType.Text
            cmdRevisedNoOfPests.CommandText = "select count(ContractNo) as revisednoofpests from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "'"
            cmdRevisedNoOfPests.Connection = conn

            Dim drRevisedNoOfPests As MySqlDataReader = cmdRevisedNoOfPests.ExecuteReader()
            Dim dtRevisedNoOfPests As New DataTable
            dtRevisedNoOfPests.Load(drRevisedNoOfPests)

            RevisedNoOfPests = dtRevisedNoOfPests.Rows(0)("revisednoofpests")


            Dim lUpgradeDowngradeTypeExisting, lUpgradeDowngradeTypeRevised As Double
            lUpgradeDowngradeTypeExisting = 0.0
            lUpgradeDowngradeTypeRevised = 0.0

            'lUpgradeDowngradeTypeExisting = Val(txtAgreeVal.Text) / (ExistingNoOfServices * ExistingNoOfPests)
            'lUpgradeDowngradeTypeRevised = Val(txtAgreeValueNCR.Text) / (RevisedNoOfServices * RevisedNoOfPests)


            'If (lUpgradeDowngradeTypeRevised > lUpgradeDowngradeTypeExisting) Then
            '    txtUpGradeDownGradeNCR.Text = "UPGRADE"
            '    GoTo DoProcess
            'End If

            'If (lUpgradeDowngradeTypeRevised < lUpgradeDowngradeTypeExisting) Then
            '    txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            '    GoTo DoProcess
            'End If

            If (ExistingNoOfServices <> RevisedNoOfServices) Then
                ChangeInScope = "Yes"
            End If

            If (ExistingNoOfServices = RevisedNoOfServices) Then

                Dim cmdExistingFrequency As MySqlCommand = New MySqlCommand

                cmdExistingFrequency.CommandType = CommandType.Text
                cmdExistingFrequency.CommandText = "select Frequency from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' order by Frequency"
                cmdExistingFrequency.Connection = conn

                Dim drExistingFrequency As MySqlDataReader = cmdExistingFrequency.ExecuteReader()
                Dim dtExistingFrequency As New DataTable
                dtExistingFrequency.Load(drExistingFrequency)

                If dtExistingFrequency.Rows.Count > 0 Then

                    For y As Integer = 0 To dtExistingFrequency.Rows.Count - 1

                        Dim cmdRevisedFrequency As MySqlCommand = New MySqlCommand

                        cmdRevisedFrequency.CommandType = CommandType.Text
                        cmdRevisedFrequency.CommandText = "select ContractNo from tblcontractdettemp where ContractNo = '" & txtContractNo.Text & "' and Frequency ='" & dtExistingFrequency.Rows(y)("Frequency") & "'"
                        cmdRevisedFrequency.Connection = conn

                        Dim drRevisedFrequency As MySqlDataReader = cmdRevisedFrequency.ExecuteReader()
                        Dim dtRevisedFrequency As New DataTable
                        dtRevisedFrequency.Load(drRevisedFrequency)

                        If dtRevisedFrequency.Rows.Count = 0 Then
                            ChangeInScope = "Yes"
                            'txtUpGradeDownGradeNCR.Text = "REVISE"
                            GoTo DoProcess
                        End If
                    Next y
                End If
            End If


            If (ExistingNoOfPests <> RevisedNoOfPests) Then
                ChangeInScope = "Yes"
            End If


            If (ExistingNoOfPests = RevisedNoOfPests) Then

                Dim cmdExistingPests As MySqlCommand = New MySqlCommand

                cmdExistingPests.CommandType = CommandType.Text
                cmdExistingPests.CommandText = "select TargetId from tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "' order by TargetId"
                cmdExistingPests.Connection = conn

                Dim drExistingPests As MySqlDataReader = cmdExistingPests.ExecuteReader()
                Dim dtExistingPests As New DataTable
                dtExistingPests.Load(drExistingPests)

                If dtExistingPests.Rows.Count > 0 Then

                    For y As Integer = 0 To dtExistingPests.Rows.Count - 1

                        Dim cmdRevisedPests As MySqlCommand = New MySqlCommand

                        cmdRevisedPests.CommandType = CommandType.Text
                        cmdRevisedPests.CommandText = "select ContractNo from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "' and TargetId ='" & dtExistingPests.Rows(y)("TargetId") & "'"
                        cmdRevisedPests.Connection = conn

                        Dim drRevisedPests As MySqlDataReader = cmdRevisedPests.ExecuteReader()
                        Dim dtRevisedPests As New DataTable
                        dtRevisedPests.Load(drRevisedPests)

                        If dtRevisedPests.Rows.Count = 0 Then
                            ChangeInScope = "Yes"
                            'txtUpGradeDownGradeNCR.Text = "REVISE"
                            GoTo DoProcess
                        End If
                    Next y
                End If
            End If

DoProcess:

            'If (Val(txtAgreeValueNCR.Text) > Val(txtAgreeVal.Text)) And ChangeInScope = "No" Then
            '    txtUpGradeDownGradeNCR.Text = "UPGRADE"
            'End If

            'If (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) And ChangeInScope = "No" Then
            '    txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            'End If

            'If (Val(txtAgreeValueNCR.Text) > Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
            '    txtUpGradeDownGradeNCR.Text = "UPGRADE"
            'End If

            'If (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
            '    txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            'End If

            'If (Val(txtAgreeValueNCR.Text) = Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
            '    txtUpGradeDownGradeNCR.Text = "REVISION"
            'End If

            If (Val(txtAgreeValueNCR.Text) > Val(txtAgreeVal.Text)) Then
                txtUpGradeDownGradeNCR.Text = "UPGRADE"
            End If

            If (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) Then
                txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            End If

            'If (Val(txtAgreeValueNCR.Text) > Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
            '    txtUpGradeDownGradeNCR.Text = "UPGRADE"
            'End If

            'If (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
            '    txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            'End If

            If (Val(txtAgreeValueNCR.Text) = Val(txtAgreeVal.Text)) And ChangeInScope = "Yes" Then
                txtUpGradeDownGradeNCR.Text = "REVISION"
            End If


            If String.IsNullOrEmpty(txtUpGradeDownGradeNCR.Text.Trim) = True Then
                txtUpGradeDownGradeNCR.Text = "REVISION"
            End If



            Dim commandUpdateOldContractDet As MySqlCommand = New MySqlCommand
            commandUpdateOldContractDet.CommandType = CommandType.Text

            Dim qryUpdateOldContractDet As String = "UPDATE tblContractdet SET  ContractNo =  concat(ContractNo, '-X')"
            qryUpdateOldContractDet = qryUpdateOldContractDet + " where ContractNo = @ContractNo"

            commandUpdateOldContractDet.CommandText = qryUpdateOldContractDet
            commandUpdateOldContractDet.Parameters.Clear()

            commandUpdateOldContractDet.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            commandUpdateOldContractDet.Connection = conn
            commandUpdateOldContractDet.ExecuteNonQuery()



            Dim commandUpdateOldContractTarget As MySqlCommand = New MySqlCommand
            commandUpdateOldContractTarget.CommandType = CommandType.Text

            Dim qryUpdateOldContractTarget As String = "UPDATE tblcontractservingtarget SET  ContractNo =  concat(ContractNo, '-X')"
            qryUpdateOldContractTarget = qryUpdateOldContractTarget + " where ContractNo = @ContractNo"

            commandUpdateOldContractTarget.CommandText = qryUpdateOldContractTarget
            commandUpdateOldContractTarget.Parameters.Clear()

            commandUpdateOldContractTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            commandUpdateOldContractTarget.Connection = conn
            commandUpdateOldContractTarget.ExecuteNonQuery()


            Dim commandUpdateOldContractFreq As MySqlCommand = New MySqlCommand
            commandUpdateOldContractFreq.CommandType = CommandType.Text

            Dim qryUpdateOldContractFreq As String = "UPDATE tblservicecontractfrequency SET  ContractNo =  concat(ContractNo, '-X')"
            qryUpdateOldContractFreq = qryUpdateOldContractFreq + " where ContractNo = @ContractNo"

            commandUpdateOldContractFreq.CommandText = qryUpdateOldContractFreq
            commandUpdateOldContractFreq.Parameters.Clear()

            commandUpdateOldContractFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            commandUpdateOldContractFreq.Connection = conn
            commandUpdateOldContractFreq.ExecuteNonQuery()


            ''Contract Price History


            Dim cmdServiceDescription As MySqlCommand = New MySqlCommand

            cmdServiceDescription.CommandType = CommandType.Text
            cmdServiceDescription.CommandText = "select ServiceDescription from tblContract where ContractNo = '" & txtContractNo.Text & "'"
            cmdServiceDescription.Connection = conn

            Dim drServiceDescription As MySqlDataReader = cmdServiceDescription.ExecuteReader()
            Dim dtServiceDescription As New DataTable
            dtServiceDescription.Load(drServiceDescription)

            txtServiceDescriptionCons.Text = dtServiceDescription.Rows(0)("ServiceDescription")



            FindLastRcnoContractpricehistory()


            Dim cmdPriceHistory As MySqlCommand = New MySqlCommand

            cmdPriceHistory.CommandType = CommandType.StoredProcedure
            cmdPriceHistory.CommandText = "UpdateAgreeValueNewNCR"

            cmdPriceHistory.Parameters.Clear()

            cmdPriceHistory.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            cmdPriceHistory.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            cmdPriceHistory.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            cmdPriceHistory.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueNCR.Text)
            cmdPriceHistory.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

            cmdPriceHistory.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
            cmdPriceHistory.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
            cmdPriceHistory.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
            cmdPriceHistory.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            cmdPriceHistory.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            cmdPriceHistory.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd"))
            cmdPriceHistory.Parameters.AddWithValue("@pr_Comments", Left(txtRevisionReason.Text.Trim.ToUpper, 1000))
            cmdPriceHistory.Parameters.AddWithValue("@pr_UpdateType", txtUpGradeDownGradeNCR.Text)
            cmdPriceHistory.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
            cmdPriceHistory.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)
            cmdPriceHistory.Connection = conn
            cmdPriceHistory.ExecuteScalar()

            txtServiceDescriptionCons.Text = "'"

            ''Contrat Price History
            '28.08.22

            txtEndofLastSchedule.Text = Convert.ToDateTime(txtEffectiveDateNCR.Text).AddDays(-1)
            txtServStart.Text = txtEffectiveDateNCR.Text
            txtAgreeVal.Text = txtAgreeValueNCR.Text


            If rbtLstDuration.SelectedIndex = 0 Then
                txtNoofMonth.Text = 1
            ElseIf rbtLstDuration.SelectedIndex = 1 Then
                txtNoofMonth.Text = Val(txtDuration.Text) / 4
            ElseIf rbtLstDuration.SelectedIndex = 2 Then
                txtNoofMonth.Text = txtDuration.Text
            ElseIf rbtLstDuration.SelectedIndex = 3 Then
                txtNoofMonth.Text = txtDuration.Text * 12
            End If

            txtValPerMnth.Text = Val(txtAgreeValueNCR.Text) / Val(txtNoofMonth.Text)
            txtValPerMnth.Text = (Convert.ToDecimal(txtValPerMnth.Text)).ToString("N2")

            '(Convert.ToDecimal(txtEditAgreeValuePercChange.Text) * 0.01).ToString("N2")
            Dim commandUpdateContract As MySqlCommand = New MySqlCommand

            '27.08.23

            Dim qryUpdateContract As String
            qryUpdateContract = ""

            qryUpdateContract = "Update tblContract set "
            qryUpdateContract = qryUpdateContract + " Comments = @Comments, endofLastSchedule =@endofLastSchedule, ServiceStart =@ServiceStart, AgreeValue =@AgreeValue ,"
            qryUpdateContract = qryUpdateContract + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
            qryUpdateContract = qryUpdateContract + " where ContractNo= @ContractNo"

            commandUpdateContract.CommandType = CommandType.Text
            commandUpdateContract.CommandText = qryUpdateContract
            commandUpdateContract.Parameters.Clear()

            commandUpdateContract.Parameters.AddWithValue("@Comments", (txtServInstNCR.Text.Trim.ToUpper))
            commandUpdateContract.Parameters.AddWithValue("@endofLastSchedule", (Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd")))
            commandUpdateContract.Parameters.AddWithValue("@ServiceStart", (Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd")))
            commandUpdateContract.Parameters.AddWithValue("@AgreeValue", (txtAgreeValueNCR.Text.Trim.ToUpper))
            commandUpdateContract.Parameters.AddWithValue("@LastModifiedBy", (Session("UserID").ToUpper))
            commandUpdateContract.Parameters.AddWithValue("@LastModifiedOn", (DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")))
            commandUpdateContract.Parameters.AddWithValue("@ContractNo", (txtContractNo.Text.Trim.ToUpper))

            '27.08.23

            'commandUpdateContract.CommandType = CommandType.Text
            ''commandUpdateContract.CommandText = "Update tblContract set ContractDate = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', ServiceStart = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', AgreeValue= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"
            'commandUpdateContract.CommandText = "Update tblContract set Comments =""""" & txtServInstNCR.Text.Trim.ToUpper & """"", endofLastSchedule = '" & Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") & "', ServiceStart = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', AgreeValue= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"

            commandUpdateContract.Connection = conn
            commandUpdateContract.ExecuteNonQuery()


            'Exit Sub
            Dim commandUpdateService As MySqlCommand = New MySqlCommand

            commandUpdateService.CommandType = CommandType.Text
            commandUpdateService.CommandText = "Update tblServiceRecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "' and schServiceDate > '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "'"
            commandUpdateService.Connection = conn
            commandUpdateService.ExecuteNonQuery()


            Dim cmdContractDetailTemp As MySqlCommand = New MySqlCommand
            cmdContractDetailTemp.CommandType = CommandType.Text
            cmdContractDetailTemp.CommandText = "SELECT * from tblContractDetTemp where ContractNo = '" & txtContractNo.Text & "' order by rcno"
            cmdContractDetailTemp.Connection = conn

            Dim drContractDetailTemp As MySqlDataReader = cmdContractDetailTemp.ExecuteReader()
            Dim dtContractDetailTemp As New DataTable
            dtContractDetailTemp.Load(drContractDetailTemp)

            If dtContractDetailTemp.Rows.Count > 0 Then

                For x As Integer = 0 To dtContractDetailTemp.Rows.Count - 1


                    'start
                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                    qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
                    qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
                    qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
                    qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"
                    'qry = qry + " from tblContractdetTemp where ContractNo = '" & txtContractNo.Text & "'"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@ContractNo", dtContractDetailTemp.Rows(x)("ContractNo"))
                    command.Parameters.AddWithValue("@Frequency", dtContractDetailTemp.Rows(x)("Frequency"))
                    command.Parameters.AddWithValue("@Value", dtContractDetailTemp.Rows(x)("Value"))
                    command.Parameters.AddWithValue("@NoService", dtContractDetailTemp.Rows(x)("NoService"))
                    command.Parameters.AddWithValue("@Location", dtContractDetailTemp.Rows(x)("Location"))
                    command.Parameters.AddWithValue("@BranchId", dtContractDetailTemp.Rows(x)("BranchId"))
                    command.Parameters.AddWithValue("@NoOfSvcInterval", dtContractDetailTemp.Rows(x)("NoOfSvcInterval"))
                    command.Parameters.AddWithValue("@NoOfInterval", dtContractDetailTemp.Rows(x)("NoOfInterval"))

                    command.Parameters.AddWithValue("@ServiceId", dtContractDetailTemp.Rows(x)("ServiceId"))
                    command.Parameters.AddWithValue("@ServiceDesc", dtContractDetailTemp.Rows(x)("ServiceDesc"))
                    command.Parameters.AddWithValue("@FrequencyDesc", dtContractDetailTemp.Rows(x)("FrequencyDesc"))

                    command.Parameters.AddWithValue("@TargetDesc", dtContractDetailTemp.Rows(x)("TargetDesc"))
                    command.Parameters.AddWithValue("@TargetId", dtContractDetailTemp.Rows(x)("TargetId"))
                    command.Parameters.AddWithValue("@ServiceNotes", dtContractDetailTemp.Rows(x)("ServiceNotes"))

                    command.Parameters.AddWithValue("@AccountID", dtContractDetailTemp.Rows(x)("AccountID"))

                    command.Parameters.AddWithValue("@ContactPerson", dtContractDetailTemp.Rows(x)("ContactPerson"))
                    command.Parameters.AddWithValue("@ContactPerson2", dtContractDetailTemp.Rows(x)("ContactPerson2"))
                    command.Parameters.AddWithValue("@Contact1Position", dtContractDetailTemp.Rows(x)("Contact1Position"))
                    command.Parameters.AddWithValue("@Contact2Position", dtContractDetailTemp.Rows(x)("Contact2Position"))

                    command.Parameters.AddWithValue("@Telephone", dtContractDetailTemp.Rows(x)("Telephone"))
                    command.Parameters.AddWithValue("@Telephone2", dtContractDetailTemp.Rows(x)("Telephone2"))
                    command.Parameters.AddWithValue("@Contact2Tel", dtContractDetailTemp.Rows(x)("Contact2Tel"))
                    command.Parameters.AddWithValue("@Contact2Tel2", dtContractDetailTemp.Rows(x)("Contact2Tel2"))
                    command.Parameters.AddWithValue("@Fax", dtContractDetailTemp.Rows(x)("Fax"))
                    command.Parameters.AddWithValue("@Contact2Fax", dtContractDetailTemp.Rows(x)("Contact2Fax"))
                    command.Parameters.AddWithValue("@Mobile", dtContractDetailTemp.Rows(x)("Mobile"))
                    command.Parameters.AddWithValue("@Contact2Mobile", dtContractDetailTemp.Rows(x)("Contact2Mobile"))
                    command.Parameters.AddWithValue("@Email", dtContractDetailTemp.Rows(x)("Email"))
                    command.Parameters.AddWithValue("@Contact2Email", dtContractDetailTemp.Rows(x)("Contact2Email"))
                    command.Parameters.AddWithValue("@LocationID", dtContractDetailTemp.Rows(x)("LocationID"))
                    command.Parameters.AddWithValue("@ServiceName", dtContractDetailTemp.Rows(x)("ServiceName"))
                    command.Parameters.AddWithValue("@Address1", dtContractDetailTemp.Rows(x)("Address1"))
                    command.Parameters.AddWithValue("@Zone", dtContractDetailTemp.Rows(x)("LocateGRP"))
                    command.Parameters.AddWithValue("@ServiceLocationGroup", dtContractDetailTemp.Rows(x)("ServiceLocationGroup"))
                    command.Parameters.AddWithValue("@UOM", dtContractDetailTemp.Rows(x)("UOM"))

                    command.Parameters.AddWithValue("@Area", dtContractDetailTemp.Rows(x)("Area"))

                    command.Parameters.AddWithValue("@Salesman", dtContractDetailTemp.Rows(x)("Salesman"))
                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Connection = conn
                    command.ExecuteNonQuery()


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdet"

                    Dim command3 As MySqlCommand = New MySqlCommand
                    command3.CommandType = CommandType.Text

                    command3.CommandText = sqlLastId
                    command3.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command3.Connection = conn
                    txtSourceSQLID.Text = command3.ExecuteScalar()

                    txtRcnoDetailLog.Text = txtSourceSQLID.Text

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''


                    Dim command4 As MySqlCommand = New MySqlCommand
                    command4.CommandType = CommandType.Text
                    command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command4.Connection = conn
                    command4.ExecuteNonQuery()

                    'Start:Target

                    Dim cmdContractTargetTemp As MySqlCommand = New MySqlCommand
                    cmdContractTargetTemp.CommandType = CommandType.Text
                    cmdContractTargetTemp.CommandText = "SELECT * from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
                    cmdContractTargetTemp.Connection = conn

                    Dim drContractTargetTemp As MySqlDataReader = cmdContractTargetTemp.ExecuteReader()
                    Dim dtContractTargetTemp As New DataTable
                    dtContractTargetTemp.Load(drContractTargetTemp)

                    If dtContractTargetTemp.Rows.Count > 0 Then

                        For y As Integer = 0 To dtContractTargetTemp.Rows.Count - 1

                            Dim commandTarget As MySqlCommand = New MySqlCommand
                            commandTarget.CommandType = CommandType.Text

                            Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
                            qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                            qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

                            qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                            qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandTarget.CommandText = qryTarget
                            commandTarget.Parameters.Clear()

                            commandTarget.Parameters.AddWithValue("@ContractNo", dtContractTargetTemp.Rows(y)("ContractNo"))
                            commandTarget.Parameters.AddWithValue("@ServiceId", dtContractTargetTemp.Rows(y)("ServiceId"))
                            commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                            commandTarget.Parameters.AddWithValue("@TargetId", dtContractTargetTemp.Rows(y)("TargetId"))
                            commandTarget.Parameters.AddWithValue("@TargetDesc", dtContractTargetTemp.Rows(y)("TargetDesc"))

                            commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandTarget.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandTarget.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandTarget.Connection = conn
                            commandTarget.ExecuteNonQuery()

                            If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
                                txtTargetDescNCR.Text = txtTargetDescNCR.Text + ", " + dtContractTargetTemp.Rows(y)("TargetDesc")
                                txtTargetIdNCR.Text = txtTargetIdNCR.Text + "," + dtContractTargetTemp.Rows(y)("TargetId")
                            Else
                                txtTargetDescNCR.Text = dtContractTargetTemp.Rows(y)("TargetDesc")
                                txtTargetIdNCR.Text = dtContractTargetTemp.Rows(y)("TargetId")
                            End If
                        Next y


                    End If

                    'End:Target

                    ''
                    'Start Frequency

                    Dim cmdContractFrequencyTemp As MySqlCommand = New MySqlCommand
                    cmdContractFrequencyTemp.CommandType = CommandType.Text
                    cmdContractFrequencyTemp.CommandText = "SELECT * from tblservicecontractfrequencytemp where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
                    cmdContractFrequencyTemp.Connection = conn

                    Dim drContractFrequencyTemp As MySqlDataReader = cmdContractFrequencyTemp.ExecuteReader()
                    Dim dtContractFrequencyTemp As New DataTable
                    dtContractFrequencyTemp.Load(drContractFrequencyTemp)

                    If dtContractFrequencyTemp.Rows.Count > 0 Then

                        For w As Integer = 0 To dtContractFrequencyTemp.Rows.Count - 1

                            Dim commandFrequency As MySqlCommand = New MySqlCommand
                            commandFrequency.CommandType = CommandType.Text

                            Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                            qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                            qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                            qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandFrequency.CommandText = qryFreq
                            commandFrequency.Parameters.Clear()

                            commandFrequency.Parameters.AddWithValue("@ContractNo", dtContractFrequencyTemp.Rows(w)("ContractNo"))
                            commandFrequency.Parameters.AddWithValue("@FreqMTD", dtContractFrequencyTemp.Rows(w)("FreqMTD"))
                            commandFrequency.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                            commandFrequency.Parameters.AddWithValue("@SeqNo", dtContractFrequencyTemp.Rows(w)("SeqNo"))
                            commandFrequency.Parameters.AddWithValue("@DayNo", dtContractFrequencyTemp.Rows(w)("DayNo"))
                            commandFrequency.Parameters.AddWithValue("@WeekNo", dtContractFrequencyTemp.Rows(w)("WeekNo"))
                            commandFrequency.Parameters.AddWithValue("@MonthNo", dtContractFrequencyTemp.Rows(w)("MonthNo"))
                            commandFrequency.Parameters.AddWithValue("@WeekDow", dtContractFrequencyTemp.Rows(w)("WeekDow"))
                            commandFrequency.Parameters.AddWithValue("@Location", dtContractFrequencyTemp.Rows(w)("Location"))
                            commandFrequency.Parameters.AddWithValue("@BranchId", dtContractFrequencyTemp.Rows(w)("BranchId"))
                            commandFrequency.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            commandFrequency.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFrequency.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            commandFrequency.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandFrequency.Connection = conn
                            commandFrequency.ExecuteNonQuery()
                        Next w
                    End If

                    'end Frequency
                Next x

            End If


            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            'Dim message As String = "alert('Record added successfully!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)



            SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()

            txtServInst.Text = txtServInstNCR.Text.ToUpper.Trim
            'UpdateContractHeaderNCR()


            'Dim commandDeleteContractDetTemp As MySqlCommand = New MySqlCommand
            'commandDeleteContractDetTemp.CommandType = CommandType.Text

            'Dim qryDeleteContractDetTemp As String = "Delete from tblContractdetTemp "
            'qryDeleteContractDetTemp = qryDeleteContractDetTemp + " where ContractNo = @ContractNo"

            'commandDeleteContractDetTemp.CommandText = qryDeleteContractDetTemp
            'commandDeleteContractDetTemp.Parameters.Clear()

            'commandDeleteContractDetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            'commandDeleteContractDetTemp.Connection = conn
            'commandDeleteContractDetTemp.ExecuteNonQuery()



            'Dim commandDeleteContractTargetTemp As MySqlCommand = New MySqlCommand
            'commandDeleteContractTargetTemp.CommandType = CommandType.Text

            'Dim qryDeleteContractTargetTemp As String = "Delete from tblcontractservingtargettemp "
            'qryDeleteContractTargetTemp = qryDeleteContractTargetTemp + " where ContractNo = @ContractNo"

            'commandDeleteContractTargetTemp.CommandText = qryDeleteContractTargetTemp
            'commandDeleteContractTargetTemp.Parameters.Clear()

            'commandDeleteContractTargetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            'commandDeleteContractTargetTemp.Connection = conn
            'commandDeleteContractTargetTemp.ExecuteNonQuery()


            'Dim commandDeleteContractFreqTemp As MySqlCommand = New MySqlCommand
            'commandDeleteContractFreqTemp.CommandType = CommandType.Text

            'Dim qryDeleteContractFreqTemp As String = "Delete from tblservicecontractfrequencytemp "
            'qryDeleteContractFreqTemp = qryDeleteContractFreqTemp + " where ContractNo = @ContractNo"

            'commandDeleteContractFreqTemp.CommandText = qryDeleteContractFreqTemp
            'commandDeleteContractFreqTemp.Parameters.Clear()

            'commandDeleteContractFreqTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            'commandDeleteContractFreqTemp.Connection = conn
            'commandDeleteContractFreqTemp.ExecuteNonQuery()

            'Dim commandUpdateContract1 As MySqlCommand = New MySqlCommand

            'commandUpdateContract1.CommandType = CommandType.Text
            'commandUpdateContract1.CommandText = "Update tblContract set NotedDate = null, compensatemax= 0.00 where ContractNo = '" & txtContractNo.Text & "'"
            'commandUpdateContract1.Connection = conn
            'commandUpdateContract1.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()

            UpdateEffectiveDateAgreeValueInContractTableNCR()
            DisplayContractPriceHistory()

            lblMessageNCR.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
            lblAlertNCR.Text = ""

            'btnServiceSchedule_Click(sender, New System.EventArgs())
            'AddHandler btnServiceSchedule.Click, AddressOf btnServiceSchedule_Click
            'btnServiceSchedule_Click(sender, e)


            btnServiceSchedule_Click(New Object(), New EventArgs)

        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            txtPopupScrollNCR.Focus()
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "svcFinalizeNCR", ex.Message.ToString, txtContractNo.Text)
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub
    Protected Sub btnDetailDeleteOK_Click(sender As Object, e As EventArgs) Handles btnDetailDeleteOK.Click
        svcDeleteDetailRecord()

    End Sub

    Protected Sub btnDetailDeleteCancel_Click(sender As Object, e As EventArgs) Handles btnDetailDeleteCancel.Click
        mdlPopupContractDetailDelete.Hide()
    End Sub

    Protected Sub btnSvcCancelNCR_Click(sender As Object, e As EventArgs) Handles btnSvcCancelNCR.Click
        mdlPopupCancelNCR.Show()
        mdlPopupNCR.Show()
        'MakeSvcDetailNullNCR()
    End Sub

    Protected Sub btnSvcSaveScheduleNCR_Click(sender As Object, e As EventArgs) Handles btnSvcSaveScheduleNCR.Click

        Try

            lblFinaliseContractRevisionNCR2.Text = "All services after " & txtEffectiveDateNCR.Text & " will be voided."

            ''16.02.23
            ''Validation: 03.09.22

            'Dim cmdContractDet As MySqlCommand = New MySqlCommand

            'cmdContractDet.CommandType = CommandType.Text

            'cmdContractDet.CommandText = "SELECT rcno, OrigCode, Frequency FROM tblcontractdettemp where ContractNo ='" & txtContractNo.Text & "'"
            'cmdContractDet.Connection = conn

            'Dim drservicecontractDet As MySqlDataReader = cmdContractDet.ExecuteReader()
            'Dim dtservicecontractDet As New DataTable
            'dtservicecontractDet.Load(drservicecontractDet)

            'If dtservicecontractDet.Rows.Count = 0 Then
            '    lblAlertNCR.Text = "Please Enter Contract Detail first"
            '    txtPopupScrollNCR.Focus()
            '    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If

            ' ''''

            'System.Threading.Thread.Sleep(3000)
            'Label40.Visible = True
            ''Label40.Text = "Name :"

            'For i = 0 To dtservicecontractDet.Rows.Count - 1

            '    '''''''''''
            '    Dim cmdFreq As MySqlCommand = New MySqlCommand
            '    cmdFreq.CommandType = CommandType.Text

            '    cmdFreq.CommandText = "SELECT WEEKDOW, WeekNo, DayNo, MonthNo, FreqMTD, WeekDOW FROM tblservicecontractFrequencytemp where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
            '    cmdFreq.Connection = conn

            '    Dim drtblservicecontractFrequency As MySqlDataReader = cmdFreq.ExecuteReader()
            '    Dim dttblservicecontractFrequency As New DataTable
            '    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)


            '    If dttblservicecontractFrequency.Rows.Count <= 0 Then
            '        lblAlertNCR.Text = "FREQUENCY HAS NOT BEEN SET"
            '        txtPopupScrollNCR.Focus()
            '        mdlPopupNCR.Show()
            '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub
            '    End If


            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then

            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
            '                lblAlertNCR.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                Exit Sub
            '            End If
            '        Next

            '    End If


            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then

            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
            '                lblAlertNCR.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If ((dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "")) Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0 Then
            '                lblAlertNCR.Text = "Please setup Frequency (WeekDOW and WeekNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And Val(dttblservicecontractFrequency.Rows(j)("Dayno").ToString()) = 0 Then
            '                lblAlertNCR.Text = "Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If (dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() = "DOW" And (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString()) = "") Then
            '                lblAlertNCR.Text = "Please Select Day of Week for '" & dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() & "' and '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If

            '    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
            '        For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
            '            If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And (Val(dttblservicecontractFrequency.Rows(j)("MonthNo").ToString()) = 0 Or Val(dttblservicecontractFrequency.Rows(j)("DayNo").ToString()) = 0) Then
            '                lblAlertNCR.Text = "Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo)) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
            '                txtPopupScrollNCR.Focus()
            '                mdlPopupNCR.Show()
            '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                Exit Sub
            '            End If
            '        Next

            '    End If
            'Next

            ''16.02.23


            'If txtServiceId.Text <> ddlContractGrp.Text Then
            '    mdlPopupServiceIDSchdlNCR.Show()
            '    mdlPopupNCR.Show()
            'End If


            If btnSvcSaveScheduleNCR.Text = "SAVE & FINALIZE" Then
                If txtSvcModeNCR.Text = "NEW" Or txtSvcModeNCR.Text = "EDIT" Then
                    'If txtServiceId.Text <> ddlContractGrp.Text Then
                    '    Exit Sub
                    'End If
                    txtServiceId.Text = ddlContractGrp.Text
                    btnSvcSaveNCR_Click(sender, e)

                    If txtErrNCR.Text = "Y" Then
                        Exit Sub
                    End If
                End If
            End If


            '16.02.23
            'Validation: 03.09.22

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim cmdContractDet As MySqlCommand = New MySqlCommand

            cmdContractDet.CommandType = CommandType.Text

            cmdContractDet.CommandText = "SELECT rcno, OrigCode, Frequency FROM tblcontractdettemp where ContractNo ='" & txtContractNo.Text & "'"
            cmdContractDet.Connection = conn

            Dim drservicecontractDet As MySqlDataReader = cmdContractDet.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            If dtservicecontractDet.Rows.Count = 0 Then
                lblAlertNCR.Text = "Please Enter Contract Detail first"
                txtPopupScrollNCR.Focus()
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            ''''

            System.Threading.Thread.Sleep(3000)
            Label40.Visible = True
            'Label40.Text = "Name :"

            For i = 0 To dtservicecontractDet.Rows.Count - 1

                '''''''''''
                Dim cmdFreq As MySqlCommand = New MySqlCommand
                cmdFreq.CommandType = CommandType.Text

                cmdFreq.CommandText = "SELECT WEEKDOW, WeekNo, DayNo, MonthNo, FreqMTD, WeekDOW FROM tblservicecontractFrequencytemp where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                cmdFreq.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = cmdFreq.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)


                If dttblservicecontractFrequency.Rows.Count <= 0 Then
                    lblAlertNCR.Text = "FREQUENCY HAS NOT BEEN SET"
                    txtPopupScrollNCR.Focus()
                    mdlPopupNCR.Show()
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If


                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
                            lblAlertNCR.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            Exit Sub
                        End If
                    Next

                End If


                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "--SELECT--" Or dttblservicecontractFrequency.Rows(j)("WEEKDOW").ToString() = "-1" Then
                            lblAlertNCR.Text = "Please setup Frequency (WeekDOW) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If ((dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1") Or (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "")) Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0 Then
                            lblAlertNCR.Text = "Please setup Frequency (WeekDOW and WeekNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And Val(dttblservicecontractFrequency.Rows(j)("Dayno").ToString()) = 0 Then
                            lblAlertNCR.Text = "Please setup Frequency ((WeekDOW and WeekNo) / MonthNo) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() = "DOW" And (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString()) = "") Then
                            lblAlertNCR.Text = "Please Select Day of Week for '" & dttblservicecontractFrequency.Rows(j)("FreqMTD").ToString() & "' and '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " '"
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                    For j = 0 To dttblservicecontractFrequency.Rows.Count - 1
                        If (dttblservicecontractFrequency.Rows(j)("WeekDOW").ToString() = "-1" Or Val(dttblservicecontractFrequency.Rows(j)("WeekNo").ToString()) = 0) And (Val(dttblservicecontractFrequency.Rows(j)("MonthNo").ToString()) = 0 Or Val(dttblservicecontractFrequency.Rows(j)("DayNo").ToString()) = 0) Then
                            lblAlertNCR.Text = "Please setup Frequency ((WeekDOW and WeekNo) / (DayNo and MonthNo)) for '" & dtservicecontractDet.Rows(i)("Frequency").ToString() & " ')"
                            txtPopupScrollNCR.Focus()
                            mdlPopupNCR.Show()
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        End If
                    Next

                End If
            Next

            '16.02.23

            If Convert.ToDecimal(txtAgreeValueNCR.Text) = 0.0 Then
                mdlPopupZeroValueNCR.Show()
                mdlPopupNCR.Show()
                'btnServiceSchedule_Click(sender, e)
            Else

                mdlPopupFinaliseNCR.Show()
                mdlPopupNCR.Show()

                'svcFinalizeNCR()
                'btnServiceSchedule_Click(sender, e)
            End If

            'Validation: 03.09.22

            '            If txtSvcModeNCR.Text = "NEW" Or txtSvcModeNCR.Text = "EDIT" Then
            '                btnSvcSaveNCR_Click(sender, e)
            '            End If
            '            txtNCR.Text = "Y"


            '            '22.08.22
            '            Dim ExistingNoOfServices As Integer = 0
            '            Dim RevisedNoOfServices As Integer = 0

            '            Dim ExistingNoOfPests As Integer = 0
            '            Dim RevisedNoOfPests As Integer = 0

            '            'Existing services

            '            Dim cmdExistingNoOfServices As MySqlCommand = New MySqlCommand

            '            cmdExistingNoOfServices.CommandType = CommandType.Text
            '            cmdExistingNoOfServices.CommandText = "select count(NoService) as existingnoofservices from tblContractDet where ContractNo = '" & txtContractNo.Text & "'"
            '            cmdExistingNoOfServices.Connection = conn

            '            Dim drExistingNoOfServices As MySqlDataReader = cmdExistingNoOfServices.ExecuteReader()
            '            Dim dtExistingNoOfServices As New DataTable
            '            dtExistingNoOfServices.Load(drExistingNoOfServices)

            '            ExistingNoOfServices = dtExistingNoOfServices.Rows(0)("existingnoofservices")


            '            'Revised services

            '            Dim cmdRevisedNoOfServices As MySqlCommand = New MySqlCommand

            '            cmdRevisedNoOfServices.CommandType = CommandType.Text
            '            cmdRevisedNoOfServices.CommandText = "select count(NoService) as revisednoofservices from tblContractDetTemp where ContractNo = '" & txtContractNo.Text & "'"
            '            cmdRevisedNoOfServices.Connection = conn

            '            Dim drRevisedNoOfServices As MySqlDataReader = cmdRevisedNoOfServices.ExecuteReader()
            '            Dim dtRevisedNoOfServices As New DataTable
            '            dtRevisedNoOfServices.Load(drRevisedNoOfServices)

            '            RevisedNoOfServices = dtRevisedNoOfServices.Rows(0)("revisednoofservices")

            '            'Existing Pests

            '            Dim cmdExistingNoOfPests As MySqlCommand = New MySqlCommand

            '            cmdExistingNoOfPests.CommandType = CommandType.Text
            '            cmdExistingNoOfPests.CommandText = "select count(ContractNo) as existingnoofpests from tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "'"
            '            cmdExistingNoOfPests.Connection = conn

            '            Dim drExistingNoOfPests As MySqlDataReader = cmdExistingNoOfPests.ExecuteReader()
            '            Dim dtExistingNoOfPests As New DataTable
            '            dtExistingNoOfPests.Load(drExistingNoOfPests)

            '            ExistingNoOfPests = dtExistingNoOfPests.Rows(0)("existingnoofpests")

            '            'Revised Pests

            '            Dim cmdRevisedNoOfPests As MySqlCommand = New MySqlCommand

            '            cmdRevisedNoOfPests.CommandType = CommandType.Text
            '            cmdRevisedNoOfPests.CommandText = "select count(ContractNo) as revisednoofpests from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "'"
            '            cmdRevisedNoOfPests.Connection = conn

            '            Dim drRevisedNoOfPests As MySqlDataReader = cmdRevisedNoOfPests.ExecuteReader()
            '            Dim dtRevisedNoOfPests As New DataTable
            '            dtRevisedNoOfPests.Load(drRevisedNoOfPests)

            '            RevisedNoOfPests = dtRevisedNoOfPests.Rows(0)("revisednoofpests")


            '            txtUpGradeDownGradeNCR.Text = "UPGRADE"

            '            If ((RevisedNoOfServices < ExistingNoOfServices) Or (RevisedNoOfPests < ExistingNoOfPests)) Or (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) Then
            '                txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            '                GoTo DoProcess
            '            End If

            '            If ((RevisedNoOfServices < ExistingNoOfServices) Or (RevisedNoOfPests > ExistingNoOfPests)) Or (Val(txtAgreeValueNCR.Text) < Val(txtAgreeVal.Text)) Then
            '                txtUpGradeDownGradeNCR.Text = "DOWNGRADE"
            '                GoTo DoProcess
            '            End If


            '            If (RevisedNoOfPests = ExistingNoOfPests) Then
            '                Dim cmdExistingPests As MySqlCommand = New MySqlCommand

            '                cmdExistingPests.CommandType = CommandType.Text
            '                cmdExistingPests.CommandText = "select TargetId from tblcontractservingtarget where ContractNo = '" & txtContractNo.Text & "' order by TargetId"
            '                cmdExistingPests.Connection = conn

            '                Dim drExistingPests As MySqlDataReader = cmdExistingPests.ExecuteReader()
            '                Dim dtExistingPests As New DataTable
            '                dtExistingPests.Load(drExistingPests)

            '                If dtExistingPests.Rows.Count > 0 Then

            '                    For y As Integer = 0 To dtExistingPests.Rows.Count - 1

            '                        Dim cmdRevisedPests As MySqlCommand = New MySqlCommand

            '                        cmdRevisedPests.CommandType = CommandType.Text
            '                        cmdRevisedPests.CommandText = "select ContractNo from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "' and TargetId ='" & dtExistingPests.Rows(0)("TargetId") & "'"
            '                        cmdRevisedPests.Connection = conn

            '                        Dim drRevisedPests As MySqlDataReader = cmdRevisedPests.ExecuteReader()
            '                        Dim dtRevisedPests As New DataTable
            '                        dtRevisedPests.Load(drRevisedPests)

            '                        If dtRevisedPests.Rows.Count = 0 Then
            '                            txtUpGradeDownGradeNCR.Text = "REVISE"
            '                            GoTo DoProcess
            '                        End If
            '                        'RevisedNoOfPests = dtRevisedNoOfPests.Rows(0)("revisednoofpests")

            '                    Next y
            '                End If
            '                'ExistingNoOfPests = dtExistingPests.Rows(0)("existingnoofpests")
            '            End If


            '            'Exit Sub

            '            'If ((RevisedNoOfServices > ExistingNoOfServices) Or (RevisedNoOfPests > ExistingNoOfPests)) Or (Val(txtAgreeValueNCR.Text) >= Val(txtAgreeVal.Text)) Then
            '            '    txtUpGradeDownGradeNCR.Text = "UPGRADE"
            '            '    GoTo DoProcess
            '            'End If


            'DoProcess:
            '            Dim commandUpdateOldContractDet As MySqlCommand = New MySqlCommand
            '            commandUpdateOldContractDet.CommandType = CommandType.Text

            '            Dim qryUpdateOldContractDet As String = "UPDATE tblContractdet SET  ContractNo =  concat(ContractNo, '-X')"
            '            qryUpdateOldContractDet = qryUpdateOldContractDet + " where ContractNo = @ContractNo"

            '            commandUpdateOldContractDet.CommandText = qryUpdateOldContractDet
            '            commandUpdateOldContractDet.Parameters.Clear()

            '            commandUpdateOldContractDet.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandUpdateOldContractDet.Connection = conn
            '            commandUpdateOldContractDet.ExecuteNonQuery()



            '            Dim commandUpdateOldContractTarget As MySqlCommand = New MySqlCommand
            '            commandUpdateOldContractTarget.CommandType = CommandType.Text

            '            Dim qryUpdateOldContractTarget As String = "UPDATE tblcontractservingtarget SET  ContractNo =  concat(ContractNo, '-X')"
            '            qryUpdateOldContractTarget = qryUpdateOldContractTarget + " where ContractNo = @ContractNo"

            '            commandUpdateOldContractTarget.CommandText = qryUpdateOldContractTarget
            '            commandUpdateOldContractTarget.Parameters.Clear()

            '            commandUpdateOldContractTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandUpdateOldContractTarget.Connection = conn
            '            commandUpdateOldContractTarget.ExecuteNonQuery()


            '            Dim commandUpdateOldContractFreq As MySqlCommand = New MySqlCommand
            '            commandUpdateOldContractFreq.CommandType = CommandType.Text

            '            Dim qryUpdateOldContractFreq As String = "UPDATE tblservicecontractfrequency SET  ContractNo =  concat(ContractNo, '-X')"
            '            qryUpdateOldContractFreq = qryUpdateOldContractFreq + " where ContractNo = @ContractNo"

            '            commandUpdateOldContractFreq.CommandText = qryUpdateOldContractFreq
            '            commandUpdateOldContractFreq.Parameters.Clear()

            '            commandUpdateOldContractFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandUpdateOldContractFreq.Connection = conn
            '            commandUpdateOldContractFreq.ExecuteNonQuery()


            '            ''Contract Price History

            '            FindLastRcnoContractpricehistory()


            '            Dim cmdPriceHistory As MySqlCommand = New MySqlCommand

            '            cmdPriceHistory.CommandType = CommandType.StoredProcedure
            '            cmdPriceHistory.CommandText = "UpdateAgreeValueNewNCR"

            '            cmdPriceHistory.Parameters.Clear()

            '            cmdPriceHistory.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueNCR.Text)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

            '            cmdPriceHistory.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            '            'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd"))
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_Comments", "")
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_UpdateType", txtUpGradeDownGradeNCR.Text)
            '            cmdPriceHistory.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)

            '            cmdPriceHistory.Connection = conn
            '            cmdPriceHistory.ExecuteScalar()


            '            ''Contrat Price History
            '            '28.08.22

            '            txtEndofLastSchedule.Text = Convert.ToDateTime(txtEffectiveDateNCR.Text).AddDays(-1)
            '            txtServStart.Text = txtEffectiveDateNCR.Text
            '            txtAgreeVal.Text = txtAgreeValueNCR.Text

            '            Dim commandUpdateContract As MySqlCommand = New MySqlCommand

            '            commandUpdateContract.CommandType = CommandType.Text
            '            'commandUpdateContract.CommandText = "Update tblContract set ContractDate = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', ServiceStart = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', AgreeValue= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"
            '            commandUpdateContract.CommandText = "Update tblContract set endofLastSchedule = '" & Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") & "', ServiceStart = '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "', AgreeValue= " & txtAgreeValueNCR.Text & " where ContractNo = '" & txtContractNo.Text & "'"

            '            commandUpdateContract.Connection = conn
            '            commandUpdateContract.ExecuteNonQuery()




            '            'Exit Sub
            '            Dim commandUpdateService As MySqlCommand = New MySqlCommand

            '            commandUpdateService.CommandType = CommandType.Text
            '            commandUpdateService.CommandText = "Update tblServiceRecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "' and schServiceDate > '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "'"
            '            commandUpdateService.Connection = conn
            '            commandUpdateService.ExecuteNonQuery()


            '            Dim cmdContractDetailTemp As MySqlCommand = New MySqlCommand
            '            cmdContractDetailTemp.CommandType = CommandType.Text
            '            cmdContractDetailTemp.CommandText = "SELECT * from tblContractDetTemp where ContractNo = '" & txtContractNo.Text & "' order by rcno"
            '            cmdContractDetailTemp.Connection = conn

            '            Dim drContractDetailTemp As MySqlDataReader = cmdContractDetailTemp.ExecuteReader()
            '            Dim dtContractDetailTemp As New DataTable
            '            dtContractDetailTemp.Load(drContractDetailTemp)

            '            If dtContractDetailTemp.Rows.Count > 0 Then

            '                For x As Integer = 0 To dtContractDetailTemp.Rows.Count - 1


            '                    'start
            '                    Dim command As MySqlCommand = New MySqlCommand
            '                    command.CommandType = CommandType.Text

            '                    Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
            '                    qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
            '                    qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
            '                    qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
            '                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                    qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
            '                    qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
            '                    qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
            '                    qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
            '                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"
            '                    'qry = qry + " from tblContractdetTemp where ContractNo = '" & txtContractNo.Text & "'"

            '                    command.CommandText = qry
            '                    command.Parameters.Clear()

            '                    command.Parameters.AddWithValue("@ContractNo", dtContractDetailTemp.Rows(x)("ContractNo"))
            '                    command.Parameters.AddWithValue("@Frequency", dtContractDetailTemp.Rows(x)("Frequency"))
            '                    command.Parameters.AddWithValue("@Value", dtContractDetailTemp.Rows(x)("Value"))
            '                    command.Parameters.AddWithValue("@NoService", dtContractDetailTemp.Rows(x)("NoService"))
            '                    command.Parameters.AddWithValue("@Location", dtContractDetailTemp.Rows(x)("Location"))
            '                    command.Parameters.AddWithValue("@BranchId", dtContractDetailTemp.Rows(x)("BranchId"))
            '                    command.Parameters.AddWithValue("@NoOfSvcInterval", dtContractDetailTemp.Rows(x)("NoOfSvcInterval"))
            '                    command.Parameters.AddWithValue("@NoOfInterval", dtContractDetailTemp.Rows(x)("NoOfInterval"))

            '                    command.Parameters.AddWithValue("@ServiceId", dtContractDetailTemp.Rows(x)("ServiceId"))
            '                    command.Parameters.AddWithValue("@ServiceDesc", dtContractDetailTemp.Rows(x)("ServiceDesc"))
            '                    command.Parameters.AddWithValue("@FrequencyDesc", dtContractDetailTemp.Rows(x)("FrequencyDesc"))

            '                    command.Parameters.AddWithValue("@TargetDesc", dtContractDetailTemp.Rows(x)("TargetDesc"))
            '                    command.Parameters.AddWithValue("@TargetId", dtContractDetailTemp.Rows(x)("TargetId"))
            '                    command.Parameters.AddWithValue("@ServiceNotes", dtContractDetailTemp.Rows(x)("ServiceNotes"))

            '                    command.Parameters.AddWithValue("@AccountID", dtContractDetailTemp.Rows(x)("AccountID"))

            '                    command.Parameters.AddWithValue("@ContactPerson", dtContractDetailTemp.Rows(x)("ContactPerson"))
            '                    command.Parameters.AddWithValue("@ContactPerson2", dtContractDetailTemp.Rows(x)("ContactPerson2"))
            '                    command.Parameters.AddWithValue("@Contact1Position", dtContractDetailTemp.Rows(x)("Contact1Position"))
            '                    command.Parameters.AddWithValue("@Contact2Position", dtContractDetailTemp.Rows(x)("Contact2Position"))

            '                    command.Parameters.AddWithValue("@Telephone", dtContractDetailTemp.Rows(x)("Telephone"))
            '                    command.Parameters.AddWithValue("@Telephone2", dtContractDetailTemp.Rows(x)("Telephone2"))
            '                    command.Parameters.AddWithValue("@Contact2Tel", dtContractDetailTemp.Rows(x)("Contact2Tel"))
            '                    command.Parameters.AddWithValue("@Contact2Tel2", dtContractDetailTemp.Rows(x)("Contact2Tel2"))
            '                    command.Parameters.AddWithValue("@Fax", dtContractDetailTemp.Rows(x)("Fax"))
            '                    command.Parameters.AddWithValue("@Contact2Fax", dtContractDetailTemp.Rows(x)("Contact2Fax"))
            '                    command.Parameters.AddWithValue("@Mobile", dtContractDetailTemp.Rows(x)("Mobile"))
            '                    command.Parameters.AddWithValue("@Contact2Mobile", dtContractDetailTemp.Rows(x)("Contact2Mobile"))
            '                    command.Parameters.AddWithValue("@Email", dtContractDetailTemp.Rows(x)("Email"))
            '                    command.Parameters.AddWithValue("@Contact2Email", dtContractDetailTemp.Rows(x)("Contact2Email"))
            '                    command.Parameters.AddWithValue("@LocationID", dtContractDetailTemp.Rows(x)("LocationID"))
            '                    command.Parameters.AddWithValue("@ServiceName", dtContractDetailTemp.Rows(x)("ServiceName"))
            '                    command.Parameters.AddWithValue("@Address1", dtContractDetailTemp.Rows(x)("Address1"))
            '                    command.Parameters.AddWithValue("@Zone", dtContractDetailTemp.Rows(x)("LocateGRP"))
            '                    command.Parameters.AddWithValue("@ServiceLocationGroup", dtContractDetailTemp.Rows(x)("ServiceLocationGroup"))
            '                    command.Parameters.AddWithValue("@UOM", dtContractDetailTemp.Rows(x)("UOM"))

            '                    command.Parameters.AddWithValue("@Area", dtContractDetailTemp.Rows(x)("Area"))

            '                    command.Parameters.AddWithValue("@Salesman", dtContractDetailTemp.Rows(x)("Salesman"))
            '                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                    command.Connection = conn
            '                    command.ExecuteNonQuery()


            '                    Dim sqlLastId As String
            '                    sqlLastId = "SELECT last_insert_id() from tblcontractdet"

            '                    Dim command3 As MySqlCommand = New MySqlCommand
            '                    command3.CommandType = CommandType.Text

            '                    command3.CommandText = sqlLastId
            '                    command3.Parameters.Clear()

            '                    'SqlCommand cmd = new SqlCommand(sql, conn);
            '                    'conn.Open();
            '                    command3.Connection = conn
            '                    txtSourceSQLID.Text = command3.ExecuteScalar()

            '                    txtRcnoDetailLog.Text = txtSourceSQLID.Text

            '                    ''''''''''''''''''''''''''
            '                    'txtRcnoDetail.Text = txtSourceSQLID.Text
            '                    ''''''''''''''''''''''''''


            '                    Dim command4 As MySqlCommand = New MySqlCommand
            '                    command4.CommandType = CommandType.Text
            '                    command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
            '                    command4.Connection = conn
            '                    command4.ExecuteNonQuery()

            '                    'Start:Target

            '                    Dim cmdContractTargetTemp As MySqlCommand = New MySqlCommand
            '                    cmdContractTargetTemp.CommandType = CommandType.Text
            '                    cmdContractTargetTemp.CommandText = "SELECT * from tblcontractservingtargettemp where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
            '                    cmdContractTargetTemp.Connection = conn

            '                    Dim drContractTargetTemp As MySqlDataReader = cmdContractTargetTemp.ExecuteReader()
            '                    Dim dtContractTargetTemp As New DataTable
            '                    dtContractTargetTemp.Load(drContractTargetTemp)

            '                    If dtContractTargetTemp.Rows.Count > 0 Then

            '                        For y As Integer = 0 To dtContractTargetTemp.Rows.Count - 1

            '                            Dim commandTarget As MySqlCommand = New MySqlCommand
            '                            commandTarget.CommandType = CommandType.Text

            '                            Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
            '                            qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
            '                            qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

            '                            qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
            '                            qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                            commandTarget.CommandText = qryTarget
            '                            commandTarget.Parameters.Clear()

            '                            commandTarget.Parameters.AddWithValue("@ContractNo", dtContractTargetTemp.Rows(y)("ContractNo"))
            '                            commandTarget.Parameters.AddWithValue("@ServiceId", dtContractTargetTemp.Rows(y)("ServiceId"))
            '                            commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                            commandTarget.Parameters.AddWithValue("@TargetId", dtContractTargetTemp.Rows(y)("TargetId"))
            '                            commandTarget.Parameters.AddWithValue("@TargetDesc", dtContractTargetTemp.Rows(y)("TargetDesc"))

            '                            commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                            'commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                            commandTarget.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                            commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                            'commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                            commandTarget.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                            commandTarget.Connection = conn
            '                            commandTarget.ExecuteNonQuery()

            '                            If String.IsNullOrEmpty(txtTargetDescNCR.Text) = False Then
            '                                txtTargetDescNCR.Text = txtTargetDescNCR.Text + ", " + dtContractTargetTemp.Rows(y)("TargetDesc")
            '                                txtTargetIdNCR.Text = txtTargetIdNCR.Text + "," + dtContractTargetTemp.Rows(y)("TargetId")
            '                            Else
            '                                txtTargetDescNCR.Text = dtContractTargetTemp.Rows(y)("TargetDesc")
            '                                txtTargetIdNCR.Text = dtContractTargetTemp.Rows(y)("TargetId")
            '                            End If
            '                        Next y


            '                    End If

            '                    'End:Target

            '                    ''
            '                    'Start Frequency

            '                    Dim cmdContractFrequencyTemp As MySqlCommand = New MySqlCommand
            '                    cmdContractFrequencyTemp.CommandType = CommandType.Text
            '                    cmdContractFrequencyTemp.CommandText = "SELECT * from tblservicecontractfrequencytemp where ContractNo = '" & txtContractNo.Text & "' and sourcesqlid = " & dtContractDetailTemp.Rows(x)("rcno") & " order by rcno"
            '                    cmdContractFrequencyTemp.Connection = conn

            '                    Dim drContractFrequencyTemp As MySqlDataReader = cmdContractFrequencyTemp.ExecuteReader()
            '                    Dim dtContractFrequencyTemp As New DataTable
            '                    dtContractFrequencyTemp.Load(drContractFrequencyTemp)

            '                    If dtContractFrequencyTemp.Rows.Count > 0 Then


            '                        Dim commandFrequency As MySqlCommand = New MySqlCommand
            '                        commandFrequency.CommandType = CommandType.Text

            '                        Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
            '                        qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                        qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
            '                        qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                        commandFrequency.CommandText = qryFreq
            '                        commandFrequency.Parameters.Clear()

            '                        commandFrequency.Parameters.AddWithValue("@ContractNo", dtContractFrequencyTemp.Rows(0)("ContractNo"))
            '                        commandFrequency.Parameters.AddWithValue("@FreqMTD", dtContractFrequencyTemp.Rows(0)("FreqMTD"))
            '                        commandFrequency.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        commandFrequency.Parameters.AddWithValue("@SeqNo", dtContractFrequencyTemp.Rows(0)("SeqNo"))
            '                        commandFrequency.Parameters.AddWithValue("@DayNo", dtContractFrequencyTemp.Rows(0)("DayNo"))
            '                        commandFrequency.Parameters.AddWithValue("@WeekNo", dtContractFrequencyTemp.Rows(0)("WeekNo"))
            '                        commandFrequency.Parameters.AddWithValue("@MonthNo", dtContractFrequencyTemp.Rows(0)("MonthNo"))
            '                        commandFrequency.Parameters.AddWithValue("@WeekDow", dtContractFrequencyTemp.Rows(0)("WeekDow"))
            '                        commandFrequency.Parameters.AddWithValue("@Location", dtContractFrequencyTemp.Rows(0)("Location"))
            '                        commandFrequency.Parameters.AddWithValue("@BranchId", dtContractFrequencyTemp.Rows(0)("BranchId"))
            '                        commandFrequency.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        commandFrequency.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                        commandFrequency.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        commandFrequency.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            '                        commandFrequency.Connection = conn
            '                        commandFrequency.ExecuteNonQuery()

            '                    End If

            '                    'end Frequency
            '                Next x

            '            End If


            '            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '            'Dim message As String = "alert('Record added successfully!!!')"
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            lblMessageNCR.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
            '            lblAlertNCR.Text = ""

            '            SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            '            grvContractDetail.DataSourceID = "SqlDSContractDet"
            '            grvContractDetail.DataBind()

            '            'UpdateContractHeaderNCR()

            '            Dim commandDeleteContractDetTemp As MySqlCommand = New MySqlCommand
            '            commandDeleteContractDetTemp.CommandType = CommandType.Text

            '            Dim qryDeleteContractDetTemp As String = "Delete from tblContractdetTemp "
            '            qryDeleteContractDetTemp = qryDeleteContractDetTemp + " where ContractNo = @ContractNo"

            '            commandDeleteContractDetTemp.CommandText = qryDeleteContractDetTemp
            '            commandDeleteContractDetTemp.Parameters.Clear()

            '            commandDeleteContractDetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandDeleteContractDetTemp.Connection = conn
            '            commandDeleteContractDetTemp.ExecuteNonQuery()



            '            Dim commandDeleteContractTargetTemp As MySqlCommand = New MySqlCommand
            '            commandDeleteContractTargetTemp.CommandType = CommandType.Text

            '            Dim qryDeleteContractTargetTemp As String = "Delete from tblcontractservingtargettemp "
            '            qryDeleteContractTargetTemp = qryDeleteContractTargetTemp + " where ContractNo = @ContractNo"

            '            commandDeleteContractTargetTemp.CommandText = qryDeleteContractTargetTemp
            '            commandDeleteContractTargetTemp.Parameters.Clear()

            '            commandDeleteContractTargetTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandDeleteContractTargetTemp.Connection = conn
            '            commandDeleteContractTargetTemp.ExecuteNonQuery()


            '            Dim commandDeleteContractFreqTemp As MySqlCommand = New MySqlCommand
            '            commandDeleteContractFreqTemp.CommandType = CommandType.Text

            '            Dim qryDeleteContractFreqTemp As String = "Delete from tblservicecontractfrequencytemp "
            '            qryDeleteContractFreqTemp = qryDeleteContractFreqTemp + " where ContractNo = @ContractNo"

            '            commandDeleteContractFreqTemp.CommandText = qryDeleteContractFreqTemp
            '            commandDeleteContractFreqTemp.Parameters.Clear()

            '            commandDeleteContractFreqTemp.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)

            '            commandDeleteContractFreqTemp.Connection = conn
            '            commandDeleteContractFreqTemp.ExecuteNonQuery()

            '            conn.Close()
            '            conn.Dispose()


            '            btnServiceSchedule_Click(sender, e)
        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSaveNCR_Click", ex.Message.ToString, txtContractNo.Text)
            txtNCR.Text = "N"
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub


    Protected Sub OnSelectedIndexChangedNCR(sender As Object, e As EventArgs)
        For Each row As GridViewRow In grvContractDetailNCR.Rows

            If row.RowIndex = grvContractDetailNCR.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#ffffff")
                row.ToolTip = "Click to select this row."
            End If

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then

                If row.RowIndex = grvContractDetailNCR.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Else
                If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then

                    If row.RowIndex = txtSelectedIndex.Text Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                        txtSelectedIndex.Text = ""
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If

                End If

            End If

        Next
    End Sub

    Protected Sub OnRowDataBoundNCR(sender As Object, e As GridViewRowEventArgs) Handles grvContractDetailNCR.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")


            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grvContractDetailNCR, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub


    Protected Sub grvContractDetailNCR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvContractDetailNCR.SelectedIndexChanged

        Try
            'txtIsPopup.Text = "NCR"
            MakeSvcDetailNullNCR()
            txtErrorMsg.Text = ""
            'Dim editindex As Integer
            Dim editindex As Integer = grvContractDetailNCR.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then
                'editindex = txtSelectedIndex.Text
                editindex = 0
            Else
                editindex = grvContractDetailNCR.SelectedIndex
            End If

            'If editindex < 0 Then
            '    'btnSvcAdd.Enabled = True
            '    'btnSvcAdd.ForeColor = System.Drawing.Color.Black
            '    Exit Sub
            'End If


            'DisableSvcControls()
            FirstGridViewRowLocationNCR()

            rcno = DirectCast(grvContractDetailNCR.Rows(editindex).FindControl("lblRcnoContractDetNCR"), Label).Text
            'txtRcno.Text = rcno.ToString()
            txtRcnoDetail.Text = rcno.ToString()
            'Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractDettemp where rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Frequency").ToString <> "" Then : txtFrequencyNCR.Text = dt.Rows(0)("Frequency").ToString : End If
                If dt.Rows(0)("FrequencyDesc").ToString <> "" Then : txtFrequencyDescNCR.Text = dt.Rows(0)("FrequencyDesc").ToString : End If
                If dt.Rows(0)("ServiceID").ToString <> "" Then : txtServiceIdNCR.Text = dt.Rows(0)("ServiceID").ToString : End If
                If dt.Rows(0)("ServiceDesc").ToString <> "" Then : txtServiceDescNCR.Text = dt.Rows(0)("ServiceDesc").ToString : End If
                If dt.Rows(0)("NoService").ToString <> "" Then : txtNoServiceNCR.Text = dt.Rows(0)("NoService").ToString : End If
                If dt.Rows(0)("NoofSvcInterval").ToString <> "" Then : txtNoofSvcIntervalNCR.Text = dt.Rows(0)("NoofSvcInterval").ToString : End If
                If dt.Rows(0)("NoofInterval").ToString <> "" Then : txtNoofIntervalNCR.Text = dt.Rows(0)("NoofInterval").ToString : End If
                If dt.Rows(0)("ServiceNotes").ToString <> "" Then : txtServiceNotesNCR.Text = dt.Rows(0)("ServiceNotes").ToString : End If
                If dt.Rows(0)("Value").ToString <> "" Then : txtValuePerServiceNCR.Text = dt.Rows(0)("Value").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtSourceSQLIDNCR.Text = dt.Rows(0)("OrigCode").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtOrigCodeNCR.Text = dt.Rows(0)("OrigCode").ToString : End If

                If dt.Rows(0)("UOM").ToString <> "" Then : txtUOMNCR.Text = dt.Rows(0)("UOM").ToString : End If
                If dt.Rows(0)("Area").ToString <> "" Then : txtAreaNCR.Text = dt.Rows(0)("Area").ToString : End If

                If dt.Rows(0)("ContactPerson").ToString <> "" Then : txtContactPersonNCR.Text = dt.Rows(0)("ContactPerson").ToString : End If
                If dt.Rows(0)("ContactPerson2").ToString <> "" Then : txtContactPerson2NCR.Text = dt.Rows(0)("ContactPerson2").ToString : End If
                If dt.Rows(0)("Contact1Position").ToString <> "" Then : txtPositionNCR.Text = dt.Rows(0)("Contact1Position").ToString : End If
                If dt.Rows(0)("Contact2Position").ToString <> "" Then : txtPosition2NCR.Text = dt.Rows(0)("Contact2Position").ToString : End If
                If dt.Rows(0)("Telephone").ToString <> "" Then : txtTelephoneNCR.Text = dt.Rows(0)("Telephone").ToString : End If

                If dt.Rows(0)("Telephone2").ToString <> "" Then : txtTelephone2NCR.Text = dt.Rows(0)("Telephone2").ToString : End If
                If dt.Rows(0)("Fax").ToString <> "" Then : txtFaxNCR.Text = dt.Rows(0)("Fax").ToString : End If
                If dt.Rows(0)("Contact2Fax").ToString <> "" Then : txtFax2NCR.Text = dt.Rows(0)("Contact2Fax").ToString : End If
                If dt.Rows(0)("Contact2Tel").ToString <> "" Then : txtCP2TelephoneNCR.Text = dt.Rows(0)("Contact2Tel").ToString : End If
                If dt.Rows(0)("Contact2Tel2").ToString <> "" Then : txtCP2Telephone2NCR.Text = dt.Rows(0)("Contact2Tel2").ToString : End If

                If dt.Rows(0)("Mobile").ToString <> "" Then : txtConPerMobileNCR.Text = dt.Rows(0)("Mobile").ToString : End If
                If dt.Rows(0)("Contact2Mobile").ToString <> "" Then : txtConPerMobile2NCR.Text = dt.Rows(0)("Contact2Mobile").ToString : End If
                If dt.Rows(0)("Email").ToString <> "" Then : txtEmail1NCR.Text = dt.Rows(0)("Email").ToString : End If
                If dt.Rows(0)("Contact2Email").ToString <> "" Then : txtEmail2NCR.Text = dt.Rows(0)("Contact2Email").ToString : End If

                If dt.Rows(0)("LocationID").ToString <> "" Then : txtLocationIdNCR.Text = dt.Rows(0)("LocationID").ToString : End If
                If dt.Rows(0)("ServiceName").ToString <> "" Then : txtServiceNameNCR.Text = dt.Rows(0)("ServiceName").ToString : End If
                If dt.Rows(0)("Address1").ToString <> "" Then : txtServiceAddressNCR.Text = dt.Rows(0)("Address1").ToString : End If
                If dt.Rows(0)("LocateGRP").ToString <> "" Then : txtZoneNCR.Text = dt.Rows(0)("LocateGRP").ToString : End If
                If dt.Rows(0)("ServiceLocationGroup").ToString <> "" Then : txtLocationGroupNCR.Text = dt.Rows(0)("ServiceLocationGroup").ToString : End If
                If dt.Rows(0)("Location").ToString <> "" Then : txtBranchNCR.Text = dt.Rows(0)("Location").ToString : End If


            End If

            EnableSvcControlsNCR()
            btnSvcEditNCR.Enabled = True

            btnSvcDeleteNCR.Enabled = True
            btnSvcEditNCR.ForeColor = Color.Black
            btnSvcDeleteNCR.ForeColor = Color.Black

            'Start: Location

            SetRowDataLocNCR()

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvServiceLocationNCR.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableLoc") = dtScdrLoc
                grvServiceLocationNCR.DataSource = dtScdrLoc
                grvServiceLocationNCR.DataBind()

                SetPreviousDataLocNCR()
            Next i



            FirstGridViewRowLocationNCR()
            Dim cmdContratLoc As MySqlCommand = New MySqlCommand
            cmdContratLoc.CommandType = CommandType.Text
            cmdContratLoc.CommandText = "SELECT * FROM tblcontractDetTemp where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratLoc.Connection = conn

            Dim drLocation As MySqlDataReader = cmdContratLoc.ExecuteReader()
            Dim dtLocation As New DataTable
            dtLocation.Load(drLocation)

            Dim TotDetailRecordsTarget = dtLocation.Rows.Count
            If dtLocation.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtLocation.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxLocationId As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGVNCR"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocationID"))

                    Dim TextBoxServiceName As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtServiceNameGVNCR"), TextBox)
                    TextBoxServiceName.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceName"))

                    Dim TextBoxContractNo As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVNCR"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtServiceAddressGVNCR"), TextBox)
                    TextBoxServiceAddress.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Address1"))

                    Dim TextBoxZone As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtZoneGVNCR"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocateGRP"))

                    Dim TextBoxRcno As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVNCR"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Rcno"))

                    Dim TextBoxLocaionGroup As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtLocationGroupGVNCR"), TextBox)
                    TextBoxLocaionGroup.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceLocationGroup"))

                    Dim TextBoxLocaion As TextBox = CType(grvServiceLocationNCR.Rows(rowIndex).Cells(0).FindControl("txtBranchGVNCR"), TextBox)
                    TextBoxLocaion.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Location"))

                    rowIndex += 1

                Next row

            Else
                FirstGridViewRowLocationNCR()
              
            End If

            'End: Location


            'Start: Service Detail


            SetRowDataServicesNCR()
            Dim dtScdrServices As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
            Dim drCurrentRowServices As DataRow = Nothing

            For i As Integer = 0 To grvServicesNCR.Rows.Count - 1
                dtScdrServices.Rows.Remove(dtScdrServices.Rows(0))
                drCurrentRowServices = dtScdrServices.NewRow()
                ViewState("CurrentTableServices") = dtScdrServices
                grvServicesNCR.DataSource = dtScdrServices
                grvServicesNCR.DataBind()
                SetPreviousDataServicesNCR()

            Next i


            FirstGridViewRowServicesNCR()
            Dim cmdContratServices As MySqlCommand = New MySqlCommand
            cmdContratServices.CommandType = CommandType.Text
            cmdContratServices.CommandText = "SELECT * FROM tblcontractDettemp where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratServices.Connection = conn

            Dim drServices As MySqlDataReader = cmdContratServices.ExecuteReader()
            Dim dtServices As New DataTable
            dtServices.Load(drServices)

            Dim TotDetailRecordsServices = dtServices.Rows.Count
            If dtServices.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtServices.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxServiceId As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGVNCR"), DropDownList)
                    TextBoxServiceId.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceId"))

                    Dim TextBoxServiceDescription As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtServiceDescriptionGVNCR"), TextBox)
                    TextBoxServiceDescription.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceDesc"))

                    Dim TextBoxContractNo As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVNCR"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtServices.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxPricePerService As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtPricePerServiceGVNCR"), TextBox)
                    TextBoxPricePerService.Text = Convert.ToString(dtServices.Rows(rowIndex)("Value"))

                    Dim TextBoxLocationId As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                    TextBoxLocationId.Text = Convert.ToString(dtServices.Rows(rowIndex)("Frequency"))

                    Dim TextBoxZone As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtTotalServicesGVNCR"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoService"))

                    Dim TextBoxCompletedServices As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtCompletedServicesGVNCR"), TextBox)
                    TextBoxCompletedServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoServiceCompleted"))

                    'Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtBalanceServicesGV"), TextBox)
                    'TextBoxBalanceServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVNCR"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtServices.Rows(rowIndex)("Rcno"))

                    Dim TextBoxUOM As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtUOMGVNCR"), DropDownList)
                    TextBoxUOM.Text = Convert.ToString(dtServices.Rows(rowIndex)("UOM"))

                    Dim TextBoxArea As TextBox = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("txtAreaGVNCR"), TextBox)
                    TextBoxArea.Text = Convert.ToString(dtServices.Rows(rowIndex)("Area"))

                    Dim Query As String
                    Dim TextBoxTargetDesc1 As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGVNCR"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)

                    Dim Query1 As String
                    Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServicesNCR.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGVNCR"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)

                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    'Query = "Select * from tblCompanyLocation"
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

             
            Else

                FirstGridViewRowServicesNCR()
             
            End If

            'End: Service Detail

            '26.02.23

            'Start: Target
            SetRowDataNCR()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTable"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvTargetDetailsNCR.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTable") = dtScdrTarget1
                grvTargetDetailsNCR.DataSource = dtScdrTarget1
                grvTargetDetailsNCR.DataBind()

                SetPreviousDataNCR()

            Next i


            FirstGridViewRowTargetNCR()

            Dim cmdContratTarget As MySqlCommand = New MySqlCommand
            cmdContratTarget.CommandType = CommandType.Text
            cmdContratTarget.CommandText = "SELECT Rcno, TargetDesc, TargetID, ContractNo, ServiceID, SourceSQLID FROM tblcontractServingTargetTemp where SourceSQLID=" & Convert.ToInt32(txtOrigCodeNCR.Text)
            cmdContratTarget.Connection = conn

            Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
            Dim dtTarget As New DataTable
            dtTarget.Load(drTarget)

            Dim TotDetailRecordsLoc = dtTarget.Rows.Count
            If dtTarget.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtTarget.Rows
                    If (TotDetailRecordsLoc > (rowIndex + 1)) Then

                        AddNewRowNCR()
                    End If

                    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                    TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetDesc"))

                    Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtTargtIdGVNCR"), TextBox)
                    TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetID"))

                    Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVNCR"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtServiceIDGVNCR"), TextBox)
                    TextBoxServiceID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ServiceID"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGVNCR"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVNCR"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))


                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                    Query = "Select descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                AddNewRowNCR()
                SetPreviousDataNCR()

            Else
                FirstGridViewRowTargetNCR()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(0).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
                Query = "Select descrip1 from tblTarget order by descrip1"

                PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            End If

            'End: Target
            '26.02.23


            'Start: Frequency

            ''''''''''''''
            Dim commandByWhich As MySqlCommand = New MySqlCommand
            commandByWhich.CommandType = CommandType.Text
            commandByWhich.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblservicefrequency where Frequency= '" & txtFrequency.Text & "'"
            commandByWhich.Connection = conn

            Dim drByWhich As MySqlDataReader = commandByWhich.ExecuteReader()
            Dim dtByWhich As New DataTable
            dtByWhich.Load(drByWhich)

            If dtByWhich.Rows.Count > 0 Then

                If dtByWhich.Rows(0)("MonthByWhichMonth").ToString <> "" Then : txtMonthByWhichMonth.Text = dtByWhich.Rows(0)("MonthByWhichMonth").ToString : End If
                If dtByWhich.Rows(0)("DOWByWhichWeek").ToString <> "" Then : txtDOWByWhichWeek.Text = dtByWhich.Rows(0)("DOWByWhichWeek").ToString : End If

            End If

            '''''''''''''''''''

            SetRowDataFreqNCR()


            Dim dtFreq1 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            Dim drCurrentRowFreq As DataRow = Nothing

            For i As Integer = 0 To grvFreqDetailsNCR.Rows.Count - 1
                dtFreq1.Rows.Remove(dtFreq1.Rows(0))
                drCurrentRowFreq = dtFreq1.NewRow()
                ViewState("CurrentTableFreq") = dtFreq1
                grvFreqDetailsNCR.DataSource = dtFreq1
                grvFreqDetailsNCR.DataBind()

                SetPreviousDataFreqNCR()

            Next i


            FirstGridViewRowFreqNCR()

            Dim cmdContratFreq As MySqlCommand = New MySqlCommand
            cmdContratFreq.CommandType = CommandType.Text
            cmdContratFreq.CommandText = "SELECT Rcno, FreqMtd, SeqNo, DayNo, MonthNo, WeekNo, WeekDOW, Location, BranchID, ContractNo, SourceSQLID  FROM tblServicecontractFrequencytemp where SourceSQLID=" & Convert.ToInt32(txtOrigCodeNCR.Text)
            cmdContratFreq.Connection = conn

            Dim drFreq As MySqlDataReader = cmdContratFreq.ExecuteReader()
            Dim dtFreq As New DataTable
            dtFreq.Load(drFreq)


            If dtFreq.Rows.Count > 0 Then   '23.02.17 ???

                If txtNoofSvcIntervalNCR.Text = "1" Then

                    Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)


                    txtErrorMsg.Text = ""

                    TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(0)("SeqNo"))

                    'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(0)("FreqMtd")), "str")
                    Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)

                    If txtFrequencyDesc.Text = "DAILY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DAY")
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("DATE")

                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("MONTH")
                    Else
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    End If

                    TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(0)("FreqMtd").ToString.Trim())

                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtDayNoGVNCR"), TextBox)
                    TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(0)("DayNo"))

                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtWeekNoGVNCR"), TextBox)
                    TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(0)("WeekNo"))

                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtMonthNoGVNCR"), TextBox)
                    TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(0)("MonthNo"))

                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                    TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(0)("WeekDOW"))

                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlLocationGVNCR"), DropDownList)
                    TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(0)("Location"))

                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("ddlBranchIDGVNCR"), DropDownList)
                    TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(0)("BranchID"))

                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtContractNoGVFNCR"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(0)("ContractNo"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(0)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(0).Cells(0).FindControl("txtRcnoGVFNCR"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(0)("Rcno"))


                    If txtFrequency.Text = "DAILY" Or txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Bi-Weekly" Or txtFrequency.Text = "Tri-Weekly" Or txtFrequency.Text = "Fortnightly" Or txtFrequency.Text = "Twice-Weekly" Then
                        TextBoxFreqMtd.Enabled = False
                    End If


                    If TextBoxFreqMtd.Text = "DAY" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False


                    ElseIf TextBoxFreqMtd.Text = "DATE" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    ElseIf TextBoxFreqMtd.Text = "DOW" Then

                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = True
                        TextBoxWeekDOW.Enabled = True


                        If txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Thrice-Weekly" Or txtFrequency.Text = "Twice-Weekly" Or txtFrequency.Text = "Four-Times-Weekly" Or txtFrequency.Text = "Five-Times-Weekly" Or txtFrequency.Text = "Six-Times-Weekly" Then
                            TextBoxWeekNo.Enabled = False
                        End If

                    ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                        TextBoxMonthNo.Enabled = True
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    End If

                    'Start: 14.11.19
                    If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If
                    'End: 14.11.19

                    'End If  '23.02.17 ''''''''''''''????
                ElseIf Convert.ToInt32(txtNoofSvcIntervalNCR.Text) > 1 Then
                    Dim rowIndex = 0
                    rowIndex = Convert.ToInt32(txtNoofSvcIntervalNCR.Text)

                    'For i As Integer = 0 To rowIndex
                    For i As Integer = 0 To (rowIndex - 1)

                        If (i < (rowIndex - 1)) Then
                            AddNewRowFreqEditNCR()
                        End If


                        'If (i <= (rowIndex - 1)) Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtSeqNoGVNCR"), TextBox)
                        txtErrorMsg.Text = "Blank WeekDay"
                        TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(i)("SeqNo"))

                        Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("ddlFreqMTDGVNCR"), DropDownList)

                        'sen
                        If txtFrequencyDesc.Text = "DAILY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DAY")

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("DATE")

                            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                            'TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                            'TextBoxWeekDOW.Text = gDOW

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            ''Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("MONTH")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then

                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Enabled = False

                        Else
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            'TextBoxFreqMTD.Items.Clear()
                            'TextBoxFreqMTD.Items.Add(gFreqMTD)
                        End If
                        'sen

                        TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(i)("FreqMtd").ToString.Trim())

                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtDayNoGVNCR"), TextBox)
                        TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(i)("DayNo"))

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtWeekNoGVNCR"), TextBox)
                        TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(i)("WeekNo"))

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtMonthNoGVNCR"), TextBox)
                        TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(i)("MonthNo"))

                        'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(i)("WeekDOW")), "str")
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("ddlWeekDOWGVNCR"), DropDownList)
                        TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(i)("WeekDOW"))

                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("ddlLocationGVNCR"), DropDownList)
                        TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(i)("Location"))

                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("ddlBranchIDGVNCR"), DropDownList)
                        TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(i)("BranchID"))

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtContractNoGVFNCR"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(i)("ContractNo"))

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtSourceSQLIDGVFNCR"), TextBox)
                        TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(i)("SourceSQLID"))

                        Dim TextBoxRcno As TextBox = CType(grvFreqDetailsNCR.Rows(i).Cells(0).FindControl("txtRcnoGVFNCR"), TextBox)
                        TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(i)("Rcno"))


                        If TextBoxFreqMtd.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                            End If


                        ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If

                        'Start: 14.11.19
                        If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If
                        'End: 14.11.19

                        'End If '''''  23.02.17 ????
                    Next i
                End If '12.06.17


                'AddNewRowFreq()
                'SetPreviousDataFreq()
            Else
                FirstGridViewRowFreqNCR()
            End If




            ''Start: Target
            'SetRowDataNCR()


            'Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTable"), DataTable)
            'Dim drCurrentRowTarget1 As DataRow = Nothing

            'For i As Integer = 0 To grvTargetDetailsNCR.Rows.Count - 1
            '    dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
            '    drCurrentRowTarget1 = dtScdrTarget1.NewRow()
            '    ViewState("CurrentTable") = dtScdrTarget1
            '    grvTargetDetailsNCR.DataSource = dtScdrTarget1
            '    grvTargetDetailsNCR.DataBind()

            '    SetPreviousDataNCR()

            'Next i


            'FirstGridViewRowTargetNCR()

            'Dim cmdContratTarget As MySqlCommand = New MySqlCommand
            'cmdContratTarget.CommandType = CommandType.Text
            'cmdContratTarget.CommandText = "SELECT Rcno, TargetDesc, TargetID, ContractNo, ServiceID, SourceSQLID FROM tblcontractServingTargetTemp where SourceSQLID=" & Convert.ToInt32(txtOrigCodeNCR.Text)
            'cmdContratTarget.Connection = conn

            'Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
            'Dim dtTarget As New DataTable
            'dtTarget.Load(drTarget)

            'Dim TotDetailRecordsLoc = dtTarget.Rows.Count
            'If dtTarget.Rows.Count > 0 Then

            '    Dim rowIndex = 0

            '    For Each row As DataRow In dtTarget.Rows
            '        If (TotDetailRecordsLoc > (rowIndex + 1)) Then

            '            AddNewRowNCR()
            '        End If

            '        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
            '        TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetDesc"))

            '        Dim TextBoxTargtId As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtTargtIdGVNCR"), TextBox)
            '        TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetID"))

            '        Dim TextBoxContractNo As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVNCR"), TextBox)
            '        TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

            '        Dim TextBoxServiceID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtServiceIDGVNCR"), TextBox)
            '        TextBoxServiceID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ServiceID"))

            '        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGVNCR"), TextBox)
            '        TextBoxSourceSQLID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("SourceSQLID"))

            '        Dim TextBoxRcno As TextBox = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVNCR"), TextBox)
            '        TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))


            '        Dim Query As String
            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetailsNCR.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
            '        Query = "Select descrip1 from tblTarget order by descrip1"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
            '        rowIndex += 1

            '    Next row

            '    AddNewRowNCR()
            '    SetPreviousDataNCR()

            'Else
            '    FirstGridViewRowTargetNCR()
            '    Dim Query As String
            '    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetailsNCR.Rows(0).Cells(0).FindControl("ddlTargetDescGVNCR"), DropDownList)
            '    Query = "Select descrip1 from tblTarget order by descrip1"

            '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            'End If

            ''End: Target

            'End: Detail Records
            command1.Dispose()
            commandByWhich.Dispose()
            cmdContratFreq.Dispose()
            cmdContratLoc.Dispose()
            cmdContratServices.Dispose()
            cmdContratTarget.Dispose()
            dt.Dispose()
            dtByWhich.Dispose()
            dtFreq.Dispose()
            dtFreq1.Dispose()
            dtLocation.Dispose()
            dtTarget.Dispose()
            dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            dtServices.Dispose()


            mdlPopupNCR.Show()
            '09.11.21

            'If txtGS.Text = "P" Then
            '    If rbtFixedContinuous.SelectedIndex = 0 Then
            '        btnSvcAdd.Enabled = False
            '        btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            '        btnSvcEdit.Enabled = False
            '        btnSvcEdit.ForeColor = System.Drawing.Color.Gray

            '        btnSvcDelete.Enabled = False
            '        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            '    End If
            'End If

            'If txtGS.Text = "P" Then
            '    If rbtFixedContinuous.SelectedIndex = 1 Then
            '        If btnServiceSchedule.Text = "GENERATE" And btnServiceSchedule.Enabled = False Then
            '            btnSvcAdd.Enabled = False
            '            btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            '            btnSvcEdit.Enabled = False
            '            btnSvcEdit.ForeColor = System.Drawing.Color.Gray

            '            btnSvcDelete.Enabled = False
            '            btnSvcDelete.ForeColor = System.Drawing.Color.Gray


            '        End If
            '    End If
            'End If


            'If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
            '    btnSvcAdd.Enabled = False
            '    btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            '    btnSvcEdit.Enabled = False
            '    btnSvcEdit.ForeColor = System.Drawing.Color.Gray

            '    btnSvcDelete.Enabled = False
            '    btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            'End If
            '09.11.21

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            'lblAlertNCR.Text = ex.Message.ToString

            If txtErrorMsg.Text = "Blank WeekDay" Then
                lblAlertNCR.Text = "SELECT 'DAY OF WEEK' FOR ALL WEEKS"
                txtErrorMsg.Text = ""
            Else
                lblAlertNCR.Text = ex.Message.ToString
                txtErrorMsg.Text = ""
            End If

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grvContractDetailNCR_SelectedIndexChanged", lblAlertNCR.Text, "")
            mdlPopupNCR.Show()
            Exit Sub
        End Try


    End Sub

    Protected Sub txtEffectiveDateNCR_TextChanged(sender As Object, e As EventArgs) Handles txtEffectiveDateNCR.TextChanged
        Try
            lblAlertNCR.Text = ""

            If String.IsNullOrEmpty(txtEffectiveDateNCR.Text.Trim) = False Then
                If Convert.ToDateTime(txtEffectiveDateNCR.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                    ''txtAlertStatus.Visible = True
                    lblAlertNCR.Text = "Revision Effective Date cannot be earlier than Contract Start Date " & txtContractStart.Text

                    txtEffectiveDateNCR.Text = ""
                    'txtAgreeValueEdit.Text = 0
                    'txtPercentageChangeAgreeValueEdit.Text = 0
                    'txtNewValue.Text = 0

                    'SqlDSServicesAgreeValueEdit.SelectCommand = ""

                    'grvServiceRecAgreeValueEdit.DataSourceID = "SqlDSServicesAgreeValueEdit"
                    'grvServiceRecAgreeValueEdit.DataBind()
                    mdlPopupNCR.Show()
                    Exit Sub

                    'mdlPopupAgreeValue.Show()
                    'Exit Sub
                End If
            End If


            If Left(txtStatus.Text, 1) = "E" And Left(ddlStatusChSt.Text, 1) = "T" Then '22.06.22
            Else
                If String.IsNullOrEmpty(txtLastPriceChangeDateNCR.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtEffectiveDateNCR.Text.Trim) = False Then
                        If Convert.ToDateTime(txtEffectiveDateNCR.Text.Trim) <= Convert.ToDateTime(txtLastPriceChangeDateNCR.Text.Trim) Then
                            ''txtAlertStatus.Visible = True
                            lblAlertNCR.Text = "Revision Effective Date should be later than the Date of Last Price Change " & txtLastPriceChangeDate.Text
                            txtEffectiveDateNCR.Text = ""
                           
                            mdlPopupNCR.Show()
                            Exit Sub
                        End If
                    End If
                End If
            End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandIsBilled As MySqlCommand = New MySqlCommand

            commandIsBilled.CommandType = CommandType.Text
            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ((BillNo <> '') and (Billno is Not Null)) and ServiceDate > '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "'"
            commandIsBilled.Connection = conn

            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
            Dim dtIsBilled As New DataTable
            dtIsBilled.Load(drIsBilled)

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd"), "SEN-1", "")

            If dtIsBilled.Rows(0)("isBilled") > 0 Then
                lblAlertNCR.Text = "There is/are Billed Services on or after " & txtEffectiveDateNCR.Text & ", please issue a credit note first before you can set " & txtEffectiveDateNCR.Text & " as Revision Date"

                mdlPopupNCR.Show()

                '08.11.22

                sqlDSViewBilledServices.SelectCommand = "Select * from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ((BillNo <> '') and (Billno is Not Null)) and ServiceDate > '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "'"
                sqlDSViewBilledServices.DataBind()

                grdViewBilledServices.DataSourceID = "sqlDSViewBilledServices"
                grdViewBilledServices.DataBind()
                txtEffectiveDateNCR.Text = ""
                mdlViewBilledServices.Show()

                '08.11.22
                Exit Sub
            End If

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd"), "SEN-2", "")
            '17.09.22

         

            'Quoted on 04.05.20

            '13.12.20
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd"), "SEN-3", "")

            ''Start:Check for Service Lock

            'If Left(ddlStatusChSt.Text, 1) = "T" Or Left(ddlStatusChSt.Text, 1) = "E" Then
            Dim sqlstrLocked As String
            sqlstrLocked = ""

            sqlstrLocked = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtEffectiveDateNCR.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim connLocked As MySqlConnection = New MySqlConnection()
            connLocked.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocked.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstrLocked
            commandLocked.Connection = connLocked

            Dim drLocked As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dtLocked As New DataTable
            dtLocked.Load(drLocked)

            If dtLocked.Rows.Count > 0 Then
                If dtLocked.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlertNCR.Visible = True
                    lblAlertNCR.Text = "Service Period is Locked for this Date " & txtEffectiveDateNCR.Text
                    txtEffectiveDateNCR.Text = ""
                    mdlPopupNCR.Show()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
            End If

            connLocked.Close()
            connLocked.Dispose()
            commandLocked.Dispose()
            drLocked.Close()
            'End If

            'End: Check for Service Lock

            '13.12.20

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Error-4", "SEN-4", "")
          

            If rbtFixedContinuous.SelectedIndex = 0 Then
                'If Convert.ToDateTime(txtEffectiveDateNCR.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                '    'txtAlertStatus.Visible = True
                '    lblAlertNCR.Text = "Effective Date cannot be later than Contract End Date " & txtContractEnd.Text
                '    txtEffectiveDate.Text = ""
                '    mdlPopupNCR.Show()
                '    Exit Sub
                'End If
            Else
                'If Convert.ToDateTime(txtEffectiveDateNCR.Text.Trim) > Convert.ToDateTime(txtEndofLastSchedule.Text.Trim) Then
                '    'txtAlertStatus.Visible = True
                '    lblAlertNCR.Text = "Revision Effective Date cannot be later than Contract End Date " & txtEndofLastSchedule.Text
                '    txtEffectiveDateNCR.Text = ""
                '    mdlPopupNCR.Show()
                '    Exit Sub
                'End If
            End If

            ''txtNoofMonth.Text = (Year(txtEndofLastSchedule.Text) - Year(txtContractStart.Text)) * 12 + (Month(txtEndofLastSchedule.Text) - Month(txtContractStart.Text))
            'Dim CurrentYear, currentmonth As String
            'CurrentYear = DateTime.Now.Year.ToString()
            'currentmonth = DateTime.Now.Month.ToString()


            'If Year(txtEffectiveDateNCR.Text) = CurrentYear And Month(txtEffectiveDateNCR.Text) < currentmonth Then
            '    lblAlertNCR.Text = "Revision Effective Date should be within current month "
            '    txtEffectiveDateNCR.Text = ""
            '    mdlPopupNCR.Show()
            '    Exit Sub
            'End If

            'If Year(txtEffectiveDateNCR.Text) < CurrentYear Then
            '    lblAlertNCR.Text = "Revision Effective Date should be within current month "
            '    txtEffectiveDate.Text = ""
            '    mdlPopupNCR.Show()
            '    Exit Sub
            'End If


            '17.09.22

            conn.Close()
            conn.Dispose()
            commandIsBilled.Dispose()
            dtIsBilled.Dispose()
            dtIsBilled.Dispose()
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Error-5", "SEN-5", "")
            If rbtLstDuration.SelectedIndex = 3 Then
                txtEndDateNCR.Text = DateAdd(DateInterval.Year, Val(Me.txtDuration.Text), CDate(txtEffectiveDateNCR.Text))

            ElseIf rbtLstDuration.SelectedIndex = 2 Then
                txtEndDateNCR.Text = DateAdd(DateInterval.Month, Val(Me.txtDuration.Text), CDate(txtEffectiveDateNCR.Text))
            ElseIf rbtLstDuration.SelectedIndex = 1 Then
                txtEndDateNCR.Text = DateAdd(DateInterval.Day, Val(Me.txtDuration.Text) * 7, CDate(txtEffectiveDateNCR.Text))
            ElseIf rbtLstDuration.SelectedIndex = 0 Then
                txtEndDateNCR.Text = DateAdd(DateInterval.Day, Val(Me.txtDuration.Text), CDate(txtEffectiveDateNCR.Text))
            End If
            txtEndDateNCR.Text = DateAdd(DateInterval.Day, -1, CDate(txtEndDateNCR.Text))
            lblFinaliseContractRevisionNCR2.Text = "All services after " & txtEffectiveDateNCR.Text & " will be voided."
            mdlPopupNCR.Show()
        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtEffectiveDateNCR_TextChanged", ex.Message.ToString, "")
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnSvcEditNCR_Click(sender As Object, e As EventArgs) Handles btnSvcEditNCR.Click
        Try
            'MakeSvcDetailNullNCR()
            DisableSvcControlsNCR()
            'MakeSvcNull()
            lblMessageNCR.Text = "ACTION: EDIT SERVICE DETAILS"

            'btnADD.Enabled = False
            'btnADD.ForeColor = System.Drawing.Color.Gray
            'btnEdit.Enabled = False
            'btnEdit.ForeColor = System.Drawing.Color.Gray
            'btnDelete.Enabled = False
            'btnDelete.ForeColor = System.Drawing.Color.Gray



            'btnQuit.Enabled = False
            'btnQuit.ForeColor = System.Drawing.Color.Gray
            btnSvcAddNCR.Enabled = False
            btnSvcAddNCR.ForeColor = System.Drawing.Color.Gray

            txtSvcModeNCR.Text = "EDIT"
            txtContractGroupSelected.Text = ddlContractGrp.Text

            FindLocationsNCR()
            btnSvcSaveScheduleNCR.Text = "SAVE & FINALIZE"

            'gvLocationNCR.DataBind()
            mdlPopupNCR.Show()

        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcEditNCR_Click", ex.Message.ToString, "")
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnZeroValueYesNCR_Click(sender As Object, e As EventArgs) Handles btnZeroValueYesNCR.Click
        svcFinalizeNCR()
    End Sub

    Protected Sub btnCancelYesNCR_Click(sender As Object, e As EventArgs) Handles btnCancelYesNCR.Click
        UpdateEffectiveDateAgreeValueInContractTableNCR()
        mdlPopupNCR.Hide()
        MakeSvcDetailNullNCR()
    End Sub

    Protected Sub btnCancelNoNCR_Click(sender As Object, e As EventArgs) Handles btnCancelNoNCR.Click
        mdlPopupNCR.Show()
    End Sub

    Protected Sub btnFinaliseYesNCR_Click(sender As Object, e As EventArgs) Handles btnFinaliseYesNCR.Click
        svcFinalizeNCR()
        btnServiceSchedule_Click(sender, e)
    End Sub

    Protected Sub txtAgreeValueNCR_TextChanged(sender As Object, e As EventArgs) Handles txtAgreeValueNCR.TextChanged
        Try
            lblAlertNCR.Text = ""

            If Convert.ToDecimal(txtAgreeVal.Text) = 0 Then
                txtEditAgreeValuePercChangeNCR.Text = ((txtAgreeValueNCR.Text) / 1) * 100
            Else
                txtEditAgreeValuePercChangeNCR.Text = ((txtAgreeValueNCR.Text - txtAgreeVal.Text) / txtAgreeVal.Text) * 100
            End If


            'If Convert.ToDecimal(txtPriceDecreaseLimit.Text) <> 0.0 Then
            If Convert.ToDecimal(txtRevisionDecreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtEditAgreeValuePercChangeNCR.Text) < Convert.ToDecimal(txtRevisionDecreaseLimit.Text) Then
                    txtAgreeValueNCR.Text = 0.0
                    txtEditAgreeValuePercChangeNCR.Text = 0.0
                    'txtNewValue.Text = 0.0
                    lblAlertNCR.Text = "Price Decrease Cannot Exceed the Limit of " & txtRevisionDecreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text


                    mdlPopupNCR.Show()
                    Exit Sub
                End If
            End If

            'If Convert.ToDecimal(txtPriceIncreaseLimit.Text) <> 0.0 Then
            If Convert.ToDecimal(txtRevisionIncreaseLimit.Text) <> 0.0 Then
                If Convert.ToDecimal(txtEditAgreeValuePercChangeNCR.Text) > Convert.ToDecimal(txtRevisionIncreaseLimit.Text) Then
                    txtAgreeValueNCR.Text = 0.0
                    txtEditAgreeValuePercChangeNCR.Text = 0.0
                    'txtAgreeValueEdit.Text = 0.0
                    lblAlertNCR.Text = "Price Increase Cannot Exceed the Limit of " & txtRevisionIncreaseLimit.Text & " % for Contract Group " & ddlContractGrp.Text


                    mdlPopupNCR.Show()
                    Exit Sub
                End If
            End If
            mdlPopupNCR.Show()
        Catch ex As Exception
            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtAgreeValueNCR_TextChanged", ex.Message.ToString, "")
            mdlPopupNCR.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnSvcDeleteNCR_Click(sender As Object, e As EventArgs) Handles btnSvcDeleteNCR.Click
        If grvContractDetailNCR.Rows.Count = 1 Then
            lblAlertNCR.Text = "CANNOT BE DELETED.. THERE SHOULD BE AT LEAST 1 SERVICE DETAIL"
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            mdlPopupNCR.Show()
            Exit Sub
        End If

        mdlPopupContractDetailDeleteNCR.Show()
        mdlPopupNCR.Show()
    End Sub


    Private Sub svcDeleteDetailRecordNCR()
        Try


            lblMessageNCR.Text = "ACTION: DELETE CONTRACT DETAILS"
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()



            Dim command2 As MySqlCommand = New MySqlCommand
            command2.CommandType = CommandType.Text

            Dim qry2 As String = "DELETE from tblContractDettemp where Rcno= @Rcno "

            command2.CommandText = qry2
            command2.Parameters.Clear()

            command2.Parameters.AddWithValue("@Rcno", txtRcnoDetail.Text)
            command2.Connection = conn
            command2.ExecuteNonQuery()

            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text

            Dim qry3 As String = "DELETE from tblContractServingTargettemp where SourceSQLId= @OrigCode "

            command3.CommandText = qry3
            command3.Parameters.Clear()

            command3.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
            command3.Connection = conn
            command3.ExecuteNonQuery()


            Dim command4 As MySqlCommand = New MySqlCommand
            command4.CommandType = CommandType.Text

            Dim qry4 As String = "DELETE from tblServiceContractFrequencytemp where SourceSQLId= @OrigCode "

            command4.CommandText = qry4
            command4.Parameters.Clear()

            command4.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
            command4.Connection = conn
            command4.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command2.Dispose()
            command3.Dispose()
            command4.Dispose()
            'UpdateContractHeader()

            'Dim message As String = "alert('Contract Detail is deleted Successfully!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            'btnADD_Click(sender, e)

            'grvContractDetail.DataBind()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

      
        'EnableSvcControls()

        SqlDSContractDetNCR.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDettemp where (1 =1 )   and ContractNo = '" & txtContractNo.Text & "'  order by ServiceId limit 20"

        grvContractDetailNCR.DataSourceID = "SqlDSContractDetNCR"
        grvContractDetailNCR.DataBind()

        'SqlDSContractDet.DataBind()
        'grvContractDetail.DataBind()
        'MakeSvcNull()
        MakeSvcDetailNullNCR()
        UpdateContractHeaderNCR()
        lblMessageNCR.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        mdlPopupNCR.Show()
        mdlPopupContractDetailDeleteNCR.Hide()

            btnSvcEditNCR.Enabled = False
            btnSvcEditNCR.ForeColor = System.Drawing.Color.Gray

            btnSvcSaveScheduleNCR.Enabled = True
            btnSvcSaveScheduleNCR.ForeColor = System.Drawing.Color.Black

        Catch ex As Exception

            lblAlertNCR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcDelete_Click", ex.Message.ToString, "")
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            mdlPopupNCR.Show()
            Exit Sub
        End Try
        'End If
    End Sub

    Protected Sub btnDetailDeleteOKNCR_Click(sender As Object, e As EventArgs) Handles btnDetailDeleteOKNCR.Click
        svcDeleteDetailRecordNCR()
    End Sub

    Protected Sub btnFinaliseNoNCR_Click(sender As Object, e As EventArgs) Handles btnFinaliseNoNCR.Click
        mdlPopupNCR.Show()
    End Sub

   

    Protected Sub btnZeroValueNoNCR_Click(sender As Object, e As EventArgs) Handles btnZeroValueNoNCR.Click
        mdlPopupNCR.Show()
    End Sub

    Protected Sub txtTeam_TextChanged(sender As Object, e As EventArgs) Handles txtTeam.TextChanged

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim cmdTeam As MySqlCommand = New MySqlCommand

        cmdTeam.CommandType = CommandType.Text
        cmdTeam.CommandText = "SELECT TeamID, TeamName, InChargeID, Supervisor FROM tblteam where TeamID ='" & txtTeam.Text.Trim & "'"
        cmdTeam.Connection = conn

        Dim drTeam As MySqlDataReader = cmdTeam.ExecuteReader()
        Dim dtTeam As New DataTable
        dtTeam.Load(drTeam)


        If dtTeam.Rows.Count > 0 Then

            txtTeam.Text = dtTeam.Rows(0)("TeamID").ToString
            txtTeamIncharge.Text = dtTeam.Rows(0)("TeamName").ToString
            txtServiceBy.Text = dtTeam.Rows(0)("InChargeID").ToString
            txtSupervisor.Text = dtTeam.Rows(0)("Supervisor").ToString
            'Else
            '    BtnTeam_Click(sender, e)
        End If
    End Sub

    Protected Sub btnDisplayServiceRecords_Click(sender As Object, e As EventArgs) Handles btnDisplayServiceRecords.Click
        Try

            If chkLatestSetofSchedule.Checked = True Then

                Session.Remove("accountid")
                Session.Remove("lblaccountid")
                Session("servicefrom") = "contract"


                If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                    Session("lblaccountid") = lblAccountIdContact1.Text
                End If

                If String.IsNullOrEmpty(txtContractNo.Text) = False Then

                    Session("ServiceSearchFromDate") = txtDisplayLatestServiceRecordsFrom.Text
                    'Session("ServiceSearchToDate") = txtDisplayLatestServiceRecordsTo.Text
                    Session("ServiceSearchToDate") = ""

                    Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlcontract") = txt.Text
                    Session("rcno") = txtRcno.Text
                    Session("accountid") = txtAccountId.Text
                    Session("CustName") = txtCustName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = ddlCompanyGrp.Text

                    Session("Scheduler") = ddlScheduler.Text
                    Session("Team") = txtTeam.Text
                    Session("InCharge") = txtTeamIncharge.Text
                    Session("ServiceBy") = txtServiceBy.Text
                    Session("Supervisor") = txtSupervisor.Text

                    Session("ScheduleType") = ddlScheduleType.Text
                    Session("ContractStartDate") = txtContractStart.Text
                    Session("ContractEndDate") = txtContractEnd.Text
                    Session("ActualEnd") = txtActualEnd.Text


                    ''
                    Session("billaddress1") = txtbilladdress1session.Text
                    Session("billstreet") = txtbillstreetsession.Text
                    Session("billbuilding") = txtbillbuildingsession.Text
                    Session("billcountry") = txtbillcountrysession.Text
                    Session("billpostal") = txtbillpostalsession.Text

                    Session("industry") = txtIndustrySession.Text
                    Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
                    Session("contractgroup") = txtContractGroupSession.Text
                    Session("companygroup") = txtCompanyGroupSession.Text
                    Session("salesman") = txtSalesmanSession.Text

                    'txtCustName.Text = Session("custname")
                    'txtContactPerson.Text = Session("contactperson")
                    Session("conpermobile") = txtConPerMobile.Text
                    Session("acctcode") = txtAccCode.Text
                    Session("telephone") = txtTelephone.Text
                    Session("fax") = txtFax.Text
                    Session("offpostal") = txtPostal.Text
                    Session("sevaddress") = txtOfficeAddress.Text
                    Session("locategrp") = ddlLocateGrp.Text
                    Session("salesman") = ddlSalesman.Text

                    Session("contracttype") = ddlContactType.Text
                    Session("inactive") = chkInactive.Checked
                    ''
                    InsertIntoTblWebEventLog(txtCreatedBy.Text, "Contract", Session("ContractStartDate").ToString, Session("ContractEndDate"))
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Service.aspx", False)
            End If


            If chkSelectedServiceRecords.Checked = True Then

                If String.IsNullOrEmpty(txtDisplaySelectedServiceRecordsFrom.Text) = True Then
                    lblAlertDisplayServiceRecords.Text = "Please Enter Service From Date"
                    mdlDisplayServiceRecords.Show()
                    Exit Sub
                End If

                If String.IsNullOrEmpty(txtDisplaySelectedServiceRecordsTo.Text) = True Then
                    lblAlertDisplayServiceRecords.Text = "Please Enter Service To Date"
                    mdlDisplayServiceRecords.Show()
                    Exit Sub
                End If

                Session.Remove("accountid")
                Session.Remove("lblaccountid")
                Session("servicefrom") = "contract"


                If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                    Session("lblaccountid") = lblAccountIdContact1.Text
                End If

                If String.IsNullOrEmpty(txtContractNo.Text) = False Then

                    Session("ServiceSearchFromDate") = txtDisplaySelectedServiceRecordsFrom.Text
                    Session("ServiceSearchToDate") = txtDisplaySelectedServiceRecordsTo.Text

                    Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlcontract") = txt.Text
                    Session("rcno") = txtRcno.Text
                    Session("accountid") = txtAccountId.Text
                    Session("CustName") = txtCustName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = ddlCompanyGrp.Text

                    Session("Scheduler") = ddlScheduler.Text
                    Session("Team") = txtTeam.Text
                    Session("InCharge") = txtTeamIncharge.Text
                    Session("ServiceBy") = txtServiceBy.Text
                    Session("Supervisor") = txtSupervisor.Text

                    Session("ScheduleType") = ddlScheduleType.Text
                    Session("ContractStartDate") = txtContractStart.Text
                    Session("ContractEndDate") = txtContractEnd.Text
                    Session("ActualEnd") = txtActualEnd.Text


                    ''
                    Session("billaddress1") = txtbilladdress1session.Text
                    Session("billstreet") = txtbillstreetsession.Text
                    Session("billbuilding") = txtbillbuildingsession.Text
                    Session("billcountry") = txtbillcountrysession.Text
                    Session("billpostal") = txtbillpostalsession.Text

                    Session("industry") = txtIndustrySession.Text
                    Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
                    Session("contractgroup") = txtContractGroupSession.Text
                    Session("companygroup") = txtCompanyGroupSession.Text
                    Session("salesman") = txtSalesmanSession.Text

                    'txtCustName.Text = Session("custname")
                    'txtContactPerson.Text = Session("contactperson")
                    Session("conpermobile") = txtConPerMobile.Text
                    Session("acctcode") = txtAccCode.Text
                    Session("telephone") = txtTelephone.Text
                    Session("fax") = txtFax.Text
                    Session("offpostal") = txtPostal.Text
                    Session("sevaddress") = txtOfficeAddress.Text
                    Session("locategrp") = ddlLocateGrp.Text
                    Session("salesman") = ddlSalesman.Text

                    Session("contracttype") = ddlContactType.Text
                    Session("inactive") = chkInactive.Checked
                    ''

                    InsertIntoTblWebEventLog(txtCreatedBy.Text, "Contract", Session("ContractStartDate").ToString, Session("ContractEndDate"))
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Service.aspx", False)
            End If

            If chkAllServiceRecords.Checked = True Then
                Session.Remove("accountid")
                Session.Remove("lblaccountid")
                Session("servicefrom") = "contract"


                If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                    Session("lblaccountid") = lblAccountIdContact1.Text
                End If

                If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                    Session("ServiceSearchFromDate") = ""
                    Session("ServiceSearchToDate") = ""

                    Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlcontract") = txt.Text
                    Session("rcno") = txtRcno.Text
                    Session("accountid") = txtAccountId.Text
                    Session("CustName") = txtCustName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = ddlCompanyGrp.Text

                    Session("Scheduler") = ddlScheduler.Text
                    Session("Team") = txtTeam.Text
                    Session("InCharge") = txtTeamIncharge.Text
                    Session("ServiceBy") = txtServiceBy.Text
                    Session("Supervisor") = txtSupervisor.Text

                    Session("ScheduleType") = ddlScheduleType.Text
                    Session("ContractStartDate") = txtContractStart.Text
                    Session("ContractEndDate") = txtContractEnd.Text
                    Session("ActualEnd") = txtActualEnd.Text


                    ''
                    Session("billaddress1") = txtbilladdress1session.Text
                    Session("billstreet") = txtbillstreetsession.Text
                    Session("billbuilding") = txtbillbuildingsession.Text
                    Session("billcountry") = txtbillcountrysession.Text
                    Session("billpostal") = txtbillpostalsession.Text

                    Session("industry") = txtIndustrySession.Text
                    Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
                    Session("contractgroup") = txtContractGroupSession.Text
                    Session("companygroup") = txtCompanyGroupSession.Text
                    Session("salesman") = txtSalesmanSession.Text

                    'txtCustName.Text = Session("custname")
                    'txtContactPerson.Text = Session("contactperson")
                    Session("conpermobile") = txtConPerMobile.Text
                    Session("acctcode") = txtAccCode.Text
                    Session("telephone") = txtTelephone.Text
                    Session("fax") = txtFax.Text
                    Session("offpostal") = txtPostal.Text
                    Session("sevaddress") = txtOfficeAddress.Text
                    Session("locategrp") = ddlLocateGrp.Text
                    Session("salesman") = ddlSalesman.Text

                    Session("contracttype") = ddlContactType.Text
                    Session("inactive") = chkInactive.Checked
                    ''

                    InsertIntoTblWebEventLog(txtCreatedBy.Text, "Contract", Session("ContractStartDate").ToString, Session("ContractEndDate"))
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Service.aspx", False)
            End If
        Catch ex As Exception

            lblAlertDisplayServiceRecords.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDisplayServiceRecords_Click", ex.Message.ToString, "")
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            mdlDisplayServiceRecords.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub chkSelectedServiceRecords_CheckedChanged(sender As Object, e As EventArgs) Handles chkSelectedServiceRecords.CheckedChanged
        txtDisplayLatestServiceRecordsFrom.Text = ""
        txtDisplayLatestServiceRecordsTo.Text = ""

        txtDisplaySelectedServiceRecordsFrom.Focus()
        mdlDisplayServiceRecords.Show()
    End Sub

    Protected Sub chkLatestSetofSchedule_CheckedChanged(sender As Object, e As EventArgs) Handles chkLatestSetofSchedule.CheckedChanged

        ''''
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command As MySqlCommand = New MySqlCommand

        command.CommandType = CommandType.Text

        command.CommandText = "SELECT ServiceStart , ServiceEnd , CreatedOn FROM tbwserviceschedulegenerate where ContractNo ='" & txtContractNo.Text & "' and Generated = True and IsError = False  order by rcno desc limit 1"
        command.Connection = conn

        Dim dr As MySqlDataReader = command.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then

            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text
            'command1.CommandText = "SELECT max(ServiceDate) as LastService, min(ServiceDate) as FirstService, count(RecordNo) as TotalService FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("yyyy-MM-dd") & "'"
            'command1.Connection = conn


            'Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            'Dim dt1 As New DataTable
            'dt1.Load(dr1)

            'If dt1.Rows.Count > 0 Then
            txtDisplayLatestServiceRecordsFrom.Text = Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy")
            txtDisplayLatestServiceRecordsTo.Text = Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy")
            'chkLatestSchedule.Text = "Latest List of Schedule (" & Convert.ToDateTime(dt1.Rows(0)("FirstService")).ToString("dd/MM/yyyy") & " to " & Convert.ToDateTime(dt1.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt1.Rows(0)("TotalService") & " Records)"
            'End If
        Else

            ''13.01.22


            'Dim command2 As MySqlCommand = New MySqlCommand

            'command2.CommandType = CommandType.Text

            'command2.CommandText = "SELECT max(ServiceDate) as LastService, min(ServiceDate) as FirstService, count(RecordNo) as TotalService FROM tblservicerecord where ContractNo ='" & txtContractNo.Text & "' and ServiceDate between '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtLastServiceDate.Text).ToString("yyyy-MM-dd") & "'"
            'command2.Connection = conn


            'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then

            '        txtDisplayLatestServiceRecordsFrom.Text = Convert.ToDateTime(dt2.Rows(0)("FirstService")).ToString("dd/MM/yyyy")
            '        txtDisplayLatestServiceRecordsTo.Text = Convert.ToDateTime(dt2.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt2.Rows(0)("TotalService") & " Records"
            '        'chkLatestSchedule.Text = "Latest List of Schedule (" & Convert.ToDateTime(dt2.Rows(0)("FirstService")).ToString("dd/MM/yyyy") & " to " & Convert.ToDateTime(dt2.Rows(0)("LastService")).ToString("dd/MM/yyyy") & " - " & dt2.Rows(0)("TotalService") & " Records)"
            'End If


            ''13.02.22

        End If


        conn.Close()
        conn.Dispose()

        ''''
        txtDisplaySelectedServiceRecordsFrom.Text = ""
        txtDisplaySelectedServiceRecordsTo.Text = ""

        'txtDisplayLatestServiceRecordsFrom.Focus()
        mdlDisplayServiceRecords.Show()
    End Sub

    Protected Sub btnCloseViewBilledServices_Click(sender As Object, e As EventArgs) Handles btnCloseViewBilledServices.Click
        mdlPopupNCR.Show()
    End Sub




    Private Sub UpdateAgreeValueChSt(lUpdateType As String)
        Try

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValueChSt", lUpdateType, txtContractNo.Text)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim cmdServiceDescription As MySqlCommand = New MySqlCommand

            cmdServiceDescription.CommandType = CommandType.Text
            cmdServiceDescription.CommandText = "select ServiceDescription from tblContract where ContractNo = '" & txtContractNo.Text & "'"
            cmdServiceDescription.Connection = conn

            Dim drServiceDescription As MySqlDataReader = cmdServiceDescription.ExecuteReader()
            Dim dtServiceDescription As New DataTable
            dtServiceDescription.Load(drServiceDescription)

            If Not IsDBNull(dtServiceDescription.Rows(0)("ServiceDescription")) Then
                If String.IsNullOrEmpty(dtServiceDescription.Rows(0)("ServiceDescription")) = False Then
                    txtServiceDescriptionCons.Text = dtServiceDescription.Rows(0)("ServiceDescription")
                Else
                    txtServiceDescriptionCons.Text = ""
                End If
            Else
                txtServiceDescriptionCons.Text = ""
            End If


            Dim commandUpdateServiceRecord As MySqlCommand = New MySqlCommand


            FindLastRcnoContractpricehistory()
            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.StoredProcedure
            'command.CommandText = "UpdateAgreeValueNew2"
            command.CommandText = "UpdateAgreeValueNew3"
            command.Parameters.Clear()


            If lUpdateType = "Terminate" And txtIsTerminationExists.Text <> "YV" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                If txtFutureDated.Text = "Y" Then
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                Else
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If
                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationTypeChSt.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

            End If

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "3 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            If lUpdateType = "Terminate" And txtIsTerminationExists.Text = "YV" Then

                command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
                command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
                command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
                command.Parameters.AddWithValue("@pr_AgreeValue", 0.0)
                command.Parameters.AddWithValue("@pr_ValuePerMonth", 0.0)

                command.Parameters.AddWithValue("@pr_ServiceAmt", 0.0)
                command.Parameters.AddWithValue("@pr_AmtBalance", 0.0)
                command.Parameters.AddWithValue("@pr_PortFolioValue", 0.0)
                command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                If txtFutureDated.Text = "Y" Then
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                Else
                    If Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") Then
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                    Else
                        command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                    End If
                    'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).AddDays(1).ToString("yyyy-MM-dd"))
                End If

                'command.Parameters.AddWithValue("@pr_Date", Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@pr_Comments", "")
                command.Parameters.AddWithValue("@pr_UpdateType", lUpdateType)
                command.Parameters.AddWithValue("@pr_RcnoFirstContractPriceHistory", txtRcnoFirstContractPriceHistory.Text)
                command.Parameters.AddWithValue("@pr_ServiceDescription", txtServiceDescriptionCons.Text)

                command.Parameters.AddWithValue("@pr_AgreementType", ddlAgreementType.Text)
                command.Parameters.AddWithValue("@pr_TerminationType", txtTerminationTypeChSt.Text)

                'command.Parameters.AddWithValue("@pr_IncludeInPortfolio", txtIncludeinPortfolio.Text)
                command.Connection = conn
                command.ExecuteScalar()

                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "4 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)

            End If



            command.Dispose()



            '''''''''Price History
            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", "Update-30", txtContractNo.Text)

            If txtMode.Text = "NEW" Then
                If lUpdateType = "New" Then


                    If txtModeRenew.Text = "R" Then

                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " Select '" & txtContractNo.Text.Trim & "', '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " DistributionSummary, '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistributionSummary where ContractNo ='" & txtOContract.Text & "' order by DistributionDate desc limit 1"

                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()

                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistribution = qryContractValueDistribution + " Select '" & txtContractNo.Text.Trim & "', '" & ddlContractGrp.Text.Trim & "',  Percentage, "
                        qryContractValueDistribution = qryContractValueDistribution + " CalculatedValue, '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistribution = qryContractValueDistribution + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistribution where ContractNo ='" & txtOContract.Text & "' and DistributionDate = (Select max(DistributionDate) from tblContractValueDistribution where ContractNo ='" & txtOContract.Text & "')"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()


                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"

                    ElseIf txtModeRenew.Text = "REV" Then
                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " Select '" & txtContractNo.Text.Trim & "', '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " DistributionSummary, '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistributionSummary where ContractNo ='" & txtPrevContract.Text & "'  order by DistributionDate desc limit 1"


                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()


                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                        qryContractValueDistribution = qryContractValueDistribution + " Select '" & txtContractNo.Text.Trim & "', '" & ddlContractGrp.Text.Trim & "',  Percentage, "
                        qryContractValueDistribution = qryContractValueDistribution + " CalculatedValue, '" & Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") & "', '" & txtContractDate.Text + txtContractNo.Text & "', "
                        qryContractValueDistribution = qryContractValueDistribution + " '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "', '" & Session("UserID") & "', '" & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") & "' from tblContractValueDistribution where ContractNo ='" & txtPrevContract.Text & "' and DistributionDate = (Select max(DistributionDate) from tblContractValueDistribution where ContractNo ='" & txtPrevContract.Text & "')"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()

                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"

                    Else
                        Dim commandContractValueDistributionSummary As MySqlCommand = New MySqlCommand
                        commandContractValueDistributionSummary.CommandType = CommandType.Text

                        Dim qryContractValueDistributionSummary As String = "INSERT INTO tblContractValueDistributionSummary(ContractNo, DistributionDate, DistributionSummary, BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "  CreatedBy, CreatedOn,"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " LastModifiedBy, LastModifiedOn)"
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + " VALUES(@ContractNo,   @DistributionDate,  @DistributionSummary, @BatchNo, "
                        qryContractValueDistributionSummary = qryContractValueDistributionSummary + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                        commandContractValueDistributionSummary.CommandText = qryContractValueDistributionSummary
                        commandContractValueDistributionSummary.Parameters.Clear()

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@DistributionSummary", ddlContractGrp.Text.Trim & ": 100%")
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandContractValueDistributionSummary.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistributionSummary.Connection = conn
                        commandContractValueDistributionSummary.ExecuteNonQuery()


                        Dim commandContractValueDistribution As MySqlCommand = New MySqlCommand
                        commandContractValueDistribution.CommandType = CommandType.Text

                        Dim qryContractValueDistribution As String = "INSERT INTO tblContractValueDistribution(ContractNo, ContractGroup, Percentage,CalculatedValue, DistributionDate, BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "  CreatedBy, CreatedOn,"
                        qryContractValueDistribution = qryContractValueDistribution + " LastModifiedBy, LastModifiedOn)"

                        qryContractValueDistribution = qryContractValueDistribution + " VALUES(@ContractNo, @ContractGroup, @Percentage, @CalculatedValue,  @DistributionDate,  @BatchNo, "
                        qryContractValueDistribution = qryContractValueDistribution + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                        commandContractValueDistribution.CommandText = qryContractValueDistribution
                        commandContractValueDistribution.Parameters.Clear()

                        commandContractValueDistribution.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                        commandContractValueDistribution.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.Text.Trim)
                        commandContractValueDistribution.Parameters.AddWithValue("@Percentage", 100)
                        commandContractValueDistribution.Parameters.AddWithValue("@CalculatedValue", txtAgreeVal.Text)
                        commandContractValueDistribution.Parameters.AddWithValue("@DistributionDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                        commandContractValueDistribution.Parameters.AddWithValue("@BatchNo", txtContractDate.Text + txtContractNo.Text)

                        commandContractValueDistribution.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        commandContractValueDistribution.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        commandContractValueDistribution.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                        commandContractValueDistribution.Connection = conn
                        commandContractValueDistribution.ExecuteNonQuery()

                        btnContractGroupDistribution.Text = "DISTRIBUTION [1]"
                    End If



                End If
            End If

            '18.01.22
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "5 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)


            '28.07.22

            Dim commandHistory As MySqlCommand = New MySqlCommand

            commandHistory.CommandType = CommandType.Text
            commandHistory.CommandText = "SELECT count(ContractNo) as HistoryCount FROM tblcontractpricehistory where ContractNo= '" & txtContractNo.Text & "' and Void = False"
            commandHistory.Connection = conn

            Dim drHistory As MySqlDataReader = commandHistory.ExecuteReader()
            Dim dtHistory As New DataTable
            dtHistory.Load(drHistory)

            If dtHistory.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnHistory.Text = "PRICE HISTORY [" & Val(dtHistory.Rows(0)("HistoryCount").ToString).ToString & "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            commandHistory.Dispose()
            dtHistory.Dispose()
            drHistory.Dispose()
            '''''''''''''''''''
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "6 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)


            '28.07.22
            conn.Close()
            conn.Dispose()

            If String.IsNullOrEmpty(txtAgreeValueEdit.Text) = True Then
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "7 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                EventLog_InsertL(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "8 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            Else
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "91 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
                EventLog_InsertL(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE - " & lUpdateType, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)
                'mdlPopupAgreeValue.Hide()
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "10 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)
            End If
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "11 : " & lUpdateType, txtIsTerminationExists.Text, txtContractNo.Text)

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGREMARKS", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValueChSt", ex.Message.ToString, txtContractNo.Text)
            'lblAlertEditAgreeValue.Text = ex.Message.ToString

            'ModalPopupExtender5.Show()
            Exit Sub
        End Try
    End Sub

    Protected Sub btnDiffContGrpYesNCR_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYesNCR.Click
        svcSaveNCR()
    End Sub

    Protected Sub btnDiffContGrpYesSchdlNCR_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYesSchdlNCR.Click

        'If btnSvcSaveScheduleNCR.Text = "SAVE & FINALIZE" Then
        '    If txtSvcModeNCR.Text = "NEW" Or txtSvcModeNCR.Text = "EDIT" Then
        '        If txtServiceId.Text <> ddlContractGrp.Text Then
        '            Exit Sub
        '        End If

        '        btnSvcSaveNCR_Click(sender, e)

        '        If txtErrNCR.Text = "Y" Then
        '            Exit Sub
        '        End If
        '    End If
        'End If

        txtServiceId.Text = ddlContractGrp.Text

    End Sub

    Protected Sub ddlAgreementType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlAgreementType.SelectedIndexChanged
        FindContractCode()
    End Sub

    Protected Sub btnDiffContGrpNoNCR_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpNoNCR.Click

    End Sub

    Protected Sub gvItemsIssued_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles gvItemsIssued.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvItemsIssued, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT", "gvItemsIssued_RowDataBound", ex.Message.ToString, txtRcno.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub gvItemsIssued_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvItemsIssued.SelectedIndexChanged
        InsertIntoTblWebEventLog("CONTRACT", "gvItemsIssued", "1", "1")

        Dim editindex As Integer = gvItemsIssued.SelectedIndex
        InsertIntoTblWebEventLog("CONTRACT", "gvItemsIssued", editindex.ToString, "2")


        Dim ItemID As String = Server.HtmlDecode(gvItemsIssued.SelectedRow.Cells(1).Text)
        InsertIntoTblWebEventLog("CONTRACT", "gvItemsIssued", gvItemsIssued.SelectedRow.Cells(1).Text, "3")
        InsertIntoTblWebEventLog("CONTRACT", "gvItemsIssued", ItemID, "4")

        sqlDSItemsIssuedDetail.SelectCommand = "select tblservicerecordissueditem.rcno,ServiceDate,tblservicerecordissueditem.RecordNo as ServiceRecordNo,Qty,tblservicerecordissueditem.Remarks FROM tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' and tblservicerecordissueditem.ItemID = '" & ItemID & "' order by ServiceDate desc"
        sqlDSItemsIssuedDetail.DataBind()
        gvItemsIssuedDetail.DataBind()
    End Sub
End Class

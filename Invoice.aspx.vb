Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Web.UI.WebControls
Imports System.Web
Imports System.IO
Imports System.Net
Imports System.Text
Imports NPOI.HSSF.UserModel
Imports NPOI.SS.UserModel
Imports NPOI.SS.Util
Imports NPOI.XSSF.UserModel
Imports System.Globalization
Imports System.Threading
Imports System.Drawing

Imports Microsoft.VisualBasic
Imports System
Imports System.Collections
Imports System.ComponentModel
Imports System.Reflection

Imports System.Web.Services
Imports System.Net.Http
Imports System.Net.Http.Headers
Imports System.Security.Cryptography
Imports System.Web.Script.Serialization
Imports System.Security.Cryptography.X509Certificates
Imports System.Threading.Tasks
Imports EInvoicing.EInvoice
Imports Microsoft.IdentityModel.Clients.ActiveDirectory
Imports Newtonsoft.Json
Imports Newtonsoft.Json.Serialization




Partial Class Invoice
    Inherits System.Web.UI.Page
    Public rcno As String
    Private Shared GridSelected As String = String.Empty
    Private Shared gScheduler, gddlvalue As String
    'Public conn As MySqlConnection = New MySqlConnection()
    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String
    'Public rcno As String

    Public TotDetailRecords As Integer

    Dim gSeq As String
    Dim gServiceDate As Date

    Dim rowdeleted As String
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer

    Dim mode As String
    Dim vStrStatus As String

    Public HasDuplicateServiceRecord As Boolean
    'Public HasDuplicateLocaion As Boolean
    'Public HasDuplicateServices As Boolean
    'Public HasDuplicateFrequency As Boolean

    Public xgrvBillingDetails As GridViewRow

    Public lGLCode As String
    Public lGLDescription As String
    Public lCreditAmount As Decimal

    Public gContractNos As String
    Public gTargetIds As String

    Public gBillNo As String
    Dim rowIndex As Integer

    Public gNetPrice As Decimal
    Public tot As Decimal = 0

    Public IsSuccess As Boolean
    Public isInPage As Boolean = False
    Public Message As String = String.Empty
    ' To store the Error or Message

    Private Word As Microsoft.Office.Interop.Word.ApplicationClass
    ' The Interop Object for Word
    Private Excel As Microsoft.Office.Interop.Excel.ApplicationClass
    ' The Interop Object for Excel
    Private Unknown As Object = Type.Missing
    ' For passing Empty values
    Public Enum StatusType
        SUCCESS
        FAILED
    End Enum
    ' To Specify Success or Failure Types
    Public Status As StatusType
    Shared random As New Random()

    Protected Sub Page_Init(sender As Object, e As EventArgs) Handles Me.Init
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1))
        Response.Cache.SetNoStore()

    End Sub

    Function TruncateDecimal(value As Decimal, precision As Integer) As Decimal
        Dim stepper As Decimal = Math.Pow(10, precision)
        Dim tmp As Decimal = Math.Truncate(stepper * value)
        Return tmp / stepper
    End Function


    Private Sub FindGSTPct()
        Try
            Dim sql As String

            sql = ""

            'sql = "Select GSTRate from tblperiod where GStType = '" & txtDefaultTaxCode.Text & "' and AccountingPeriod = '" & txtBillingPeriod.Text & "'"

            If String.IsNullOrEmpty(txtGST.Text) = True Then
                sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Else
                sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtGST.Text & "'"
            End If



            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandGSTPct As MySqlCommand = New MySqlCommand
            commandGSTPct.CommandType = CommandType.Text
            commandGSTPct.CommandText = sql
            commandGSTPct.Connection = conn

            Dim drGSTPct As MySqlDataReader = commandGSTPct.ExecuteReader()

            Dim dtGSTPct As New DataTable
            dtGSTPct.Load(drGSTPct)

            If dtGSTPct.Rows.Count > 0 Then
                If dtGSTPct.Rows(0)("GSTRate").ToString <> "" Then : txtTaxRatePct.Text = dtGSTPct.Rows(0)("GSTRate").ToString : End If
                txtGST1.Text = txtTaxRatePct.Text
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FindGSTPct", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub


    Private Sub FindDefaultGSTPct()
        Try
            Dim sql As String

            sql = ""

            'sql = "Select GSTRate from tblperiod where GStType = '" & txtDefaultTaxCode.Text & "' and AccountingPeriod = '" & txtBillingPeriod.Text & "'"


            sql = "Select TaxRatePct as GSTRate from tblTaxType where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandGSTPct As MySqlCommand = New MySqlCommand
            commandGSTPct.CommandType = CommandType.Text
            commandGSTPct.CommandText = sql
            commandGSTPct.Connection = conn

            Dim drGSTPct As MySqlDataReader = commandGSTPct.ExecuteReader()

            Dim dtGSTPct As New DataTable
            dtGSTPct.Load(drGSTPct)

            If dtGSTPct.Rows.Count > 0 Then
                If dtGSTPct.Rows(0)("GSTRate").ToString <> "" Then : txtDefaultTaxRate.Text = dtGSTPct.Rows(0)("GSTRate").ToString : End If

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CNDN - " + Session("UserID"), "FindGSTPct", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub


    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            txtPostStatus.Attributes.Add("readonly", "readonly")
            txtInvoiceNo.Attributes.Add("readonly", "readonly")

            'txtAccountName.Attributes.Add("readonly", "readonly")
            'txtBillAddress.Attributes.Add("readonly", "readonly")
            'txtBillBuilding.Attributes.Add("readonly", "readonly")
            'txtBillStreet.Attributes.Add("readonly", "readonly")
            'txtBillCountry.Attributes.Add("readonly", "readonly")
            'txtBillPostal.Attributes.Add("readonly", "readonly")
            'txtTotal.Attributes.Add("readonly", "readonly")
            txtTaxRatePct.Attributes.Add("readonly", "readonly")

            txtBillingPeriod.Attributes.Add("readonly", "readonly")
            txtCompanyGroup.Attributes.Add("readonly", "readonly")
            txtAccountType.Attributes.Add("readonly", "readonly")
            txtInvoiceAmount.Attributes.Add("readonly", "readonly")
            txtDiscountAmount.Attributes.Add("readonly", "readonly")
            txtAmountWithDiscount.Attributes.Add("readonly", "readonly")

            txtGSTAmount.Attributes.Add("readonly", "readonly")
            txtNetAmount.Attributes.Add("readonly", "readonly")

            txtCreditDays.Attributes.Add("readonly", "readonly")
            txtDueDate.Attributes.Add("readonly", "readonly")
            txtInvoiceDate.Attributes.Add("readonly", "readonly")
            txtInvoiceSchedule.Attributes.Add("readonly", "readonly")

            txtAccountIdBillingQR.Attributes.Add("readonly", "readonly")
            txtAccountNameQR.Attributes.Add("readonly", "readonly")
            txtRecordNoQR.Attributes.Add("readonly", "readonly")
            txtBankIDQR.Attributes.Add("readonly", "readonly")
            txtReceiptNoQR.Attributes.Add("readonly", "readonly")


            txtTotalServiceSelected.Attributes.Add("readonly", "readonly")
            txtTotalInvoiceSelected.Attributes.Add("readonly", "readonly")
            'txtDueDate.Attributes.Add("readonly", "readonly")

            txtGST1.Attributes.Add("readonly", "readonly")

            txtClientNameII.Attributes.Add("readonly", "readonly")


            txtLocation.Attributes.Add("disabled", "true")
            'btnTop.Attributes.Add("onclick", "javascript:scroll(0,0);return false;")

            btnTop.Attributes.Add("onclick", "<script> ResetScrollPosition();</Script>")

            'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            'grvBillingDetailsNew.DataBind()
            'updPanelInvoice.Update()


            If Not Page.IsPostBack Then
                mdlPopUpClient.Hide()
                mdlPopupLocation.Hide()
                mdlImportServices.Hide()
                txtDuplicateServiceRecord.Text = "N"
                tb1.ActiveTabIndex = 0
                MakeMeNull()
                DisableControls()
                EnableNotesControls()
                txtSearch1Status.Text = "O,P"

                txtGroupAuthority.Text = Session("SecGroupAuthority")
                txtCreatedBy.Text = Session("userid")
                'FindLocation()
                Dim Query As String = ""

                Query = "SELECT companygroup FROM tblcompanygroup order by companygroup"
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrp)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpSearch)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpII)

                'Query = "Select SettleType from tblsettletype where DefaultBank is not null or DefaultBank <> ''"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    Query = "Select SettleType from tblsettletype where ((DefaultBank is not null) or (DefaultBank <> '')) and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') order by SettleType"
                Else
                    Query = "Select SettleType from tblsettletype where ((DefaultBank is not null) or (DefaultBank <> '')) order by sortorder"
                End If
                PopulateDropDownList(Query, "SettleType", "SettleType", ddlPaymentModeQR)


                Query = "Select StaffID from tblStaff where Status = 'O' and Roles <> 'TECHNICAL'"
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchEditedBy)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchCreatedBy)

                Query = "Select concat(COACode, ' - ', Description) as CCode from tblChartofAccounts where ((GLType is null) or (GLType <> 'BANK')) order by COACode"
                PopulateDropDownList(Query, "CCode", "CCode", ddlCOACode)

                'Query = "Select TaxType from tbltaxtype  order by taxtype"
                Query = "Select TaxType from tbltaxtype where ARIN = True  order by taxtype"
                PopulateDropDownList(Query, "TaxType", "TaxType", txtGST)

                Query = "SELECT Terms FROM tblTerms ORDER BY Seq"
                PopulateDropDownList(Query, "Terms", "Terms", ddlCreditTerms)

                Query = "SELECT StaffId FROM tblstaff where roles= 'SALES MAN' and Status = 'O'  ORDER BY STAFFID"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanBilling)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanEdit)

                Query = "SELECT contractgroup FROM tblcontractgroup where Active = 'Y' ORDER BY contractgroup"
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupBilling)
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroup)
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlSearchContractGroup)

                Query = "SELECT contractgroup FROM tblcontractgroup ORDER BY contractgroup"
                'PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupBilling)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroup)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlSearchContractGroup)

                Query = "SELECT Frequency FROM tblServiceFrequency order by Frequency"
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlServiceFrequency)


                Query = "SELECT Frequency FROM tblFrequency  order by Frequency "
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFrequency)

                SqlDSGL.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts order by COACode"
                SqlDSGL.DataBind()

                'Query = "SELECT industry FROM tblindustry ORDER BY industry"
                'PopulateDropDownList(Query, "industry", "industry", ddlServiceFrequency)


                'Query = "SELECT Frequency FROM tblFrequency  order by Frequency "
                'PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFrequency)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim lBankId As String = ""

                Dim sqlBank As String
                sqlBank = ""
                sqlBank = "Select DefaultBank from tblSettleType where SettleType = '" & ddlPaymentModeQR.Text & "'"

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = sqlBank
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()

                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("DefaultBank").ToString <> "" Then : lBankId = dt2.Rows(0)("DefaultBank").ToString : End If
                End If
                'conn.Close()
                'Dim Query As String

                ddlBankCodeQR.Items.Clear()
                ddlBankCodeQR.Items.Add("--SELECT--")

                Query = "SELECT CONCAT(BankId, ' - ', Bank) AS codedes FROM tblBank  where BankId = '" & lBankId & "' ORDER BY BankId"
                PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

                'Dim sql As String
                'sql = ""

                'If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) = "SINGAPORE" Then
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                '    txtGST.Text = "SR"
                'Else
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                '    txtGST.Text = "ZR"
                'End If

                'txtGSTSelected.Text = txtGST.Text

                ''sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"

                'Dim command1 As MySqlCommand = New MySqlCommand
                'command1.CommandType = CommandType.Text
                'command1.CommandText = sql
                'command1.Connection = conn

                'Dim dr As MySqlDataReader = command1.ExecuteReader()

                'Dim dt As New DataTable
                'dt.Load(dr)

                'If dt.Rows.Count > 0 Then
                '    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                'End If


                'If conn.State = ConnectionState.Open Then
                '    conn.Close()
                'End If
                '''''''''''''''''''''''''''''''''''''''''''''''

                ''''''''''''''''''''''''''''''''''''''''''''''''

                ContactModuleSetup()

                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                commandServiceRecordMasterSetup.CommandText = "SELECT ShowInvoiceOnScreenLoad, InvoiceRecordMaxRec,DisplayRecordsLocationWise, PostInvoice, InvoiceOnlyEditableByCreator, DefaultTaxCode, AutoEmailInvoice, AllowZeroValueInvoice, DisabledEInvoicing, MalaysiaEinvoicing,EInvoiceStartDate FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("InvoiceRecordMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString
                txtPostUponSave.Text = dtServiceRecordMasterSetup.Rows(0)("PostInvoice").ToString
                txtOnlyEditableByCreator.Text = dtServiceRecordMasterSetup.Rows(0)("InvoiceOnlyEditableByCreator").ToString
                txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode").ToString
                txtAllowZeroValueInvoice.Text = dtServiceRecordMasterSetup.Rows(0)("AllowZeroValueInvoice").ToString

                txtDisabledEInvoicing.Text = dtServiceRecordMasterSetup.Rows(0)("DisabledEInvoicing").ToString
                txtMalaysiaEinvoicing.Text = dtServiceRecordMasterSetup.Rows(0)("MalaysiaEinvoicing").ToString

                If dtServiceRecordMasterSetup.Rows(0)("EInvoiceStartDate").ToString = DBNull.Value.ToString Then
                Else
                    txtEInvoiceStartDate.Text = Convert.ToDateTime(dtServiceRecordMasterSetup.Rows(0)("EInvoiceStartDate")).ToString("dd/MM/yyyy")
                End If

              

                If dtServiceRecordMasterSetup.Rows(0)("AutoEmailInvoice").ToString = "1" Then
                    txtAutoEmailInvoice.Text = "True"
                Else
                    txtAutoEmailInvoice.Text = "False"
                End If

                ''''''''''''''''''''''''''''''''''''''''''

                Dim sql As String
                sql = ""


                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                txtGST.Text = txtDefaultTaxCode.Text

                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                'txtGST.Text = "ZR"


                txtGSTSelected.Text = txtGST.Text

                sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                End If

                If txtDisplayRecordsLocationwise.Text = "Y" Then

                    Query = "select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "' order by LocationID"
                    'PopulateDropDownList(query, "locationID", "locationID", txtLocation)
                    PopulateComboBoxSaplin(Query, "locationID", "locationID", ddlLocationSearch)

                    Query = "select Status from tblinvoicestatus where rcno <> 0 ORDER BY AVAILABLE"
                    'PopulateDropDownList(query, "locationID", "locationID", txtLocation)
                    PopulateComboBoxSaplin(Query, "Status", "Status", ddlInvoiceStatusSearch)

                    lblBranch1.Visible = True
                    txtLocation.Visible = True
                    lblBranch.Visible = True
                    ddlBranch.Visible = False
                    ddlLocationSearch.Visible = True
                    ddlInvoiceStatusSearch.Visible = True
                Else
                    lblBranch1.Visible = False
                    txtLocation.Visible = False
                    lblBranch.Visible = False
                    ddlBranch.Visible = False
                    ddlLocationSearch.Visible = False
                    ddlInvoiceStatusSearch.Visible = False
                End If


                '19.12.22
                'FindGSTPct()
                FindDefaultGSTPct()
                '19.12.22



                '''''''''''''''''''''''''''''''''''''''''''
                Session.Add("customerfrom", Request.QueryString("CustomerFrom"))
                If String.IsNullOrEmpty(Session("customerfrom")) = False Then
                    Session.Add("invoiceno", Request.QueryString("VoucherNumber"))
                    If Request.QueryString("VoucherNumber") <> "" Then
                        txtInvoicenoSearch.Text = Session("invoiceno")
                        txtFrom.Text = Session("customerfrom")
                        txtFrom2.Text = Session("customerfrom")

                        btnQuickSearch_Click(sender, e)
                        Session.Remove("invoiceno")
                        Session.Remove("customerfrom")
                        ''''' Retrieve rcno for the Invoice 

                        ''''' Retrieve rcno for the Invoice 
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    End If
                End If

                Session.Add("DocFrom", Request.QueryString("DocFrom"))
                If String.IsNullOrEmpty(Session("DocFrom")) = False Then
                    Session.Add("invoiceno", Request.QueryString("InvoiceNumber"))
                    If Request.QueryString("InvoiceNumber") <> "" Then
                        txtInvoicenoSearch.Text = Session("invoiceno")
                        txtFrom.Text = Session("DocFrom")
                        txtFrom2.Text = Session("DocFrom")

                        btnQuickSearch_Click(sender, e)
                        Session.Remove("invoiceno")
                        Session.Remove("DocFrom")
                        ''''' Retrieve rcno for the Invoice 

                        ''''' Retrieve rcno for the Invoice 
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    End If
                End If

                If String.IsNullOrEmpty(Session("invoicefrom")) = False Then
                    btnADD_Click(sender, e)
                    txtInvoiceNo.Text = Session("invoiceno")
                    txtInvoicenoSearch.Text = Session("invoiceno")
                    txtSearch1Status.Text = "O,P"
                    ddlEInvoice.SelectedIndex = 0

                    txtAccountType.SelectedIndex = -1
                    ddlCreditTerms.SelectedIndex = -1
                    ddlSalesmanBilling.SelectedIndex = -1
                    ddlCompanyGrpSearch.SelectedIndex = -1
                    ddlContactTypeSearch.SelectedIndex = -1
                    ddlContractGroupBilling.SelectedIndex = -1
                    '   chkEInvoiceSearch.Checked = False
                    ddlEInvoice.SelectedIndex = 0

                    btnQuickSearch_Click(sender, e)

                    lblInvoiceId.Visible = True
                    ' lblInvoiceId1.Text = Session("invoiceno")
                    lblInvoiceId1.Text = Session("ConsolInvNo")
                    txtFrom.Text = Session("invoicefrom")
                    txtFrom2.Text = Session("invoicefrom")
                    InsertIntoTblWebEventLog("INVOICE", "PAGELOAD", lblInvoiceID1.Text, txtCreatedBy.Text)

                    Session.Remove("invoiceno")
                    Session.Remove("invoicefrom")
                    'GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                End If

                If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
                    'btnADD_Click(sender, e)
                    'txtInvoiceNo.Text = Session("invoiceno")
                    'txtInvoicenoSearch.Text = Session("invoiceno")
                    'txtSearch1Status.Text = "O,P"
                    'btnQuickSearch_Click(sender, e)

                    'lblInvoiceId.Visible = True
                    'lblInvoiceId1.Text = Session("invoiceno")
                    'txtRcno.Text = Session("rcnoinv")
                    'Session.Remove("receiptfrom")
                    txtFrom.Text = Session("receiptfrom")
                    txtFrom1.Text = Session("receiptfrom")
                    txtFrom2.Text = Session("fromtext")

                    'Session.Remove("receiptfrom")
                    Session.Remove("fromtext")

                    If String.IsNullOrEmpty(Session("gridsqlinv")) = False Then

                        txtRcno.Text = Session("rcnoinv")
                        txt.Text = ""
                        txt.Text = Session("gridsqlinv")
                        txtCondition.Text = Session("strcondition")
                        SQLDSInvoice.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SQLDSInvoice"
                        GridView1.DataBind()
                        CalculateTotal()
                        Session.Remove("gridsqlinv")
                    End If
                    GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    Session.Remove("receiptfrom")
                End If


                ''''''''''''''''''''''''''''''''''''''''''''''

                If String.IsNullOrEmpty(Session("cnfrom")) = False Then

                    txtFrom.Text = Session("cnfrom")
                    txtFrom1.Text = Session("cnfrom")
                    txtFrom2.Text = Session("fromtext")

                    'Session.Remove("cnfrom")
                    Session.Remove("fromtext")

                    If String.IsNullOrEmpty(Session("gridsqlinv")) = False Then

                        txtRcno.Text = Session("rcnoinv")
                        txt.Text = ""
                        txt.Text = Session("gridsqlinv")
                        txtCondition.Text = Session("strcondition")
                        SQLDSInvoice.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SQLDSInvoice"
                        GridView1.DataBind()
                        CalculateTotal()
                        Session.Remove("gridsqlinv")
                    End If
                    GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    Session.Remove("cnfrom")
                End If



                '''''''''''''''''''''''''''''''''''''''''''''''


                txt.Text = SQLDSInvoice.SelectCommand

                If String.IsNullOrEmpty(txtFrom.Text) = True Then

                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("ShowInvoiceOnScreenLoad")) = False Then
                        txt.Text = ""
                        'SqlDataSource1.SelectCommand = ""
                        'GridView1.DataSourceID = "SqlDataSource1"
                        'GridView1.DataBind()
                    Else
                        'txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule, Description, EmailSentStatus, EmailSentDate, Location, ServiceAddress  FROM tblsales WHERE 1=1  "
                        'txtSelect.Text = txt.Text
                        'txtCondition.Text = " and  (PostStatus = 'O' OR PostStatus = 'P') and GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) "

                        'If txtDisplayRecordsLocationwise.Text = "Y" Then
                        '    'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"
                        '    txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                        'End If

                        'txtOrderBy.Text = " ORDER BY Rcno DESC, CustName"
                        'txt.Text = txt.Text + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text

                        PopulateQuickSearch()

                        CalculateTotal()
                    End If
                    If String.IsNullOrEmpty(txtFrom2.Text.Trim) = True Then
                        btnBack.Text = "QUIT"
                    End If
                End If
                SQLDSInvoice.SelectCommand = txt.Text
                GridView1.DataSourceID = "SQLDSInvoice"
                GridView1.DataBind()

                txtFrom1.Text = ""
                'txtFrom.Text = ""

                If String.IsNullOrEmpty(txtSelect.Text) = True Then
                    'SqlDSMultiPrint.SelectCommand = ""

                    'grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    'grdViewMultiPrint.DataBind()

                    'Else
                    '    SqlDSMultiPrint.SelectCommand = txtSelect.Text + txtCondition.Text + " and (DocTYpe='ARDN') and PostStatus ='P' " + txtOrderBy.Text + " limit " & txtLimit.Text
                    '    '    SqlDSMultiPrint.DataBind()
                    '    grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    '    grdViewMultiPrint.DataBind()

                End If

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                command2.Dispose()
                commandServiceRecordMasterSetup.Dispose()
                dtServiceRecordMasterSetup.Dispose()
                dt.Dispose()
                dt2.Dispose()

                txtFrom.Text = ""
            Else

                btnSaveInvoice.Attributes.Add("onclick", "this.disabled=true;" + ClientScript.GetPostBackEventReference(btnSaveInvoice, "").ToString())

                'Exit Sub

                If txtIsPopup.Text = "Team" Then
                    txtIsPopup.Text = "N"
                    'mdlPopUpTeam.Show()
                ElseIf txtIsPopup.Text = "Client" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient.Show()
                End If

                If txtIsPopup.Text = "Client2" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient2.Show()
                End If

                If txtIsPopup.Text = "Location" Then
                    txtIsPopup.Text = "N"
                    mdlImportServices.Show()
                End If

                If txtIsPopup.Text = "Staff" Then
                    txtIsPopup.Text = "N"
                    mdlPopupStaff.Show()
                End If

                If txtSearch.Text = "ImportService" Then
                    'txtSearch.Text = "N"
                    mdlPopUpClient.Show()
                End If

                If txtIsPopup.Text = "ContractNo" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpContractNo.Show()
                End If

                If txtIsPopup.Text = "GL" Then
                    txtIsPopup.Text = "N"
                    imgBtnGL_ModalPopupExtender.Show()
                    'Dim TextBoxItemCode1 As mo As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                    'mdl mdlImportServices.Show()
                End If
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "Page_Load", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub FindDefaultTaxCodeandPctFromPeriod(BillingPeriod As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim commandPeriod As MySqlCommand = New MySqlCommand
            commandPeriod.CommandType = CommandType.Text

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                commandPeriod.CommandText = "SELECT GStType, GSTRate FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                commandPeriod.CommandText = "SELECT GStType, GSTRate FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

            commandPeriod.Connection = conn

            Dim drPeriod As MySqlDataReader = commandPeriod.ExecuteReader()
            Dim dtPeriod As New DataTable
            dtPeriod.Load(drPeriod)

            If String.IsNullOrEmpty(dtPeriod.Rows(0)("GStType").ToString) = False Then
                txtDefaultTaxCode.Text = dtPeriod.Rows(0)("GStType").ToString
            End If
            'txtDefaultTaxCode.Text = dtPeriod.Rows(0)("GStType").ToString
         

            ''''''''''''''''''''''''''''''''''''''''''

            Dim sql As String
            sql = ""


            'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
            txtGST.Text = txtDefaultTaxCode.Text

            'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
            'txtGST.Text = "ZR"


            txtGSTSelected.Text = txtGST.Text

            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FindDefaultTaxCodeandPctFromPeriod", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Private Sub FindDefaultTaxCodeandPctFromContractGroup(ContractGroup As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim commandContractGroup As MySqlCommand = New MySqlCommand
            commandContractGroup.CommandType = CommandType.Text

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ContractGroup & "'"
            Else
                commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ContractGroup & "'"
            End If

            commandContractGroup.Connection = conn

            Dim drcommandContractGroup As MySqlDataReader = commandContractGroup.ExecuteReader()
            Dim dtcommandContractGroup As New DataTable
            dtcommandContractGroup.Load(drcommandContractGroup)

            If String.IsNullOrEmpty(dtcommandContractGroup.Rows(0)("TaxType").ToString) = False Then
                txtDefaultTaxCode.Text = dtcommandContractGroup.Rows(0)("TaxType").ToString
            Else
                FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
            End If

            ''''''''''''''''''''''''''''''''''''''''''
            Dim sql As String
            sql = ""

            txtGST.Text = txtDefaultTaxCode.Text

            txtGSTSelected.Text = txtGST.Text

            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FindDefaultTaxCodeandPctFromContractGroup", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub
    Private Sub ContactModuleSetup()
        Try
            '''''''''''''''''Contact Module setup

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim CommandContactsSetup As MySqlCommand = New MySqlCommand
            CommandContactsSetup.CommandType = CommandType.Text
            CommandContactsSetup.CommandText = "SELECT * FROM tblContactSetup"
            CommandContactsSetup.Connection = conn

            Dim drContactsSetup As MySqlDataReader = CommandContactsSetup.ExecuteReader()
            Dim dtContactsSetup As New System.Data.DataTable
            dtContactsSetup.Load(drContactsSetup)

            If dtContactsSetup.Rows.Count > 0 Then

                If dtContactsSetup.Rows(0)("PostalValidate").ToString() = True Then
                    txtPostalValidate.Text = "TRUE"
                Else
                    txtPostalValidate.Text = "FALSE"
                End If
            End If
            CommandContactsSetup.Dispose()
            dtContactsSetup.Clear()
            dtContactsSetup.Dispose()
            drContactsSetup.Close()

            ''''''''''''''''''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, "ContactModuleSetup", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub CalculateTotal()
        Try
            Dim sqlstrCorporate As String
            sqlstrCorporate = ""
            Dim lTotalSalesAmountCorp, lTotalInvoiceAmountCorp, lTotalOSAmountCorp, lTotalSalesAmountRes, lTotalInvoiceAmountRes, lTotalOSAmountRes As Double

            lTotalSalesAmountCorp = 0.0
            lTotalInvoiceAmountCorp = 0.0
            lTotalOSAmountCorp = 0.0

            lTotalSalesAmountRes = 0.0
            lTotalInvoiceAmountRes = 0.0
            lTotalOSAmountRes = 0.0

            'txtConditionCorporate.Text
            'txtConditionResidential.Text

            If String.IsNullOrEmpty(txtConditionCorporate.Text) = False Then
                sqlstrCorporate = "SELECT ifnull(Sum(a.ValueBase),0) as valueamount, ifnull(Sum(a.AppliedBase),0) as totalamount, ifnull(Sum(a.BalanceBase),0) as balanceamount FROM tblSales a where 1=1 " + txtConditionCorporate.Text

                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstrCorporate
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New System.Data.DataTable
                dt.Load(dr)
                'Convert.ToDecimal(tot.ToString()).ToString("N2")
                If dt.Rows.Count > 0 Then
                    lTotalSalesAmountCorp = Convert.ToDecimal(dt.Rows(0)("valueamount").ToString()).ToString("N2")
                    lTotalInvoiceAmountCorp = Convert.ToDecimal(dt.Rows(0)("totalamount").ToString()).ToString("N2")
                    lTotalOSAmountCorp = Convert.ToDecimal(dt.Rows(0)("balanceamount").ToString()).ToString("N2")
                End If
                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            End If

            If String.IsNullOrEmpty(txtConditionResidential.Text) = False Then


                Dim sqlstrResidential As String
                sqlstrResidential = ""

                'txtConditionCorporate.Text
                'txtConditionResidential.Text

                sqlstrResidential = "SELECT ifnull(Sum(c.ValueBase),0) as valueamount, ifnull(Sum(c.AppliedBase),0) as totalamount, ifnull(Sum(c.BalanceBase),0) as balanceamount FROM tblSales c where 1=1 " + txtConditionResidential.Text

                Dim commandRes As MySqlCommand = New MySqlCommand

                Dim connRes As MySqlConnection = New MySqlConnection()
                connRes.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connRes.Open()

                commandRes.CommandType = CommandType.Text
                commandRes.CommandText = sqlstrResidential
                commandRes.Connection = connRes

                Dim drRes As MySqlDataReader = commandRes.ExecuteReader()
                Dim dtRes As New System.Data.DataTable
                dtRes.Load(drRes)
                'Convert.ToDecimal(tot.ToString()).ToString("N2")
                If dtRes.Rows.Count > 0 Then
                    lTotalSalesAmountRes = Convert.ToDecimal(dtRes.Rows(0)("valueamount").ToString()).ToString("N2")
                    lTotalInvoiceAmountRes = Convert.ToDecimal(dtRes.Rows(0)("totalamount").ToString()).ToString("N2")
                    lTotalOSAmountRes = Convert.ToDecimal(dtRes.Rows(0)("balanceamount").ToString()).ToString("N2")
                End If
                connRes.Close()
                connRes.Dispose()
                commandRes.Dispose()
                dtRes.Dispose()
                drRes.Close()
            End If

            txtTotalSalesAmount.Text = Convert.ToDecimal((lTotalSalesAmountCorp + lTotalSalesAmountRes).ToString()).ToString("N2")
            txtTotalInvoiceAmount.Text = Convert.ToDecimal((lTotalInvoiceAmountCorp + lTotalInvoiceAmountRes).ToString()).ToString("N2")
            txtTotalOSAmount.Text = Convert.ToDecimal((lTotalOSAmountCorp + lTotalOSAmountRes).ToString()).ToString("N2")


           
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculateTotal", ex.Message.ToString, "")
        End Try
    End Sub
    Private Sub FindRcno(source As String)
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Rcno FROM tblSales where InvoiceNumber ='" & source & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtRcno.Text = dt.Rows(0)("Rcno").ToString()
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION FindRcno", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub GridView1_DataBound(sender As Object, e As EventArgs) Handles GridView1.DataBound
        If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            If (isInPage = False) Then

                GridView1.PageIndex = GridView1.PageIndex + 1
                GridView1.DataBind()
            End If

        End If

        If String.IsNullOrEmpty(Session("cnfrom")) = False Then
            If (isInPage = False) Then

                GridView1.PageIndex = GridView1.PageIndex + 1
                GridView1.DataBind()
            End If

        End If
    End Sub

    Protected Sub GridView1_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        'If e.Row.RowType = DataControlRowType.DataRow Then
        '    If e.Row.Cells(11).Text = "COMPANY" Then
        '        e.Row.Cells(11).Text = "CORPORATE"
        '    Else
        '        e.Row.Cells(11).Text = "RESIDENTIAL"
        '    End If

        '    e.Row.Cells(17).Text = (e.Row.Cells(17).Text * (-1)).ToString("N2")
        'End If

        '.07.12.24
        If e.Row.RowType = DataControlRowType.DataRow Then
            If e.Row.Cells(14).Text = "COMPANY" Then
                e.Row.Cells(14).Text = "CORPORATE"
            Else
                e.Row.Cells(14).Text = "RESIDENTIAL"
            End If

            e.Row.Cells(20).Text = (e.Row.Cells(20).Text * (-1)).ToString("N2")
        End If
        ''07.12.24
    End Sub
    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged

        lblAlert.Text = ""
        lblMessage.Text = ""

        If txtMode.Text = "NEW" Or txtMode.Text = "EDIT" Then
            lblAlert.Text = "CANNOT SELECT RECORD IN ADD/EDIT MODE. SAVE OR CANCEL TO PROCEED"

            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        Try
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()
            MakeNotesNull()
            txtMode.Text = "View"
            'txtMode.Text = "View"
            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black


            Dim editindex As Integer = GridView1.SelectedIndex

            txtRcno.Text = 0
            ddlContractGroupBilling.SelectedIndex = -1
            'If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            If txtFrom.Text = "invoice" Then
                txtRcno.Text = Session("rcnoinv")
                Session.Remove("rcnoinv")
                Session.Remove("receiptfrom")
                ddlSalesmanBilling.SelectedIndex = -1
                ddlCreditTerms.SelectedIndex = -1
                ddlContractGroup.SelectedIndex = -1
                ddlContractGroupBilling.SelectedIndex = -1
                'txtFrom.Text = ""

            ElseIf txtFrom.Text = "Corporate" Or txtFrom.Text = "Residential" Then
                FindRcno(txtInvoicenoSearch.Text)
                ddlSalesmanBilling.SelectedIndex = -1
                ddlCreditTerms.SelectedIndex = -1
                ddlContractGroup.SelectedIndex = -1
                ddlContractGroupBilling.SelectedIndex = -1
                'txtFrom.Text = ""
            Else
                txtRcno.Text = GridView1.SelectedRow.Cells(1).Text.Trim
            End If


            PopulateRecord()

            'If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            '    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
            'End If

            If txtFrom1.Text = "invoice" Then
                GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                'txtFrom.Text = ""
            End If

            InsertIntoTblWebEventLog("PopulateRecord1", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, GridView1.SelectedRow.Cells(32).Text)
            InsertIntoTblWebEventLog("PopulateRecord2", txtTimeToCancel.Text, txtTIN.Text, txtEI.Text)

            'If String.IsNullOrEmpty(txtTIN.Text) = False Then
            '    UpdateEInvoiceEI(txtInvoiceNo.Text)


            'End If

            'InsertIntoTblWebEventLog("PopulateRecord2", txtEI.Text, txtTIN.Text, GridView1.SelectedRow.Cells(32).Text)

            lblFileUploadCount.Text = "File Upload"
            'grvBillingDetailsNew.DataBind()
            'lbltotalservices.Text = (grvBillingDetailsNew.Rows.Count).ToString


            GridSelectButtonControls()

            AccessControl()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            updPnlMsg.Update()
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "GridView1_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub GridSelectButtonControls()

        If txtDisabledEInvoicing.Text = True Then
            '  btnPostEInvoice.Visible = False
        Else
            '  btnPostEInvoice.Visible = True

            If txtEInvoiceStatus.Text = "VALID" Then
                btnPostEInvoice.Text = "CANCEL E-INVOICE"
                InsertIntoTblWebEventLog("PopulateRecord3", txtTimeToCancel.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
                If Convert.ToInt16(txtTimeToCancel.Text) = 0 Then
                    btnPostEInvoice.Enabled = False
                    btnPostEInvoice.Forecolor = System.Drawing.Color.Gray
                Else
                    btnPostEInvoice.Enabled = True
                    btnPostEInvoice.Forecolor = System.Drawing.Color.Black
                End If
                btnPrint.Enabled = True
                btnPrint.Forecolor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.Forecolor = System.Drawing.Color.Black

                btnReverse.Enabled = False
                btnReverse.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray


                btnEdit.Enabled = False
                btnEdit.Forecolor = System.Drawing.Color.Gray

                If txtPostStatus.Text = "P" Then
                    '  btnEditComments.Visible = False
                    btnEditBillingName.Visible = False
                    'btnEditSalesman.Visible = False
                    txtDescriptionEdit.Enabled = False

                End If

            ElseIf txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "SUBMITTED" Then
                btnPostEInvoice.Text = "SUBMIT E-INVOICE"
                InsertIntoTblWebEventLog("PopulateRecord31", txtTimeToCancel.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.Forecolor = System.Drawing.Color.Gray

                If txtPostStatus.Text = "P" Then
                    '  btnEditComments.Visible = False
                    btnEditBillingName.Visible = False
                    'btnEditSalesman.Visible = False
                    txtDescriptionEdit.Enabled = False

                End If

            ElseIf txtEInvoiceStatus.Text = "INVALID" Then
                btnPostEInvoice.Text = "SUBMIT E-INVOICE"
                InsertIntoTblWebEventLog("PopulateRecord31", txtTimeToCancel.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = True
                btnPostEInvoice.Forecolor = System.Drawing.Color.Black

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

                txtDescriptionEdit.Enabled = True

            ElseIf txtEInvoiceStatus.Text = "FAILURE" Then
                btnPostEInvoice.Text = "SUBMIT E-INVOICE"
                InsertIntoTblWebEventLog("PopulateRecord32", txtTimeToCancel.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = True
                btnPostEInvoice.Forecolor = System.Drawing.Color.Black

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.Forecolor = System.Drawing.Color.Gray

                txtDescriptionEdit.Enabled = True


            ElseIf txtEInvoiceStatus.Text = "POSTED NOT YET APPROVED" Then
                InsertIntoTblWebEventLog("PopulateRecord4", txtEI.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.Forecolor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                txtDescriptionEdit.Enabled = True

            ElseIf txtEInvoiceStatus.Text = "CANCELLED" Then
                InsertIntoTblWebEventLog("PopulateRecord7", txtEI.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.Forecolor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.Forecolor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                btnReverse.Enabled = False
                btnReverse.Forecolor = System.Drawing.Color.Gray

                txtDescriptionEdit.Enabled = True

            ElseIf txtEInvoiceStatus.Text = "CONSOLIDATED" Then

                InsertIntoTblWebEventLog("PopulateRecord7", txtEI.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.Forecolor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.Forecolor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.Forecolor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.Forecolor = System.Drawing.Color.Black

                btnReverse.Enabled = False
                btnReverse.Forecolor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.Forecolor = System.Drawing.Color.Gray

                'btnEditBillingDetails.Visible = False
                'btnEditPONo.Visible = False
                If txtPostStatus.Text = "P" Then
                    '    btnEditComments.Visible = False
                    btnEditBillingName.Visible = False
                    'btnEditSalesman.Visible = False
                    txtDescriptionEdit.Enabled = False

                End If

            Else
                If txtEI.Text = "Y" Then
                    InsertIntoTblWebEventLog("PopulateRecord5", txtEI.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                    btnPostEInvoice.Text = "SUBMIT E-INVOICE"
                    '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                    If txtPostStatus.Text = "V" Or txtPostStatus.Text = "O" Then
                        btnPostEInvoice.Enabled = False
                        btnPostEInvoice.Forecolor = System.Drawing.Color.Gray

                    Else
                        btnPostEInvoice.Enabled = True
                        btnPostEInvoice.Forecolor = System.Drawing.Color.Black

                    End If

                    btnPrint.Enabled = False
                    btnPrint.Forecolor = System.Drawing.Color.Gray

                    btnMultiPrint.Enabled = False
                    btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                    btnReverse.Enabled = True
                    btnReverse.Forecolor = System.Drawing.Color.Black

                    'btnEditBillingDetails.Visible = False
                    'btnEditPONo.Visible = False
                    If txtPostStatus.Text = "P" Then
                        ' btnEditComments.Visible = False
                        btnEditBillingName.Visible = False

                        txtDescriptionEdit.Enabled = False

                    End If

                    'btnEditSalesman.Visible = False

                    'If txtPostStatus.Text = "P" Then
                    '    btnEdit.Enabled = False
                    '    btnEdit.ForeColor = System.Drawing.Color.Gray

                    '    btnPost.Enabled = False
                    '    btnPost.Forecolor = System.Drawing.Color.Gray

                    'Else
                    '    btnEdit.Enabled = True
                    '    btnEdit.ForeColor = System.Drawing.Color.Black

                    '    btnPost.Enabled = True
                    '    btnPost.Forecolor = System.Drawing.Color.Black
                    'End If

                Else
                    InsertIntoTblWebEventLog("PopulateRecord6", txtEI.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                    btnPostEInvoice.Text = "SUBMIT E-INVOICE"

                    btnPostEInvoice.Enabled = False
                    btnPostEInvoice.Forecolor = System.Drawing.Color.Gray


                    If txtPostStatus.Text = "O" Then
                        btnPost.Text = "POST"

                        btnPrint.Enabled = False
                        btnPrint.Forecolor = System.Drawing.Color.Gray

                        btnMultiPrint.Enabled = False
                        btnMultiPrint.Forecolor = System.Drawing.Color.Gray

                        btnEditBillingDetails.Visible = True
                        btnEditPONo.Visible = True
                        btnEditComments.Visible = True
                        btnEditBillingName.Visible = True
                        btnEditSalesman.Visible = True
                        txtDescriptionEdit.Enabled = True

                    ElseIf txtPostStatus.Text = "P" Then
                        btnPost.Text = "REVERSE"

                        btnReverse.Enabled = False
                        btnReverse.Forecolor = System.Drawing.Color.Gray

                        btnEdit.Enabled = False
                        btnEdit.Forecolor = System.Drawing.Color.Gray

                        'btnEditBillingDetails.Visible = False
                        'btnEditPONo.Visible = False
                        'btnEditComments.Visible = False
                        btnEditBillingName.Visible = False
                        'btnEditSalesman.Visible = False
                        txtDescriptionEdit.Enabled = True

                    End If

                    '    '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
                    '    btnPrint.Enabled = False
                    '    btnPrint.Forecolor = System.Drawing.Color.Gray

                    '    btnMultiPrint.Enabled = False
                    '    btnMultiPrint.Forecolor = System.Drawing.Color.Gray
                End If


            End If
        End If

        If txtPostStatus.Text = "V" Then
            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnJournal.Enabled = False
            btnJournal.ForeColor = System.Drawing.Color.Gray

        End If

        If txtDocType.Text <> "ARIN" Then
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnRecalculate.Enabled = False
            btnRecalculate.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnMultiPrint.Enabled = False
            btnMultiPrint.ForeColor = System.Drawing.Color.Gray

            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnDeleteAll.Enabled = False
            btnDeleteAll.ForeColor = System.Drawing.Color.Gray

            'btnReceipts.Enabled = False
            'btnReceipts.ForeColor = System.Drawing.Color.Gray


            btnPostEInvoice.Enabled = False
            btnPostEInvoice.ForeColor = System.Drawing.Color.Gray

            btnJournal.Enabled = False
            btnJournal.ForeColor = System.Drawing.Color.Gray
            'grvServiceRecDetailsnew.Enabled = False
            grvServiceRecDetails.Enabled = False


        End If


    End Sub

    Private Sub PopulateRecord()
        lblAlertStatus.Text = ""

        Dim sql As String
        sql = ""
        Try
            lblRCNO.Text = "(" & txtRcNo.Text & ")"

            grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            sql = "Select PostStatus, GLStatus, InvoiceNumber, SalesDate, GLPeriod, CompanyGroup, AccountId, ContactType, CustName, BillAddress1, BillBuilding, BillStreet, BillPostal, BillCountry, Billcity, BillState,ConsolidatedInvoiceNo, "
            sql = sql + " Salesman, PONo, OurRef, YourRef, Terms, TermsDay, BatchNo, Comments, RecurringInvoice, BillSchedule,"
            sql = sql + " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, DiscountAmount, AmountWithDiscount, GSTAmount, NetAmount, InvoiceType,  "
            sql = sql + " Receiptbase, Creditbase, balanceBase,  StaffCode, CustAddress1, CustAddBuilding, CustAddStreet,  CustAddCountry, CustAddPostal, CustAddCity, CustAddState, CustAttention,  DueDate, ContractGroup, Printcounter, Description, Location, GST, DocType, GSTRate, GStInclusive, EmailSentStatus, EmailSentDate, "
            sql = sql + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn,TaxIdentificationNo,SalesTaxRegistrationNo, "
            sql = sql & " ServiceAddress, ReasonChSt, EI, EInvoiceStatus, UUID,SubmissionID,LongID,SubmissionDate,SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            sql = sql + " FROM tblsales "
            sql = sql + "where rcno = " & Convert.ToInt64(txtRcno.Text)

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)
            If dt.Rows.Count > 0 Then
                ddlContractGroupBilling.SelectedIndex = -1

                'If txtFrom.Text = "invoice" Then
                '    txtFrom.Text = ""
                'End If

                If dt.Rows(0)("InvoiceType").ToString = "M" Then
                    rbtInvoiceType.SelectedIndex = 0
                Else
                    rbtInvoiceType.SelectedIndex = 1
                End If

                If dt.Rows(0)("PostStatus").ToString <> "" Then : txtPostStatus.Text = dt.Rows(0)("PostStatus").ToString : End If
                If dt.Rows(0)("InvoiceNumber").ToString <> "" Then : txtInvoiceNo.Text = dt.Rows(0)("InvoiceNumber").ToString : End If
                If dt.Rows(0)("SalesDate").ToString <> "" Then : txtInvoiceDate.Text = Convert.ToDateTime(dt.Rows(0)("SalesDate")).ToString("dd/MM/yyyy") : End If

                If dt.Rows(0)("GLPeriod").ToString <> "" Then : txtBillingPeriod.Text = dt.Rows(0)("GLPeriod").ToString : End If
                If dt.Rows(0)("CompanyGroup").ToString <> "" Then : txtCompanyGroup.Text = dt.Rows(0)("CompanyGroup").ToString : End If
                If dt.Rows(0)("AccountId").ToString <> "" Then : txtAccountIdBilling.Text = dt.Rows(0)("AccountId").ToString : End If
                If dt.Rows(0)("ContactType").ToString <> "" Then : txtAccountType.Text = dt.Rows(0)("ContactType").ToString : End If
                If dt.Rows(0)("CustName").ToString <> "" Then : txtAccountName.Text = dt.Rows(0)("CustName").ToString : End If
                txtBillingNameEdit.Text = txtAccountName.Text
                If dt.Rows(0)("TaxIdentificationNo").ToString <> "" Then : txtTIN.Text = dt.Rows(0)("TaxIdentificationNo").ToString : End If
                If dt.Rows(0)("SalesTaxRegistrationNo").ToString <> "" Then : txtSSTNo.Text = dt.Rows(0)("SalesTaxRegistrationNo").ToString : End If


                If dt.Rows(0)("CustAddress1").ToString <> "" Then : txtBillAddress.Text = dt.Rows(0)("CustAddress1").ToString : End If
                If dt.Rows(0)("CustAddStreet").ToString <> "" Then : txtBillStreet.Text = dt.Rows(0)("CustAddStreet").ToString : End If
                If dt.Rows(0)("CustAddBuilding").ToString <> "" Then : txtBillBuilding.Text = dt.Rows(0)("CustAddBuilding").ToString : End If

                If dt.Rows(0)("CustAddCity").ToString <> "" Then : txtBillCity.Text = dt.Rows(0)("CustAddCity").ToString : End If
                If dt.Rows(0)("CustAddState").ToString <> "" Then : txtBillState.Text = dt.Rows(0)("CustAddState").ToString : End If

                If dt.Rows(0)("CustAddCountry").ToString <> "" Then : txtBillCountry.Text = dt.Rows(0)("CustAddCountry").ToString : End If
                If dt.Rows(0)("CustAddPostal").ToString <> "" Then : txtBillPostal.Text = dt.Rows(0)("CustAddPostal").ToString : End If
                If dt.Rows(0)("CustAttention").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("CustAttention").ToString : End If

                ddlSalesmanBilling.SelectedIndex = -1

               
                If dt.Rows(0)("EI").ToString <> "" Then
                    txtEI.Text = dt.Rows(0)("EI").ToString
                Else
                    txtEI.Text = ""
                End If

                '  InsertIntoTblWebEventLog("PopulateRecord3", dt.Rows(0)("EI").ToString, txtEI.Text, txtCreatedBy.Text)

                '    InsertIntoTblWebEventLog("PopulateRecord3", dt.Rows(0)("EInvoiceStatus").ToString, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                If String.IsNullOrEmpty(dt.Rows(0)("EInvoiceStatus").ToString) = False Then
                    txtEInvoiceStatus.Text = dt.Rows(0)("EInvoiceStatus").ToString
                Else
                    txtEInvoiceStatus.Text = ""
                End If

                '   InsertIntoTblWebEventLog("PopulateRecord4", dt.Rows(0)("EInvoiceStatus").ToString, txtEInvoiceStatus.Text, txtCreatedBy.Text)

                If dt.Rows(0)("UUID").ToString <> "" Then
                    txtUUID.Text = dt.Rows(0)("UUID").ToString
                Else
                    txtUUID.Text = ""
                End If
                If dt.Rows(0)("SubmissionID").ToString <> "" Then
                    txtSubmissionID.Text = dt.Rows(0)("SubmissionID").ToString
                Else
                    txtSubMissionID.Text = ""
                End If

                If dt.Rows(0)("LongID").ToString <> "" Then
                    txtLongID.Text = dt.Rows(0)("LongID").ToString
                Else
                    txtLongID.Text = ""
                End If
                If dt.Rows(0)("SubmissionBy").ToString <> "" Then : txtLastPostedBy.Text = dt.Rows(0)("SubmissionBy").ToString : End If
                If dt.Rows(0)("SubmissionDate").ToString <> "" Then : txtLastPostedDate.Text = Convert.ToDateTime(dt.Rows(0)("SubmissionDate")).ToString("dd/MM/yyyy") : End If
                If dt.Rows(0)("TimeToCancel").ToString <> "" Then : txtTimetoCancel.Text = dt.Rows(0)("TimeToCancel").ToString : End If

                txtCancelInvoiceNo.Text = txtInvoiceNo.Text
                txtCancelLastPosted.Text = txtLastPostedDate.Text
                txtCancelLastPostedBy.Text = txtLastPostedBy.Text


                If dt.Rows(0)("StaffCode").ToString <> "" Then
                    gddlvalue = dt.Rows(0)("StaffCode").ToString.ToUpper()

                    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanBilling.Items.Add(gddlvalue)
                        ddlSalesmanBilling.Text = gddlvalue

                    Else
                        ddlSalesmanBilling.Text = dt.Rows(0)("StaffCode").ToString.Trim().ToUpper()

                    End If
                End If

                If dt.Rows(0)("StaffCode").ToString <> "" Then
                    gddlvalue = dt.Rows(0)("StaffCode").ToString.ToUpper()

                    If ddlSalesmanEdit.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanEdit.Items.Add(gddlvalue)
                        ddlSalesmanEdit.Text = gddlvalue
                    Else
                        ddlSalesmanEdit.Text = dt.Rows(0)("StaffCode").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("PONo").ToString <> "" Then : txtPONo.Text = dt.Rows(0)("PONo").ToString : End If
                If dt.Rows(0)("OurRef").ToString <> "" Then : txtOurReference.Text = dt.Rows(0)("OurRef").ToString : End If
                If dt.Rows(0)("YourRef").ToString <> "" Then : txtYourReference.Text = dt.Rows(0)("YourRef").ToString : End If


                ddlCreditTerms.SelectedIndex = -1

                If dt.Rows(0)("Terms").ToString.Trim <> "" Then

                    gddlvalue = dt.Rows(0)("Terms").ToString.ToUpper.Trim()

                    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlCreditTerms.Items.Add(gddlvalue)
                        ddlCreditTerms.Text = gddlvalue
                    Else
                        ddlCreditTerms.Text = dt.Rows(0)("Terms").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("BatchNo").ToString <> "" Then : txtBatchNo.Text = dt.Rows(0)("BatchNo").ToString : End If
                If dt.Rows(0)("Comments").ToString <> "" Then : txtComments.Text = dt.Rows(0)("Comments").ToString : End If
                If dt.Rows(0)("TermsDay").ToString <> "" Then : txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString : End If

                If dt.Rows(0)("Description").ToString <> "" Then : txtDescription.Text = dt.Rows(0)("Description").ToString : End If

                If dt.Rows(0)("RecurringInvoice").ToString = "N" Then
                    chkRecurringInvoice.Checked = False
                Else
                    chkRecurringInvoice.Checked = True
                End If
                If dt.Rows(0)("BillSchedule").ToString <> "" Then : txtInvoiceSchedule.Text = dt.Rows(0)("BillSchedule").ToString : End If

                If dt.Rows(0)("ValueBase").ToString <> "" Then : txtAmountWithDiscount.Text = dt.Rows(0)("ValueBase").ToString : End If
                If dt.Rows(0)("GSTBase").ToString <> "" Then : txtGSTAmount.Text = dt.Rows(0)("GSTBase").ToString : End If
                If dt.Rows(0)("AppliedBase").ToString <> "" Then : txtNetAmount.Text = dt.Rows(0)("AppliedBase").ToString : End If
                If dt.Rows(0)("BalanceBase").ToString <> "" Then : txtBalanceBase.Text = dt.Rows(0)("BalanceBase").ToString : End If

                If dt.Rows(0)("DiscountAmount").ToString <> "" Then : txtDiscountAmount.Text = dt.Rows(0)("DiscountAmount").ToString : End If
                If dt.Rows(0)("ValueBase").ToString <> "" Then : txtInvoiceAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtDiscountAmount.Text) : End If

                If dt.Rows(0)("Receiptbase").ToString <> "" Then : txtTotalReceiptAmount.Text = dt.Rows(0)("Receiptbase").ToString : End If
                If dt.Rows(0)("CreditBase").ToString <> "" Then : txtTotalCNAmount.Text = dt.Rows(0)("CreditBase").ToString : End If

                If dt.Rows(0)("DueDate").ToString <> "" Then : txtDueDate.Text = Convert.ToDateTime(dt.Rows(0)("DueDate")).ToString("dd/MM/yyyy") : End If
                If dt.Rows(0)("AppliedBase").ToString <> "" Then : txtNetInvoiceAmount.Text = dt.Rows(0)("AppliedBase").ToString : End If
                'If dt.Rows(0)("Location").ToString <> "" Then : txtLocation.Text = dt.Rows(0)("Location").ToString : End If

                txtLocation.Text = dt.Rows(0)("Location").ToString
                If dt.Rows(0)("GST").ToString <> "" Then : txtGST.Text = dt.Rows(0)("GST").ToString : End If
                If dt.Rows(0)("GSTRate").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("GSTRate").ToString : End If

                If dt.Rows(0)("ContractGroup").ToString <> "" Then

                    gddlvalue = dt.Rows(0)("ContractGroup").ToString.ToUpper()

                    If ddlContractGroupBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlContractGroupBilling.Items.Add(gddlvalue)
                        ddlContractGroupBilling.Text = gddlvalue
                    Else
                        ddlContractGroupBilling.Text = dt.Rows(0)("ContractGroup").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("DocType").ToString <> "" Then : txtDocType.Text = dt.Rows(0)("DocType").ToString : End If

                txtReasonChSt.Text = dt.Rows(0)("ReasonChSt").ToString.Trim

                'If dt.Rows(0)("RecurringInvoice").ToString = "N" Then
                '    chkRecurringInvoice.Checked = False
                'Else
                '    chkRecurringInvoice.Checked = True
                'End If

                chkGSTInclusive.Checked = dt.Rows(0)("gstInclusive").ToString
                txtRecordCreatedBy.Text = dt.Rows(0)("CreatedBy").ToString

                txtContactPersonEdit.Text = txtContactPerson.Text
                txtBillAddressEdit.Text = txtBillAddress.Text
                txtBillBuildingEdit.Text = txtBillBuilding.Text
                txtBillStreetEdit.Text = txtBillStreet.Text

                txtBillCityEdit.Text = txtBillCity.Text
                txtBillStateEdit.Text = txtBillState.Text

                txtBillPostalEdit.Text = txtBillPostal.Text
                txtBillCountryEdit.Text = txtBillCountry.Text

                txtOurRefEdit.Text = txtOurReference.Text
                txtYourRefEdit.Text = txtYourReference.Text
                txtPONOEdit.Text = txtPONo.Text
                txtRemarksEdit.Text = txtComments.Text
                txtDescriptionEdit.Text = txtDescription.Text
                lblNotesKeyField.Text = txtInvoiceNo.Text

                btnEditBillingDetails.Visible = True
                btnEditPONo.Visible = True
                btnEditComments.Visible = True
                btnEditBillingName.Visible = True
                btnEditSalesman.Visible = True

                tb1.ActiveTabIndex = 0
            End If

            txtMode.Text = "View"


            If txtDisabledEInvoicing.Text = True Then
                '  btnPostEInvoice.Visible = False
            Else
                '  btnPostEInvoice.Visible = True

                If txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "" Then
                    btnPostEInvoice.Text = "SUBMIT E-INVOICE"
                    btnPrint.Enabled = False
                    btnPrint.Forecolor = System.Drawing.Color.Gray
                Else
                    btnPostEInvoice.Text = "CANCEL E-INVOICE"
                    'btnPrint.Enabled = True
                    'btnPrint.Forecolor = System.Drawing.Color.Black
                End If
            End If
            '''''''''''''''''''''''''''''''''''
            '    Label26.Text = txtInvoiceNo.Text


            ''''''SASI - 20191115''''''''

            Dim qry As String = "SELECT recordno,filename,servicedate,filenamelink,filedescription FROM tblfileupload LEFT JOIN TBLSERVICErecord on tblfileupload.fileref = tblservicerecord.recordno"
            qry = qry + " where manualreport='Y' and fileref in (SELECT RefType FROM tblsalesdetail where InvoiceNumber = '" + txtInvoiceNo.Text + "');"
            SqlDSManualReports.SelectCommand = qry
            SqlDSManualReports.DataBind()
            grdManualReports.DataBind()
            '   Label26.Text = txtInvoiceNo.Text + " " + qry

            '''''END SASI - 20191115'''''''



            SqlDSSalesDetail.SelectCommand = "select InvoiceNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, InvoiceType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode, ItemClassificationCode, ItemClassificationDesc, UOMDesc, TaxTypeDesc from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
            'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()



            ''''''''''''''''''''''''''''''''''''''''
            'Start:Retrive Service Records
            Dim commandService As MySqlCommand = New MySqlCommand

            commandService.CommandType = CommandType.Text
            commandService.CommandText = "SELECT count(a.receiptnumber) as totreceiptrec FROM tblrecv a, tblrecvdet b where a.receiptnumber = b.receiptnumber and a.PostStatus <> 'V' and b.reftype ='" & txtInvoiceNo.Text & "'"
            commandService.Connection = conn

            Dim drService As MySqlDataReader = commandService.ExecuteReader()
            Dim dtService As New DataTable
            dtService.Load(drService)

            If dtService.Rows.Count > 0 Then
                txtTotReceipts.Text = Val(dtService.Rows(0)("totreceiptrec").ToString).ToString
                btnReceipts.Text = "RECEIPTS [" + Val(dtService.Rows(0)("totreceiptrec").ToString).ToString + "]"
                txtTotalReceipts.Text = Val(dtService.Rows(0)("totreceiptrec").ToString).ToString
                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            'End:Retrieve Service Records
            ''''''''''''''''''''''''''
            ''''''''''''''''''''''''''''''''''''''''
            'Start:Retrive CN Records
            Dim commandCNDN As MySqlCommand = New MySqlCommand

            commandCNDN.CommandType = CommandType.Text
            commandCNDN.CommandText = "SELECT count(distinct(a.InvoiceNumber)) as totcndnrec FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and ((a.DocTYpe='ARCN') or (a.Doctype = 'ARDN')) and a.PostStatus <> 'V' and b.SourceInvoice ='" & txtInvoiceNo.Text & "'"
            commandCNDN.Connection = conn

            Dim drCNDN As MySqlDataReader = commandCNDN.ExecuteReader()
            Dim dtCNDN As New DataTable
            dtCNDN.Load(drCNDN)

            If dtCNDN.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnCNDN.Text = "CN/DN [" + Val(dtCNDN.Rows(0)("totcndnrec").ToString).ToString + "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            'End:Retrieve CN Records
            ''''''''''''''''''''''''''


            ''''''''''''''''''''''''''''''''''''''''
            'Start:Retrive Journal Records
            Dim commandJournal As MySqlCommand = New MySqlCommand

            commandJournal.CommandType = CommandType.Text
            commandJournal.CommandText = "SELECT count(a.VoucherNumber) as totjournalrec FROM tblJrnv a, tblJrnvDet b where a.VoucherNumber = b.VoucherNumber and a.PostStatus <> 'V' and b.RefTYpe ='" & txtInvoiceNo.Text & "'"
            commandJournal.Connection = conn

            Dim drJournal As MySqlDataReader = commandJournal.ExecuteReader()
            Dim dtJournal As New DataTable
            dtJournal.Load(drJournal)

            If dtJournal.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnJournal.Text = "JOURNAL [" + Val(dtJournal.Rows(0)("totjournalrec").ToString).ToString + "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            'End:Retrieve Journal Records
            ''''''''''''''''''''''''''
            Dim commandDetailTotal As MySqlCommand = New MySqlCommand

            commandDetailTotal.CommandType = CommandType.Text
            commandDetailTotal.CommandText = "SELECT count(rcno) as TotDetRec, sum(ValueBase) as TotalwithDisc, sum(GSTBase) as TotalGST, sum(AppliedBase) as Totalappliedbase FROM tblSalesDetail  where InvoiceNumber ='" & txtInvoiceNo.Text & "'"
            commandDetailTotal.Connection = conn

            Dim drDetailTotal As MySqlDataReader = commandDetailTotal.ExecuteReader()
            Dim dtDetailTotal As New DataTable
            dtDetailTotal.Load(drDetailTotal)

            If dtDetailTotal.Rows.Count > 0 Then
                txtTotalWithDiscAmt.Text = dtDetailTotal.Rows(0)("TotalwithDisc").ToString
                txtTotalGSTAmt.Text = dtDetailTotal.Rows(0)("TotalGST").ToString
                txtTotalWithGST.Text = dtDetailTotal.Rows(0)("Totalappliedbase").ToString
                txtTotDetRec.Text = dtDetailTotal.Rows(0)("TotDetRec").ToString
            End If
            commandDetailTotal.Dispose()
            dtDetailTotal.Dispose()

            ''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            commandService.Dispose()
            dtService.Dispose()
            dr.Close()
            drDetailTotal.Close()
            'PopulateInvoiceDetailGrid()

            'PopulateGLCodes()

            DisplayGLGrid()
            IsDetailBlank()


            'grvBillingDetailsNew.DataBind()
            lbltotalservices.Text = (grvBillingDetailsNew.Rows.Count).ToString & " out of " & txtTotDetRec.Text

            If txtDocType.Text <> "ARIN" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnCopy.Enabled = False
                btnCopy.ForeColor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.ForeColor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                'btnReceipts.Enabled = False
                'btnReceipts.ForeColor = System.Drawing.Color.Gray

                btnReceipts.Enabled = True
                btnReceipts.ForeColor = System.Drawing.Color.Black

                btnCNDN.Enabled = True
                btnCNDN.ForeColor = System.Drawing.Color.Black

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.ForeColor = System.Drawing.Color.Gray

                btnJournal.Enabled = False
                btnJournal.ForeColor = System.Drawing.Color.Gray
                'grvServiceRecDetailsnew.Enabled = False
                grvServiceRecDetails.Enabled = False

                Exit Sub

            End If

            btnJournal.Enabled = True
            btnJournal.ForeColor = System.Drawing.Color.Black

            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                'btnCopy.Enabled = True
                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black

                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray
                'btnDelete.Enabled = True
                btnReceipts.Enabled = True
                btnReceipts.ForeColor = System.Drawing.Color.Black

                btnCNDN.Enabled = True
                btnCNDN.ForeColor = System.Drawing.Color.Black

                grvServiceRecDetails.Enabled = True
            Else
                btnEdit.Enabled = True
                btnEdit.ForeColor = System.Drawing.Color.Black
                'btnCopy.Enabled = True
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnChangeStatus.Enabled = True
                btnChangeStatus.ForeColor = System.Drawing.Color.Black

                btnDelete.Enabled = True
                btnDelete.ForeColor = System.Drawing.Color.Black

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = True
                btnPost.ForeColor = System.Drawing.Color.Black
                btnReceipts.Enabled = False
                btnReceipts.ForeColor = System.Drawing.Color.Gray

                btnCNDN.Enabled = False
                btnCNDN.ForeColor = System.Drawing.Color.Gray
                'btnDelete.Enabled = True
            End If

            btnCopy.Enabled = True
            btnCopy.ForeColor = System.Drawing.Color.Black

            btnRecalculate.Enabled = True
            btnRecalculate.ForeColor = System.Drawing.Color.Black

            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            'End If

            InsertIntoTblWebEventLog("PopulateRecord", txtPostStatus.Text, txtEInvoiceStatus.Text, txtInvoiceNo.Text)

            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnPostEInvoice.Enabled = True
                btnPostEInvoice.ForeColor = System.Drawing.Color.Black
            Else
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnReceipts.Enabled = False
                btnReceipts.ForeColor = System.Drawing.Color.Gray

                btnPostEInvoice.Enabled = False
                btnPostEInvoice.ForeColor = System.Drawing.Color.Gray
            End If

            If txtPostStatus.Text = "V" Then
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnJournal.Enabled = False
                btnJournal.ForeColor = System.Drawing.Color.Gray

            End If

            If Convert.ToDecimal(txtTotalReceiptAmount.Text) > 0.0 Then
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                'btnQuickReceipt.Enabled = False
                'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray
            End If

            If Convert.ToDecimal(txtTotalCNAmount.Text) > 0.0 Then
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
            End If


            If txtDisabledEInvoicing.Text = False Then
                If txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "VALID" Then
                    btnPostEInvoice.Text = "CANCEL E-INVOICE"
                End If
            End If
            Dim IsLock = FindARPeriod(txtBillingPeriod.Text)

            If IsLock = "Y" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                If txtOnlyEditableByCreator.Text = "1" Then
                    If txtRecordCreatedBy.Text.Trim <> txtCreatedBy.Text.Trim Then
                        btnEdit.Enabled = False
                        btnPost.Enabled = False
                        btnReverse.Enabled = False
                        'btnCopy.Enabled = False
                        btnChangeStatus.Enabled = False

                        btnEdit.ForeColor = System.Drawing.Color.Gray
                        btnPost.ForeColor = System.Drawing.Color.Gray
                        btnReverse.ForeColor = System.Drawing.Color.Gray
                        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                    End If
                End If
            End If

            '01.12.24
            '01.12.24
            btnReverse.Visible = False
            '01.12.24
            If txtPostStatus.Text = "O" Then
                btnPost.Enabled = True
                btnPost.ForeColor = System.Drawing.Color.Black
                btnPost.Text = "POST"
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
            ElseIf txtPostStatus.Text = "P" Then
                btnPost.Enabled = True
                btnPost.ForeColor = System.Drawing.Color.Black
                btnPost.Text = "REVERSE"
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                If String.IsNullOrEmpty(txtEInvoiceStatus.Text) Then
                    btnPost.Enabled = True
                    btnPost.ForeColor = System.Drawing.Color.Black
                    btnPost.Text = "REVERSE"

                    'btnEditBillingDetails.Visible = True
                    'btnEditPONo.Visible = True
                    'btnEditComments.Visible = True
                    ''   btnEditBillingName.Visible = True
                    'btnEditSalesman.Visible = True

                Else
                    btnPost.Enabled = False
                    btnPost.ForeColor = System.Drawing.Color.Gray
                    btnPost.Text = "REVERSE"

                    'btnEditBillingDetails.Visible = False
                    'btnEditPONo.Visible = False
                    'btnEditComments.Visible = False
                    'btnEditBillingName.Visible = False
                    'btnEditSalesman.Visible = False
                End If
                'btnEditBillingDetails.Visible = False
                'btnEditPONo.Visible = False
                'btnEditComments.Visible = False
                'btnEditBillingName.Visible = False
                'btnEditSalesman.Visible = False
            End If
            '01.12.24

            'If Val(dtService.Rows(0)("totreceiptrec").ToString).ToString = 0 Then
            '    btnReceipts.Text = False
            '    btnReceipts.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnReceipts.Text = True
            '    btnReceipts.ForeColor = System.Drawing.Color.Black
            'End If

            'If Val(dtCNDN.Rows(0)("totcndnrec").ToString).ToString = 0 Then
            '    btnCNDN.Enabled = False
            '    btnCNDN.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnCNDN.Enabled = True
            '    btnCNDN.ForeColor = System.Drawing.Color.Black
            'End If

            'If Val(dtJournal.Rows(0)("totjournalrec").ToString).ToString = 0 Then
            '    btnJournal.Enabled = False
            '    btnJournal.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnJournal.Enabled = True
            '    btnJournal.ForeColor = System.Drawing.Color.Black
            'End If

            AccessControl()

            If txtPostStatus.Text = "O" Then
                btnEdit.Enabled = True
                btnEdit.ForeColor = System.Drawing.Color.Black
            Else
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
            End If

            updPanelInvoice.Update()
            updPnlMsg.Update()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateRecord", ex.Message.ToString, txtRcno.Text & "-" & Right(sql, 1900))
        End Try
    End Sub
    'Function
    Private Sub IsDetailBlank()

        'grvBillingDetailsNew.DataBind()
        'grvBillingDetails.DataBind()


        Dim TextBoxItemTypeNew As TextBox
        Dim TextBoxItemType As DropDownList

        Dim rownew As String
        Dim rowold As Integer

        rownew = "0"
        rowold = 0

        If grvBillingDetailsNew.Rows.Count > 0 Then
            TextBoxItemTypeNew = CType(grvBillingDetailsNew.Rows(0).Cells(0).FindControl("txtItemTypeGVB"), TextBox)
            rownew = String.IsNullOrEmpty(TextBoxItemTypeNew.Text)
            If String.IsNullOrEmpty(rownew) = False Then
                rownew = "1"
            End If
        End If

        If grvBillingDetails.Rows.Count > 0 Then
            TextBoxItemType = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
            rowold = TextBoxItemType.SelectedIndex
        End If


        If rownew = "1" And rowold = 0 Then
            'grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False
            'FirstGridViewRowBillingDetailsRecs()
            'grvBillingDetails.ShowHeader = True

            'UpdatePanel2.Update()
            UpdatePanel5.Update()
            'updPanelInvoice.Update()
        End If

        'If grvBillingDetails.Rows.Count > 0 Then

        'End If


        If rownew = "0" And rowold = 0 Then
            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True
            FirstGridViewRowBillingDetailsRecs()
            grvBillingDetails.ShowHeader = True
            'updPanelInvoice.Update()
        End If
    End Sub
    Private Sub GenerateInvoiceNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtInvoiceDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")
            lInvoiceNo = "AR" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "AR" + lYear
            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'Start: Continuous Number
                'If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "02" Then
                '    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "03" Then
                '    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "04" Then
                '    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "05" Then
                '    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "06" Then
                '    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "07" Then
                '    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "08" Then
                '    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "09" Then
                '    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "10" Then
                '    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "11" Then
                '    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "12" Then
                '    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)
                commandDocControlEdit.Dispose()
                dt2.Dispose()
                dr2.Close()
            Else

                Dim lSuffixVal1 As String
                'Dim lSuffixVal2 As String
                'Dim lSuffixVal3 As String
                'Dim lSuffixVal4 As String
                'Dim lSuffixVal5 As String
                'Dim lSuffixVal6 As String
                'Dim lSuffixVal7 As String
                'Dim lSuffixVal8 As String
                'Dim lSuffixVal9 As String
                'Dim lSuffixVal10 As String
                'Dim lSuffixVal11 As String
                'Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                'lSuffixVal2 = 0
                'lSuffixVal3 = 0
                'lSuffixVal4 = 0
                'lSuffixVal5 = 0
                'lSuffixVal6 = 0
                'lSuffixVal7 = 0
                'lSuffixVal8 = 0
                'lSuffixVal9 = 0
                'lSuffixVal10 = 0
                'lSuffixVal11 = 0
                'lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                    'ElseIf lMonth = "02" Then
                    '    lSuffixVal2 = 1
                    'ElseIf lMonth = "03" Then
                    '    lSuffixVal3 = 1
                    'ElseIf lMonth = "04" Then
                    '    lSuffixVal4 = 1
                    'ElseIf lMonth = "05" Then
                    '    lSuffixVal5 = 1
                    'ElseIf lMonth = "06" Then
                    '    lSuffixVal6 = 1
                    'ElseIf lMonth = "07" Then
                    '    lSuffixVal7 = 1
                    'ElseIf lMonth = "08" Then
                    '    lSuffixVal8 = 1
                    'ElseIf lMonth = "09" Then
                    '    lSuffixVal9 = 1
                    'ElseIf lMonth = "10" Then
                    '    lSuffixVal10 = 1
                    'ElseIf lMonth = "11" Then
                    '    lSuffixVal11 = 1
                    'ElseIf lMonth = "12" Then
                    '    lSuffixVal12 = 1
                End If

                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                         "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & ", 0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1

                'Start: Continuous Number

                '    'Start: Reset at every month
                '    If lMonth = "01" Then
                '        lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "02" Then
                '        lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "03" Then
                '        lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "04" Then
                '        lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "05" Then
                '        lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "06" Then
                '        lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "07" Then
                '        lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "08" Then
                '        lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "09" Then
                '        lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "10" Then
                '        lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "11" Then
                '        lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "12" Then
                '        lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    End If

                '    Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                '    commandDocControlEdit.CommandType = CommandType.Text
                '    commandDocControlEdit.CommandText = strUpdate
                '    commandDocControlEdit.Connection = conn

                '    Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                '    Dim dt2 As New DataTable
                '    dt2.Load(dr2)
                'Else

                '    Dim lSuffixVal1 As String
                '    Dim lSuffixVal2 As String
                '    Dim lSuffixVal3 As String
                '    Dim lSuffixVal4 As String
                '    Dim lSuffixVal5 As String
                '    Dim lSuffixVal6 As String
                '    Dim lSuffixVal7 As String
                '    Dim lSuffixVal8 As String
                '    Dim lSuffixVal9 As String
                '    Dim lSuffixVal10 As String
                '    Dim lSuffixVal11 As String
                '    Dim lSuffixVal12 As String

                '    lSuffixVal1 = 0
                '    lSuffixVal2 = 0
                '    lSuffixVal3 = 0
                '    lSuffixVal4 = 0
                '    lSuffixVal5 = 0
                '    lSuffixVal6 = 0
                '    lSuffixVal7 = 0
                '    lSuffixVal8 = 0
                '    lSuffixVal9 = 0
                '    lSuffixVal10 = 0
                '    lSuffixVal11 = 0
                '    lSuffixVal12 = 0

                '    If lMonth = "01" Then
                '        lSuffixVal1 = 1
                '    ElseIf lMonth = "02" Then
                '        lSuffixVal2 = 1
                '    ElseIf lMonth = "03" Then
                '        lSuffixVal3 = 1
                '    ElseIf lMonth = "04" Then
                '        lSuffixVal4 = 1
                '    ElseIf lMonth = "05" Then
                '        lSuffixVal5 = 1
                '    ElseIf lMonth = "06" Then
                '        lSuffixVal6 = 1
                '    ElseIf lMonth = "07" Then
                '        lSuffixVal7 = 1
                '    ElseIf lMonth = "08" Then
                '        lSuffixVal8 = 1
                '    ElseIf lMonth = "09" Then
                '        lSuffixVal9 = 1
                '    ElseIf lMonth = "10" Then
                '        lSuffixVal10 = 1
                '    ElseIf lMonth = "11" Then
                '        lSuffixVal11 = 1
                '    ElseIf lMonth = "12" Then
                '        lSuffixVal12 = 1
                '    End If

                '    Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                '    commandDocControlInsert.CommandType = CommandType.Text
                '    'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '    '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                '    commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '             "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

                '    commandDocControlInsert.Connection = conn

                '    Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                '    Dim dt2 As New DataTable
                '    dt2.Load(dr2)

                '    lSetWidth = 6
                '    lSuffixVal = 1

                '    'Start: Reset at every month
            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            gBillNo = lInvoiceNo + lSuffix
            txtInvoiceNo.Text = lInvoiceNo + lSuffix

            dt.Dispose()
            commandDocControl.Dispose()
            conn.Close()
            conn.Dispose()
            dr.Close()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION GenerateInvoiceNo", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub GenerateBillingSchedule()

        Dim lPrefix As String
        Dim lYear As String
        Dim lMonth As String
        Dim lInvoiceNo As String
        Dim lSuffixVal As String
        Dim lSuffix As String
        Dim lSetWidth As Integer
        Dim lSetZeroes As String
        Dim lSeparator As String
        Dim strUpdate As String
        lSeparator = "-"
        strUpdate = ""

        Dim strdate As Date
        Dim d As Date
        If Date.TryParseExact(txtInvoiceDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
            strdate = d.ToShortDateString
        End If

        lPrefix = Format(CDate(strdate), "yyyyMM")
        lInvoiceNo = "SBS" + lPrefix + "-"
        lMonth = Right(lPrefix, 2)
        lYear = Left(lPrefix, 4)

        lPrefix = "SBS" + lYear
        lSuffixVal = 0

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()

        Dim commandDocControl As MySqlCommand = New MySqlCommand
        commandDocControl.CommandType = CommandType.Text
        commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
        commandDocControl.Connection = conn

        Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then

            If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "02" Then
                lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "03" Then
                lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "04" Then
                lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "05" Then
                lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "06" Then
                lSuffixVal = dt.Rows(0)("Period06").ToString
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "07" Then
                lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "08" Then
                lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "09" Then
                lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "10" Then
                lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "11" Then
                lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "12" Then
                lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            End If

            Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

            commandDocControlEdit.CommandType = CommandType.Text
            commandDocControlEdit.CommandText = strUpdate
            commandDocControlEdit.Connection = conn

            Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)
        Else

            Dim lSuffixVal1 As String
            Dim lSuffixVal2 As String
            Dim lSuffixVal3 As String
            Dim lSuffixVal4 As String
            Dim lSuffixVal5 As String
            Dim lSuffixVal6 As String
            Dim lSuffixVal7 As String
            Dim lSuffixVal8 As String
            Dim lSuffixVal9 As String
            Dim lSuffixVal10 As String
            Dim lSuffixVal11 As String
            Dim lSuffixVal12 As String

            lSuffixVal1 = 0
            lSuffixVal2 = 0
            lSuffixVal3 = 0
            lSuffixVal4 = 0
            lSuffixVal5 = 0
            lSuffixVal6 = 0
            lSuffixVal7 = 0
            lSuffixVal8 = 0
            lSuffixVal9 = 0
            lSuffixVal10 = 0
            lSuffixVal11 = 0
            lSuffixVal12 = 0

            If lMonth = "01" Then
                lSuffixVal1 = 1
            ElseIf lMonth = "02" Then
                lSuffixVal2 = 1
            ElseIf lMonth = "03" Then
                lSuffixVal3 = 1
            ElseIf lMonth = "04" Then
                lSuffixVal4 = 1
            ElseIf lMonth = "05" Then
                lSuffixVal5 = 1
            ElseIf lMonth = "06" Then
                lSuffixVal6 = 1
            ElseIf lMonth = "07" Then
                lSuffixVal7 = 1
            ElseIf lMonth = "08" Then
                lSuffixVal8 = 1
            ElseIf lMonth = "09" Then
                lSuffixVal9 = 1
            ElseIf lMonth = "10" Then
                lSuffixVal10 = 1
            ElseIf lMonth = "11" Then
                lSuffixVal11 = 1
            ElseIf lMonth = "12" Then
                lSuffixVal12 = 1
            End If

            Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

            commandDocControlInsert.CommandType = CommandType.Text
            'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
            '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

            commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                     "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

            commandDocControlInsert.Connection = conn

            Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            lSetWidth = 6
            lSuffixVal = 1

        End If

        lSetZeroes = ""

        Dim i As Integer
        If lSetWidth > 0 Then
            For i = 1 To lSetWidth - (Len(lSuffixVal))
                lSetZeroes = lSetZeroes & "0"
            Next i
            'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
            '    strZeros = "000000"
            '    setWidth = 6
            'Else                                        ' Use vLength and save it in Doc Control
            '    For i = 1 To pLength
            '        strZeros = strZeros & "0"
            '    Next i
            '    setWidth = pLength
        End If
        lSuffix = lSetZeroes + lSuffixVal.ToString()
        gBillNo = lInvoiceNo + lSuffix
        txtInvoiceNo.Text = lInvoiceNo + lSuffix
    End Sub
    Public Sub MakeMeNull()
        Try
            'txtContractDate.Text = System.DateTime.Now.Date.ToString("dd/MM/yyyy")
            'Session("contractdetailfrom") = ""
            'Session("contractno") = ""
            'Session("serviceschedulefrom") = ""
            'Session("contractfrom") = ""

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""

            txtAccountId.Text = ""
            txtClientName.Text = ""
            txtLocationId.Text = ""
            ddlContractNo.Text = ""
            txtRowSelected.Text = "0"
            'txtSearch1Status.Text = "O,P"

            'txtSearch1Status.Text = "O"
            txtBatchNo.Text = ""
            'txtMode.Text = "NEW"
            txtRcno.Text = "0"
            txtServiceBy.Text = ""
            txtTotalServiceSelected.Text = "0.00"

            txtContractTE.Text = ""
            txtLogDocNo.Text = "'"

            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True

            txtTotReceipts.Text = "0"
            ddlViewServiceRecs.Text = 15

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            'btnCopy.Enabled = False
            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnMultiPrint.Enabled = False
            btnMultiPrint.ForeColor = System.Drawing.Color.Gray

            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            btnDeleteAll.Enabled = False
            btnDeleteAll.ForeColor = System.Drawing.Color.Gray

            btnSaveInvoice.Enabled = True

            btnReceipts.Text = "RECEIPTS"
            btnCNDN.Text = "CN/DN"
            btnJournal.Text = "JOURNAL"
            '''''''''''''''''''''''''''''''''''''''''''''''''''''
            PopulateGLCodes()
            ''''''''''''''''''''''''''''''''''''''''''''''''
            'txtModeDetail.Text = "E"
            Label43.Text = "SERVICE BILLING DETAILS"
            updPnlMsg.Update()

            DisableControls()
            FirstGridViewRowBillingDetailsRecs()

            SqlDSServices.SelectCommand = ""
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            'FirstGridViewRowServiceRecs()

            Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimeinvoice();", True)
            'Me.cpnlSearchServiceRecords.Collapsed = True
            'Me.cpnlSearchServiceRecords.ClientState = "true"
            'Me.cpnlServiceBillingDetails.Collapsed = True
            'Me.cpnlServiceBillingDetails.ClientState = "true"
            'Me.cpnlInvoiceDetails.Collapsed = False

            'Dim Query As String

            'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
            ''Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            'Query = "Select * from tblbillingproducts  "
            'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

            'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            'Query = "Select * from tblunitms "
            'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)

            updpnlServiceRecs.Update()

            updPnlMsg.Update()
            'UpdatePanel1.Update()
            updPanelInvoice.Update()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION MakeMeNull", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub AccessControl()
        Try
            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            'command.CommandText = "SELECT X0252,  X0252Add, X0252Edit, X0252Delete, X0252Print FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
            command.CommandText = "SELECT X0252,  X0252Add, X0252Edit, X0252Delete, X0252Print, X0252Post, X0252Reverse, X0255, X0255QReceipt,  x0252MultiPrint, X0256, x0252EditCompanyName, x0252EditBillingAddress, x0252EditOurRef, x0252EditSalesman,x0252EditRemarks,x0252SubmitEInvoice,x0252CancelEInvoice,x0252PrintInvoice, x0252ExportInvoice, x0252ViewInvoice, x0252EmailInvoice,x0252ViewInvFormat1,x0252ViewInvFormat2,x0252ViewInvFormat3,x0252ViewInvFormat4,x0252ViewInvFormat5,x0252ViewInvFormat6,x0252ViewInvFormat7,x0252ViewInvFormat8,x0252ViewInvFormat9,x0252ViewInvFormat10,x0252ViewInvFormat11,x0252ViewInvFormat12,x0252ViewInvFormat13,x0252ViewInvFormat14,x0252FileUpload FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"

            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'conn.Close()

            If dt.Rows.Count > 0 Then
                If Not IsDBNull(dt.Rows(0)("X0252")) Then
                    If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("X0252"))) = False Then
                        If Convert.ToBoolean(dt.Rows(0)("X0252")) = False Then
                            Response.Redirect("Home.aspx")
                        End If
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("X0252Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("X0252Add")) = False Then
                        Me.btnADD.Enabled = dt.Rows(0)("X0252Add").ToString()
                        Me.btnCopy.Enabled = dt.Rows(0)("X0252Add").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0252PrintInvoice")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0252PrintInvoice")) = False Then
                        Me.btnPrintInvoice1.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice2.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice3.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice4.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice5.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice6.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice7.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice8.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()

                        Me.btnPrintInvoice9.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice10.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice11.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice12.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice13.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice14.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                        Me.btnPrintInvoice15.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()

                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0252ExportInvoice")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0252ExportInvoice")) = False Then
                        Me.btnExportInvoice1.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice2.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice3.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice4.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice5.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice6.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice7.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice8.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice9.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice10.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice11.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice12.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice13.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice14.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()
                        Me.btnExportInvoice15.Visible = dt.Rows(0)("x0252ExportInvoice").ToString()

                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0252ViewInvoice")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvoice")) = False Then
                        Me.btnViewInvoice1.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice2.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice3.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice4.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice5.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice6.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice7.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice8.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice9.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice10.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice11.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice12.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice13.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice14.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                        Me.btnViewInvoice15.Visible = dt.Rows(0)("x0252ViewInvoice").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0252EmailInvoice")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0252EmailInvoice")) = False Then
                        Me.btnEmailInvoice1.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice2.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice3.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice4.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice5.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice6.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice7.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice8.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice9.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice10.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice11.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice12.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice13.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice14.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                        Me.btnEmailInvoice15.Visible = dt.Rows(0)("x0252EmailInvoice").ToString()
                    End If
                End If





                If txtMode.Text = "View" Then
                    If btnEdit.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0252Edit")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0252Edit")) = False Then
                                Me.btnEdit.Enabled = dt.Rows(0)("X0252Edit").ToString()
                                'btnEditComments.Enabled = dt.Rows(0)("X0252Edit").ToString()
                                Me.btnRecalculate.Enabled = dt.Rows(0)("X0252Edit").ToString()
                            End If
                        End If
                    End If

                    If btnEditBillingName.Visible = True Then
                        btnEditBillingName.Visible = dt.Rows(0)("x0252EditCompanyName").ToString()
                    End If
                    If btnEditBillingDetails.Visible = True Then
                        btnEditBillingDetails.Visible = dt.Rows(0)("x0252EditBillingAddress").ToString()
                    End If
                    If btnEditPONo.Visible = True Then
                        btnEditPONo.Visible = dt.Rows(0)("x0252EditOurRef").ToString()
                    End If
                    If btnEditSalesman.Visible = True Then
                        btnEditSalesman.Visible = dt.Rows(0)("x0252EditSalesman").ToString()
                    End If
                    If btnEditComments.Visible = True Then
                        btnEditComments.Visible = dt.Rows(0)("x0252EditRemarks").ToString()
                    End If



                    If btnDelete.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0252Delete")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0252Delete")) = False Then
                                Me.btnDelete.Enabled = dt.Rows(0)("X0252Delete").ToString()
                                Me.btnDeleteAll.Enabled = dt.Rows(0)("X0252Delete").ToString()
                            End If
                        End If
                    End If

                    If btnPrint.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0252Print")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0252Print")) = False Then
                                Me.btnPrint.Enabled = dt.Rows(0)("X0252Print").ToString()
                                'Me.btnMultiPrint.Enabled = dt.Rows(0)("X0252Print").ToString()
                            End If
                        End If
                    End If

                    If btnMultiPrint.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0252MultiPrint")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0252MultiPrint")) = False Then
                                'Me.btnPrint.Enabled = dt.Rows(0)("X0252MultiPrint").ToString()
                                Me.btnMultiPrint.Enabled = dt.Rows(0)("X0252MultiPrint").ToString()
                            End If
                        End If
                    End If

                    If btnPost.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0252Post")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0252Post")) = False Then
                                Me.btnPost.Enabled = dt.Rows(0)("X0252Post").ToString()
                            End If
                        End If
                    End If

                    'If Not IsDBNull(dt.Rows(0)("X0252Reverse")) Then
                    '    If String.IsNullOrEmpty(dt.Rows(0)("X0252Reverse")) = False Then
                    '        Me.btnReverse.Enabled = dt.Rows(0)("X0252Reverse").ToString()
                    '    End If
                    'End If
                    If btnPostEInvoice.Enabled = True Then
                        If btnPostEInvoice.Text = "SUBMIT E-INVOICE" Then
                            If Not IsDBNull(dt.Rows(0)("X0252SubmitEInvoice")) Then
                                If String.IsNullOrEmpty(dt.Rows(0)("X0252SubmitEInvoice")) = False Then
                                    Me.btnPostEInvoice.Enabled = dt.Rows(0)("X0252SubmitEInvoice").ToString()
                                End If
                            End If
                        End If


                        If btnPostEInvoice.Text = "CANCEL E-INVOICE" Then
                            If Not IsDBNull(dt.Rows(0)("X0252CancelEInvoice")) Then
                                If String.IsNullOrEmpty(dt.Rows(0)("X0252CancelEInvoice")) = False Then
                                    Me.btnPostEInvoice.Enabled = dt.Rows(0)("X0252CancelEInvoice").ToString()
                                End If
                            End If
                        End If
                    End If

                    If btnReceipts.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0255")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0255")) = False Then
                                Me.btnReceipts.Enabled = dt.Rows(0)("X0255").ToString()
                                chkReceiptAccess.Checked = dt.Rows(0)("X0255").ToString()
                            End If
                        End If

                        If Not IsDBNull(dt.Rows(0)("X0255QReceipt")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0255QReceipt")) = False Then
                                If chkReceiptAccess.Checked = False Then
                                    Me.btnReceipts.Enabled = dt.Rows(0)("X0255QReceipt").ToString()
                                End If

                                chkQReceiptAccess.Checked = dt.Rows(0)("X0255QReceipt").ToString()
                            End If
                        End If
                    End If

                    If btnCNDN.Enabled = True Then
                        If Not IsDBNull(dt.Rows(0)("X0256")) Then
                            If String.IsNullOrEmpty(dt.Rows(0)("X0256")) = False Then
                                Me.btnCNDN.Enabled = dt.Rows(0)("X0256").ToString()
                                'chkQReceiptAccess.Checked = dt.Rows(0)("X0256").ToString()
                            End If
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat1")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat1")) = False Then
                            trInv1.Visible = dt.Rows(0)("x0252ViewInvFormat1")
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat2")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat2")) = False Then
                            trInv2.Visible = dt.Rows(0)("x0252ViewInvFormat2")
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat3")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat3")) = False Then
                            trInv3.Visible = dt.Rows(0)("x0252ViewInvFormat3")
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat4")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat4")) = False Then
                            trInv4.Visible = dt.Rows(0)("x0252ViewInvFormat4")
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat5")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat5")) = False Then
                            trInv5.Visible = dt.Rows(0)("x0252ViewInvFormat5")
                        End If
                    End If
                    '   lblAlert.Text = "Access " + dt.Rows(0)("x0252ViewInvFormat6").ToString + " : " + dt.Rows(0)("x0252ViewInvFormat5").ToString
                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat6")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat6")) = False Then
                            trInv6.Visible = dt.Rows(0)("x0252ViewInvFormat6")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat7")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat7")) = False Then
                            trInv7.Visible = dt.Rows(0)("x0252ViewInvFormat7")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat8")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat8")) = False Then
                            trInv8.Visible = dt.Rows(0)("x0252ViewInvFormat8")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat9")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat9")) = False Then
                            trInv9.Visible = dt.Rows(0)("x0252ViewInvFormat9")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat10")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat10")) = False Then
                            trInv10.Visible = dt.Rows(0)("x0252ViewInvFormat10")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat11")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat11")) = False Then
                            trInv11.Visible = dt.Rows(0)("x0252ViewInvFormat11")
                            trInv15.Visible = dt.Rows(0)("x0252ViewInvFormat11")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat12")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat12")) = False Then
                            trInv12.Visible = dt.Rows(0)("x0252ViewInvFormat12")
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat13")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat13")) = False Then
                            trInv13.Visible = dt.Rows(0)("x0252ViewInvFormat13")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252ViewInvFormat14")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252ViewInvFormat14")) = False Then
                            trInv14.Visible = dt.Rows(0)("x0252ViewInvFormat14")
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0252FileUpload")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0252FileUpload")) = False Then
                            txtFileUpload.Text = dt.Rows(0)("x0252FileUpload").ToString()
                            btnUpload.Enabled = dt.Rows(0)("x0252FileUpload").ToString()
                            FileUpload1.Enabled = dt.Rows(0)("x0252FileUpload").ToString()
                        Else
                            txtFileUpload.Text = "0"
                        End If
                    Else
                        txtFileUpload.Text = "0"
                    End If

                Else
                    Me.btnEdit.Enabled = False
                    Me.btnDelete.Enabled = False
                    Me.btnPrint.Enabled = False
                    Me.btnMultiPrint.Enabled = False
                    Me.btnPost.Enabled = False
                    Me.btnReverse.Enabled = False
                End If

                'If String.IsNullOrEmpty(dt.Rows(0)("X0252Print")) = False Then
                '    Me.btnDelete.Enabled = dt.Rows(0)("X0252Print").ToString()
                'End If



                If btnADD.Enabled = True Then
                    btnADD.ForeColor = System.Drawing.Color.Black
                Else
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEdit.Enabled = True Then
                    btnEdit.ForeColor = System.Drawing.Color.Black
                Else
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDelete.Enabled = True Then
                    btnDelete.ForeColor = System.Drawing.Color.Black
                Else
                    btnDelete.ForeColor = System.Drawing.Color.Gray
                End If

                If btnPrint.Enabled = True Then
                    btnPrint.ForeColor = System.Drawing.Color.Black
                    btnMultiPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnPrint.ForeColor = System.Drawing.Color.Gray
                    btnMultiPrint.ForeColor = System.Drawing.Color.Gray
                End If
                If btnMultiPrint.Enabled = True Then
                    btnMultiPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnMultiPrint.ForeColor = System.Drawing.Color.Gray
                End If
                If btnPost.Enabled = True Then
                    btnPost.ForeColor = System.Drawing.Color.Black
                Else
                    btnPost.ForeColor = System.Drawing.Color.Gray
                End If

                If btnReverse.Enabled = True Then
                    btnReverse.ForeColor = System.Drawing.Color.Black
                Else
                    btnReverse.ForeColor = System.Drawing.Color.Gray
                End If

                If btnReceipts.Enabled = True Then
                    btnReceipts.ForeColor = System.Drawing.Color.Black
                Else
                    btnReceipts.ForeColor = System.Drawing.Color.Gray
                End If
            End If

            '01.12.24
            btnReverse.Visible = False
            '01.12.24

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            'Else
            '    chkReceiptAccess.Checked = True
            '    chkQReceiptAccess.Checked = True

            'End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION AccessControl", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub DisableControls()
        btnSave.Enabled = False
        btnSave.ForeColor = System.Drawing.Color.Gray
        btnCancel.Enabled = False
        btnCancel.ForeColor = System.Drawing.Color.Gray
        btnADD.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black

        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray

        btnRecalculate.Enabled = False
        btnRecalculate.ForeColor = System.Drawing.Color.Gray

        btnJournal.Enabled = False
        btnJournal.ForeColor = System.Drawing.Color.Gray
      
        'btnClient.Visible = False
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black

        'chkManualInvoice.Enabled = False
        chkManualInvoice.Visible = False
        chkManualInvoice.Checked = False
        txtInvoiceNo.Enabled = False
        txtInvoiceDate.Enabled = False
        txtBillingPeriod.Enabled = False
        txtCompanyGroup.Enabled = False
        txtAccountIdBilling.Enabled = False
        txtAccountType.Enabled = False
        txtAccountName.Enabled = False

        txtTIN.Enabled = False
        txtSSTNo.Enabled = False

        txtBillAddress.Enabled = False
        txtBillStreet.Enabled = False
        txtBillBuilding.Enabled = False

        txtBillCity.Enabled = False
        txtBillState.Enabled = False

        'txtBillCityEdit.Enabled = False
        'txtBillStateEdit.Enabled = False
        If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) <> "SINGAPORE" Then
            txtBillCity.Attributes.Remove("readonly")
            txtBillState.Attributes.Remove("readonly")
            txtBillCityEdit.Attributes.Remove("readonly")
            txtBillStateEdit.Attributes.Remove("readonly")
        Else
            txtBillCity.Attributes.Add("readonly", "readonly")
            txtBillState.Attributes.Add("readonly", "readonly")
            txtBillCityEdit.Attributes.Add("readonly", "readonly")
            txtBillStateEdit.Attributes.Add("readonly", "readonly")
        End If

        txtBillPostal.Enabled = False
        ddlSalesmanBilling.Enabled = False
        txtInvoiceAmount.Enabled = False
        txtBillCountry.Enabled = False
        txtPONo.Enabled = False
        ddlCreditTerms.Enabled = False
        txtDiscountAmount.Enabled = False
        txtAmountWithDiscount.Enabled = False
        txtGSTAmount.Enabled = False
        txtNetAmount.Enabled = False
        txtOurReference.Enabled = False
        txtYourReference.Enabled = False
        txtComments.Enabled = False
        txtDescription.Enabled = False
        txtContactPerson.Enabled = False
        txtCreditDays.Enabled = False
        txtDueDate.Enabled = False
        ddlDocType.Enabled = False
        ddlContractGroupBilling.Enabled = False
        txtGST.Enabled = False

        chkGSTInclusive.Enabled = False
        btnSaveInvoice.Enabled = False
        'btnSave.Enabled = False
        btnShowRecords.Enabled = False

        grvBillingDetails.Enabled = False
        rbtInvoiceType.Enabled = False
        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray


        'btnQuickReceipt.Enabled = False
        'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray
        btnClient1.Visible = False
        btnImport.Enabled = False

        grvBillingDetailsNew.Enabled = False

        btnEditBillingDetails.Visible = False
        btnEditPONo.Visible = False
        btnEditComments.Visible = False
        btnEditBillingName.Visible = False
        btnEditSalesman.Visible = False
        'grvBillingDetails.Enabled = False
        'ddlCompanyGrp.Enabled = False
        'ddlContractNo.Enabled = False
        'txtDateFrom.Enabled = False
        'txtDateTo.Enabled = False
        'ddlContactType.Enabled = False
        'ddlServiceFrequency.Enabled = False
        'ddlBillingFrequency.Enabled = False
        'ddlContractGroup.Enabled = False
        'txtAccountId.Enabled = False

        'txtClientName.Enabled = False
        'txtLocationId.Enabled = False


        'rdbAll.Enabled = False
        'rdbCompleted.Enabled = False
        'rdbNotCompleted.Enabled = False
        'btnClient.Visible = False
        'BtnLocation.Visible = False
        'grvServiceRecDetails.Enabled = False

        'btnDelete.Enabled = False
        'btnDelete.ForeColor = System.Drawing.Color.Gray


        ''''''''''''''''''''
        txtInvoicenoSearch.Enabled = True
        txtInvoiceDateFromSearch.Enabled = True
        txtInvoiceDateToSearch.Enabled = True
        ddlCompanyGrpSearch.Enabled = True
        ddlContactTypeSearch.Enabled = True
        txtAccountIdSearch.Enabled = True
        txtServiceAddressSearch.Enabled = True

        '  chkEInvoiceSearch.Enabled = True
        ddlEInvoice.Enabled = True

        txtSearch1Status.Enabled = True
        btnQuickSearch.Enabled = True
        btnQuickReset.Enabled = True
        txtCommentsSearch.Enabled = True
        txtClientNameSearch.Enabled = True
        btnSearch1Status.Enabled = True
        btnClientSearch0.Enabled = True
        btnClientSearch.Enabled = True
        rdbSearchPaidStatus.Enabled = True

        btnFilter.Enabled = True
        '''''''''''''''''''
        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray


        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray


        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black


        btnPostEInvoice.Enabled = False
        btnPostEInvoice.ForeColor = System.Drawing.Color.Gray
        'btnReset.Enabled = False
        'btnReset.ForeColor = System.Drawing.Color.Gray

        AccessControl()
    End Sub

    Private Sub EnableControls()
        btnSave.Enabled = True
        btnSave.ForeColor = System.Drawing.Color.Black
        btnCancel.Enabled = True
        btnCancel.ForeColor = System.Drawing.Color.Black
        btnClient.Visible = True
        btnADD.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        'btnDelete.Enabled = False
        'btnDelete.ForeColor = System.Drawing.Color.Gray

        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray

        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray


        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        'btnQuickReceipt.Enabled = False
        'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray



        'btnQuit.Enabled = False
        'btnQuit.ForeColor = System.Drawing.Color.Gray

        'btnBack.Enabled = False
        'btnBack.ForeColor = System.Drawing.Color.Gray

        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray

        btnRecalculate.Enabled = False
        btnRecalculate.ForeColor = System.Drawing.Color.Gray

        'rdbAll.Attributes.Remove("disabled")
        'rdbCompleted.Attributes.Add("readonly", "readonly")
        'rdbNotCompleted.Attributes.Add("readonly", "readonly")

        'rdbAll.Enabled = True
        'rdbCompleted.Enabled = True
        'rdbNotCompleted.Enabled = True

        rdbNotCompleted.Enabled = True
        rdbCompleted.Enabled = True
        rdbAll.Enabled = True
        ddlCompanyGrp.Enabled = True
        ddlContactType.Enabled = True
        txtClientName.Enabled = True
        txtAccountId.Enabled = True
        txtLocationId.Enabled = True
        ddlContractNo.Enabled = True
        txtDateFrom.Enabled = True
        txtDateTo.Enabled = True

        ddlServiceFrequency.Enabled = True
        ddlBillingFrequency.Enabled = True
        'ddlContractGroup.Enabled = True
        txtAccountIdBilling.Enabled = True

        chkManualInvoice.Enabled = True
        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True

        txtTIN.Enabled = True
        txtSSTNo.Enabled = True


        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True

        If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) <> "SINGAPORE" Then
            txtBillCity.Enabled = True
            txtBillState.Enabled = True

            txtBillCityEdit.Enabled = True
            txtBillStateEdit.Enabled = True
        Else
            txtBillCity.Enabled = False
            txtBillState.Enabled = False

            txtBillCityEdit.Enabled = False
            txtBillStateEdit.Enabled = False
        End If
        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True

        txtComments.Enabled = True
        txtDescription.Enabled = True
        ddlDocType.Enabled = True
        'txtDueDate.Enabled = True
        ddlContractGroupBilling.Enabled = True

        txtContactPerson.Enabled = True
        txtGST.Enabled = True
        chkGSTInclusive.Enabled = True
        'txtCreditDays.Enabled = True
        btnSaveInvoice.Enabled = True
        'btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnImport.Enabled = True
        'ddlContactType.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'txtAccountId.Enabled = True
        'txtContractNo.Enabled = True
        'txtClientName.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractGrp.Enabled = True

        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        btnEditBillingDetails.Visible = False
        btnEditPONo.Visible = False
        btnEditComments.Visible = False
        btnEditBillingName.Visible = False
        btnEditSalesman.Visible = False
        btnDelete.Enabled = True

        grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True


        ''''''''''''''''''''
        txtInvoicenoSearch.Enabled = False
        txtInvoiceDateFromSearch.Enabled = False
        txtInvoiceDateToSearch.Enabled = False
        ddlCompanyGrpSearch.Enabled = False
        ddlContactTypeSearch.Enabled = False
        txtAccountIdSearch.Enabled = False
        txtServiceAddressSearch.Enabled = False

        '  chkEInvoiceSearch.Enabled = False
        ddlEInvoice.Enabled = False

        txtSearch1Status.Enabled = False
        btnQuickSearch.Enabled = False
        btnQuickReset.Enabled = False
        txtCommentsSearch.Enabled = False
        txtClientNameSearch.Enabled = False
        btnSearch1Status.Enabled = False
        btnClientSearch0.Enabled = False
        btnClientSearch.Enabled = False
        rdbSearchPaidStatus.Enabled = False
        btnFilter.Enabled = False

        '''''''''''''''''''
        updpnlServiceRecs.Update()

        updPanelSave.Update()
        'UpdatePanel1.Update()

        btnClient.Visible = True
        btnClient1.Visible = True
        BtnLocation.Visible = True
        rbtInvoiceType.Enabled = True

        btnPostEInvoice.Enabled = False
        btnPostEInvoice.ForeColor = System.Drawing.Color.Gray
        AccessControl()
    End Sub



    'Function

    'Button-click
    Protected Sub ShowMessage(sender As Object, e As EventArgs, message As String)

        'Dim message As String = "alert('Hello! Mudassar.')"

        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try
            'txtInvoiceDate.Text = ""
            MakeMeNull()
            MakeMeNullBillingDetails()
            EnableControls()
            If chkRecurringInvoice.Checked = True Then
                txtAccountId.Text = txtAccountIdBilling.Text
                'UpdatePanel1.Update()
                btnShowRecords_Click(sender, e)
            End If

            updPanelInvoice.Update()
            txtMode.Text = "NEW"
            lblMessage.Text = "ACTION: ADD RECORD"
            txtSearch1Status.Text = "O,P"

            If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
                txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
            End If


            '24.03.24
            If String.IsNullOrEmpty(txtLocation.Text) = False Then
                FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
            End If


            '24.03.24

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnReceipts.Enabled = False
            btnReceipts.ForeColor = System.Drawing.Color.Gray


            btnCNDN.Enabled = False
            btnCNDN.ForeColor = System.Drawing.Color.Gray

            btnBack.Enabled = False
            btnBack.ForeColor = System.Drawing.Color.Gray

     
            'btnReset.Enabled = False
            'btnReset.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnMultiPrint.Enabled = False
            btnMultiPrint.ForeColor = System.Drawing.Color.Gray

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnJournal.Enabled = False
            btnJournal.ForeColor = System.Drawing.Color.Gray

            chkManualInvoice.Visible = True

            grvBillingDetails.ShowHeader = True
            'pnlGrid.Enabled = False

            txtAccountIdBilling.Focus()
        Catch ex As Exception
            lblAlert.Text = ex.Message
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnADD_Click", ex.Message.ToString, "")
            'MsgBox("Error" & ex.Message)
        End Try
    End Sub


    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)

            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
                con.Dispose()
                cmd.Dispose()
            End Using
            'End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateDropDownList", ex.Message.ToString, textField.Trim() & valueField.Trim())
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As AjaxControlToolkit.ComboBox)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub


    Public Sub PopulateComboBoxSaplin(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As Saplin.Controls.DropDownCheckBoxes)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            cmd.CommandTimeout = 0
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub
    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        GridView1.PageIndex = e.NewPageIndex


        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If
        SQLDSInvoice.SelectCommand = txt.Text
        GridView1.DataBind()
    End Sub



    Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        lblAlert.Text = ""
        Try
            If txtPostStatus.Text = "P" Then
                lblAlert.Text = "Invoice has already been POSTED.. Cannot be DELETED"
                'Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

                Exit Sub
            End If

            If txtPostStatus.Text = "V" Then
                lblAlert.Text = "Invoice is VOID.. Cannot be DELETED"
                'Dim message2 As String = "alert('Contract is VOID.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message2, True)

                Exit Sub
            End If

            lblAlert.Text = ""
            lblMessage.Text = "ACTION: DELETE RECORD"


            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()


                ''Delete from tblSalesDetail

                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                'commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
                commandValues.CommandText = "SELECT *  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                For Each row As DataRow In dtValues.Rows

                    If Convert.ToDecimal(row("ValueBase")) > 0.0 Then

                        'Start: Update tblServiceRecord
                        If row("ItemCode") = "IN-DEF" Or row("ItemCode") = "IN-SRV" Then

                            UpdateServiceRecord(row("RefType"), row("ValueBase"), row("ValueBase"), "Delete")

                            'Dim command4 As MySqlCommand = New MySqlCommand
                            'command4.CommandType = CommandType.Text

                            ''Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                            'Dim qry4 As String = "Update tblservicerecord Set BillYN = 'N' where Rcno= @Rcno "

                            'command4.CommandText = qry4
                            'command4.Parameters.Clear()

                            'command4.Parameters.AddWithValue("@Rcno", row("RcnoServiceRecord"))
                            'command4.Connection = conn
                            'command4.ExecuteNonQuery()
                        End If
                    End If

                Next row


                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                Dim qry1 As String = "DELETE from tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"

                command1.CommandText = qry1
                'command1.Parameters.Clear()

                'command1.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                command1.Connection = conn
                command1.ExecuteNonQuery()


                ''Delete from tblSalesDetail


                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim qry2 As String = "DELETE from tblSales where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"

                command2.CommandText = qry2
                'command2.Parameters.Clear()

                'command2.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                command2.Connection = conn
                command2.ExecuteNonQuery()


                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                'conn.Close()

                'Dim message As String = "alert('Contract is deleted Successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


                'btnADD_Click(sender, e)

                'txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit 50"
                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                'GridView1.DataSourceID = "SqlDSContract"


                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)


                MakeMeNull()
                MakeMeNullBillingDetails()
                GridView1.DataBind()
                lblMessage.Text = "DELETE: INVOICE SUCCESSFULLY DELETED"

                updPnlMsg.Update()
                updPnlSearch.Update()

                command1.Dispose()
                command2.Dispose()
                commandValues.Dispose()
                dtValues.Dispose()
                'updpnlServiceRecs.Update()
                'GridView1.DataBind()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnDelete_Click", ex.Message.ToString, "")

        End Try
    End Sub


    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting

        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If

        'GridView1.DataBind()

        SQLDSInvoice.SelectCommand = txt.Text
        GridView1.DataBind()
    End Sub

    ''''''' Start: Service Details

    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        lblMessage.Text = ""
        lblAlert.Text = ""
        'If txtStatus.Text = "O" Then
        '    'btnSave.Enabled = True
        'Else
        '    'btnSave.Enabled = False
        '    lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
        '    Exit Sub
        'End If

        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return
        End If

        lblMessage.Text = "ACTION: EDIT RECORD"

        txtMode.Text = "EDIT"

        'btnSave.Enabled = True
        'btnSave.ForeColor = System.Drawing.Color.Black
        'btnCancel.Enabled = True
        'btnCancel.ForeColor = System.Drawing.Color.Black
        'btnClient.Visible = True
        'btnADD.Enabled = True
        'btnADD.ForeColor = System.Drawing.Color.Black

        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnDeleteAll.Enabled = True
        btnDeleteAll.ForeColor = System.Drawing.Color.Black

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnPost.Enabled = False
        btnPost.ForeColor = System.Drawing.Color.Gray

        btnJournal.Enabled = False
        btnJournal.ForeColor = System.Drawing.Color.Gray

        'rdbNotCompleted.Enabled = True
        'rdbCompleted.Enabled = True
        'rdbAll.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'ddlContactType.Enabled = True
        'txtClientName.Enabled = True
        'txtAccountId.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        'txtAccountIdBilling.Enabled = True


        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True

        txtTIN.Enabled = True
        txtSSTNo.Enabled = True

        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True

        txtBillCity.Enabled = True
        txtBillState.Enabled = True


        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtComments.Enabled = True
        txtDescription.Enabled = True
        'btnSaveInvoice.Enabled = True
        btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnSaveInvoice.Enabled = True

        'ddlContactType.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'txtAccountId.Enabled = True
        'txtContractNo.Enabled = True
        'txtClientName.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractGrp.Enabled = True

        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        'btnDelete.Enabled = True
        grvBillingDetailsNew.Enabled = True
        'grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True
        grvBillingDetails.Enabled = True


        '''''''''''''''''''
        If Val((grvBillingDetailsNew.Rows.Count).ToString) < Val(txtTotDetRec.Text) Then
            If Val(txtTotDetRec.Text) > 100 Then
                ddlViewServiceRecs.Text = 500
            ElseIf Val(txtTotDetRec.Text) > 50 Then
                ddlViewServiceRecs.Text = 100
            ElseIf Val(txtTotDetRec.Text) > 25 Then
                ddlViewServiceRecs.Text = 50
            ElseIf Val(txtTotDetRec.Text) > 15 Then
                ddlViewServiceRecs.Text = 25
            End If

            'If Val(txtTotDetRec.Text) > 15 Then
            '    ddlViewServiceRecs.Text = 25
            'ElseIf Val(txtTotDetRec.Text) > 25 Then
            '    ddlViewServiceRecs.Text = 50
            'ElseIf Val(txtTotDetRec.Text) > 50 Then
            '    ddlViewServiceRecs.Text = 100
            'ElseIf Val(txtTotDetRec.Text) > 100 Then
            '    ddlViewServiceRecs.Text = 200
            'End If
            ddlViewServiceRecs_SelectedIndexChanged(sender, e)
        End If



        '''''''''''''''''''''''''
        updpnlServiceRecs.Update()

        updPanelSave.Update()
        'UpdatePanel2.Update()

        EnableControls()

        chkGSTInclusive.Enabled = False
        'txtAccountIdBilling.Attributes.Add("readonly", "readonly")
        'txtAccountType.Attributes.Add("readonly", "readonly")


        'txtAccountType.Enabled = False
        'btnClient1.Visible = False

        UpdatePanel3.Update()
        updPanelInvoice.Update()

        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        grvBillingDetails.Visible = True
    End Sub


    Private Sub PopulateQuickSearch()
        Dim strsql As String = ""
        Try
            lblMessage.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""

            txtConditionMultiPrint.Text = ""
            txtAccountIDMPCorporate.Text = ""
            txtAccountIDMPResidential.Text = ""
            Dim strPostStatusCorporate As String
            strPostStatusCorporate = ""


            strsql = "Select a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1, a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.Billcity,a.ConsolidatedInvoiceNo,  "
            strsql = strsql & " a.ValueBase, a.ValueOriginal, a.GSTBase, a.GSTOriginal, a.AppliedBase, a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.yourRef, a.Terms, a.DiscountAmount, a.GSTAmount, a.NetAmount, a.GLPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Salesman, a.Comments, a.AmountWithDiscount , a.TermsDay, a.RecurringInvoice,  a.BillSchedule, "
            strsql = strsql & " a.ReceiptBase, a.CreditBase, a.StaffCode, a.CustAddress1, a.CustAddCountry, a.CustAddPostal, a.CustAddStreet, a.custAddBuilding,  a.CustAddCity, a.PrintCounter, a.EmailSentStatus, a.Location, a.EmailSentDate, "
            strsql = strsql & " a.CreatedBy,   a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.Rcno, a.Description,a.TaxIdentificationNo,a.SalesTaxRegistrationNo, "
            strsql = strsql & " a.ServiceAddress, a.EI, a.EInvoiceStatus, a.UUID,a.SubmissionID,a.SubmissionDate,a.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            strsql = strsql & " from tblSales a, tblCompany b where 1=1 "
            strsql = strsql & " and (a.AccountID = b.AccountId)  "
            'strsql = strsql & " and (a.ContactType='COMPANY')  "

            'strsql = strsql & " from tblSales where 1=1 "

            'strsql = strsql & " from tblSales, invoiceserviceaddress where tblSales.InvoiceNumber = invoiceserviceaddress.invoiceNumber and  1=1 "

            'txtCondition.Text = " and (DocType='ARIN')  "

            'txtSelect.Text = strsql

            txtCondition.Text = txtCondition.Text & " and (a.ContactType='COMPANY') "

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str.ToUpper)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                'txtCondition.Text = txtCondition.Text & " and a.PostStatus in (" + YrStr + ")"
                strPostStatusCorporate = " and a.PostStatus in (" + YrStr + ")"
            End If


            'If String.IsNullOrEmpty(txtBillingPeriodSearch.Text) = False Then
            '    strsql = strsql & " and GLPeriod like '%" & txtBillingPeriodSearch.Text.Trim + "%'"
            'End If


            If ddlCompanyGrpSearch.SelectedIndex > 0 Then
                If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                    txtCondition.Text = txtCondition.Text & " and a.CompanyGroup = '" & ddlCompanyGrpSearch.Text.Trim + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtInvoicenoSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.InvoiceNumber like '%" & txtInvoicenoSearch.Text.Trim + "%'"
            End If

            If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
            End If


            'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"

            'End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
            End If

            If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and a.CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If

            If rdbSearchPaidStatus.SelectedItem.Value = "Fully Paid" Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase = 0 and a.ValueBase <> 0 "
            ElseIf rdbSearchPaidStatus.SelectedItem.Value = "O/S" Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase <>  0"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateFromSearch.Text) = False And txtInvoiceDateFromSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateFromSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateToSearch.Text) = False And txtInvoiceDateToSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateToSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtCommentsSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.Comments like '%" & txtCommentsSearch.Text.Trim & "%'"
            End If

            'txtConditionMultiPrint.Text = txtCondition.Text


            If txtDisplayRecordsLocationwise.Text = "Y" Then
                txtCondition.Text = txtCondition.Text & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                'If ddlBranch.SelectedIndex > 0 Then
                '    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                '        txtCondition.Text = txtCondition.Text & " and a.location = '" & ddlBranch.Text.Trim + "'"
                '    End If
                'End If

                '17.01.24


                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    txtCondition.Text = txtCondition.Text + " and a.location in (" + YrStr + ")"

                Else
                    txtCondition.Text = txtCondition.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                Dim pending As String = "N"

                Dim YrStrList2 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlInvoiceStatusSearch.Items
                    If item.Selected Then
                        If item.value = "PENDING SUBMISSION" Then
                            pending = "Y"
                        Else
                            YrStrList2.Add("""" + item.Value + """")

                        End If
       
                    End If
                Next
            
                If YrStrList2.Count > 0 Then

                    Dim YrStr2 As [String] = [String].Join(",", YrStrList2.ToArray)
                    InsertIntoTblWebEventLog("INVOICE", "btnQuickSearch", YrStr2, txtCreatedBy.Text)
                    If pending = "Y" Then
                        txtCondition.Text = txtCondition.Text + " and (a.EInvoiceStatus in (" + YrStr2 + ") OR (a.EInvoiceStatus is null  and a.EI='Y'))"
                    Else
                        txtCondition.Text = txtCondition.Text + " and a.EInvoiceStatus in (" + YrStr2 + ")"
                    End If
                 
                Else
                    If pending = "Y" Then
                        txtCondition.Text = txtCondition.Text + " and a.EInvoiceStatus is null and a.EI='Y'"
                    End If
                    '17.01.24
                End If
            End If


            'If chkEInvoiceSearch.Checked = True Then
            '    txtCondition.Text = txtCondition.Text & " and a.EI = 'Y'"
            'End If

            If ddlEInvoice.Text.Trim = "Normal Invoice" Then
                txtCondition.Text = txtCondition.Text & " and a.EI = 'N' "
            End If

            If ddlEInvoice.Text.Trim = "E-Invoice" Then
                txtCondition.Text = txtCondition.Text & " and a.EI = 'Y'"
            End If

            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
                'txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
                'txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            End If


            txtAccountIDMPCorporate.Text = strsql + txtCondition.Text

            txtConditionCorporate.Text = txtCondition.Text + strPostStatusCorporate
            'strsql = strsql & " UNION "
            strsql = ""
            txtCondition.Text = ""
            Dim strPostStatusResidential As String
            strPostStatusResidential = ""

            strsql = strsql & " Select c.PostStatus, c.PaidStatus, c.GlStatus, c.InvoiceNumber, c.SalesDate, c.AccountId, c.CustName, c.BillAddress1, c.BillBuilding, c.BillStreet, c.BillCountry, c.BillPostal, c.Billcity,c.ConsolidatedInvoiceNo, "
            strsql = strsql & " c.ValueBase, c.ValueOriginal, c.GSTBase, c.GSTOriginal, c.AppliedBase, c.AppliedOriginal, c.BalanceBase, c.BalanceOriginal, c.Salesman, c.PoNo, c.OurRef, c.yourRef, c.Terms, c.DiscountAmount, c.GSTAmount, c.NetAmount, c.GLPeriod, c.CompanyGroup, c.ContactType, c.BatchNo, c.Salesman, c.Comments, c.AmountWithDiscount , c.TermsDay, c.RecurringInvoice,  c.BillSchedule, "
            strsql = strsql & " c.ReceiptBase, c.CreditBase, c.StaffCode, c.CustAddress1, c.CustAddCountry, c.CustAddPostal, c.CustAddStreet, c.custAddBuilding,  c.CustAddCity, c.PrintCounter, c.EmailSentStatus, c.Location, c.EmailSentDate, "
            strsql = strsql & " c.CreatedBy,   c.CreatedOn, c.LastModifiedBy, c.LastModifiedOn, c.Rcno, c.Description,c.TaxIdentificationNo,c.SalesTaxRegistrationNo, "
            strsql = strsql & " c.ServiceAddress, c.EI, c.EInvoiceStatus, c.UUID,c.SubmissionID,c.SubmissionDate,c.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            strsql = strsql & " from tblSales c, tblPerson d where 1=1 "
            strsql = strsql & " and (c.AccountID = d.AccountId)  "
            'strsql = strsql & " and (c.ContactType='PERSON')  "

            txtCondition.Text = txtCondition.Text & " and (c.ContactType='PERSON')"

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str.ToUpper)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                'txtCondition.Text = txtCondition.Text & " and c.PostStatus in (" + YrStr + ")"
                'strPostStatusResidential = " and (c.ContactType='PERSON') "
                strPostStatusResidential = " and c.PostStatus in (" + YrStr + ")"
            End If


            'If String.IsNullOrEmpty(txtBillingPeriodSearch.Text) = False Then
            '    strsql = strsql & " and GLPeriod like '%" & txtBillingPeriodSearch.Text.Trim + "%'"
            'End If



            If ddlCompanyGrpSearch.SelectedIndex > 0 Then
                If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                    txtCondition.Text = txtCondition.Text & " and c.CompanyGroup = '" & ddlCompanyGrpSearch.Text.Trim + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtInvoicenoSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.InvoiceNumber like '%" & txtInvoicenoSearch.Text.Trim + "%'"
            End If

            If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
            End If


            'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"

            'End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
            End If

            If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and c.CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If

            If rdbSearchPaidStatus.SelectedItem.Value = "Fully Paid" Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase = 0 and c.ValueBase <> 0 "
            ElseIf rdbSearchPaidStatus.SelectedItem.Value = "O/S" Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase <>  0"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateFromSearch.Text) = False And txtInvoiceDateFromSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateFromSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateToSearch.Text) = False And txtInvoiceDateToSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateToSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtCommentsSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.Comments like '%" & txtCommentsSearch.Text.Trim & "%'"
            End If

            'txtConditionMultiPrint.Text = txtCondition.Text

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                txtCondition.Text = txtCondition.Text & " and c.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                'If ddlBranch.SelectedIndex > 0 Then
                '    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                '        txtCondition.Text = txtCondition.Text & " and c.location = '" & ddlBranch.Text.Trim + "'"
                '    End If
                'End If

                '17.01.24


                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    txtCondition.Text = txtCondition.Text + " and c.location in (" + YrStr + ")"

                Else
                    txtCondition.Text = txtCondition.Text & " and c.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If


                Dim pending As String = "N"


                Dim YrStrList2 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlInvoiceStatusSearch.Items
                    If item.Selected Then

                        If item.value = "PENDING SUBMISSION" Then
                            pending = "Y"
                        Else
                            YrStrList2.Add("""" + item.Value + """")

                        End If

                    End If
                Next

                If YrStrList2.Count > 0 Then

                    Dim YrStr2 As [String] = [String].Join(",", YrStrList2.ToArray)
                    InsertIntoTblWebEventLog("INVOICE", "btnQuickSearch", YrStr2, txtCreatedBy.Text)
                    If pending = "Y" Then
                        txtCondition.Text = txtCondition.Text + " and (c.EInvoiceStatus in (" + YrStr2 + ") OR (c.EInvoiceStatus is null and c.EI='Y'))"
                    Else
                        txtCondition.Text = txtCondition.Text + " and c.EInvoiceStatus in (" + YrStr2 + ")"
                    End If

                Else
                    If pending = "Y" Then
                        txtCondition.Text = txtCondition.Text + " and c.EInvoiceStatus is null and c.EI='Y'"
                    End If
                    '17.01.24
                End If

       
            End If

            'If chkEInvoiceSearch.Checked = True Then
            '    txtCondition.Text = txtCondition.Text & " and c.EI = 'Y'"
            'End If

            If ddlEInvoice.Text.Trim = "Normal Invoice" Then
                txtCondition.Text = txtCondition.Text & " and c.EI = 'N' "
            End If

            If ddlEInvoice.Text.Trim = "E-Invoice" Then
                txtCondition.Text = txtCondition.Text & " and c.EI = 'Y'"
            End If

            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
                'txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
                'txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            End If


            txtAccountIDMPResidential.Text = strsql + txtCondition.Text + strPostStatusResidential

            txtConditionResidential.Text = txtCondition.Text + strPostStatusResidential


            If ddlContactTypeSearch.SelectedIndex = 0 Then
                txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate + " UNION " + txtAccountIDMPResidential.Text + strPostStatusResidential
            ElseIf ddlContactTypeSearch.SelectedIndex = 1 Then
                txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate
                txtConditionResidential.Text = ""
                txtAccountIDMPResidential.Text = ""
            ElseIf ddlContactTypeSearch.SelectedIndex = 2 Then
                txtAccountIDMPCorporate.Text = ""
                txtConditionCorporate.Text = ""
                txtSelect.Text = txtAccountIDMPResidential.Text + strPostStatusResidential
            End If


            txtOrderBy.Text = " order by rcno desc, custname "


            'strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            txt.Text = txtSelect.Text + txtOrderBy.Text + " limit " & txtLimit.Text

        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "PopulateQuickSearch", ex.Message.ToString, Left(strsql, 1000))
        End Try
    End Sub


    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click

        PopulateQuickSearch()

        'Dim strsql As String = ""
        Try
            '    lblMessage.Text = ""
            '    txtTotalInvoiceAmount.Text = "0.00"
            '    txtCondition.Text = ""

            '    txtConditionMultiPrint.Text = ""
            '    txtAccountIDMPCorporate.Text = ""
            '    txtAccountIDMPResidential.Text = ""

            '    'strsql = SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, 
            '    strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            '    'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            '    strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            '    strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, Description, EmailSentStatus, EmailSentDate, Location,"
            '    strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno "
            '    strsql = strsql & " , ServiceAddress "

            '    strsql = strsql & " from tblSales where 1=1 "

            '    'strsql = strsql & " from tblSales, invoiceserviceaddress where tblSales.InvoiceNumber = invoiceserviceaddress.invoiceNumber and  1=1 "

            '    'txtCondition.Text = " and (DocType='ARIN')  "

            '    txtSelect.Text = strsql

            '    If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
            '        Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
            '        Dim YrStrList As List(Of [String]) = New List(Of String)()

            '        For Each str As String In stringList
            '            str = "'" + str + "'"
            '            YrStrList.Add(str.ToUpper)
            '        Next

            '        Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            '        txtCondition.Text = txtCondition.Text & " and PostStatus in (" + YrStr + ")"

            '    End If





            '    'If String.IsNullOrEmpty(txtBillingPeriodSearch.Text) = False Then
            '    '    strsql = strsql & " and GLPeriod like '%" & txtBillingPeriodSearch.Text.Trim + "%'"
            '    'End If


            '    If ddlCompanyGrpSearch.SelectedIndex > 0 Then
            '        If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
            '            txtCondition.Text = txtCondition.Text & " and CompanyGroup = '" & ddlCompanyGrpSearch.Text.Trim + "'"
            '        End If
            '    End If

            '    If String.IsNullOrEmpty(txtInvoicenoSearch.Text) = False Then
            '        txtCondition.Text = txtCondition.Text & " and InvoiceNumber like '%" & txtInvoicenoSearch.Text.Trim + "%'"
            '    End If

            '    If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
            '        txtCondition.Text = txtCondition.Text & " and ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
            '    End If


            '    'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '    '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"

            '    'End If

            '    If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
            '        txtCondition.Text = txtCondition.Text & " and CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
            '    End If

            '    If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
            '        txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            '    End If

            '    'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            '    'End If

            '    If rdbSearchPaidStatus.SelectedItem.Value = "Fully Paid" Then
            '        txtCondition.Text = txtCondition.Text + " and BalanceBase = 0 and ValueBase <> 0 "
            '    ElseIf rdbSearchPaidStatus.SelectedItem.Value = "O/S" Then
            '        txtCondition.Text = txtCondition.Text + " and BalanceBase <>  0"
            '    End If


            '    If String.IsNullOrEmpty(txtInvoiceDateFromSearch.Text) = False And txtInvoiceDateFromSearch.Text <> "__/__/____" Then
            '        txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateFromSearch.Text).ToString("yyyy-MM-dd") + "'"
            '    End If
            '    If String.IsNullOrEmpty(txtInvoiceDateToSearch.Text) = False And txtInvoiceDateToSearch.Text <> "__/__/____" Then
            '        txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateToSearch.Text).ToString("yyyy-MM-dd") + "'"
            '    End If


            '    If String.IsNullOrEmpty(txtCommentsSearch.Text) = False Then
            '        txtCondition.Text = txtCondition.Text & " and Comments like '%" & txtCommentsSearch.Text.Trim & "%'"
            '    End If

            '    txtConditionMultiPrint.Text = txtCondition.Text

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            '        If ddlBranch.SelectedIndex > 0 Then
            '            If String.IsNullOrEmpty(ddlBranch.Text) = False Then
            '                txtCondition.Text = txtCondition.Text & " and location = '" & ddlBranch.Text.Trim + "'"
            '            End If
            '        End If
            '    End If

            '        If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '            txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '            txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '            txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '        End If

            '        txtOrderBy.Text = " order by rcno desc, custname "




            '        strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            '    txt.Text = strsql


            'txtComments.Text = strsql
            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CalculateTotal()

            MakeMeNull()
            MakeMeNullBillingDetails()

            ''''''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


                'MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"

                    If String.IsNullOrEmpty(txtRcnoSelected.Text.Trim) = False Then
                        If txtRcnoSelected.Text > 0 Then
                            txtRcno.Text = txtRcnoSelected.Text
                            txtRcnoSelected.Text = 0
                        Else
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                        End If
                    Else
                        txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                    End If

                    'txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0
                    updPanelSave.Update()
                    UpdatePanel3.Update()

                    'GridView1_SelectedIndexChanged(sender, e)
                Else
                    MakeMeNull()
                    MakeMeNullBillingDetails()
                End If
            End If

        

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '+ "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '''''''''''''''''''''''''''''


            updPnlMsg.Update()
            updPanelInvoice.Update()
            'SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'GridSelected = "SQLDSContract"
            InsertIntoTblWebEventLog("QuickSearch", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)

            'If txtDisabledEInvoicing.Text = True Then
            '    '  btnPostEInvoice.Visible = False
            'Else
            '    '  btnPostEInvoice.Visible = True

            '    If txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "VALID" Then
            '        btnPostEInvoice.Text = "CANCEL E-INVOICE"
            '        '  InsertIntoTblWebEventLog("PopulateRecord1", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
            '        InsertIntoTblWebEventLog("PopulateRecord3", txtTimeToCancel.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
            '        If Convert.ToInt16(txtTimeToCancel.Text) = 0 Then
            '            btnPostEInvoice.Enabled = False
            '            btnPostEInvoice.Forecolor = System.Drawing.Color.Gray
            '        Else
            '            btnPostEInvoice.Enabled = True
            '            btnPostEInvoice.Forecolor = System.Drawing.Color.Black
            '        End If
            '    Else
            '        If txtEI.Text = "Y" Then
            '            btnPostEInvoice.Text = "SUBMIT E-INVOICE"
            '            '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
            '            btnPrint.Enabled = False
            '            btnPrint.Forecolor = System.Drawing.Color.Gray
            '        Else
            '            btnPostEInvoice.Text = "SUBMIT E-INVOICE"
            '            '   InsertIntoTblWebEventLog("PopulateRecord2", txtDisabledEInvoicing.Text, txtEInvoiceStatus.Text, txtCreatedBy.Text)
            '            btnPrint.Enabled = False
            '            btnPrint.Forecolor = System.Drawing.Color.Gray
            '            btnPostEInvoice.Enabled = False
            '            btnPostEInvoice.Forecolor = System.Drawing.Color.Gray
            '        End If

            '    End If
            'End If
          
            GridSelectButtonControls()

            AccessControl()


        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnQuickSearch_Click", ex.Message.ToString, "")
        End Try
    End Sub



    Protected Sub btnShowRecords_Click(sender As Object, e As EventArgs) Handles btnShowRecords.Click
        Try
            lblAlert.Text = ""

            updPanelInvoice.Update()

            If chkFromSalesOrder.Checked = False Then
                PopulateServiceGrid()
            Else
                PopulateServiceGridFromSalesOrder()
            End If

            btnImportService.Enabled = True
            mdlImportServices.Show()

            'txtMessage1.Text = grvServiceRecDetails.Rows.Count & " RECORD/S FOUND"
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub PopulateInvoiceDetailGrid()
        'EnableControls()
        Try

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""

            sql = "Select * "
            sql = sql + " FROM tblSalesDetail A "
            sql = sql + " where 1 = 1 and InvoiceNumber = '" & txtInvoiceNo.Text & "'"


            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()

            Dim dt1 As New DataTable
            dt1.Load(dr1)

            Dim TotDetailRecordsServiceRec = dt1.Rows.Count
            If dt1.Rows.Count > 0 Then

                'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)

                'Dim Query As String

                'Query = "Select TaxType from tbltaxtype"
                'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)

                'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                'Query = "Select * from tblunitms order by UnitMs"
                'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)

                Dim rowIndex = 0

                For Each row As DataRow In dt1.Rows
                    If (TotDetailRecordsServiceRec > (rowIndex)) Then
                        'AddNewRowWithDetailRecGL()
                        'AddNewRowWithDetailRecBillingDetailsRecs()
                        AddNewRowBillingDetailsRecs()
                    End If


                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    If dt1.Rows(rowIndex)("SubCode").ToString() = "SERV" Then
                        TextBoxItemType.Text = "SERVICE"
                        TextBoxItemType.Enabled = False
                    ElseIf dt1.Rows(rowIndex)("SubCode").ToString() = "STCK" Then
                        TextBoxItemType.Text = "STOCK"
                        TextBoxItemType.Enabled = False
                    ElseIf dt1.Rows(rowIndex)("SubCode").ToString() = "DIST" Then
                        TextBoxItemType.Text = "OTHERS"
                        TextBoxItemType.Enabled = False
                    End If

                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                    TextBoxItemCode.Items.Clear()
                    TextBoxItemCode.Items.Add(dt1.Rows(rowIndex)("ItemDescription").ToString().Trim)


                    Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                    TextBoxDescription.Text = dt1.Rows(rowIndex)("ItemCode").ToString().Trim

                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    TextBoxItemDescription.Text = dt1.Rows(rowIndex)("Description").ToString().Trim

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    TextBoxGLDescription.Text = dt1.Rows(rowIndex)("LedgerName").ToString().Trim

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    TextBoxOtherCode.Text = dt1.Rows(rowIndex)("LedgerCode").ToString()

                    Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = dt1.Rows(rowIndex)("ServiceDate").ToString()


                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = dt1.Rows(rowIndex)("UnitMS").ToString()


                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                    TextBoxQty.Text = Convert.ToDecimal(dt1.Rows(rowIndex)("Quantity").ToString()).ToString("N0")
                    TextBoxQty.Enabled = False


                    Dim TextBoxUnitOriginal As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                    TextBoxUnitOriginal.Text = dt1.Rows(rowIndex)("UnitBase").ToString()

                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                    TextBoxTotalPrice.Text = Convert.ToDecimal(dt1.Rows(rowIndex)("TotalPrice").ToString()).ToString("N2")

                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                    TextBoxDiscPerc.Text = dt1.Rows(rowIndex)("DiscP").ToString()

                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                    TextBoxDiscAmount.Text = dt1.Rows(rowIndex)("DiscAmount").ToString()

                    Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    TextBoxPriceWithDisc.Text = dt1.Rows(rowIndex)("ValueBase").ToString()

                    Dim TextBoxGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                    TextBoxGST.Text = dt1.Rows(0)("GST").ToString()


                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                    TextBoxGSTPerc.Text = dt1.Rows(rowIndex)("GSTRate").ToString()

                    Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    TextBoxGSTAmt.Text = dt1.Rows(rowIndex)("GSTBase").ToString()

                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    TextBoxTotalPriceWithGST.Text = dt1.Rows(rowIndex)("AppliedBase").ToString()


                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = dt1.Rows(rowIndex)("CostCode").ToString()

                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    TextBoxServiceStatus.Text = dt1.Rows(rowIndex)("ServiceStatus").ToString()

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = dt1.Rows(rowIndex)("Rcno").ToString()

                    If Convert.ToInt32(TextBoxRcnoInvoice.Text) > 0 Then
                        Dim TextBoxServiceRecord As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), DropDownList)
                        TextBoxServiceRecord.Items.Clear()
                        'TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        TextBoxServiceRecord.Enabled = False

                        ''30.05.17
                        If String.IsNullOrEmpty(dt1.Rows(rowIndex)("RefType").ToString()) = True Then
                            TextBoxServiceRecord.Items.Add("--SELECT--")
                        Else
                            TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        End If
                        ''30.05.17
                    Else
                        Dim TextBoxServiceRecord As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), DropDownList)
                        'TextBoxServiceRecord.Text = dt1.Rows(rowIndex)("RefType").ToString()

                        ''30.05.17
                        If String.IsNullOrEmpty(dt1.Rows(rowIndex)("RefType").ToString()) = True Then
                            TextBoxServiceRecord.Items.Add("--SELECT--")
                        Else
                            TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        End If
                        ''30.05.17

                    End If


                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    TextBoxRcnoServiceRecord.Text = dt1.Rows(rowIndex)("RcnoServiceRecord").ToString()

                    Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = dt1.Rows(rowIndex)("LocationId").ToString()

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = dt1.Rows(rowIndex)("ServiceLocationGroup").ToString()

                    Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = dt1.Rows(rowIndex)("BillingFrequency").ToString()

                    Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = dt1.Rows(rowIndex)("ServiceBy").ToString()

                    rowIndex = rowIndex + 1

                Next row

            Else
                'FirstGridViewRowServiceRecs()
                FirstGridViewRowBillingDetailsRecs()
            End If
            'End If

            'Label43.Text = "SERVICE BILLING DETAILS : Total Records :" & grvServiceRecDetails.Rows.Count.ToString
            'updpnlServiceRecs.Update()



            'txtClientName.Text = sql

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            If txtMode.Text = "View" Then

                If (table.Rows.Count > 0) Then
                    For i As Integer = 0 To (table.Rows.Count) - 1
                        Dim TextBoxSel As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("chkSelectGV"), CheckBox)
                        TextBoxSel.Enabled = False
                        TextBoxSel.Checked = True
                    Next i
                End If
            End If
            'End: Service Recods

            CalculateTotalPrice()
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt1.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateInvoiceDetailGrid", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub PopulateServiceGridFromSalesOrder()
        Dim sqlstr As String
        sqlstr = ""
        Try

            '22.08.17

            lblAlert1.Text = ""

            If ddlContactType.SelectedIndex = 0 Then
                lblAlert1.Text = "PLEASE SELECT ACCOUNT TYPE"
                Exit Sub
            End If

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            If txtMode.Text = "View" Then

                sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.Name,  A.LocationId, A.Address1, "
                sqlstr = sqlstr + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef,  A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,"
                sqlstr = sqlstr + " A.Salesman, A.BillAddress1, A.BillBuilding, A.BillStreet, A.BillPostal, A.BillCity, A.BillCountry, "
                sqlstr = sqlstr + " A.BillingFrequency, A.RcnoInvoice, A.Rcno as rcnotblservicebillingdetail, A.ContractGroup, A.RcnoServiceRecord, A.ServiceBy, A.ServiceLocationGroup "
                sqlstr = sqlstr + " FROM tblservicebillingdetail A "
                sqlstr = sqlstr + " where 1 = 1 and InvoiceNo = '" & txtInvoiceNo.Text & "'"

            Else


                If ddlContactType.SelectedIndex = 1 Then

                    'If ddlServiceFrequency.SelectedIndex > 0 Then
                    '    sqlstr = "Select A.Rcno, A.ContactType, B.RecordNo, A.AccountID, B.ContractNo, A.CustName, A.ServiceName,  B.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " B.(A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, B.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, B.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,  "
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes    "
                    '    sqlstr = sqlstr + " FROM tblSalesOrder a, tblSalesOrderDetail b "
                    '    sqlstr = sqlstr + " where 1 = 1 and  A.SalesOrderNo = B.SalesOrderNo and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    '    'End If
                    'Else
                    sqlstr = "Select A.Rcno, A.ContactType, B.RefType as RecordNo, A.AccountID, B.CostCode as ContractNo, A.CustName, A.CustName,  B.LocationId, A.CustAddress1, A.CustAddBuilding, A.CustAddStreet, A.CustAddPostal, "
                    sqlstr = sqlstr + " b.ValueBase as Billamount, B.ServiceDate, '' as BillNo, A.PoNo, A.OurRef, A.YourRef, a.PostStatus as Status,  B.CostCode,  A.ContactType, A.CompanyGroup,  B.ServiceBy, '' as ServiceLocationGroup, "
                    sqlstr = sqlstr + " C.Address1, A.Salesman, C.ServiceName,  '' as BillAddress1, '' as BillBuilding, '' as BillStreet, '' as BillPostal, '' as BillCity, '' as BillCountry, "
                    sqlstr = sqlstr + " A.Terms as ARTerm, B.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, A.ContractGroup, '' as Notes, A.SalesOrderNumber    "
                    sqlstr = sqlstr + " FROM tblSalesOrder a, tblSalesOrderDetail b, tblCompanyLocation C"
                    sqlstr = sqlstr + " where 1 = 1 and A.SalesOrderNumber = B.SalesOrderNumber and A.PostStatus='P' and B.LocationId=C.LocationID"
                    sqlstr = sqlstr + " and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    'End If

                ElseIf ddlContactType.SelectedIndex = 2 Then

                    'If ddlServiceFrequency.SelectedIndex > 0 Then
                    '    sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes  "
                    '    sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                    '    sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and  A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    'Else
                    sqlstr = "Select A.Rcno, A.ContactType, B.RefType as RecordNo, A.AccountID, B.CostCode as ContractNo, A.CustName, A.CustName,  B.LocationId, A.CustAddress1, A.CustAddBuilding, A.CustAddStreet, A.CustAddPostal, "
                    sqlstr = sqlstr + " b.ValueBase as Billamount, B.ServiceDate, '' as BillNo, A.PoNo, A.OurRef, A.YourRef, a.PostStatus as Status,  B.CostCode,  A.ContactType, A.CompanyGroup,  B.ServiceBy, '' as ServiceLocationGroup, "
                    sqlstr = sqlstr + " C.Address1, A.Salesman, C.ServiceName,  '' as BillAddress1, '' as BillBuilding, '' as BillStreet, '' as BillPostal, '' as BillCity, '' as BillCountry, "
                    sqlstr = sqlstr + " A.Terms as ARTerm, B.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, A.ContractGroup, '' as Notes, A.SalesOrderNumber    "
                    sqlstr = sqlstr + " FROM tblSalesOrder a, tblSalesOrderDetail b, tblPersonLocation C"
                    sqlstr = sqlstr + " where 1 = 1 and A.SalesOrderNumber = B.SalesOrderNumber and A.PostStatus='P' and B.LocationId=C.LocationID"
                    sqlstr = sqlstr + " and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                End If

                'End If

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and  A.AccountID like '%" & txtAccountId.Text & "%'"
                Else
                    If String.IsNullOrEmpty(txtClientName.Text.Trim) = False Then
                        sqlstr = sqlstr + " and  A.ServiceName like ""%" & txtClientName.Text & "%"""
                    End If
                End If


                If ddlCompanyGrp.Text.Trim <> "--SELECT--" Then
                    sqlstr = sqlstr + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
                End If

                'If ddlContractNo.Text.Trim <> "-1" Then
                If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateTo.Text.Trim) = False And String.IsNullOrEmpty(txtDateFrom.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtLocationId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   B.LocationId = '" & txtLocationId.Text & "'"
                End If


                If String.IsNullOrEmpty(txtServiceAddress.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.Address1 like '%" & txtServiceAddress.Text & "%'"
                End If


                If ddlServiceFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
                End If

                If ddlBillingFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   B.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
                End If

                If ddlContractGroup.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   A.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
                End If


                If String.IsNullOrEmpty(txtServiceBy.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   B.ServiceBy like '%" & txtServiceBy.Text & "%'"
                End If


                If String.IsNullOrEmpty(txtSalesOrderNumberSearch.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.SalesOrderNumber like '%" & txtSalesOrderNumberSearch.Text & "%'"
                End If

                'If rdbCompleted.Checked = True Then
                '    sqlstr = sqlstr + " and  A.Status = 'P' "
                'End If

                'If rdbNotCompleted.Checked = True Then
                '    sqlstr = sqlstr + " and  A.Status = 'O' "
                'End If

                'If rdbAll.Checked = True Then
                '    sqlstr = sqlstr + " and (( A.Status = 'O') or (A.Status = 'P' )) "
                'End If


            End If

            'If rdbGrouping.SelectedIndex = 0 Then
            '    sqlstr = sqlstr + " order by A.ContractNo, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 1 Then
            '    sqlstr = sqlstr + " order by A.AccountID, A.LocationId"
            'ElseIf rdbGrouping.SelectedIndex = 2 Then
            '    sqlstr = sqlstr + " order by A.AccountID, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 3 Then
            'End If

            sqlstr = sqlstr + " order by A.CompanyGroup, b.LocationID, b.CostCode, b.ServiceDate, b.RefType"

            '''''''''''''''''''''''''''

            SqlDSServices.SelectCommand = sqlstr
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            conn.Close()
            conn.Dispose()

            '''''''''''''''''''''''''''''''''''''

            If grvServiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvServiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
            End If

            updpnlServiceRecs.Update()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateServiceGrid", ex.Message.ToString, sqlstr)
        End Try
    End Sub
    Private Sub PopulateServiceGrid()
        Dim sqlstr As String
        sqlstr = ""
        Try

            'Start: Service Recods

            '22.08.17
            'Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
            'Dim drCurrentRowLoc As DataRow = Nothing

            'For i As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
            '    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
            '    drCurrentRowLoc = dtScdrLoc.NewRow()
            '    ViewState("CurrentTableServiceRec") = dtScdrLoc
            '    grvServiceRecDetails.DataSource = dtScdrLoc
            '    grvServiceRecDetails.DataBind()

            '    SetPreviousDataServiceRecs()
            'Next i

            'FirstGridViewRowServiceRecs()

            '22.08.17

            lblAlert1.Text = ""

            If ddlContactType.SelectedIndex = 0 Then
                lblAlert1.Text = "PLEASE SELECT ACCOUNT TYPE"
                Exit Sub
            End If

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            If txtMode.Text = "View" Then

                sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.Name,  A.LocationId, A.Address1, "
                sqlstr = sqlstr + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef,  A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,"
                sqlstr = sqlstr + " A.Salesman, A.BillAddress1, A.BillBuilding, A.BillStreet, A.BillPostal, A.BillCity, A.BillCountry, "
                sqlstr = sqlstr + " A.BillingFrequency, A.RcnoInvoice, A.Rcno as rcnotblservicebillingdetail, A.ContractGroup, A.RcnoServiceRecord, A.ServiceBy, A.ServiceLocationGroup "
                sqlstr = sqlstr + " FROM tblservicebillingdetail A "
                sqlstr = sqlstr + " where 1 = 1 and InvoiceNo = '" & txtInvoiceNo.Text & "'"

            Else

                If ddlContactType.SelectedIndex = 1 Then

                    If ddlServiceFrequency.SelectedIndex > 0 Then
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,  "
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes , '' as SalesOrderNumber   "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and   A.AccountId = B.AccountId and C.ContractNo = D.ContractNo  and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                        'End If
                    Else
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes, '' as SalesOrderNumber   "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId   and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                ElseIf ddlContactType.SelectedIndex = 2 Then

                    If ddlServiceFrequency.SelectedIndex > 0 Then
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes, '' as SalesOrderNumber  "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and  A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes, '' as SalesOrderNumber   "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                End If

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and  A.AccountID like '%" & txtAccountId.Text & "%'"
                Else
                    If String.IsNullOrEmpty(txtClientName.Text.Trim) = False Then
                        sqlstr = sqlstr + " and  A.ServiceName like ""%" & txtClientName.Text & "%"""
                    End If
                End If


                If ddlCompanyGrp.Text.Trim <> "--SELECT--" Then
                    sqlstr = sqlstr + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
                End If

                'If ddlContractNo.Text.Trim <> "-1" Then
                If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateTo.Text.Trim) = False And String.IsNullOrEmpty(txtDateFrom.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtLocationId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.LocationId = '" & txtLocationId.Text & "'"
                End If


                If String.IsNullOrEmpty(txtServiceAddress.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.Address1 like '%" & txtServiceAddress.Text & "%'"
                End If


                If ddlServiceFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
                End If

                If ddlBillingFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   C.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
                End If

                If ddlContractGroup.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   C.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
                End If


                If String.IsNullOrEmpty(txtServiceBy.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ServiceBy like '%" & txtServiceBy.Text.Trim & "%'"
                End If


                If String.IsNullOrEmpty(txtTargetSearch.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.Notes like '%" & txtTargetSearch.Text.Trim & "%'"
                End If

                If rdbCompleted.Checked = True Then
                    sqlstr = sqlstr + " and  A.Status = 'P' "
                End If

                If rdbNotCompleted.Checked = True Then
                    sqlstr = sqlstr + " and  A.Status = 'O' "
                End If

                If rdbAll.Checked = True Then
                    sqlstr = sqlstr + " and (( A.Status = 'O') or (A.Status = 'P' )) "
                End If

               
            End If

            'If rdbGrouping.SelectedIndex = 0 Then
            '    sqlstr = sqlstr + " order by A.ContractNo, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 1 Then
            '    sqlstr = sqlstr + " order by A.AccountID, A.LocationId"
            'ElseIf rdbGrouping.SelectedIndex = 2 Then
            '    sqlstr = sqlstr + " order by A.AccountID, A.ServiceDate"
            'ElseIf rdbGrouping.SelectedIndex = 3 Then
            'End If

            sqlstr = sqlstr + " order by A.CompanyGroup, a.LocationID, A.ContractNo, A.ServiceDate, A.RecordNo"

            '''''''''''''''''''''''''''

            SqlDSServices.SelectCommand = sqlstr
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            conn.Close()
            conn.Dispose()

            '''''''''''''''''''''''''''''''''''''

            If grvServiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvServiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
            End If

            updpnlServiceRecs.Update()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateServiceGrid", ex.Message.ToString, sqlstr)
        End Try
    End Sub
    '''''''''' Start: Service Record

    Private Sub PopulateInvoiceGrid()

        Try

            'Start: Service Recods

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableServiceRec") = dtScdrLoc
                grvServiceRecDetails.DataSource = dtScdrLoc
                grvServiceRecDetails.DataBind()

                SetPreviousDataServiceRecs()
            Next i


            FirstGridViewRowServiceRecs()
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""




            If txtMode.Text = "View" Then

                sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.Name,  A.LocationId, A.Address1, "
                sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef,  A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,"
                sql = sql + " A.Salesman, A.BillAddress1, A.BillBuilding, A.BillStreet, A.BillPostal, A.BillCity, A.BillCountry, "
                sql = sql + " A.BillingFrequency, A.RcnoInvoice, A.Rcno as rcnotblservicebillingdetail, A.ContractGroup, A.RcnoServiceRecord, A.ServiceBy, A.ServiceLocationGroup "
                sql = sql + " FROM tblservicebillingdetail A "
                sql = sql + " where 1 = 1 and InvoiceNo = '" & txtInvoiceNo.Text & "'"

            Else
                If ddlContactType.SelectedIndex = 1 Then
                    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup, "
                    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    'sql = sql + " FROM tblservicerecord A, tblCompany B, tblContract C "
                    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    If ddlServiceFrequency.Text.Trim = "-1" Then
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId  and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                ElseIf ddlContactType.SelectedIndex = 2 Then
                    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, "
                    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    'sql = sql + " FROM tblservicerecord A, tblPerson B, tblContract C "
                    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    If ddlServiceFrequency.Text.Trim = "-1" Then
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    End If

                End If


                If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                    sql = sql + " and  A.AccountID like '%" & txtAccountId.Text & "%'"
                Else
                    If String.IsNullOrEmpty(txtClientName.Text) = False Then
                        sql = sql + " and  A.ServiceName like '%" & txtClientName.Text & "%'"
                    End If
                End If

                'If String.IsNullOrEmpty(txtClientName.Text) = False Then
                '    sql = sql + " and  A.ServiceName like '%" & txtClientName.Text & "%'"
                'End If

                If ddlCompanyGrp.Text.Trim <> "-1" Then
                    sql = sql + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
                End If

                If ddlContractNo.Text.Trim <> "-1" Then
                    sql = sql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text) = False Then
                    sql = sql + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateTo.Text) = False Then
                    sql = sql + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text) = False And String.IsNullOrEmpty(txtDateTo.Text) = False Then
                    sql = sql + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtLocationId.Text) = False Then
                    sql = sql + " and   A.LocationId = '" & txtLocationId.Text & "'"
                End If


                If ddlServiceFrequency.Text.Trim <> "-1" Then
                    sql = sql + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
                End If

                If ddlBillingFrequency.Text.Trim <> "-1" Then
                    sql = sql + " and   C.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
                End If

                If ddlContractGroup.Text.Trim <> "-1" Then
                    sql = sql + " and   C.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
                End If


                If rdbCompleted.Checked = True Then
                    sql = sql + " and  A.Status = 'P' "
                End If

                If rdbNotCompleted.Checked = True Then
                    sql = sql + " and  A.Status = 'O' "
                End If


                'If ChkServicesAll.Checked = True Then
                '    sql = sql + " and  A.Status = 'C'"
                'End If

                'If rbtServicestatus.SelectedValue = "C" Then
                '    sql = sql + " and  A.Status = 'P'"
                'End If

                'If rbtServicestatus.SelectedValue = "N" Then
                '    sql = sql + " and  A.Status = 'O'"
                'End If
                'txtInchargeSearch.Text = sql

            End If

            If rdbGrouping.SelectedIndex = 0 Then
                sql = sql + " order by A.ContractNo, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 1 Then
                sql = sql + " order by A.AccountID, A.LocationId"
            ElseIf rdbGrouping.SelectedIndex = 2 Then
                sql = sql + " order by A.AccountID, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 3 Then
            End If


            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            Dim TotDetailRecordsServiceRec = dt.Rows.Count
            If dt.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dt.Rows
                    If (TotDetailRecordsServiceRec > (rowIndex + 1)) Then
                        'AddNewRowLoc()
                        AddNewRowServiceRecs()
                    End If

                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                    TextBoxServiceRecordNo.Text = Convert.ToString(dt.Rows(rowIndex)("RecordNo"))

                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = Convert.ToString(Convert.ToDateTime(dt.Rows(rowIndex)("ServiceDate")).ToString("dd/MM/yyyy"))

                    Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                    TextBoxAccountId.Text = Convert.ToString(dt.Rows(rowIndex)("AccountId"))

                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtClientNameGV"), TextBox)
                    TextBoxClientName.Text = Convert.ToString(dt.Rows(rowIndex)("CustName"))

                    Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dt.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceAddressGV"), TextBox)

                    If txtMode.Text = "View" Then
                        TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1"))
                    Else
                        'TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddStreet")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddBuilding")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddPostal"))

                        TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1")).Trim

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddStreet")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddStreet"))
                        End If

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddBuilding")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddBuilding"))
                        End If

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddPostal")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddPostal"))
                        End If

                    End If

                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(dt.Rows(rowIndex)("LocationId"))

                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                    TextBoxToBillAmt.Text = Convert.ToString(dt.Rows(rowIndex)("BillAmount"))


                    If txtMode.Text = "View" Then
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        TextBoxRcnoServiceRecord.Text = Convert.ToString(dt.Rows(rowIndex)("RcnoServiceRecord"))
                    Else
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        TextBoxRcnoServiceRecord.Text = Convert.ToString(dt.Rows(rowIndex)("Rcno"))
                    End If


                    Dim TextBoxName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountNameGV"), TextBox)
                    TextBoxName.Text = Convert.ToString(dt.Rows(rowIndex)("Name"))

                    Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillAddress1GV"), TextBox)
                    TextBoxBillAddress1.Text = Convert.ToString(dt.Rows(rowIndex)("BillAddress1"))

                    Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillBuildingGV"), TextBox)
                    TextBoxBillBuilding.Text = Convert.ToString(dt.Rows(rowIndex)("BillBuilding"))

                    Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillStreetGV"), TextBox)
                    TextBoxBillStreet.Text = Convert.ToString(dt.Rows(rowIndex)("BillStreet"))

                    Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillCountryGV"), TextBox)
                    TextBoxBillCountry.Text = Convert.ToString(dt.Rows(rowIndex)("BillCountry"))

                    Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillPostalGV"), TextBox)
                    TextBoxBillPostal.Text = Convert.ToString(dt.Rows(rowIndex)("BillPostal"))

                    Dim TextBoxOurRef As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOurReferenceGV"), TextBox)
                    TextBoxOurRef.Text = Convert.ToString(dt.Rows(rowIndex)("OurRef"))

                    Dim TextBoxYourRef As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtYourReferenceGV"), TextBox)
                    TextBoxYourRef.Text = Convert.ToString(dt.Rows(rowIndex)("YourRef"))

                    Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtPoNoGV"), TextBox)
                    TextBoxPoNo.Text = Convert.ToString(dt.Rows(rowIndex)("PoNo"))

                    Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = Convert.ToString(dt.Rows(rowIndex)("BillingFrequency"))

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = Convert.ToString(dt.Rows(rowIndex)("RcnoInvoice"))

                    Dim TextBoxRcnoservicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServicebillingdetailGV"), TextBox)
                    TextBoxRcnoservicebillingdetail.Text = Convert.ToString(dt.Rows(rowIndex)("rcnotblservicebillingdetail"))

                    Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtStatusGV"), TextBox)
                    TextBoxStatus.Text = Convert.ToString(dt.Rows(rowIndex)("Status"))



                    Dim TextBoxContractGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtDeptGV"), TextBox)
                    TextBoxContractGroup.Text = Convert.ToString(dt.Rows(rowIndex)("ContractGroup"))


                    'Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtCreditTermsGV"), TextBox)
                    'TextBoxCreditTerms.Text = Convert.ToString(dt.Rows(rowIndex)("CreditTerms"))

                    Dim TextBoxtxtSalesmanGV As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                    If Convert.ToString(dt.Rows(rowIndex)("Salesman")) = "-1" Then
                        TextBoxtxtSalesmanGV.Text = "-1"
                    Else
                        TextBoxtxtSalesmanGV.Text = Convert.ToString(dt.Rows(rowIndex)("Salesman"))
                    End If

                    'Dim TextBoxtxtSalesmanGV As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                    'TextBoxtxtSalesmanGV.Text = Convert.ToString(dt.Rows(rowIndex)("Salesman"))

                    Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContactTypeGV"), TextBox)
                    TextBoxContactType.Text = Convert.ToString(dt.Rows(rowIndex)("ContactType"))

                    Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                    TextBoxCompanyGroup.Text = Convert.ToString(dt.Rows(rowIndex)("CompanyGroup"))

                    Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = Convert.ToString(dt.Rows(rowIndex)("ServiceBy"))

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = Convert.ToString(dt.Rows(rowIndex)("ServiceLocationGroup"))


                    If TextBoxStatus.Text = "P" Then
                        TextBoxStatus.ForeColor = Color.Blue
                        TextBoxAccountId.ForeColor = Color.Blue
                        TextBoxClientName.ForeColor = Color.Blue
                        TextBoxServiceRecordNo.ForeColor = Color.Blue
                        TextBoxServiceDate.ForeColor = Color.Blue
                        TextBoxBillingFrequency.ForeColor = Color.Blue
                        TextBoxLocationId.ForeColor = Color.Blue
                        TextBoxServiceAddress.ForeColor = Color.Blue
                        TextBoxToBillAmt.ForeColor = Color.Blue
                        TextBoxContractNo.ForeColor = Color.Blue
                        TextBoxContractGroup.ForeColor = Color.Blue
                    End If



                    'Dim ButtonViewEdit As Button = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("btnViewEdit"), Button)
                    'ButtonViewEdit.Enabled = True

                    rowIndex += 1

                Next row

                'AddNewRowServiceRecs()
                'SetPreviousDataServiceRecs()
                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else
                FirstGridViewRowServiceRecs()

            End If
            'End If

            Label43.Text = "SERVICE BILLING DETAILS : Total Records :" & grvServiceRecDetails.Rows.Count.ToString
            updpnlServiceRecs.Update()
            'txtClientName.Text = sql

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            If txtMode.Text = "View" Then

                If (table.Rows.Count > 0) Then
                    For i As Integer = 0 To (table.Rows.Count) - 1
                        Dim TextBoxSel As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("chkSelectGV"), CheckBox)
                        TextBoxSel.Enabled = False
                        TextBoxSel.Checked = True
                    Next i
                End If
            End If
            'End: Service Recods
            command1.Dispose()
            dt.Dispose()
            dtScdrLoc.Dispose()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateInvoiceGrid", ex.Message.ToString, "")
        End Try
    End Sub
    '''''''''' Start: Service Record

    Private Sub FirstGridViewRowServiceRecs()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("SelRec", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("ClientName", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("BillingFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceAddress", GetType(String)))
            dt.Columns.Add(New DataColumn("ToBillAmt", GetType(String)))

            dt.Columns.Add(New DataColumn("Dept", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("Status", GetType(String)))

            dt.Columns.Add(New DataColumn("RcnoServicebillingdetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecordDetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("ContactType", GetType(String)))
            dt.Columns.Add(New DataColumn("CompanyGroup", GetType(String)))

            dt.Columns.Add(New DataColumn("AccountName", GetType(String)))
            dt.Columns.Add(New DataColumn("BillAddress1", GetType(String)))
            dt.Columns.Add(New DataColumn("BillBuilding", GetType(String)))
            dt.Columns.Add(New DataColumn("BillStreet", GetType(String)))
            dt.Columns.Add(New DataColumn("BillCountry", GetType(String)))
            dt.Columns.Add(New DataColumn("BillPostal", GetType(String)))
            dt.Columns.Add(New DataColumn("OurReference", GetType(String)))
            dt.Columns.Add(New DataColumn("YourReference", GetType(String)))
            dt.Columns.Add(New DataColumn("PoNo", GetType(String)))
            dt.Columns.Add(New DataColumn("CreditTerms", GetType(String)))
            dt.Columns.Add(New DataColumn("Salesman", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceBy", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceLocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Notes", GetType(String)))
            dr = dt.NewRow()

            dr("SelRec") = String.Empty
            dr("AccountId") = String.Empty
            dr("ClientName") = String.Empty
            dr("ServiceRecordNo") = String.Empty
            dr("ServiceDate") = String.Empty
            dr("BillingFrequency") = String.Empty
            dr("LocationId") = String.Empty
            dr("ServiceAddress") = String.Empty
            dr("ToBillAmt") = 0

            dr("Dept") = String.Empty
            dr("ContractNo") = String.Empty
            dr("Status") = String.Empty

            dr("RcnoServicebillingdetail") = 0
            dr("RcnoServiceRecord") = 0
            dr("RcnoServiceRecordDetail") = 0
            dr("RcnoInvoice") = 0
            dr("ContactType") = String.Empty
            dr("CompanyGroup") = String.Empty

            dr("AccountName") = String.Empty
            dr("BillAddress1") = String.Empty
            dr("BillBuilding") = String.Empty
            dr("BillStreet") = String.Empty
            dr("BillCountry") = String.Empty
            dr("BillPostal") = String.Empty
            dr("OurReference") = String.Empty
            dr("YourReference") = String.Empty
            dr("PoNo") = String.Empty
            dr("CreditTerms") = String.Empty
            dr("Salesman") = String.Empty
            dr("ServiceBy") = String.Empty
            dr("ServiceLocationGroup") = String.Empty
            dr("Notes") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableServiceRec") = dt

            grvServiceRecDetails.DataSource = dt
            grvServiceRecDetails.DataBind()

            'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AddNewRowServiceRecs()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()


                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        If TextBoxStatus.Text = "P" Then
                            TextBoxStatus.ForeColor = Color.Blue
                            TextBoxAccountId.ForeColor = Color.Blue
                            TextBoxClientName.ForeColor = Color.Blue
                            TextBoxServiceRecordNo.ForeColor = Color.Blue
                            TextBoxServiceDate.ForeColor = Color.Blue
                            TextBoxBillingFrequency.ForeColor = Color.Blue
                            TextBoxLocationId.ForeColor = Color.Blue
                            TextBoxServiceAddress.ForeColor = Color.Blue
                            TextBoxToBillAmt.ForeColor = Color.Blue
                            TextBoxContractNo.ForeColor = Color.Blue
                            TextBoxDept.ForeColor = Color.Blue
                        End If

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServiceRec") = dtCurrentTable

                    grvServiceRecDetails.DataSource = dtCurrentTable
                    grvServiceRecDetails.DataBind()



                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecServiceRecs()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Checked
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServiceRec") = dtCurrentTable

                    grvServiceRecDetails.DataSource = dtCurrentTable
                    grvServiceRecDetails.DataBind()



                End If

                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetPreviousDataServiceRecs()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)


                        TextBoxSelect.Text = dt.Rows(i)("SelRec").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()
                        TextBoxClientName.Text = dt.Rows(i)("ClientName").ToString()
                        TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()
                        TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
                        TextBoxBillingFrequency.Text = dt.Rows(i)("BillingFrequency").ToString()
                        TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
                        TextBoxServiceAddress.Text = dt.Rows(i)("ServiceAddress").ToString()
                        TextBoxToBillAmt.Text = dt.Rows(i)("ToBillAmt").ToString()
                        TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()
                        TextBoxRcnoServiceRecordDetail.Text = dt.Rows(i)("RcnoServiceRecordDetail").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxContactType.Text = dt.Rows(i)("ContactType").ToString()
                        TextBoxCompanyGroup.Text = dt.Rows(i)("CompanyGroup").ToString()

                        TextBoxAccountName.Text = dt.Rows(i)("AccountName").ToString()

                        TextBoxBillAddress1.Text = dt.Rows(i)("BillAddress1").ToString()
                        TextBoxBillBuilding.Text = dt.Rows(i)("BillBuilding").ToString()
                        TextBoxBillStreet.Text = dt.Rows(i)("BillStreet").ToString()
                        TextBoxBillCountry.Text = dt.Rows(i)("BillCountry").ToString()
                        TextBoxBillPostal.Text = dt.Rows(i)("BillPostal").ToString()
                        TextBoxOurReference.Text = dt.Rows(i)("OurReference").ToString()
                        TextBoxYourReference.Text = dt.Rows(i)("YourReference").ToString()
                        TextBoxPoNo.Text = dt.Rows(i)("PoNo").ToString()
                        TextBoxCreditTerms.Text = dt.Rows(i)("CreditTerms").ToString()
                        TextBoxSalesman.Text = dt.Rows(i)("Salesman").ToString()
                        TextBoxRcnoServicebillingdetail.Text = dt.Rows(i)("RcnoServicebillingdetail").ToString()

                        TextBoxDept.Text = dt.Rows(i)("Dept").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxStatus.Text = dt.Rows(i)("Status").ToString()
                        TextBoxServiceBy.Text = dt.Rows(i)("ServiceBy").ToString()
                        TextBoxServiceLocationGroup.Text = dt.Rows(i)("ServiceLocationGroup").ToString()
                        TextBoxNotes.Text = dt.Rows(i)("Notes").ToString()

                        If TextBoxStatus.Text = "P" Then
                            TextBoxStatus.ForeColor = Color.Blue
                            TextBoxAccountId.ForeColor = Color.Blue
                            TextBoxClientName.ForeColor = Color.Blue
                            TextBoxServiceRecordNo.ForeColor = Color.Blue
                            TextBoxServiceDate.ForeColor = Color.Blue
                            TextBoxBillingFrequency.ForeColor = Color.Blue
                            TextBoxLocationId.ForeColor = Color.Blue
                            TextBoxServiceAddress.ForeColor = Color.Blue
                            TextBoxToBillAmt.ForeColor = Color.Blue
                            TextBoxContractNo.ForeColor = Color.Blue
                            TextBoxDept.ForeColor = Color.Blue
                        End If

                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataServiceRecs()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()


                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableServiceRec") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    'End: Serice Record Grid


    'Start: Billing Details Grid


    Private Sub FirstGridViewRowBillingDetailsRecs()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));
            dt.Columns.Add(New DataColumn("SelectRec", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemCode", GetType(String)))
            dt.Columns.Add(New DataColumn("Description", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Qty", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerUOM", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPrice", GetType(String)))

            dt.Columns.Add(New DataColumn("DiscPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("DiscAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("PriceWithDisc", GetType(String)))

            dt.Columns.Add(New DataColumn("TaxType", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPriceWithGST", GetType(String)))

            dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecordDetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceBillingDetailItem", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("OtherCode", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))

            dt.Columns.Add(New DataColumn("BillingFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceBy", GetType(String)))

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceLocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("OriginalBillAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("ClassificationCode", GetType(String)))

            dt.Columns.Add(New DataColumn("ItemClassificationDesc", GetType(String)))
            dt.Columns.Add(New DataColumn("UOMDesc", GetType(String)))
            dt.Columns.Add(New DataColumn("TaxTypeDesc", GetType(String)))
            dr = dt.NewRow()

            dr("SelectRec") = String.Empty
            dr("ItemType") = String.Empty
            dr("ItemCode") = String.Empty
            dr("Description") = String.Empty
            dr("ItemDescription") = String.Empty
            dr("GLDescription") = String.Empty

            dr("UOM") = String.Empty
            dr("Qty") = 0
            dr("PricePerUOM") = 0.0
            dr("TotalPrice") = 0
            dr("DiscPerc") = 0.0
            dr("DiscAmount") = 0
            dr("PriceWithDisc") = 0
            dr("TaxType") = String.Empty
            dr("GSTPerc") = 0.0
            dr("GSTAmt") = 0
            dr("TotalPriceWithGST") = 0
            dr("RcnoServiceRecord") = 0
            dr("RcnoInvoice") = 0
            dr("InvoiceNo") = String.Empty
            dr("ContractNo") = String.Empty

            dr("OtherCode") = 0
            dr("ServiceRecordNo") = String.Empty

            dr("ServiceDate") = String.Empty
            dr("BillingFrequency") = String.Empty
            dr("ServiceBy") = String.Empty

            dr("LocationId") = String.Empty
            dr("ServiceLocationGroup") = String.Empty

            dr("OriginalBillAmount") = String.Empty
            dr("ClassificationCode") = String.Empty

            dr("ItemClassificationDesc") = String.Empty
            dr("UOMDesc") = String.Empty
            dr("TaxTypeDesc") = String.Empty

            dt.Rows.Add(dr)

            ViewState("CurrentTableBillingDetailsRec") = dt

            grvBillingDetails.DataSource = dt
            grvBillingDetails.DataBind()
            'grvBillingDetails.ShowHeader = True
            Dim btnAdd As Button = CType(grvBillingDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AddNewRowBillingDetailsRecs()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)
                        Dim TextBoxClassificationCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationCodeGV"), TextBox)

                        Dim TextBoxClassificationDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationDescGV"), TextBox)
                        Dim TextBoxUOMDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtUOMDescGV"), TextBox)
                        Dim TextBoxTaxTypeDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeDescGV"), TextBox)


                        'dr("txtLocationIdGV") = String.Empty
                        'dr("txtServiceLocationGroupGV") = String.Empty
                        TextBoxSelect.Checked = True

                        drCurrentRow = dtCurrentTable.NewRow()

                        'TextBoxSelect.Checked = True
                        'Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                        dtCurrentTable.Rows(i - 1)("SelectRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text

                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("OriginalBillAmount") = TextBoxOriginalBillAmount.Text
                        dtCurrentTable.Rows(i - 1)("ClassificationCode") = TextBoxClassificationCode.Text

                        dtCurrentTable.Rows(i - 1)("ItemClassificationDesc") = TextBoxClassificationDesc.Text
                        dtCurrentTable.Rows(i - 1)("UOMDesc") = TextBoxUOMDesc.Text
                        dtCurrentTable.Rows(i - 1)("TaxTypeDesc") = TextBoxTaxTypeDesc.Text

                    
                        rowIndex += 1

                    Next i

                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)


                        Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Query = "Select * from tblunitms order by UnitMs"
                        PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM1)

                        'Dim TextBoxClassificationCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtClassificationCodeGV"), DropDownList)
                        'Query = "Select * from tbleinvoicemalaysiaclassificationid order by ClassificationCode"
                        'PopulateDropDownList(Query, "ClassificationCode", "ClassificationCode", TextBoxClassificationCode1)


                        Dim TextBoxSelect1 As CheckBox = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("chkSelectRecGV"), CheckBox)
                        TextBoxSelect1.Checked = True

                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        TextBoxQty1.Text = 1

                        If TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxQty1.Enabled = False
                            TextBoxQty1.Text = 1
                        End If

                        rowIndex2 += 1
                        j += 1
                    Loop

                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "AddNewRowBillingDetailsRecs", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub SetPreviousDataBillingDetailsRecs()
        Try
            '    InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "1", txtInvoiceNo.Text)

            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1
                        '       InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "2", txtInvoiceNo.Text)

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)
                        Dim TextBoxClassificationCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationCodeGV"), TextBox)

                        Dim TextBoxClassificationDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationDescGV"), TextBox)
                        Dim TextBoxUOMDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtUOMDescGV"), TextBox)
                        Dim TextBoxTaxTypeDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeDescGV"), TextBox)

                        '      InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "3", txtInvoiceNo.Text)

                        TextBoxSelect.Text = dt.Rows(i)("SelectRec").ToString()
                        TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxItemCode.Text = dt.Rows(i)("ItemCode").ToString()
                        TextBoxDescription.Text = dt.Rows(i)("Description").ToString()
                        TextBoxItemDescription.Text = dt.Rows(i)("ItemDescription").ToString()
                        TextBoxUOM.Text = dt.Rows(i)("UOM").ToString()
                        TextBoxQty.Text = dt.Rows(i)("Qty").ToString()
                        TextBoxPricePerUOM.Text = dt.Rows(i)("PricePerUOM").ToString()
                        TextBoxTotalPrice.Text = dt.Rows(i)("TotalPrice").ToString()

                        TextBoxDiscPerc.Text = dt.Rows(i)("DiscPerc").ToString()
                        TextBoxDiscAmount.Text = dt.Rows(i)("DiscAmount").ToString()
                        TextBoxPriceWithDisc.Text = dt.Rows(i)("PriceWithDisc").ToString()

                        TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxGSTPerc.Text = dt.Rows(i)("GSTPerc").ToString()
                        TextBoxGSTAmt.Text = dt.Rows(i)("GSTAmt").ToString()
                        TextBoxTotalPriceWithGST.Text = dt.Rows(i)("TotalPriceWithGST").ToString()

                        TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        'TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxOtherCode.Text = dt.Rows(i)("OtherCode").ToString()
                        'TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()

                        TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
                        TextBoxServiceBy.Text = dt.Rows(i)("ServiceBy").ToString()
                        TextBoxBillingFrequency.Text = dt.Rows(i)("BillingFrequency").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString

                        TextBoxLocationID.Text = dt.Rows(i)("LocationID").ToString
                        TextBoxserviceLocationGroup.Text = dt.Rows(i)("serviceLocationGroup").ToString
                        TextBoxOriginalBillAmount.Text = dt.Rows(i)("OriginalBillAmount").ToString
                        If IsDBNull(dt.Rows(i)("ClassificationCode")) = False Then
                            TextBoxClassificationCode.Text = dt.Rows(i)("ClassificationCode").ToString
                        End If

                        If IsDBNull(dt.Rows(i)("ItemClassificationDesc")) = False Then
                            TextBoxClassificationDesc.Text = dt.Rows(i)("ItemClassificationDesc")

                        End If
                        If IsDBNull(dt.Rows(i)("UOMDesc")) = False Then
                            TextBoxUOMDesc.Text = dt.Rows(i)("UOMDesc")
                        End If
                        If IsDBNull(dt.Rows(i)("TaxTypeDesc")) = False Then
                            TextBoxTaxTypeDesc.Text = dt.Rows(i)("TaxTypeDesc")

                        End If

                        '       InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "4", txtInvoiceNo.Text)

                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxTaxType1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtTaxTypeGV"), TextBox)

                        Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)

                        '''''''''''''
                        Dim Query As String
                        Dim TextBoxRcnoInvoice1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxRecordNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)
                        Dim TextBoxContractNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtContractNoGV"), TextBox)

                        If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                            TextBoxRecordNo1.Enabled = False
                            TextBoxContractNo1.Enabled = True
                        ElseIf TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxRecordNo1.Enabled = True
                            TextBoxContractNo1.Enabled = False
                        End If

                        '       InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "5", txtInvoiceNo.Text)

                        If txtMode.Text = "View" Then

                        Else
                            If TextBoxItemType1.Text <> "-1" Then
                                If String.IsNullOrEmpty(TextBoxRcnoInvoice1.Text) = False Then
                                    'Query = "Select RecordNo from tblServiceRecord where AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")
                                    'PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    TextBoxRecordNo1.Enabled = False

                                    If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                        TextBoxRecordNo1.Enabled = False
                                        TextBoxContractNo1.Enabled = True
                                    ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxRecordNo1.Enabled = True
                                        TextBoxContractNo1.Enabled = False
                                    End If

                                Else
                                    'Query = "Select RecordNo from tblServiceRecord where BillYN= 'N' and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'Query = "Select RecordNo from tblServiceRecord where (BillAmount - BilledAmt - TotalCreditAmount) > 0 and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")

                                    'If TextBoxItemType1.Text = "SERVICE" Then
                                    '    PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    'End If

                                    TextBoxRecordNo1.Enabled = True

                                    If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                        TextBoxRecordNo1.Enabled = False
                                        TextBoxContractNo1.Enabled = True
                                    ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxRecordNo1.Enabled = True
                                        TextBoxContractNo1.Enabled = False
                                    End If
                                End If

                                'Dim TextBoxTargetDesc1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                                'Query = "Select * from tbltaxtype order by TaxType"
                                'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)
                            End If



                            'If TextBoxItemType1.Enabled = False Then
                            '    TextBoxRecordNo1.Enabled = False
                            'End If
                        End If

                        '      InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "6", txtInvoiceNo.Text)

                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim rowIndex2 As Integer = 0
                        Dim j As Integer = 1
                        Do While j <= (rowIndex)

                            Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            Query = "Select * from tblunitms order by UnitMsID"
                            PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM1)

                            rowIndex2 += 1
                            j += 1

                            'Dim TextBoxClassificationCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtClassificationCodeGV"), DropDownList)
                            'Query = "Select * from tblEInvoiceMalaysiaClassificationID order by ClassificationCode"
                            'PopulateDropDownList(Query, "ClassificationCode", "ClassificationCode", TextBoxClassificationCode1)

                            'rowIndex2 += 1
                            'j += 1
                        Loop

                        '      InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "7", txtInvoiceNo.Text)

                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        If TextBoxItemType1.Text <> "-1" Then
                            'Dim query As String

                            '30.05.17

                            Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)

                            If TextBoxItemCode2.Items.Count = 1 Then
                                Query = "Select Description from tblbillingproducts where InActive=False "
                                TextBoxItemCode2.SelectedIndex = -1
                                PopulateDropDownList(Query, "Description", "Description", TextBoxItemCode2)
                            End If

                            '30.05.17

                            '12.01.17
                            'Dim TextBoxTaxCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                            'If ConfigurationManager.AppSettings("DomainName").ToString() = "SINGAPORE" Then
                            '    Query = "Select * from tbltaxType order by taxType"
                            'Else
                            '    Query = "Select * from tbltaxType order by taxType desc"
                            'End If

                            'PopulateDropDownList(Query, "taxType", "taxType", TextBoxTaxCode1)
                            '12.01.17

                            'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            'query = "Select * from tblunitms "
                            'PopulateDropDownList(query, "UnitMs", "UnitMs", TextBoxUOM)

                            If TextBoxItemType1.Text = "SERVICE" Then
                                TextBoxQty1.Enabled = False
                                TextBoxQty1.Text = 1
                                'TextBoxItemCode1.Enabled = False
                                'TextBoxItemDescription1.Enabled = False
                                'TextBoxItemType1.Enabled = False
                                'TextBoxItemCode1.Enabled = False
                                'TextBoxItemDescription1.Enabled = False
                                'ElseIf TextBoxItemType1.Text = "STOCK" Then
                                '    TextBoxRecordNo1.SelectedIndex = 0
                            End If

                        End If


                        rowIndex += 1
                    Next i
                End If
                '    InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", "8", txtInvoiceNo.Text)

                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            If Left(exstr, 60) = "System.ArgumentOutOfRangeException: 'txtServiceRecordGV' has" Then
                'If exstr = "System.ArgumentOutOfRangeException: 'txtServiceRecordGV' has a SelectedValue which is invalid because it does not exist in the list of items." Then

            Else
                InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", ex.Message.ToString, txtInvoiceNo.Text)
                lblAlert.Text = exstr
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            End If

            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataBillingDetailsRecs()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)
                        Dim TextBoxClassificationCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationCodeGV"), TextBox)

                        Dim TextBoxClassificationDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtClassificationDescGV"), TextBox)
                        Dim TextBoxUOMDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtUOMDescGV"), TextBox)
                        Dim TextBoxTaxTypeDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeDescGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelectRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text

                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("OriginalBillAmount") = TextBoxOriginalBillAmount.Text
                        dtCurrentTable.Rows(i - 1)("ClassificationCode") = TextBoxClassificationCode.Text

                        dtCurrentTable.Rows(i - 1)("ItemClassificationDesc") = TextBoxClassificationDesc.Text
                        dtCurrentTable.Rows(i - 1)("UOMDesc") = TextBoxUOMDesc.Text
                        dtCurrentTable.Rows(i - 1)("TaxTypeDesc") = TextBoxTaxTypeDesc.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetRowDataBillingDetailsRecs", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    'End: Biling Details Grid

    'Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
    '    lblAlert.Text = ""
    '    If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
    '        '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
    '        lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
    '        Exit Sub
    '    End If


    '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
    '        txtPopUpClient.Text = txtAccountId.Text
    '        txtPopupClientSearch.Text = txtPopUpClient.Text

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contactperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contACTperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        End If

    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    Else

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1  order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where 1=1  order by name"
    '        End If


    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    End If
    '    mdlPopUpClient.Show()
    'End Sub

    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        'If txtPopUpClient.Text.Trim = "" Then
        '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

        '    SqlDSClient.DataBind()
        '    gvClient.DataBind()
        '    mdlPopUpClient.Show()
        'End If
    End Sub

    Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs)
        Try


            If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where status ='O' order by name"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where status ='O' order by name"
                End If
            Else
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and status ='O' and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contactperson like '%" + txtPopUpClient.Text + "%') order by name"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where 1=1 and status ='O'and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contACTperson like '%" + txtPopUpClient.Text + "%') order by name"
                End If

                'SqlDSClient.DataBind()
                'gvClient.DataBind()
                'mdlPopUpClient.Show()
            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "gvClient_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub



    Protected Sub gvClient_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        Try
            lblAlert.Text = ""
            txtIsPopup.Text = ""
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


            If txtSearch.Text = "InvoiceFilter" Then
                txtSearchAccountID.Text = ""

                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlSearchContactType.Text = ""
                Else
                    ddlSearchContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtSearchAccountID.Text = ""
                Else
                    txtSearchAccountID.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                    txtSearchClientName.Text = ""
                Else
                    txtSearchClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                End If


                txtSearch.Text = "N"
                mdlPopupSearch.Show()

            End If


            If txtSearch.Text = "ImportService" Then
                txtAccountId.Text = ""
                txtAccountId.Text = ""


                If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                    ddlCompanyGrp.Text = ""
                Else
                    ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(24).Text.Trim
                End If


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactType.Text = ""
                Else
                    ddlContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtAccountId.Text = ""
                Else
                    txtAccountId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                    txtClientName.Text = ""
                Else
                    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtLocationId.Text = ""
                Else
                    txtLocationId.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                End If

                txtSearch.Text = "N"
                mdlImportServices.Show()


            End If

            If txtSearch.Text = "ServiceSearch" Then
                txtAccountId.Text = ""
                txtClientName.Text = ""


                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtAccountId.Text = ""
                Else
                    txtAccountId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                    txtClientName.Text = ""
                Else
                    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtLocationId.Text = ""
                Else
                    txtLocationId.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                End If


            ElseIf txtSearch.Text = "InvoiceSearch" Then
                txtAccountIdSearch.Text = ""
                txtClientNameSearch.Text = ""


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeSearch.Text = ""
                Else
                    ddlContactTypeSearch.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtAccountIdSearch.Text = ""
                Else
                    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                    txtClientNameSearch.Text = ""
                Else
                    txtClientNameSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                    ddlCompanyGrpSearch.Text = ""
                Else
                    ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                End If

            ElseIf txtSearch.Text = "CustomerSearch" Then
                txtAccountIdBilling.Text = ""
                txtAccountName.Text = ""

               
                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtAccountType.Text = ""
                Else
                    txtAccountType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtAccountIdBilling.Text = ""
                Else
                    txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    txtLocationIdSelected.Text = ""
                Else
                    txtLocationIdSelected.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(5).Text = "&nbsp;") Then
                    ddlContractGroupBilling.SelectedIndex = 0
                Else
                    ddlContractGroupBilling.Text = gvClient.SelectedRow.Cells(5).Text.Trim

                    'FindDefaultTaxCodeandPctFromContractGroup(ddlContractGroupBilling.Text)
                End If

                If (gvClient.SelectedRow.Cells(7).Text = "&nbsp;") Then
                    txtAccountName.Text = ""
                Else
                    txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(7).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(9).Text = "&nbsp;") Then
                    txtContactPerson.Text = ""
                Else
                    txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(9).Text.Trim)
                End If



                If (gvClient.SelectedRow.Cells(11).Text = "&nbsp;") Then
                    txtBillAddress.Text = ""
                Else
                    txtBillAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(11).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(12).Text = "&nbsp;") Then
                    txtBillStreet.Text = ""
                Else
                    txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(12).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
                    txtBillBuilding.Text = ""
                Else
                    txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
                    txtBillCity.Text = ""
                Else
                    txtBillCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
                    txtBillState.Text = ""
                Else
                    txtBillState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                    txtBillCountry.Text = ""
                Else
                    txtBillCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(17).Text = "&nbsp;") Then
                    txtBillPostal.Text = ""
                Else
                    txtBillPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(17).Text.Trim)
                End If
                If (gvClient.SelectedRow.Cells(20).Text = "&nbsp;") Then
                    txtTIN.Text = ""
                Else
                    txtTIN.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(20).Text.Trim)
                End If
                If (gvClient.SelectedRow.Cells(21).Text = "&nbsp;") Then
                    txtSSTNo.Text = ""
                Else
                    txtSSTNo.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(21).Text.Trim)
                End If

                If gvClient.SelectedRow.Cells(23).Text = "" Or gvClient.SelectedRow.Cells(23).Text = "&nbsp;" Then
                    'Dim gSalesman As String

                Else

                    gddlvalue = gvClient.SelectedRow.Cells(23).Text

                    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanBilling.Items.Add(gddlvalue)
                        ddlSalesmanBilling.Text = gddlvalue
                    Else
                        ddlSalesmanBilling.Text = gvClient.SelectedRow.Cells(23).Text
                    End If
                End If



                If (gvClient.SelectedRow.Cells(26).Text = "&nbsp;") Then
                    txtCompanyGroup.Text = ""
                Else
                    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(26).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtLocation.Text = ""
                Else
                    txtLocation.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(2).Text.Trim)
                End If




                If gvClient.SelectedRow.Cells(22).Text = "" Or gvClient.SelectedRow.Cells(22).Text = "&nbsp;" Then
                    'Dim gSalesman As String
                    ddlCreditTerms.SelectedIndex = 0
                Else

                    gddlvalue = gvClient.SelectedRow.Cells(22).Text

                    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlCreditTerms.Items.Add(gddlvalue)
                        ddlCreditTerms.Text = gddlvalue
                    Else
                        ddlCreditTerms.Text = gvClient.SelectedRow.Cells(22).Text
                    End If
                End If


                If ddlCreditTerms.SelectedIndex = 0 Then
                    FindTerms()
                End If


                If ddlCreditTerms.SelectedIndex > 0 Then
                    ddlCreditTerms_SelectedIndexChanged(sender, e)
                End If
                UpdateTaxCodeRate()

                If grvBillingDetails.Rows.Count = 0 Then
                    FirstGridViewRowBillingDetailsRecs()
                    txtInvoiceAmount.Text = "0.00"
                    txtDiscountAmount.Text = "0.00"
                    txtAmountWithDiscount.Text = "0.00"
                    txtGSTAmount.Text = "0.00"
                    txtNetAmount.Text = "0.00"
                End If


            End If

            gvLocation.DataBind()
            mdlPopUpClient.Hide()
        Catch ex As Exception
           
            lblAlert.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "gvClient_SelectedIndexChanged", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub gvClient2_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient2.PageIndexChanging
        gvClient2.PageIndex = e.NewPageIndex

        If txtClientFrom.Text = "ImportService" Then
            SqlDSClient2.SelectCommand = txtImportService.Text
        End If

        If txtSearch.Text = "CustomerSearch" Then
            SqlDSClient2.SelectCommand = txtCustomerSearch.Text
        End If

        If txtSearch.Text = "InvoiceSearch" Then
            SqlDSClient2.SelectCommand = txtInvoiceSearch.Text
        End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
        'txtIsPopup.Text = "Client"


        SqlDSClient2.DataBind()
        gvClient2.DataBind()
        mdlPopUpClient2.Show()
    End Sub


    Protected Sub gvClient2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient2.SelectedIndexChanged
        Try
            lblAlert.Text = ""
            txtIsPopup.Text = ""
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


            'If txtSearch.Text = "InvoiceFilter" Then
            '    txtSearchAccountID.Text = ""

            '    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        ddlSearchContactType.Text = ""
            '    Else
            '        ddlSearchContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
            '        txtSearchAccountID.Text = ""
            '    Else
            '        txtSearchAccountID.Text = gvClient.SelectedRow.Cells(2).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
            '        txtSearchClientName.Text = ""
            '    Else
            '        txtSearchClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
            '    End If


            '    txtSearch.Text = "N"
            '    mdlPopupSearch.Show()

            'End If


            'If txtSearch.Text = "ImportService" Then
            '    txtAccountId.Text = ""
            '    txtAccountId.Text = ""


            '    If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
            '        ddlCompanyGrp.Text = ""
            '    Else
            '        ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(23).Text.Trim
            '    End If


            '    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        ddlContactType.Text = ""
            '    Else
            '        ddlContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
            '        txtAccountId.Text = ""
            '    Else
            '        txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
            '        txtClientName.Text = ""
            '    Else
            '        txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
            '    End If


            '    If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
            '        txtLocationId.Text = ""
            '    Else
            '        txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
            '    End If

            '    txtSearch.Text = "N"
            '    mdlImportServices.Show()


            'End If

            If txtSearch.Text = "ServiceSearch" Then
                'txtAccountId.Text = ""
                'txtClientName.Text = ""


                'If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                '    txtAccountId.Text = ""
                'Else
                '    txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                '    txtClientName.Text = ""
                'Else
                '    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtLocationId.Text = ""
                'Else
                '    txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If


            ElseIf txtSearch.Text = "InvoiceSearch" Then
                txtAccountIdSearch.Text = ""
                txtClientNameSearch.Text = ""


                If (gvClient2.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeSearch.Text = ""
                Else
                    ddlContactTypeSearch.Text = gvClient2.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient2.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountIdSearch.Text = ""
                Else
                    txtAccountIdSearch.Text = gvClient2.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient2.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtClientNameSearch.Text = ""
                Else
                    txtClientNameSearch.Text = Server.HtmlDecode(gvClient2.SelectedRow.Cells(3).Text.Trim)
                End If


                'If (gvClient2.SelectedRow.Cells(23).Text = "&nbsp;") Then
                '    ddlCompanyGrpSearch.Text = ""
                'Else
                '    ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient2.SelectedRow.Cells(23).Text.Trim)
                'End If

            ElseIf txtSearch.Text = "CustomerSearch" Then
                'txtAccountIdBilling.Text = ""
                'txtAccountName.Text = ""


                'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '    txtAccountType.Text = ""
                'Else
                '    txtAccountType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                '    txtAccountIdBilling.Text = ""
                'Else
                '    txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtLocationIdSelected.Text = ""
                'Else
                '    txtLocationIdSelected.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                '    ddlContractGroupBilling.SelectedIndex = 0
                'Else
                '    ddlContractGroupBilling.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                '    txtAccountName.Text = ""
                'Else
                '    txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(8).Text = "&nbsp;") Then
                '    txtContactPerson.Text = ""
                'Else
                '    txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(8).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                '    txtCompanyGroup.Text = ""
                'Else
                '    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(23).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(10).Text = "&nbsp;") Then
                '    txtBillAddress.Text = ""
                'Else
                '    txtBillAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(10).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(11).Text = "&nbsp;") Then
                '    txtBillStreet.Text = ""
                'Else
                '    txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(11).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(12).Text = "&nbsp;") Then
                '    txtBillBuilding.Text = ""
                'Else
                '    txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(12).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
                '    txtBillCity.Text = ""
                'Else
                '    txtBillCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
                '    txtBillState.Text = ""
                'Else
                '    txtBillState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
                '    txtBillCountry.Text = ""
                'Else
                '    txtBillCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                '    txtBillPostal.Text = ""
                'Else
                '    txtBillPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                'End If


                'If gvClient.SelectedRow.Cells(20).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                '    'Dim gSalesman As String

                'Else

                '    gddlvalue = gvClient.SelectedRow.Cells(20).Text

                '    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                '        ddlSalesmanBilling.Items.Add(gddlvalue)
                '        ddlSalesmanBilling.Text = gddlvalue
                '    Else
                '        ddlSalesmanBilling.Text = gvClient.SelectedRow.Cells(20).Text
                '    End If
                'End If


                'If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                '    txtLocation.Text = ""
                'Else
                '    txtLocation.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                'End If




                'If gvClient.SelectedRow.Cells(19).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                '    'Dim gSalesman As String
                '    ddlCreditTerms.SelectedIndex = 0
                'Else

                '    gddlvalue = gvClient.SelectedRow.Cells(19).Text

                '    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                '        ddlCreditTerms.Items.Add(gddlvalue)
                '        ddlCreditTerms.Text = gddlvalue
                '    Else
                '        ddlCreditTerms.Text = gvClient.SelectedRow.Cells(19).Text
                '    End If
                'End If

                'If ddlCreditTerms.SelectedIndex > 0 Then
                '    ddlCreditTerms_SelectedIndexChanged(sender, e)
                'End If

                'If grvBillingDetails.Rows.Count = 0 Then
                '    FirstGridViewRowBillingDetailsRecs()
                '    txtInvoiceAmount.Text = "0.00"
                '    txtDiscountAmount.Text = "0.00"
                '    txtAmountWithDiscount.Text = "0.00"
                '    txtGSTAmount.Text = "0.00"
                '    txtNetAmount.Text = "0.00"
                'End If

            End If

            gvLocation.DataBind()
            mdlPopUpClient2.Hide()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "gvClient2_SelectedIndexChanged", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub
    Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
        ''please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        ''select another alphabet ---records are not selected

        'Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        'ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
        'Me.GenerateClientAlphabets()
        'gvClient.PageIndex = 0
        ''If txtPopUpClient.Text.Trim = "" Then
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''Else
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''End If

        'If txtPopUpClient.Text.Trim = "" Then
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    End If

        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    End If
        'End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
    End Sub

    'Protected Sub chkSelectGV_CheckedChanged(sender As Object, e As EventArgs)
    '    Try
    '        lblAlert.Text = ""
    '        Dim AmountSelected As Decimal = 0.0

    '        Dim chk1 As CheckBox = DirectCast(sender, CheckBox)
    '        Dim xrow1 As GridViewRow = CType(chk1.NamingContainer, GridViewRow)


    '        'SetRowDataServiceRecs()
    '        Dim totalRows As Long
    '        totalRows = 0

    '        'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

    '        'If tableAdd1 IsNot Nothing Then

    '        For rowIndex1 As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
    '            Dim TextBoxchkSelect1 As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '            Dim lblid16 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("txtToBillAmtGV"), TextBox)

    '            'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
    '            'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
    '            If (TextBoxchkSelect1.Checked = True) Then
    '                AmountSelected = AmountSelected + Convert.ToDecimal(lblid16.Text)
    '            End If
    '        Next rowIndex1
    '        'End If
    '        txtTotalServiceSelected.Text = AmountSelected.ToString("N2")
    '        updPanelInvoice.Update()
    '        mdlImportServices.Show()

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '    End Try
    'End Sub

    Protected Sub chkSelectGVII_CheckedChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim AmountSelected As Decimal = 0.0

            Dim chk1 As CheckBox = DirectCast(sender, CheckBox)
            Dim xrow1 As GridViewRow = CType(chk1.NamingContainer, GridViewRow)

            'SetRowDataBillingDetailsRecsQR()
            'SetRowDataServiceRecs()
            Dim totalRows As Long
            totalRows = 0

            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRecQR"), DataTable)

            'If tableAdd1 IsNot Nothing Then

            For rowIndex1 As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                'Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtOSAmountGVII"), TextBox)

                Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                Dim lblid16 As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("txtOSAmountGVII"), TextBox)

                If (TextBoxchkSelect1.Checked = True) Then
                    AmountSelected = AmountSelected + Convert.ToDecimal(lblid16.Text)
                End If
            Next rowIndex1
            'End If
            txtTotalInvoiceSelected.Text = AmountSelected.ToString("N2")
            updPanelInvoice.Update()
            'mdlQuickReceipt.Show()
            mdlImportInvoices.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "chkSelectGVII_CheckedChanged", ex.Message.ToString, "")
        End Try
    End Sub
    Protected Sub btnViewEdit_Click(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""

            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            Dim btn1 As Button = DirectCast(sender, Button)
            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtAccountNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtBillAddress1GV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtBillBuildingGV"), TextBox)
            Dim lblid5 As TextBox = CType(xrow1.FindControl("txtBillStreetGV"), TextBox)
            Dim lblid6 As TextBox = CType(xrow1.FindControl("txtBillCountryGV"), TextBox)
            Dim lblid7 As TextBox = CType(xrow1.FindControl("txtBillPostalGV"), TextBox)
            Dim lblid8 As TextBox = CType(xrow1.FindControl("txtOurReferenceGV"), TextBox)
            Dim lblid9 As TextBox = CType(xrow1.FindControl("txtYourReferenceGV"), TextBox)
            Dim lblid10 As TextBox = CType(xrow1.FindControl("txtPoNoGV"), TextBox)
            Dim lblid11 As TextBox = CType(xrow1.FindControl("txtCreditTermsGV"), TextBox)
            Dim lblid12 As TextBox = CType(xrow1.FindControl("txtSalesmanGV"), TextBox)
            Dim lblid13 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
            Dim lblid14 As TextBox = CType(xrow1.FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid15 As TextBox = CType(xrow1.FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid16 As TextBox = CType(xrow1.FindControl("txtCompanyGroupGV"), TextBox)
            Dim lblid17 As TextBox = CType(xrow1.FindControl("txtRcnoInvoiceGV"), TextBox)
            Dim lblid18 As TextBox = CType(xrow1.FindControl("txtRcnoServicebillingdetailGV"), TextBox)
            Dim lblid19 As TextBox = CType(xrow1.FindControl("txtContactTypeGV"), TextBox)
            Dim lblid20 As TextBox = CType(xrow1.FindControl("txtInvoiceDateGV"), TextBox)

            Dim lblid21 As TextBox = CType(xrow1.FindControl("txtDiscAmountGV"), TextBox)
            Dim lblid22 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
            'Dim lblid23 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
            Dim lblid24 As TextBox = CType(xrow1.FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid25 As TextBox = CType(xrow1.FindControl("txtStatusGV"), TextBox)
            Dim lblid26 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)

            Label41.Text = "INVOICE DETAILS : " & lblid24.Text

            Dim rowindex1 As Integer = xrow1.RowIndex
            If txtMode.Text = "NEW" Then
                txtAccountType.Text = lblid19.Text
                txtCompanyGroup.Text = lblid16.Text
                'txtInvoiceDate.Text = lblid20.Text
                txtAccountIdBilling.Text = lblid1.Text
                txtAccountName.Text = lblid2.Text
                txtBillAddress.Text = lblid3.Text
                txtBillBuilding.Text = lblid4.Text
                txtBillStreet.Text = lblid5.Text
                txtBillCountry.Text = lblid6.Text
                txtBillPostal.Text = lblid7.Text
                txtOurReference.Text = lblid8.Text
                txtYourReference.Text = lblid9.Text
                txtPONo.Text = lblid10.Text
                txtContractNo.Text = lblid26.Text
            End If

            'If rbtInvoiceType.SelectedIndex = 1 Then
            '    Me.cpnlInvoiceDetails.Collapsed = False
            '    Me.cpnlInvoiceDetails.ClientState = False
            '    updPanelInvoice.Update()
            'End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim sql As String
            sql = ""

            Dim command21 As MySqlCommand = New MySqlCommand

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            command21.CommandType = CommandType.Text
            command21.CommandText = sql
            command21.Connection = conn

            Dim dr21 As MySqlDataReader = command21.ExecuteReader()

            Dim dt21 As New DataTable
            dt21.Load(dr21)

            If dt21.Rows.Count > 0 Then
                If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
            End If


            '''''''''''''''''''''''''''''''''''

            '''''''''''''''''''''''''''''''''''


            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If



            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            'conn.Close()


            'Start: Populate the grid
            txtRcnoServiceRecord.Text = lblid14.Text
            txtRcnoServiceRecordDetail.Text = lblid15.Text
            txtContractNo.Text = lblid22.Text
            txtRcnoInvoice.Text = lblid17.Text
            txtRowSelected.Text = rowindex1.ToString
            txtRcnoServiceBillingDetail.Text = lblid18.Text
            txtRcnotblServiceBillingDetail.Text = lblid18.Text

            If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
            End If
            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                txtRcnoServiceBillingDetail.Text = "0"
            End If

            Dim Query As String

            Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
            'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            Query = "Select * from tblbillingproducts where InActive=False  "
            PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

            Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query = "Select * from tblunitms order by UnitMsID"
            PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM1)


            'If Convert.ToInt64(txtRcnoInvoice.Text) = 0 Then
            If Convert.ToInt64(txtRcnoServiceBillingDetail.Text) = 0 Then
                Dim dt As New DataTable

                '''''''''''''''''''''''''

                'Get Item desc, price Id

                'Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()
                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                'If lblid25.Text = "P" Then
                '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                'ElseIf lblid25.Text = "O" Then
                '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                'End If

                If String.IsNullOrEmpty(lblid26.Text) = False Then
                    If lblid25.Text = "P" Then
                        command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                    ElseIf lblid25.Text = "O" Then
                        command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                    End If
                Else
                    command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-COO'"
                End If

                command1.Connection = conn

                Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                'AddNewRowBillingDetailsRecs()

                Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                TextBoxItemType.Text = "SERVICE"
                TextBoxItemType.Enabled = False

                Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                TextBoxItemCode.Text = dt1.Rows(0)("ProductCode").ToString()

                Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                'TextBoxItemDescription.Text = ""
                TextBoxItemDescription.Text = dt1.Rows(0)("Description").ToString()


                Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()


                Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
                TextBoxUOM.Text = "--SELECT--"

                Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtQtyGV"), TextBox)
                TextBoxQty.Text = "1"
                TextBoxQty.Enabled = False

                Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                TextBoxPriceWithDisc.Text = lblid13.Text

                Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                TextBoxPricePerUOM.Text = lblid13.Text

                Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))

                Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                TextBoxTotalPrice.Text = lblid13.Text

                Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtContractNoGV"), TextBox)
                TextBoxContractNo.Text = Convert.ToString(txtContractNo.Text)

                Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)


                txtTotal.Text = TextBoxTotalPrice.Text
                txtTotalWithGST.Text = TextBoxTotalPriceWithGST.Text

                txtTotalDiscAmt.Text = (0.0).ToString("N2")
                txtTotalGSTAmt.Text = Convert.ToDecimal(TextBoxGSTAmt.Text).ToString("N2")
                txtTotalWithDiscAmt.Text = txtTotal.Text

                '''''''''''''''''''''
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                'conn.Close()
            Else

                'Start: From tblBillingDetailItem

                Dim Total As Decimal
                Dim TotalWithGST As Decimal
                Dim TotalDiscAmt As Decimal
                Dim TotalGSTAmt As Decimal
                Dim TotalPriceWithDiscountAmt As Decimal


                Total = 0.0
                TotalWithGST = 0.0
                TotalDiscAmt = 0.0
                TotalGSTAmt = 0.0
                TotalPriceWithDiscountAmt = 0.0

                'Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand
                cmdServiceBillingDetailItem.CommandType = CommandType.Text
                cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblservicebillingdetailitem where Rcnoservicebillingdetail=" & Convert.ToInt32(txtRcnoServiceBillingDetail.Text)
                cmdServiceBillingDetailItem.Connection = conn

                Dim drcmdServiceBillingDetailItem As MySqlDataReader = cmdServiceBillingDetailItem.ExecuteReader()
                Dim dtServiceBillingDetailItem As New DataTable
                dtServiceBillingDetailItem.Load(drcmdServiceBillingDetailItem)

                Dim TotDetailRecordsLoc = dtServiceBillingDetailItem.Rows.Count
                If dtServiceBillingDetailItem.Rows.Count > 0 Then

                    Dim rowIndex = 0

                    For Each row As DataRow In dtServiceBillingDetailItem.Rows
                        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                            AddNewRowBillingDetailsRecs()
                            'AddNewRow()
                        End If

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        TextBoxItemType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemType"))

                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        TextBoxItemCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode"))

                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                        TextBoxItemDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemDescription"))

                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                        TextBoxOtherCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("OtherCode"))

                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtUOMGV"), DropDownList)
                        If String.IsNullOrEmpty(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("UOM"))) = True Then

                        Else
                            TextBoxUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("UOM"))
                        End If


                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Qty"))
                        'TextBoxQty.Enabled = False

                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("PricePerUOM"))


                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("DiscPerc"))

                        Dim TextBoxDiscAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                        TextBoxDiscAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("DiscAmount"))


                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("PriceWithDisc"))


                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                        TextBoxTaxType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TaxType"))

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTPerc"))

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTAmt"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TotalPrice"))

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TotalPriceWithGST"))

                        Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                        TextBoxServiceRecord.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ServiceRecordNo"))

                        'Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtInvoiceTypeGV"), TextBox)
                        'TextBoxInvoiceType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("InvoiceType"))

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                        TextBoxGLDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GLDescription"))

                        Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                        TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                        'txtAmountWithDiscount.Text =  Total - TotalDiscAmt
                        TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                        TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                        'Dim Query As String

                        Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                        Query = "Select * from tblbillingproducts where InActive=False  "
                        PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                        Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Query = "Select * from tblunitms order by UnitMsID"
                        PopulateDropDownList(Query, "UnitMsID", "UnitMsID", TextBoxUOM2)


                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        If TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxQty1.Enabled = False
                            TextBoxQty1.Text = 1
                            TextBoxItemType1.Enabled = False
                        End If

                        rowIndex += 1

                    Next row
                    'AddNewRowBillingDetailsRecs()
                    'SetPreviousDataBillingDetailsRecs()
                    'AddNewRow()
                    'SetPreviousData()
                    txtTotal.Text = Total.ToString("N2")
                    txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                    txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")

                    'txtTotalDiscAmt.Text = 0.0
                    txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    If conn.State = ConnectionState.Open Then
                        conn.Close()
                        conn.Dispose()
                    End If
                    'conn.Close()
                Else
                    FirstGridViewRowBillingDetailsRecs()
                    'FirstGridViewRowTarget()
                    'Dim Query As String
                    'Dim TextBoxTargetDesc As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"

                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
                End If


                'End: Detail Records


                'End: From tblBillingDetailItem
            End If

            AddNewRowBillingDetailsRecs()
            'grvBillingDetails.Enabled = True

            btnSaveInvoice.Enabled = False
            'If txtPostStatus.Text <> "P" Then
            '    btnSave.Enabled = True
            'End If

            If txtPostStatus.Text <> "P" Then
                grvBillingDetails.Enabled = True
                btnSave.Enabled = True
            End If

            updpnlServiceRecs.Update()

            'End: Billing Details
            updPanelSave.Update()
            'End: Populate the grid

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnViewEdit_Click", ex.Message.ToString, "")
        End Try
    End Sub

    '' GVB

    Protected Sub txtQtyGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtPricePerUOMGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim btn1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

            '''''''''''''''''''''''''''''''''

            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGVB"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtServiceDateGVB"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGVB"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGVB"), TextBox)

            Dim lblid5 As TextBox = CType(txt1.FindControl("txtItemTypeGVB"), TextBox)

            Dim lblid6 As TextBox = CType(txt1.FindControl("txtPricePerUOMGVB"), TextBox)
            'Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGVB"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGVB"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex
            ''''''''''''''''''

            Session.Remove("servicerecordForupdateservicetable")
            Session.Remove("AmountForupdateservicetable")
            Session.Remove("AmountForupdateRowNo")

            If String.IsNullOrEmpty(lblid2.Text.Trim) = False Then
                Dim sqlstr As String
                sqlstr = ""

                sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(lblid2.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstr
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("svcLock").ToString = "Y" Then
                        lblid3.Text = Convert.ToDecimal(lblid4.Text).ToString("N2")
                        mdlLockedServiceRecord.Show()
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ServiceLock();</Script>", False)
                    End If


                Else
                    If String.IsNullOrEmpty(lblid1.Text) = False Then
                        'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

                        Session.Add("servicerecordForupdateservicetable", lblid1.Text)
                        Session.Add("AmountForupdateservicetable", lblid3.Text)
                        Session.Add("AmountForupdateRowNo", rowindex1)

                        mdlUpdateServiceRecord.Show()

                    End If
                    '
                    'CalculatePrice()
                    'updpnlBillingDetails.Update()
                End If

                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            End If


            ''''''''''''''''''''''''''

            If lblid5.Text = "SERVICE" Then

                'lblid3.Text = 0.0
                'lblid8.Text = 0.0
                lblid9.Text = 0.0
                lblid10.Text = 0.0
                'lblid4.Text = ""
                'lblid5.Text = ""
                'lblid6.Text = ""
                'lblid16.Text = ""
                'lblid7.Text = ""

                Dim IsServiceRecord As Boolean
                IsServiceRecord = False

                Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsServiceRecord.Open()

                Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                commandIsServiceRecord.CommandType = CommandType.Text
                'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

                commandIsServiceRecord.Connection = connIsServiceRecord

                Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                Dim dtIsServiceRecord As New DataTable
                dtIsServiceRecord.Load(drIsServiceRecord)

                If dtIsServiceRecord.Rows.Count > 0 Then

                    'If Convert.ToDecimal(lblid6.Text) > Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) Then
                    '    lblid6.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    'lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    updpnlBillingDetails.Update()

                    '    lblAlert.Text = "TO BE BILLED AMOUNT IS " + dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    updPnlMsg.Update()

                    '    commandIsServiceRecord.Dispose()
                    '    connIsServiceRecord.Close()
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    'End If

                End If

                commandIsServiceRecord.Dispose()
                connIsServiceRecord.Close()
                connIsServiceRecord.Dispose()
                dtIsServiceRecord.Dispose()
                drIsServiceRecord.Close()
            End If


            '''''''''''''''''''''''''''''''''

            'CalculatePrice()



            CalculatePriceGVB()
            updPnlBillingRecsNew.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtPricePerUOMGVB_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtDiscAmountGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtDiscPercGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Private Sub CalculatePriceGStInclusive()
        Try
            ''''''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                        
                            Dim lblidQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtQtyGV"), TextBox)
                            Dim lblidPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                            Dim lblidTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                            Dim lblidDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                            Dim lblidDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            Dim lblidPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)

                            Dim lblidGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                            Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                            Dim lblidGSTBase As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)


                            If chkGSTInclusive.Checked = False Then
                                lblidPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(lblidNetAmount.Text).ToString("N2"))

                                lblidTotalPrice.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidQty.Text) * Convert.ToDecimal(lblidPricePerUOM.Text)).ToString("N2"))
                                lblidDiscAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidTotalPrice.Text) * Convert.ToDecimal(lblidDiscPerc.Text) * 0.01).ToString("N2"))
                                lblidPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidTotalPrice.Text)) - Convert.ToDecimal(lblidDiscAmount.Text)).ToString("N2"))

                                lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidPriceWithDisc.Text) * Convert.ToDecimal(lblidGSTRate.Text) * 0.01).ToString("N2"))
                                lblidNetAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidPriceWithDisc.Text)) + Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            Else
                             
                                lblidNetAmount.Text = Convert.ToString(Convert.ToDecimal(lblidTotalPrice.Text).ToString("N2"))
                                lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) * Convert.ToDecimal(lblidGSTRate.Text) / (100 + Convert.ToDecimal(lblidGSTRate.Text))).ToString("N2"))

                                lblidPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))

                                lblidTotalPrice.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                                lblidDiscAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidTotalPrice.Text) * Convert.ToDecimal(lblidDiscPerc.Text) * 0.01).ToString("N2"))
                                lblidPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidTotalPrice.Text)) - Convert.ToDecimal(lblidDiscAmount.Text)).ToString("N2"))
                            End If


                        End If
                    End If
                Next
                'AdjustGStAmount()
            End If

            '''''''''''''''''''''''''''''''''''


            'Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGV"), TextBox)

            'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGV"), TextBox)
            'Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGV"), TextBox)
            'Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGV"), TextBox)

            'Dim lblid10 As DropDownList = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), DropDownList)
            ''Dim lblid11 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)

            'Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            'Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGV"), TextBox)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            'Dim dblQty As String
            'Dim dblPricePerUOM As String
            'Dim dblTotalPrice As String

            'Dim dblDiscPerc As String
            'Dim dblDisAmount As String
            'Dim dblPriceWithDisc As String

            'Dim dblGSTPerc As String
            'Dim dblGSTAmt As String
            'Dim dblTotalPriceWithGST As String


            'If String.IsNullOrEmpty(lblid1.Text) = True Then
            '    lblid1.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid2.Text) = True Then
            '    lblid2.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid3.Text) = True Then
            '    lblid3.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid4.Text) = True Then
            '    lblid4.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid5.Text) = True Then
            '    lblid5.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid6.Text) = True Then
            '    lblid6.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid7.Text) = True Then
            '    lblid7.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid8.Text) = True Then
            '    lblid8.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid9.Text) = True Then
            '    lblid9.Text = "0.00"
            'End If

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            'dblQty = (lblid1.Text)
            'dblPricePerUOM = (lblid2.Text)
            'dblTotalPrice = (lblid3.Text)

            'dblDiscPerc = (lblid4.Text)
            'dblDisAmount = (lblid5.Text)
            'dblPriceWithDisc = (lblid6.Text)

            'dblGSTPerc = (lblid7.Text)
            'dblGSTAmt = (lblid8.Text)
            'dblTotalPriceWithGST = (lblid9.Text)

            'If chkGSTInclusive.Checked = False Then
            '    lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
            '    lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            '    lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))

            '    lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
            '    lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))
            'Else
            '    lblid9.Text = Convert.ToString(Convert.ToDecimal(lblid3.Text).ToString("N2"))
            '    lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid9.Text) * Convert.ToDecimal(lblid7.Text) / (100 + Convert.ToDecimal(lblid7.Text))).ToString("N2"))


            '    lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid9.Text) - Convert.ToDecimal(lblid8.Text)).ToString("N2"))
            '    lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            '    lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))



            'End If

            CalculateTotalPrice()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculatePrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub CalculatePriceGVB()
        Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGVB"), TextBox)
        Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGVB"), TextBox)
        Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGVB"), TextBox)

        Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGVB"), TextBox)
        Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGVB"), TextBox)
        Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGVB"), TextBox)

        Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGVB"), TextBox)
        Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGVB"), TextBox)
        Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

        Dim dblQty As String
        Dim dblPricePerUOM As String
        Dim dblTotalPrice As String

        Dim dblDiscPerc As String
        Dim dblDisAmount As String
        Dim dblPriceWithDisc As String

        Dim dblGSTPerc As String
        Dim dblGSTAmt As String
        Dim dblTotalPriceWithGST As String


        If String.IsNullOrEmpty(lblid1.Text) = True Then
            lblid1.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid2.Text) = True Then
            lblid2.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid3.Text) = True Then
            lblid3.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid4.Text) = True Then
            lblid4.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid5.Text) = True Then
            lblid5.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid6.Text) = True Then
            lblid6.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid7.Text) = True Then
            lblid7.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid8.Text) = True Then
            lblid8.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid9.Text) = True Then
            lblid9.Text = "0.00"
        End If


        dblQty = (lblid1.Text)
        dblPricePerUOM = (lblid2.Text)
        dblTotalPrice = (lblid3.Text)

        dblDiscPerc = (lblid4.Text)
        dblDisAmount = (lblid5.Text)
        dblPriceWithDisc = (lblid6.Text)

        dblGSTPerc = (lblid7.Text)
        dblGSTAmt = (lblid8.Text)
        dblTotalPriceWithGST = (lblid9.Text)

        lblid3.Text = (Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
        lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
        lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))
        lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
        lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

        CalculateTotalPrice()


    End Sub


    'Protected Sub txtTaxTypeGVB_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGVB"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGVB"), TextBox)

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString
    '            lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")
    '            CalculatePriceGVB()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '        conn1.Dispose()
    '        commandGST.Dispose()
    '        dtGST.Dispose()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '        InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtTaxTypeGVB_SelectedIndexChanged", ex.Message.ToString, "")
    '    End Try
    'End Sub
    ' End:GVB


    Protected Sub txtServiceRecordGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceStatusGV"), TextBox)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid6 As TextBox = CType(txt1.FindControl("txtLocationIdGV"), TextBox)
            Dim lblid7 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid11 As DropDownList = CType(txt1.FindControl("txtItemCodeGV"), DropDownList)
            Dim lblid12 As TextBox = CType(txt1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblid13 As TextBox = CType(txt1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid14 As TextBox = CType(txt1.FindControl("txtGLDescriptionGV"), TextBox)
            Dim lblid15 As TextBox = CType(txt1.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid16 As TextBox = CType(txt1.FindControl("txtServiceByGV"), TextBox)

            Dim lblidGSTRate As TextBox = CType(txt1.FindControl("txtGSTPercGV"), TextBox)
            Dim lblidGSTBase As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblidNetAmount As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)
            'Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            Dim lblidGST As TextBox = CType(txt1.FindControl("txtTaxTypeGV"), TextBox)
            'CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), DropDownList)
            'Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)

            Dim lblid17 As TextBox = CType(txt1.FindControl("txtDiscPercGV"), TextBox)
            Dim lblid18 As TextBox = CType(txt1.FindControl("txtDiscAmountGV"), TextBox)


            lblidGSTRate.Text = txtTaxRatePct.Text
            lblidGST.Text = txtGST.Text
            lblid1.Text = lblid1.Text.ToUpper
            lblAlert.Text = ""
            updPnlMsg.Update()

            If lblid2.Text = "SERVICE" Then

                ''''''''''''''''''
                Dim lInvoiceNoExists As String

                lInvoiceNoExists = ""
                lInvoiceNoExists = IsInvoiceNoExistsForManual(lblid1.Text)

                If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then

                    ''''
                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"
                    'End If

                    If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                        lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                        'Else
                        '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"

                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                        lblid1.Text = ""
                        'mdlImportServices.Show()
                        Exit Sub
                    End If

                    ''''
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    'lblid1.Text = ""
                    ''mdlImportServices.Show()
                    'Exit Sub

                End If

                ''''''''''''''''''''

                ''''''''''''''''''
                Dim lServiceRecordExists As String

                lServiceRecordExists = ""
                lServiceRecordExists = IsServiceRecordExistsForManual(lblid1.Text)

                If String.IsNullOrEmpty(lServiceRecordExists.Trim) = False Then

                    ''''
                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"
                    'End If

                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    'lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lServiceRecordExists & "'"
                    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' has ZERO amount to Bill"
                    'End If

                    ''''
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    lblid1.Text = ""
                    'mdlImportServices.Show()
                    Exit Sub

                End If

                ''''''''''''''''''''

                lblid3.Text = 0.0
                lblid8.Text = 0.0
                lblid9.Text = 0.0
                lblid10.Text = 0.0
                lblid4.Text = ""
                lblid5.Text = ""
                lblid6.Text = ""
                lblid16.Text = ""
                lblid7.Text = ""

                Dim IsServiceRecord As Boolean
                IsServiceRecord = False

                Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsServiceRecord.Open()

                Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                commandIsServiceRecord.CommandType = CommandType.Text
                'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

                commandIsServiceRecord.Connection = connIsServiceRecord

                Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                Dim dtIsServiceRecord As New DataTable
                dtIsServiceRecord.Load(drIsServiceRecord)

                If dtIsServiceRecord.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                        lblid1.Text = ""
                        lblAlert.Text = "SERVICE RECORD NOT FOUND"
                        updPnlMsg.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub

                    Else
                        'If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) = 0.0 Then
                        '    lblid1.Text = ""
                        '    lblAlert.Text = "UNABLE TO BILL A SERVICE WHICH HAS ZERO AMOUNT TO BILL"
                        '    updPnlMsg.Update()
                        '    commandIsServiceRecord.Dispose()
                        '    connIsServiceRecord.Close()
                        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        '    Exit Sub
                        'End If

                        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("ContractNo").ToString.Trim) = True Then
                            lblid1.Text = ""
                            lblAlert.Text = "INVALID CONTRACT NUMBER"
                            updPnlMsg.Update()
                            commandIsServiceRecord.Dispose()
                            connIsServiceRecord.Close()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            Dim commandIsContract As MySqlCommand = New MySqlCommand
                            commandIsContract.CommandType = CommandType.Text
                            commandIsContract.CommandText = "SELECT ContractGroup from tblContract where ContractNo ='" & dtIsServiceRecord.Rows(0)("ContractNo").ToString & "'"
                            commandIsContract.Connection = connIsServiceRecord

                            Dim drIsContract As MySqlDataReader = commandIsContract.ExecuteReader()
                            Dim dtIsContract As New DataTable
                            dtIsContract.Load(drIsContract)

                            If dtIsContract.Rows.Count > 0 Then
                                If dtIsContract.Rows(0)("ContractGroup").ToString <> ddlContractGroupBilling.Text.Trim Then

                                    lblAlert.Text = "SERVICE RECORD [" & lblid1.Text & "] DOES NOT BELONG TO CONTRACT GROUP [" & ddlContractGroupBilling.Text & "]"
                                    updPnlMsg.Update()
                                    lblid1.Text = ""

                                    commandIsServiceRecord.Dispose()
                                    connIsServiceRecord.Close()
                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                    Exit Sub
                                End If
                            Else
                                lblid1.Text = ""
                                lblAlert.Text = "INVALID CONTRACT GROUP"
                                updPnlMsg.Update()

                                commandIsServiceRecord.Dispose()
                                connIsServiceRecord.Close()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If

                        lblidGSTRate.Text = txtGST1.Text
                        lblidGST.Text = txtGST.Text

                        If chkGSTInclusive.Checked = False Then
                            lblid3.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            CalculatePrice()
                        Else

                            lblidNetAmount.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            '''''''''''''''
                            lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) * Convert.ToDecimal(lblidGSTRate.Text) / (100 + Convert.ToDecimal(lblidGSTRate.Text))).ToString("N2"))
                            lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            lblid10.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))

                            lblid17.Text = "0.00"
                            lblid18.Text = "0.00"
                            CalculatePrice()
                            '''''''''''''''
                        End If

                        lblidGSTRate.Text = txtGST1.Text
                        lblidGST.Text = txtGST.Text

                        lblid4.Text = dtIsServiceRecord.Rows(0)("Status").ToString
                        lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                        lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                        lblid16.Text = dtIsServiceRecord.Rows(0)("ServiceBy").ToString
                        lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")

                        updpnlBillingDetails.Update()

                        '''''''''''''''''''''''
                        Dim commandOtherInfo As MySqlCommand = New MySqlCommand
                        If lblid4.Text = "P" Then
                            commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                        ElseIf lblid4.Text = "O" Then
                            commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                        End If
                        commandOtherInfo.Connection = connIsServiceRecord

                        Dim dr1 As MySqlDataReader = commandOtherInfo.ExecuteReader()
                        Dim dt1 As New DataTable
                        dt1.Load(dr1)

                        lblid11.Text = dt1.Rows(0)("Description").ToString()
                        lblid12.Text = dt1.Rows(0)("ProductCode").ToString()
                        lblid13.Text = dt1.Rows(0)("COACode").ToString()
                        lblid14.Text = dt1.Rows(0)("COADescription").ToString()
                        lblid15.Text = lblid1.Text & ", " & lblid7.Text & ", " & dtIsServiceRecord.Rows(0)("Notes").ToString()

                    End If
                Else
                    lblid1.Text = ""
                    lblAlert.Text = "INVALID SERVICE RECORD"
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub

                End If

                commandIsServiceRecord.Dispose()
                connIsServiceRecord.Close()
                dtIsServiceRecord.Dispose()
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtServiceRecordGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub


    ''''''''' Start:For Contract entry
    Protected Sub txtContractNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex

            txtContractTE.Text = rowindex1


            lblid5.Text = lblid5.Text.ToUpper
            lblAlert.Text = ""
            updPnlMsg.Update()

            If String.IsNullOrEmpty(lblid5.Text) = False Then
                If lblid2.Text = "OTHERS" Then

                    Dim IsContractNo As Boolean
                    IsContractNo = False

                    Dim connIsContractNo As MySqlConnection = New MySqlConnection()

                    connIsContractNo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsContractNo.Open()

                    Dim commandIsContractNo As MySqlCommand = New MySqlCommand
                    commandIsContractNo.CommandType = CommandType.Text
                    'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                    'commandIsContractNo.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='O') or (Status ='P') or (Status ='E') or (Status ='T'))"
                    commandIsContractNo.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='O') or (Status ='P'))"

                    commandIsContractNo.Connection = connIsContractNo

                    Dim drIsContractNo As MySqlDataReader = commandIsContractNo.ExecuteReader()
                    Dim dtIsContractNo As New DataTable
                    dtIsContractNo.Load(drIsContractNo)

                    If dtIsContractNo.Rows.Count = 0 Then

                        ''start : 30.03.20

                        Dim connIsContractNo1 As MySqlConnection = New MySqlConnection()

                        connIsContractNo1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        connIsContractNo1.Open()

                        Dim commandIsContractNo1 As MySqlCommand = New MySqlCommand
                        commandIsContractNo1.CommandType = CommandType.Text
                        'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                        commandIsContractNo1.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='E') or (Status ='T'))"

                        commandIsContractNo1.Connection = connIsContractNo1

                        Dim drIsContractNo1 As MySqlDataReader = commandIsContractNo1.ExecuteReader()
                        Dim dtIsContractNo1 As New DataTable
                        dtIsContractNo1.Load(drIsContractNo1)

                        If dtIsContractNo1.Rows.Count = 0 Then
                            ''end :30.03.20

                            lblid5.Text = ""
                            lblAlert.Text = "CONTRACT NO. NOT FOUND FOR THIS ACCOUNT ID"
                            updPnlMsg.Update()
                            connIsContractNo1.Close()
                            commandIsContractNo1.Dispose()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            mdlContractTE.Show()
                        End If
                        connIsContractNo1.Close()
                        commandIsContractNo1.Dispose()
                    End If

                    commandIsContractNo.Dispose()
                    connIsContractNo.Close()
                    dtIsContractNo.Dispose()
                End If

            End If
            'txtContractTE.Text = 0
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtContractNoGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub
    ''''''''  End: For Contract entry



    Protected Sub txtQtyGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub

    Protected Sub txtPricePerUOMGV_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)

            Dim lblid5 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)

            Dim lblid6 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)


            'Dim lblid1 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            'Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            'Dim lblid3 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            'Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceRecordNoGV"), TextBox)

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex


            Session.Remove("servicerecordForupdateservicetable")
            Session.Remove("AmountForupdateservicetable")
            Session.Remove("AmountForupdateRowNo")
            ''''''''''''''''''

            If IsNumeric(lblid3.Text) = False Then
                lblAlert.Text = "INVALID NUMERIC VALUE"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(lblid2.Text.Trim) = False Then
                Dim sqlstr As String
                sqlstr = ""

                sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(lblid2.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstr
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("svcLock").ToString = "Y" Then
                        lblid3.Text = Convert.ToDecimal(lblid4.Text).ToString("N2")
                        mdlLockedServiceRecord.Show()
                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ServiceLock();</Script>", False)
                    End If


                Else
                    If String.IsNullOrEmpty(lblid1.Text) = False Then
                        'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

                        Session.Add("servicerecordForupdateservicetable", lblid1.Text)
                        Session.Add("AmountForupdateservicetable", lblid3.Text)
                        Session.Add("AmountForupdateRowNo", rowindex1)
                        mdlUpdateServiceRecord.Show()

                    End If

                    'CalculatePrice()
                    'updpnlBillingDetails.Update()
                End If

                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            End If


            ''''''''''''''''''''''''''

            If lblid5.Text = "SERVICE" Then


                'lblid8.Text = 0.0
                lblid9.Text = 0.0
                lblid10.Text = 0.0
                

                Dim IsServiceRecord As Boolean
                IsServiceRecord = False

                Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsServiceRecord.Open()

                Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                commandIsServiceRecord.CommandType = CommandType.Text
                'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

                commandIsServiceRecord.Connection = connIsServiceRecord

                Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                Dim dtIsServiceRecord As New DataTable
                dtIsServiceRecord.Load(drIsServiceRecord)

                If dtIsServiceRecord.Rows.Count > 0 Then

                    'If Convert.ToDecimal(lblid6.Text) > Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) Then
                    '    lblid6.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    updpnlBillingDetails.Update()

                    '    lblAlert.Text = "TO BE BILLED AMOUNT IS " + dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                    '    updPnlMsg.Update()

                    '    commandIsServiceRecord.Dispose()
                    '    connIsServiceRecord.Close()
                    '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '    Exit Sub
                    'End If

                End If

                commandIsServiceRecord.Dispose()
                connIsServiceRecord.Close()
                connIsServiceRecord.Dispose()
                dtIsServiceRecord.Dispose()
            End If


            '''''''''''''''''''''''''''''''''

            CalculatePrice()
            updpnlBillingDetails.Update()

            'Dim btn1 As TextBox = DirectCast(sender, TextBox)
            'xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

            'Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceRecordGV"), TextBox)

            'If String.IsNullOrEmpty(lblid1.Text) = False Then
            '    Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

            '    Session.Add("servicerecordForupdateservicetable", lblid1.Text)
            '    Session.Add("AmountForupdateservicetable", lblid2.Text)

            '    mdlUpdateServiceRecord.Show()
            'End If

            'CalculatePrice()

            ''Session.Remove("servicerecordForupdateservicetable")
            ''Session.Remove("AmountForupdateservicetable")
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtPricePerUOMGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtDiscAmountGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub

    Protected Sub txtDiscPercGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub
    Private Sub CalculatePrice()
        Try
            Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGV"), TextBox)

            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGV"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGV"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid10 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)
            'Dim lblid11 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)

            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            Dim dblQty As String
            Dim dblPricePerUOM As String
            Dim dblTotalPrice As String

            Dim dblDiscPerc As String
            Dim dblDisAmount As String
            Dim dblPriceWithDisc As String

            Dim dblGSTPerc As String
            Dim dblGSTAmt As String
            Dim dblTotalPriceWithGST As String


            If String.IsNullOrEmpty(lblid1.Text) = True Then
                lblid1.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid2.Text) = True Then
                lblid2.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid3.Text) = True Then
                lblid3.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid4.Text) = True Then
                lblid4.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid5.Text) = True Then
                lblid5.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid6.Text) = True Then
                lblid6.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid7.Text) = True Then
                lblid7.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid8.Text) = True Then
                lblid8.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid9.Text) = True Then
                lblid9.Text = "0.00"
            End If

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            lblid10.Text = txtGST.Text
            lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            dblQty = (lblid1.Text)
            dblPricePerUOM = (lblid2.Text)
            dblTotalPrice = (lblid3.Text)

            dblDiscPerc = (lblid4.Text)
            dblDisAmount = (lblid5.Text)
            dblPriceWithDisc = (lblid6.Text)

            dblGSTPerc = (lblid7.Text)
            dblGSTAmt = (lblid8.Text)
            dblTotalPriceWithGST = (lblid9.Text)

            lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
            lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))

            lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
            lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

            CalculateTotalPrice()
            'AdjustGStAmount()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculatePrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub CalculateTotalPrice()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0

            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            txtInvoiceAmount.Text = "0.00"
            txtDiscountAmount.Text = "0.00"
            txtAmountWithDiscount.Text = "0.00"
            txtGSTAmount.Text = "0.00"
            txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                            TextBoxQty.Text = "1"
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                            TextBoxPricePerUOMGV.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                            TextBoxTotalPrice.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                            TextBoxDiscAmount.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                            TextBoxDiscPerc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                            TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        If TextBoxUOM.Items.Count = 1 Then
                            TextBoxUOM.Items.Add("UNIT")
                        Else
                            TextBoxUOM.Text = "UNIT"
                        End If

                        txtGST.Text = TextBoxTaxCode.Text
                        If txtGST.Text = "SR" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                            'txtGSTAmount.Text = "0.00"
                            'txtNetAmount.Text = txtAmountWithDiscount.Text
                        Else
                            'txtGST1.Text = "0.00"
                            txtGSTAmount.Text = "0.00"
                            txtNetAmount.Text = txtAmountWithDiscount.Text
                        End If

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                            TextBoxQtyGVB.Text = "1"
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                            TextBoxPricePerUOMGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                            TextBoxTotalPriceGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                            TextBoxDiscAmountGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                            TextBoxDiscPercGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                            TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        If TextBoxUOMGVB.SelectedIndex = 0 Then
                            TextBoxUOMGVB.Text = "UNIT"
                        End If

                        txtGST.Text = TextBoxTaxCodeGVB.Text
                        If txtGST.Text = "SR" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                            'txtGSTAmount.Text = "0.00"
                            'txtNetAmount.Text = txtAmountWithDiscount.Text
                        Else
                            'txtGST1.Text = "0.00"
                            txtGSTAmount.Text = "0.00"
                            txtNetAmount.Text = txtAmountWithDiscount.Text
                        End If

                        If TextBoxTaxCodeGVB.Text = "SR" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        totalrecords = totalrecords + 1
                    End If
                Next
            End If


            txtTotalWithDiscAmt.Text = txtAmountWithDiscount.Text
            txtTotalGSTAmt.Text = GSTGVB + GSTGV
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)

            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")

            ''''''''''''''''''''''''''
            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtGSTAmount.Text)
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ''''''''''''''''''''''''''''

            txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)
            lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'AdjustGStAmount()

            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            'updPanelInvoice.Update()
            updpnlBillingDetails.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AdjustGStAmount()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                        '    TextBoxQty.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                        '    TextBoxPricePerUOMGV.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                        '    TextBoxTotalPrice.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                        '    TextBoxDiscAmount.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                        '    TextBoxDiscPerc.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                        '    TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                        '    TextBoxGSTAmt.Text = "0.00"
                        'End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        'If TextBoxUOM.Items.Count = 1 Then
                        '    TextBoxUOM.Items.Add("NO")
                        'Else
                        '    TextBoxUOM.Text = "NO"
                        'End If

                        If TextBoxTaxCode.Text = "SR" Or TextBoxTaxCode.Text = "SR8" Or TextBoxTaxCode.Text = "DSP" Or TextBoxTaxCode.Text = "SR9" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        'GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        'Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        'Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        'Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        'Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        'Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        'Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                        '    TextBoxQtyGVB.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                        '    TextBoxPricePerUOMGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                        '    TextBoxTotalPriceGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                        '    TextBoxDiscAmountGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                        '    TextBoxDiscPercGVB.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                        '    TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        'End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        'If TextBoxUOMGVB.SelectedIndex = 0 Then
                        '    TextBoxUOMGVB.Text = "NO"
                        'End If

                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        If TextBoxTaxCodeGVB.Text = "SR" Or TextBoxTaxCodeGVB.Text = "SR8" Or TextBoxTaxCodeGVB.Text = "DSP" Or TextBoxTaxCodeGVB.Text = "SR9" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If



            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ''''''''''''''''''''''''''

            Dim GSTDiff As Decimal
            GSTDiff = 0.0

            Dim GSTCalc As Decimal
            GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            GSTCalc = GSTGVB + GSTGV
            GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            'GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            If GSTDiff <> 0.0 Then

                'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

                If lGSTadjustedRecNo > 0 Then
                    Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                    adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

                ElseIf lGSTadjustedRecNoNew > 0 Then
                    Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                    Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

                    adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                End If

                txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
                txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            End If

            ''''''''''''''''''''''''''''


            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub AdjustGStAmountGSTPerc()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTPercGV"), TextBox)

                        'If TextBoxTaxCode.Text = "SR" Then
                        If TextBoxTaxCode.Text = "SR" Or TextBoxTaxCode.Text = "SR8" Or TextBoxTaxCode.Text = "DSP" Or TextBoxTaxCode.Text = "SR9" Then
                            TextBoxGSTPerc.Text = txtGST1.Text
                            TextBoxGSTAmt.Text = Convert.ToDecimal(Convert.ToDecimal(TextBoxTotalPrice.Text) * Convert.ToDecimal(TextBoxGSTPerc.Text) * 0.01).ToString("N2")
                            TextBoxTotalPriceWithGST.Text = Convert.ToDecimal(Convert.ToDecimal(TextBoxTotalPrice.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")
                            'CalculatePrice()
                            'CalculateTotal()
                            'Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        End If

                        'If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                        '    TextBoxQty.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                        '    TextBoxPricePerUOMGV.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                        '    TextBoxTotalPrice.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                        '    TextBoxDiscAmount.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                        '    TextBoxDiscPerc.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                        '    TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                        '    TextBoxGSTAmt.Text = "0.00"
                        'End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        'If TextBoxUOM.Items.Count = 1 Then
                        '    TextBoxUOM.Items.Add("NO")
                        'Else
                        '    TextBoxUOM.Text = "NO"
                        'End If

                        'If TextBoxTaxCode.Text = "SR" Then
                        If TextBoxTaxCode.Text = "SR" Or TextBoxTaxCode.Text = "SR8" Or TextBoxTaxCode.Text = "DSP" Or TextBoxTaxCode.Text = "SR9" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        'GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        'Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        'Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        'Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        'Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        'Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)
                        Dim TextBoxGSTPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTPercGVB"), TextBox)

                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        If TextBoxTaxCodeGVB.Text = "SR" Or TextBoxTaxCodeGVB.Text = "SR8" Or TextBoxTaxCodeGVB.Text = "DSP" Or TextBoxTaxCodeGVB.Text = "SR9" Then
                            TextBoxGSTPercGVB.Text = txtGST1.Text
                            TextBoxGSTAmtGVB.Text = Convert.ToDecimal(Convert.ToDecimal(TextBoxTotalPriceGVB.Text) * Convert.ToDecimal(TextBoxGSTPercGVB.Text) * 0.01).ToString("N2")
                            TextBoxTotalPriceWithGSTGVB.Text = Convert.ToDecimal(Convert.ToDecimal(TextBoxTotalPriceGVB.Text) + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)).ToString("N2")
                            'CalculatePrice()
                            'CalculateTotal()
                            'Convert.ToDecimal(Convert.ToDecimal(txtCNAmount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        End If

                        'If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                        '    TextBoxQtyGVB.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                        '    TextBoxPricePerUOMGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                        '    TextBoxTotalPriceGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                        '    TextBoxDiscAmountGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                        '    TextBoxDiscPercGVB.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                        '    TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        'End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        'If TextBoxUOMGVB.SelectedIndex = 0 Then
                        '    TextBoxUOMGVB.Text = "NO"
                        'End If

                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        If TextBoxTaxCodeGVB.Text = "SR" Or TextBoxTaxCodeGVB.Text = "SR8" Or TextBoxTaxCodeGVB.Text = "DSP" Or TextBoxTaxCodeGVB.Text = "SR9" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If



            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ''''''''''''''''''''''''''

            Dim GSTDiff As Decimal
            GSTDiff = 0.0

            Dim GSTCalc As Decimal
            GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            GSTCalc = GSTGVB + GSTGV
            GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            'GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            If GSTDiff <> 0.0 Then

                'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

                If lGSTadjustedRecNo > 0 Then
                    Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                    adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

                ElseIf lGSTadjustedRecNoNew > 0 Then
                    Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                    Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

                    adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                End If

                txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
                txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            End If

            ''''''''''''''''''''''''''''


            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            updpnlBillingDetails.Update()
            updPnlBillingRecsNew.Update()
            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub MakeMeNullBillingDetails()

        txtInvoiceNo.Text = ""
        txtPostStatus.Text = ""
        'chkRecurringInvoice.Checked = False
        ''txtInvoiceDate.Text = ""
        'txtAccountIdBilling.Text = ""
        'txtAccountName.Text = ""
        'txtBillAddress.Text = ""
        'txtBillBuilding.Text = ""
        'txtBillCountry.Text = ""
        'txtBillStreet.Text = ""
        'txtBillPostal.Text = ""
        'txtOurReference.Text = ""
        'txtYourReference.Text = ""
        'txtPONo.Text = ""

        'txtCompanyGroup.Text = ""
        'txtAccountType.Text = ""
        'txtComments.Text = ""

        'ddlSalesmanBilling.SelectedIndex = 0
        'ddlCreditTerms.SelectedIndex = 0

        grvBillingDetails.ShowHeader = True

        'If chkRecurringInvoice.Checked = True Then
        '    'txtAccountIdSearch.Text = txtAccountIdBilling.Text
        'Else
        chkRecurringInvoice.Checked = False
        'txtInvoiceDate.Text = ""
        txtAccountIdBilling.Text = ""
        txtAccountName.Text = ""

        txtTIN.Text = ""
        txtSSTNo.text = ""

        txtBillAddress.Text = ""
        txtBillBuilding.Text = ""
        txtBillCountry.Text = ""
        txtBillStreet.Text = ""

        txtBillCity.Text = ""
        txtBillState.Text = ""

        txtBillPostal.Text = ""
        txtOurReference.Text = ""
        txtYourReference.Text = ""
        txtPONo.Text = ""
        txtContactPerson.Text = ""
        txtCompanyGroup.Text = ""
        txtAccountType.SelectedIndex = 0
        txtComments.Text = ""
        txtDescription.Text = ""
        ddlSalesmanBilling.SelectedIndex = 0
        ddlCreditTerms.SelectedIndex = 0
        chkGSTInclusive.Checked = False
        txtLocation.Text = ""
        'End If

        txtBatchNo.Text = ""

        txtInvoiceAmount.Text = "0.00"
        txtDiscountAmount.Text = "0.00"
        txtAmountWithDiscount.Text = "0.00"
        txtGSTAmount.Text = "0.00"
        txtNetAmount.Text = "0.00"

        txtTotal.Text = "0.00"
        txtTotalWithGST.Text = "0.00"
        txtTotalGSTAmt.Text = "0.00"
        txtTotalDiscAmt.Text = "0.00"
        txtTotalWithDiscAmt.Text = "0.00"
        txtCreditDays.Text = "0"
        rbtInvoiceType.SelectedIndex = 0
        txtDueDate.Text = ""
        ddlDocType.SelectedIndex = 0
        ddlContractGroupBilling.SelectedIndex = 0

        lbltotalservices.Text = "0"
        'ddlSalesmanBilling.Items.Clear()
        'ddlSalesmanBilling.Items.Add("--SELECT--")
        'ddlSalesmanBilling.DataSourceID = "SqlDSSalesMan"
        'ddlSalesmanBilling.DataTextField = "StaffID"
        'ddlSalesmanBilling.DataValueField = "StaffID"
        'ddlSalesmanBilling.DataBind()


        'ddlSalesmanEdit.Items.Clear()
        'ddlSalesmanEdit.Items.Add("--SELECT--")
        'ddlSalesmanEdit.DataSourceID = "SqlDSSalesMan"
        'ddlSalesmanEdit.DataTextField = "StaffID"
        'ddlSalesmanEdit.DataValueField = "StaffID"
        'ddlSalesmanEdit.DataBind()


        txtAccountIdBillingQR.Text = ""
        txtAccountNameQR.Text = ""
        txtReceiptNoQR.Text = ""
        txtReceiptDateQR.Text = ""
        txtReceivedAmountQR.Text = "0.00"
        ddlPaymentModeQR.SelectedIndex = 0
        ddlBankCodeQR.SelectedIndex = 0
        txtBankIDQR.Text = ""
        txtBankNameQR.Text = ""
        txtChequeNoQR.Text = ""
        txtChequeDateQR.Text = ""
        txtBankGLCodeQR.Text = ""
        txtLedgerNameQR.Text = ""
        txtSalesmanQR.Text = ""

        txtCommentsQR.Text = ""


        'If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) = "SINGAPORE" Then
        '    txtGST.Text = "SR"
        'Else
        '    txtGST.Text = "ZR"
        'End If

        txtGST.Text = txtDefaultTaxCode.Text
        FindDefaultGSTPct()
        'txtGST.Text = "SR"
        'txtGST1.Text = txtTaxRatePct.Text
        txtGST1.Text = txtDefaultTaxRate.Text

        lblMessageQR.Text = ""
        lblAlertQR.Text = ""
        updPnlMsgQR.Update()
        FirstGridViewRowBillingDetailsRecsQR()

        ddlCompanyGrpII.SelectedIndex = 0
        ddlContactType.SelectedIndex = 0

        txtAccountIdII.Text = ""
        txtClientNameII.Text = ""
        txtInvoiceSchedule.Text = ""

        'txtSearchValueBaseFrom.Text = "0"
        'txtSearchValueBaseTo.Text = "0"
        'txtSearchAppliedBaseFrom.Text = "0"
        'txtSearchAppliedBaseTo.Text = "0"
        'txtSearchBalanceBaseFrom.Text = "0"
        'txtSearchBalanceBaseTo.Text = "0"
        'txtover()

        'grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
        'grvInvoiceRecDetails.DataBind()

        'updpnlInvoiceRecs.Update()
        'UpdatePanel1.Update()
        FirstGridViewRowGL()

    End Sub

    Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)

        AddNewRowBillingDetailsRecs()

    End Sub

    Protected Sub btnAddDetailQR_Click(ByVal sender As Object, ByVal e As EventArgs)

        AddNewRowBillingDetailsRecsQR()

    End Sub



    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        'If txtMode.Text = "Add" Then

        lblAlert.Text = ""
        Try

            'Postal Code Validation


            If txtPostalValidate.Text.ToUpper = "TRUE" Then

                If String.IsNullOrEmpty(txtBillPostal.Text) Then
                    lblAlert.Text = "BILLING ADDRESS POSTAL CANNOT BE BLANK"
                    txtBillPostal.Focus()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If

            End If

            ''''''''''''''''''''''''''''''''''''''
            SetRowDataBillingDetailsRecs()

            Dim totalRows As Long
            totalRows = 0


            Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd1 IsNot Nothing Then


                For rowIndex30 As Integer = 0 To tableAdd1.Rows.Count - 1

                    Dim TextBoxItemTypeGV30 As DropDownList = CType(grvBillingDetails.Rows(rowIndex30).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lbd30 As String = TextBoxItemTypeGV30.Text

                    Dim TextBoxItemCodeGV31 As DropDownList = CType(grvBillingDetails.Rows(rowIndex30).FindControl("txtItemCodeGV"), DropDownList)
                    Dim lbd31 As String = TextBoxItemCodeGV31.Text


                    If TextBoxItemTypeGV30.SelectedIndex <> 0 Then
                        If String.IsNullOrEmpty(lbd31) = True Or TextBoxItemCodeGV31.SelectedIndex = 0 Then
                            lblAlert.Text = "PLEASE SELECT ITEM CODE FOR ITEM TYPE '" & lbd30 & "'"
                            updPnlMsg.Update()
                            Exit Sub
                        End If
                    End If
                Next rowIndex30
            End If


            '''''''''''''''''''''''''''''''''''''''

            Dim qry As String
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim rowselected As Integer = Convert.ToInt32(txtRowSelected.Text)

            Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtClientNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtLocationIdGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillingFrequencyGV"), TextBox)
            Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDeptGV"), TextBox)
            Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtStatusGV"), TextBox)
            Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtContractNoGV"), TextBox)
            Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)

            If txtMode.Text = "NEW" Then

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text

                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If

                'If Convert.ToInt64(txtBatchNo.Text) = 0 Then

                '''''''''''''''''''''
                Dim commandExistServiceBillingDetail As MySqlCommand = New MySqlCommand
                commandExistServiceBillingDetail.CommandType = CommandType.Text

                commandExistServiceBillingDetail.CommandText = "SELECT rcno FROM tblServiceBillingDetail where RcnoServiceRecord=" & Convert.ToInt64(lblid7.Text) & " and Batchno = '" & txtBatchNo.Text & "'"
                commandExistServiceBillingDetail.Connection = conn

                Dim drExistServiceBillingDetail As MySqlDataReader = commandExistServiceBillingDetail.ExecuteReader()
                Dim dtExistServiceBillingDetail As New DataTable
                dtExistServiceBillingDetail.Load(drExistServiceBillingDetail)

                If dtExistServiceBillingDetail.Rows.Count = 0 Then

                    '''''''''''''''''''''
                    qry = "INSERT INTO tblServiceBillingDetail( AccountId, CustName, LocationId, Name, RecordNo, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, "
                    qry = qry + " ServiceDate, BillAmount, DiscountAmount,  GSTAmount, TotalWithGST, NetAmount, OurRef,YourRef,ContractNo, PoNo, RcnoServiceRecord, BillingFrequency, Salesman, ContactType, CompanyGroup,   "
                    qry = qry + " ContractGroup, Status, Address1, BatchNo,   "
                    qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    qry = qry + " (@AccountId, @ClientName, @LocationId, @AccountName, @ServiceRecordNo, @BillAddress1, @BillBuilding, @BillStreet, @BillCountry, @BillPostal, "
                    qry = qry + " @ServiceDate, @BillAmount, @DiscountAmount,  @GSTAmount, @TotalWithGST, @NetAmount, @OurRef, @YourRef, @ContractNo, @PoNo, @RcnoServiceRecord, @BillingFrequency, @Salesman, @ContactType, @CompanyGroup,   "
                    qry = qry + " @ContractGroup, @Status,  @Address1, @BatchNo, "
                    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@AccountId", lblid1.Text)
                    command.Parameters.AddWithValue("@ClientName", lblid2.Text.ToUpper)
                    command.Parameters.AddWithValue("@LocationId", lblid3.Text)
                    command.Parameters.AddWithValue("@AccountName", txtAccountName.Text)
                    command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                    command.Parameters.AddWithValue("@Address1", lblid21.Text)
                    command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                    command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                    command.Parameters.AddWithValue("@BillingFrequency", lblid6.Text)

                    If lblid5.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@ServiceDate", lblid5.Text)
                    'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                    Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                    'Dim lbd30 As String = TextBoxGSTAmount.Text

                    'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(lblid23.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                    '    command.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    command.Parameters.AddWithValue("@TotalWithGST", 0.0)
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(lblid23.Text))
                    'Else
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    '    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    '    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    'End If

                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))

                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper)
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command.Parameters.AddWithValue("@ContractNo", lblid20.Text)
                    'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                    command.Parameters.AddWithValue("@RcnoServiceRecord", lblid7.Text)

                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                    command.Parameters.AddWithValue("@Status", lblid9.Text)
                    command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                    command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                    command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblServiceBillingDetail"

                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcnotblServiceBillingDetail.Text = commandRcno.ExecuteScalar()

                    If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                        txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text

                        '''''''''''''''''''''''''
                        qry = "Update tblServiceBillingDetail set BatchNo = '" & txtBatchNo.Text & "' where rcno = " & txtBatchNo.Text

                        command.CommandText = qry
                        command.Parameters.Clear()
                        command.Connection = conn
                        command.ExecuteNonQuery()

                        ''''''''''''''''''''''''
                    End If
                End If
            Else
                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If
                If Convert.ToInt64(txtRcnotblServiceBillingDetail.Text) > 0 Then
                    qry = "Update tblServiceBillingDetail set BillAmount = @BillAmount, DiscountAmount= @DiscountAmount,  GSTAmount =@GSTAmount,  "
                    qry = qry + "TotalWithGST = @TotalWithGST, NetAmount =@NetAmount, OurRef = @OurRef ,YourRef =@YourRef, PoNo =@PoNo, Salesman =@Salesman,    "
                    qry = qry + " LastModifiedBy =@LastModifiedBy,LastModifiedOn = @LastModifiedOn "
                    qry = qry + " where rcno =@rcno; "

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@rcno", txtRcnotblServiceBillingDetail.Text)
                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                End If
            End If


            '''' Detail

            'Dim rowselected As Integer
            'rowselected = 0

            'Dim conn As MySqlConnection = New MySqlConnection()


            'Start: Delete existing Records

            If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                txtRcnotblServiceBillingDetail.Text = "0"
            End If

            If txtRcnotblServiceBillingDetail.Text <> "0" Then '04.01.17

                Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

                commandtblServiceBillingDetailItem.CommandType = CommandType.Text
                'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
                Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where RcnoServiceBillingDetail = '" & Convert.ToInt32(txtRcnotblServiceBillingDetail.Text) & "'"

                commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
                commandtblServiceBillingDetailItem.Parameters.Clear()
                commandtblServiceBillingDetailItem.Connection = conn
                commandtblServiceBillingDetailItem.ExecuteNonQuery()

                'End: Delete Existing Records


                SetRowDataServiceRecs()
                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

                If tableAdd IsNot Nothing Then

                    For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                        Dim lbd10 As String = TextBoxQty.Text

                        Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCodeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxItemDescriptionGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOMGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                        If String.IsNullOrEmpty(lbd10) = False Then
                            If (Convert.ToInt64(lbd10) > 0) Then

                                ''Start:Detail
                                Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                                commandSalesDetail.CommandType = CommandType.Text
                                Dim qryDetail As String = "INSERT INTO tblServiceBillingDetailItem(RcnoServiceBillingDetail,Itemtype, ItemCode, Itemdescription, UOM, Qty,  "
                                qryDetail = qryDetail + " PricePerUOM, TotalPrice,DiscPerc, DiscAmount, PriceWithDisc, GSTPerc, GSTAmt, TotalPriceWithGST, TaxType, ARCode, GSTCode, OtherCode, GLDescription,  RcnoServiceRecord, BatchNo,  CompanyGroup, ContractNo, ServiceStatus, ContractGroup, ServiceRecordNo, ServiceDate, InvoiceType, BillSchedule,  "
                                qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                                qryDetail = qryDetail + "(@RcnoServiceBillingDetail, @Itemtype, @ItemCode, @Itemdescription, @UOM, @Qty,"
                                qryDetail = qryDetail + " @PricePerUOM, @TotalPrice, @DiscPerc, @DiscAmount, @PriceWithDisc, @GSTPerc, @GSTAmt, @TotalPriceWithGST, @TaxType, @ARCode, @GSTCode,  @OtherCode,@GLDescription, @RcnoServiceRecord, @BatchNo, @CompanyGroup, @ContractNo,  @ServiceStatus, @ContractGroup, @ServiceRecordNo, @ServiceDate, @InvoiceType, @BillSchedule,"
                                qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                                command.CommandText = qryDetail
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@RcnoServiceBillingDetail", Convert.ToInt64(txtRcnotblServiceBillingDetail.Text))
                                command.Parameters.AddWithValue("@Itemtype", TextBoxItemTypeGV.Text)
                                command.Parameters.AddWithValue("@ItemCode", TextBoxItemCodeGV.Text)
                                command.Parameters.AddWithValue("@Itemdescription", TextBoxItemDescriptionGV.Text)

                                If TextBoxUOMGV.Text <> "-1" Then
                                    command.Parameters.AddWithValue("@UOM", TextBoxUOMGV.Text)

                                Else
                                    command.Parameters.AddWithValue("@UOM", "")
                                End If

                                command.Parameters.AddWithValue("@Qty", TextBoxQty.Text)
                                command.Parameters.AddWithValue("@PricePerUOM", TextBoxPricePerUOMGV.Text)
                                'command.Parameters.AddWithValue("@BillAmount", 0.0)
                                command.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(TextBoxTotalPrice.Text))
                                command.Parameters.AddWithValue("@DiscPerc", Convert.ToDecimal(TextBoxDiscPerc.Text))
                                command.Parameters.AddWithValue("@DiscAmount", Convert.ToDecimal(TextBoxDiscAmount.Text))
                                command.Parameters.AddWithValue("@PriceWithDisc", Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text))
                                command.Parameters.AddWithValue("@GSTPerc", Convert.ToDecimal(TextBoxGSTPerc.Text))
                                command.Parameters.AddWithValue("@GSTAmt", Convert.ToDecimal(TextBoxGSTAmt.Text))
                                command.Parameters.AddWithValue("@TotalPriceWithGST", Convert.ToDecimal(TextBoxTotalPriceWithGST.Text))
                                command.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text)
                                command.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(lblid7.Text))
                                command.Parameters.AddWithValue("@ARCode", "")
                                command.Parameters.AddWithValue("@GSTCode", "")
                                command.Parameters.AddWithValue("@OtherCode", TextBoxOtherCode.Text)
                                command.Parameters.AddWithValue("@GLDescription", TextBoxGLDescription.Text)
                                command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                                'command.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text)
                                command.Parameters.AddWithValue("@ServiceStatus", TextBoxServiceStatus.Text)
                                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                                command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                                command.Parameters.AddWithValue("@BillSchedule", txtInvoiceSchedule.Text)

                                command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                                command.Parameters.AddWithValue("@InvoiceType", TextBoxItemTypeGV.Text)
                                If lblid5.Text.Trim = "" Then
                                    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                                Else
                                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                                End If
                                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Connection = conn
                                command.ExecuteNonQuery()
                                'conn.Close()
                            End If

                        End If
                    Next rowIndex
                End If

                Dim lblid10 As CheckBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("chkSelectGV"), CheckBox)
                Dim lblid11 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                Dim lblid12 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDiscAmountGV"), TextBox)
                Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtNetAmountGV"), TextBox)
                Dim lblid15 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServicebillingdetailGV"), TextBox)


                Dim lblidAccountName50 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountNameGV"), TextBox)
                Dim lblidBillAddress151 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillAddress1GV"), TextBox)
                Dim lblidBillBuilding52 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillBuildingGV"), TextBox)
                Dim lblidBillStreet53 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillStreetGV"), TextBox)
                Dim lblidBillCountry54 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillCountryGV"), TextBox)
                Dim lblidBillPostal55 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillPostalGV"), TextBox)
                Dim lblidOurReference56 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtOurReferenceGV"), TextBox)
                Dim lblidYourReference57 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtYourReferenceGV"), TextBox)
                Dim lblidPoNo58 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtPoNoGV"), TextBox)
                Dim lblidCreditTerms59 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtCreditTermsGV"), TextBox)
                Dim lblidSalesman60 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtSalesmanGV"), TextBox)


                lblid10.Checked = True
                lblid11.Text = Convert.ToDecimal(txtTotal.Text).ToString("N2")
                lblid12.Text = Convert.ToDecimal(txtTotalDiscAmt.Text).ToString("N2")
                lblid13.Text = Convert.ToDecimal(txtTotalGSTAmt.Text).ToString("N2")
                lblid14.Text = Convert.ToDecimal(txtTotalWithGST.Text).ToString("N2")
                lblid15.Text = Convert.ToInt64(txtRcnotblServiceBillingDetail.Text)

                '08.03.17
                lblidAccountName50.Text = (txtAccountName.Text).ToString
                lblidBillAddress151.Text = (txtBillAddress.Text).ToString
                lblidBillBuilding52.Text = (txtBillBuilding.Text).ToString
                lblidBillStreet53.Text = (txtBillStreet.Text).ToString
                lblidBillCountry54.Text = (txtBillCountry.Text).ToString
                lblidBillPostal55.Text = (txtBillPostal.Text).ToString
                lblidOurReference56.Text = (txtOurReference.Text).ToString
                lblidYourReference57.Text = (txtYourReference.Text).ToString
                lblidPoNo58.Text = (txtPONo.Text).ToString
                lblidCreditTerms59.Text = (ddlCreditTerms.Text).ToString
                lblidSalesman60.Text = (ddlSalesmanBilling.Text).ToString
                '08.03.17

                'FirstGridViewRowBillingDetailsRecs()

                ''Start: Update Invoice Amounts

                'Dim TotalInvoiceAmount As Decimal = 0
                'Dim TotalDiscountAmount As Decimal = 0
                'Dim TotalGSTAmount As Decimal = 0
                'Dim TotalNetAmount As Decimal = 0

                'Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

                'If (table.Rows.Count > 0) Then

                '    For i As Integer = 0 To (table.Rows.Count) - 1

                '        Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)

                '        If (TextBoxchkSelect.Checked = True) Then

                '            Dim TextBoxInvoiceAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                '            Dim TextBoxDiscountAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtDiscAmountGV"), TextBox)
                '            Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtGSTAmountGV"), TextBox)
                '            Dim TextBoxNetAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtNetAmountGV"), TextBox)

                '            If String.IsNullOrEmpty(TextBoxInvoiceAmount.Text) = True Then
                '                TextBoxInvoiceAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxDiscountAmount.Text) = True Then
                '                TextBoxDiscountAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                '                TextBoxGSTAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxNetAmount.Text) = True Then
                '                TextBoxNetAmount.Text = "0.00"
                '            End If

                '            TotalInvoiceAmount = TotalInvoiceAmount + Convert.ToDecimal(TextBoxInvoiceAmount.Text)
                '            TotalDiscountAmount = TotalDiscountAmount + Convert.ToDecimal(TextBoxDiscountAmount.Text)

                '            TotalGSTAmount = TotalGSTAmount + Convert.ToDecimal(TextBoxGSTAmount.Text)
                '            TotalNetAmount = TotalNetAmount + Convert.ToDecimal(TextBoxNetAmount.Text)
                '        End If
                '    Next i

                'End If

                'txtInvoiceAmount.Text = TotalInvoiceAmount.ToString("N2")
                'txtDiscountAmount.Text = TotalDiscountAmount.ToString("N2")
                'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                'txtGSTAmount.Text = TotalGSTAmount.ToString("N2")
                'txtNetAmount.Text = TotalNetAmount.ToString("N2")

                ''txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

                '

                ''End: Update Invoice Amounts


            End If '04.01.17

            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If

            If txtMode.Text = "NEW" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtInvoiceNo.Text, "", txtRcno.Text)
            Else
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtContractNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtInvoiceNo.Text, "", txtRcno.Text)
            End If

            'conn.Close()

            'DisplayGLGrid()

            'btnSaveInvoice_Click(sender, e)


            'If txtMode.Text = "NEW" Then
            '    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'Else
            '    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
            'End If


            'DisableControls()
            FirstGridViewRowBillingDetailsRecs()
            lblAlert.Text = ""
            'txtMode.Text = "View"

            btnSave.Enabled = False
            btnSaveInvoice.Enabled = True
            btnPost.Enabled = True


            updPnlMsg.Update()
            updpnlServiceRecs.Update()

            command.Dispose()

            txtTotal.Text = "0.00"
            txtTotalWithGST.Text = "0.00"
            txtTotalGSTAmt.Text = "0.00"
            txtTotalDiscAmt.Text = "0.00"
            txtTotalWithDiscAmt.Text = "0.00"
            Label41.Text = "INVOICE DETAILS"


            txtRcnotblServiceBillingDetail.Text = "0"
            'txtMode.Text = "EDIT"

            'cpnlInvoiceDetails.Collapsed = True
            'cpnlInvoiceDetails.ClientState = True
            Label41.Text = "INVOICE DETAILS"

            'cpnlInvoiceDetails.Enabled = False
            'cpnlInvoiceDetails.ClientState = False
            updPanelInvoice.Update()

            AccessControl()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnSave_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub DisplayGLGrid()
        Try

            ''''''''''''''''' Start: Display GL Grid

            FirstGridViewRowGL()



            'Start: GL Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvGL.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableGL") = dtScdrLoc
                grvGL.DataSource = dtScdrLoc
                grvGL.DataBind()


                SetPreviousDataGL()
            Next i

            FirstGridViewRowGL()

            Dim rowIndex3 = 0

            ''AR Values

            AddNewRowGL()


            ''AR values

            Dim TextBoxGLCodeAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeAR.Text = txtARCode.Text

            Dim TextBoxGLDescriptionAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionAR.Text = txtARDescription.Text

            Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmountAR.Text = Convert.ToDecimal(txtNetAmount.Text).ToString("N2")

            Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmountAR.Text = (0.0).ToString("N2")


            ''GST values

            rowIndex3 += 1
            AddNewRowGL()
            Dim TextBoxGLCodeGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeGST.Text = txtGSTOutputCode.Text

            Dim TextBoxGLDescriptionGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionGST.Text = txtGSTOutputDescription.Text

            Dim TextBoxDebitAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmountGST.Text = (0.0).ToString("N2")

            Dim TextBoxCreditAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmountGST.Text = Convert.ToDecimal(txtGSTAmount.Text).ToString("N2")
            ''GST Values



            rowIndex3 += 1
            AddNewRowGL()
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim cmdGL As MySqlCommand = New MySqlCommand
            cmdGL.CommandType = CommandType.Text
            'cmdGL.CommandText = "SELECT OtherCode, GLDescription, PriceWithDisc   FROM tblsalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "' and InvoiceNo ='" & txtInvoiceNo.Text & "' order by OtherCode"
            cmdGL.CommandText = "SELECT LedgerCode, LedgerName, ValueBase   FROM tblsalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "' order by LedgerCode"

            'cmdGL.CommandText = "SELECT * FROM tblAR where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            cmdGL.Connection = conn

            Dim drcmdGL As MySqlDataReader = cmdGL.ExecuteReader()
            Dim dtGL As New DataTable
            dtGL.Load(drcmdGL)

            'FirstGridViewRowGL()


            Dim TotDetailRecordsLoc = dtGL.Rows.Count
            If dtGL.Rows.Count > 0 Then

                lGLCode = ""
                lGLDescription = ""
                lCreditAmount = 0.0


                lGLCode = dtGL.Rows(0)("LedgerCode").ToString()
                lGLDescription = dtGL.Rows(0)("LedgerName").ToString()
                lCreditAmount = 0.0

                Dim rowIndex4 = 0

                For Each row As DataRow In dtGL.Rows

                    If lGLCode = row("LedgerCode") Then
                        lCreditAmount = lCreditAmount + row("ValueBase")
                    Else


                        If (TotDetailRecordsLoc > (rowIndex4 + 1)) Then
                            AddNewRowGL()
                        End If

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        TextBoxGLCode.Text = lGLCode

                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                        TextBoxGLDescription.Text = lGLDescription

                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                        TextBoxDebitAmount.Text = (0.0).ToString("N2")

                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                        TextBoxCreditAmount.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

                        lGLCode = row("LedgerCode")
                        lGLDescription = row("LedgerName")
                        lCreditAmount = row("ValueBase")

                        rowIndex3 += 1
                        rowIndex4 += 1
                    End If
                Next row

            End If


            'AddNewRowGL()

            Dim TextBoxGLCode1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCode1.Text = lGLCode

            Dim TextBoxGLDescription1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescription1.Text = lGLDescription

            Dim TextBoxDebitAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmount1.Text = (0.0).ToString("N2")

            Dim TextBoxCreditAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmount1.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

            SetRowDataGL()
            Dim dtScdrLoc1 As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc1 As DataRow = Nothing

            dtScdrLoc1.Rows.Remove(dtScdrLoc1.Rows(rowIndex3 + 1))
            drCurrentRowLoc1 = dtScdrLoc1.NewRow()
            ViewState("CurrentTableGL") = dtScdrLoc1
            grvGL.DataSource = dtScdrLoc1
            grvGL.DataBind()
            SetPreviousDataGL()
            conn.Close()
            conn.Dispose()
            cmdGL.Dispose()
            dtGL.Dispose()
            dtScdrLoc.Dispose()
            dtScdrLoc1.Dispose()
            drcmdGL.Close()

            ''''''''''''''''' End: Display GL Grid
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION DisplayGrid", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub PopulateGLCodes()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim sql As String
            sql = ""

            Dim command21 As MySqlCommand = New MySqlCommand

            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            command21.CommandType = CommandType.Text
            command21.CommandText = sql
            command21.Connection = conn

            Dim dr21 As MySqlDataReader = command21.ExecuteReader()

            Dim dt21 As New DataTable
            dt21.Load(dr21)

            If dt21.Rows.Count > 0 Then
                If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
            End If

            '''''''''''''''''''''''''''''''''''
            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If



            conn.Close()
            conn.Dispose()

            command21.Dispose()
            command23.Dispose()
            dt21.Dispose()
            dt23.Dispose()
            dr21.Close()
            dr23.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PopulateGLCodes", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub InsertIntoTblSales()

        Dim rowselected As Integer
        rowselected = 0

        Dim ToBillAmt As Decimal
        Dim DiscAmount As Decimal
        Dim GSTAmount As Decimal
        Dim NetAmount As Decimal
        'Dim ToBillAmt As Decimal

        ToBillAmt = 0.0
        DiscAmount = 0.0
        GSTAmount = 0.0
        NetAmount = 0.0

        Try

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            'Dim dbtran As MySqlTransaction = New MySqlTransaction
            'dbtran = conn.BeginTransaction

            '''''''''tblSales

            If txtMode.Text = "NEW" Then

                qry = "INSERT INTO tblSales(DocType, InvoiceNumber, CustAttention, CustName, AccountId, BillAddress1, BillBuilding, BillStreet, BillCity, BillState, BillPostal, BillCountry,  "
                qry = qry + "  ServiceRecordNo, SalesDate, OurRef,YourRef, PoNo, RcnoServiceRecord,   Salesman,  Terms, TermsDay, "
                qry = qry + "  ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, "
                qry = qry + "  DiscountAmount, GSTAmount, NetAmount, Comments, ContactType, CompanyGroup, GLPeriod, AmountWithDiscount, BatchNo, RecurringInvoice, InvoiceType,  "
                qry = qry + "  StaffCode, CustAddress1, custAddBuilding, CustAddStreet, CustAddCity, CustAddState, CustAddCountry, CustAddPostal, DueDate, ContractGroup, LedgerCode, LedgerName, GST, GSTRate, Description, Location, GStInclusive, "
                qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn,TaxIdentificationNo,SalesTaxRegistrationNo,EI) VALUES "
                qry = qry + "(@DocType, @InvoiceNumber, @CustAttention, @ClientName, @AccountId, @BillAddress1, @BillBuilding, @BillStreet, @BillCity, @BillState, @BillPostal, @BillCountry,"
                qry = qry + " @ServiceRecordNo, @SalesDate, @ourRef, @YourRef,  @PoNo, @RcnoServiceRecord,  @Salesman,  @Terms, @TermsDay, "
                qry = qry + " @ValueBase, @ValueOriginal, @GSTBase, @GSTOriginal, @AppliedBase, @AppliedOriginal, @BalanceBase, @BalanceOriginal, "
                qry = qry + " @DiscountAmount, @GSTAmount, @NetAmount, @Comments, @ContactType, @CompanyGroup, @GLPeriod, @AmountWithDiscount, @BatchNo, @RecurringInvoice, @InvoiceType, "
                qry = qry + " @StaffCode, @CustAddress1, @custAddBuilding, @CustAddStreet, @CustAddCity, @CustAddState, @CustAddCountry,@CustAddPostal, @DueDate, @ContractGroup, @LedgerCode, @LedgerName, @GST, @GSTRate, @Description, @Location, @GStInclusive, "
                qry = qry + "@CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn,@TaxIdentificationNo,@SalesTaxRegistrationNo,@EI);"

                command.CommandText = qry

                command.Parameters.Clear()

                command.Parameters.AddWithValue("@DocType", "ARIN")
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text.Trim)
                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.Trim)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text.Trim)
                If txtInvoiceDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text.Trim)
                'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                command.Parameters.AddWithValue("@RcnoServiceRecord", 0)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text.Trim)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.Trim)
                command.Parameters.AddWithValue("@GLPeriod", txtBillingPeriod.Text)
                command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text.Trim)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text.Trim)
                End If

                If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text.Trim)
                Else
                    command.Parameters.AddWithValue("@TermsDay", 0)
                End If
                If chkRecurringInvoice.Checked = True Then
                    command.Parameters.AddWithValue("@RecurringInvoice", "Y")
                Else
                    command.Parameters.AddWithValue("@RecurringInvoice", "N")
                End If

                If rbtInvoiceType.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@InvoiceType", "M")
                Else
                    command.Parameters.AddWithValue("@InvoiceType", "S")
                End If

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text.Trim)
                End If

                If txtDueDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@DueDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtDueDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text.Trim)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text.Trim)

                command.Parameters.AddWithValue("@LedgerCode", txtARCode.Text.Trim)
                command.Parameters.AddWithValue("@LedgerName", txtARDescription.Text.Trim)

                'command.Parameters.AddWithValue("@GST", "SR")
                command.Parameters.AddWithValue("@GST", txtGST.Text)
                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@Description", txtDescription.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@Location", txtLocation.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@GSTInclusive", chkGSTInclusive.Checked)

                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Parameters.AddWithValue("@TaxIdentificationNo", txtTIN.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@SalesTaxRegistrationNo", txtSSTNo.Text.ToUpper.Trim)

                If String.IsNullOrEmpty(txtTIN.Text) Or txtTIN.Text = "NA" Or txtTIN.Text = "N/A" Then
                    command.Parameters.AddWithValue("@EI", "N")
                Else
                    command.Parameters.AddWithValue("@EI", "Y")
                End If

                If chkManualInvoice.Checked = False Then
                    GenerateInvoiceNo()
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
                    lblAlert.Text = "INVOICE NUMBER CANNOT BE BLANK"
                    updPnlMsg.Update()
                    Exit Sub
                End If
                command.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)

                command.Connection = conn
                command.ExecuteNonQuery()

                Dim sqlLastId As String
                sqlLastId = "SELECT last_insert_id() from tblSales"

                Dim commandRcno As MySqlCommand = New MySqlCommand
                commandRcno.CommandType = CommandType.Text
                commandRcno.CommandText = sqlLastId
                commandRcno.Parameters.Clear()
                commandRcno.Connection = conn
                txtRcno.Text = commandRcno.ExecuteScalar()
                updPanelInvoice.Update()
            Else

                qry = "Update tblSales set InvoiceNumber = @InvoiceNumber, CustAttention = @CustAttention, CustName =@ClientName, AccountId =@AccountId, BillAddress1 =@BillAddress1, BillBuilding =@BillBuilding,   "
                qry = qry + " BillStreet = @BillStreet, BillCity=@BillCity, BillState=@BillState,  BillPostal= @BillPostal, BillCountry= @BillCountry, ServiceRecordNo = @ServiceRecordNo,  SalesDate =@SalesDate,   "
                qry = qry + " OurRef = @ourRef, YourRef =@YourRef, PoNo = @PoNo,   Salesman = @Salesman,  Terms =@Terms, TermsDay =@TermsDay, "
                qry = qry + " ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, Comments = @Comments, ContactType = @ContactType, CompanyGroup = @CompanyGroup,  GLPeriod = @GLPeriod, AmountWithDiscount = @AmountWithDiscount, RecurringInvoice = @RecurringInvoice, "
                qry = qry + " StaffCode = @StaffCode, CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding, CustAddCity=@CustAddCity, CustAddState=@CustAddState, CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal,  DueDate =@DueDate,  ContractGroup =@ContractGroup, LedgerCode=@LedgerCode, LedgerName =@LedgerName,  Description =@Description, gst=@GST, GSTRate=@GSTRate,  "
                qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn,TaxIdentificationNo=@TaxIdentificationNo,SalesTaxRegistrationNo=@SalesTaxRegistrationNo,EI=@EI "
                qry = qry + " where Rcno = @Rcno;"

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))
                command.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text.Trim)

                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.Trim)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text.Trim)

                If txtInvoiceDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text.Trim)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.Trim)
                command.Parameters.AddWithValue("@GLPeriod", txtBillingPeriod.Text)

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text.Trim)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text.Trim)
                End If

                If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text.Trim)
                Else
                    command.Parameters.AddWithValue("@TermsDay", 0)
                End If

                If chkRecurringInvoice.Checked = True Then
                    command.Parameters.AddWithValue("@RecurringInvoice", "Y")
                Else
                    command.Parameters.AddWithValue("@RecurringInvoice", "N")
                End If

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text.Trim)
                End If

                If txtDueDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@DueDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtDueDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper.Trim)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text.Trim)
                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text.Trim)

                command.Parameters.AddWithValue("@LedgerCode", txtARCode.Text.Trim)
                command.Parameters.AddWithValue("@LedgerName", txtARDescription.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@Description", txtDescription.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@GST", txtGST.Text)
                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Parameters.AddWithValue("@TaxIdentificationNo", txtTIN.Text.ToUpper.Trim)
                command.Parameters.AddWithValue("@SalesTaxRegistrationNo", txtSSTNo.Text.ToUpper.Trim)
                If String.IsNullOrEmpty(txtTIN.Text) Or txtTIN.Text = "NA" Or txtTIN.Text = "N/A" Then
                    command.Parameters.AddWithValue("@EI", "N")
                Else
                    command.Parameters.AddWithValue("@EI", "Y")
                End If

                command.Connection = conn
                command.ExecuteNonQuery()
            End If


            ''''''''tblSales

            'Dim commandtblSalesDetail As MySqlCommand = New MySqlCommand

            'commandtblSalesDetail.CommandType = CommandType.Text
            ''Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
            'Dim qrycommandtblSalesDetail As String = "DELETE from tblSalesdetail where invoiceNumber = '" & txtInvoiceNo.Text & "'"

            'commandtblSalesDetail.CommandText = qrycommandtblSalesDetail
            'commandtblSalesDetail.Parameters.Clear()
            'commandtblSalesDetail.Connection = conn
            'commandtblSalesDetail.ExecuteNonQuery()



            ' GVB----------------------------

            Dim gvbRecords, i As Long
            gvbRecords = grvBillingDetailsNew.Rows.Count()

            For i = 0 To gvbRecords - 1


                Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemTypeGVB"), TextBox)
                Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtOtherCodeGVB"), TextBox)
                Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoInvoiceGVB"), TextBox)

                If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                    Dim lblidItemCodeGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemCodeGVB"), DropDownList)
                    Dim lblidServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceRecordGVB"), TextBox)
                    Dim lblItemDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemDescriptionGVB"), TextBox)
                    Dim lblDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDescriptionGVB"), TextBox)
                    Dim lblGLDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGLDescriptionGVB"), TextBox)
                    Dim lblClassificationCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtClassificationCodeGVB"), TextBox)

                    Dim lblClassificationDescGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtClassificationDescGVB"), TextBox)
                    Dim lblUOMDescGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtUOMDescGVB"), TextBox)
                    Dim lblTaxTypeDescGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTaxTypeDescGVB"), TextBox)


                    'Dim lblid6 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGV"), TextBox)
                    Dim lblidRcnoServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoServiceRecordGVB"), TextBox)

                    If String.IsNullOrEmpty(lblidRcnoServiceRecordGVB.Text) = True Then
                        lblidRcnoServiceRecordGVB.Text = 0
                    End If

                    'Dim lblid8 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDeptGV"), TextBox)
                    Dim lblidServiceStatusGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGVB"), TextBox)

                    Dim lblidContractNoGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtContractNoGVB"), TextBox)
                    'Dim lblid12 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceAddressGV"), TextBox)
                    'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                    Dim lblidUnitMsGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtUOMGVB"), DropDownList)
                    Dim lblidQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtQtyGVB"), TextBox)
                    Dim lblidPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPricePerUOMGVB"), TextBox)
                    Dim lblidTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceGVB"), TextBox)
                    Dim lblidDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscPercGVB"), TextBox)
                    Dim lblidDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscAmountGVB"), TextBox)
                    Dim lblidPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPriceWithDiscGVB"), TextBox)

                    Dim lblidGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTaxTypeGVB"), TextBox)
                    Dim lblidGSTRate As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTPercGVB"), TextBox)
                    Dim lblidGSTBaseGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGVB"), TextBox)
                    'Dim lblidGSTAmt As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGV"), TextBox)
                    Dim lblidNetAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceWithGSTGVB"), TextBox)

                    'Dim lblidServiceStatus As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGV"), TextBox)
                    Dim lblidLocationIdGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtLocationIdGVB"), TextBox)
                    Dim lblidServiceLocationGroupGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceLocationGroupGVB"), TextBox)


                    Dim lblidBillingFrequencyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGVB"), TextBox)
                    Dim lblidServiceByGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceByGVB"), TextBox)
                    Dim lblidServiceDateGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceDateGVB"), TextBox)


                    Dim lContractGroup As String
                    lContractGroup = ""

                    If String.IsNullOrEmpty(lblidContractNoGVB.Text) = False Then
                        Dim commandCG As MySqlCommand = New MySqlCommand
                        commandCG.CommandType = CommandType.Text

                        commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNoGVB.Text & "'"
                        commandCG.Connection = conn

                        Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                        Dim dtCG As New DataTable
                        dtCG.Load(drCG)


                        lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                        commandCG.Dispose()
                        dtCG.Dispose()
                    End If

                    Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                    commandSalesDetail.CommandType = CommandType.Text

                    'Dim qryDetail As String = "INSERT INTO tblSalesDetail(InvoiceNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                    'qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                    'qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                    'qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, InvoiceTYpe, ItemDescription, ContractGroup,  "
                    'qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, "
                    'qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"


                    Dim qryDetail As String = "UPDATE tblSalesDetail SET InvoiceNumber=@InvoiceNumber, Sequence=@Sequence, SubCode=@SubCode, LedgerCode=@LedgerCode, LedgerName=@LedgerName, SubLedgerCode=@SubLedgerCode, SONUMBER=SONUMBER, RefType=@RefType, Gst=@Gst, "
                    qryDetail = qryDetail + " GstRate=@GstRate, ExchangeRate=@ExchangeRate, Currency=@Currency, Quantity=@Quantity, UnitMs=@UnitMs, UnitOriginal=@UnitOriginal, UnitBase=@UnitBase,  DiscP=@DiscP, TaxBase=@TaxBase, GstOriginal=GstOriginal,"
                    qryDetail = qryDetail + " GstBase=@GstBase, ValueOriginal=@ValueOriginal, ValueBase=@ValueBase, AppliedOriginal=@AppliedOriginal, AppliedBase=@AppliedBase, Description=@Description, Comments=@Comments, GroupId=GroupId, "
                    qryDetail = qryDetail + " DetailID=@DetailID, GrpDetName=@GrpDetName, SoCode=@SoCode, ItemCode=@ItemCode, AvgCost=AvgCost, CostValue=@CostValue, COSTCODE=@COSTCODE, ServiceStatus=@ServiceStatus, DiscAmount=@DiscAmount, TotalPrice=@TotalPrice,  "
                    qryDetail = qryDetail + " LocationId=@LocationId, ServiceLocationGroup=@ServiceLocationGroup, RcnoServiceRecord=@RcnoServiceRecord, ServiceBy=@ServiceBy, ServiceDate=@ServiceDate, BillingFrequency=@BillingFrequency, InvoiceTYpe=@InvoiceTYpe, ItemDescription=@ItemDescription, ContractGroup=@ContractGroup, Location=@Location,  "

                    qryDetail = qryDetail + " ItemClassificationCode =@ClassificationCode, ItemClassificationDesc =@ItemClassificationDesc, UOMDesc =@UOMDesc, TaxTypeDesc =@TaxTypeDesc,"

                    qryDetail = qryDetail + " LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn "
                    qryDetail = qryDetail + " where Rcno = " & lblid14.Text
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, "
                    'qryDetail = qryDetail + "  @LastModifiedBy, @LastModifiedOn "



                    commandSalesDetail.CommandText = qryDetail
                    commandSalesDetail.Parameters.Clear()

                    commandSalesDetail.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
                    commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)
                    commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCodeGVB.Text)
                    'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescriptionGVB.Text.ToUpper)

                    commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                    commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                    'If (lblidServiceRecordGVB.SelectedIndex) = 0 Then
                    '    'If String.IsNullOrEmpty(lblidServiceRecord.Text) = "--SELECT--" Then
                    '    commandSalesDetail.Parameters.AddWithValue("@RefType", "")
                    'Else
                    commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecordGVB.Text)
                    'End If

                    commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGSTGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@GstRate", lblidGSTRate.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                    commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                    commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQtyGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMsGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@DiscP", Convert.ToDecimal(lblidDiscPercGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidPriceWithDiscGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidPriceWithDiscGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPriceGVB.Text))

                    commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescriptionGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCodeGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Description", lblDescriptionGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                    commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                    commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                    commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")

                    commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNoGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatusGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@DiscAmount", lblidDiscAmountGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDiscGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationIdGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroupGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecordGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceByGVB.Text)

                    If String.IsNullOrEmpty(lblidServiceDateGVB.Text.Trim) = True Then
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDateGVB.Text).ToString("yyyy-MM-dd"))
                    End If

                    'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                    commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequencyGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@InvoiceType", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                    commandSalesDetail.Parameters.AddWithValue("@Location", txtLocation.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ClassificationCode", lblClassificationCodeGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@ItemClassificationDesc", lblClassificationDescGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@UOMDesc", lblUOMDescGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@TaxTypeDesc", lblTaxTypeDescGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    commandSalesDetail.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    commandSalesDetail.Connection = conn
                    commandSalesDetail.ExecuteNonQuery()

                    commandSalesDetail.Dispose()
                End If


            Next

            'Exit Sub

            'GVB -----------------------------

            ''''''''''''''''''
            SetRowDataBillingDetailsRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                            Dim lblidItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                            Dim lblidServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceRecordGV"), TextBox)
                            Dim lblItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                            Dim lblDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDescriptionGV"), TextBox)
                            Dim lblGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)

                            Dim lblClassificationCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtClassificationCodeGV"), TextBox)

                            Dim lblClassificationDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtClassificationDescGV"), TextBox)
                            Dim lblUOMDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMDescGV"), TextBox)
                            Dim lblTaxTypeDesc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeDescGV"), TextBox)

                            'Dim lblid6 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                            Dim lblidRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtRcnoServiceRecordGV"), TextBox)

                            If String.IsNullOrEmpty(lblidRcnoServiceRecord.Text) = True Then
                                lblidRcnoServiceRecord.Text = 0
                            End If

                            'Dim lblid8 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDeptGV"), TextBox)
                            Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                            Dim lblidContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                            'Dim lblid12 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceAddressGV"), TextBox)
                            'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                            Dim lblidUnitMs As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                            Dim lblidQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtQtyGV"), TextBox)
                            Dim lblidPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                            Dim lblidTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                            Dim lblidDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                            Dim lblidDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            Dim lblidPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)

                            Dim lblidGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                            Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                            Dim lblidGSTBase As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            'Dim lblidGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                            'Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)
                            Dim lblidLocationId As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtLocationIdGV"), TextBox)
                            Dim lblidServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceLocationGroupGV"), TextBox)


                            Dim lblidBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                            Dim lblidServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceByGV"), TextBox)
                            Dim lblidServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceDateGV"), TextBox)

                            Dim lContractGroup As String
                            lContractGroup = ""

                            If String.IsNullOrEmpty(lblidContractNo.Text) = False Then
                                Dim commandCG As MySqlCommand = New MySqlCommand
                                commandCG.CommandType = CommandType.Text

                                commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNo.Text & "'"
                                commandCG.Connection = conn

                                Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                                Dim dtCG As New DataTable
                                dtCG.Load(drCG)


                                'lContractGroup = dtCG.Rows(0)("ContractGroup").ToString

                                If dtCG.Rows.Count > 0 Then
                                    lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                                Else
                                    lContractGroup = ""
                                End If

                                commandCG.Dispose()
                                dtCG.Dispose()
                            End If

                            Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                            commandSalesDetail.CommandType = CommandType.Text

                            Dim qryDetail As String = "INSERT INTO tblSalesDetail(InvoiceNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                            qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                            qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                            qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, InvoiceTYpe, ItemDescription, ContractGroup, Location,   "
                            qryDetail = qryDetail + " ItemClassificationCode, ItemClassificationDesc , UOMDesc , TaxTypeDesc,"


                            qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                            qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                            qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                            qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                            qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, @Location, "
                            qryDetail = qryDetail + " @ClassificationCode, @ItemClassificationDesc, @UOMDesc, @TaxTypeDesc,"

                            qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                            commandSalesDetail.CommandText = qryDetail
                            commandSalesDetail.Parameters.Clear()

                            commandSalesDetail.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
                            commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)

                            commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemType.Text)

                            commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCode.Text)
                            'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescription.Text.ToUpper)

                            commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                            commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                            commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecord.Text)

                            commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGST.Text)
                            commandSalesDetail.Parameters.AddWithValue("@GstRate", lblidGSTRate.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                            commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                            commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQty.Text))
                            commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMs.Text)
                            commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOM.Text))
                            commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOM.Text))
                            commandSalesDetail.Parameters.AddWithValue("@DiscP", Convert.ToDecimal(lblidDiscPerc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidPriceWithDisc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidPriceWithDisc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmount.Text))
                            commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmount.Text))
                            commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPrice.Text))

                            commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescription.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCode.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@Description", lblDescription.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                            commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                            commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                            commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")
                            commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNo.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatus.Text)

                            commandSalesDetail.Parameters.AddWithValue("@DiscAmount", lblidDiscAmount.Text)
                            commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDisc.Text)
                            commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationId.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroup.Text)

                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecord.Text)

                            commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceBy.Text)

                            If String.IsNullOrEmpty(lblidServiceDate.Text.Trim) = True Then
                                commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                            Else
                                commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDate.Text).ToString("yyyy-MM-dd"))
                            End If

                            'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                            commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequency.Text)
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceType", lblidItemType.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                            commandSalesDetail.Parameters.AddWithValue("@Location", txtLocation.Text)

                            commandSalesDetail.Parameters.AddWithValue("@ClassificationCode", lblClassificationCode.Text)

                            commandSalesDetail.Parameters.AddWithValue("@ItemClassificationDesc", lblClassificationDesc.Text)
                            commandSalesDetail.Parameters.AddWithValue("@UOMDesc", lblUOMDesc.Text)
                            commandSalesDetail.Parameters.AddWithValue("@TaxTypeDesc", lblTaxTypeDesc.Text)

                            commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            commandSalesDetail.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandSalesDetail.Connection = conn
                            commandSalesDetail.ExecuteNonQuery()

                            commandSalesDetail.Dispose()

                            ToBillAmt = ToBillAmt + Convert.ToDecimal(lblidTotalPrice.Text)
                            DiscAmount = DiscAmount + Convert.ToDecimal(lblidDiscAmount.Text)
                            GSTAmount = GSTAmount + Convert.ToDecimal(lblidGSTBase.Text)
                            NetAmount = NetAmount + Convert.ToDecimal(lblidNetAmount.Text)

                        End If

                    End If
                Next rowIndex

                DisplayGLGrid()
                UpdatePanel3.Update()
            End If


            ' Start:Update Service Address in tblSales

            Dim commandUpdateServiceAddress As MySqlCommand = New MySqlCommand
            commandUpdateServiceAddress.CommandType = CommandType.StoredProcedure
            commandUpdateServiceAddress.CommandText = "UpdateTblSalesServiceAddress"
            commandUpdateServiceAddress.Parameters.Clear()
            commandUpdateServiceAddress.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)
            commandUpdateServiceAddress.Connection = conn
            commandUpdateServiceAddress.ExecuteScalar()

            ' End:Update Service Address in tblSales


            ' Start:Update Sales Details

            Dim commandUpdateSalesDetails As MySqlCommand = New MySqlCommand
            commandUpdateSalesDetails.CommandType = CommandType.StoredProcedure
            commandUpdateSalesDetails.CommandText = "UpdateSalesDetail"
            commandUpdateSalesDetails.Parameters.Clear()
            commandUpdateSalesDetails.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)
            commandUpdateSalesDetails.Connection = conn
            commandUpdateSalesDetails.ExecuteScalar()

            ' End:Update Sales Details
            conn.Close()
            conn.Dispose()
            command.Dispose()

            InsertNewLogDetail()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION InsertIntoTblSales", ex.Message.ToString, txtInvoiceNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub InsertNewLog()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforInvoice FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforInvoice").ToString = "1" Then
            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLog_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Invoice")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtInvoiceNo.Text.Trim)

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()

            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub InsertNewLogDetail()
        'Try
        '    ' Start: Insert NEW Log table

        '    Dim conn As MySqlConnection = New MySqlConnection()
        '    Dim command As MySqlCommand = New MySqlCommand

        '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '    conn.Open()

        '    command.CommandType = CommandType.Text
        '    command.CommandText = "SELECT EnableLogforInvoice FROM tblservicerecordmastersetup where rcno=1"
        '    command.Connection = conn

        '    Dim dr As MySqlDataReader = command.ExecuteReader()
        '    Dim dt As New DataTable
        '    dt.Load(dr)

        '    If dt.Rows.Count > 0 Then
        '        'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
        '        If dt.Rows(0)("EnableLogforInvoice").ToString = "1" Then


        '            Dim connLog As MySqlConnection = New MySqlConnection()

        '            connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
        '            If connLog.State = ConnectionState.Open Then
        '                connLog.Close()
        '                connLog.Dispose()
        '            End If
        '            connLog.Open()

        '            Dim commandInsertLog As MySqlCommand = New MySqlCommand
        '            commandInsertLog.CommandType = CommandType.StoredProcedure
        '            commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

        '            commandInsertLog.Parameters.Clear()

        '            commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Invoice")
        '            commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtInvoiceNo.Text.Trim)
        '            commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", "")

        '            commandInsertLog.Connection = connLog
        '            commandInsertLog.ExecuteScalar()

        '            connLog.Close()
        '            commandInsertLog.Dispose()
        '        End If
        '    End If

        '    ' End: Insert NEW Log table
        'Catch ex As Exception
        '    lblAlert.Text = ex.Message.ToString
        '    InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
        '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        'End Try
    End Sub


    Private Sub InsertNewLogReceipt()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforReceipt FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforReceipt").ToString = "1" Then


            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLog_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Receipt")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtReceiptNoQR.Text.Trim)

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()
            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub InsertNewLogReceiptDetail()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforReceipt FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforReceipt").ToString = "1" Then

            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Receipt")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtReceiptNoQR.Text.Trim)
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", "")

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()

            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

   
    Private Function FindAccountId() As Boolean

        Dim IsAccountId As Boolean
        IsAccountId = False

        Dim connIsAccountId As MySqlConnection = New MySqlConnection()

        connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connIsAccountId.Open()

        Dim commandIsAccountId As MySqlCommand = New MySqlCommand
        commandIsAccountId.CommandType = CommandType.Text

        If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
            commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblCompany where AccountId ='" & txtAccountIdBilling.Text & "'"
        ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
            commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblPerson where AccountId ='" & txtAccountIdBilling.Text & "'"
        End If

        commandIsAccountId.Connection = connIsAccountId

        Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
        Dim dtIsAccountId As New DataTable
        dtIsAccountId.Load(drIsAccountId)

        If dtIsAccountId.Rows.Count > 0 Then
            If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                IsAccountId = True
            End If


        End If
        commandIsAccountId.Dispose()
        connIsAccountId.Close()
        connIsAccountId.Dispose()
        dtIsAccountId.Dispose()
        drIsAccountId.Close()
        Return IsAccountId
    End Function


    Private Sub FindTerms()
        Try
           

            Dim connTerms As MySqlConnection = New MySqlConnection()

            connTerms.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connTerms.Open()

            Dim commandTerms As MySqlCommand = New MySqlCommand
            commandTerms.CommandType = CommandType.Text

            If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
                commandTerms.CommandText = "SELECT ARTerm, TermsDay from tblCompany where AccountId ='" & txtAccountIdBilling.Text & "'"
            ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
                commandTerms.CommandText = "SELECT ARTerm, TermsDay from tblPerson where AccountId ='" & txtAccountIdBilling.Text & "'"
            End If

            commandTerms.Connection = connTerms

            Dim drIsAccountId As MySqlDataReader = commandTerms.ExecuteReader()
            Dim dtIsAccountId As New DataTable
            dtIsAccountId.Load(drIsAccountId)

            If dtIsAccountId.Rows.Count > 0 Then
                If dtIsAccountId.Rows(0)("ARTerm").ToString = "" Then
                    ddlCreditTerms.SelectedIndex = 0
                Else
                    ddlCreditTerms.Text = dtIsAccountId.Rows(0)("ARTerm").ToString
                End If
            End If


            ''
            If ddlCreditTerms.SelectedIndex = 0 Then
                If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
                    commandTerms.CommandText = "SELECT CompArTerms from tblContactSetup "
                ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
                    commandTerms.CommandText = "SELECT PersArTerms from tblContactSetup "
                End If

                commandTerms.Connection = connTerms

                Dim drTermsSetup As MySqlDataReader = commandTerms.ExecuteReader()
                Dim dtTermsSetup As New DataTable
                dtTermsSetup.Load(drTermsSetup)

                If dtTermsSetup.Rows.Count > 0 Then
                    If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
                        If dtTermsSetup.Rows(0)("CompArTerms").ToString = "" Then
                            ddlCreditTerms.SelectedIndex = 0
                        Else
                            ddlCreditTerms.Text = dtTermsSetup.Rows(0)("CompArTerms").ToString
                        End If
                    ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
                        If dtTermsSetup.Rows(0)("PersArTerms").ToString = "" Then
                            ddlCreditTerms.SelectedIndex = 0
                        Else
                            ddlCreditTerms.Text = dtTermsSetup.Rows(0)("PersArTerms").ToString
                        End If
                    End If
                End If
            End If


            ''


            commandTerms.Dispose()
            connTerms.Close()
            connTerms.Dispose()
            dtIsAccountId.Dispose()
            drIsAccountId.Close()

        Catch ex As Exception

            lblAlert.Text = ex.Message.ToString

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FindTerms", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try
    End Sub
    Protected Sub btnSaveInvoice_Click(sender As Object, e As EventArgs) Handles btnSaveInvoice.Click
        lblAlert.Text = ""
        updPnlMsg.Update()

        Try
            'btnSaveInvoice.Enabled = False
            'UpdatePanel3.Update()

            'System.Threading.Thread.Sleep(2000)


            If chkManualInvoice.Checked = True Then
                If String.IsNullOrEmpty(txtInvoiceNo.Text) = True Then
                    lblAlert.Text = "PLEASE ENTER INVOICE NO."
                    updPnlMsg.Update()
                    txtInvoiceNo.Focus()
                    btnSaveInvoice.Enabled = True
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(txtInvoiceDate.Text) = True Then
                lblAlert.Text = "PLEASE ENTER INVOICE DATE"
                updPnlMsg.Update()
                txtInvoiceDate.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            Dim TaxCheck As Boolean = ValidateTaxCode(txtGST.Text)
            If TaxCheck = False Then
                lblAlert.Text = "TAX CODE AND TAX RATE DO NOT MATCH"
                updPnlMsg.Update()
                txtInvoiceDate.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            Dim IsLock = FindARPeriod(txtBillingPeriod.Text)
            If IsLock = "Y" Then
                lblAlert.Text = "PERIOD IS LOCKED"
                updPnlMsg.Update()
                txtInvoiceDate.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
                lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
                updPnlMsg.Update()
                txtAccountIdBilling.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If



            '''''''''''''''''''''

            Dim IsAccountIdExist As Boolean = FindAccountId()

            If IsAccountIdExist = False Then
                lblAlert.Text = "INVALID ACCOUNT ID"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = True Then
                lblAlert.Text = "INVALID COMPANY GROUP"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtBillAddress.Text.Trim) = True Then
                lblAlert.Text = "PLEASE ENTER BILLING ADDRESS (1ST LINE)"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If



            If String.IsNullOrEmpty(txtBillCountry.Text.Trim) = True Then
                lblAlert.Text = "PLEASE ENTER BILL COUNTRY"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If
            '''''''''''''''''''''

                    If (ddlCreditTerms.SelectedIndex) = 0 Then
                        lblAlert.Text = "PLEASE SELECT CREDIT TERMS"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If

                    If (ddlSalesmanBilling.SelectedIndex) = 0 Then
                        lblAlert.Text = "PLEASE SELECT SALESMAN"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If


                    If IsNumeric(txtCreditDays.Text) = False Then
                        lblAlert.Text = "CREDIT DAYS SHOULD BE NUMERIC ONLY"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If


            If (ddlContractGroupBilling.SelectedIndex) = 0 Then
                lblAlert.Text = "PLEASE SELECT CONTRACT GROUP"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


                    If txtDuplicateServiceRecord.Text = "Y" Then
                        lblAlert.Text = "DUPLICATE SERVICE RECORD HAS BEEN SELECTED"
                        updPnlMsg.Update()
                lblAlert.Focus()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If



            If Len(txtDescription.Text.Trim) > 500 Then
                lblAlert.Text = "DESCRIPTION SHOULD BE MAXIMUM 500 CHARS. ONLY"
                updPnlMsg.Update()
                txtDescription.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Len(txtComments.Text.Trim) > 2000 Then
                lblAlert.Text = "COMMENTS SHOULD BE MAXIMUM 2000 CHARS. ONLY"
                updPnlMsg.Update()
                txtComments.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtTotalGSTAmt.Text.Trim) = True Then
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtTotalWithGST.Text.Trim) = True Then
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Convert.ToDecimal(txtNetAmount.Text.Trim) < 0.0 Then
                lblAlert.Text = "INVOICE AMOUNT CANNOT BE NEGATIVE"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            '''''''''''''''''''''''''''''
            If txtMode.Text = "NEW" Then
                Dim HasDetailRec As Integer = 0
                SetRowDataBillingDetailsRecs()
                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

                If tableAdd IsNot Nothing Then

                    For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                        Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                        Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        If TextBoxchkSelect.Checked = True Then
                            If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                                'Dim lblidItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                                HasDetailRec = 1
                                GoTo HasDetail
                            End If

                        End If
                    Next rowIndex
                End If

                If HasDetailRec = 0 Then
                    lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS SELECTED"
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub

                End If
            End If

HasDetail:

            'Start: Check Negative Value
            If txtAllowZeroValueInvoice.Text = False Then
                Dim HasNegativeValue As Integer = 0

                SetRowDataBillingDetailsRecs()
                Dim tableAddNV As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                For rowIndex As Integer = 0 To tableAddNV.Rows.Count - 1

                    Dim lblPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                    Dim lblTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.Text.Trim <> "OTHERS" Then

                        If TextBoxchkSelect.Checked = True Then
                            If ((Val(lblPricePerUOM.Text) < 0) Or (Val(lblPricePerUOM.Text) < 0)) Then
                                HasNegativeValue = 1
                                lblAlert.Text = "THERE SHOULD NOT BE NAGATIVE BILL VALUE"
                                updPnlMsg.Update()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If
                        End If
                    End If
                Next rowIndex
            End If

            'End: Check Negative Value

            '''''''''''''''''''''''''''''
            If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtGSTAmount.Text.Trim).ToString("N2") Then
                AdjustGStAmount()
            End If



            If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtGSTAmount.Text.Trim).ToString("N2") Then
                lblAlert.Text = "GST AMOUNTS DO NOT MATCH"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Convert.ToDecimal(txtTotalWithGST.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtNetAmount.Text.Trim).ToString("N2") Then
                'If txtNetAmount.Text <> txtTotalWithGST.Text Then
                lblAlert.Text = "HEADER TOTAL AND DETAIL TOTAL DO NOT MATCH.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub

            End If
            'If Convert.ToDecimal(txtReceiptAmt.Text) <> Convert.ToDecimal(txtReceivedAmount.Text) Then
            '    lblAlert.Text = "RECEIPT AMOUNT AND SUM OF APPLIED INVOICES SHOULD BE EQUAL"
            '    updPnlMsg.Update()
            '    btnSave.Enabled = True
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If


            '''''''''''''''''''''''''''
            SetRowDataBillingDetailsRecs()

            Dim totalRows, totalRows2, totalRows3 As Long
            totalRows = 0
            totalRows2 = 0
            totalRows3 = 0

            Dim totalRows1 As Long
            totalRows1 = 0
            totalRows1 = grvBillingDetailsNew.Rows.Count

            Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd1 IsNot Nothing Then

                If tableAdd1.Rows.Count > 0 Then
                    Dim lblidOtherCode1 As TextBox = CType(grvBillingDetails.Rows(0).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType1 As DropDownList = CType(grvBillingDetails.Rows(0).FindControl("txtItemTypeGV"), DropDownList)

                    If String.IsNullOrEmpty(lblidOtherCode1.Text) = True And lblidItemType1.Text = "-1" And totalRows1 = 0 Then
                        totalRows = totalRows + 1
                        lblAlert.Text = "PLEASE ENTER RECORDS FOR INVOICE DETAILS"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        'btnShowInvoices.Enabled = False
                        updPnlMsg.Update()
                        btnSaveInvoice.Enabled = True
                        Exit Sub
                    End If
                End If

                For rowIndex1 As Integer = 0 To tableAdd1.Rows.Count - 1
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtServiceRecordGV"), TextBox)
                    Dim lblidTaxTypeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtTaxTypeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If lblidItemType.Text = "SERVICE" And String.IsNullOrEmpty(lblidServiceRecordNo.Text.Trim) = True Then
                            lblAlert.Text = "PLEASE ENTER SERVICE RECORD NO. FOR ALL SERVICE ITEM TYPE"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            updPnlMsg.Update()
                            btnSaveInvoice.Enabled = True
                            Exit Sub
                        End If

                        If String.IsNullOrEmpty(lblidOtherCode.Text) = True And lblidItemType.Text <> "-1" Then
                            totalRows = totalRows + 1
                        End If

                        If ((String.IsNullOrEmpty(lblidTaxTypeGV.Text) = True)) And lblidItemType.Text <> "-1" Then
                            totalRows2 = totalRows2 + 1
                        End If

                        If ((lblidTaxTypeGV.Text) <> (txtGST.Text)) Then
                            totalRows3 = totalRows3 + 1
                        End If
                        ''''''''''''''''''''''''''''''''''''''''''''

                        If String.IsNullOrEmpty(lblidServiceRecordNo.Text.Trim) = False Then
                            Dim lInvoiceNoExists As String

                            lInvoiceNoExists = ""
                            lInvoiceNoExists = IsServiceRecordExists(lblidServiceRecordNo.Text.Trim)

                            If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then
                                lblAlert.Text = "SERVICE RECORD '" & lblidServiceRecordNo.Text.Trim & "' already exists in OPEN Invoice No. '" & lInvoiceNoExists & "'"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                                Exit Sub
                            End If
                        End If
                        ''''''''''''''''''''''''''''''''''''''''''''''''
                    End If

                Next rowIndex1
            End If


            If totalRows > 0 Then
                lblAlert.Text = "PLEASE SELECT GL CODE "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            If totalRows2 > 0 Then
                lblAlert.Text = "PLEASE SELECT GST CODE "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            If totalRows3 > 0 Then
                lblAlert.Text = "HEADER AND DETAIL TAX CODE DO NOT MATCH "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            InsertIntoTblSales()

            SqlDSSalesDetail.SelectCommand = "select InvoiceNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, InvoiceType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode, ItemClassificationCode, ItemClassificationDesc, UOMDesc, TaxTypeDesc from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()

            CalculateTotal()

            If txtMode.Text = "NEW" Then
                lblMessage.Text = "ADD:  RECORD SUCCESSFULLY ADDED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

                HeaderDetailTotal("AddSave")

                'InsertNewLogDetail()
                If txtPostUponSave.Text = "1" Then
                    IsSuccess = PostInvoice()

                    If IsSuccess = True Then

                        lblAlert.Text = ""
                        updPnlSearch.Update()
                        updPnlMsg.Update()

                        'updpnlServiceRecs.Update()

                        txtRcnoSelected.Text = txtRcno.Text
                        btnQuickSearch_Click(sender, e)

                        lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                        updPnlMsg.Update()

                        btnReverse.Enabled = True
                        btnReverse.ForeColor = System.Drawing.Color.Black


                        btnEdit.Enabled = False
                        btnEdit.ForeColor = System.Drawing.Color.Gray

                        btnDelete.Enabled = False
                        btnDelete.ForeColor = System.Drawing.Color.Gray

                        btnPost.Enabled = False
                        btnPost.ForeColor = System.Drawing.Color.Gray

                        'InsertNewLog()

                    End If

                Else
                    mdlPopupConfirmSavePost.Show()
                End If

                If txtAutoEmailInvoice.Text = "True" Then
                    mdlPopupPrint.Show()
                End If
            Else
                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)
                HeaderDetailTotal("EditSave")
                InsertNewLogDetail()
            End If


            lblAlert.Text = ""

            'GridView1.DataSourceID = ""
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()


            If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding,ConsolidatedInvoiceNo, "
                txt.Text = txt.Text & " BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, "
                txt.Text = txt.Text & " AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, "
                txt.Text = txt.Text & " GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, "
                txt.Text = txt.Text & " ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddBuilding, "
                txt.Text = txt.Text & " CustAddStreet, CustAddCity, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule, Printcounter, Description, EmailSentStatus, EmailsentDate,  Location, ServiceAddress , EI, EInvoiceStatus,TaxIdentificationNo,SalesTaxRegistrationNo,UUID,SubmissionID,SubmissionDate,SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
                txt.Text = txt.Text & " FROM tblsales WHERE 1=1 and InvoiceNumber = '" & txtInvoiceNo.Text & "'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    txt.Text = txt.Text & " and Location = '" & txtLocation.Text & "'"
                End If

            End If

            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Close()
            'txtBatchNo.Text = "0"
            btnImportService.Enabled = False

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black


            btnPost.Enabled = True
            btnPost.ForeColor = System.Drawing.Color.Black

            DisableControls()
            'FirstGridViewRowServiceRecs()
            'btnSaveInvoice.Enabled = False

            txtMode.Text = "View"

            grvBillingDetails.Visible = False
            FirstGridViewRowBillingDetailsRecs()
            updPnlMsg.Update()
            updPnlSearch.Update()
            updPanelInvoice.Update()
            tableAdd1.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnSaveInvoice_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub HeaderDetailTotal(Action As String)
        '''''''''''''''''''''''''''''''''''''''''''
        'Dim lStatusIsHeaderDetailEqual As String
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandHeaderDetailTotal As MySqlCommand = New MySqlCommand

            commandHeaderDetailTotal.CommandType = CommandType.StoredProcedure
            commandHeaderDetailTotal.CommandText = "HeaderDetailTotal"
            'commandIsExists.Connection = conn
            commandHeaderDetailTotal.Parameters.Clear()

            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_Module", "IN")
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_DocumentNo", txtInvoiceNo.Text.Trim)
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_Action", Action.Trim)
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_UserID", Session("UserID"))
            'commandHeaderDetailTotal.Parameters.AddWithValue("@pr_DtStamp", Convert.ToDateTime(txtCreatedOn.Text))

            'commandIsHeaderDetailEqual.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            'commandIsHeaderDetailEqual.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandHeaderDetailTotal.Connection = conn
            commandHeaderDetailTotal.ExecuteScalar()

            'lStatusIsHeaderDetailEqual = commandIsHeaderDetailEqual.Parameters("@pr_status").Value

            commandHeaderDetailTotal.Dispose()
            conn.Close()
            conn.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "HeaderDetailTotal", ex.Message.ToString, "")
        End Try

        ''''''''''''''''''''''''''''''''''''''''''
    End Sub
    Protected Sub SaveServiceBillingDetail()
        '''''''''''''''''''''''''''''''''''''''
        Try
            Dim qry As String
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim rowselected As Integer = Convert.ToInt32(txtRowSelected.Text)

            Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtClientNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtLocationIdGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillingFrequencyGV"), TextBox)
            Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDeptGV"), TextBox)
            Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtStatusGV"), TextBox)
            Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtContractNoGV"), TextBox)
            Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)

            If txtMode.Text = "NEW" Then

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text

                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If

                'If Convert.ToInt64(txtBatchNo.Text) = 0 Then

                '''''''''''''''''''''
                Dim commandExistServiceBillingDetail As MySqlCommand = New MySqlCommand
                commandExistServiceBillingDetail.CommandType = CommandType.Text
                'command1.CommandText = Sql
                commandExistServiceBillingDetail.CommandText = "SELECT * FROM tblServiceBillingDetail where RcnoServiceRecord=" & Convert.ToInt64(lblid7.Text) & " and Batchno = '" & txtBatchNo.Text & "'"
                commandExistServiceBillingDetail.Connection = conn

                Dim drExistServiceBillingDetail As MySqlDataReader = commandExistServiceBillingDetail.ExecuteReader()
                Dim dtExistServiceBillingDetail As New DataTable
                dtExistServiceBillingDetail.Load(drExistServiceBillingDetail)

                If dtExistServiceBillingDetail.Rows.Count = 0 Then

                    '''''''''''''''''''''
                    qry = "INSERT INTO tblServiceBillingDetail( AccountId, CustName, LocationId, Name, RecordNo, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, "
                    qry = qry + " ServiceDate, BillAmount, DiscountAmount,  GSTAmount, TotalWithGST, NetAmount, OurRef,YourRef,ContractNo, PoNo, RcnoServiceRecord, BillingFrequency, Salesman, ContactType, CompanyGroup,   "
                    qry = qry + " ContractGroup, Status, Address1,   "
                    qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    qry = qry + " (@AccountId, @ClientName, @LocationId, @AccountName, @ServiceRecordNo, @BillAddress1, @BillBuilding, @BillStreet, @BillCountry, @BillPostal, "
                    qry = qry + " @ServiceDate, @BillAmount, @DiscountAmount,  @GSTAmount, @TotalWithGST, @NetAmount, @OurRef, @YourRef, @ContractNo, @PoNo, @RcnoServiceRecord, @BillingFrequency, @Salesman, @ContactType, @CompanyGroup,   "
                    qry = qry + " @ContractGroup, @Status,  @Address1,  "
                    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@AccountId", lblid1.Text)
                    command.Parameters.AddWithValue("@ClientName", lblid2.Text)
                    command.Parameters.AddWithValue("@LocationId", lblid3.Text)
                    command.Parameters.AddWithValue("@AccountName", txtAccountName.Text)
                    command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                    command.Parameters.AddWithValue("@Address1", lblid21.Text)
                    command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                    command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                    command.Parameters.AddWithValue("@BillingFrequency", lblid6.Text)

                    If lblid5.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@ServiceDate", lblid5.Text)
                    'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                    Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                    'Dim lbd30 As String = TextBoxGSTAmount.Text

                    'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(lblid23.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                    '    command.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    command.Parameters.AddWithValue("@TotalWithGST", 0.0)
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(lblid23.Text))
                    'Else
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    '    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    '    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    'End If


                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))

                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command.Parameters.AddWithValue("@ContractNo", lblid20.Text)
                    'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                    command.Parameters.AddWithValue("@RcnoServiceRecord", lblid7.Text)

                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)
                    command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                    command.Parameters.AddWithValue("@Status", lblid9.Text)
                    command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                    command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblServiceBillingDetail"

                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcnotblServiceBillingDetail.Text = commandRcno.ExecuteScalar()

                    If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                        txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text

                        qry = "Update tblServiceBillingDetail set BatchNo = '" & txtBatchNo.Text & "' where rcno = " & txtBatchNo.Text

                        command.CommandText = qry
                        command.Parameters.Clear()
                        command.Connection = conn
                        command.ExecuteNonQuery()

                    End If
                End If
            Else
                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If
                If Convert.ToInt64(txtRcnotblServiceBillingDetail.Text) > 0 Then
                    qry = "Update tblServiceBillingDetail set BillAmount = @BillAmount, DiscountAmount= @DiscountAmount,  GSTAmount =@GSTAmount,  "
                    qry = qry + "TotalWithGST = @TotalWithGST, NetAmount =@NetAmount, OurRef = @OurRef ,YourRef =@YourRef, PoNo =@PoNo, Salesman =@Salesman,    "
                    qry = qry + " LastModifiedBy =@LastModifiedBy,LastModifiedOn = @LastModifiedOn; "

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                End If
            End If


            '''' Detail

            'Dim rowselected As Integer
            'rowselected = 0

            'Dim conn As MySqlConnection = New MySqlConnection()


            'Start: Delete existing Records

            'If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
            '    txtRcnotblServiceBillingDetail.Text = "0"
            'End If

            'If txtRcnotblServiceBillingDetail.Text <> "0" Then '04.01.17

            Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

            commandtblServiceBillingDetailItem.CommandType = CommandType.Text
            'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
            Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where RcnoServiceBillingDetail = '" & Convert.ToInt32(txtRcnotblServiceBillingDetail.Text) & "'"

            commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
            commandtblServiceBillingDetailItem.Parameters.Clear()
            commandtblServiceBillingDetailItem.Connection = conn
            commandtblServiceBillingDetailItem.ExecuteNonQuery()

            'End: Delete Existing Records


            SetRowDataServiceRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                    Dim lbd10 As String = TextBoxQty.Text



                    Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim TextBoxItemCodeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                    Dim TextBoxItemDescriptionGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                    Dim TextBoxUOMGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                    Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                    Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                    Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)
                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                    If String.IsNullOrEmpty(lbd10) = False Then
                        If (Convert.ToInt64(lbd10) > 0) Then

                            ''Start:Detail
                            Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                            commandSalesDetail.CommandType = CommandType.Text
                            Dim qryDetail As String = "INSERT INTO tblServiceBillingDetailItem(RcnoServiceBillingDetail,Itemtype, ItemCode, Itemdescription, UOM, Qty,  "
                            qryDetail = qryDetail + " PricePerUOM, TotalPrice,DiscPerc, DiscAmount, PriceWithDisc, GSTPerc, GSTAmt, TotalPriceWithGST, TaxType, ARCode, GSTCode, OtherCode, GLDescription,  RcnoServiceRecord, BatchNo,  CompanyGroup, ContractNo, ServiceStatus, ContractGroup, ServiceRecordNo, ServiceDate,"
                            qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                            qryDetail = qryDetail + "(@RcnoServiceBillingDetail, @Itemtype, @ItemCode, @Itemdescription, @UOM, @Qty,"
                            qryDetail = qryDetail + " @PricePerUOM, @TotalPrice, @DiscPerc, @DiscAmount, @PriceWithDisc, @GSTPerc, @GSTAmt, @TotalPriceWithGST, @TaxType, @ARCode, @GSTCode,  @OtherCode,@GLDescription, @RcnoServiceRecord, @BatchNo, @CompanyGroup, @ContractNo,  @ServiceStatus, @ContractGroup, @ServiceRecordNo, @ServiceDate,"
                            qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                            command.CommandText = qryDetail
                            command.Parameters.Clear()

                            command.Parameters.AddWithValue("@RcnoServiceBillingDetail", Convert.ToInt64(txtRcnotblServiceBillingDetail.Text))
                            command.Parameters.AddWithValue("@Itemtype", TextBoxItemTypeGV.Text)
                            command.Parameters.AddWithValue("@ItemCode", TextBoxItemCodeGV.Text)
                            command.Parameters.AddWithValue("@Itemdescription", TextBoxItemDescriptionGV.Text)

                            If TextBoxUOMGV.Text <> "-1" Then
                                command.Parameters.AddWithValue("@UOM", TextBoxUOMGV.Text)

                            Else
                                command.Parameters.AddWithValue("@UOM", "")
                            End If

                            command.Parameters.AddWithValue("@Qty", TextBoxQty.Text)
                            command.Parameters.AddWithValue("@PricePerUOM", TextBoxPricePerUOMGV.Text)
                            'command.Parameters.AddWithValue("@BillAmount", 0.0)
                            command.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(TextBoxTotalPrice.Text))
                            command.Parameters.AddWithValue("@DiscPerc", Convert.ToDecimal(TextBoxDiscPerc.Text))
                            command.Parameters.AddWithValue("@DiscAmount", Convert.ToDecimal(TextBoxDiscAmount.Text))
                            command.Parameters.AddWithValue("@PriceWithDisc", Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text))
                            command.Parameters.AddWithValue("@GSTPerc", Convert.ToDecimal(TextBoxGSTPerc.Text))
                            command.Parameters.AddWithValue("@GSTAmt", Convert.ToDecimal(TextBoxGSTAmt.Text))
                            command.Parameters.AddWithValue("@TotalPriceWithGST", Convert.ToDecimal(TextBoxTotalPriceWithGST.Text))
                            command.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text)
                            command.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(lblid7.Text))
                            command.Parameters.AddWithValue("@ARCode", "")
                            command.Parameters.AddWithValue("@GSTCode", "")
                            command.Parameters.AddWithValue("@OtherCode", TextBoxOtherCode.Text)
                            command.Parameters.AddWithValue("@GLDescription", TextBoxGLDescription.Text)
                            command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                            'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                            command.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text)
                            command.Parameters.AddWithValue("@ServiceStatus", TextBoxServiceStatus.Text)
                            command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                            command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)

                            command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)

                            If lblid5.Text.Trim = "" Then
                                command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                            Else
                                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                            End If
                            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Connection = conn
                            command.ExecuteNonQuery()
                            'conn.Close()
                        End If

                    End If
                Next rowIndex
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION SaveServiceBillingDetail", ex.Message.ToString, "")
        End Try
    End Sub
    'Protected Sub txtTaxTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)


    '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGV"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGV"), TextBox)


    '        'lTargetDesciption = lblid1.Text

    '        'Dim rowindex1 As Integer = ddl1.RowIndex

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString

    '            CalculatePrice()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '        conn1.Dispose()
    '        commandGST.Dispose()
    '        dtGST.Dispose()

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '        InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION txtTaxTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
    '    End Try
    'End Sub



    Public Function HighlightDuplicate(ByVal gridview As GridView) As Boolean
        HasDuplicateServiceRecord = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As TextBox = CType(grvBillingDetails.Rows(currentRow).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                Dim TextBoxTargetDescGV1 As TextBox = CType(grvBillingDetails.Rows(otherRow).Cells(0).FindControl("txtServiceRecordGV"), TextBox)



                If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If String.IsNullOrEmpty(TextBoxTargetDescGV.Text) = True And String.IsNullOrEmpty(TextBoxTargetDescGV1.Text) = True Then
                        GoTo nextrec
                    End If

                    If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                        GoTo nextrec
                    End If

                    duplicateRow = True

                    TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                    TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral

                    HasDuplicateServiceRecord = True
                    Return HasDuplicateServiceRecord

                Else
                    TextBoxTargetDescGV.BackColor = Drawing.Color.White
                    TextBoxTargetDescGV1.BackColor = Drawing.Color.White
                    duplicateRow = False
                    HasDuplicateServiceRecord = False
                End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateServiceRecord
    End Function

    'Protected Sub txtServiceRecordGV_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    lblAlert.Text = ""
    '    updPnlMsg.Update()

    '    Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '    Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '    Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtServiceRecordGV"), DropDownList)
    '    Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceStatusGV"), TextBox)
    '    Dim lblid3 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
    '    Dim lblid4 As DropDownList = CType(xrow1.FindControl("txtItemCodeGV"), DropDownList)

    '    Dim lblid5 As DropDownList = CType(xrow1.FindControl("txtUOMGV"), DropDownList)
    '    Dim lblid6 As TextBox = CType(xrow1.FindControl("txtQtyGV"), TextBox)
    '    Dim lblid7 As TextBox = CType(xrow1.FindControl("txtPricePerUOMGV"), TextBox)

    '    Dim lblid8 As TextBox = CType(xrow1.FindControl("txtTotalPriceGV"), TextBox)
    '    Dim lblid9 As TextBox = CType(xrow1.FindControl("txtDiscPercGV"), TextBox)
    '    Dim lblid10 As TextBox = CType(xrow1.FindControl("txtDiscAmountGV"), TextBox)

    '    Dim lblid11 As TextBox = CType(xrow1.FindControl("txtPriceWithDiscGV"), TextBox)
    '    Dim lblid12 As DropDownList = CType(xrow1.FindControl("txtTaxTypeGV"), DropDownList)
    '    Dim lblid13 As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)

    '    Dim lblid14 As TextBox = CType(xrow1.FindControl("txtGSTAmtGV"), TextBox)
    '    Dim lblid15 As TextBox = CType(xrow1.FindControl("txtTotalPriceWithGSTGV"), TextBox)
    '    Dim lblid16 As TextBox = CType(xrow1.FindControl("txtLocationIdGV"), TextBox)

    '    Dim lblid17 As TextBox = CType(xrow1.FindControl("txtServiceLocationGroupGV"), TextBox)
    '    Dim lblid18 As TextBox = CType(xrow1.FindControl("txtBillingFrequencyGV"), TextBox)
    '    Dim lblid19 As TextBox = CType(xrow1.FindControl("txtServiceByGV"), TextBox)
    '    Dim lblid20 As TextBox = CType(xrow1.FindControl("txtItemDescriptionGV"), TextBox)

    '    Dim lblid21 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)
    '    Dim lblid22 As TextBox = CType(xrow1.FindControl("txtServiceDateGV"), TextBox)

    '    Dim lblid23 As TextBox = CType(xrow1.FindControl("txtRcnoInvoiceGV"), TextBox)
    '    Dim lblid24 As TextBox = CType(xrow1.FindControl("txtRcnoServiceRecordGV"), TextBox)



    '    Dim rowindex1 As Integer = xrow1.RowIndex

    '    '''''''''''''''''Duplicate

    '    HasDuplicateServiceRecord = HighlightDuplicate(grvBillingDetails)

    '    txtDuplicateServiceRecord.Text = "N"
    '    txtRecordAdded.Text = "N"

    '    If HasDuplicateServiceRecord = True Then
    '        txtDuplicateServiceRecord.Text = "Y"
    '        lblAlert.Text = "Duplicate Service Record has been selected"
    '        updPnlMsg.Update()
    '        Exit Sub
    '    End If
    '    ''''''''''''''''Duplicate

    '    Dim conn As MySqlConnection = New MySqlConnection()

    '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '    'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "SELECT Rcno, Status, ContractNo, Description, ServiceDate, BillAmount, BilledAmt, TotalCreditAmount, LocationID, ServiceLocationGroup, Notes, ServiceBy FROM tblservicerecord where RecordNo =@RecordNo"
    '    command1.Parameters.AddWithValue("@RecordNo", lblid1.Text.Trim)
    '    command1.Connection = conn

    '    Dim dr As MySqlDataReader = command1.ExecuteReader()
    '    Dim dt As New DataTable
    '    dt.Load(dr)

    '    If dt.Rows.Count > 0 Then
    '        lblid2.Text = dt.Rows(0)("Status").ToString()
    '        lblid3.Text = dt.Rows(0)("ContractNo").ToString()
    '        lblid20.Text = lblid1.Text & ", " & Convert.ToDateTime(dt.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy") & ", " & dt.Rows(0)("Notes").ToString()

    '    End If

    '    Dim command2 As MySqlCommand = New MySqlCommand
    '    command2.CommandType = CommandType.Text

    '    'If lblid25.Text = "P" Then
    '    '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
    '    'ElseIf lblid25.Text = "O" Then
    '    '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
    '    'End If

    '    If String.IsNullOrEmpty(lblid3.Text) = False Then
    '        If lblid2.Text = "P" Then
    '            command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
    '        ElseIf lblid2.Text = "O" Then
    '            command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
    '        End If
    '    Else
    '        command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-COO'"
    '    End If

    '    command2.Connection = conn

    '    Dim dr1 As MySqlDataReader = command2.ExecuteReader()
    '    Dim dt1 As New DataTable
    '    dt1.Load(dr1)

    '    lblid4.Text = dt1.Rows(0)("ProductCode").ToString()
    '    lblid5.Text = "NO"

    '    lblid6.Text = "1"
    '    lblid7.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    lblid8.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    lblid9.Text = "0.00"
    '    lblid10.Text = "0.00"

    '    lblid11.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    'lblid12.Text As DropDownList = CType(xrow1.FindControl("txtTaxTypeGV"), DropDownList)
    '    'lblid13.Text As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)

    '    lblid14.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid11.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
    '    lblid15.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid11.Text) + Convert.ToDecimal(lblid14.Text)).ToString("N2"))
    '    lblid16.Text = dt.Rows(0)("LocationID").ToString()

    '    lblid17.Text = dt.Rows(0)("ServiceLocationGroup").ToString()
    '    lblid24.Text = dt.Rows(0)("Rcno").ToString()

    '    lblid19.Text = dt.Rows(0)("ServiceBy").ToString()
    '    lblid22.Text = dt.Rows(0)("ServiceDate").ToString()


    '    'lblid20.Text

    '    lblid21.Text = dt1.Rows(0)("COACode").ToString()
    '    'lblid22.Text = dt1.Rows(0)("COADescription").ToString()
    '    'lblid24.Text = dt1.Rows(0)("Rcno").ToString()



    '    Dim command3 As MySqlCommand = New MySqlCommand
    '    command3.CommandType = CommandType.Text
    '    command3.CommandText = "SELECT BillingFrequency FROM tblContract where ContractNo =@ContractNo"
    '    command3.Parameters.AddWithValue("@ContractNo", lblid3.Text.Trim)
    '    command3.Connection = conn

    '    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
    '    Dim dt3 As New DataTable
    '    dt3.Load(dr3)

    '    If dt3.Rows.Count > 0 Then
    '        lblid18.Text = dt3.Rows(0)("BillingFrequency").ToString()
    '    End If

    '    CalculateTotalPrice()



    '    ''''''''''''''''''''''''
    '    'If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
    '    '    btnAddDetail_Click(sender, e)
    '    '    txtRecordAdded.Text = "Y"
    '    'End If

    '    ''''''''''''''''''''''''''''


    'End Sub


    Protected Sub txtItemTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)


            If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
                lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
                lblid1.SelectedIndex = 0
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                updPnlMsg.Update()
                Exit Sub
            End If

            If ddlContractGroupBilling.SelectedIndex = 0 Then
                lblAlert.Text = "PLEASE SELECT CONTRCT GROUP"
                lblid1.SelectedIndex = 0
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                updPnlMsg.Update()
                Exit Sub
            End If


            Dim rowindex1 As Integer = xrow1.RowIndex
            Dim ItemCode As String
            ItemCode = ""

            ''''''''''''''''''''''''
            If lblid1.Text = "STOCK" Then
                ItemCode = "IN-SLS"
            ElseIf lblid1.Text = "SERVICE" Then
                ItemCode = "IN-SRV"
            End If

            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid11 As TextBox = CType(xrow1.FindControl("txtServiceStatusGV"), TextBox)

            Dim lblidItemDescription As TextBox = CType(xrow1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblidItemCode As DropDownList = CType(xrow1.FindControl("txtItemCodeGV"), DropDownList)

            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtQtyGV"), TextBox)
            Dim lblid5 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid6 As TextBox = CType(xrow1.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid7 As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceDateGV"), TextBox)  ''''??????
            Dim lblid9 As TextBox = CType(xrow1.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid10 As TextBox = CType(xrow1.FindControl("txtGLDescriptionGV"), TextBox)

            Dim lblid12 As ImageButton = CType(xrow1.FindControl("BtnContractGV"), ImageButton)

            If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
                'If txtDuplicateServiceRecord.Text = "N" Then
                btnAddDetail_Click(sender, e)

                lblid6.Text = txtGST.Text
                'lblid7.Text = txtTaxRatePct.Text
                lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

            Else
                If lblid1.Text = "STOCK" Or lblid1.Text = "OTHERS" Then
                    'lblidItemCode.Enabled = False
                    lblid2.Enabled = False
                    lblid2.Text = ""
                    lblid3.Enabled = True
                    lblid3.Text = ""
                    lblid11.Enabled = False
                    lblid11.Text = ""
                    lblid12.Enabled = True
                ElseIf lblid1.Text = "SERVICE" Then
                    lblidItemCode.Enabled = True
                    lblid2.Enabled = True
                    lblid12.Enabled = False
                    lblid6.Text = txtGST.Text
                    'lblid7.Text = txtTaxRatePct.Text
                    lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")
                End If
            End If



            'CalculateTotalPrice()


        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION txtItemTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub txtItemCodeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xgrvBillingDetails As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)

            Dim lblid1 As DropDownList = CType(xgrvBillingDetails.FindControl("txtItemCodeGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtItemDescriptionGV"), TextBox)
            'Dim lblid1 As DropDownList = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtItemCodeGV"), TextBox)

            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As DropDownList = CType(xgrvBillingDetails.FindControl("txtItemTypeGV"), DropDownList)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceDateGV"), TextBox)  ''''??????
            Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid10 As TextBox = CType(xgrvBillingDetails.FindControl("txtGLDescriptionGV"), TextBox)
            'lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex

            'Get Item desc, price Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            'command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and  ProductCode = '" & lblid1.Text & "'"
            command1.CommandText = "SELECT * FROM tblbillingproducts where   Description = '" & lblid1.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("ProductCode").ToString

                If lblid8.Text = "STOCK" Then
                    lblid3.Text = dt.Rows(0)("Price").ToString
                End If
                lblid4.Text = 1
                lblid5.Text = dt.Rows(0)("COACode").ToString
                lblid6.Text = dt.Rows(0)("TaxType").ToString
                lblid7.Text = Convert.ToDecimal(dt.Rows(0)("TaxRate").ToString).ToString("N2")
                lblid10.Text = dt.Rows(0)("COADescription").ToString

                CalculatePrice()
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            'If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
            '    btnAddDetail_Click(sender, e)
            '    'txtRecordAdded.Text = "Y"
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION txtItemCodeGV_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles grvBillingDetails.RowCommand

        'If (e.CommandName = "Delete") Then
        '    ' Retrieve the row index stored in the CommandArgument property.
        '    Dim index As Integer = Convert.ToInt32(e.CommandArgument)

        '    ' Retrieve the row that contains the button 
        '    ' from the Rows collection.
        '    Dim row As GridViewRow = grvBillingDetails.Rows(index)

        '    'Dim button As ImageButton = TryCast(Control, ImageButton)
        '    'If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
        '    '    'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
        '    '    button.OnClientClick = "Confirm()"
        '    'End If

        '    'Button.OnClientClick = "Confirm()"
        '    ' Add code here to add the item to the shopping cart.
        '    'Dim btn As Button = CType(sender, Button)

        '    'Get the row that contains this button
        '    Dim btn As Button
        '    'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        '    Dim xrow1 As GridViewRow = CType(btn.NamingContainer, GridViewRow)
        '    btn.OnClientClick = "Confirm()"
        'End If

    End Sub

    Protected Sub grvBillingDetails_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles grvBillingDetails.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                SetRowDataBillingDetailsRecs()
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



                If dt.Rows.Count > 0 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTableBillingDetailsRec") = dt
                    grvBillingDetails.DataSource = dt
                    grvBillingDetails.DataBind()

                    'SetPreviousData()
                    SetPreviousDataBillingDetailsRecs()

                    If dt.Rows.Count = 0 Then
                        FirstGridViewRowBillingDetailsRecs()
                    End If

                    If txtRecordAdded.Text = "N" Then
                        btnAddDetail_Click(sender, e)
                    End If

                    txtRecordDeleted.Text = "Y"
                    ''''''''''''''''''''''

                End If

                CalculateTotalPrice()

            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "grvBillingDetails_RowDeleting", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvBillingDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                'Delete()

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control


                Next cell

            End If



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub gvLocation_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        'Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
        'Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
        'Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
        'Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)

        txtIsPopup.Text = ""

        If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
            txtLocationId.Text = " "
        Else
            txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
            'lblid1.Text = txtLocationId.Text
        End If

        If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
            txtClientName.Text = " "
        Else
            txtClientName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
            'lblid2.Text = txtServiceName.Text
        End If
        txtIsPopup.Text = "Location"
        mdlImportServices.Show()
    End Sub

    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        mdlPopupStatusSearch.Show()
    End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    YrStrList.Add(item.Value)
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            txtSearch1Status.Text = YrStr
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub txtAccountId_TextChanged(sender As Object, e As EventArgs) Handles txtAccountId.TextChanged
        If Len(txtAccountId.Text) > 2 Then
            txtAccountId.AutoPostBack = True
            btnClient_Click(sender, New ImageClickEventArgs(0, 0))
        Else
            txtAccountId.AutoPostBack = False
        End If
    End Sub

    Protected Sub btnQuickReset_Click(sender As Object, e As EventArgs) Handles btnQuickReset.Click
        Try

            txtInvoicenoSearch.Text = ""
            txtAccountIdSearch.Text = ""
            'txtBillingPeriodSearch.Text = ""
            txtClientNameSearch.Text = ""
            ddlCompanyGrpSearch.SelectedIndex = 0
            'txtBillSchedule.Text = ""
            txtSearch1Status.Text = "O,P"
            'ddlCompanyGrpSearch.SelectedIndex = 0
            ddlBranch.SelectedIndex = 0
            txtCommentsSearch.Text = ""
            txtInvoiceDateFromSearch.Text = ""
            txtInvoiceDateToSearch.Text = ""
            txtServiceAddressSearch.Text = ""

            'btnQuickSearch_Click(sender, e)


        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
        'btnSearch1Status_Click(sender, e)
    End Sub




    Private Sub FirstGridViewRowGL()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("GLCode", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("DebitAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("CreditAmount", GetType(String)))

            dr = dt.NewRow()

            dr("GLCode") = String.Empty
            dr("GLDescription") = String.Empty
            dr("DebitAmount") = String.Empty
            dr("CreditAmount") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableGL") = dt

            grvGL.DataSource = dt
            grvGL.DataBind()

            'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub




    Private Sub AddNewRowGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvGL.DataSource = dtCurrentTable
                    grvGL.DataBind()


                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()
                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetPreviousDataGL()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        TextBoxGLCode.Text = dt.Rows(i)("GLCode").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxDebitAmount.Text = dt.Rows(i)("DebitAmount").ToString()
                        TextBoxCreditAmount.Text = dt.Rows(i)("CreditAmount").ToString()


                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataGL()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text


                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableGL") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    Protected Sub grvServiceRecDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvServiceRecDetails.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then

            'Dim status1 As TextBox = CType(e.Row.FindControl("txtStatusGV"), TextBox)
            ''status1.ForeColor = Color.Red


            'If status1.Text = "P" Then
            '    e.Row.ForeColor = Color.Red
            '    'e.Row.Cells(7).Text = "IN"
            '    'e.Row.Cells(2).BackColor = Color.Blue
            '    'status1.ForeColor = Color.Red
            '    'e.Row.Cells(7).ForeColor = Color.Red
            'End If

            'For Each cell As DataControlFieldCell In e.Row.Cells
            '    ' check all cells in one row
            '    For Each control As Control In cell.Controls

            '        Dim abc As TextBox = TryCast(e.Row.FindControl("txtStatusGV"), TextBox)

            '        If abc.Text = "P" Then
            '            e.Row.Cells(7).ForeColor = Drawing.Color.Blue

            '        End If
            '    Next control
            'Next cell
        End If
    End Sub



    Protected Sub btnPost_Click(sender As Object, e As EventArgs) Handles btnPost.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        Try
            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If

            If String.IsNullOrEmpty(txtCreditDays.Text) = True Then
                txtCreditDays.Text = "0"
            End If

            Dim IsLock = FindARPeriod(txtBillingPeriod.Text)
            If IsLock = "Y" Then
                lblAlert.Text = "PERIOD IS LOCKED"
                updPnlMsg.Update()
                txtInvoiceDate.Focus()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            '01.12.24
            If btnPost.Text = "REVERSE" Then
                mdlPopupConfirmReverse.Show()

                Dim confirmValue As String
                confirmValue = ""
            ElseIf btnPost.Text = "POST" Then
                mdlPopupConfirmPost.Show()
                Exit Sub

            End If

            '01.12.24

            Exit Sub

            'Dim confirmValue As String
            'confirmValue = ""



            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            ''''''''''''''' Insert tblAR

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Open()


            ' ''''''''''''''
            'Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            'commandUpdateInvoice.CommandType = CommandType.Text
            'Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'P'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            'commandUpdateInvoice.CommandText = sqlUpdateInvoice
            'commandUpdateInvoice.Parameters.Clear()
            'commandUpdateInvoice.Connection = conn
            'commandUpdateInvoice.ExecuteNonQuery()


            ' '''''''''''''''
            'Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text

            'Dim qry1 As String = "DELETE from tblAR where VoucherNumber = '" & txtInvoiceNo.Text & "'"

            'command1.CommandText = qry1
            ''command1.Parameters.Clear()
            'command1.Connection = conn
            'command1.ExecuteNonQuery()

            'Dim qryAR As String
            'Dim commandAR As MySqlCommand = New MySqlCommand
            'commandAR.CommandType = CommandType.Text

            'If Convert.ToDecimal(txtNetAmount.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, DueDate, GLtype, BillingPeriod, InvoiceType, SalesMan, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @DueDate, @GLtype, @BillingPeriod, @InvoiceType, @SalesMan,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()
            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)

            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '    End If
            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)

            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtNetAmount.Text))
            '    commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '    commandAR.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtInvoiceDate.Text).AddDays(Convert.ToInt64(txtCreditDays.Text)).ToString("yyyy-MM-dd"))
            '    commandAR.Parameters.AddWithValue("@GLType", "Debtor")
            '    commandAR.Parameters.AddWithValue("@InvoiceType", "Service")
            '    If ddlSalesmanBilling.SelectedIndex > 0 Then
            '        commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '    Else
            '        commandAR.Parameters.AddWithValue("@SalesMan", "")
            '    End If
            '    'commandAR.Parameters.AddWithValue("@ItemType", "")
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If

            'If Convert.ToDecimal(txtGSTAmount.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup,  ContractNo, ModuleName, BillingPeriod, InvoiceType, SalesMan, GLType, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @BillingPeriod, @InvoiceType, @SalesMan, @GLType,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()

            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '    End If

            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)
            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@GLCode", txtGSTOutputCode.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtGSTOutputDescription.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtGSTAmount.Text))
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '    commandAR.Parameters.AddWithValue("@InvoiceType", "Service")
            '    commandAR.Parameters.AddWithValue("@GLType", "GSTOut")

            '    If ddlSalesmanBilling.SelectedIndex > 0 Then
            '        commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '    Else
            '        commandAR.Parameters.AddWithValue("@SalesMan", "")
            '    End If
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If


            ''Start:Loop thru' Credit values


            'Dim commandValues As MySqlCommand = New MySqlCommand

            'commandValues.CommandType = CommandType.Text
            ''commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            'commandValues.CommandText = "SELECT *  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            'commandValues.Connection = conn

            'Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            'Dim dtValues As New DataTable
            'dtValues.Load(drValues)

            'For Each row As DataRow In dtValues.Rows

            '    If Convert.ToDecimal(row("ValueBase")) > 0.0 Then
            '        'qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup, ModuleName, ItemCode, ServiceRecordNo, "
            '        qryAR = "INSERT INTO tblAR(  VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount,  "
            '        qryAR = qryAR + " CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup,  BillingPeriod, "
            '        qryAR = qryAR + " ModuleName, ItemCode, ServiceRecordNo, ServiceDate, InvoiceType, SalesMan, ItemType, GSTType, GSTrate,  "
            '        qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '        'qryAR = qryAR + " (@VoucherNumber, @AccountId, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @ModuleName, @ItemCode, @ServiceRecordNo, "
            '        qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount,  "
            '        qryAR = qryAR + " @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @BillingPeriod, "
            '        qryAR = qryAR + " @ModuleName, @ItemCode, @ServiceRecordNo, @ServiceDate, @InvoiceType, @SalesMan, @ItemType,  @GSTType, @GSTrate,"
            '        qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '        commandAR.CommandText = qryAR
            '        commandAR.Parameters.Clear()

            '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '        commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '        If txtInvoiceDate.Text.Trim = "" Then
            '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '        Else
            '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '        End If

            '        commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)
            '        commandAR.Parameters.AddWithValue("@ContractNo", row("CostCode"))
            '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", 0)
            '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '        commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
            '        commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
            '        commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
            '        commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ValueBase")))
            '        commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '        commandAR.Parameters.AddWithValue("@ServiceStatus", row("ServiceStatus"))
            '        commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
            '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '        commandAR.Parameters.AddWithValue("@ItemCode", row("ItemCode"))
            '        commandAR.Parameters.AddWithValue("@ServiceRecordNo", row("RefType"))

            '        'If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
            '        'Else
            '        '    commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(row("ServiceDate")).ToString("yyyy-MM-dd"))
            '        'End If
            '        commandAR.Parameters.AddWithValue("@InvoiceType", "Service")

            '        If ddlSalesmanBilling.SelectedIndex > 0 Then
            '            commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '        Else
            '            commandAR.Parameters.AddWithValue("@SalesMan", "")
            '        End If

            '        commandAR.Parameters.AddWithValue("@ItemType", row("SubCode"))
            '        commandAR.Parameters.AddWithValue("@GSTType", row("GST"))
            '        commandAR.Parameters.AddWithValue("@GSTRate", row("GSTRate"))

            '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatprocedure.Text))

            '        commandAR.Connection = conn
            '        commandAR.ExecuteNonQuery()

            '    End If
            '    'Start: Update tblServiceRecord
            '    If row("ItemCode") = "IN-DEF" Or row("ItemCode") = "IN-SRV" Then
            '        Dim command4 As MySqlCommand = New MySqlCommand
            '        command4.CommandType = CommandType.Text

            '        If row("RefType") <> "--SELECT--" Then
            '            UpdateServiceRecord(row("RefType"), 0, "Edit")
            '        End If

            '        'UpdateServiceRecord(row("RefType"), 0, "Edit")

            '        'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '" & txtInvoiceNo.Text & "' where Rcno= @Rcno "
            '        ''Dim qry4 As String = "Update tblservicerecord Set BillYN = 'Y' where Rcno= @Rcno "

            '        'command4.CommandText = qry4
            '        'command4.Parameters.Clear()

            '        'command4.Parameters.AddWithValue("@Rcno", row("RcnoServiceRecord"))
            '        'command4.Connection = conn
            '        'command4.ExecuteNonQuery()

            '    End If

            'Next row

            ''End: Loop thru' Credit Values




            'SQLDSInvoice.SelectCommand = txt.Text
            'SQLDSInvoice.DataBind()
            ''GridView1.DataBind()






            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)


            'MakeMeNullBillingDetails()
            'MakeMeNull()
            'DisableControls()
            'FirstGridViewRowGL()



            ''''''''''''''' Insert tblAR

            lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"

            'End If
            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            updpnlServiceRecs.Update()
            AccessControl()

            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnPost_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub UpdateServiceRecord(ServiceRecordNo As String, PriceWithDisc As Decimal, ContractNo As String, EditDelete As String)
        Try
            'Dim query As String
            Dim command As MySqlCommand = New MySqlCommand
            Dim TotalBillamt As Decimal
            Dim TotalBilledamt As Decimal
            Dim TotalCNAmt As Decimal
            Dim Billed As String

            Dim MaxContractdate As Date

            TotalBillamt = 0.0
            TotalBilledamt = 0.0
            TotalCNAmt = 0.0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''''''''''''''''''''''''
            Dim commandBillAmount As MySqlCommand = New MySqlCommand
            commandBillAmount.CommandType = CommandType.Text
            commandBillAmount.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where RecordNo = '" & ServiceRecordNo & "'"
            'commandBilledAmt.CommandText = "SELECT sum(PriceWithDisc) as TotalBilledAmount FROM tblSalesDetail  where RefType= '" & ServiceRecordNo & "'"

            commandBillAmount.Connection = conn

            Dim dr1 As MySqlDataReader = commandBillAmount.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                TotalBillamt = dt1.Rows(0)("BillAmount").ToString
            End If

            Dim commandBilledAmt As MySqlCommand = New MySqlCommand
            commandBilledAmt.CommandType = CommandType.Text
            'commandBilledAmt.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where Rcno=" & RcnoServiceRecord
            commandBilledAmt.CommandText = "SELECT ifnull(sum(A.ValueBase),0) as TotalBilledAmount FROM tblSalesDetail A, tblSales B  where A.InvoiceNumber = B.InvoiceNumber and B.PostStatus = 'P' and A.RefType= '" & ServiceRecordNo & "'"

            commandBilledAmt.Connection = conn

            Dim dr As MySqlDataReader = commandBilledAmt.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                TotalBilledamt = dt.Rows(0)("TotalBilledAmount").ToString
            End If


            'Dim commandCNAmt As MySqlCommand = New MySqlCommand
            'commandCNAmt.CommandType = CommandType.Text
            ''commandBilledAmt.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where Rcno=" & RcnoServiceRecord
            'commandCNAmt.CommandText = "SELECT sum(CNValue) as TotalCNAmount FROM tblcndet  where RefType= '" & ServiceRecordNo & "'"

            'commandCNAmt.Connection = conn

            'Dim drCNAmt As MySqlDataReader = commandCNAmt.ExecuteReader()
            'Dim dtCNAmt As New DataTable
            'dtCNAmt.Load(drCNAmt)

            'If String.IsNullOrEmpty(dtCNAmt.Rows(0)("TotalCNAmount").ToString) = False Then
            '    TotalCNAmt = dtCNAmt.Rows(0)("TotalCNAmount").ToString
            'End If
            ''''''''''''''''''''''''''''''''''''''

            'If Convert.ToDecimal(TotalBillamt) = Convert.ToDecimal(TotalBilledamt) - Convert.ToDecimal(TotalCNAmt) Then
            If Convert.ToDecimal(TotalBillamt) = Convert.ToDecimal(TotalBilledamt) Then
                Billed = "Y"
            Else
                Billed = "N"
            End If

            command.CommandType = CommandType.Text
            Dim query As String
            query = ""

            If EditDelete = "Edit" Then
                query = "Update tblservicerecord Set BillYN = '" & Billed & "', BilledAmt = " & Convert.ToDecimal(TotalBilledamt) & ", BillNo = '" & txtInvoiceNo.Text & "' where RecordNo= '" & ServiceRecordNo & "'"
            ElseIf EditDelete = "Delete" Then
                query = "Update tblservicerecord Set BillYN = 'N', BilledAmt = " & Convert.ToDecimal(TotalBilledamt) & ", BillNo = '' where RecordNo= '" & ServiceRecordNo & "'"
            ElseIf EditDelete = "UnPost" Then
                query = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(TotalBilledamt) - PriceWithDisc & ", BillNo = '' where RecordNo= '" & ServiceRecordNo & "'"
            End If

            command.CommandText = query
            'command.Parameters.Clear()

            'command.Parameters.AddWithValue("@Rcno", RcnoServiceRecord)
            command.Connection = conn
            command.ExecuteNonQuery()


            ''''''''''''''''''''''''''
            '''''''''''''''''''''''''''''''''''''
            Dim commandMaxContractDate As MySqlCommand = New MySqlCommand
            commandMaxContractDate.CommandType = CommandType.Text
            commandMaxContractDate.CommandText = "SELECT a.SalesDate, b.ValueBase from tblSales a, b.tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and a.PostStatus = 'P' and b.CostCode = '" & ContractNo & "' order by a.salesdate desc limit 1"
            'commandBilledAmt.CommandText = "SELECT sum(PriceWithDisc) as TotalBilledAmount FROM tblSalesDetail  where RefType= '" & ServiceRecordNo & "'"

            commandMaxContractDate.Connection = conn

            Dim drMaxContractDate As MySqlDataReader = commandMaxContractDate.ExecuteReader()
            Dim dtMaxContractDate As New DataTable
            dtMaxContractDate.Load(drMaxContractDate)

            If dtMaxContractDate.Rows.Count > 0 Then
                command.CommandType = CommandType.Text

                MaxContractdate = dtMaxContractDate.Rows(0)("SalesDate")
                query = "Update tblContract Set LastBillDate = @LastBilldate, LastBillAmount=@LastBillAmount where ContractNo = @ContractNo "
                command.CommandText = query
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@LastBilldate", Convert.ToDateTime(dtMaxContractDate.Rows(0)("SalesDate")).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@LastBillAmount", dtMaxContractDate.Rows(0)("ValueBase"))
                command.Parameters.AddWithValue("@ContractNo", ContractNo)
                command.Connection = conn
                command.ExecuteNonQuery()
            Else
                query = "Update tblContract Set LastBillDate = @LastBilldate where ContractNo = @ContractNo "
                command.CommandText = query
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@LastBilldate", DBNull.Value)
                command.Parameters.AddWithValue("@ContractNo", ContractNo)
                command.Connection = conn
                command.ExecuteNonQuery()
            End If

            ''''''''''''''''''''''''
            command.Dispose()
            conn.Close()
            conn.Dispose()
            commandBillAmount.Dispose()
            commandBilledAmt.Dispose()
            dt.Dispose()
            dt1.Dispose()
            dtMaxContractDate.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION UpdateServiceRecord", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub
    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        txtMode.Text = ""
        'txtMode.Text = "View"
        MakeMeNullBillingDetails()
        MakeMeNull()
        DisableControls()

        ''   txt.Text = "select * from tblasset where rcno<>0;"
        ''SqlDataSource1.SelectCommand = "SELECT * FROM tblcompany WHERE  Inactive=0 order by AccountId desc limit 100;"
        ''SqlDataSource1.DataBind()
        'SQLDSContract.DataBind()
        'GridView1.DataBind()
    End Sub

    Protected Sub btnReceipts_Click(sender As Object, e As EventArgs) Handles btnReceipts.Click

        If chkQReceiptAccess.Checked = True And chkReceiptAccess.Checked = True Then
            If Convert.ToDecimal(txtBalanceBase.Text) > 0.0 Then

                '''''''''''''''''''''''
                txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
                txtAccountNameQR.Text = txtAccountName.Text
                'txtReceiptDateQR.Text = txtInvoiceDate.Text
                txtReceivedAmountQR.Text = txtBalanceBase.Text

                If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
                    txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
                End If
                updPnlQR.Update()

                If String.IsNullOrEmpty(txtCompanyGroup.Text) = True Then
                    ddlCompanyGrpII.SelectedIndex = 0
                    ddlCompanyGrpII.Enabled = True
                Else
                    'ddlCompanyGrpII.Text = txtCompanyGroup.Text
                    'ddlCompanyGrpII.Enabled = False

                End If

                If String.IsNullOrEmpty(txtAccountType.Text) = True Then
                    ddlContactType.SelectedIndex = 0
                    ddlContactType.Enabled = True
                Else
                    ddlContactType.Text = txtAccountType.Text
                    ddlContactType.Enabled = False
                End If


                txtAccountIdII.Text = txtAccountIdBilling.Text
                txtClientNameII.Text = txtAccountName.Text


                txtAccountIdII.Enabled = False
                txtClientNameII.Enabled = False

                updpnlInvoiceRecs.Update()
                updpnlImportInovice.Update()


                '''''''''''''''''
                Dim sqlQRRcpt As String = ""
                sqlQRRcpt = "SELECT a.PostStatus, a.BankStatus, a.GlStatus, a.ReceiptNumber, a.ReceiptDate, a.AccountId, a.AppliedBase, a.GSTAmount, a.BaseAmount, "
                sqlQRRcpt = sqlQRRcpt + " a.ReceiptFrom, a.ReceiptDate, a.NetAmount, GlPeriod, a.CompanyGroup, a.ContactType, a.Cheque, a.ChequeDate, a.BankId, "
                sqlQRRcpt = sqlQRRcpt + " a.LedgerCode, a.LedgerName, a.Comments, a.PaymentType, a.Salesman, a.CreatedBy, a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.Rcno, a.Location "
                sqlQRRcpt = sqlQRRcpt + " FROM tblrecv a, tblRecvDet b where ( a.PostStatus = 'P')  "
                sqlQRRcpt = sqlQRRcpt + " and a.ReceiptNumber = b.ReceiptNumber"
                sqlQRRcpt = sqlQRRcpt + " and b.Reftype = '" & txtInvoiceNo.Text.Trim & "'"
                'sqlQRRcpt = sqlQRRcpt & " and a.Location = '" & txtLocation.Text & "'"
                sqlQRRcpt = sqlQRRcpt + " ORDER BY a.Rcno DESC, a.ReceiptFrom"


                SQLDSReceipt.SelectCommand = sqlQRRcpt

                '''''''''''''''''''''''

                '''''''''''''''''''''''''' populate QR grid

                'Start: Billing Details

                Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRowLoc As DataRow = Nothing

                For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
                    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                    drCurrentRowLoc = dtScdrLoc.NewRow()
                    ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
                    grvBillingDetailsQR.DataSource = dtScdrLoc
                    grvBillingDetailsQR.DataBind()

                    SetPreviousDataBillingDetailsRecsQR()
                Next i

                FirstGridViewRowBillingDetailsRecsQR()

                'Start: From tblBillingDetailItem

                txtReceiptAmt.Text = "0.00"

                Dim rowselected As Integer
                rowselected = 0

                AddNewRowBillingDetailsRecsQR()
                Dim qry As String
                qry = ""

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text
                'Header
                rowselected = rowselected + 1


                Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)
                TextBoxItemTypeGV.Text = "ARIN"


                Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                TextBoxtxtInvoiceNoGV.Text = Convert.ToString(txtInvoiceNo.Text)

                Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                TextBoxInvoiceDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).ToString("dd/MM/yyyy")


                Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(txtNetInvoiceAmount.Text)).ToString("N2")

                Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtTotalReceiptAmount.Text)).ToString("N2")
                TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")

                Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
                TextBoxTotalCNAmt.Text = (Convert.ToDecimal(txtTotalCNAmount.Text)).ToString("N2")


                Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
                TextBoxOtherCode.Text = txtARCode.Text

                Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
                TextBoxGLDescription.Text = txtARDescription.Text

                Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                TextBoxReceiptAmt.Text = txtBalanceBase.Text

                txtReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
                txtReceivedAmountQR.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
                UpdatePanel4.Update()

                btnSave.Enabled = True
                updpnlBillingDetailsQR.Update()
                updPanelSave.Update()
                updpnlInvoiceRecs.Update()
                btnSaveQR.Enabled = True
                'mdlQuickReceipt.Show()
                txtReceivedAmountQR.Focus()

                '''''''''''''''''''''''''' populate QR grid
                mdlQuickReceipt.Show()


                ''''''''''''''''''''''''''
            ElseIf Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            ElseIf Convert.ToDecimal(txtBalanceBase.Text) < 0.0 And Val(txtTotalReceipts.Text) > 0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If
        ElseIf chkQReceiptAccess.Checked = False And chkReceiptAccess.Checked = True Then

            If Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If

            If Convert.ToDecimal(txtBalanceBase.Text) < 0.0 And Val(txtTotalReceipts.Text) > 0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If

        End If


        'If chkQReceiptAccess.Checked = True And chkReceiptAccess.Checked = True Then
        '    'If Convert.ToDecimal(txtTotalReceiptAmount.Text) > 0 Then
        '    If Convert.ToInt32(txtTotReceipts.Text) > 0 Then
        '        Session("receiptfrom") = "invoice"

        '        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '            Session("invoiceno") = txtInvoiceNo.Text
        '        End If

        '        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '            'Session("contractno") = txtContractNo.Text
        '            'txt.Text = SQLDSContract.SelectCommand
        '            Session("gridsqlinv") = txt.Text
        '            Session("strcondition") = txtCondition.Text
        '            Session("rcnoinv") = txtRcno.Text
        '            Session("AccountId") = txtAccountIdBilling.Text
        '            Session("AccountName") = txtAccountName.Text
        '            Session("ContactType") = ddlContactType.Text
        '            Session("CompanyGroup") = txtCompanyGroup.Text
        '            Session("Salesman") = ddlSalesmanBilling.Text
        '            'Session("Scheduler") = ddlScheduler.Text
        '            'Session("Team") = txtTeam.Text
        '            'Session("InCharge") = txtTeamIncharge.Text
        '            'Session("ServiceBy") = txtServiceBy.Text
        '            'Session("ScheduleType") = ddlScheduleType.Text
        '            '''''''''''''''''''''''''''''
        '        End If

        '        Response.Redirect("Receipts.aspx")


        '        'ElseIf Convert.ToDecimal(txtTotalReceiptAmount.Text) = 0 Then
        '    ElseIf Convert.ToInt32(txtTotReceipts.Text) = 0 Then

        '        txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
        '        txtAccountNameQR.Text = txtAccountName.Text
        '        'txtReceiptDateQR.Text = txtInvoiceDate.Text
        '        txtReceivedAmountQR.Text = txtBalanceBase.Text

        '        If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
        '            txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
        '        End If
        '        updPnlQR.Update()

        '        If String.IsNullOrEmpty(txtCompanyGroup.Text) = True Then
        '            ddlCompanyGrpII.SelectedIndex = 0
        '            ddlCompanyGrpII.Enabled = True
        '        Else
        '            ddlCompanyGrpII.Text = txtCompanyGroup.Text
        '            ddlCompanyGrpII.Enabled = False

        '        End If

        '        If String.IsNullOrEmpty(txtAccountType.Text) = True Then
        '            ddlContactType.SelectedIndex = 0
        '            ddlContactType.Enabled = True
        '        Else
        '            ddlContactType.Text = txtAccountType.Text
        '            ddlContactType.Enabled = False
        '        End If


        '        txtAccountIdII.Text = txtAccountIdBilling.Text
        '        txtClientNameII.Text = txtAccountName.Text


        '        txtAccountIdII.Enabled = False
        '        txtClientNameII.Enabled = False

        '        updpnlInvoiceRecs.Update()
        '        updpnlImportInovice.Update()




        '        '''''''''''''''''''''''''' populate QR grid

        '        'Start: Billing Details

        '        Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
        '        Dim drCurrentRowLoc As DataRow = Nothing

        '        For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
        '            dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
        '            drCurrentRowLoc = dtScdrLoc.NewRow()
        '            ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
        '            grvBillingDetailsQR.DataSource = dtScdrLoc
        '            grvBillingDetailsQR.DataBind()

        '            SetPreviousDataBillingDetailsRecsQR()
        '        Next i

        '        FirstGridViewRowBillingDetailsRecsQR()

        '        'Start: From tblBillingDetailItem

        '        txtReceiptAmt.Text = "0.00"

        '        Dim rowselected As Integer
        '        rowselected = 0

        '        AddNewRowBillingDetailsRecsQR()
        '        Dim qry As String
        '        qry = ""

        '        Dim command As MySqlCommand = New MySqlCommand
        '        command.CommandType = CommandType.Text
        '        'Header
        '        rowselected = rowselected + 1

        '        Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
        '        TextBoxtxtInvoiceNoGV.Text = Convert.ToString(txtInvoiceNo.Text)

        '        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
        '        TextBoxInvoiceDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).ToString("dd/MM/yyyy")


        '        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
        '        TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(txtNetInvoiceAmount.Text)).ToString("N2")

        '        Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
        '        'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtTotalReceiptAmount.Text)).ToString("N2")
        '        TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")

        '        Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
        '        TextBoxTotalCNAmt.Text = (Convert.ToDecimal(txtTotalCNAmount.Text)).ToString("N2")


        '        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
        '        TextBoxOtherCode.Text = txtARCode.Text

        '        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
        '        TextBoxGLDescription.Text = txtARDescription.Text

        '        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
        '        TextBoxReceiptAmt.Text = txtBalanceBase.Text

        '        txtReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
        '        txtReceivedAmountQR.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
        '        UpdatePanel4.Update()

        '        btnSave.Enabled = True
        '        updpnlBillingDetailsQR.Update()
        '        updPanelSave.Update()
        '        updpnlInvoiceRecs.Update()
        '        btnSaveQR.Enabled = True
        '        'mdlQuickReceipt.Show()
        '        txtReceivedAmountQR.Focus()

        '        '''''''''''''''''''''''''' populate QR grid
        '        mdlQuickReceipt.Show()
        '    End If

        'End If


        'If chkQReceiptAccess.Checked = False And chkReceiptAccess.Checked = True Then

        '    Session("receiptfrom") = "invoice"

        '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '        Session("invoiceno") = txtInvoiceNo.Text
        '    End If

        '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '        'Session("contractno") = txtContractNo.Text
        '        'txt.Text = SQLDSContract.SelectCommand
        '        Session("gridsqlinv") = txt.Text
        '        Session("strcondition") = txtCondition.Text
        '        Session("rcnoinv") = txtRcno.Text
        '        Session("AccountId") = txtAccountIdBilling.Text
        '        Session("AccountName") = txtAccountName.Text
        '        Session("ContactType") = ddlContactType.Text
        '        Session("CompanyGroup") = txtCompanyGroup.Text
        '        Session("Salesman") = ddlSalesmanBilling.Text
        '        '''''''''''''''''''''''''''''
        '    End If

        '    Response.Redirect("Receipts.aspx")
        'End If

    End Sub

    Protected Sub btnClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnClientSearch.Click
        lblAlert.Text = ""

        Try
            'txtSearch.Text = "InvoiceSearch"
            'If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
            '    txtPopUpClient.Text = ""
            '    txtPopUpClient.Text = txtAccountIdSearch.Text
            '    txtPopupClientSearch.Text = txtPopUpClient.Text

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%'  or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    Else
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%'  or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    End If


            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    updPanelInvoice.Update()
            'Else
            '    txtPopUpClient.Text = ""

            '    txtPopUpClient.Text = ""
            '    'txtPopUpClient.Text = txtAccountIdSearch.Text
            '    txtPopupClientSearch.Text = ""

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location = in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    Else
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    End If


            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    updPanelInvoice.Update()
            'End If
            'txtInvoiceSearch.Text = SqlDSClient.SelectCommand
            'mdlPopUpClient.Show()


            txtSearch.Text = "InvoiceSearch"
            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                txtPopUpClient2.Text = ""
                txtPopUpClient2.Text = txtAccountIdSearch.Text
                txtPopupClientSearch2.Text = txtPopUpClient2.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.BillStreet, A.BillBuilding, A.BillCity, A.BillState, A.BillCountry, A.BillPostal, A.BillContact1, A.AccountID,  A.BillingName From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%'  or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') order by A.BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContact1, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by A.BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContact, A.AccountID, A.BillingName From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%' or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillStreet, C.BillBuilding, C.BillCity, C.BillState, C.BillCountry, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%'  order by A.BillingName"
                    End If

                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%'  or A.BillContactPerson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID,  C.BillingName From tblperson C  where  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A   where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%' or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If
                End If

                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient2.Text = ""

                txtPopUpClient2.Text = ""
                'txtPopUpClient.Text = txtAccountIdSearch.Text
                txtPopupClientSearch.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch2.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location = in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch2.Text + "%' or B.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If

                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName, Postal, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostalSvc, D.BillContactPerson, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A WHERE (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%'  or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID,  C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%'  or C.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If

                End If


                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            End If
            txtInvoiceSearch.Text = SqlDSClient2.SelectCommand
            mdlPopUpClient2.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClientSearch_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ddlCreditTerms_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlCreditTerms.SelectedIndexChanged
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT TermsDay FROM tblterms where Terms='" & ddlCreditTerms.Text & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString
                txtDueDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).AddDays(Convert.ToInt32(txtCreditDays.Text))

            End If

            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If

            dt.Dispose()
            commandDocControl.Dispose()
            dr.Close()
            'conn.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ddlCreditTerms_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtInvoiceDate_TextChanged(sender As Object, e As EventArgs)
        txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
    End Sub

    Protected Sub btnSelect_Click(sender As Object, e As EventArgs) Handles btnSelect.Click
        Try
            Dim rowIndex As Integer = 0
            Dim Total As Decimal
            Dim TotalWithGST As Decimal
            Dim TotalDiscAmt As Decimal
            Dim TotalGSTAmt As Decimal
            Dim TotalPriceWithDiscountAmt As Decimal

            Dim TextBoxGSTAmt As TextBox
            Dim TextBoxTotalPrice As TextBox
            Dim TextBoxTotalPriceWithGST As TextBox
            Dim TextBoxDiscAmt As TextBox
            Dim TextBoxPriceWithDisc As TextBox

            Total = 0.0
            TotalWithGST = 0.0
            TotalDiscAmt = 0.0
            TotalGSTAmt = 0.0
            TotalPriceWithDiscountAmt = 0.0

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)


            If (table.Rows.Count > 0) Then
                FirstGridViewRowBillingDetailsRecs()
                For i As Integer = 0 To (table.Rows.Count) - 1

                    Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)

                    If (TextBoxchkSelect.Checked = True) Then

                        Dim TextBoxInvoiceAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxDiscountAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtGSTAmountGV"), TextBox)
                        Dim TextBoxNetAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtNetAmountGV"), TextBox)

                        Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtAccountNameGV"), TextBox)
                        Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillAddress1GV"), TextBox)
                        Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillBuildingGV"), TextBox)
                        Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillStreetGV"), TextBox)
                        Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillCountryGV"), TextBox)
                        Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillPostalGV"), TextBox)
                        Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtOurReferenceGV"), TextBox)
                        Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtYourReferenceGV"), TextBox)
                        Dim lblid10 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtPoNoGV"), TextBox)
                        Dim lblid11 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtCreditTermsGV"), TextBox)
                        Dim lblid12 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                        Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)

                        Dim lblid16 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                        Dim lblid17 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim lblid18 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoServicebillingdetailGV"), TextBox)
                        Dim lblid19 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContactTypeGV"), TextBox)
                        Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtInvoiceDateGV"), TextBox)

                        Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)

                        'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)

                        Dim lblid15 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                        'Dim lblid24 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim lblid25 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtStatusGV"), TextBox)

                        Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContractNoGV"), TextBox)
                        'Dim lblid26 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContractNoGV"), TextBox)

                        If txtMode.Text = "NEW" Then
                            txtAccountType.Text = lblid19.Text
                            txtCompanyGroup.Text = lblid16.Text
                            'txtInvoiceDate.Text = lblid20.Text
                            txtAccountIdBilling.Text = lblid1.Text
                            txtAccountName.Text = lblid2.Text
                            txtBillAddress.Text = lblid3.Text
                            txtBillBuilding.Text = lblid4.Text
                            txtBillStreet.Text = lblid5.Text
                            txtBillCountry.Text = lblid6.Text
                            txtBillPostal.Text = lblid7.Text
                            txtOurReference.Text = lblid8.Text
                            txtYourReference.Text = lblid9.Text
                            txtPONo.Text = lblid10.Text
                            txtContractNo.Text = lblid22.Text
                        End If

                        ''''''''''''''''''''''''''''''''''''''''''''''''

                        Dim conn As MySqlConnection = New MySqlConnection()

                        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        If conn.State = ConnectionState.Open Then
                            conn.Close()
                            conn.Dispose()
                        End If
                        conn.Open()
                        Dim sql As String
                        sql = ""

                        Dim command21 As MySqlCommand = New MySqlCommand

                        sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"

                        'Dim command1 As MySqlCommand = New MySqlCommand
                        command21.CommandType = CommandType.Text
                        command21.CommandText = sql
                        command21.Connection = conn

                        Dim dr21 As MySqlDataReader = command21.ExecuteReader()

                        Dim dt21 As New DataTable
                        dt21.Load(dr21)

                        If dt21.Rows.Count > 0 Then
                            If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                            If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
                        End If

                        '''''''''''''''''''''''''''''''''''
                        sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"

                        Dim command23 As MySqlCommand = New MySqlCommand
                        command23.CommandType = CommandType.Text
                        command23.CommandText = sql
                        command23.Connection = conn

                        Dim dr23 As MySqlDataReader = command23.ExecuteReader()

                        Dim dt23 As New DataTable
                        dt23.Load(dr23)

                        If dt23.Rows.Count > 0 Then
                            If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                            If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
                        End If



                        If conn.State = ConnectionState.Open Then
                            conn.Close()
                            conn.Dispose()
                        End If

                        command21.Dispose()
                        command23.Dispose()
                        dt21.Dispose()
                        dt23.Dispose()

                        'conn.Close()

                        Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                        Dim drCurrentRowLoc As DataRow = Nothing

                        'If String.IsNullOrEmpty(txtRcnoServiceRecord.Text) = True Or txtRcnoServiceRecord.Text = "0" Then


                        '    For j As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        '        dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                        '        drCurrentRowLoc = dtScdrLoc.NewRow()
                        '        ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                        '        grvBillingDetails.DataSource = dtScdrLoc
                        '        grvBillingDetails.DataBind()

                        '        SetPreviousDataBillingDetailsRecs()
                        '    Next j
                        '    FirstGridViewRowBillingDetailsRecs()
                        'End If


                        'Start: Populate the grid
                        'txtRcnoServiceRecord.Text = lblid14.Text
                        'txtRcnoServiceRecordDetail.Text = lblid15.Text
                        'txtContractNo.Text = lblid22.Text
                        'txtRcnoInvoice.Text = lblid17.Text
                        'txtRowSelected.Text = rowindex1.ToString


                        'txtRcnoservicebillingdetail.Text = lblid18.Text
                        'txtRcnotblServiceBillingDetail.Text = lblid18.Text


                        If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                            txtRcnoServiceBillingDetail.Text = "0"
                        End If


                        If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                            txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
                        End If
                        'Start: Billing Details

                        'Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                        'Dim drCurrentRowLoc As DataRow = Nothing

                        'For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        '    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                        '    drCurrentRowLoc = dtScdrLoc.NewRow()
                        '    ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                        '    grvBillingDetails.DataSource = dtScdrLoc
                        '    grvBillingDetails.DataBind()

                        '    SetPreviousDataBillingDetailsRecs()
                        'Next i

                        'Dim Query As String
                        'Dim Query1 As String

                        'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

                        'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtUOMGV"), DropDownList)
                        'Query1 = "Select * from tblunitms order by UnitMs"
                        'PopulateDropDownList(Query1, "UnitMs", "UnitMs", TextBoxUOM1)



                        'If Convert.ToInt64(txtRcnoServiceBillingDetail.Text) = 0 Then
                        'If txtMode.Text = "NEW" Then
                        If Convert.ToInt64(lblid18.Text) = 0 Then
                            Dim dt As New DataTable

                            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                            If conn.State = ConnectionState.Open Then
                                conn.Close()
                                conn.Dispose()
                            End If
                            conn.Open()
                            'Dim command1 As MySqlCommand = New MySqlCommand
                            'command1.CommandType = CommandType.Text

                            'If lblid25.Text = "P" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                            'ElseIf lblid25.Text = "O" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                            'End If

                            'command1.Connection = conn

                            'Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                            'Dim dt1 As New DataTable
                            'dt1.Load(dr1)
                            'AddNewRowBillingDetailsRecs()

                            'Dim totrec As Integer
                            'totrec = 0

                            'If grvBillingDetails.Rows.Count = 1 Then
                            '    totrec = 0
                            'Else
                            '    totrec = grvBillingDetails.Rows.Count
                            '    totrec = totrec - 1
                            'End If
                            AddNewRowBillingDetailsRecs()
                            'totrec = grvBillingDetails.Rows.Count - 1
                            'AddNewRowBillingDetailsRecs()
                            'If (grvBillingDetails.Rows.Count > totrec + 1) Then


                            'AddNewRowWithDetailRecBillingDetailsRecs()
                            'AddNewRowBillingDetailsRecs()


                            Dim command1 As MySqlCommand = New MySqlCommand
                            command1.CommandType = CommandType.Text

                            'If lblid25.Text = "P" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                            'ElseIf lblid25.Text = "O" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                            'End If


                            If lblid25.Text = "P" Then
                                command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                            ElseIf lblid25.Text = "O" Then
                                command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                            End If
                            command1.Connection = conn
                            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                            Dim dt1 As New DataTable
                            dt1.Load(dr1)

                            Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                            TextBoxItemType.Text = "SERVICE"
                            'TextBoxItemType.Enabled = False

                            Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                            TextBoxItemCode.Text = dt1.Rows(0)("ProductCode").ToString()
                            'TextBoxItemCode.Enabled = False

                            Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                            'TextBoxItemDescription.Text = ""
                            TextBoxItemDescription.Text = dt1.Rows(0)("Description").ToString()


                            Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                            TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()


                            Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                            TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                            Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            TextBoxUOM.Text = "--SELECT--"

                            Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                            TextBoxQty.Text = "1"
                            TextBoxQty.Enabled = False

                            TextBoxPriceWithDisc = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                            TextBoxPriceWithDisc.Text = lblid13.Text

                            Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                            TextBoxPricePerUOM.Text = lblid13.Text

                            Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                            TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                            'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                            TextBoxGSTAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                            TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))

                            TextBoxTotalPrice = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                            TextBoxTotalPrice.Text = lblid13.Text

                            TextBoxTotalPriceWithGST = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                            TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                            Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                            TextBoxContractNo.Text = Convert.ToString(txtContractNo.Text)

                            Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                            TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)


                            Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                            TextBoxDiscPerc.Text = Convert.ToString("0.00")

                            TextBoxDiscAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            TextBoxDiscAmt.Text = Convert.ToString("0.00")

                            Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                            TextBoxServiceRecord.Text = Convert.ToString(lblid15.Text)

                            'txtTotal.Text = Convert.ToDecimal(txtTotal.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                            'txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithGST.Text) + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)

                            'txtTotalDiscAmt.Text = (0.0).ToString("N2")
                            'txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")
                            'txtTotalWithDiscAmt.Text = Convert.ToDecimal(txtTotal.Text)

                            '''''''''''''''''''''
                            'Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(totrec).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                            'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                            'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                            'Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(totrec).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            'Query = "Select * from tblunitms order by UnitMs"
                            'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


                            Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                            TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                            TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                            txtAmountWithDiscount.Text = Total - TotalDiscAmt
                            TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                            TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            command1.Dispose()
                            dt1.Dispose()

                            rowIndex = rowIndex + 1
                        Else

                            'Start: From tblBillingDetailItem

                            'Dim Total As Decimal
                            'Dim TotalWithGST As Decimal
                            'Dim TotalDiscAmt As Decimal
                            'Dim TotalGSTAmt As Decimal
                            'Dim TotalPriceWithDiscountAmt As Decimal


                            'Total = 0.0
                            'TotalWithGST = 0.0
                            'TotalDiscAmt = 0.0
                            'TotalGSTAmt = 0.0
                            'TotalPriceWithDiscountAmt = 0.0

                            'Dim conn As MySqlConnection = New MySqlConnection()

                            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                            If conn.State = ConnectionState.Open Then
                                conn.Close()
                                conn.Dispose()
                            End If
                            conn.Open()

                            Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand
                            cmdServiceBillingDetailItem.CommandType = CommandType.Text
                            cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblservicebillingdetailitem where Rcnoservicebillingdetail=" & Convert.ToInt32(lblid18.Text)
                            cmdServiceBillingDetailItem.Connection = conn

                            Dim drcmdServiceBillingDetailItem As MySqlDataReader = cmdServiceBillingDetailItem.ExecuteReader()
                            Dim dtServiceBillingDetailItem As New DataTable
                            dtServiceBillingDetailItem.Load(drcmdServiceBillingDetailItem)

                            Dim TotDetailRecordsLoc = dtServiceBillingDetailItem.Rows.Count
                            If dtServiceBillingDetailItem.Rows.Count > 0 Then



                                Dim rowIndex1 = 0

                                For Each row As DataRow In dtServiceBillingDetailItem.Rows
                                    If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                                        AddNewRowBillingDetailsRecs()
                                        'AddNewRow()
                                    End If

                                    'If rowIndex = dtServiceBillingDetailItem.Rows.Count Then
                                    '    AddNewRowBillingDetailsRecs()
                                    'End If

                                    If rowIndex = grvBillingDetails.Rows.Count Then
                                        AddNewRowBillingDetailsRecs()
                                    End If


                                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                                    TextBoxItemType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemType"))

                                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                                    'TextBoxItemCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemCode"))

                                    TextBoxItemCode.Items.Clear()
                                    TextBoxItemCode.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemCode")))


                                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                                    TextBoxItemDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemDescription"))

                                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                                    TextBoxOtherCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("OtherCode"))

                                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtUOMGV"), DropDownList)
                                    'If String.IsNullOrEmpty(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM"))) = True Then

                                    'Else
                                    '    TextBoxUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM"))
                                    'End If

                                    TextBoxUOM.Items.Clear()
                                    TextBoxUOM.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM")))

                                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                                    TextBoxQty.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("Qty"))
                                    'TextBoxQty.Enabled = False

                                    Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                                    TextBoxPricePerUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("PricePerUOM"))


                                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                                    TextBoxDiscPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("DiscPerc"))

                                    TextBoxDiscAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                                    TextBoxDiscAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("DiscAmount"))


                                    TextBoxPriceWithDisc = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                                    TextBoxPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("PriceWithDisc"))


                                    Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                                    'TextBoxTaxType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TaxType"))

                                    'TextBoxTaxType.Items.Clear()
                                    'TextBoxTaxType.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TaxType")))


                                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                                    TextBoxGSTPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("GSTPerc"))

                                    TextBoxGSTAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                                    TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("GSTAmt"))

                                    TextBoxTotalPrice = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                                    TextBoxTotalPrice.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TotalPrice"))

                                    TextBoxTotalPriceWithGST = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                                    TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TotalPriceWithGST"))


                                    Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtServiceRecordGV"), TextBox)
                                    TextBoxServiceRecord.Text = Convert.ToString(lblid15.Text)


                                    Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                                    TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                                    TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                                    txtAmountWithDiscount.Text = Total - TotalDiscAmt
                                    TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                                    TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                                    'Dim Query As String

                                    'Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                                    'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                                    'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                                    'Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                                    'Query = "Select * from tblunitms order by UnitMs"
                                    'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


                                    Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                                    Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                                    If TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxQty1.Enabled = False
                                        TextBoxQty1.Text = "1.00"
                                        TextBoxItemType1.Enabled = False
                                    End If

                                    rowIndex = rowIndex + 1
                                    rowIndex1 = rowIndex1 + 1


                                Next row

                                'txtTotal.Text = Total.ToString("N2")
                                'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                                'txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                                'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")

                                'txtTotalDiscAmt.Text = 0.0
                                txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                                AddNewRowBillingDetailsRecs()
                                'rowIndex = rowIndex + 1
                            Else
                                FirstGridViewRowBillingDetailsRecs()
                                'FirstGridViewRowTarget()
                                'Dim Query As String
                                'Dim TextBoxTargetDesc As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                                'Query = "Select * from tblTarget"

                                'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
                            End If


                            'End: Detail Records


                            'End: From tblBillingDetailItem
                        End If

                        If txtMode.Text <> "NEW" Then
                            AddNewRowBillingDetailsRecs()
                        End If

                        grvBillingDetails.Enabled = True

                        btnSave.Enabled = False
                        If txtPostStatus.Text <> "P" Then
                            'btnSave.Enabled = True
                            btnSaveInvoice.Enabled = True
                        End If

                        updpnlServiceRecs.Update()

                        'End: Billing Details
                        updPanelSave.Update()
                        'End: Populate the grid



                        '''''''''''''''''''''''''''''''''''''''''''''''''



                        'If String.IsNullOrEmpty(TextBoxInvoiceAmount.Text) = True Then
                        '    TextBoxInvoiceAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscountAmount.Text) = True Then
                        '    TextBoxDiscountAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                        '    TextBoxGSTAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxNetAmount.Text) = True Then
                        '    TextBoxNetAmount.Text = "0.00"
                        'End If

                        'TotalInvoiceAmount = TotalInvoiceAmount + Convert.ToDecimal(TextBoxInvoiceAmount.Text)
                        'TotalDiscountAmount = TotalDiscountAmount + Convert.ToDecimal(TextBoxDiscountAmount.Text)

                        'TotalGSTAmount = TotalGSTAmount + Convert.ToDecimal(TextBoxGSTAmount.Text)
                        'TotalNetAmount = TotalNetAmount + Convert.ToDecimal(TextBoxNetAmount.Text)


                        'TextBoxGSTAmt.Text = "0.00"
                        'TextBoxTotalPrice.Text = "0.00"
                        'TextBoxTotalPriceWithGST.Text = "0.00"
                        'TextBoxDiscAmt.Text = "0.00"
                        'TextBoxPriceWithDisc.Text = "0.00"

                        'Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        'TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                        'TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                        ''txtAmountWithDiscount.Text =  Total - TotalDiscAmt
                        'TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                        'TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                        'rowIndex = rowIndex + 1
                    End If
                Next i

                txtTotal.Text = Total.ToString("N2")
                txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                txtTotalWithDiscAmt.Text = (Total - TotalDiscAmt).ToString("N2")
                txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                txtTotalWithGST.Text = TotalWithGST.ToString("N2")


                grvBillingDetails.Enabled = False
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnSelect_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub CheckUncheckAll(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvServiceRecDetails.HeaderRow.Cells(0).FindControl("CheckBox1"), CheckBox)
        For Each row As GridViewRow In grvServiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGV"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub

    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        If txtPopUpClient.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter client name", "str")
            Exit Sub
        End If

        Try
            '"SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc,  B.AccountID, B.ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, A.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Status = 'O' and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"


            If txtClientFrom.Text = "ImportService" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If


                txtImportService.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"
            End If

            If txtSearch.Text = "CustomerSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                txtCustomerSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If

            If txtSearch.Text = "InvoiceSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION txtPopUpClient_TextChanged", ex.Message.ToString, "")
        End Try
        'txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
    End Sub

    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click, btnPopUpClientResetSearch2.Click

        Try
            If txtSearch.Text = "InvoiceSearch" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where (A.Accountid is not null and A.Accountid <> '') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  (C.Accountid is not null and C.Accountid <> '')  order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson,  A.AccountID,  A.BillingName From tblCompany A  where  (A.Accountid is not null and A.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C where   (C.Accountid is not null and C.Accountid <> '') order by BillingName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient2.SelectCommand

            End If

            'If txtSearch.Text = "CustomerSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    Else
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    End If

            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            'End If

            'If txtClientFrom.Text = "ImportService" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    Else
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    End If


            '    txtImportService.Text = SqlDSClient.SelectCommand
            'End If


            'If txtSearch.Text = "InvoiceSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If
            '    txtInvoiceSearch.Text = SqlDSClient.SelectCommand

            'End If

            'If txtSearch.Text = "CustomerSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If
            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            'End If

            'If txtClientFrom.Text = "ImportService" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If

            '    txtImportService.Text = SqlDSClient.SelectCommand
            'End If


            SqlDSClient2.DataBind()
            gvClient2.DataBind()
            mdlPopUpClient2.Show()
            txtIsPopup.Text = "Client2"

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = ""
        txtClientFrom.Text = ""

        txtClientFrom.Text = "ImportService"
        txtSearch.Text = "ImportService"
        Try
            'If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
            '    lblAlert1.Text = "SELECT ACCOUNT TYPE TO PROCEED"

            '    mdlImportServices.Show()
            '    Exit Sub
            'End If


            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtAccountId.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                    End If
                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClient_Click", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub BtnLocation_Click(sender As Object, e As ImageClickEventArgs) Handles BtnLocation.Click
        mdlPopupLocation.Show()
    End Sub

    Protected Sub btnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        'If txtFrom.Text = "receiptfrom" Then
        '    Session("invoiceno") = lblInvoiceId1.Text
        '    Response.Redirect("InvoiceSchedule.aspx")
        'End If

        If String.IsNullOrEmpty(txtFrom2.Text) = True Then
            Response.Redirect("Home.aspx")
        End If

        If txtFrom2.Text = "schedule" Then
            Session("invoiceno") = lblInvoiceId1.Text
            Response.Redirect("InvoiceSchedule.aspx")
        End If

        If txtFrom2.Text = "consolidate" Then
            InsertIntoTblWebEventLog("INVOICE", "BTNBACK", lblInvoiceID1.Text, txtCreatedBy.Text)
            Session.Add("invoicefrom", "consolidate")
            Session("invoiceno") = lblInvoiceId1.Text
            Response.Redirect("CI.aspx")
        End If

        If txtFrom2.Text = "Corporate" Then
            Session.Add("customerfrom", "Corporate")
            Session.Add("armodule", "armodule")
            Response.Redirect("Company.aspx")
        End If

        If txtFrom2.Text = "Residential" Then
            Session.Add("customerfrom", "Residential")
            Session.Add("armodule", "armodule")
            Response.Redirect("Person.aspx")
        End If

        If txtFrom2.Text = "Consolidate" Then
            Session.Add("DocFrom", "Consolidate")
            Session.Add("armodule", "armodule")
            Response.Redirect("CI.aspx")
        End If
    End Sub



    Protected Sub rbtInvoiceType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rbtInvoiceType.SelectedIndexChanged
        ''Me.cpnlSearchServiceRecords.ClientState = False
        'If rbtInvoiceType.SelectedIndex = 0 Then

        '    'Me.cpnlSearchServiceRecords.ClientState = True
        '    'Me.cpnlSearchServiceRecords.Collapsed = True

        '    ''Me.cpnlSearchServiceRecords.ClientState = False
        '    ''Me.cpnlSearchServiceRecords.Enabled = False

        '    'Me.cpnlServiceBillingDetails.ClientState = True
        '    'Me.cpnlServiceBillingDetails.Collapsed = True

        '    'Me.cpnlInvoiceDetails.Collapsed = False
        '    'Me.cpnlServiceBillingDetails.ClientState = "False"


        '    btnClient1.Visible = True

        '    txtAccountType.BackColor = txtInvoiceDate.BackColor
        '    txtAccountType.Enabled = True
        'Else

        '    'Me.cpnlSearchServiceRecords.ClientState = False
        '    'Me.cpnlSearchServiceRecords.Collapsed = False

        '    'Me.cpnlServiceBillingDetails.Collapsed = True
        '    'Me.cpnlServiceBillingDetails.ClientState = "true"

        '    'Me.cpnlInvoiceDetails.Collapsed = True
        '    'Me.cpnlInvoiceDetails.ClientState = "true"

        '    'Me.cpnlSearchServiceRecords.Enabled = True
        '    'Me.cpnlServiceBillingDetails.Enabled = True

        '    btnClient1.Visible = False

        '    txtAccountIdBilling.Text = ""
        '    txtAccountName.Text = ""
        '    txtCompanyGroup.Text = ""

        '    txtBillAddress.Text = ""
        '    txtBillBuilding.Text = ""
        '    txtBillStreet.Text = ""
        '    txtAccountType.SelectedIndex = 0

        '    txtAccountType.BackColor = txtInvoiceNo.BackColor
        '    txtAccountType.Enabled = False
        'End If
        ''UpdatePanel1.Update()
        'updPanelInvoice.Update()
    End Sub

    Protected Sub btnClient1_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient1.Click
        Try
            lblAlert.Text = ""

            txtSearch.Text = "CustomerSearch"


            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = False Then
                txtPopUpClient.Text = ""

                txtPopUpClient.Text = txtAccountIdBilling.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,c.TaxIdentificationNo,c.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else

                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If

                'SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.CompanyID like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1 From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PersonID  like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName, LocationId"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName, LocationId"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup,c.TaxIdentificationNo,c.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName, LocationId"

                    End If
                Else
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName, LocationId"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup,C.TaxIdentificationNo,C.SalesTaxRegistrationNo From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName, LocationId"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup,A.TaxIdentificationNo,A.SalesTaxRegistrationNo From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName, LocationId"

                    End If

                End If


                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            txtCustomerSearch.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClient1_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtAccountType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtAccountType.SelectedIndexChanged
        txtAccountIdBilling.Text = ""
        txtAccountName.Text = ""
        txtCompanyGroup.Text = ""
        txtTIN.Text = ""
        txtSSTNo.Text = ""

        txtBillAddress.Text = ""
        txtBillBuilding.Text = ""
        txtBillStreet.Text = ""

        txtBillCountry.Text = ""
        txtBillPostal.Text = ""
        UpdateTaxCodeRate()
    End Sub

    Protected Sub btnImport_Click(sender As Object, e As EventArgs) Handles btnImport.Click
        lblAlert.Text = ""
        updPnlMsg.Update()

        lblAlert1.Text = ""
        'updpnlServiceRecs.Update()


        'updPnlMsg1.Update()
        'If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
        '    lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Exit Sub
        'End If

        If ddlContractGroupBilling.SelectedIndex = 0 Then
            lblAlert.Text = "SELECT CONTRACT GROUP FIRST"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Exit Sub
        End If


        SqlDSStaffID.SelectCommand = "SELECT StaffId,Name FROM tblstaff where Status ='O' ORDER BY STAFFID"

        If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = False Then
            ddlCompanyGrp.Text = txtCompanyGroup.Text
        End If

        If String.IsNullOrEmpty(txtAccountType.Text.Trim) = False Then
            ddlContactType.Text = txtAccountType.Text
        End If

        ddlContractGroup.Text = ddlContractGroupBilling.Text
        ddlContractGroup.Enabled = False
        txtAccountId.Text = txtAccountIdBilling.Text
        txtClientName.Text = txtAccountName.Text
        txtLocationId.Text = txtLocationIdSelected.Text

        'ddlCompanyGrp.Enabled = False
        'ddlContactType.Enabled = False
        'txtAccountId.Enabled = False
        'txtClientName.Enabled = False
        'btnClient.Visible = False
        gvLocation.DataBind()


        'Dim Query As String


        'Query = "SELECT ContractNo FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" & txtAccountIdBilling.Text & "' order by ContractNo "
        'PopulateDropDownList(Query, "ContractNo", "ContractNo", ddlContractNo)


        'ddlContractNo.DataSource = "SQLDSContractNo"
        'ddlContractNo.DataTextField = "ContractNo"
        'ddlContractNo.DataValueField = "ContractNo"
        'ddlContractNo.DataBind()
        mdlImportServices.Show()
    End Sub


    Function IsServiceRecordExists(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
            command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        Else
            command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        End If

        ''If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V' limit 1"
        ''Else
        ''command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        ''End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("InvoiceNumber")) Then
                'If dt.Rows(0)("InvoiceNumber").ToString() Then
                lInvoiceNo = dt.Rows(0)("InvoiceNumber").ToString()
                'GoTo nextrec
            End If
        End If

        conn.Close()
        conn.Dispose()
        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function

    Function IsInvoiceNoExistsForManual(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'Else
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'End If

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V' limit 1"
        'Else
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        'End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("InvoiceNumber")) Then
                'If dt.Rows(0)("InvoiceNumber").ToString() Then
                lInvoiceNo = dt.Rows(0)("InvoiceNumber").ToString()
                'GoTo nextrec
            End If
        End If

        conn.Close()
        conn.Dispose()

        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function

    Function IsServiceRecordExistsForManual(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'Else
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'End If

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        command11.CommandText = "SELECT RecordNo as RecNo from tblServiceRecord where ((Status = 'O') or (Status ='P')) and (Billamount - Billedamt) = 0 and RecordNo  = '" & lServiceRecord & "' limit 1"
        'Else
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        'End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("RecNo")) Then
                'If dt.Rows(0)("InvoiceNumber").ToString() Then
                lInvoiceNo = dt.Rows(0)("RecNo").ToString()
                'GoTo nextrec
            End If
        End If

        conn.Close()
        conn.Dispose()

        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function
    Protected Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click
        txtClientFrom.Text = ""
        mdlImportServices.Hide()
    End Sub

    Protected Sub btnImportService_Click(sender As Object, e As EventArgs) Handles btnImportService.Click
        Try
            lblAlert.Text = ""
            lblAlert1.Text = ""
            txtClientFrom.Text = ""

            Dim GSTable As Decimal = 0.0
            ''''''''''''''''''''''

            'SetRowDataServiceRecs()
            Dim totalRows As Long
            totalRows = 0

            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            'If tableAdd1 IsNot Nothing Then

            For rowIndex1 As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                    GoTo insertRec2
                End If
            Next rowIndex1
            'End If


            If totalRows = 0 Then
                mdlImportServices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If
            ''''''''''''''''''''''''''''''''''

            'If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            '    txtCompanyGroup.Text = ddlCompanyGrpII.Text
            '    'ddlContactType.Text = txtAccountType.Text
            '    txtAccountIdBilling.Text = txtAccountIdII.Text
            '    txtAccountName.Text = txtClientNameII.Text

            '    ddlCompanyGrpII.Enabled = False
            '    ddlContactType.Enabled = False
            '    txtAccountIdII.Enabled = False
            '    txtClientNameII.Enabled = False
            '    btnClient.Visible = False
            'Else
            '    'ddlCompanyGrp.Text = txtCompanyGroup.Text
            '    'txtAccountId.Text = txtAccountIdBilling.Text
            '    'txtClientName.Text = txtAccountName.Text

            '    'ddlCompanyGrp.Enabled = True
            '    'ddlContactType.Enabled = True
            '    'txtAccountId.Enabled = True
            '    'txtClientName.Enabled = True
            '    'btnClient.Visible = True

            'End If
insertRec2:
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            conn.Open()
            Dim sql As String
            sql = ""


            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Close()


            'Start: Populate the grid
            'txtRcnoServiceRecord.Text = lblid14.Text
            'txtRcnoServiceRecordDetail.Text = lblid15.Text
            'txtContractNo.Text = lblid22.Text
            'txtRcnoInvoice.Text = lblid17.Text
            ''txtRowSelected.Text = rowindex1.ToString
            'txtRcnoServiceBillingDetail.Text = lblid18.Text
            'txtRcnotblServiceBillingDetail.Text = lblid18.Text

            If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
            End If
            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            If grvBillingDetails.Rows.Count = 0 Then
                For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                    drCurrentRowLoc = dtScdrLoc.NewRow()
                    ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                    grvBillingDetails.DataSource = dtScdrLoc
                    grvBillingDetails.DataBind()

                    SetPreviousDataBillingDetailsRecs()
                Next i


                FirstGridViewRowBillingDetailsRecs()
            End If


            txtInvoiceAmount.Text = "0.00"
            txtGSTAmount.Text = "0.00"
            txtNetAmount.Text = "0.00"
            txtDiscountAmount.Text = "0.00"
            txtAmountWithDiscount.Text = "0.00"

            If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                txtRcnoServiceBillingDetail.Text = "0"
            End If


            Dim rowselected As Integer
            'rowselected = 0

            rowselected = 0

            rowselected = grvBillingDetails.Rows.Count - 1 '26.10.17

            For rowIndex As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then

                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    'Header

                    Dim lblid24 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)


                    '''' Start:Check for Duplicate Service Record


                    For i As Integer = 0 To grvBillingDetailsNew.Rows.Count - 1
                        Dim TextBoxServiceRecordBillingNew As TextBox = CType(grvBillingDetailsNew.Rows(i).Cells(0).FindControl("txtServiceRecordGVB"), TextBox)
                        If TextBoxServiceRecordBillingNew.Text.Trim = lblid24.Text.Trim Then
                            GoTo nextrec
                        End If
                    Next


                    For j As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        Dim TextBoxServiceRecordBilling As TextBox = CType(grvBillingDetails.Rows(j).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                        If TextBoxServiceRecordBilling.Text.Trim = lblid24.Text.Trim Then
                            GoTo nextrec
                        End If
                    Next

                    '''' End:Check for Duplicate Service Record

                    '''''''''''''''''''''''''
                    'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = False Then
                    '    Dim command11 As MySqlCommand = New MySqlCommand

                    '    command11.CommandType = CommandType.Text
                    '    command11.CommandText = "SELECT count(*) as totcount FROM tblSalesDetail where RefType = '" & lblid24.Text & "' and  InvoiceNumber = '" & txtInvoiceNo.Text & "'"
                    '    command11.Connection = conn

                    '    Dim dr As MySqlDataReader = command11.ExecuteReader()
                    '    Dim dt As New DataTable
                    '    dt.Load(dr)

                    '    If dt.Rows.Count > 0 Then
                    '        If dt.Rows(0)("totcount").ToString() > 0 Then
                    '            GoTo nextrec
                    '        End If
                    '    End If


                    '    command11.Dispose()
                    '    dt.Dispose()
                    'End If

                    Dim lInvoiceNoExists As String

                    lInvoiceNoExists = ""
                    lInvoiceNoExists = IsServiceRecordExists(lblid24.Text)


                    If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then
                        lblAlert1.Text = "SERVICE RECORD '" & lblid24.Text & "' already exists in OPEN Invoice No. '" & lInvoiceNoExists & "'"
                        mdlImportServices.Show()
                        Exit Sub

                    End If

                    ''''''''''''''''''''''''''
                    AddNewRowBillingDetailsRecs()

                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                    Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    Dim lblid25 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtStatusGV"), TextBox)
                    Dim lblid26 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    Dim lblid27 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    Dim lblid28 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    Dim lblid29 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)

                    Dim lblid18 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    Dim lblid19 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    Dim lblid30 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtNotesGV"), TextBox)


                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text


                    If lblid25.Text = "P" Then
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                    ElseIf lblid25.Text = "O" Then
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                    Else
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-COO'"
                    End If

                    command1.Connection = conn

                    Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    Dim TextBoxSelectRecord As CheckBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("chkSelectRecGV"), CheckBox)
                    TextBoxSelectRecord.Checked = True

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    TextBoxItemType.Text = "SERVICE"
                    TextBoxItemType.Enabled = False

                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemCodeGV"), DropDownList)

                    Dim Query1 As String
                    'TextBoxItemCode.Items.Clear()
                    Query1 = "Select Description from tblbillingproducts where InActive=False  "
                    PopulateDropDownList(Query1, "Description", "Description", TextBoxItemCode)

                    TextBoxItemCode.Text = dt1.Rows(0)("Description").ToString().Trim
                    TextBoxItemCode.Enabled = False



                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                    TextBoxItemDescription.Text = dt1.Rows(0)("ProductCode").ToString().Trim

                    '''''''''''''''''''''''''''''''

                    'Dim command10 As MySqlCommand = New MySqlCommand
                    'command10.CommandType = CommandType.Text
                    'command10.CommandText = "SELECT Rcno, Status, ContractNo, Description, ServiceDate, BillAmount, LocationID, ServiceLocationGroup, Notes FROM tblservicerecord where RecordNo =@RecordNo"
                    'command10.Parameters.AddWithValue("@RecordNo", Convert.ToString(lblid24.Text))
                    'command10.Connection = conn

                    'Dim dr10 As MySqlDataReader = command10.ExecuteReader()
                    'Dim dt10 As New DataTable
                    'dt10.Load(dr10)


                    'Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    'TextBoxDescription.Text = lblid24.Text & ", " & lblid14.Text & ", " & dt10.Rows(0)("Notes").ToString()

                    Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    TextBoxDescription.Text = lblid24.Text & ", " & lblid14.Text & ", " & lblid30.Text

                    ''''''''''''''''''''''''''''''

                    'Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBoxLocationIDGV"), TextBox)
                    'TextBoxLocationID.Text = dt10.Rows(0)("LocationId").ToString()

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                    'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    'TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    'TextBoxUOM.Text = "NO"
                    TextBoxUOM.SelectedIndex = 1

                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                    TextBoxQty.Text = "1"
                    TextBoxQty.Enabled = False

                    ''''''''''''''''''''''''''' 071218

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = "0"


                    Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = lblid28.Text
                    'TextBoxLocationId.Text = dt10.Rows(0)("LocationId").ToString()

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = lblid29.Text


                    Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = lblid14.Text

                    Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = lblid18.Text

                    Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = lblid19.Text

                    Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                    TextBoxTaxCode.Text = txtGST.Text

                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(lblid26.Text)

                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                    Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                    TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)
                    TextBoxServiceRecord.Enabled = False

                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    TextBoxRcnoServiceRecord.Text = Convert.ToString(lblid27.Text)

                    '''''''''''''''''''''''''''''' 071218

                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                    Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscAmountGV"), TextBox)


                    If chkGSTInclusive.Checked = False Then

                        'Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = lblid13.Text

                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = lblid13.Text

                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)
                        TextBoxOriginalBillAmount.Text = lblid13.Text

                        'txtGST1.Text = txtGST.Text

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))
                        'TextBoxGSTAmt.Text = TruncateDecimal((Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01), 2)

                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = lblid13.Text

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = "0.00"

                        TextBoxDiscAmount.Text = "0.00"

                        txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                        End If

                        txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")


                    Else

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))
                        TextBoxTotalPriceWithGST.Text = lblid13.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        'TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) / (100 + Convert.ToDecimal(txtGST1.Text))).ToString("N2"))


                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))

                        'Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))


                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)
                        TextBoxOriginalBillAmount.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))



                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")


                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = "0.00"

                        TextBoxDiscAmount.Text = "0.00"

                        txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                        End If

                        txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                    End If


                    'Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    'TextBoxContractNo.Text = Convert.ToString(lblid26.Text)

                    'Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    'TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                    'Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                    'TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)
                    'TextBoxServiceRecord.Enabled = False

                    'Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    'TextBoxRcnoServiceRecord.Text = Convert.ToString(lblid27.Text)

                    'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                    'TextBoxDiscPerc.Text = "0.00"

                    'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                    'TextBoxDiscAmount.Text = "0.00"

                    'Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    'TextBoxRcnoInvoice.Text = "0"


                    'Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    'TextBoxLocationId.Text = lblid28.Text
                    ''TextBoxLocationId.Text = dt10.Rows(0)("LocationId").ToString()

                    'Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).FindControl("txtServiceLocationGroupGV"), TextBox)
                    'TextBoxServiceLocationGroup.Text = lblid29.Text


                    'Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    'TextBoxServiceDate.Text = lblid14.Text

                    'Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    'TextBoxBillingFrequency.Text = lblid18.Text

                    'Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    'TextBoxServiceBy.Text = lblid19.Text

                    'Dim TextBoxTaxCode As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)


                    'txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                    'txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                    'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                    'If TextBoxTaxCode.Text = "SR" Then
                    '    GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                    'End If

                    'txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                    'txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                    'command10.Dispose()
                    'dt10.Dispose()
                    command1.Dispose()
                    dt1.Dispose()

                End If
nextrec:
            Next rowIndex
            'End If

            conn.Close()
            conn.Dispose()

            CalculateTotalPrice()

            AdjustGStAmount()
            If rowselected = 0 Then
                lblAlert1.Text = "SELECT RECORDS TO IMPORT"
                Exit Sub
            End If

            If txtPostStatus.Text <> "P" Then
                grvBillingDetails.Enabled = True
                btnSave.Enabled = True
            End If


            'lbltotalservices.Text = Convert.ToInt32(rowselected)

            grvBillingDetailsdiv.Focus()
            updpnlServiceRecs.Update()

            'End: Billing Details
            'updPanelSave.Update()
            'updPanelInvoice.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            'End: Populate the grid

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnImportService_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub GrdViewGL_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GrdViewGL.SelectedIndexChanged
        Dim xrowNumber1 = txtxRow.Text

        If txtGLFrom.Text = "InvoiceB" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtOtherCodeGVB"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtGLDescriptionGVB"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
        ElseIf txtGLFrom.Text = "Invoice" Then
            Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtGLDescriptionGV"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
        ElseIf txtGLFrom.Text = "Receipt" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsQR.Rows(xrowNumber1).FindControl("txtOtherCodeGVQR"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetailsQR.Rows(xrowNumber1).FindControl("txtGLDescriptionGVQR"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
            mdlQuickReceipt.Show()
        End If

        'txtIsPopup.Text = "Location"
        'mdlImportServices.Show()
    End Sub

    Protected Sub txtPopUpGL_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpGL.TextChanged
        Try
            If txtPopUpGL.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                SqlDSGL.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts where  COACode like '%" + txtPopUpGL.Text.Trim.ToUpper + "%' order by COACode "

                SqlDSGL.DataBind()
                grvGL.DataBind()
                'im()
                'imgBtnGL_ModalPopupExtender.show()
                'imgBtnGL_ModalPopupExtender.mdl imgBtnGL_ModalPopupExtender.mdlPopUpTeam.Show()
                txtIsPopup.Text = "GL"
                'IsPopUpTeam = "Y"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtPopUpGL_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnGLB_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "InvoiceB"
        updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        imgBtnGL_ModalPopupExtender.Show()
    End Sub

    Protected Sub btnGL_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "Invoice"
        updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        imgBtnGL_ModalPopupExtender.Show()
    End Sub

    Protected Sub btnGLQR_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "Receipt"
        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()
        mdlQuickReceipt.Hide()
        imgBtnGL_ModalPopupExtender.Show()
    End Sub


    Protected Sub btnContractGVB_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "ContractGVB"

        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As TextBox = CType(xrow1.FindControl("txtItemTypeGVB"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If (lblid1.Text.Trim) <> "OTHERS" Then
            lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNoGVB"
        Try

            'If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If

            '    SqlDSClient.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If
            '    'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            '    SqlDSContractNo.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'End If


            'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            'Else
            SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            'End If
            'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnContractNoGV_Click", ex.Message.ToString, "")
        End Try


    End Sub

    Protected Sub btnContractGV_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "ContractGV"
        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If (lblid1.Text.Trim) <> "OTHERS" Then
            lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If
        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNoGV"
        Try

            'If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If

            '    SqlDSClient.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If
            '    'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            '    SqlDSContractNo.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'End If


            'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            'Else
            SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            'End If
            'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnContractNoGV_Click", ex.Message.ToString, "")
        End Try




        ''''''''''''''''''''''''''''''''''''''''''''''''

        'imgBtnGL_ModalPopupExtender.Show()
    End Sub



    Protected Sub BtnClassificationCodeGVB_Click(sender As Object, e As EventArgs)
        txtClassificationCodeFrom.Text = "ClassificationCodeGVB"

        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As TextBox = CType(xrow1.FindControl("txtItemTypeGVB"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        'If (lblid1.Text.Trim) <> "OTHERS" Then
        '    lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
        '    updPnlMsg.Update()
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Exit Sub
        'End If

        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ClassificationCodeGVB"
        Try

            SqlDSPopClassificationCode.SelectCommand = "SELECT ClassificationCode,Description  FROM tbleinvoicemalaysiaclassificationid order by ClassificationCode"
        
            SqlDSPopClassificationCode.DataBind()
            GrdViewClassificationCode.DataBind()
            updPanelInvoice.Update()
            mdlClassificationCode.Show()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "BtnClassificationCodeGVB_Click", ex.Message.ToString, "")
        End Try


    End Sub


    Protected Sub BtnClassificationCodeGV_Click(sender As Object, e As EventArgs)
        txtClassificationCodeFrom.Text = "ClassificationCodeGV"

        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As TextBox = CType(xrow1.FindControl("txtItemTypeGVB"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        'If (lblid1.Text.Trim) <> "OTHERS" Then
        '    lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
        '    updPnlMsg.Update()
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Exit Sub
        'End If

        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ClassificationCodeGV"
        Try

      
            SqlDSPopClassificationCode.SelectCommand = "SELECT ClassificationCode,Description  FROM tbleinvoicemalaysiaclassificationid order by ClassificationCode"

            SqlDSPopClassificationCode.DataBind()
            GrdViewClassificationCode.DataBind()
            updPanelInvoice.Update()
            mdlClassificationCode.Show()
        Catch ex As Exception
          
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "BtnClassificationCodeGV_Click", ex.Message.ToString, "")
        End Try


    End Sub

    Protected Sub btnPopUpGLReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpGLReset.Click
        txtPopUpGL.Text = "Search Here for GL Code or Description"
        SqlDSGL.SelectCommand = "SELECT * From tblChartOfAccounts order by COACode"
        SqlDSGL.DataBind()
        grvGL.DataBind()

        imgBtnGL_ModalPopupExtender.Show()
        txtIsPopup.Text = "GL"
    End Sub


    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click

        lblAlert.Text = ""
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO PRINT"
            Return
        End If

        If txtPostStatus.Text = "O" Then
            lblAlert.Text = "ONLY Posted Invoices can be Printed"
            Return
        End If
        Session("PrintType") = "Print"

        Session("gridsqlinvoiceprint") = txt.Text

        Session("printfrom") = "serviceprint"
        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
            Session("InvoiceNumber") = """" + txtInvoiceNo.Text + """"
        End If
        Session("InvoiceNo") = txtInvoiceNo.Text

        If txtNetAmount.Text = "0.00" Then
            mdlPopupConfirmZeroValuePrint.Show()

        Else
            If txtEI.Text = "Y" And txtEInvoiceStatus.Text = "VALID" Then
                'txtSubmissionID.Text = "J2B9NQ4M6Y4KTZ666QXQYHZJ10"

                InsertIntoTblWebEventLog("INVOICE", "BtnPrint_Click", txtLongID.Text, txtInvoiceNo.Text)

                If String.IsNullOrEmpty(txtLongID.Text) Then
                    Dim token = GetToken()
                    Dim tokenno As String = ""
                    tokenno = AccessToken

                    Dim submissionid = GetSubmission(tokenno)
                    UpdateEInvoiceLongID(txtInvoiceNo.Text)

                    '  InsertIntoTblWebEventLog("INVOICE", "BtnPrint_Click", GetDocument(tokenno, txtuuid.Text), txtInvoiceNo.Text)

                End If

                Session("InvoiceType") = "EInvoice"
                Session("UUID") = txtUUID.Text
                Session("LongID") = txtLongID.Text
            Else
                Session("InvoiceType") = "Invoice"
            End If

            mdlPopupPrint.Show()

        End If


    End Sub

    'Protected Sub btnPrintReport_Click(sender As Object, e As EventArgs) Handles btnPrintReport.Click

    '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
    '        Session("InvoiceNumber") = txtInvoiceNo.Text
    '    End If

    '    'Response.Redirect("RV_TaxInvoice_Format1.aspx")


    '    'Session.Add("SvcRecordNo", txtSvcRecord.Text)
    '    'Session.Add("Query", txt.Text)
    '    'Session.Add("SvcRcNo", txtRcno.Text)
    '    If RadioButtonList1.SelectedIndex = 0 Then
    '        Response.Redirect("RV_TaxInvoice_Format1.aspx")
    '    End If

    '    If RadioButtonList1.SelectedIndex = 1 Then
    '        Response.Redirect("RV_TaxInvoice_Format2.aspx")
    '    End If

    '    If RadioButtonList1.SelectedIndex = 2 Then
    '        Response.Redirect("RV_TaxInvoice_Format3.aspx")
    '    End If
    'End Sub

    Protected Sub gvClient_PageIndexChanging1(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging
        gvClient.PageIndex = e.NewPageIndex

        If txtClientFrom.Text = "ImportService" Then
            SqlDSClient.SelectCommand = txtImportService.Text
        End If

        If txtSearch.Text = "CustomerSearch" Then
            SqlDSClient.SelectCommand = txtCustomerSearch.Text
        End If

        If txtSearch.Text = "InvoiceSearch" Then
            SqlDSClient.SelectCommand = txtInvoiceSearch.Text
        End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
        'txtIsPopup.Text = "Client"


        SqlDSClient.DataBind()
        gvClient.DataBind()
        mdlPopUpClient.Show()
    End Sub

    Protected Sub grvBillingDetailsNew_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvBillingDetailsNew.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                If txtPostStatus.Text <> "P" Then
                    For Each cell As DataControlFieldCell In e.Row.Cells
                        ' check all cells in one row
                        For Each control As Control In cell.Controls

                            Dim button As ImageButton = TryCast(control, ImageButton)
                            If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                                'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                                button.OnClientClick = "Confirm()"

                            End If
                        Next control

                    Next cell
                End If

            End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub grvBillingDetailsNew_RowDeleted(sender As Object, e As GridViewDeletedEventArgs) Handles grvBillingDetailsNew.RowDeleted
        If grvBillingDetailsNew.Rows.Count = 0 And grvBillingDetails.Rows.Count = 0 Then
            grvBillingDetails.ShowHeader = True
            FirstGridViewRowBillingDetailsRecs()
            updPanelInvoice.Update()
        End If
        'FirstGridViewRowBillingDetailsRecs
    End Sub

    Protected Sub grvBillingDetailsNew_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles grvBillingDetailsNew.RowDeleting
        'Try

        '    'If txtRecordDeleted.Text = "Y" Then
        '    '    txtRecordDeleted.Text = "N"
        '    '    Exit Sub
        '    'End If

        '    lblAlert.Text = ""
        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then

        '        'SetRowDataBillingDetailsRecs()
        '        'Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

        '        Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)
        '        'Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtRcnoServiceRecordGVB"), TextBox)
        '        'Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtServiceRecordGVB"), TextBox)

        '        'Dim TextBoxServiceValue As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGVB"), TextBox)
        '        'Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtItemDescriptionGVB"), TextBox)

        '        If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
        '            If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then


        '                'If TextBoxItemCode.Text = "IN-DEF" Or TextBoxItemCode.Text = "IN-SRV" Then
        '                '    'UpdateServiceRecord(TextBoxRcnoServiceRecord.Text, TextBoxServiceValue.Text, "Delete")
        '                '    UpdateServiceRecord(TextBoxServiceRecord.Text, TextBoxServiceValue.Text, "Delete")
        '                'End If


        '                Dim conn As MySqlConnection = New MySqlConnection(constr)
        '                conn.Open()


        '                Dim command4 As MySqlCommand = New MySqlCommand
        '                command4.CommandType = CommandType.Text

        '                'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
        '                Dim qry4 As String = "Delete from tblsalesdetail where rcno = " & TextBoxRcno.Text
        '                'Dim qry4 As String = "Delete from tblsalesdetail "
        '                command4.CommandText = qry4
        '                command4.Connection = conn
        '                command4.ExecuteNonQuery()

        '                conn.Close()
        '                command4.Dispose()

        '                'Dim rowIndex1 As Integer = Convert.ToInt32(e.RowIndex)
        '                'grvBillingDetailsNew.DeleteRow(rowIndex1)
        '                'grvBillingDetailsNew


        '                'If grvBillingDetailsNew.Rows.Count > 0 Then
        '                '    grvBillingDetailsNew.Rows.Remove(grvBillingDetailsNew.Rows(rowIndex))
        '                '    drCurrentRow = dt.NewRow()
        '                '    'ViewState("CurrentTableBillingDetailsRec") = dt
        '                '    'grvBillingDetails.DataSource = dt
        '                grvBillingDetailsNew.DataBind()

        '                'End If

        '                'txtInvoiceNoSelected.Text = ""
        '                'updPanelInvoice.Update()
        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '0'"
        '                'SqlDSSalesDetail.DataBind()
        '                ''grvBillingDetailsNew.SelectedIndex = -1
        '                ''grvBillingDetailsNew.re()

        '                'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                'grvBillingDetailsNew.DataBind()

        '                ''btnSaveInvoice_Click(sender, e)
        '                'txtInvoiceNoSelected.Text = ""

        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNoSelected.Text & "'"
        '                'SqlDSSalesDetail.DataBind()
        '                'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                'grvBillingDetailsNew.DataBind()
        '                ''updPanelInvoice.Update()
        '                ''updPnlSearch.Update()
        '                'updPnlBillingRecsNew.Update()

        '                ''Exit Sub
        '                'txtInvoiceNoSelected.Text = txtInvoiceNo.Text

        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNoSelected.Text & "'"
        '                SqlDSSalesDetail.DataBind()
        '                grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                grvBillingDetailsNew.DataBind()
        '                'updPanelInvoice.Update()
        '                'updPnlSearch.Update()
        '                updPnlBillingRecsNew.Update()
        '            End If
        '        End If

        '        'If dt.Rows.Count > 0 Then
        '        'dt.Rows.Remove(dt.Rows(rowIndex))
        '        'drCurrentRow = dt.NewRow()
        '        'ViewState("CurrentTableBillingDetailsRec") = dt
        '        'grvBillingDetails.DataSource = dt
        '        'grvBillingDetailsNew.DataBind()

        '        'SetPreviousData()
        '        'SetPreviousDataBillingDetailsRecs()

        '        'If dt.Rows.Count = 0 Then
        '        '    FirstGridViewRowBillingDetailsRecs()
        '        'End If


        '        ''''''''''''''''''''''''''
        '        'HasDuplicateServiceRecord = HighlightDuplicate(grvBillingDetails)

        '        'txtDuplicateServiceRecord.Text = "N"

        '        'If HasDuplicateServiceRecord = True Then
        '        '    txtDuplicateServiceRecord.Text = "Y"
        '        '    'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
        '        '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        '        '    lblAlert.Text = "Duplicate Target/Pests has been selected"
        '        '    Exit Sub
        '        'End If


        '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

        '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        '        'Dim rowindex1 As Integer = xrow1.RowIndex

        '        'If txtRecordAdded.Text = "N" Then
        '        '    btnAddDetail_Click(sender, e)
        '        'End If

        '        'txtRecordDeleted.Text = "Y"
        '        'UpdateTargetDescription()

        '        ''''''''''''''''''''''

        '        'End If

        '        'CalculateTotalPrice()

        '        'grvBillingDetailsNew.DataSource = "SqlDSSalesDetail"
        '        'grvBillingDetailsNew.DataBind()


        '        'CalculateTotalPrice()

        '        txtRcnoSelected.Text = txtRcno.Text
        '        btnQuickSearch_Click(sender, e)

        '        lblAlert.Text = "RECORD DELETED SUCCESSFULLY"
        '        updPnlMsg.Update()
        '        'updPanelInvoice.Update()
        '    End If


        'Catch ex As Exception
        '    Dim exstr As String
        '    exstr = ex.Message.ToString
        '    lblAlert.Text = exstr
        '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        'End Try
    End Sub

    Protected Sub btnClientSearch0_Click(sender As Object, e As ImageClickEventArgs) Handles btnClientSearch0.Click
        Try
            lblAlert.Text = ""
            'If String.IsNullOrEmpty(ddlContactTypeSearch.Text) Or ddlContactTypeSearch.Text = "--SELECT--" Then
            '    '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
            '    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            '    updPnlMsg.Update()
            '    Exit Sub
            'End If

            txtSearch.Text = "InvoiceSearch"
            If String.IsNullOrEmpty(txtClientNameSearch.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtClientNameSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    '   InsertIntoTblWebEventLog("INVOICE", "1btnClientSearch0_Click", ddlContactTypeSearch.Text, txtInvoiceNo.Text)

                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    Else
                        '    Dim QRY As String = ""

                        '   QRY = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                        '    InsertIntoTblWebEventLog("INVOICE", "ClientSearchQry", QRY, txtInvoiceNo.Text)

                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    End If
                Else
                    '  InsertIntoTblWebEventLog("INVOICE", "2btnClientSearch0_Click", ddlContactTypeSearch.Text, txtInvoiceNo.Text)

                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopupClientSearch.Text + "%"" or C.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like """ + txtPopupClientSearch.Text + "%"" or A.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountId, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopupClientSearch.Text + "%"" or C.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    End If

                End If


                SqlDSClient2.DataBind()

                gvClient2.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""
                txtPopupClientSearch.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    '   InsertIntoTblWebEventLog("INVOICE", "3btnClientSearch0_Click", ddlContactTypeSearch.Text, txtInvoiceNo.Text)

                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    '    InsertIntoTblWebEventLog("INVOICE", "4btnClientSearch0_Click", ddlContactTypeSearch.Text, txtInvoiceNo.Text)

                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, .BillingName From tblperson C   where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    End If
                End If



                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            End If
            mdlPopUpClient2.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClientSearch0_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub SQLDSInvoice_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SQLDSInvoice.Selected
        txtRowCount.Text = e.AffectedRows.ToString
    End Sub


    Protected Sub OnRowDataBoundg1(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        '  InsertIntoTblWebEventLog("INVOICE", "ONROWDATABOUND1", e.Row.RowIndex.ToString, txtCreatedBy.Text)

        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."

            '    InsertIntoTblWebEventLog("INVOICE", "ONROWDATABOUND2", e.Row.RowIndex.ToString, txtCreatedBy.Text)
            If txtDisplayRecordsLocationwise.Text = "N" Then

                e.Row.Cells(25).Visible = False
                GridView1.HeaderRow.Cells(25).Visible = False

            ElseIf txtDisplayRecordsLocationwise.Text = "Y" Then
                e.Row.Cells(25).Visible = True
                GridView1.HeaderRow.Cells(25).Visible = True
            End If


            If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                    isInPage = True
                    txtSelectedRow.Text = e.Row.RowIndex
                End If
            End If

            Dim ch As CheckBox = CType(e.Row.FindControl("chkEI"), CheckBox)
            'InsertIntoTblWebEventLog("INVOICE", "ROWDATABOUND", e.Row.Cells(29).Text.Trim, e.Row.Cells(10).Text.Trim)


            If e.Row.Cells(29).Text.Trim = "VALID" Then
                e.Row.Cells(4).BackColor = Color.YellowGreen
                e.Row.Cells(4).ForeColor = Color.YellowGreen
            ElseIf e.Row.Cells(29).Text.Trim = "CONSOLIDATED" Then
                '  InsertIntoTblWebEventLog("INVOICE", "ROWDATABOUND1", e.Row.Cells(29).Text.Trim, e.Row.Cells(10).Text.Trim)

                e.Row.Cells(4).BackColor = Color.Blue
                e.Row.Cells(4).ForeColor = Color.Blue
            ElseIf e.Row.Cells(29).Text.Trim = "CANCELLED" Then
                e.Row.Cells(4).BackColor = Color.Purple
                e.Row.Cells(4).ForeColor = Color.Purple
            ElseIf e.Row.Cells(29).Text.Trim = "INVALID" Then
                e.Row.Cells(4).BackColor = Color.RED
                e.Row.Cells(4).ForeColor = Color.RED
                e.Row.ForeColor = Color.Red
            ElseIf e.Row.Cells(29).Text.Trim = "SUBMITTED" Or e.Row.Cells(29).Text.Trim = "APPROVED" Or e.Row.Cells(29).Text = "FAILURE" Then
                e.Row.Cells(4).BackColor = Color.PINK
                e.Row.Cells(4).ForeColor = Color.PINK
            Else
                ' InsertIntoTblWebEventLog("INVOICE", "ROWDATABOUND", e.Row.Cells(38).Text.Trim, txtCreatedBy.Text)
                If e.Row.Cells(38).Text.Trim = "&nbsp;" Then
                    e.Row.Cells(4).BackColor = Color.WHITE
                    e.Row.Cells(4).ForeColor = Color.WHITE
                    '   ch.Checked = False
                Else


                    e.Row.Cells(4).BackColor = Color.YELLOW
                    e.Row.Cells(4).ForeColor = Color.YELLOW
                    ' ch.Checked = True

                End If

            End If
            If ch.Checked = False And e.Row.Cells(29).Text.Trim <> "CONSOLIDATED" Then
                e.Row.Cells(4).BackColor = Color.White
                e.Row.Cells(4).ForeColor = Color.White
            End If


            'Dim tb1 As Label = CType(e.Row.FindControl("txtTimetoCancel"), Label)

            'If String.IsNullOrEmpty(e.Row.Cells(30).Text) Or e.Row.Cells(30).Text = "" Then
            'Else

            '    tb1.Text = DateDiff(DateInterval.Hour, Convert.ToDateTime(e.Row.Cells(30).Text), DateTime.Now).ToString
            '    '  tb1.Text = DateDiff(DateInterval.Hour, DataBinder.Eval(e.Row.DataItem, "SubmissionDate"), DateTime.Now).ToString

            'End If
            'If String.IsNullOrEmpty(DataBinder.Eval(e.Row.DataItem, "SubmissionDate")) = False Then
            '    tb1.Text = DateDiff(DateInterval.Hour, DataBinder.Eval(e.Row.DataItem, "SubmissionDate"), DateTime.Now).ToString
            '    '  tb1.Text = DateDiff(DateInterval.Hour, DataBinder.Eval(e.Row.DataItem, "SubmissionDate"), DateTime.Now).ToString

            'End If
        End If

    End Sub

    Protected Sub OnSelectedIndexChangedg1(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged

        For Each row As GridViewRow In GridView1.Rows
            'If row.RowIndex = GridView1.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = GridView1.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next


    End Sub

    Protected Sub btnReverse_Click(sender As Object, e As EventArgs) Handles btnReverse.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        Try
            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If

            mdlPopupConfirmReverse.Show()

            Dim confirmValue As String
            confirmValue = ""

            Exit Sub


            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            '    ''''''''''''''' Insert tblAR

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    If conn.State = ConnectionState.Open Then
            '        conn.Close()
            '        conn.Dispose()
            '    End If
            '    conn.Open()


            '    '''''''''''''''

            '    Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            '    commandUpdateInvoice.CommandType = CommandType.Text
            '    Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            '    commandUpdateInvoice.CommandText = sqlUpdateInvoice
            '    commandUpdateInvoice.Parameters.Clear()
            '    commandUpdateInvoice.Connection = conn
            '    commandUpdateInvoice.ExecuteNonQuery()

            '    ''''''''''''''''


            '    Dim command1 As MySqlCommand = New MySqlCommand
            '    command1.CommandType = CommandType.Text

            '    Dim qry1 As String = "DELETE from tblAR where VoucherNumber = '" & txtInvoiceNo.Text & "'"

            '    command1.CommandText = qry1
            '    'command1.Parameters.Clear()
            '    command1.Connection = conn
            '    command1.ExecuteNonQuery()

            '    Dim qryAR As String
            '    Dim commandAR As MySqlCommand = New MySqlCommand
            '    commandAR.CommandType = CommandType.Text

            '    ''Start:Loop thru' Credit values


            '    Dim commandValues As MySqlCommand = New MySqlCommand

            '    commandValues.CommandType = CommandType.Text
            '    'commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            '    commandValues.CommandText = "SELECT *  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            '    commandValues.Connection = conn

            '    Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            '    Dim dtValues As New DataTable
            '    dtValues.Load(drValues)

            '    For Each row As DataRow In dtValues.Rows

            '        If Convert.ToDecimal(row("ValueBase")) > 0.0 Then

            '            If row("RefType") <> "--SELECT--" Then
            '                UpdateServiceRecord(row("RefType"), row("ValueBase"), row("CostCode"), "Delete")
            '            End If

            '        End If

            '    Next row

            '    ''End: Loop thru' Credit Values



            '    SQLDSInvoice.SelectCommand = txt.Text
            '    SQLDSInvoice.DataBind()
            '    GridView1.DataBind()

            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)


            '    MakeMeNullBillingDetails()
            '    MakeMeNull()
            '    DisableControls()
            '    FirstGridViewRowGL()

            '    ''''''''''''''' Insert tblAR

            '    lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"

            '    lblAlert.Text = ""
            '    updPnlSearch.Update()
            '    updPnlMsg.Update()

            '    updpnlServiceRecs.Update()

            '    conn.Close()
            '    conn.Dispose()
            '    commandAR.Dispose()
            '    command1.Dispose()
            '    commandUpdateInvoice.Dispose()
            '    commandValues.Dispose()
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnReverse_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnChangeStatus_Click(sender As Object, e As EventArgs) Handles btnChangeStatus.Click
        lblAlertStatus.Text = ""
        mdlPopupStatus.Show()
    End Sub

    Protected Sub btnUpdateStatus_Click(sender As Object, e As EventArgs) Handles btnUpdateStatus.Click
        lblAlertStatus.Text = ""

        If ddlNewStatus.SelectedIndex = 0 Then
            lblAlertStatus.Text = "PLEASE SELECT STATUS"
            mdlPopupStatus.Show()

            Return

        End If
        If ddlNewStatus.Text = txtDDLText.Text Then
            lblAlertStatus.Text = "PLEASE SELECT NEW STATUS"
            mdlPopupStatus.Show()
            Return
        End If

        If ddlNewStatus.Text = txtPostStatus.Text Then
            lblAlertStatus.Text = "STATUS ALREADY UPDATED"
            mdlPopupStatus.Show()

            Return
        End If

        If String.IsNullOrEmpty(txtReasonChSt.Text) = True Then
            lblAlertStatus.Text = "PLEASE ENTER REASON"
            txtReasonChSt.Focus()
            mdlPopupStatus.Show()
            Return
        End If

        Try
            If ddlNewStatus.SelectedIndex > 0 Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "UPDATE tblSales SET PostStatus='" + ddlNewStatus.SelectedValue + "', ReasonChSt ='" & txtReasonChSt.Text.Trim & "' where rcno=" & Convert.ToInt32(txtRcno.Text)
                command.Connection = conn
                command.ExecuteNonQuery()

                '   UpdateContractActSvcDate(conn)

                conn.Close()
                conn.Dispose()
                command.Dispose()

                'ddlStatus.Text = ddlNewStatus.Text


                lblMessage.Text = "ACTION: STATUS UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status changed from " & txtPostStatus.Text & " To " & ddlNewStatus.SelectedValue, txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "RECEIPT", txtReceiptNoQR.Text, "ADD/POST", Convert.ToDateTime(txtCreatedOn.Text), txtReceivedAmountQR.Text, 0, txtReceivedAmountQR.Text, txtAccountIdBilling.Text, "", txtRcno.Text)
                txtPostStatus.Text = ddlNewStatus.SelectedValue
                ddlNewStatus.SelectedIndex = 0

                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                GridView1.DataBind()

                InsertNewLog()
                'GridView1.DataSourceID = "SqlDataSource1"
                mdlPopupStatus.Hide()
            End If

        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnUpdateStatus_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub OnRowDataBoundgClient(sender As Object, e As GridViewRowEventArgs) Handles gvClient.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        For Each row As GridViewRow In gvClient.Rows
            If row.RowIndex = gvClient.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgClient2(sender As Object, e As GridViewRowEventArgs) Handles gvClient2.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient2, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient2(sender As Object, e As EventArgs) Handles gvClient2.SelectedIndexChanged
        For Each row As GridViewRow In gvClient2.Rows
            If row.RowIndex = gvClient2.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub


    Protected Sub OnRowDataBoundgLoc(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocation, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgLoc(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvLocation.Rows
            If row.RowIndex = gvLocation.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgGL(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GrdViewGL, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgGL(sender As Object, e As EventArgs) Handles GrdViewGL.SelectedIndexChanged
        For Each row As GridViewRow In GrdViewGL.Rows
            If row.RowIndex = GrdViewGL.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    '12.01.25

    Protected Sub OnRowDataBoundgClassificationCode(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GrdViewClassificationCode, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClassificationCode(sender As Object, e As EventArgs) Handles GrdViewClassificationCode.SelectedIndexChanged
        For Each row As GridViewRow In GrdViewGL.Rows
            If row.RowIndex = GrdViewClassificationCode.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub




    '12.01.25
    'Protected Sub btnQuickReceipt_Click(sender As Object, e As EventArgs) Handles btnQuickReceipt.Click
    'txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
    'txtAccountNameQR.Text = txtAccountName.Text
    'txtReceiptDateQR.Text = txtInvoiceDate.Text
    'txtReceivedAmountQR.Text = txtBalanceBase.Text

    'If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
    '    txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
    'End If
    'updPnlQR.Update()

    'ddlCompanyGrpII.Text = txtCompanyGroup.Text
    'ddlContactType.Text = txtAccountType.Text
    'txtAccountIdII.Text = txtAccountIdBilling.Text
    'txtClientNameII.Text = txtAccountName.Text

    'ddlCompanyGrpII.Enabled = False
    'ddlContactType.Enabled = False
    'txtAccountIdII.Enabled = False
    'txtClientNameII.Enabled = False

    ''grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
    ''grvInvoiceRecDetails.DataBind()
    ' ''grvInvoiceRecDetails.DataBind()
    ' ''grvInvoiceRecDetails
    ' ''btnShowRecordsII_Click(sender, e)
    'updpnlInvoiceRecs.Update()
    'updpnlImportInovice.Update()

    ''    updpnlInvoiceRecs.Update()

    ''If grvInvoiceRecDetails.Rows.Count = 0 Then
    ''    btnShowRecordsII_Click(sender, e)
    ''    'updpnlInvoiceRecs.Update()
    ''End If


    'FirstGridViewRowBillingDetailsRecsQR()
    ''txtAccountNameQR.Attributes.Add("readonly", "readonly")
    ''txtRecordNoQR.Attributes.Add("readonly", "readonly")
    ''txtBankIDQR

    'mdlQuickReceipt.Show()
    'End Sub

    Protected Sub ddlPaymentModeQR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlPaymentModeQR.SelectedIndexChanged
        Try
            lblAlertQR.Text = ""
            updPnlMsgQR.Update()

            'If ddlPaymentModeQR.Text = "CHEQUE" Then
            '    txtChequeNoQR.Attributes.Remove("readonly")
            '    txtChequeDateQR.Attributes.Remove("readonly")
            'Else
            '    txtChequeNoQR.Text = ""
            '    txtChequeDateQR.Text = ""

            '    txtChequeNoQR.Attributes.Add("readonly", "readonly")
            '    txtChequeDateQR.Attributes.Add("readonly", "readonly")
            'End If


            '''''''''''''''
            Dim lBankId As String = ""

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""
            sql = "Select DefaultBank, DefaultPaymentReference from tblSettleType where SettleType = '" & ddlPaymentModeQR.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("DefaultBank").ToString <> "" Then : lBankId = dt.Rows(0)("DefaultBank").ToString : End If
            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            Dim Query As String

            ddlBankCodeQR.Items.Clear()
            ddlBankCodeQR.Items.Add("--SELECT--")


            Query = "SELECT CONCAT(BankId, ' : ', Bank) AS codedes FROM tblBank  where BankId = '" & lBankId & "' ORDER BY BankId"
            PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

            ddlBankCodeQR.SelectedIndex = 1

            Query = "SELECT CONCAT(BankId, ' : ', Bank) AS codedes FROM tblBank  where BankId <> '" & lBankId & "' ORDER BY BankId"
            PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

            txtBankIDQR.Text = ""
            txtBankNameQR.Text = ""
            txtBankGLCodeQR.Text = ""
            txtLedgerNameQR.Text = ""

            ddlBankCodeQR_SelectedIndexChanged(sender, e)

            txtChequeNoQR.Text = ""

            'If dt.Rows(0)("DefaultPaymentReference").ToString <> "" Then
            '    Dim str1 As String
            '    str1 = Trim(dt.Rows(0)("DefaultPaymentReference"))

            '    Dim dt1 As Date
            '    dt1 = Convert.ToDateTime(txtReceiptDateQR.Text).ToString("dd/MM/yy")

            '    If Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 5) = "YYYY}" Then
            '        txtChequeNoQR.Text = str1.Replace("{DD/MM/YYYY}", txtReceiptDateQR.Text)
            '    ElseIf Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 5) = "M/YY}" Then
            '        txtChequeNoQR.Text = str1.Replace("{DD/MM/YY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("dd/MM/yy"))
            '    End If

            '    'txtChequeNoQR.Text = str1.Replace("{DD/MM/YYYY}", txtReceiptDateQR.Text)
            'End If


            If dt.Rows(0)("DefaultPaymentReference").ToString <> "" Then
                Dim str1 As String
                str1 = Trim(dt.Rows(0)("DefaultPaymentReference"))

                Dim dt1 As Date
                dt1 = Convert.ToDateTime(txtReceiptDateQR.Text).ToString("dd/MM/yy")


                If Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 6) = "MM/YY}" Then
                    txtChequeNoQR.Text = str1.Replace("{DD/MM/YY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("dd/MM/yy"))
                ElseIf Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 6) = "/YYYY}" Then
                    txtChequeNoQR.Text = str1.Replace("{DD/MM/YYYY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("dd/MM/yyyy"))
                ElseIf Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 6) = "DMMYY}" Then
                    txtChequeNoQR.Text = str1.Replace("{DDMMYY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("ddMMyy"))
                ElseIf Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 6) = "MYYYY}" Then
                    txtChequeNoQR.Text = str1.Replace("{DDMMYYYY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("ddMMyyyy"))
                    'If Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 5) = "YYYY}" Then
                    '    txtChequeNoQR.Text = str1.Replace("{DDMMYYYY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("ddMMyyyy"))
                    'ElseIf Right(Trim(dt.Rows(0)("DefaultPaymentReference").ToString), 4) = "MYY}" Then
                    '    txtChequeNoQR.Text = str1.Replace("{DDMMYY}", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("ddMMyy"))
                    'End If

                    'txtChequeNoQR.Text = str1.Replace("{DD/MM/YYYY}", txtReceiptDateQR.Text)
                End If

            End If

            txtChequeDateQR.Text = txtReceiptDateQR.Text

            'If Left(ddlPaymentModeQR.Text, 4) = "CASH" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'ElseIf Left(ddlPaymentModeQR.Text, 4) = "FAST" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'ElseIf Left(ddlPaymentModeQR.Text, 4) = "CHEQ" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'ElseIf Left(ddlPaymentModeQR.Text, 4) = "CRED" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'ElseIf Left(ddlPaymentModeQR.Text, 4) = "PAYN" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'ElseIf Left(ddlPaymentModeQR.Text, 4) = "GIRO" Then
            '    txtChequeDateQR.Text = txtReceiptDateQR.Text
            'End If

            ddlPaymentModeQR.Focus()
            mdlQuickReceipt.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ddlPaymentModeQR_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ddlBankCodeQR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlBankCodeQR.SelectedIndexChanged
        Try
            If ddlBankCodeQR.SelectedIndex > 0 Then

                ''''''''''''''''''''''''''''''''''''
                'Dim hyphenpos As Integer
                'hyphenpos = 0
                'hyphenpos = (ddlBankCode.Text.IndexOf(":"))


                'txtBankGLCode.Text = Left(ddlBankCode.Text, (hyphenpos - 1))
                'txtBankName.Text = Right(ddlBankCode.Text, Len(ddlBankCode.Text) - (Len(txtBankGLCode.Text) + 3))
                'txtBankID.Text = Left(ddlBankCode.Text, (hyphenpos - 1))

                Dim hyphenpos As Integer
                hyphenpos = 0
                hyphenpos = (ddlBankCodeQR.Text.IndexOf(":"))


                txtBankGLCodeQR.Text = Left(ddlBankCodeQR.Text, (hyphenpos - 1))
                txtBankNameQR.Text = Right(ddlBankCodeQR.Text, Len(ddlBankCodeQR.Text) - (Len(txtBankGLCodeQR.Text) + 3))
                txtBankIDQR.Text = Left(ddlBankCodeQR.Text, (hyphenpos - 1))

                '''''''''''''''''''''''''''


                'txtBankGLCodeQR.Text = Left(ddlBankCodeQR.Text, 5)
                'txtBankNameQR.Text = Right(ddlBankCodeQR.Text, Len(ddlBankCodeQR.Text) - (Len(txtBankGLCodeQR.Text) + 3))

                'txtBankIDQR.Text = Left(ddlBankCodeQR.Text, 5)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim sql As String
                sql = ""
                sql = "Select LedgerCode, RecvPrefix from tblBank where bankId = '" & txtBankIDQR.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("LedgerCode").ToString <> "" Then : txtBankGLCodeQR.Text = dt.Rows(0)("LedgerCode").ToString : End If
                    If dt.Rows(0)("RecvPrefix").ToString <> "" Then : txtRecvPrefixQR.Text = dt.Rows(0)("RecvPrefix").ToString : End If

                End If


                sql = ""
                sql = "Select Description from tblChartOfAccounts where COACode = '" & txtBankGLCodeQR.Text & "'"

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = sql
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()

                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("Description").ToString <> "" Then : txtLedgerNameQR.Text = dt2.Rows(0)("Description").ToString : End If
                End If

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                command2.Dispose()
                dt.Dispose()
                dt2.Dispose()

                'txtBankGLCode
                'txtLedgerName()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ddlBankCodeQR_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnShowInvoicesQR_Click(sender As Object, e As EventArgs) Handles btnShowInvoicesQR.Click
        Try
            lblAlert.Text = ""
            'lblMessage.Text = ""
            'lblAlert.Text = ""
            lblMessageQR.Text = ""
            lblAlertQR.Text = ""
            'If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = False Then
            '    ddlCompanyGrpII.Text = txtCompanyGroup.Text
            '    'ddlContactType.Text = txtAccountType.Text
            '    txtAccountIdII.Text = txtAccountIdBilling.Text
            '    txtClientNameII.Text = txtAccountName.Text

            '    ddlCompanyGrpII.Enabled = False
            '    ddlContactType.Enabled = False
            '    txtAccountIdII.Enabled = False
            '    txtClientNameII.Enabled = False
            '    'btnClient.Visible = False
            'Else
            '    'ddlCompanyGrp.Text = txtCompanyGroup.Text
            '    'txtAccountId.Text = txtAccountIdBilling.Text
            '    'txtClientName.Text = txtAccountName.Text

            '    ddlCompanyGrpII.Enabled = True
            '    ddlContactType.Enabled = True
            '    txtAccountIdII.Enabled = True
            '    txtClientNameII.Enabled = True
            '    btnClient.Visible = True

            'End If

            'Dim Query As String

            'Query = "SELECT ContractNo FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" & txtAccountIdBilling.Text & "' order by ContractNo "
            'PopulateDropDownList(Query, "ContractNo", "ContractNo", ddlContractNoII)

            If grvInvoiceRecDetails.Rows.Count = 0 Then
                btnShowRecordsII_Click(sender, e)
                updpnlInvoiceRecs.Update()
            End If


            mdlQuickReceipt.Hide()
            mdlImportInvoices.Show()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub CheckUncheckAllInvoice(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvInvoiceRecDetails.HeaderRow.Cells(0).FindControl("chkSelectInvoiceGV"), CheckBox)
        For Each row As GridViewRow In grvInvoiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGVII"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub

    Protected Sub btnShowRecordsII_Click(sender As Object, e As EventArgs) Handles btnShowRecordsII.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim strsql As String

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand

            'strsql = "SELECT a.rcno, a.InvoiceNumber, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, a.SalesDate,  a.valuebase, a.gstbase, "
            'strsql = strsql + " a.AppliedBase, a.ReceiptBase, a.CreditBase, a.BalanceBase,  a.Terms, a.BalanceBase as OSAmount "
            'strsql = strsql + " FROM tblsales a  "
            'strsql = strsql + " where a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            'strsql = strsql + " and (a.BalanceBase) > 0"

            strsql = "SELECT a.rcno, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, a.SalesDate,  a.valuebase, a.gstbase, "
            strsql = strsql + " a.AppliedBase, a.ReceiptBase, a.CreditBase, a.BalanceBase,  a.Terms, a.BalanceBase as OSAmount, 'INV' as Doctype, 0.00, 0.00, 0.00,a.UUID   "
            strsql = strsql + " FROM tblsales a  "
            'strsql = strsql + " where a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            strsql = strsql + " where a.PostStatus = 'P'"
            strsql = strsql + " and (a.BalanceBase) <> 0 and a.Doctype in ('ARIN', 'ARCN', 'ARDN') "


            If ddlCompanyGrpII.SelectedIndex > 0 Then
                strsql = strsql + " and a.CompanyGroup = '" & ddlCompanyGrpII.Text & "' "
            End If


            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                strsql = strsql + " and a.AccountId = '" & txtAccountIdII.Text & "' "
            End If

            'If String.IsNullOrEmpty(txtClientNameII.Text.Trim) = False Then
            '    strsql = strsql + " and a.CustName like ""%" & txtClientNameII.Text.Trim & "%"""
            'End If


            If String.IsNullOrEmpty(txtDateFromII.Text) = False Then
                strsql = strsql + " and   A.Salesdate >= '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.Salesdate <= '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFromII.Text) = False And String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.Salesdate between '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtInvoiceNoII.Text.Trim) = False Then
                strsql = strsql + " and a.InvoiceNumber = '" & txtInvoiceNoII.Text & "' "
            End If




            '''''''''''''''''''''''''''''''''''''

            ''''''''''''''
            'strsql = strsql + " UNION "
            'strsql = strsql + " SELECT b.rcno, a.CompanyGroup, a.AccountId, a.ReceiptFrom as Custname, "
            'strsql = strsql + " a.ReceiptNumber as InvoiceNumber, a.ReceiptDate as SalesDate,  0.00, 0.00,  0.00, b.ValueBase , 0.00, b.BalanceBase ,  '',"
            'strsql = strsql + " b.BalanceBase  as OSAmount, 'RCT' as Doctype   "
            ''strsql = strsql + " b.BalanceBase  as OSAmount   "
            'strsql = strsql + " FROM tblrecv a, tblRecvdet b  "
            ''strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            'strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P'"
            'strsql = strsql + " and (b.BalanceBase) < 0   "


            'strsql = strsql + " UNION "
            'strsql = strsql + " SELECT b.rcno, a.CompanyGroup, a.AccountId, a.ReceiptFrom as Custname, "
            'strsql = strsql + " a.ReceiptNumber as InvoiceNumber, a.ReceiptDate as SalesDate,  0.00, 0.00,  0.00, b.ValueBase , 0.00, (b.ValueBase - sum(ifnull(c.DebitBase,0)) + sum(ifnull(c.Creditbase,0))) * (-1) as BalanceBase,  '',"
            'strsql = strsql + " b.BalanceBase  as OSAmount, 'RCT' as Doctype,  b.ValueBase, c.DebitBase, c.Creditbase   "
            'strsql = strsql + " FROM tblrecv a inner join tbljrnvdet c on a.ReceiptNumber = c.RefType, tblRecvdet b  "

            'strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P'"
            'strsql = strsql + " and (b.BalanceBase) < 0   "
            'strsql = strsql + " group by a.ReceiptNumber"
            'strsql = strsql + " having  ((b.ValueBase)- sum(ifnull(c.DebitBase,0)) + sum(ifnull(c.Creditbase,0))) <> 0"

            strsql = strsql + " UNION"
            strsql = strsql + " SELECT a.rcno, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, "
            strsql = strsql + " a.SalesDate as SalesDate,  0.00, 0.00,  0.00, a.ValueBase , 0.00, sum(a.BalanceBase),  '', a.BalanceBase  as OSAmount, "
            strsql = strsql + " 'RCT' as Doctype , 0.00, 0.00, 0.00,'' "
            strsql = strsql + " FROM vwwselectosreceipt a where 1=1  "



            'tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid 

            If ddlCompanyGrpII.SelectedIndex > 0 Then
                strsql = strsql + " and a.CompanyGroup = '" & ddlCompanyGrpII.Text & "' "
            End If

            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                strsql = strsql + " and a.AccountId = '" & txtAccountIdII.Text & "' "
            End If

            'If String.IsNullOrEmpty(txtClientNameII.Text.Trim) = False Then
            '    strsql = strsql + " and a.ReceiptFrom = """ & txtClientNameII.Text & """"
            'End If


            If String.IsNullOrEmpty(txtDateFromII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate >= '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate <= '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFromII.Text) = False And String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate between '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtInvoiceNoII.Text.Trim) = False Then
                strsql = strsql + " and a.ReceiptNumber Like '%" + txtInvoiceNoII.Text.Trim.ToUpper + "%' "
            End If


            strsql = strsql + " group by a.InvoiceNumber "
            strsql = strsql + " having sum(a.BalanceBase) <> 0"

            ''''''''''''''''''''''''''''''''''''''''


            'If ddlContractNo.Text.Trim <> "-1" Then
            '    strsql = strsql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
            'End If

            'If String.IsNullOrEmpty(txtLocationId.Text) = False Then
            '    strsql = strsql + " and   b.LocationId = '" & txtLocationId.Text & "'"
            'End If

            strsql = strsql + " order by Salesdate, InvoiceNumber"


            cmdServiceBillingDetailItem.CommandText = strsql

            SqlDSOSInvoice.SelectCommand = strsql
            SqlDSOSInvoice.DataBind()
            grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
            grvInvoiceRecDetails.DataBind()

            conn.Close()
            conn.Dispose()
            cmdServiceBillingDetailItem.Dispose()
            btnImportInvoiceII.Enabled = True

            'mdlImportInvoices.Show()


            If grvInvoiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvInvoiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGVII"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "INVOICE DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
            End If

            updpnlInvoiceRecs.Update()
        Catch ex As Exception
            lblAlert1.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnShowRecordsII_Click", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub FirstGridViewRowBillingDetailsRecsQR()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("SelRec", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("OtherCode", GetType(String)))
            'dt.Columns.Add(New DataColumn("Location", GetType(String)))
            'dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemCode", GetType(String)))
            'dt.Columns.Add(New DataColumn("ItemDescription", GetType(String)))
            'dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            'dt.Columns.Add(New DataColumn("Qty", GetType(String)))
            dt.Columns.Add(New DataColumn("PriceWithDisc", GetType(String)))
            dt.Columns.Add(New DataColumn("TaxType", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPriceWithGST", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalReceiptAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalCrediteNoteAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("ReceiptAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoReceipt", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("ARCode", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTCode", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceType", GetType(String)))
            dt.Columns.Add(New DataColumn("Remarks", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))

            dt.Columns.Add(New DataColumn("DocType", GetType(String)))
            dt.Columns.Add(New DataColumn("SourceRcno", GetType(String)))

            dr = dt.NewRow()

            dr("SelRec") = String.Empty
            dr("ItemType") = String.Empty
            dr("InvoiceNo") = String.Empty
            dr("InvoiceDate") = String.Empty
            dr("ContractNo") = String.Empty
            dr("ServiceNo") = String.Empty
            dr("OtherCode") = String.Empty
            'dr("ItemType") = String.Empty
            dr("ItemCode") = String.Empty
            'dr("ItemDescription") = String.Empty
            'dr("UOM") = String.Empty
            'dr("Qty") = 0
            dr("PriceWithDisc") = 0
            dr("TaxType") = String.Empty
            dr("GSTPerc") = 0.0
            dr("GSTAmt") = 0
            dr("TotalPriceWithGST") = 0
            dr("TotalReceiptAmt") = 0
            dr("TotalCrediteNoteAmt") = 0
            dr("ReceiptAmt") = 0
            dr("RcnoReceipt") = 0
            dr("RcnoInvoice") = 0
            dr("ARCode") = String.Empty
            dr("GSTCode") = 0
            dr("InvoiceType") = 0
            dr("Remarks") = String.Empty
            dr("GLDescription") = String.Empty

            dr("DocType") = String.Empty
            dr("SourceRcno") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableBillingDetailsRecQR") = dt

            grvBillingDetailsQR.DataSource = dt
            grvBillingDetailsQR.DataBind()

            Dim btnAdd As Button = CType(grvBillingDetailsQR.FooterRow.Cells(1).FindControl("btnAddDetailQR"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FirstGridViewRowBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowBillingDetailsRecsQR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceDate") = TextBoxInvoiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceNo") = TextBoxServiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceType") = TextBoxInvoiceType.Text
                        'dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        'dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        'dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        'dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text                 
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("TotalReceiptAmt") = TextBoxTotalReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalCrediteNoteAmt") = TextBoxBalanceAmt.Text

                        dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoReceipt") = TextBoxRcnoReceipt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ARCode") = TextBoxARCode.Text
                        dtCurrentTable.Rows(i - 1)("GSTCode") = TextBoGSTCode.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("Remarks") = TextBoxRemarks.Text

                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("DocType") = TextBoxDocType.Text
                        dtCurrentTable.Rows(i - 1)("SourceRcno") = TextBoxSourceRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableBillingDetailsRecQR") = dtCurrentTable

                    grvBillingDetailsQR.DataSource = dtCurrentTable
                    grvBillingDetailsQR.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxTargetDesc1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                        'Query = "Select TaxType from tbltaxtype"
                        'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)


                        'Dim Query As String

                        'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts"
                        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

                        'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Query = "Select * from tblunitms"
                        'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)


                        'Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        'Dim TextBoxQty1 As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        'If TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxQty1.Enabled = False
                        '    TextBoxQty1.Text = 1

                        'End If

                        'If rowIndex2 = 0 Then
                        '    If TextBoxItemType1.Text = "SERVICE" Then
                        '        TextBoxItemType1.Enabled = False
                        '    End If
                        'End If

                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecsQR()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "AddNewRowBillingDetailsRecsQR", ex.Message.ToString, "")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataBillingDetailsRecsQR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)

                        TextBoxSelect.Text = dt.Rows(i)("SelRec").ToString()
                        TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()
                        TextBoxInvoiceDate.Text = dt.Rows(i)("InvoiceDate").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxServiceNo.Text = dt.Rows(i)("ServiceNo").ToString()
                        TextBoxInvoiceType.Text = dt.Rows(i)("InvoiceType").ToString()
                        'TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxItemCode.Text = dt.Rows(i)("ItemCode").ToString()
                        'TextBoxItemDescription.Text = dt.Rows(i)("ItemDescription").ToString()
                        'TextBoxUOM.Text = dt.Rows(i)("UOM").ToString()
                        'TextBoxQty.Text = dt.Rows(i)("Qty").ToString()

                        TextBoxPriceWithDisc.Text = dt.Rows(i)("PriceWithDisc").ToString()
                        TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxGSTPerc.Text = dt.Rows(i)("GSTPerc").ToString()
                        TextBoxGSTAmt.Text = dt.Rows(i)("GSTAmt").ToString()
                        TextBoxTotalPriceWithGST.Text = dt.Rows(i)("TotalPriceWithGST").ToString()

                        TextBoxTotalReceiptAmt.Text = dt.Rows(i)("TotalReceiptAmt").ToString()
                        TextBoxBalanceAmt.Text = dt.Rows(i)("TotalCrediteNoteAmt").ToString().ToString()

                        'dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text

                        TextBoxReceiptAmt.Text = dt.Rows(i)("ReceiptAmt").ToString()
                        TextBoxRcnoReceipt.Text = dt.Rows(i)("RcnoReceipt").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxARCode.Text = dt.Rows(i)("ARCode").ToString()
                        TextBoGSTCode.Text = dt.Rows(i)("GSTCode").ToString()
                        TextBoxOtherCode.Text = dt.Rows(i)("OtherCode").ToString()
                        TextBoxRemarks.Text = dt.Rows(i)("Remarks").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()

                        TextBoxDocType.Text = dt.Rows(i)("DocType").ToString()
                        TextBoxSourceRcno.Text = dt.Rows(i)("SourceRcno").ToString()

                        If rowdeleted = "Y" Then
                            TextBoxSelect.Checked = True
                        End If

                        'Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        'Dim TextBoxQty1 As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        'If TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxQty1.Enabled = False
                        '    TextBoxQty1.Text = 1

                        'End If

                        'If rowIndex = 0 Then
                        '    If TextBoxItemType1.Text = "SERVICE" Then
                        '        TextBoxItemType1.Enabled = False
                        '    End If
                        'End If

                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetPreviousDataBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataBillingDetailsRecsQR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceDate") = TextBoxInvoiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceNo") = TextBoxServiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceType") = TextBoxInvoiceType.Text
                        'dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        'dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        'dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        'dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text
                        dtCurrentTable.Rows(i - 1)("TotalReceiptAmt") = TextBoxTotalReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalCrediteNoteAmt") = TextBoxBalanceAmt.Text

                        dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoReceipt") = TextBoxRcnoReceipt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ARCode") = TextBoxARCode.Text
                        dtCurrentTable.Rows(i - 1)("GSTCode") = TextBoGSTCode.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("Remarks") = TextBoxRemarks.Text

                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("DocType") = TextBoxDocType.Text
                        dtCurrentTable.Rows(i - 1)("SourceRcno") = TextBoxSourceRcno.Text
                        'TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableBillingDetailsRecQR") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecsQR()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "SetRowDataBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub btnImportInvoiceII_Click(sender As Object, e As EventArgs) Handles btnImportInvoiceII.Click
        Try
            txtClientFrom.Text = ""
            Dim totalRows As Long
            totalRows = 0


            For rowIndex1 As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                End If
            Next rowIndex1



            If totalRows = 0 Then
                mdlImportInvoices.Show()
                'mdlImportServices.Show()
                'mdlImportServices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If


            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                txtCompanyGroup.Text = ddlCompanyGrpII.Text
                'ddlContactType.Text = txtAccountType.Text
                txtAccountIdBilling.Text = txtAccountIdII.Text
                txtAccountName.Text = txtClientNameII.Text

                'ddlCompanyGrpII.Enabled = False
                ddlContactType.Enabled = False
                txtAccountIdII.Enabled = False
                txtClientNameII.Enabled = False
                btnClient.Visible = False
            Else

            End If


            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
                grvBillingDetailsQR.DataSource = dtScdrLoc
                grvBillingDetailsQR.DataBind()

                SetPreviousDataBillingDetailsRecsQR()
            Next i

            FirstGridViewRowBillingDetailsRecsQR()

            'Start: From tblBillingDetailItem

            txtReceiptAmt.Text = "0.00"

            Dim rowselected As Integer
            rowselected = 0

            For rowIndex As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                'string txSpareId = row.ItemArray[0] as string;
                Dim TextBoxchkSelect As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGVII"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then
                    AddNewRowBillingDetailsRecsQR()
                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    'Header
                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGVII"), TextBox)
                    Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGVII"), TextBox)
                    Dim InvoiceDate As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesDateGVII"), TextBox)
                    Dim InvoiceAmmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAppliedBaseGVII"), TextBox)
                    Dim TotalReceiptAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalReceiptAmountGVII"), TextBox)
                    Dim TotalCNAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalCNAmountGVII"), TextBox)
                    Dim TotalOSAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOSAmountGVII"), TextBox)


                    Dim SourceRcno As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVII"), TextBox)
                    Dim DocType As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtDocTypeGVII"), TextBox)


                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)
                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)


                    Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)
                    TextBoxItemTypeGV.Text = "ARIN"

                    Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                    TextBoxtxtInvoiceNoGV.Text = Convert.ToString(InvoiceNumber.Text)

                    Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                    TextBoxInvoiceDate.Text = Convert.ToDateTime(InvoiceDate.Text).ToString("dd/MM/yyyy")

                    'Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    'TextBoxTotalPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ValueBase"))

                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                    TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(InvoiceAmmount.Text)).ToString("N2")

                    'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    'TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTBase"))


                    Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                    'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(TotalReceiptAmount.Text)).ToString("N2")
                    TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")


                    Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
                    TextBoxTotalCNAmt.Text = (Convert.ToDecimal(TotalCNAmount.Text)).ToString("N2")

                    'Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    'TextBoxRcnoInvoice.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Rcno")))



                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
                    TextBoxOtherCode.Text = txtARCode.Text

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
                    TextBoxGLDescription.Text = txtARDescription.Text

                    Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                    TextBoxReceiptAmt.Text = TotalOSAmount.Text


                    txtReceiptAmt.Text = (Convert.ToDecimal(txtReceiptAmt.Text) + Convert.ToDecimal(TotalOSAmount.Text)).ToString("N2")
                    txtReceivedAmountQR.Text = (Convert.ToDecimal(txtReceiptAmt.Text)).ToString("N2")

                    Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtDocTypeGVQR"), TextBox)
                    TextBoxDocType.Text = DocType.Text

                    Dim TextBoxSourceRcno1 As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtSourceRcnoGVQR"), TextBox)
                    TextBoxSourceRcno1.Text = SourceRcno.Text

                    ''Dim TextBoxItemCodeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
                    ''TextBoxItemCodeGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode")))

                    'Dim TextBoxTermsGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtARCodeGV"), TextBox)
                    'TextBoxTermsGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Terms")))



                    'rowIndex += 1

                    'Next row


                    'txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                    'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    ''Else
                    'FirstGridViewRowBillingDetailsRecs()

                End If

                'End: Detail Records
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString

                'Button1.Enabled = False
                'Timer1.Enabled = True
                'Thread.Sleep(1000)
                'Dim workerThread As New Thread(New ThreadStart(AddressOf ProcessRecords))
                'workerThread.Start()


                'textbox6.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
            Next

            dtScdrLoc.Dispose()


            btnSave.Enabled = True
            updpnlBillingDetailsQR.Update()
            updPanelSave.Update()
            updpnlInvoiceRecs.Update()
            btnSaveQR.Enabled = True
            mdlQuickReceipt.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnImportInvoiceII_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnCancelQR_Click(sender As Object, e As EventArgs) Handles btnCancelQR.Click
        mdlQuickReceipt.Hide()
    End Sub

    Protected Sub txtReceiptDateQR_TextChanged(sender As Object, e As EventArgs) Handles txtReceiptDateQR.TextChanged
        Try
            txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
        Catch ex As Exception
            lblAlertQR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtReceiptDateQR_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnSaveQR_Click(sender As Object, e As EventArgs) Handles btnSaveQR.Click
        Dim rowselected As Integer
        rowselected = 0
        lblAlert1.Text = ""
        btnSaveQR.Enabled = False

        Try

            If String.IsNullOrEmpty(txtReceiptDateQR.Text) = True Then
                lblAlertQR.Text = "Please Enter Receipt Date"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            Dim IsLock = FindRVPeriod(txtReceiptPeriodQR.Text)
            If IsLock = "Y" Then
                lblAlertQR.Text = "PERIOD IS LOCKED"
                updPnlMsgQR.Update()
                txtReceiptDateQR.Focus()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If Convert.ToDecimal(txtReceiptAmt.Text) <> Convert.ToDecimal(txtReceivedAmountQR.Text) Then
                lblAlertQR.Text = "RECEIPT AMOUNT AND SUM OF APPLIED INVOICES SHOULD BE EQUAL"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Exit Sub
            End If


            If ddlPaymentModeQR.SelectedIndex = 0 Then
                lblAlertQR.Text = "Please Select Payment Mode"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If ddlBankCodeQR.SelectedIndex = 0 Then
                lblAlertQR.Text = "Please Enter Bank"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            '''''''''''''''''''''''''''''''' 22.10.17

            'Dim commandReceiptExist As MySqlCommand = New MySqlCommand
            'commandReceiptExist.CommandType = CommandType.Text
            'Dim qryReceiptExist As String

            'qryReceiptExist = "SELECT ReceiptBase from tblSales "
            'qryReceiptExist = qryReceiptExist + " where InvoiceNumber ='" & txtInvoiceNo.Text & "'"

            'commandReceiptExist.CommandText = qryReceiptExist
            'commandReceiptExist.Parameters.Clear()
            'commandReceiptExist.Connection = conn

            'Dim drReceiptExist As MySqlDataReader = commandReceiptExist.ExecuteReader()
            'Dim dtReceiptExist As New DataTable
            'dtReceiptExist.Load(drReceiptExist)


            'If Convert.ToDecimal(dtReceiptExist.Rows(0)("ReceiptBase").ToString) > 0.0 Then
            '    SQLDSInvoice.SelectCommand = txt.Text
            '    SQLDSInvoice.DataBind()
            '    GridView1.DataSourceID = "SQLDSInvoice"
            '    GridView1.DataBind()
            '    mdlQuickReceipt.Hide()
            '    Exit Sub
            'End If

            ''''''''''''''''''''''''''''''''' 22.10.17

            '''''''''''''''''''''''''''''''''''

            'Start: CheckOSAmount
            'SetRowDataBillingDetailsRecsQR()
            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

            '                If tableAdd1 IsNot Nothing Then

            '                    For rowIndex1 As Integer = 0 To tableAdd1.Rows.Count - 1
            '                        'Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
            '        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)

            '                        If (String.IsNullOrEmpty(TextBoxOtherCode.Text.Trim) = False) Then
            '            Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
            '            Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)

            '                            If String.IsNullOrEmpty(TextBoxInvoiceNo.Text) = False Then

            '                                Dim command1 As MySqlCommand = New MySqlCommand
            '                                command1.CommandType = CommandType.Text
            '                                Dim qry1 As String

            '                                qry1 = "SELECT AppliedBase, BalanceBase from tblSales "
            '                                qry1 = qry1 + " where InvoiceNumber ='" & TextBoxInvoiceNo.Text & "'"

            '                                command1.CommandText = qry1
            '                                command1.Parameters.Clear()
            '                                command1.Connection = conn

            '                                Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            '                                Dim dt1 As New DataTable
            '                                dt1.Load(dr1)

            '                                If Convert.ToDecimal(TextBoxReceiptAmt.Text) > Convert.ToDecimal(dt1.Rows(0)("AppliedBase").ToString) Then
            '                                    lblAlertQR.Text = "Receipt Amount is more than Invoice Amount for the Invoice : " & TextBoxInvoiceNo.Text
            '                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                                    updPnlMsgQR.Update()
            '                                    Exit Sub
            '                                End If


            '                                '''''''''''''''''''
            '                                Dim command2 As MySqlCommand = New MySqlCommand
            '                                command2.CommandType = CommandType.Text
            '                                Dim qry2 As String

            '                                qry2 = "SELECT ifnull(sum(ValueBase+gstBase-receiptbase),0) as OSAmt from tblSales "
            '                                qry2 = qry2 + " where InvoiceNumber ='" & TextBoxInvoiceNo.Text & "'"

            '                                command2.CommandText = qry2
            '                                command2.Parameters.Clear()
            '                                command2.Connection = conn

            '                                Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            '                                Dim dt2 As New DataTable
            '                                dt2.Load(dr2)


            '                                If Convert.ToDecimal(TextBoxReceiptAmt.Text) > Convert.ToDecimal(dt2.Rows(0)("OSAmt").ToString) Then
            '                                    lblAlertQR.Text = "Receipt Amount is more than Balance Amount for the Invoice : " & TextBoxInvoiceNo.Text
            '                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                                    updPnlMsgQR.Update()
            '                                    Exit Sub
            '                                End If

            '                                '''''''''''''''''''''
            '                            End If
            '                        End If

            '                    Next rowIndex1
            '                End If

            'End: CheckOSAmount

            ''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecsQR()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

            If tableAdd IsNot Nothing Then
                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String

                'If txtMode.Text = "NEW" Then
                qry = "INSERT INTO tblRecv(ReceiptNumber, ReceiptFrom, AccountId, ReceiptDate, Cheque, ChequeDate, BankId,  "
                qry = qry + "   LedgerCode, LedgerName,  PaymentType, BankName, Bank, BaseAmount, AppliedBase, AppliedOriginal, GSTAmount,  NetAmount, BankAmount, "
                qry = qry + "  Comments, ContactType, CompanyGroup, GLPeriod, Salesman, InvoiceType, Addr1, Addr2, Addr3, Addr4, Location, AddPostal, AddCity, AddState, AddCountry,"
                qry = qry + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                qry = qry + " (@ReceiptNumber, @ReceiptFrom, @AccountId, @ReceiptDate, @Cheque, @ChequeDate, @BankId, "
                qry = qry + "  @LedgerCode, @LedgerName,  @PaymentType, @BankName, @Bank, @BaseAmount, @AppliedBase, @AppliedOriginal, @GSTAmount,  @NetAmount, @BankAmount,"
                qry = qry + "  @Comments, @ContactType, @CompanyGroup, @GLPeriod,  @Salesman, @InvoiceType, @Addr1, @Addr2, @Addr3, @Addr4, @Location, @AddPostal, @AddCity, @AddState, @AddCountry,"
                qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                command.CommandText = qry
                command.Parameters.Clear()


                command.Parameters.AddWithValue("@ReceiptFrom", txtAccountName.Text.ToUpper)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.ToUpper)

                If String.IsNullOrEmpty(txtReceiptDateQR.Text.Trim) = True Then
                    command.Parameters.AddWithValue("@ReceiptDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@ReceiptDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@Comments", txtCommentsQR.Text.ToUpper)
                command.Parameters.AddWithValue("@Cheque", txtChequeNoQR.Text.ToUpper)
                If ddlPaymentModeQR.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@PaymentType", "")
                Else
                    command.Parameters.AddWithValue("@PaymentType", ddlPaymentModeQR.Text.ToUpper)
                End If

                If String.IsNullOrEmpty(txtReceiptDateQR.Text.Trim) = True Then
                    command.Parameters.AddWithValue("@ChequeDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@ChequeDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@BaseAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtReceivedAmountQR.Text))

                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@BankAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))

                command.Parameters.AddWithValue("@Bank", ddlBankCodeQR.Text.ToUpper)
                command.Parameters.AddWithValue("@BankId", txtBankIDQR.Text.ToUpper)
                command.Parameters.AddWithValue("@LedgerCode", txtBankGLCodeQR.Text.ToUpper)
                command.Parameters.AddWithValue("@LedgerName", txtLedgerNameQR.Text.ToUpper)
                command.Parameters.AddWithValue("@BankName", txtBankNameQR.Text.ToUpper)

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text.ToUpper)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.ToUpper)
                command.Parameters.AddWithValue("@GLPeriod", txtReceiptPeriodQR.Text)

                If txtSalesmanQR.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", txtSalesmanQR.Text.ToUpper)
                End If

                command.Parameters.AddWithValue("@InvoiceType", "")

                command.Parameters.AddWithValue("@Addr1", txtBillAddress.Text)
                command.Parameters.AddWithValue("@Addr2", txtBillStreet.Text)
                command.Parameters.AddWithValue("@Addr3", txtBillBuilding.Text)
                command.Parameters.AddWithValue("@Addr4", txtBillCountry.Text & ", " & txtBillPostal.Text)
                command.Parameters.AddWithValue("@Location", txtLocation.Text.ToUpper)

                command.Parameters.AddWithValue("@AddPostal", txtBillPostal.Text.Trim)
                command.Parameters.AddWithValue("@AddCity", txtBillCity.Text.Trim)
                command.Parameters.AddWithValue("@AddState", txtBillState.Text.Trim)
                command.Parameters.AddWithValue("@AddCountry", txtBillCountry.Text.Trim)

                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                If String.IsNullOrEmpty(txtReceiptNoQR.Text) = True Then
                    GenerateReceiptNo()
                    updPnlQR.Update()
                End If

                If String.IsNullOrEmpty(txtReceiptNoQR.Text.Trim) = True Then
                    lblAlert1.Text = "RECEIPT NUMBER CANNOT BE BLANK"
                    updPnlMsgQR.Update()
                    Exit Sub
                End If
                command.Parameters.AddWithValue("@ReceiptNumber", txtReceiptNoQR.Text)

                command.Connection = conn
                command.ExecuteNonQuery()

                Dim sqlLastId As String
                sqlLastId = "SELECT last_insert_id() from tblRecv"

                Dim commandRcno As MySqlCommand = New MySqlCommand
                commandRcno.CommandType = CommandType.Text
                commandRcno.CommandText = sqlLastId
                commandRcno.Parameters.Clear()
                commandRcno.Connection = conn
                txtRcno.Text = commandRcno.ExecuteScalar()

                commandRcno.Dispose()

                Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

                commandtblServiceBillingDetailItem.CommandType = CommandType.Text
                'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
                Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblRecvDet where ReceiptNumber = '" & txtReceiptNoQR.Text & "'"

                commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
                commandtblServiceBillingDetailItem.Parameters.Clear()
                commandtblServiceBillingDetailItem.Connection = conn
                commandtblServiceBillingDetailItem.ExecuteNonQuery()

                'End: Delete Existing Records

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("chkSelectGVQR"), CheckBox)
                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).FindControl("txtItemTypeGVQR"), DropDownList)


                    'If (TextBoxchkSelect.Checked = True) Then
                    If (TextBoxItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(TextBoxOtherCode.Text) = False Then
                        'If (String.IsNullOrEmpty(TextBoxOtherCode.Text.Trim) = False) Then
                        'Header
                        rowselected = rowselected + 1

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoicePrice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxInvoiceGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxInvoiceValue As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGVQR"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceTypeGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGVQR"), TextBox)

                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGVQR"), TextBox)
                        Dim TextBoxTerms As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtARCodeGVQR"), TextBox)
                        'Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtRemarksGVQR"), TextBox)

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtSourceRcnoGVQR"), TextBox)

                        If String.IsNullOrEmpty(TextBoxSourceRcno.Text) = True Then
                            TextBoxSourceRcno.Text = 0
                        End If

                        Dim lContractGroup As String
                        lContractGroup = ""

                        If String.IsNullOrEmpty(TextBoxContractNo.Text) = False Then
                            Dim commandCG As MySqlCommand = New MySqlCommand
                            commandCG.CommandType = CommandType.Text

                            commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & TextBoxContractNo.Text & "'"
                            'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                            commandCG.Connection = conn

                            Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                            Dim dtCG As New DataTable
                            dtCG.Load(drCG)


                            lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                            commandCG.Dispose()
                            dtCG.Dispose()
                        End If

                        Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                        commandSalesDetail.CommandType = CommandType.Text
                        Dim qrySalesDetail As String = "INSERT INTO tblRecvDet(ReceiptNumber, RefType, InvoiceNo, InvoiceDate, InvoicePrice, InvoiceGST, InvoiceValue,  "
                        qrySalesDetail = qrySalesDetail + "ReceiptValue, LedgerCode, LedgerName, RcnoServiceBillingItem, ContractNo, ServiceRecordNo, InvoiceType, TaxType, ItemCode, Terms, ContractGroup,  "
                        qrySalesDetail = qrySalesDetail + "UnitBase, UnitOriginal, ValueBase, ValueOriginal, AppliedBase, AppliedOriginal, SubCode, Description, Quantity, Exchangerate, Currency,   DocType, SourceRcno, AccountID, AccountName, "
                        qrySalesDetail = qrySalesDetail + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                        qrySalesDetail = qrySalesDetail + "(@ReceiptNumber, @RefType, @InvoiceNo, @InvoiceDate, @InvoicePrice, @InvoiceGST,  @InvoiceValue, "
                        qrySalesDetail = qrySalesDetail + "@ReceiptValue, @LedgerCode, @LedgerName, @RcnoServiceBillingItem, @ContractNo, @ServiceRecordNo, @InvoiceType, @TaxType, @ItemCode, @Terms, @ContractGroup, "
                        qrySalesDetail = qrySalesDetail + "@UnitBase, @UnitOriginal, @ValueBase, @ValueOriginal, @AppliedBase, @AppliedOriginal, @SubCode, @Description, @Quantity, @Exchangerate, @Currency, @DocType, @SourceRcno, @AccountID, @AccountName,"
                        qrySalesDetail = qrySalesDetail + "@CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                        commandSalesDetail.CommandText = qrySalesDetail
                        commandSalesDetail.Parameters.Clear()

                        commandSalesDetail.Parameters.AddWithValue("@ReceiptNumber", txtReceiptNoQR.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@InvoiceNo", TextBoxInvoiceNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@RefType", TextBoxInvoiceNo.Text.ToUpper)

                        If TextBoxInvoiceDate.Text.Trim = "" Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", DBNull.Value)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", Convert.ToDateTime(TextBoxInvoiceDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", TextBoxInvoiceDate.Text)

                        If String.IsNullOrEmpty(TextBoxInvoicePrice.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", Convert.ToDecimal(TextBoxInvoicePrice.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", 0.0)
                        End If


                        If String.IsNullOrEmpty(TextBoxInvoiceGST.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", Convert.ToDecimal(TextBoxInvoiceGST.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", 0.0)
                        End If

                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", Convert.ToDecimal(TextBoxInvoiceGST.Text))
                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", Convert.ToDecimal(TextBoxInvoiceValue.Text))

                        If String.IsNullOrEmpty(TextBoxInvoiceValue.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", Convert.ToDecimal(TextBoxInvoiceValue.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", 0.0)
                        End If

                        'If String.IsNullOrEmpty(TextBoxInvoicePrice.Text) = False Then
                        '    commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", Convert.ToDecimal(TextBoxInvoicePrice.Text))
                        'Else
                        '    commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", 0.00))
                        'End If

                        commandSalesDetail.Parameters.AddWithValue("@ReceiptValue", Convert.ToDecimal(TextBoxReceiptAmt.Text))



                        commandSalesDetail.Parameters.AddWithValue("@LedgerCode", TextBoxOtherCode.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@LedgerName", TextBoxGLDescription.Text.ToUpper)

                        'commandSalesDetail.Parameters.AddWithValue("@LedgerCode", txtARCode.Text)
                        'commandSalesDetail.Parameters.AddWithValue("@LedgerName", txtARDescription.Text)

                        If String.IsNullOrEmpty(TextBoxRcnoInvoice.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceBillingItem", TextBoxRcnoInvoice.Text)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceBillingItem", 0.0)
                        End If


                        commandSalesDetail.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@ServiceRecordNo", TextBoxServiceRecordNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@InvoiceType", TextBoxInvoiceType.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text.ToUpper)

                        commandSalesDetail.Parameters.AddWithValue("@ItemCode", TextBoxItemCode.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@Terms", TextBoxTerms.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup.ToUpper)

                        'commandSalesDetail.Parameters.AddWithValue("@ValueBase", 1)
                        'commandSalesDetail.Parameters.AddWithValue("@GSTBase", 1)
                        'commandSalesDetail.Parameters.AddWithValue("@AppliedBase", 1)

                        commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))

                        commandSalesDetail.Parameters.AddWithValue("@SubCode", TextBoxItemType.Text)
                        commandSalesDetail.Parameters.AddWithValue("@Description", TextBoxRemarks.Text)

                        commandSalesDetail.Parameters.AddWithValue("@Quantity", 1.0)
                        commandSalesDetail.Parameters.AddWithValue("@Exchangerate", 1.0)
                        commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")


                        ''''''''''''''''''''
                        If TextBoxItemType.Text = "ARIN" And String.IsNullOrEmpty(TextBoxInvoiceNo.Text) = True Then
                            commandSalesDetail.Parameters.AddWithValue("@DocType", "INV")
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@DocType", TextBoxDocType.Text)
                        End If



                        If TextBoxDocType.Text = "RCT" Then
                            commandSalesDetail.Parameters.AddWithValue("@SourceRcno", TextBoxSourceRcno.Text)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@SourceRcno", 0)
                        End If


                        commandSalesDetail.Parameters.AddWithValue("@AccountID", txtAccountIdBilling.Text)
                        commandSalesDetail.Parameters.AddWithValue("@AccountName", txtAccountName.Text.ToUpper)


                        ''''''''''''''''''''''''


                        commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        commandSalesDetail.Connection = conn
                        commandSalesDetail.ExecuteNonQuery()

                        commandSalesDetail.Dispose()


                    End If   'If String.IsNullOrEmpty(TextBoxInvoiceNo.Text)=False then

                Next rowIndex

                command.Dispose()
                commandtblServiceBillingDetailItem.Dispose()
            End If

            conn.Close()
            conn.Dispose()


            'If txtMode.Text = "NEW" Then
            lblMessageQR.Text = "ADD: RECEIPT RECORD SUCCESSFULLY ADDED"
            lblMessage.Text = "ADD: RECEIPT RECORD SUCCESSFULLY ADDED"
            'Else
            'lblMessageQR.Text = "EDIT: RECEIPT RECORD SUCCESSFULLY UPDATED"
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "RECEIPT", txtReceiptNoQR.Text, "ADD/POST", Convert.ToDateTime(txtCreatedOn.Text), txtReceivedAmountQR.Text, 0, txtReceivedAmountQR.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            'End If

            PostReceipt()

            CalculateTotal()
            lblAlert.Text = ""
            btnPost.Enabled = True
            updPnlMsg.Update()
            updPnlSearch.Update()

            InsertNewLogReceiptDetail()
            'updpnlServiceRecs.Update()

            mdlQuickReceipt.Hide()
            GridView1_SelectedIndexChanged(New Object(), New EventArgs)
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnSaveQR_click", ex.Message.ToString, txtReceiptNoQR.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub GenerateReceiptNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String

            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtReceiptDateQR.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If


            lPrefix = Format(CDate(strdate), "yyyyMM")
            'lInvoiceNo = "RCPT" + lPrefix + "-"
            lInvoiceNo = txtRecvPrefixQR.Text + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            'lPrefix = "RCPT" + lYear
            lSuffixVal = 0


            ''''''''''''''
            lInvoiceNo = txtRecvPrefixQR.Text + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = txtRecvPrefixQR.Text + lYear
            lPrefix = Right(lPrefix, 6)
            lSuffixVal = 0

            '''''''''''''''

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "02" Then
                '    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "03" Then
                '    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "04" Then
                '    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "05" Then
                '    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "06" Then
                '    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "07" Then
                '    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "08" Then
                '    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "09" Then
                '    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "10" Then
                '    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "11" Then
                '    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "12" Then
                '    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                commandDocControlEdit.Dispose()
                dt2.Dispose()
            Else

                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If


                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                              "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1

            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtReceiptNoQR.Text = lInvoiceNo + lSuffix

            dt.Dispose()
            commandDocControl.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION GenerateReceiptNo", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub PostReceipt()
        Try

            Dim IsSuccess As Boolean = False
            Dim conn As MySqlConnection = New MySqlConnection()

            'Dim rowselected As Integer

            '''''''''''''''''''''''''
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            '''''''''''''''''''
            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblrecv set PostStatus = 'P'  where ReceiptNumber ='" & txtReceiptNoQR.Text.Trim & "'"

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()

            '''''''''''''''''''''

            'Dim command5 As MySqlCommand = New MySqlCommand
            'command5.CommandType = CommandType.Text

            'Dim qry5 As String = "DELETE from tblAR where VoucherNumber = '" & txtReceiptNoQR.Text & "'"

            'command5.CommandText = qry5
            ''command1.Parameters.Clear()
            'command5.Connection = conn
            'command5.ExecuteNonQuery()

            Dim qryAR As String
            Dim commandAR As MySqlCommand = New MySqlCommand
            commandAR.CommandType = CommandType.Text

            'If Convert.ToDecimal(txtReceiptAmt.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, BillingPeriod, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @BillingPeriod,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()
            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtReceiptNoQR.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtReceiptDateQR.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
            '    End If
            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriodQR.Text)
            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", "")
            '    commandAR.Parameters.AddWithValue("@GLCode", txtBankGLCodeQR.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtBankNameQR.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
            '    commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtReceiptNoQR.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If


            'Start:Loop thru' Credit values

            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT RefType, ReceiptValue  FROM tblrecvdet where ReceiptNumber ='" & txtReceiptNoQR.Text.Trim & "'"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)


            Dim lTotalReceiptAmt As Decimal
            Dim lInvoiceAmt As Decimal
            'Dim lReceptAmtAdjusted As Decimal

            lTotalReceiptAmt = 0.0
            lInvoiceAmt = 0.0

            lTotalReceiptAmt = dtValues.Rows(0)("ReceiptValue").ToString
            Dim rowindex = 0


            For Each row As DataRow In dtValues.Rows

                'qryAR = "INSERT INTO tblAR(VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, ServiceRecordNo, ServiceDate, BillingPeriod, Salesman, InvoiceType, GLType,  "
                'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @ServiceRecordNo, @ServiceDate,  @BillingPeriod, @Salesman, @InvoiceType, @GLType,"
                'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                'commandAR.CommandText = qryAR
                'commandAR.Parameters.Clear()
                'commandAR.Parameters.AddWithValue("@VoucherNumber", txtReceiptNoQR.Text)
                'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                'If txtReceiptDateQR.Text.Trim = "" Then
                '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                'Else
                '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                'End If
                'commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriodQR.Text)
                'commandAR.Parameters.AddWithValue("@ContractNo", row("ContractNo"))
                'commandAR.Parameters.AddWithValue("@InvoiceNumber", row("InvoiceNo"))
                'commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
                'commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
                'commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)

                ''commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ReceiptValue")))
                'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(dtValues.Rows(rowindex)("ReceiptValue").ToString))

                'commandAR.Parameters.AddWithValue("@BatchNo", txtReceiptNoQR.Text)
                'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                'commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
                'commandAR.Parameters.AddWithValue("@GLType", "Debtor")
                'commandAR.Parameters.AddWithValue("@ServiceRecordNo", row("ServiceRecordNo"))

                'commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                ''Else
                ''commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lServiceDate).ToString("yyyy-MM-dd"))
                ''End If


                'commandAR.Parameters.AddWithValue("@Salesman", txtSalesmanQR.Text)
                'commandAR.Parameters.AddWithValue("@InvoiceType", row("InvoiceType"))

                'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                'commandAR.Connection = conn
                'commandAR.ExecuteNonQuery()


                ''Start: Update tblSales

                ' ''''''''''''''''''''

                If String.IsNullOrEmpty(row("RefType")) = False Then
                    UpdateTblSalesQR(row("RefType"))
                End If


                rowindex = rowindex + 1
            Next row


            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()


            conn.Close()
            conn.Dispose()
            'command5.Dispose()
            commandUpdateInvoice.Dispose()
            commandValues.Dispose()
            dtValues.Dispose()
            commandAR.Dispose()
            IsSuccess = True
            'Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PostReceipt", ex.Message.ToString, "")
        End Try

    End Sub


    Private Sub UpdateTblSalesQR(strInvoiceNo As String)
        Try
            Dim lTotalReceipt As Decimal
            Dim lInvoiceAmount As Decimal
            Dim lTotalcn As Decimal
            lTotalReceipt = 0.0
            lInvoiceAmount = 0.0
            lTotalcn = 0.0


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT AppliedBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                lInvoiceAmount = dt1.Rows(0)("AppliedBase").ToString
            End If

            '19.04.22

            'Start: Quoted
            'Dim command2 As MySqlCommand = New MySqlCommand
            'command2.CommandType = CommandType.Text
            ''command2.CommandText = "SELECT sum(a.AppliedBase) as totalreceipt FROM tblrecvdet a, tblRecv b where a.ReceiptNumber = b.ReceiptNumber and  a.RefTYpe = '" & strInvoiceNo & "' and b.PostStatus = 'P'"
            ''vSql = "UPDATE m02Sales SET ReceiptBase = (SELECT SUM(A.ValueBase+A.GstBase) FROM m02RecvDet A, m02Recv B WHERE " & _
            ''       "A.VoucherNumber=B.VoucherNumber AND A.SubCode = 'ARIN'  AND A.RefType = m02Sales.VoucherNumber AND " & _
            ''       "B.PostStatus = 'P' ) WHERE VoucherNumber = '" & cls00Regional.String_Filter(vVoucherNumber) & "' "
            ''If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")

            ''vSql = "UPDATE m02Sales SET ReceiptOriginal = (SELECT SUM(A.ValueOriginal+A.GstOriginal) FROM m02RecvDet A, m02Recv B WHERE " & _

            ''    "A.VoucherNumber=B.VoucherNumber AND A.SubCode = 'ARIN' AND A.RefType = m02Sales.VoucherNumber AND " & _
            ''    "B.PostStatus = 'P' ) WHERE VoucherNumber = '" & cls00Regional.String_Filter(vVoucherNumber) & "' "
            ''If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")

            'command2.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
            '      "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
            '      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "
            ''If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")



            ''If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")
            'command2.Connection = conn

            ''command4.Connection = conn
            'command2.ExecuteNonQuery()

            'End: Quoted

            Dim command2 As MySqlCommand = New MySqlCommand
            command2.CommandType = CommandType.StoredProcedure
            command2.CommandText = "UpdatetblSalesReceiptBalance"

            'command2.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
            '      "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
            '      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "'"
            '
            command2.Parameters.AddWithValue("@pr_InvoiceNumber", strInvoiceNo)
            command2.Parameters.AddWithValue("@pr_UpdateType", "ReceiptBase")
            command2.Parameters.AddWithValue("@pr_Balance", 0.0)
            command2.Connection = conn
            command2.ExecuteNonQuery()
            '19.04.22


            'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    lTotalReceipt = dt2.Rows(0)("totalreceipt").ToString
            'End If
            ''''''''''''''''''''''''

            ''''''''''''''''''''''''
            Dim lbalance As Decimal
            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text
            command3.CommandText = "SELECT ValueBase, GSTBase ,ReceiptBase, CreditBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            'command3.CommandText = "UPDATE tblSales SET ReceiptOriginal = (SELECT SUM(A.ValueOriginal+A.GstOriginal) FROM tblRecvDet A, tblRecv B WHERE " & _
            '"A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN' AND A.RefType = tblSales.InvoiceNumber AND " & _
            '"B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "
            command3.Connection = conn

            'command4.Connection = conn
            command3.ExecuteNonQuery()

            Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            Dim dt3 As New DataTable
            dt3.Load(dr3)

            If dt3.Rows.Count > 0 Then

                If String.IsNullOrEmpty(dt3.Rows(0)("ValueBase").ToString) = False Then
                    lbalance = dt3.Rows(0)("ValueBase").ToString
                Else
                    lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("GSTBase").ToString) = False Then
                    lbalance = lbalance + dt3.Rows(0)("GSTBase").ToString
                Else
                    'lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
                    lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
                Else
                    'lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
                    lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
                Else
                    'lbalance = 0.0
                End If
                'lbalance = Convert.ToDecimal(dt3.Rows(0)("ValueBase").ToString) + Convert.ToDecimal(dt3.Rows(0)("GSTBase").ToString) - Convert.ToDecimal(dt3.Rows(0)("ReceiptBase").ToString)
                'If String.IsNullOrEmpty(dt3.Rows(0)("totalcn").ToString) = True Then
                '    lTotalcn = 0.0
                'Else
                '    lTotalcn = dt3.Rows(0)("totalcn").ToString
                'End If
            End If

            ''''''''''''''''''''''''
            'Dim lstatus As String
            'If lInvoiceAmount = lTotalReceipt Then
            '    lstatus = "F"
            'ElseIf lInvoiceAmount > lTotalReceipt Then
            '    lstatus = "P"
            'ElseIf lTotalReceipt > 0 Then
            '    lstatus = "O"
            'End If

            'Dim lstatus As String
            'lstatus = ""
            'If lInvoiceAmount = lTotalReceipt + lTotalcn Then
            '    lstatus = "F"
            'ElseIf lInvoiceAmount > lTotalReceipt + lTotalcn Then
            '    lstatus = "P"
            'ElseIf lTotalReceipt + lTotalcn = 0 Then
            '    lstatus = "O"
            'End If


            'lbalance = lInvoiceAmount - lTotalReceipt - lTotalcn

            '19.04.22
            'Dim command4 As MySqlCommand = New MySqlCommand
            'command4.CommandType = CommandType.Text

            ' ''Dim qry4 As String = "Update tblSales Set PaidStatus = '" & lstatus & "', TotalReceiptAmount = " & lTotalReceipt & " where InvoiceNumber = @InvoiceNumber "
            'Dim qry4 As String = "Update tblSales Set BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            'command4.CommandText = qry4
            'command4.Parameters.Clear()

            'command4.Parameters.AddWithValue("@InvoiceNumber", strInvoiceNo)
            'command4.Connection = conn
            'command4.ExecuteNonQuery()

            Dim command4 As MySqlCommand = New MySqlCommand
            command4.CommandType = CommandType.StoredProcedure
            command4.CommandText = "UpdatetblSalesReceiptBalance"

            'command2.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
            '      "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
            '      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "'"
            command4.Parameters.Clear()
            command4.Parameters.AddWithValue("@pr_InvoiceNumber", strInvoiceNo)
            command4.Parameters.AddWithValue("@pr_UpdateType", "BalanceBase")
            command4.Parameters.AddWithValue("@pr_Balance", lbalance)


            'command4.Parameters.AddWithValue("@InvoiceNumber", strInvoiceNo)
            command4.Connection = conn
            command4.ExecuteNonQuery()
            '19.04.22

            command1.Dispose()
            command2.Dispose()
            command3.Dispose()
            command4.Dispose()
            dt1.Dispose()
            dt3.Dispose()
            '    'End: Update tblSales
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION UpdateTblSalesQR", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub chkManualInvoice_CheckedChanged(sender As Object, e As EventArgs) Handles chkManualInvoice.CheckedChanged
        If chkManualInvoice.Checked = True Then
            txtInvoiceNo.Attributes.Remove("readonly")
            txtInvoiceNo.BackColor = Color.White
            txtInvoiceNo.Focus()
        Else
            txtInvoiceNo.Attributes.Add("readonly", "readonly")
            txtInvoiceNo.BackColor = Drawing.Color.FromArgb(204, 204, 204)
            txtInvoiceNo.Text = ""

        End If
    End Sub



    ''''''''''''' start
    Private Function PostInvoice() As Boolean
        Try
            lblAlert.Text = ""
            Dim IsSuccess As Boolean = False
            If Convert.ToDecimal(txtTotalWithGST.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtNetAmount.Text.Trim).ToString("N2") Then
                'If txtNetAmount.Text <> txtTotalWithGST.Text Then
                lblAlert.Text = "INVOICE AMOUNT AND SUM OF APPLIED INVOICES SHOULD BE EQUAL.. CANNOT BE POSTED"
                IsSuccess = False
                Return IsSuccess
                Exit Function

            End If

            HeaderDetailTotal("BefPost")
            Dim conn As MySqlConnection = New MySqlConnection()
            '''''''''''''''''''''''''''''''''''''''

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            '''''''''''''''''''''''''''''''''''''''''''
            Dim lStatusIsHeaderDetailEqual As String
            Dim commandIsHeaderDetailEqual As MySqlCommand = New MySqlCommand

            commandIsHeaderDetailEqual.CommandType = CommandType.StoredProcedure
            commandIsHeaderDetailEqual.CommandText = "IsHeaderDetailEqual"
            'commandIsExists.Connection = conn
            commandIsHeaderDetailEqual.Parameters.Clear()

            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_Module", "IN")
            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_DocumentNo", txtInvoiceNo.Text.Trim)

            commandIsHeaderDetailEqual.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            commandIsHeaderDetailEqual.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandIsHeaderDetailEqual.Connection = conn
            commandIsHeaderDetailEqual.ExecuteScalar()

            lStatusIsHeaderDetailEqual = commandIsHeaderDetailEqual.Parameters("@pr_status").Value

            commandIsHeaderDetailEqual.Dispose()
            'conn.Close()
            'conn.Dispose()

            If lStatusIsHeaderDetailEqual = "F" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "INVOICE AMOUNT AND SUM OF APPLIED INVOICES SHOULD BE EQUAL.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If

            If lStatusIsHeaderDetailEqual = "V" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If

            ''''''''''''''''''''''''''''''''''''''''''

            Dim IsServiceRecords As Integer
            Dim lStatus As String

            Dim IsServiceRecords1 As Integer
            Dim lStatus1 As String
            ''''''''''''''''''''''''''''''''
            Dim commandIsExists As MySqlCommand = New MySqlCommand

            commandIsExists.CommandType = CommandType.StoredProcedure
            commandIsExists.CommandText = "IsServiceRecordBilledSales"
            'commandIsExists.Connection = conn
            commandIsExists.Parameters.Clear()

            commandIsExists.Parameters.AddWithValue("@pr_Source", "SALES")
            commandIsExists.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            commandIsExists.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_status1", MySqlDbType.String))
            commandIsExists.Parameters("@pr_status1").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_count", MySqlDbType.Int64))
            commandIsExists.Parameters("@pr_count").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_count1", MySqlDbType.Int64))
            commandIsExists.Parameters("@pr_count1").Direction = ParameterDirection.Output
            'commandIsExists.Parameters.Add("@pr_status").Direction = ParameterDirection.Output

            commandIsExists.Connection = conn
            commandIsExists.ExecuteScalar()

            IsServiceRecords = commandIsExists.Parameters("@pr_count").Value
            IsServiceRecords1 = commandIsExists.Parameters("@pr_count1").Value

            lStatus = commandIsExists.Parameters("@pr_status").Value
            lStatus1 = commandIsExists.Parameters("@pr_status1").Value

            If (Right(lStatus.Trim, 1)) = "," Then
                lStatus = Left(lStatus.Trim, Len(lStatus.Trim) - 1)
            End If

            If (Right(lStatus1.Trim, 1)) = "," Then
                lStatus1 = Left(lStatus1.Trim, Len(lStatus1.Trim) - 1)
            End If

            commandIsExists.Dispose()
            'conn.Close()
            'conn.Dispose()

            If IsServiceRecords1 > 0 Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE ARE DUPLICATE SERVICE RECORDS IN THE INVOICE .. CANNOT BE POSTED "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                IsSuccess = False
                Return IsSuccess
            End If

            If IsServiceRecords > 0 Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE IS NO BALANCE AMOUNT TO BE BILLED FOR " & IsServiceRecords & " SERVICE RECORD (S): " & lStatus & " OF THIS INVOICE NUMBER .. CANNOT BE POSTED "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                IsSuccess = False
                Return IsSuccess
            End If

            '''''''''''''''''''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'P'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()


            '''''''''''''''

            ' ''''''''''' 06.05.18
            'Dim qryAR As String
            Dim commandAR As MySqlCommand = New MySqlCommand
            commandAR.CommandType = CommandType.Text

            ''Start:Loop thru' Credit values


            Dim commandValues As MySqlCommand = New MySqlCommand
            commandValues.CommandType = CommandType.StoredProcedure
            commandValues.CommandText = "PostInvoiceUpdateServiceRecord"

            commandValues.Parameters.Clear()

            commandValues.Parameters.AddWithValue("@pr_EditDelete", "Edit")
            commandValues.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            commandValues.Connection = conn
            commandValues.ExecuteScalar()
            'commandValues.CommandType = CommandType.Text

            ''commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            'commandValues.CommandText = "SELECT ItemCode, RefTYpe, CostCode  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            'commandValues.Connection = conn

            'Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            'dtValues.Load(drValues)

            'For Each row As DataRow In dtValues.Rows

            '    'Start: Update tblServiceRecord
            '    If row("ItemCode") = "IN-DEF" Or row("ItemCode") = "IN-SRV" Then
            '        Dim command4 As MySqlCommand = New MySqlCommand
            '        command4.CommandType = CommandType.Text

            '        If row("RefType") <> "--SELECT--" Then
            '            UpdateServiceRecord(row("RefType"), 0, row("CostCode"), "Edit")
            '        End If

            '        command4.Dispose()
            '    End If

            'Next row

            ''End: Loop thru' Credit Values

            ' ''''''''''' 06.05.18


            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            'GridView1.DataBind()
            conn.Close()
            conn.Dispose()

            'command1.Dispose()
            commandUpdateInvoice.Dispose()
            commandValues.Dispose()
            commandAR.Dispose()
            dtValues.Dispose()
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            HeaderDetailTotal("AftPost")
            'MakeMeNullBillingDetails()
            'MakeMeNull()
            DisableControls()
            FirstGridViewRowGL()


            ''''''''''''''' Insert tblAR

            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION PostInvoice", ex.Message.ToString, txtInvoiceNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Function

    Private Function ReverseInvoice() As Boolean
        Try
            'Dim confirmValue As String
            'confirmValue = ""


            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            ''''''''''''''' Insert tblAR

            ''''''''''''''''''''
            'PopulateArCode()

            '''''''''''''''''''''''''
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()

            ''''''''''''''''

            'Dim qryAR As String
            Dim commandAR As MySqlCommand = New MySqlCommand
            commandAR.CommandType = CommandType.Text

            ''Start:Loop thru' Credit values

            Dim commandValues As MySqlCommand = New MySqlCommand
            commandValues.CommandType = CommandType.StoredProcedure
            commandValues.CommandText = "PostInvoiceUpdateServiceRecord"

            commandValues.Parameters.Clear()

            commandValues.Parameters.AddWithValue("@pr_EditDelete", "Delete")
            commandValues.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            commandValues.Connection = conn
            commandValues.ExecuteScalar()

            'Dim commandValues As MySqlCommand = New MySqlCommand

            'commandValues.CommandType = CommandType.Text
            ''commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            'commandValues.CommandText = "SELECT InvoiceNumber, RefType, ValueBase, CostCode  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            'commandValues.Connection = conn

            'Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            'Dim dtValues As New DataTable
            'dtValues.Load(drValues)


            'For Each row As DataRow In dtValues.Rows

            '    If Convert.ToDecimal(row("ValueBase")) > 0.0 Then

            '        If row("RefType") <> "--SELECT--" Then
            '            UpdateServiceRecord(row("RefType"), row("ValueBase"), row("CostCode"), "Delete")
            '        End If

            '    End If

            'Next row

            ''End: Loop thru' Credit Values

            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)


            'MakeMeNullBillingDetails()
            'MakeMeNull()
            DisableControls()
            FirstGridViewRowGL()


            ''''''''''''''' Insert tblAR

            lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            updpnlServiceRecs.Update()

            conn.Close()
            conn.Dispose()

            commandAR.Dispose()
            'dtValues.Dispose()
            commandUpdateInvoice.Dispose()
            commandValues.Dispose()

            'command1.Dispose()


            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            Dim IsSuccess As Boolean
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION ReverseInvoice", ex.Message.ToString, txtInvoiceNo.Text)
            IsSuccess = False
            Return IsSuccess
        End Try
    End Function


    ''''''''''''' end

    Protected Sub btnConfirmYes_Click(sender As Object, e As EventArgs) Handles btnConfirmYes.Click
        Try

            IsSuccess = PostInvoice()

            If IsSuccess = True Then

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                lblAlert.Text = ""
                updPnlSearch.Update()
                updPnlMsg.Update()

                'updpnlServiceRecs.Update()

                txtRcnoSelected.Text = txtRcno.Text
                btnQuickSearch_Click(sender, e)

                lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                updPnlMsg.Update()

                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                InsertNewLog()

                If txtAutoEmailInvoice.Text = "True" Then
                    mdlPopupPrint.Show()

                End If

            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnConfirmYes_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnConfirmYesReverse_Click(sender As Object, e As EventArgs) Handles btnConfirmYesReverse.Click
        IsSuccess = ReverseInvoice()

        If IsSuccess = True Then
            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            'updpnlServiceRecs.Update()

            txtRcnoSelected.Text = txtRcno.Text
            btnQuickSearch_Click(sender, e)

            lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"
            updPnlMsg.Update()

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = True
            btnChangeStatus.ForeColor = System.Drawing.Color.Black

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black

            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black

            btnPost.Enabled = True
            btnPost.ForeColor = System.Drawing.Color.Black

            InsertNewLog()
        End If
    End Sub

    Protected Sub btnConfirmYesSavePost_Click(sender As Object, e As EventArgs) Handles btnConfirmYesSavePost.Click
        Try
            IsSuccess = PostInvoice()

            If IsSuccess = True Then

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                lblAlert.Text = ""
                updPnlSearch.Update()
                updPnlMsg.Update()

                'updpnlServiceRecs.Update()

                txtRcnoSelected.Text = txtRcno.Text
                btnQuickSearch_Click(sender, e)

                lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                updPnlMsg.Update()

                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                InsertNewLog()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnConfirmYesSavePost_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtCommentsQR_TextChanged(sender As Object, e As EventArgs) Handles txtCommentsQR.TextChanged
        btnSaveQR_Click(sender, e)
    End Sub

    Protected Sub txtInvoicenoSearch_TextChanged(sender As Object, e As EventArgs) Handles txtInvoicenoSearch.TextChanged
        If Len(txtInvoicenoSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

        Else
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()

                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If

    End Sub

    Protected Sub btnEditPONo_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditPONo.Click
        lblMessage.Text = ""
        'lblAlertTeam.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT PO NO."
            Return

        End If

        mdlPopupEditPONo.Show()
    End Sub

    Protected Sub btnEditComments_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditComments.Click
        lblMessage.Text = ""
        'lblAlertTeam.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT REMARKS"
            Return

        End If

        txtRemarksEdit.Text = txtComments.Text

        mdlPopupEditRemarks.Show()
    End Sub

    Protected Sub btnEditPONoSave_Click(sender As Object, e As EventArgs) Handles btnEditPONoSave.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""
            'Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " OurRef = @OurRef, YourRef = @YourRef, PoNo = @PoNo, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@OurRef", txtOurRefEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@YourRef", txtYourRefEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@PoNo", txtPONOEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtOurReference.Text = txtOurRefEdit.Text.ToUpper
            txtYourReference.Text = txtYourRefEdit.Text.ToUpper
            txtPONo.Text = txtPONOEdit.Text.ToUpper

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDITPONO", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditPONoSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditRemarksSave_Click(sender As Object, e As EventArgs) Handles btnEditRemarksSave.Click
        Try
            'Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " Description = @Description, Comments = @Comments, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@Description", txtDescriptionEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@Comments", txtRemarksEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDITREMARKS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)
            txtDescription.Text = txtDescriptionEdit.Text.ToUpper
            txtComments.Text = txtRemarksEdit.Text.ToUpper

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditRemarksSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnConfirmYesUpdateServiceRecord_Click(sender As Object, e As EventArgs) Handles btnConfirmYesUpdateServiceRecord.Click
        Try
            If String.IsNullOrEmpty(Session("servicerecordForupdateservicetable")) = False Then
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim strRecordNo As String = Session("servicerecordForupdateservicetable")
                Dim strBillAmt As String = Session("AmountForupdateservicetable")
                'Session.Add("servicerecordForupdateservicetable", lblid1.Text)
                'Session.Add("AmountForupdateservicetable", lblid2.Text)


                Dim command4 As MySqlCommand = New MySqlCommand
                'command4.CommandType = CommandType.Text
                'Dim qry4 As String = "Update tblservicerecord Set BillAmount = " & Convert.ToDecimal(strBillAmt) & " where RecordNo = '" & strRecordNo & "'"
                'command4.CommandText = qry4

                command4.CommandType = CommandType.StoredProcedure
                'command4.CommandTimeout = 0
                command4.CommandText = "UpdateServiceBillAmount"
                command4.Parameters.Clear()

                command4.Parameters.AddWithValue("@pr_RecordNo", strRecordNo)
                command4.Parameters.AddWithValue("@pr_BillAmount", Convert.ToDecimal(strBillAmt))

                command4.Connection = conn
                command4.ExecuteNonQuery()

                conn.Close()
                conn.Dispose()
                command4.Dispose()
                grvBillingDetailsdiv.Focus()
                'CalculatePrice()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnConfirmYesUpdateServiceRecord_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub DisableNotesControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddNotesMaster.Enabled = False
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnableNotesControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddNotesMaster.Enabled = True
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Black
        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakeNotesNull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub

    Public NotesRcno As String
    Protected Sub OnRowDataBoundgNotes(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgNotes(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged

        For Each row As GridViewRow In gvNotesMaster.Rows

            If row.RowIndex = gvNotesMaster.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#ffffff")
                row.ToolTip = "Click to select this row."
            End If

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                'If row.RowIndex = grvContractDetail.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = gvNotesMaster.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Else
                If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                    'If row.RowIndex = txtSelectedIndex.Text Then
                    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                    '    row.ToolTip = String.Empty
                    '    txtSelectedIndex.Text = ""
                    'Else
                    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                    '    row.ToolTip = "Click to select this row."
                    'End If

                    If row.RowIndex = txtSelectedIndex.Text Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                        txtSelectedIndex.Text = ""
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If

                End If

            End If

        Next
        'For Each row As GridViewRow In gvNotesMaster.Rows
        '    'If row.RowIndex = gvNotesMaster.SelectedIndex Then
        '    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
        '    '    row.ToolTip = String.Empty
        '    'Else
        '    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
        '    '    row.ToolTip = "Click to select this row."
        '    'End If

        '    If row.RowIndex = GridView1.SelectedIndex Then
        '        row.BackColor = ColorTranslator.FromHtml("#00ccff")
        '        row.ToolTip = String.Empty
        '    Else
        '        If row.RowIndex Mod 2 = 0 Then
        '            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
        '            row.ToolTip = "Click to select this row."
        '        Else
        '            row.BackColor = ColorTranslator.FromHtml("#ffffff")
        '            row.ToolTip = "Click to select this row."
        '        End If
        '    End If
        'Next
    End Sub

    Protected Sub btnAddNotesMaster_Click(sender As Object, e As EventArgs) Handles btnAddNotesMaster.Click
        DisableNotesControls()

        MakeNotesNull()
        lblMessage.Text = "ACTION: ADD NOTES"


        txtNotesMode.Text = "Add"
        txtNotes.Focus()
    End Sub

    Protected Sub btnSaveNotesMaster_Click(sender As Object, e As EventArgs) Handles btnSaveNotesMaster.Click
        If String.IsNullOrEmpty(txtNotes.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER NOTES"
            Return
        End If

        If txtNotesMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and notes=@notes"
                command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "NOTES ALREADY EXISTS"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblnotes(KeyModule,SubKeyModule,KeyField,SubKeyField,StaffID,CreatedOn,ContactType,CustCode,CustName,ContactPerson,Notes,Internal,Printable,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@KeyModule,@SubKeyModule,@KeyField,@SubKeyField,@StaffID,@CreatedOn,@ContactType,@CustCode,@CustName,@ContactPerson,@Notes,@Internal,@Printable,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@KeyModule", "SLSINV")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", txtInvoiceNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountIdBilling.Text)
                        command.Parameters.AddWithValue("@CustName", txtAccountName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text.ToUpper)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))



                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@KeyModule", "SLSINV")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", txtInvoiceNo.Text)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                        command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountIdBilling.Text)
                        command.Parameters.AddWithValue("@CustName", txtAccountName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))


                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId
                    command.Dispose()
                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: NOTES SUCCESSFULLY ADDED"
                    lblAlert.Text = ""

                End If
                conn.Close()
                conn.Dispose()

                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ADD - btnSaveNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

        ElseIf txtNotesMode.Text = "Edit" Then
            If txtNotesRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "NOTES ALREADY EXISTS"



                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblnotes where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblnotes SET notes=@notes,StaffID = @StaffID,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text.ToUpper)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                        command1.Dispose()
                        command2.Dispose()
                        dt.Dispose()
                        dt1.Dispose()

                    End If
                End If


                txtNotesMode.Text = ""

                conn.Close()
                conn.Dispose()

            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "EDIT - btnSaveNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

        End If
        SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()

        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnEditNotesMaster_Click(sender As Object, e As EventArgs) Handles btnEditNotesMaster.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableNotesControls()
        txtNotesMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT NOTES"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub btnCancelNotesMaster_Click(sender As Object, e As EventArgs) Handles btnCancelNotesMaster.Click
        MakeNotesNull()
        EnableNotesControls()
        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnDeleteNotesMaster_Click(sender As Object, e As EventArgs) Handles btnDeleteNotesMaster.Click
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE NOTES"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    command.Dispose()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnDeleteNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

            SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            SqlDSNotesMaster.DataBind()

            gvNotesMaster.DataBind()
            MakeNotesNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub

    Protected Sub gvNotesMaster_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvNotesMaster.PageIndexChanging
        gvNotesMaster.PageIndex = e.NewPageIndex

        SqlDSNotesMaster.SelectCommand = "SELECT * From tblnotes where rcno <>0 and keyfield='" + txtInvoiceNo.Text + "'"


        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()
    End Sub

    Protected Sub gvNotesMaster_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        Try
            MakeNotesNull()
            '  txtTechMode.Text = "Edit"
            'Dim editindex As Integer = gvNotesMaster.SelectedIndex

            ''''''''''''''''''''''''''''
            'If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then

            '    editindex = txtSelectedIndex.Text
            'Else
            '    editindex = gvNotesMaster.SelectedIndex
            'End If

            'If editindex < 0 Then
            '    btnSaveNotesMaster.Enabled = True
            '    btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
            '    Exit Sub

            '    'btnSvcEdit.Enabled = True
            '    'btnSvcDelete.Enabled = True
            'End If


            '''''''''''''''''''''''''

            Dim editindex As Integer = gvNotesMaster.SelectedIndex
            rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            txtNotesRcNo.Text = rcno.ToString()
            'rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            'txtNotesRcNo.Text = rcno.ToString()

            lblNotesStaffID.Text = gvNotesMaster.SelectedRow.Cells(1).Text
            txtNotes.Text = Server.HtmlDecode(gvNotesMaster.SelectedRow.Cells(2).Text)



            EnableNotesControls()

            btnEditNotesMaster.Enabled = True
            btnEditNotesMaster.ForeColor = System.Drawing.Color.Black
            btnDeleteNotesMaster.Enabled = True
            btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Black


        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged
        lblAlert.Text = ""

        If tb1.ActiveTabIndex = 1 Then
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtInvoiceNo.Text) Then
                lblAlert.Text = "Select an Invoice to Proceed"

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            'lblNotesKeyField.Text = txtInvoiceNo.Text
            'lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

            'SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            'SqlDSNotesMaster.DataBind()
            'gvNotesMaster.DataBind()

            'updPanelInvoice.Update()

            If gvNotesMaster.Rows.Count = 0 Then
                txtSelectedIndex.Text = "-1"
            Else
                txtSelectedIndex.Text = "0"
            End If

            gvNotesMaster.SelectedIndex = 0
            gvNotesMaster_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChangedgNotes(New Object(), New EventArgs)
        End If


        If tb1.ActiveTabIndex = 1 Then
            lblNotesKeyField.Text = txtInvoiceNo.Text
            lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

            SqlDSNotesMaster.SelectCommand = "select StaffId, Notes, Rcno, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            SqlDSNotesMaster.DataBind()
            gvNotesMaster.DataBind()

            updPanelInvoice.Update()
        ElseIf tb1.ActiveTabIndex = 2 Then
      
            lblFileUploadInvNo.Text = txtInvoiceNo.Text
            ' lblFileUploadAccountID.Text = txtAccountId.Text
            lblFileUploadName.Text = txtAccountName.Text

            iframeid.Attributes.Add("src", "about:blank")

            'View Uploaded files

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next


            'gvUpload.DataSource = files
            'gvUpload.DataBind()

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtInvoiceNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
        End If


    End Sub

    Protected Sub btnPopUpStaffSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffSearch.Click
        mdlPopupStaff.Show()
    End Sub

    Protected Sub txtPopUpStaff_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpStaff.TextChanged
        If txtPopUpStaff.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter search text", "str")
        Else
            txtPopupStaffSearch.Text = txtPopUpStaff.Text
            SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

            SqlDSStaffID.DataBind()
            gvStaff.DataBind()
            mdlPopupStaff.Show()
            txtIsPopup.Text = "Staff"
        End If

        txtPopUpStaff.Text = "Search Here"
    End Sub

    Protected Sub btnPopUpStaffReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffReset.Click
        txtPopUpStaff.Text = ""
        txtPopupStaffSearch.Text = ""
        SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

        SqlDSStaffID.DataBind()

        gvStaff.DataBind()
        mdlPopupStaff.Show()
    End Sub


    Protected Sub OnRowDataBoundgStaff(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvStaff, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgStaff(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvStaff.Rows
            If row.RowIndex = gvStaff.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub ImageButton1_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton1.Click
        mdlPopupStaff.Show()
    End Sub

    Protected Sub gvStaff_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvStaff.SelectedIndexChanged
        Try
            'If txtModal.Text = "EditIncharge" Then
            '    If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        txtEditIncharge.Text = ""
            '    Else
            '        txtEditIncharge.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If

            'If txtModal.Text = "EditSvcBy" Then
            If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                txtServiceBy.Text = ""
            Else
                txtServiceBy.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            End If
            mdlImportServices.Show()

            'End If

            'If txtModal.Text = "EditSupervisor" Then
            '    If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        txtEditSupervisor.Text = ""
            '    Else
            '        txtEditSupervisor.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "SvcBySearch" Then
            '    If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
            '        txtSearch1SvcBy.Text = " "
            '    Else
            '        txtSearch1SvcBy.Text = gvStaff.SelectedRow.Cells(1).Text
            '    End If
            'End If
            'If txtModal.Text = "InchargeSearch" Then
            '    If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
            '        txtSearch1Incharge.Text = " "
            '    Else
            '        txtSearch1Incharge.Text = gvStaff.SelectedRow.Cells(1).Text
            '    End If
            'End If
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "gvStaff_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtAccountIdSearch_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdSearch.TextChanged
        If Len(txtAccountIdSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()
                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If
    End Sub

    Protected Sub txtClientNameSearch_TextChanged(sender As Object, e As EventArgs) Handles txtClientNameSearch.TextChanged
        If Len(txtClientNameSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()
                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If
    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        Try


            'GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)
            Dim strsql As String
            strsql = ""

            strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal,  Billcity,ConsolidatedInvoiceNo, "
            'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddBuilding, CustAddStreet, CustAddCity,"
            strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, PrintCounter, Description, EmailSentStatus, EmailSentDate, Location, ServiceAddress, EI, EInvoiceStatus,TaxIdentificationNo,SalesTaxRegistrationNo, UUID,SubmissionID,SubmissionDate,SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            strsql = strsql & " from tblSales where 1=1 "

            txtCondition.Text = txtCondition.Text.Replace("c.", "")
            txtCondition.Text = txtCondition.Text.Replace("a.", "")

            strsql = strsql + txtCondition.Text + txtOrderBy.Text
            txt.Text = strsql

            InsertIntoTblWebEventLog("INVOICE", "ddlView_SelectedIndexChanged", txt.Text, Session("UserID"))

            SQLDSInvoice.SelectCommand = txt.Text

            GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)

            GridView1.DataBind()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ddlView_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtBillStreet_TextChanged(sender As Object, e As EventArgs) Handles txtBillStreet.TextChanged

    End Sub

    Public Function FindARPeriod(BillingPeriod As String) As String
        Dim IsLock As String
        IsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        If txtMode.Text = "NEW" Then
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

        Else
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                command1.CommandText = "SELECT ARLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                command1.CommandText = "SELECT ARLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

        End If

            command1.Connection = connPeriod

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                If txtMode.Text = "NEW" Then
                    IsLock = dt.Rows(0)("ARLock").ToString
                Else
                    IsLock = dt.Rows(0)("ARLocke").ToString
                End If

            End If

            connPeriod.Close()
            connPeriod.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            Return IsLock
    End Function

    Public Function FindRVPeriod(BillingPeriod As String) As String

        Dim IsLock As String
        IsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        If txtMode.Text = "NEW" Then
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If

        Else
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If

        End If


        'If txtMode.Text = "NEW" Then
        '    command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'Else
        '    command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'End If

        command1.Connection = connPeriod

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If txtMode.Text = "NEW" Then
                IsLock = dt.Rows(0)("RVLock").ToString
            Else
                IsLock = dt.Rows(0)("RVLocke").ToString
            End If
            'IsLock = dt.Rows(0)("RVLock").ToString
        End If

        connPeriod.Close()
        connPeriod.Dispose()
        command1.Dispose()
        dt.Dispose()
        dr.Close()
        Return IsLock
    End Function

    Public Function FindEINVPeriod(BillingPeriod As String) As String
        InsertIntoTblWebEventLog("INVOICE PERIODLOCK1", BillingPeriod, txtLocation.Text, txtInvoiceNo.Text)

        Dim EIsLock As String
        EIsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        If txtDisplayRecordsLocationwise.Text = "Y" Then
            command1.CommandText = "SELECT EINVSubmitLock,EINVCancelLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
        Else
            command1.CommandText = "SELECT EINVSubmitLock,EINVCancelLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        End If

        command1.Connection = connPeriod

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If btnPostEInvoice.Text = "SUBMIT E-INVOICE" Then
                EIsLock = dt.Rows(0)("EINVSubmitLock").ToString
            ElseIf btnPostEInvoice.Text = "CANCEL E-INVOICE" Then
                EIsLock = dt.Rows(0)("EINVCancelLock").ToString
            End If

        End If

        connPeriod.Close()
        connPeriod.Dispose()
        command1.Dispose()
        dt.Dispose()
        dr.Close()
        InsertIntoTblWebEventLog("INVOICE PERIODLOCK2", BillingPeriod, EIsLock, txtInvoiceNo.Text)

        Return EIsLock
    End Function

    Protected Sub txtReceiptAmtGVQR_TextChanged(sender As Object, e As EventArgs)

        Dim txt1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

        'Dim lblid1 As CheckBox = CType(txt1.FindControl("chkSelectGV"), CheckBox)
        Dim lblid2 As TextBox = CType(txt1.FindControl("txtReceiptAmtGVQR"), TextBox)

        'Dim lblid3 As TextBox = CType(txt1.FindControl("txtBalanceAmtGV"), TextBox)

        'If Convert.ToDecimal(lblid2.Text) > 0.0 Then
        '    lblid1.Checked = True
        'Else
        '    lblid1.Checked = False
        'End If

        'If Convert.ToDecimal(lblid2.Text) > Convert.ToDecimal(lblid3.Text) Then
        '    lblid2.Text = lblid3.Text
        'End If

        lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")

        calculateTotalReceipt()
    End Sub


    Private Sub calculateTotalReceipt()

        Dim TotalReceiptAmt As Decimal = 0
        Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

        If (table.Rows.Count > 0) Then

            For i As Integer = 0 To (table.Rows.Count) - 1

                'Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)
                Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(i).Cells(7).FindControl("txtReceiptAmtGVQR"), TextBox)

                If String.IsNullOrEmpty(TextBoxReceiptAmt.Text) = True Then
                    TextBoxReceiptAmt.Text = "0.00"
                End If

                'If TextBoxSelect.Checked = True Then
                TotalReceiptAmt = TotalReceiptAmt + Convert.ToDecimal(TextBoxReceiptAmt.Text)
                'End If
            Next i

        End If

        txtReceiptAmt.Text = TotalReceiptAmt.ToString("N2")
        table.Dispose()
        UpdatePanel4.Update()
    End Sub

    Protected Sub btnMultiPrint_Click(sender As Object, e As EventArgs) Handles btnMultiPrint.Click
        lblAlert.Text = ""
        Dim strsql As String = ""
        Try

            chkShowUnprinted.Checked = False
            chkNoHardCopyInvoice.Checked = False
            chkZeroValue.Checked = False

            PopulateMultiPrint()


            'Start: Quoted on 22.11.20
            'strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            'strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            'strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, Location, EmailSentDate, "
            'strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
            'strsql = strsql & " from tblSales where 1=1 "

            'strsql = strsql + txtCondition.Text + " and (DocType='ARIN') and PostStatus ='P' " + txtOrderBy.Text + " limit " & txtLimit.Text
            ''txt.Text = strsql

            'SqlDSMultiPrint.SelectCommand = strsql
            'SqlDSMultiPrint.DataBind()
            'grdViewMultiPrint.DataBind()


            'chkShowUnprinted.Checked = False

            'mdlPopupMultiPrint.Show()

            'End: Quoted on 22.11.20
        Catch ex As Exception
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnMultiPrint_Click", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub

    Private Sub PopulateMultiPrintSearch()
        Dim strsqlCorporate As String
        strsqlCorporate = ""
        InsertIntoTblWebEventLog("Invoice", "PopulateMultiPrintSearch", txtEI.Text, txtCreatedBy.Text)
        If String.IsNullOrEmpty(txtEI.Text) = False Then
            If txtEI.Text = "Y" Then

                strsqlCorporate = strsqlCorporate & " and (a.EInvoiceStatus='APPROVED' OR a.EInvoiceStatus='VALID')  "

            End If
     
        End If
        


        If chkNoHardCopyInvoice.Checked = True Then
            'strsql = strsql & " and ((b.HardCopyInvoice= False)) "
        Else
            strsqlCorporate = strsqlCorporate & " and ((b.HardCopyInvoice= True)) "
        End If
        'strsql = strsql & " and ((b.HardCopyInvoice= False) or  (b.HardCopyInvoice is null)) "
        strsqlCorporate = strsqlCorporate & " and (a.DocType='ARIN')  "
        'strsql = strsql & txtAccountIDMPCorporate.Text



        If chkShowUnprinted.Checked = False Then
            'strsql = strsql & txtCondition.Text & " AND a.PrintCounter > 0 and  a.PostStatus ='P'"
            strsqlCorporate = strsqlCorporate & " AND a.PostStatus ='P'"
        Else
            strsqlCorporate = strsqlCorporate & " and a.PostStatus ='P' AND ((a.PrintCounter = '0') or (a.PrintCounter is null) or (a.PrintCounter = ''))  "
        End If


        If chkZeroValue.Checked = True Then

        Else
            strsqlCorporate = strsqlCorporate & " AND a.NetAmount <>'0.00'"
        End If
        'If txtDisplayRecordsLocationwise.Text = "Y" Then

        '    strsql = strsql & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"


        '    If ddlBranch.SelectedIndex > 0 Then
        '        If String.IsNullOrEmpty(ddlBranch.Text) = False Then
        '            strsql = strsql & " and a.location = '" & ddlBranch.Text.Trim + "'"
        '        End If
        '    End If
        'End If

        txtAccountIDMPCorporate.Text = txtAccountIDMPCorporate.Text

        Dim strsqlResidential As String
        strsqlResidential = ""

        'strsql = strsql & " UNION "

        'strsql = strsql & " Select c.PostStatus, c.PaidStatus, c.GlStatus, c.InvoiceNumber, c.SalesDate, c.AccountId, c.CustName, c.BillAddress1, c.BillBuilding, c.BillStreet, c.BillCountry, c.BillPostal, c.Billcity,  "
        'strsql = strsql & " c.ValueBase, c.ValueOriginal, c.GSTBase, c.GSTOriginal, c.AppliedBase, c.AppliedOriginal, c.BalanceBase, c.BalanceOriginal, c.Salesman, c.PoNo, c.OurRef, c.yourRef, c.Terms, c.DiscountAmount, c.GSTAmount, c.NetAmount, c.GLPeriod, c.CompanyGroup, c.ContactType, c.BatchNo, c.Salesman, c.Comments, c.AmountWithDiscount , c.TermsDay, c.RecurringInvoice,  c.BillSchedule, "
        'strsql = strsql & " c.ReceiptBase, c.CreditBase, c.StaffCode, c.CustAddress1, c.CustAddCountry, c.CustAddPostal, c.CustAddStreet, c.custAddBuilding,  c.CustAddCity, c.PrintCounter, c.EmailSentStatus, c.Location, c.EmailSentDate, "
        'strsql = strsql & " c.CreatedBy,   c.CreatedOn, c.LastModifiedBy, c.LastModifiedOn, c.Rcno, c.Description "
        'strsql = strsql & " from tblSales c, tblPerson d where 1=1 "
        'strsql = strsql & " and (c.AccountID = d.AccountId)  "
        'strsql = strsql & " and (c.ContactType='PERSON')  "

        'If txtDisabledEInvoicing.Text = True Then

        'Else
        If String.IsNullOrEmpty(txtEI.Text) = False Then
            If txtEI.Text = "Y" Then

                strsqlResidential = strsqlResidential & " and (c.EInvoiceStatus='APPROVED' OR c.EInvoiceStatus='VALID')  "

            End If
        End If


        If chkNoHardCopyInvoice.Checked = True Then
            'strsql = strsql & " and ((d.HardCopyInvoice= False)) "
        Else
            strsqlResidential = strsqlResidential & " and ((d.HardCopyInvoice= True)) "
        End If

        strsqlResidential = strsqlResidential & " and (c.DocType='ARIN')  "
        'strsql = strsql & txtAccountIDMPResidential.Text

        If chkShowUnprinted.Checked = False Then
            strsqlResidential = strsqlResidential & " AND c.PostStatus ='P'"
        Else
            strsqlResidential = strsqlResidential & " and c.PostStatus ='P' AND ((c.PrintCounter = '0') or (c.PrintCounter is null) or (c.PrintCounter = ''))  "
        End If

        If chkZeroValue.Checked = True Then

        Else
            strsqlResidential = strsqlResidential & " AND c.NetAmount <>'0.00'"
        End If
        'If txtDisplayRecordsLocationwise.Text = "Y" Then

        '    strsql = strsql & " and c.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

        '    If ddlBranch.SelectedIndex > 0 Then
        '        If String.IsNullOrEmpty(ddlBranch.Text) = False Then
        '            strsql = strsql & " and c.location = '" & ddlBranch.Text.Trim + "'"
        '        End If
        '    End If
        'End If

        txtAccountIDMPResidential.Text = txtAccountIDMPResidential.Text

        If String.IsNullOrEmpty(txtAccountIDMPCorporate.Text) = True Then
            txtConditionMultiPrint.Text = txtAccountIDMPResidential.Text + strsqlResidential
        ElseIf String.IsNullOrEmpty(txtAccountIDMPResidential.Text) = True Then
            txtConditionMultiPrint.Text = txtAccountIDMPCorporate.Text + strsqlCorporate
        Else
            txtConditionMultiPrint.Text = txtAccountIDMPCorporate.Text + strsqlCorporate + " UNION " + txtAccountIDMPResidential.Text + strsqlResidential
        End If

        'strsql = strsql + txtOrderBy.Text + " limit " & txtLimit.Text

        txtConditionMultiPrint.Text = txtConditionMultiPrint.Text + txtOrderBy.Text + " limit " & txtLimit.Text
        'End If

        '04.07.21
    End Sub

    Private Sub PopulateMultiPrint()
        lblAlert.Text = ""
        Dim strsql As String = ""
        Try

            PopulateMultiPrintSearch()

            'strsql = "Select a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1, a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.Billcity,  "
            'strsql = strsql & " a.ValueBase, a.ValueOriginal, a.GSTBase, a.GSTOriginal, a.AppliedBase, a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.yourRef, a.Terms, a.DiscountAmount, a.GSTAmount, a.NetAmount, a.GLPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Salesman, a.Comments, a.AmountWithDiscount , a.TermsDay, a.RecurringInvoice,  a.BillSchedule, "
            'strsql = strsql & " a.ReceiptBase, a.CreditBase, a.StaffCode, a.CustAddress1, a.CustAddCountry, a.CustAddPostal, a.CustAddStreet, a.custAddBuilding,  a.CustAddCity, a.PrintCounter, a.EmailSentStatus, a.Location, a.EmailSentDate, "
            'strsql = strsql & " a.CreatedBy,   a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.Rcno, a.Description "
            'strsql = strsql & " from tblSales a, tblCompany b where 1=1 "
            'strsql = strsql & " and (a.AccountID = b.AccountId)  "
            'strsql = strsql & " and (a.ContactType='COMPANY')  "
            'If chkNoHardCopyInvoice.Checked = True Then
            '    'strsql = strsql & " and ((b.HardCopyInvoice= False)) "
            'Else
            '    strsql = strsql & " and ((b.HardCopyInvoice= True)) "
            'End If
            ''strsql = strsql & " and ((b.HardCopyInvoice= False) or  (b.HardCopyInvoice is null)) "
            'strsql = strsql & " and (a.DocType='ARIN')  "
            'strsql = strsql & txtAccountIDMPCorporate.Text

            'If chkShowUnprinted.Checked = False Then
            '    'strsql = strsql & txtCondition.Text & " AND a.PrintCounter > 0 and  a.PostStatus ='P'"
            '    strsql = strsql & txtConditionMultiPrint.Text & " AND a.PostStatus ='P'"
            'Else
            '    strsql = strsql & txtConditionMultiPrint.Text & " and a.PostStatus ='P' AND ((a.PrintCounter = '0') or (a.PrintCounter is null) or (a.PrintCounter = ''))  "
            'End If

            'If txtDisplayRecordsLocationwise.Text = "Y" Then

            '    strsql = strsql & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"


            '    If ddlBranch.SelectedIndex > 0 Then
            '        If String.IsNullOrEmpty(ddlBranch.Text) = False Then
            '            strsql = strsql & " and a.location = '" & ddlBranch.Text.Trim + "'"
            '        End If
            '    End If
            'End If

            'strsql = strsql & " UNION "

            'strsql = strsql & " Select c.PostStatus, c.PaidStatus, c.GlStatus, c.InvoiceNumber, c.SalesDate, c.AccountId, c.CustName, c.BillAddress1, c.BillBuilding, c.BillStreet, c.BillCountry, c.BillPostal, c.Billcity,  "
            'strsql = strsql & " c.ValueBase, c.ValueOriginal, c.GSTBase, c.GSTOriginal, c.AppliedBase, c.AppliedOriginal, c.BalanceBase, c.BalanceOriginal, c.Salesman, c.PoNo, c.OurRef, c.yourRef, c.Terms, c.DiscountAmount, c.GSTAmount, c.NetAmount, c.GLPeriod, c.CompanyGroup, c.ContactType, c.BatchNo, c.Salesman, c.Comments, c.AmountWithDiscount , c.TermsDay, c.RecurringInvoice,  c.BillSchedule, "
            'strsql = strsql & " c.ReceiptBase, c.CreditBase, c.StaffCode, c.CustAddress1, c.CustAddCountry, c.CustAddPostal, c.CustAddStreet, c.custAddBuilding,  c.CustAddCity, c.PrintCounter, c.EmailSentStatus, c.Location, c.EmailSentDate, "
            'strsql = strsql & " c.CreatedBy,   c.CreatedOn, c.LastModifiedBy, c.LastModifiedOn, c.Rcno, c.Description "
            'strsql = strsql & " from tblSales c, tblPerson d where 1=1 "
            'strsql = strsql & " and (c.AccountID = d.AccountId)  "
            'strsql = strsql & " and (c.ContactType='PERSON')  "
            'If chkNoHardCopyInvoice.Checked = True Then
            '    'strsql = strsql & " and ((d.HardCopyInvoice= False)) "
            'Else
            '    strsql = strsql & " and ((d.HardCopyInvoice= True)) "
            'End If

            'strsql = strsql & " and (c.DocType='ARIN')  "
            'strsql = strsql & txtAccountIDMPResidential.Text

            'If chkShowUnprinted.Checked = False Then
            '    strsql = strsql & txtConditionMultiPrint.Text & " AND c.PostStatus ='P'"
            'Else
            '    strsql = strsql & txtConditionMultiPrint.Text & " and c.PostStatus ='P' AND ((c.PrintCounter = '0') or (c.PrintCounter is null) or (c.PrintCounter = ''))  "
            'End If


            'If txtDisplayRecordsLocationwise.Text = "Y" Then

            '    strsql = strsql & " and c.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            '    If ddlBranch.SelectedIndex > 0 Then
            '        If String.IsNullOrEmpty(ddlBranch.Text) = False Then
            '            strsql = strsql & " and c.location = '" & ddlBranch.Text.Trim + "'"
            '        End If
            '    End If
            'End If

            'strsql = strsql + txtOrderBy.Text + " limit " & txtLimit.Text
            ''End If

            ''04.07.21
            InsertIntoTblWebEventLog("INVOICE", "PopulateMultiPrint", txtConditionMultiPrint.Text, Session("UserID"))

            SqlDSMultiPrint.SelectCommand = txtConditionMultiPrint.Text
            grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
            grdViewMultiPrint.DataBind()

            mdlPopupMultiPrint.Show()

        Catch ex As Exception
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "PopulateMultiPrint", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub

    'Protected Sub btnPrintMultiPrint_Click(sender As Object, e As EventArgs) Handles btnPrintMultiPrint.Click
    '    Dim invcheck As String = ""

    '    Session("gridsqlinvoiceprint") = txt.Text
    '    Session("servicefrom") = "serviceprint"
    '    Dim YrStrList As List(Of [String]) = New List(Of String)()
    '    If grdViewMultiPrint.Rows.Count > 0 Then
    '        For Each row As GridViewRow In grdViewMultiPrint.Rows
    '            If row.RowType = DataControlRowType.DataRow Then
    '                Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectAllMultiPrintGV"), CheckBox)
    '                If chkRow.Checked Then
    '                    YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() + """")
    '                End If
    '            End If
    '        Next
    '        Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
    '        If String.IsNullOrEmpty(YrStr) = False Then
    '            invcheck = YrStr
    '        End If
    '        Session("InvoiceNumber") = invcheck
    '    End If

    '    mdlPopupPrint.Show()
    'End Sub

    Protected Sub btnPrintMultiPrint_Click(sender As Object, e As EventArgs) Handles btnPrintMultiPrint.Click
        Dim invcheck As String = ""
        Session("PrintType") = "MultiPrint"

        Session("gridsqlinvoiceprint") = txt.Text
        'Session("servicefrom") = "serviceprint"
        Session("printfrom") = "serviceprint"
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewMultiPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewMultiPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectMultiPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() + """")

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'Dim conn As MySqlConnection = New MySqlConnection()

                        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        'conn.Open()

                        'Dim sql As String
                        'sql = ""
                        'sql = "Select PrintCounter from tblSales where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'Dim command1 As MySqlCommand = New MySqlCommand
                        'command1.CommandType = CommandType.Text
                        'command1.CommandText = sql
                        'command1.Connection = conn

                        'Dim dr As MySqlDataReader = command1.ExecuteReader()

                        'Dim dt As New DataTable
                        'dt.Load(dr)

                        'Dim lPrincounter As Integer
                        'lPrincounter = 0

                        'If dt.Rows.Count > 0 Then
                        '    If dt.Rows(0)("PrintCounter").ToString <> "" Then : lPrincounter = Convert.ToInt32(dt.Rows(0)("PrintCounter").ToString) : End If
                        'End If

                        'command1.Dispose()


                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'lPrincounter = lPrincounter + 1

                        'Dim qry As String
                        'qry = ""
                        ''Dim conn As MySqlConnection = New MySqlConnection()
                        'Dim command As MySqlCommand = New MySqlCommand
                        'command.CommandType = CommandType.Text

                        ''conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        ''conn.Open()

                        'qry = "Update tblSales set    "
                        ''qry = qry + " PrintCounter = @PrintCounter, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
                        'qry = qry + " PrintCounter = @PrintCounter "
                        'qry = qry + " where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'command.CommandText = qry
                        'command.Parameters.Clear()
                        ''command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        'command.Parameters.AddWithValue("@PrintCounter", lPrincounter)
                        ''command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        ''command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Connection = conn
                        'command.ExecuteNonQuery()

                        'conn.Close()
                        'conn.Dispose()
                        'command.Dispose()
                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        'SQLDSInvoice.SelectCommand = txt.Text
                        'GridView1.DataSourceID = "SQLDSInvoice"
                        'GridView1.DataBind()
                        '''''''''''''''''''''''''''''''''''''''''''''''''''

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            Session("InvoiceNumber") = invcheck

        End If
        Session("InvoiceNo") = "INVOICE"

        mdlPopupPrint.Show()
    End Sub

    Protected Sub txtAccountIdBilling_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdBilling.TextChanged
        If Len(txtAccountIdBilling.Text) > 2 Then
            btnClient1_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub


    Protected Sub btnDeleteDetail_Click(sender As Object, e As EventArgs)
        Try
            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                'lblMessage.Text = ""
                lblAlert.Text = ""

                Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowindex1).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)

                If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                        Dim conn As MySqlConnection = New MySqlConnection(constr)
                        conn.Open()

                        Dim command4 As MySqlCommand = New MySqlCommand
                        command4.CommandType = CommandType.Text

                        'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                        Dim qry4 As String = "Delete from tblsalesdetail where rcno = " & TextBoxRcno.Text
                        'Dim qry4 As String = "Delete from tblsalesdetail "
                        command4.CommandText = qry4
                        command4.Connection = conn
                        command4.ExecuteNonQuery()
                        command4.Dispose()

                        'SqlDSSalesDetail.DataBind()
                        'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                        'grvBillingDetailsNew.DataBind()


                        SqlDSSalesDetail.SelectCommand = "select InvoiceNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, InvoiceType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode,  ItemClassificationCode, ItemClassificationDesc, UOMDesc, TaxTypeDesc from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
                        'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
                        grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                        grvBillingDetailsNew.DataBind()


                        '''''''''''''''''''''''''
                        CalculateTotal()
                        CalculateTotalPrice()
                        'updPanelInvoice.Update()

                        UpdatePanel2.Update()
                        UpdatePanel5.Update()

                        Dim command5 As MySqlCommand = New MySqlCommand
                        command5.CommandType = CommandType.Text

                        Dim qry As String
                        qry = "Update tblSales set ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                        qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, AmountWithDiscount = @AmountWithDiscount  "
                        'qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                        qry = qry + " where Rcno = @Rcno;"

                        command5.CommandText = qry
                        command5.Parameters.Clear()

                        command5.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))

                        command5.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                        command5.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                        command5.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                        command5.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                        command5.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                        'command5.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command5.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command5.Connection = conn
                        command5.ExecuteNonQuery()

                        '''''''''''''''''''''''
                        conn.Close()
                        conn.Dispose()
                        command5.Dispose()

                        SQLDSInvoice.SelectCommand = txt.Text
                        SQLDSInvoice.DataBind()
                        GridView1.DataSourceID = "SQLDSInvoice"

                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", TextBoxRcno.Text)

                        DisplayGLGrid()
                        'CalculatePrice()

                        'IsDetailBlank()

                        updPnlBillingRecsNew.Update()
                    End If
                End If
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
        End Try

    End Sub

    Protected Sub ImageButton10_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton10.Click

        Try
            txtPopUpContractNo.Text = ""
            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T'))  order by Status, ContractNo, CustName"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId,Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            End If

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ImageButton10_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ImageButton2_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton2.Click
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNo"
        Try

            If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
                'Else
                '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                'End If

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If


                SqlDSClient.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelInvoice.Update()
            ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If
                'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

                SqlDSContractNo.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelInvoice.Update()
            End If

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ImageButton2_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtPopUpContractNo_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpContractNo.TextChanged
        If String.IsNullOrEmpty(txtPopUpContractNo.Text.Trim) = True Then
            MessageBox.Message.Alert(Page, "Please enter ContractNo/CustName", "str")
        Else
            SqlDSContractNo.SelectCommand = "SELECT  ContractNo, CustName, Status from tblContract where ((ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%') or (CustName like '%" & txtPopUpContractNo.Text & "%')) and  ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T')) order by Status, ContractNo, CustName"
        End If


        'txtImportService.Text = SqlDSClient.SelectCommand
        SqlDSContractNo.DataBind()
        gvPopUpContractNo.DataBind()
        'mdlPopUpContractNo.Show()
        txtIsPopup.Text = "ContractNo"
        mdlPopUpContractNo.Show()
        'End If
    End Sub


    Protected Sub gvPopUpContractNo_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvPopUpContractNo.SelectedIndexChanged

        '''''''''''''''''''''

        Dim xrowNumber1 = txtxRow.Text
        'txtGLFrom.Text = "ContractGV"
        If txtGLFrom.Text = "ContractGVB" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtContractNoGVB"), TextBox)
            'Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtGLDescriptionGVB"), TextBox)

            If gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text
            End If

            txtGLFrom.Text = ""
        ElseIf txtGLFrom.Text = "ContractGV" Then
            Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtContractNoGV"), TextBox)
            'Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtGLDescriptionGV"), TextBox)

            If gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text
            End If

            txtGLFrom.Text = ""

        Else
            txtIsPopup.Text = ""
            If (gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;") Then
                ddlContractNo.Text = ""
            Else
                ddlContractNo.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text.Trim
            End If

            txtIsPopup.Text = "N"
            mdlPopUpContractNo.Hide()
            mdlImportServices.Show()
        End If



        '''''''''''''''''''''''''''''
    End Sub

    Protected Sub gvPopUpContractNo_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvPopUpContractNo.PageIndexChanging

        Try


            gvPopUpContractNo.PageIndex = e.NewPageIndex

            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by Status, ContractNo, CustName"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            End If

            SqlDSClient.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "gvPopUpContractNo_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnEditBillingDetails_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingDetails.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingDetails.Show()
    End Sub

    Protected Sub btnEditBillingDetailsSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingDetailsSave.Click
        Try

            If String.IsNullOrEmpty(txtBillAddressEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILLING ADDRESS (1ST LINE)"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtBillCountryEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILL COUNTRY"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " CustAttention = @CustAttention,   "
            qry = qry + " CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding, CustAddCity = @CustAddCity, CustAddState=@CustAddState, CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustAttention", txtContactPersonEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddress1", txtBillAddressEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuildingEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddStreet", txtBillStreetEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddCity", txtBillCityEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddState", txtBillStateEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddPostal", txtBillPostalEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddCountry", txtBillCountryEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtContactPerson.Text = txtContactPersonEdit.Text.ToUpper()
            txtBillAddress.Text = txtBillAddressEdit.Text.ToUpper()
            txtBillBuilding.Text = txtBillBuildingEdit.Text.ToUpper()
            txtBillStreet.Text = txtBillStreetEdit.Text.ToUpper()

            txtBillCity.Text = txtBillCityEdit.Text.ToUpper()
            txtBillState.Text = txtBillStateEdit.Text.ToUpper()

            txtBillPostal.Text = txtBillPostalEdit.Text.ToUpper()
            txtBillCountry.Text = txtBillCountryEdit.Text.ToUpper()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDITBILLINGDETAILS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditBillingDetailsSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Public Sub InsertIntoTblWebEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception

        End Try
    End Sub

    Public Sub InsertIntoTblEInvoiceEventLog(events As String, errorMsg As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblEInvoiceEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", txtInvoiceNo.Text)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", Session("UserID"))
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception

        End Try
    End Sub

    Public Sub InsertIntoTblEInvoiceLock(Status As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblEInvoiceLock(InvoiceNumber,StartDateTime,RunBy,Status)"
            insQuery += " values(@InvoiceNumber,@StartDateTime,@RunBy,@Status);"

            InsertIntoTblWebEventLog("INVOICE", "InsertEInvoiceLock", insQuery, txtInvoiceNo.Text)
            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            insCmds.Parameters.AddWithValue("@StartDateTime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            insCmds.Parameters.AddWithValue("@RunBy", Session("UserID"))
            insCmds.Parameters.AddWithValue("@Status", Status)

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()

            txtEInvoiceLockRcno.Text = insCmds.LastInsertedId
            InsertIntoTblWebEventLog("INVOICE", "InsertEInvoiceLock", txtEInvoiceLockRcno.Text, txtInvoiceNo.Text)

            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "InsertIntoEinvoiceLock", ex.Message.ToString, txtInvoiceNo.Text)

        End Try
    End Sub

    'Public Sub InsertIntoTblEInvoiceLock()
    '    ' Try
    '    txtEInvoiceLockRcNo.Text = ""

    '    Dim conn As New MySqlConnection()
    '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

    '    Dim insCmds As New MySqlCommand()
    '    insCmds.CommandType = CommandType.Text

    '    '  Dim insQuery As String = "Insert into tblEInvoiceLock(InvoiceNumber,StartDateTime,RunBy,Status)values(@InvoiceNumber,@StartDateTime,@RunBy,@Status);"
    '    Dim insQuery As String = "Insert into tblEInvoiceLock(InvoiceNumber)values(@InvoiceNumber);"
    '    InsertIntoTblWebEventLog("INVOICE", "InsertEInvoiceLock", insQuery, txtInvoiceNo.Text)


    '    insCmds.CommandText = insQuery

    '    insCmds.Parameters.Clear()
    '    insCmds.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
    '    'insCmds.Parameters.AddWithValue("@StartDateTime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

    '    'insCmds.Parameters.AddWithValue("@RunBy", Session("UserID"))
    '    'insCmds.Parameters.AddWithValue("@Status", "OPEN")

    '    conn.Open()
    '    insCmds.Connection = conn
    '    insCmds.ExecuteNonQuery()
    '    txtEInvoiceLockRcno.Text = insCmds.LastInsertedId
    '    InsertIntoTblWebEventLog("INVOICE", "InsertEInvoiceLock", txtEInvoiceLockRcno.Text, txtInvoiceNo.Text)

    '    conn.Close()
    '    conn.Dispose()
    '    insCmds.Dispose()
    '    'Catch ex As Exception
    '    '    InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "InsertIntoEinvoiceLock", ex.Message.ToString, txtInvoiceNo.Text)

    '    'End Try
    'End Sub

    Private Sub UpdateEInvoiceLock(InvoiceNumber As String, Result As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblEInvoiceLock set EndDateTime=@EndDateTime,Result=@Result,Status=@Status,UUID=@UUID where InvoiceNumber=@invoicenumber AND RCNO=@RCNO and RunBy=@RunBy"
            InsertIntoTblWebEventLog("INVOICE", "UpdateEInvoiceLock", txtEInvoiceLockRcno.Text, txtInvoiceNo.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddWithValue("@EndDateTime", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            commandUpdateInvoice.Parameters.AddWithValue("@RunBy", Session("UserID"))
            commandUpdateInvoice.Parameters.AddWithValue("@UUID", txtUUID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@Status", "CLOSED")
            commandUpdateInvoice.Parameters.AddwithValue("@Result", Result)
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            commandUpdateInvoice.Parameters.AddwithValue("@RCNO", txtEInvoiceLockRcNo.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICELOCK", ex.Message.ToString, txtInvoiceNo.Text)

        End Try
    End Sub


    Private Sub UpdateEInvoiceLockUUID(InvoiceNumber As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblEInvoiceLock set UUID=@UUID where InvoiceNumber=@invoicenumber AND RCNO=@RCNO and RunBy=@RunBy"
            InsertIntoTblWebEventLog("UpdateEInvoiceLockUUID", txtUUID.Text, txtEInvoiceLockRcno.Text, txtInvoiceNo.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()

            commandUpdateInvoice.Parameters.AddWithValue("@RunBy", Session("UserID"))
            commandUpdateInvoice.Parameters.AddWithValue("@UUID", txtUUID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            commandUpdateInvoice.Parameters.AddwithValue("@RCNO", txtEInvoiceLockRcNo.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICELOCKUUID", ex.Message.ToString, txtInvoiceNo.Text)

        End Try
    End Sub

    Public Function CheckEInvoiceLock(InvoiceNumber As String) As Boolean
        Dim IsLock As String
        IsLock = "Y"
        InsertIntoTblWebEventLog("INVOICE", "CheckEInvoiceLock", InvoiceNumber, txtInvoiceNo.Text)

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        command1.CommandText = "SELECT * FROM tbleinvoicelock where InvoiceNumber=@InvoiceNumber and Status='OPEN'"

        command1.Parameters.AddWithValue("@InvoiceNumber", InvoiceNumber)
        'command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        command1.Connection = connPeriod

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            Return True
        Else
            Return False
        End If



        connPeriod.Close()
        connPeriod.Dispose()
        command1.Dispose()
        dt.Dispose()
        dr.Close()
        Return False
    End Function


    Protected Sub btnEditBillingName_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingName.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingName.Show()
    End Sub

    Protected Sub btnEditBillingNameSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingNameSave.Click
        Try

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " CustName = @CustName, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustName", txtBillingNameEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDITBILLINGNAME", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, txtAccountName.Text + " - " + txtBillingNameEdit.Text.ToUpper, txtRcno.Text)
            txtAccountName.Text = txtBillingNameEdit.Text.ToUpper

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditBillingNameSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditSalesman_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditSalesman.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditSalesman.Show()
    End Sub

    Protected Sub btnEditSalesmanSave_Click(sender As Object, e As EventArgs) Handles btnEditSalesmanSave.Click
        Try

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSales set    "
            qry = qry + " StaffCode = @StaffCode, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@StaffCode", ddlSalesmanEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EDITSALESMAN", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, ddlSalesmanBilling.Text + " - " + ddlSalesmanEdit.Text.ToUpper, txtRcno.Text)
            ddlSalesmanBilling.Text = ddlSalesmanEdit.Text.ToUpper

            InsertNewLog()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditBillingNameSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnDeleteAll_Click(sender As Object, e As EventArgs) Handles btnDeleteAll.Click
        Try
            'Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            'Dim rowindex1 As Integer = xrow1.RowIndex

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                'lblMessage.Text = ""
                lblAlert.Text = ""

                HeaderDetailTotal("BefDelAll")
                'Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowindex1).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)

                'If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                '    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                FirstGridViewRowBillingDetailsRecs()



                Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim command4 As MySqlCommand = New MySqlCommand
                command4.CommandType = CommandType.Text

                'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                Dim qry4 As String = "Delete from tblsalesdetail where InvoiceNumber = '" & txtInvoiceNo.Text & "'"
                'Dim qry4 As String = "Delete from tblsalesdetail "
                command4.CommandText = qry4
                command4.Connection = conn
                command4.ExecuteNonQuery()
                command4.Dispose()

                SqlDSSalesDetail.DataBind()
                grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                grvBillingDetailsNew.DataBind()

                '''''''''''''''''''''''''

                txtInvoiceAmount.Text = "0.00"
                txtDiscountAmount.Text = "0.00"
                txtAmountWithDiscount.Text = "0.00"
                txtGSTAmount.Text = "0.00"
                txtNetAmount.Text = "0.00"


                'CalculateTotal()
                CalculateTotalPrice()
                'updPanelInvoice.Update()

                UpdatePanel2.Update()
                'UpdatePanel5.Update()

                Dim command5 As MySqlCommand = New MySqlCommand
                command5.CommandType = CommandType.Text

                Dim qry As String
                qry = "Update tblSales set ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, AmountWithDiscount = @AmountWithDiscount  "
                'qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                qry = qry + " where Rcno = @Rcno;"

                command5.CommandText = qry
                command5.Parameters.Clear()

                command5.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))

                command5.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command5.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command5.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command5.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command5.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                'command5.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command5.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                command5.Connection = conn
                command5.ExecuteNonQuery()

                '''''''''''''''''''''''
                conn.Close()
                conn.Dispose()


                command5.Dispose()


                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                GridView1.DataSourceID = "SQLDSInvoice"



                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "DELETEALL", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtInvoiceNo.Text)
                HeaderDetailTotal("AftDelAll")

                DisplayGLGrid()


                IsDetailBlank()

                updPnlBillingRecsNew.Update()

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnFilter_Click(sender As Object, e As EventArgs) Handles btnFilter.Click
        mdlPopupSearch.Show()
    End Sub

    Private Sub PopulateGridFromFilterSearch()
        Try
            Dim strsql As String
            strsql = ""

            Dim strPostStatus As String
            strPostStatus = ""
            Dim strPostStatusCorporate As String
            strPostStatusCorporate = ""


            txtCondition.Text = ""

            txtConditionMultiPrint.Text = ""
            txtAccountIDMPCorporate.Text = ""
            txtAccountIDMPResidential.Text = ""

            strsql = "Select a.PostStatus, a.PaidStatus, a.GlStatus, a.InvoiceNumber, a.SalesDate, a.AccountId, a.CustName, a.BillAddress1, a.BillBuilding, a.BillStreet, a.BillCountry, a.BillPostal, a.Billcity,  "
            strsql = strsql & " a.ValueBase, a.ValueOriginal, a.GSTBase, a.GSTOriginal, a.AppliedBase, a.AppliedOriginal, a.BalanceBase, a.BalanceOriginal, a.Salesman, a.PoNo, a.OurRef, a.yourRef, a.Terms, a.DiscountAmount, a.GSTAmount, a.NetAmount, a.GLPeriod, a.CompanyGroup, a.ContactType, a.BatchNo, a.Salesman, a.Comments, a.AmountWithDiscount , a.TermsDay, a.RecurringInvoice,  a.BillSchedule, "
            strsql = strsql & " a.ReceiptBase, a.CreditBase, a.StaffCode, a.CustAddress1, a.CustAddCountry, a.CustAddPostal, a.CustAddStreet, a.custAddBuilding,  a.CustAddCity, a.PrintCounter, a.EmailSentStatus, a.Location, a.EmailSentDate, "
            strsql = strsql & " a.CreatedBy,   a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.Rcno, a.Description, "
            strsql = strsql & " a.ServiceAddress, a.EI, a.EInvoiceStatus, a.UUID,a.SubmissionID,a.SubmissionDate,a.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            strsql = strsql & " from tblSales a, tblCompany b where 1=1 "
            strsql = strsql & " and (a.AccountID = b.AccountId)  "
            'strsql = strsql & " and (a.ContactType='COMPANY')  "

            strsql = strsql & txtAccountIDMPCorporate.Text

            txtCondition.Text = txtCondition.Text & " and (a.ContactType='COMPANY') "
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch0.Items
                If item.Selected Then
                    YrStrList.Add("'" & item.Value & "'")
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())


            'txtCondition.Text = txtCondition.Text & " and a.PostStatus in (" & (YrStr) & ") "
            strPostStatusCorporate = " and a.PostStatus in (" & (YrStr) & ") "



            If String.IsNullOrEmpty(txtSearchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.InvoiceNumber like '%" & txtSearchInvoiceNo.Text.Trim + "%'"
            End If


            If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.CustName like ""%" & txtSearchClientName.Text.Trim & "%"""
            End If


            'BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal

            If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and ((a.BillAddress1 like ""%" & txtSearchAddress.Text.Trim & "%"") or (a.BillBuilding like ""%" & txtSearchAddress.Text.Trim & "%"") or (a.BillStreet like ""%" & txtSearchAddress.Text.Trim & "%"") or (a.BillCountry like ""%" & txtSearchAddress.Text.Trim & "%"") or (a.BillPostal like ""%" & txtSearchAddress.Text.Trim & "%""))"
            End If

            If String.IsNullOrEmpty(txtSearchServiceAddress.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.ServiceAddress like ""%" & txtSearchServiceAddress.Text.Trim & "%"""
            End If


            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.OurRef like ""%" & txtSearchOurRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.YourRef like ""%" & txtSearchYourRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.PoNo like ""%" & txtSearchPONo.Text.Trim & "%"""
            End If


            If (ddlSearchSalesman.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and a.StaffCode like '%" & ddlSearchSalesman.Text.Trim + "%'"
            End If

            If (ddlSearchContractGroup.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and a.ContractGroup like '%" & ddlSearchContractGroup.Text.Trim + "%'"
            End If

            If rdbSearchPaidStatus0.SelectedItem.Value = "Fully Paid" Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase = 0 and a.ValueBase <> 0 "
            ElseIf rdbSearchPaidStatus0.SelectedItem.Value = "O/S" Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase <>  0"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            End If



            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If String.IsNullOrEmpty(txtSearchEditEndFrom.Text) = False And txtSearchEditEndFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.LastModifiedOn >= '" + Convert.ToDateTime(txtSearchEditEndFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEditEndTo.Text) = False And txtSearchEditEndTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and a.LastModifiedOn <= '" + Convert.ToDateTime(txtSearchEditEndTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and a.LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and a.CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearchComments.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.Comments like '%" & txtSearchComments.Text.Trim & "%'"
            End If


            If String.IsNullOrEmpty(txtSearchValueBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and a.ValueBase >= " + txtSearchValueBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchValueBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and a.ValueBase <= " + txtSearchValueBaseTo.Text
            End If


            If String.IsNullOrEmpty(txtSearchAppliedBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and a.AppliedBase >= " + txtSearchAppliedBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchAppliedBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and a.AppliedBase <= " + txtSearchAppliedBaseTo.Text
            End If

            If String.IsNullOrEmpty(txtSearchBalanceBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase >= " + txtSearchBalanceBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchBalanceBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and a.BalanceBase <= " + txtSearchBalanceBaseTo.Text
            End If

            If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                txtCondition.Text = txtCondition.Text + " and ((a.PrintCounter = 0) or (a.PrintCounter = '') or  (a.PrintCounter is null))"
            End If


            If String.IsNullOrEmpty(txtSearchBatchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and a.BillSchedule like '%" & txtSearchBatchInvoiceNo.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and DueDate <= " + txtSearchOverDueDays.Text
            'End If

            Dim loverduedays As String
            'LSoverduedays = " DateDiff( ""d"",IfNULL(DueDate,SalesDate),GetDate()) "
            loverduedays = " DateDiff(curdate(),ifnull(a.DueDate,a.SalesDate)) "
            If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
                txtCondition.Text = txtCondition.Text & " AND " & loverduedays & " >= " & Val(txtSearchOverDueDays.Text) & " "
            End If



            If String.IsNullOrEmpty(txtSearchDetailServiceLocation.Text.Trim) = False Then
                If (ddlSearchContactType.Text.Trim) = "-1" Then
                    lblAlertSearch.Text = "SELECT ACCOUNT TYPE TO SEARCH FOR SERVICE LOCATION"
                    mdlPopupSearch.Show()
                    Exit Sub
                End If

                'If ddlSearchContactType.Text.Trim = "CORPORATE" Or ddlSearchContactType.Text.Trim = "COMPANY" Then
                '    txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                '  & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblCompanyLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                'ElseIf ddlSearchContactType.Text.Trim = "RESIDENTIAL" Or ddlSearchContactType.Text.Trim = "PERSON" Then
                '    txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                '  & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblPersonLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                'End If

                If ddlSearchContactType.Text.Trim = "CORPORATE" Or ddlSearchContactType.Text.Trim = "COMPANY" Then
                    txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                  & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblCompanyLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                    'ElseIf ddlSearchContactType.Text.Trim = "RESIDENTIAL" Or ddlSearchContactType.Text.Trim = "PERSON" Then
                    '    txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                    '  & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblPersonLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                End If

            End If

            If String.IsNullOrEmpty(txtSearchDetailReference.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE RefType LIKE '%" & (txtSearchDetailReference.Text) & "%') "
            End If

            If String.IsNullOrEmpty(txtSearchDetailContractNo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE CostCode LIKE '%" & (txtSearchDetailContractNo.Text) & "%') "
            End If

            If (ddlCOACode.Text.Trim) <> "-1" Then
                txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE LedgerCode LIKE '%" & (Left(ddlCOACode.Text, 5)) & "%') "
            End If


            If String.IsNullOrEmpty(txtSearchDetailPONONo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND a.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE CostCode IN (SELECT ContractNo from tblContract where PONo like '" & (txtSearchDetailPONONo.Text) & "%')) "
            End If


            If txtDisplayRecordsLocationwise.Text = "Y" Then

                strsql = strsql & " and a.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"


                If ddlBranch.SelectedIndex > 0 Then
                    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                        strsql = strsql & " and a.location = '" & ddlBranch.Text.Trim + "'"
                    End If
                End If
            End If

            If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and (a.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
                'txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
                'txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
            End If

            txtAccountIDMPCorporate.Text = strsql + txtCondition.Text
            txtConditionCorporate.Text = txtCondition.Text + strPostStatusCorporate


            'strsql = strsql & " UNION "
            strsql = ""
            txtCondition.Text = ""
            strPostStatus = ""
            Dim strPostStatusResidential As String
            strPostStatusResidential = ""

            strsql = strsql & " Select c.PostStatus, c.PaidStatus, c.GlStatus, c.InvoiceNumber, c.SalesDate, c.AccountId, c.CustName, c.BillAddress1, c.BillBuilding, c.BillStreet, c.BillCountry, c.BillPostal, c.Billcity,  "
            strsql = strsql & " c.ValueBase, c.ValueOriginal, c.GSTBase, c.GSTOriginal, c.AppliedBase, c.AppliedOriginal, c.BalanceBase, c.BalanceOriginal, c.Salesman, c.PoNo, c.OurRef, c.yourRef, c.Terms, c.DiscountAmount, c.GSTAmount, c.NetAmount, c.GLPeriod, c.CompanyGroup, c.ContactType, c.BatchNo, c.Salesman, c.Comments, c.AmountWithDiscount , c.TermsDay, c.RecurringInvoice,  c.BillSchedule, "
            strsql = strsql & " c.ReceiptBase, c.CreditBase, c.StaffCode, c.CustAddress1, c.CustAddCountry, c.CustAddPostal, c.CustAddStreet, c.custAddBuilding,  c.CustAddCity, c.PrintCounter, c.EmailSentStatus, c.Location, c.EmailSentDate, "
            strsql = strsql & " c.CreatedBy,   c.CreatedOn, c.LastModifiedBy, c.LastModifiedOn, c.Rcno, c.Description, "
            strsql = strsql & " c.ServiceAddress, c.EI, c.EInvoiceStatus, c.UUID,c.SubmissionID,c.SubmissionDate,c.SubmissionBy,if((71-HOUR(TIMEDIFF(now(), submissiondate))>0),(71-HOUR(TIMEDIFF(now(), submissiondate))),0) as TimeToCancel "
            strsql = strsql & " from tblSales c, tblPerson d where 1=1 "
            strsql = strsql & " and (c.AccountID = d.AccountId)  "
            'strsql = strsql & " and (c.ContactType='PERSON')  "

            txtCondition.Text = txtCondition.Text & " and (c.ContactType='PERSON') "

            'If chkNoHardCopyInvoice.Checked = True Then
            '    'strsql = strsql & " and ((d.HardCopyInvoice= False)) "
            'Else
            '    strsql = strsql & " and ((d.HardCopyInvoice= True)) "
            'End If

            'strsql = strsql & " and (c.DocType='ARIN')  "
            'strsql = strsql & txtAccountIDMPResidential.Text

            'If chkShowUnprinted.Checked = False Then
            '    strsql = strsql & txtConditionMultiPrint.Text & " AND c.PostStatus ='P'"
            'Else
            '    strsql = strsql & txtConditionMultiPrint.Text & " and c.PostStatus ='P' AND ((c.PrintCounter = '0') or (c.PrintCounter is null) or (c.PrintCounter = ''))  "
            'End If

            'End: 24.07.21

            Dim YrStrList1 As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch0.Items
                If item.Selected Then
                    YrStrList1.Add("'" & item.Value & "'")
                End If
            Next

            Dim YrStr1 As [String] = [String].Join(",", YrStrList1.ToArray())


            'txtCondition.Text = txtCondition.Text & " and c.PostStatus in (" & (YrStr1) & ") "
            strPostStatusResidential = " and c.PostStatus in (" & (YrStr1) & ") "

            'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    'txtCondition.Text = txtCondition.Text + " and Location = '" & txtLocation.Text & "'"
            '    txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            'End If



            If String.IsNullOrEmpty(txtSearchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.InvoiceNumber like '%" & txtSearchInvoiceNo.Text.Trim + "%'"
            End If


            'If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"

            'End If

            If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.CustName like ""%" & txtSearchClientName.Text.Trim & "%"""
            End If


            'BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal

            If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and ((c.BillAddress1 like ""%" & txtSearchAddress.Text.Trim & "%"") or (c.BillBuilding like ""%" & txtSearchAddress.Text.Trim & "%"") or (c.BillStreet like ""%" & txtSearchAddress.Text.Trim & "%"") or (c.BillCountry like ""%" & txtSearchAddress.Text.Trim & "%"") or (c.BillPostal like ""%" & txtSearchAddress.Text.Trim & "%""))"
            End If

            If String.IsNullOrEmpty(txtSearchServiceAddress.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.ServiceAddress like ""%" & txtSearchServiceAddress.Text.Trim & "%"""
            End If


            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.OurRef like ""%" & txtSearchOurRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.YourRef like ""%" & txtSearchYourRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.PoNo like ""%" & txtSearchPONo.Text.Trim & "%"""
            End If

            'If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
            '    txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            'End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If


            If (ddlSearchSalesman.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and c.StaffCode like '%" & ddlSearchSalesman.Text.Trim + "%'"
            End If

            If (ddlSearchContractGroup.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and c.ContractGroup like '%" & ddlSearchContractGroup.Text.Trim + "%'"
            End If

            If rdbSearchPaidStatus0.SelectedItem.Value = "Fully Paid" Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase = 0 and c.ValueBase <> 0 "
            ElseIf rdbSearchPaidStatus0.SelectedItem.Value = "O/S" Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase <>  0"
            End If


            If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            End If



            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If String.IsNullOrEmpty(txtSearchEditEndFrom.Text) = False And txtSearchEditEndFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.LastModifiedOn >= '" + Convert.ToDateTime(txtSearchEditEndFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEditEndTo.Text) = False And txtSearchEditEndTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and c.LastModifiedOn <= '" + Convert.ToDateTime(txtSearchEditEndTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and c.LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and c.CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearchComments.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.Comments like '%" & txtSearchComments.Text.Trim & "%'"
            End If


            If String.IsNullOrEmpty(txtSearchValueBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and c.ValueBase >= " + txtSearchValueBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchValueBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and c.ValueBase <= " + txtSearchValueBaseTo.Text
            End If


            If String.IsNullOrEmpty(txtSearchAppliedBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and c.AppliedBase >= " + txtSearchAppliedBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchAppliedBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and c.AppliedBase <= " + txtSearchAppliedBaseTo.Text
            End If

            If String.IsNullOrEmpty(txtSearchBalanceBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase >= " + txtSearchBalanceBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchBalanceBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and c.BalanceBase <= " + txtSearchBalanceBaseTo.Text
            End If

            If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                txtCondition.Text = txtCondition.Text + " and ((c.PrintCounter = 0) or (c.PrintCounter = '') or  (c.PrintCounter is null))"
            End If


            If String.IsNullOrEmpty(txtSearchBatchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and c.BillSchedule like '%" & txtSearchBatchInvoiceNo.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and DueDate <= " + txtSearchOverDueDays.Text
            'End If

            Dim loverduedays1 As String
            'LSoverduedays = " DateDiff( ""d"",IfNULL(DueDate,SalesDate),GetDate()) "
            loverduedays1 = " DateDiff(curdate(),ifnull(c.DueDate,c.SalesDate)) "
            If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
                txtCondition.Text = txtCondition.Text & " AND " & loverduedays1 & " >= " & Val(txtSearchOverDueDays.Text) & " "
            End If



            If String.IsNullOrEmpty(txtSearchDetailServiceLocation.Text.Trim) = False Then
                If (ddlSearchContactType.Text.Trim) = "-1" Then
                    lblAlertSearch.Text = "SELECT ACCOUNT TYPE TO SEARCH FOR SERVICE LOCATION"
                    mdlPopupSearch.Show()
                    Exit Sub
                End If

                'If ddlSearchContactType.Text.Trim = "CORPORATE" Or ddlSearchContactType.Text.Trim = "COMPANY" Then
                '    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
                '  & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblCompanyLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                'ElseIf ddlSearchContactType.Text.Trim = "RESIDENTIAL" Or ddlSearchContactType.Text.Trim = "PERSON" Then
                txtCondition.Text = txtCondition.Text & " AND c.InvoiceNumber IN (SELECT InvoiceNumber " _
              & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblPersonLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "

            End If



            If String.IsNullOrEmpty(txtSearchDetailReference.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND c.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE RefType LIKE '%" & (txtSearchDetailReference.Text) & "%') "
            End If

            If String.IsNullOrEmpty(txtSearchDetailContractNo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND c.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE CostCode LIKE '%" & (txtSearchDetailContractNo.Text) & "%') "
            End If

            If (ddlCOACode.Text.Trim) <> "-1" Then
                txtCondition.Text = txtCondition.Text & " AND c.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE LedgerCode LIKE '%" & (Left(ddlCOACode.Text, 5)) & "%') "
            End If


            If String.IsNullOrEmpty(txtSearchDetailPONONo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND c.InvoiceNumber IN (SELECT InvoiceNumber " _
                    & "FROM tblsalesdetail WHERE CostCode IN (SELECT ContractNo from tblContract where PONo like '" & (txtSearchDetailPONONo.Text) & "%')) "
            End If

            'txtConditionMultiPrint.Text = txtCondition.Text



            If txtDisplayRecordsLocationwise.Text = "Y" Then
                txtCondition.Text = txtCondition.Text & " and c.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                If ddlBranch.SelectedIndex > 0 Then
                    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                        txtCondition.Text = txtCondition.Text & " and c.location = '" & ddlBranch.Text.Trim + "'"
                    End If
                End If
            End If

            'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '    'txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '    'txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            'End If

            If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and (c.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
                'txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
                'txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
            End If

            txtAccountIDMPResidential.Text = strsql + txtCondition.Text
            txtConditionResidential.Text = txtCondition.Text + strPostStatusResidential


            If ddlSearchContactType.SelectedIndex = 0 Then
                If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                    txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate + " and B.HardCopyInvoice=True " + " UNION " + txtAccountIDMPResidential.Text + strPostStatusResidential + " and D.HardCopyInvoice=True "
                Else
                    txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate + " UNION " + txtAccountIDMPResidential.Text + strPostStatusResidential
                End If


            ElseIf ddlSearchContactType.SelectedIndex = 1 Then
                If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                    txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate + " and B.HardCopyInvoice=True "
                Else
                    txtSelect.Text = txtAccountIDMPCorporate.Text + strPostStatusCorporate
                End If


                txtAccountIDMPResidential.Text = ""
                txtConditionResidential.Text = ""
            ElseIf ddlSearchContactType.SelectedIndex = 2 Then
                txtAccountIDMPCorporate.Text = ""
                txtConditionCorporate.Text = ""

                If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                    txtSelect.Text = txtAccountIDMPResidential.Text + strPostStatusResidential + " and D.HardCopyInvoice=True "
                Else
                    txtSelect.Text = txtAccountIDMPResidential.Text + strPostStatusResidential
                End If

            End If


            txtOrderBy.Text = " order by rcno desc, custname "

            'txtSelect.Text = strsql

            'strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            'txt.Text = strsql

            txt.Text = txtSelect.Text + txtOrderBy.Text
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
        End Try
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        Dim strsql As String
        strsql = ""
        Try
            lblMessage.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""
            lblAlertSearch.Text = ""

            txtConditionMultiPrint.Text = ""
            txtAccountIDMPCorporate.Text = ""
            txtAccountIDMPResidential.Text = ""

            '24.07.21

            PopulateGridFromFilterSearch()


            'Exit Sub





            'strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            ''strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            'strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            'strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, EmailSentDate, Location, "
            'strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
            'strsql = strsql & " , ServiceAddress "
            'strsql = strsql & " from tblSales where 1=1 "
            'strsql = strsql & " from tblSales, invoiceserviceaddress where tblSales.InvoiceNumber = invoiceserviceaddress.invoiceNumber and  1=1 "

            'txtCondition.Text = " and (DocType='ARIN')  "


            'Dim YrStrList As List(Of [String]) = New List(Of String)()

            ''If rdbStatusSearch.SelectedValue = "ALL" Then
            ''    For Each item As ListItem In chkStatusSearch.Items
            ''        YrStrList.Add(item.Value)
            ''    Next
            ''Else
            'For Each item As ListItem In chkStatusSearch0.Items
            '    If item.Selected Then
            '        YrStrList.Add("'" & item.Value & "'")
            '    End If
            'Next

            'Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())


            'txtCondition.Text = txtCondition.Text & " and PostStatus in (" & (YrStr) & ") "
            ''txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"

            ''If txtDisplayRecordsLocationwise.Text = "Y" Then
            ''    'txtCondition.Text = txtCondition.Text + " and Location = '" & txtLocation.Text & "'"
            ''    txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            ''End If


            'If String.IsNullOrEmpty(txtSearchInvoiceNo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and InvoiceNumber like '%" & txtSearchInvoiceNo.Text.Trim + "%'"
            'End If


            ''If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
            ''    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"

            ''End If

            'If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and CustName like ""%" & txtSearchClientName.Text.Trim & "%"""
            'End If


            ''BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal

            'If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and ((BillAddress1 like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillBuilding like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillStreet like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillCountry like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillPostal like ""%" & txtSearchAddress.Text.Trim & "%""))"
            'End If

            'If String.IsNullOrEmpty(txtSearchServiceAddress.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and ServiceAddress like ""%" & txtSearchServiceAddress.Text.Trim & "%"""
            'End If


            'If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and OurRef like ""%" & txtSearchOurRef.Text.Trim & "%"""
            'End If

            'If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and YourRef like ""%" & txtSearchYourRef.Text.Trim & "%"""
            'End If

            'If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and PoNo like ""%" & txtSearchPONo.Text.Trim & "%"""
            'End If

            ''If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
            ''    txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            ''End If

            ''If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            ''    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            ''End If


            'If (ddlSearchSalesman.SelectedIndex > 0) Then
            '    txtCondition.Text = txtCondition.Text & " and StaffCode like '%" & ddlSearchSalesman.Text.Trim + "%'"
            'End If

            'If (ddlSearchContractGroup.SelectedIndex > 0) Then
            '    txtCondition.Text = txtCondition.Text & " and ContractGroup like '%" & ddlSearchContractGroup.Text.Trim + "%'"
            'End If

            'If rdbSearchPaidStatus0.SelectedItem.Value = "Fully Paid" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase = 0 and ValueBase <> 0 "
            'ElseIf rdbSearchPaidStatus0.SelectedItem.Value = "O/S" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase <>  0"
            'End If


            'If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            'End If
            'If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            'End If


            ''If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            ''End If
            ''If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            ''End If


            ''If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            ''End If
            ''If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            ''End If


            ''If String.IsNullOrEmpty(txtSearchEditEndFrom.Text) = False And txtSearchEditEndFrom.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and LastModifiedOn >= '" + Convert.ToDateTime(txtSearchEditEndFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            ''End If
            ''If String.IsNullOrEmpty(txtSearchEditEndTo.Text) = False And txtSearchEditEndTo.Text <> "__/__/____" Then
            ''    txtCondition.Text = txtCondition.Text + " and LastModifiedOn <= '" + Convert.ToDateTime(txtSearchEditEndTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            ''End If


            ''If (ddlSearchEditedBy.SelectedIndex > 0) Then
            ''    txtCondition.Text = txtCondition.Text & " and LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            ''End If


            ''If (ddlSearchCreatedBy.SelectedIndex > 0) Then
            ''    txtCondition.Text = txtCondition.Text & " and CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            ''End If

            'If String.IsNullOrEmpty(txtSearchComments.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and Comments like '%" & txtSearchComments.Text.Trim & "%'"
            'End If


            'If String.IsNullOrEmpty(txtSearchValueBaseFrom.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text + " and ValueBase >= " + txtSearchValueBaseFrom.Text
            'End If
            'If String.IsNullOrEmpty(txtSearchValueBaseTo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and ValueBase <= " + txtSearchValueBaseTo.Text
            'End If


            'If String.IsNullOrEmpty(txtSearchAppliedBaseFrom.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text + " and AppliedBase >= " + txtSearchAppliedBaseFrom.Text
            'End If
            'If String.IsNullOrEmpty(txtSearchAppliedBaseTo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and AppliedBase <= " + txtSearchAppliedBaseTo.Text
            'End If

            'If String.IsNullOrEmpty(txtSearchBalanceBaseFrom.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase >= " + txtSearchBalanceBaseFrom.Text
            'End If
            'If String.IsNullOrEmpty(txtSearchBalanceBaseTo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase <= " + txtSearchBalanceBaseTo.Text
            'End If

            'If (chkSearchShowUnPrintedInvoice.Checked) = True Then
            '    txtCondition.Text = txtCondition.Text + " and ((PrintCounter = 0) or (PrintCounter = '') or  (PrintCounter is null))"
            'End If


            'If String.IsNullOrEmpty(txtSearchBatchInvoiceNo.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and BillSchedule like '%" & txtSearchBatchInvoiceNo.Text.Trim + "%'"
            'End If

            ''If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
            ''    txtCondition.Text = txtCondition.Text + " and DueDate <= " + txtSearchOverDueDays.Text
            ''End If

            'Dim loverduedays As String
            ''LSoverduedays = " DateDiff( ""d"",IfNULL(DueDate,SalesDate),GetDate()) "
            'loverduedays = " DateDiff(curdate(),ifnull(DueDate,SalesDate)) "
            'If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " AND " & loverduedays & " >= " & Val(txtSearchOverDueDays.Text) & " "
            'End If



            'If String.IsNullOrEmpty(txtSearchDetailServiceLocation.Text.Trim) = False Then
            '    If (ddlSearchContactType.Text.Trim) = "-1" Then
            '        lblAlertSearch.Text = "SELECT ACCOUNT TYPE TO SEARCH FOR SERVICE LOCATION"
            '        mdlPopupSearch.Show()
            '        Exit Sub
            '    End If

            '    If ddlSearchContactType.Text.Trim = "CORPORATE" Or ddlSearchContactType.Text.Trim = "COMPANY" Then
            '        txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '      & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblCompanyLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
            '    ElseIf ddlSearchContactType.Text.Trim = "RESIDENTIAL" Or ddlSearchContactType.Text.Trim = "PERSON" Then
            '        txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '      & "FROM tblsalesdetail WHERE LocationID IN (Select LocationID from tblPersonLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "

            '    End If

            'End If

            'If String.IsNullOrEmpty(txtSearchDetailReference.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '        & "FROM tblsalesdetail WHERE RefType LIKE '%" & (txtSearchDetailReference.Text) & "%') "
            'End If

            'If String.IsNullOrEmpty(txtSearchDetailContractNo.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '        & "FROM tblsalesdetail WHERE CostCode LIKE '%" & (txtSearchDetailContractNo.Text) & "%') "
            'End If

            'If (ddlCOACode.Text.Trim) <> "-1" Then
            '    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '        & "FROM tblsalesdetail WHERE LedgerCode LIKE '%" & (Left(ddlCOACode.Text, 5)) & "%') "
            'End If


            'If String.IsNullOrEmpty(txtSearchDetailPONONo.Text.Trim) = False Then
            '    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT InvoiceNumber " _
            '        & "FROM tblsalesdetail WHERE CostCode IN (SELECT ContractNo from tblContract where PONo like '" & (txtSearchDetailPONONo.Text) & "%')) "
            'End If

            'txtConditionMultiPrint.Text = txtCondition.Text



            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            '    If ddlBranch.SelectedIndex > 0 Then
            '        If String.IsNullOrEmpty(ddlBranch.Text) = False Then
            '            txtCondition.Text = txtCondition.Text & " and location = '" & ddlBranch.Text.Trim + "'"
            '        End If
            '    End If
            'End If

            'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '    txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            '    txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"
            'End If

            'If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
            '    txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
            '    txtAccountIDMPCorporate.Text = " and (a.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
            '    txtAccountIDMPResidential.Text = " and (c.AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"
            'End If




            'txtOrderBy.Text = " order by rcno desc, custname "

            'txtSelect.Text = strsql

            'strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            'txt.Text = strsql


            'SQLDSInvoice.SelectCommand = strsql
            SQLDSInvoice.SelectCommand = txt.Text

            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CalculateTotal()

            MakeMeNull()
            MakeMeNullBillingDetails()
            ''''''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


                'MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"

                    If String.IsNullOrEmpty(txtRcnoSelected.Text.Trim) = False Then
                        If txtRcnoSelected.Text > 0 Then
                            txtRcno.Text = txtRcnoSelected.Text
                            txtRcnoSelected.Text = 0
                        Else
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                        End If
                    Else
                        txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                    End If

                    'txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0
                    updPanelSave.Update()
                    UpdatePanel3.Update()

                    'GridView1_SelectedIndexChanged(sender, e)
                Else
                    MakeMeNull()
                    MakeMeNullBillingDetails()
                End If
            End If

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '+ "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '''''''''''''''''''''''''''''


            updPnlMsg.Update()
            updPanelInvoice.Update()
            SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'GridSelected = "SQLDSContract"



            txtSearchAccountID.Text = ""
            txtSearchClientName.Text = ""
            'txtSearchAddress.Text = ""
            'txtSearchContact.Text = ""
            'txtSearchContactNo.Text = ""
            'txtSearchPostal.Text = ""

            txtSearchOurRef.Text = ""
            txtSearchYourRef.Text = ""

            ddlSearchSalesman.ClearSelection()
            'ddlSearchScheduler.ClearSelection()
            'ddlSearchStatus.ClearSelection()
            'ddlSearchContractGroup.ClearSelection()
            'ddlSearchCompanyGroup.ClearSelection()
            'ddlSearchLocationGroup.ClearSelection()
            'ddlSearchRenewalStatus.ClearSelection()
            'ddlSearchInChargeId.ClearSelection()

            txtInvoiceDateSearchFrom.Text = ""
            txtInvoiceDateSearchTo.Text = ""
            'txtSearchServiceStartFrom.Text = ""
            'txtSearchServiceStartTo.Text = ""
            'txtSearchServiceEndFrom.Text = ""
            'txtSearchServiceEndTo.Text = ""
            txtSearchEditEndFrom.Text = ""
            txtSearchEditEndTo.Text = ""

            'txtSearchStartDateFrom.Text = ""
            'txtSearchStartDateTo.Text = ""

            'txtSearchEndDateFrom.Text = ""
            'txtSearchEndDateTo.Text = ""
            txtSearchEntryDateFrom.Text = ""
            txtSearchEntryDateTo.Text = ""

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnSearch_Click", ex.Message.ToString, Left(strsql, 2000))
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub

    Protected Sub chkShowUnprinted_CheckedChanged(sender As Object, e As EventArgs) Handles chkShowUnprinted.CheckedChanged
        Dim strsql As String
        strsql = ""
        Try


            PopulateMultiPrint()

            'Start: Quoted on 22.11.20

            'strsql = "Select PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            'strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringInvoice,  BillSchedule, "
            'strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, Location, EmailSentDate, "
            'strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
            'strsql = strsql & " from tblSales where 1=1 "

            'strsql = strsql & " and (DocType='ARIN')  "

            'If chkShowUnprinted.Checked = False Then
            '    strsql = strsql & txtCondition.Text & " AND PrintCounter > 0 and  PostStatus ='P'"
            'Else
            '    strsql = strsql & txtCondition.Text & " and PostStatus ='P' AND ((PrintCounter = '0') or (PrintCounter is null) or (PrintCounter = ''))  "
            'End If

            'strsql = strsql + txtOrderBy.Text + " limit " & txtLimit.Text

            ' ''''''''''''''''''


            'SqlDSMultiPrint.SelectCommand = strsql
            'grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
            'grdViewMultiPrint.DataBind()

            'mdlPopupMultiPrint.Show()
            'End: Quoted on 22.11.20
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "chkShowUnprinted_CheckedChanged", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient2_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient2.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = ""
        txtClientFrom.Text = ""

        txtClientFrom.Text = "InvoiceFilter"
        txtSearch.Text = "InvoiceFilter"
        Try

            If String.IsNullOrEmpty(txtSearchAccountID.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtSearchAccountID.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text
                'UpdatePanel1.Update()


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            'txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
            'txtImportService.Text = SqlDSClient.SelectCommand
            'mdlPopupSearch.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnClient2_Click", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub txtInvoiceDate_TextChanged1(sender As Object, e As EventArgs) Handles txtInvoiceDate.TextChanged

        If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
            If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                If Convert.ToInt32(txtCreditDays.Text) > 0 Then
                    txtDueDate.Text = DateAdd(DateInterval.Day, Convert.ToInt32(txtCreditDays.Text), Convert.ToDateTime(txtInvoiceDate.Text))
                End If
            End If

            txtBillingPeriod.Text = Year(txtInvoiceDate.Text) & Month(txtInvoiceDate.Text).ToString("D2")
            'txtBillingPeriod.Text = Year(txtInvoiceDate.Text) & MONTH(txtInvoiceDate.Text)), 2)
            FindGSTPct()

            UpdateTaxCodeRate()

            ''24.03.24
            'If ddlContractGroupBilling.SelectedIndex = 0 Then
            '    FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
            '    '24.03.24
            'End If

            AdjustGStAmountGSTPerc()
            CalculateTotalGSTNetPrice()

            'CalculateTotalPrice()
            'CalculateTotal()
        End If
    End Sub


    Protected Sub txtItemTypeGVQR_SelectedIndexChanged(sender As Object, e As EventArgs)

        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

        Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGVQR"), DropDownList)
        'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGV"), TextBox)


        'lTargetDesciption = lblid1.Text

        Dim rowindex1 As Integer = xrow1.RowIndex
        If rowindex1 = grvBillingDetailsQR.Rows.Count - 1 Then
            btnAddDetailQR_Click(sender, e)
            'txtRecordAdded.Text = "Y"
        End If
    End Sub


    Protected Sub txtGSTAmtGV_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            CalculateTotalGSTNetPrice()
            updpnlBillingDetails.Update()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtGSTAmtGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub txtGSTAmtGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGVB"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            CalculateTotalGSTNetPrice()
            updPnlBillingRecsNew.Update()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtGSTAmtGVB_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub CalculateTotalGSTNetPrice()
        Try


            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)


                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If


                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                    End If
                Next
            End If

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")
            txtTotalGSTAmt.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtGSTAmount.Text)
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ''''''''''''''''''''''''''''

            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)
            UpdatePanel2.Update()
            updPanelSave.Update()
            table.Dispose()
            'updpnlServiceRecs.Update()

            'lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'UpdatePanel3.Update()

            'updPanelInvoice.Update()
            'updpnlBillingDetails.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            'updPanelSave.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub GridView2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged

        'mdlQuickReceipt.Show()
        txtIsPopup.Text = "Receipts"
        Session("receiptfrom") = "invoiceQR"

        'If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '    Session("invoiceno") = txtInvoiceNo.Text
        'End If

        Session("receiptno1") = Server.HtmlDecode(GridView2.SelectedRow.Cells(6).Text).ToString

        'txt.Text = Server.HtmlDecode(GridView2.SelectedRow.Cells(6).Text).ToString

        'Exit Sub
        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
            'Session("contractno") = txtContractNo.Text
            'txt.Text = SQLDSContract.SelectCommand
            Session("gridsqlinv") = txt.Text
            Session("strcondition") = txtCondition.Text
            Session("rcnoinv") = txtRcno.Text
            Session("AccountId") = txtAccountIdBilling.Text
            Session("AccountName") = txtAccountName.Text
            Session("ContactType") = ddlContactType.Text
            Session("CompanyGroup") = txtCompanyGroup.Text
            Session("Salesman") = ddlSalesmanBilling.Text
            Session("fromtext") = txtFrom2.Text
            '''''''''''''''''''''''''''''
        End If

        Response.Redirect("Receipts.aspx")
    End Sub

    Protected Sub OnRowDataBoundg2(sender As Object, e As GridViewRowEventArgs) Handles GridView2.RowDataBound
        'If e.Row.RowType = DataControlRowType.DataRow Then
        '    e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
        '    'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
        '    'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
        '    'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
        '    'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

        '    e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
        '    e.Row.ToolTip = "Click to select this row."
        'End If
    End Sub


    Protected Sub OnSelectedIndexChangedg2(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged

        For Each row As GridViewRow In GridView2.Rows
            'If row.RowIndex = GridView1.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = GridView2.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next


    End Sub


    Public Sub FindLocation()
        Dim IsLock As String
        IsLock = ""

        Dim connLocation As MySqlConnection = New MySqlConnection()

        connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connLocation.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT LocationID, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
        command1.Connection = connLocation

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtLocation.Text = dt.Rows(0)("LocationID").ToString
        End If

        connLocation.Close()
        connLocation.Dispose()
        command1.Dispose()
        dt.Dispose()
    End Sub

    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click
        lblMessage.Text = ""
        lblAlert.Text = ""


        ''''''''''''''''''

        txtMode.Text = "NEW"
        lblMessage.Text = "ACTION: ADD RECORD"
        txtSearch1Status.Text = "O,P"

        If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
            txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
        End If


        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray


        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray

        btnBack.Enabled = False
        btnBack.ForeColor = System.Drawing.Color.Gray

        btnBack.Enabled = False
        btnBack.ForeColor = System.Drawing.Color.Gray

        'btnReset.Enabled = False
        'btnReset.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnReverse.Enabled = False
        btnReverse.ForeColor = System.Drawing.Color.Gray

        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        chkManualInvoice.Visible = True

        grvBillingDetails.ShowHeader = True

        '''''''''''''''''''



        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnDeleteAll.Enabled = True
        btnDeleteAll.ForeColor = System.Drawing.Color.Black

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnPost.Enabled = False
        btnPost.ForeColor = System.Drawing.Color.Gray

        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True

        txtTin.Enabled = True
        txtSSTNo.Enabled = True

        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True
        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtComments.Enabled = True
        txtDescription.Enabled = True
        'btnSaveInvoice.Enabled = True
        btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnSaveInvoice.Enabled = True


        grvBillingDetailsNew.Enabled = True
        'grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True
        grvBillingDetails.Enabled = True


        txtPostStatus.Text = "O"
        txtInvoiceNo.Text = ""
        txtInvoiceAmount.Text = "0.00"
        txtDiscountAmount.Text = "0.00"
        txtAmountWithDiscount.Text = "0.00"
        txtGSTAmount.Text = "0.00"
        txtNetAmount.Text = "0.00"

        txtGST.Text = txtDefaultTaxCode.Text
        txtGST1.Text = txtTaxRatePct.Text


        'Retrieve TIN, STR
        Dim sqlqry As String
        sqlqry = ""

        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            sqlqry = "Select TaxIdentificationNo, SalesTaxRegistrationNo from tblCompany where AccountId = '" & txtAccountIdBilling.Text.Trim & "'"
        Else
            sqlqry = "Select TaxIdentificationNo, SalesTaxRegistrationNo from tblPerson where AccountId = '" & txtAccountIdBilling.Text.Trim & "'"
        End If

        InsertIntoTblWebEventLog("INVOICE", "btnCOPY", txtTIN.Text, txtAccountType.Text)

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim commandTINSTR As MySqlCommand = New MySqlCommand
        commandTINSTR.CommandType = CommandType.Text
        commandTINSTR.CommandText = sqlqry
        commandTINSTR.Connection = conn

        Dim drTINSTR As MySqlDataReader = commandTINSTR.ExecuteReader()

        Dim dtTINSTR As New DataTable
        dtTINSTR.Load(drTINSTR)

        If dtTINSTR.Rows.Count > 0 Then
            InsertIntoTblWebEventLog("INVOICE", "btnCOPY0", dtTINSTR.Rows(0)("TaxIdentificationNo").ToString, txtcreatedby.Text)

            If dtTINSTR.Rows(0)("TaxIdentificationNo").ToString <> "" Then : txtTIN.Text = dtTINSTR.Rows(0)("TaxIdentificationNo").ToString : End If
            If dtTINSTR.Rows(0)("SalesTaxRegistrationNo").ToString <> "" Then : txtSSTNo.Text = dtTINSTR.Rows(0)("SalesTaxRegistrationNo").ToString : End If
        End If

        commandTINSTR.Dispose()
        conn.Close()
        conn.Dispose()
        ''
        InsertIntoTblWebEventLog("INVOICE", "btnCOPY1", txtTIN.Text, txtcreatedby.Text)


        'RetrieveCompanyInfoTable txtInvoiceNo, STR
        FirstGridViewRowBillingDetailsRecs()
        InsertIntoTblWebEventLog("INVOICE", "btnCOPY2", txtTIN.Text, txtcreatedby.Text)


        updpnlServiceRecs.Update()

        InsertIntoTblWebEventLog("INVOICE", "btnCOPY3", txtTIN.Text, txtcreatedby.Text)

        updPanelSave.Update()

        InsertIntoTblWebEventLog("INVOICE", "btnCOPY4", txtTIN.Text, txtcreatedby.Text)

        EnableControls()


        UpdatePanel3.Update()
        updPanelInvoice.Update()
        InsertIntoTblWebEventLog("INVOICE", "btnCOPY5", txtTIN.Text, txtcreatedby.Text)


        'Dim sql2 As String = ""
        'Dim conn As MySqlConnection = New MySqlConnection()
        '' ''''''''''''''''''''''''''''''''
        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'conn.Open()

        'If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then

        '    sql2 = "Select TaxIdentificationNo,SalesTaxRegistrationNo  "
        '    sql2 = sql2 + " FROM tblCompany A "
        '    sql2 = sql2 + " where 1 = 1 "
        '    sql2 = sql2 + " and AccountID = '" & txtAccountIdBilling.Text & "'"
        'ElseIf txtAccountType.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then

        '    sql2 = "Select TaxIdentificationNo,SalesTaxRegistrationNo  "
        '    sql2 = sql2 + " FROM tblPerson A "
        '    sql2 = sql2 + " where 1 = 1 "
        '    sql2 = sql2 + " and AccountID = '" & txtAccountIdBilling.Text & "'"
        'End If

        'Dim command2 As MySqlCommand = New MySqlCommand
        'command2.CommandType = CommandType.Text
        'command2.CommandText = sql2
        'command2.Connection = conn

        'Dim dr2 As MySqlDataReader = command2.ExecuteReader()

        'Dim dt2 As New DataTable
        'dt2.Load(dr2)


        'If dt2.Rows.Count > 0 Then

        '    txtTIN.Text = Convert.ToString(dt2.Rows(0)("TaxIdentificationNo"))
        '    txtSSTNo.Text = Convert.ToString(dt2.Rows(0)("SalesTaxRegistrationNo"))

        'End If


        'conn.Close()
        'conn.dispose()

        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        grvBillingDetails.Visible = True
    End Sub

    Protected Sub txtGST_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtGST.SelectedIndexChanged



        mdlUpdateGSTCode.Show()

        'Dim sql As String
        'sql = ""
        'sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtGST.Text & "'"

        'Dim conn As MySqlConnection = New MySqlConnection()

        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'conn.Open()

        'Dim command1 As MySqlCommand = New MySqlCommand
        'command1.CommandType = CommandType.Text
        'command1.CommandText = sql
        'command1.Connection = conn

        'Dim dr As MySqlDataReader = command1.ExecuteReader()

        'Dim dt As New DataTable
        'dt.Load(dr)

        'If dt.Rows.Count > 0 Then
        '    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString : End If
        '    txtGSTAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
        '    txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
        'End If

        'conn.Close()
        'conn.Dispose()
        'command1.Dispose()
        'dt.Dispose()


    End Sub

    Protected Sub txtGST_TextChanged(sender As Object, e As EventArgs) Handles txtGST.TextChanged

    End Sub

    Protected Sub btnJournal_Click(sender As Object, e As EventArgs) Handles btnJournal.Click
        'txtRecordNoSelected.Text = lblRecordNo.Text

        Dim sqlstr As String = ""

        sqlstr = "SELECT tblJrnv.PostStatus, " & _
                       "tblJrnv.GlStatus,  " & _
                       "tblJrnv.VoucherNumber, " & _
                       "tblJrnv.JournalDate,  " & _
                       "tblJrnvDet.RefType, " & _
                       "tblJrnvDet.Currency, " & _
                       "tblJrnvDet.CreditBase, " & _
                       "tblJrnvDet.DebitBase, " & _
                       "tblJrnvDet.LedgerCode, " & _
                        "tblJrnvDet.LedgerName, " & _
                       "tblJrnvDet.SubLedgerCode, " & _
                       "tblJrnvDet.Description " & _
               "FROM tblJrnv LEFT OUTER JOIN " & _
                       "tblJrnvDet ON  " & _
                       "tblJrnv.VoucherNumber = tblJrnvDet.VoucherNumber "

        sqlstr = sqlstr & _
                    " WHERE tblJrnvDet.RefType = '" & txtInvoiceNo.Text & "' "

        'sqlstr = sqlstr & _
        '      " and tblJrnvDet.sub = 'INVOICE'"


        SqlDSJournal.SelectCommand = sqlstr

        'SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.appliedbase as Amount,if(doctype ='ARIN','INVOICE' ,'CN') as Type FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and subcode='service' and reftype=@RecordNo ORDER BY VoucherNumber

        'SqlDSContractNo.DataBind()
        'gvPopUpContractNo.DataBind()
        'updPanelInvoice.Update()

        SqlDSJournal.DataBind()
        GrdJournalView.DataBind()
        updPanelInvoice.Update()
        'Session.Add("customerfrom", "Service")

        'If GrdJournalView.Rows.Count = 0 Then
        '    lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS INVOICE"

        'Else
        '    lblAlertTransactions.Text = ""

        'End If

        mdlPopUpJournalView.Show()
    End Sub

    Protected Sub ddlViewServiceRecs_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlViewServiceRecs.SelectedIndexChanged

        SqlDSSalesDetail.SelectCommand = "select InvoiceNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, InvoiceType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode,  ItemClassificationCode, ItemClassificationDesc, UOMDesc, TaxTypeDesc from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
        'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
        grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        grvBillingDetailsNew.DataBind()

        lbltotalservices.Text = grvBillingDetailsNew.Rows.Count & " out of " & txtTotDetRec.Text
        UpdatePanel5.Update()
    End Sub


    Protected Sub chkGSTInclusive_CheckedChanged(sender As Object, e As EventArgs) Handles chkGSTInclusive.CheckedChanged
        CalculatePriceGStInclusive()
    End Sub

    Protected Sub btnConfirmNoUpdateServiceRecord_Click(sender As Object, e As EventArgs) Handles btnConfirmNoUpdateServiceRecord.Click
        Try
            'Dim lRowNo As Long
            'lRowNo = 0
            'lRowNo = Session("AmountForupdateRowNo")
            'Dim TextBoxBillamt As TextBox = CType(grvBillingDetails.Rows(lRowNo).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
            'Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(lRowNo).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)

            'TextBoxBillamt.Text = TextBoxOriginalBillAmount.Text
            'updpnlServiceRecs.Update()

            grvBillingDetailsdiv.Focus()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnConfirmNoUpdateServiceRecord_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub grvBillingDetails_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvBillingDetails.SelectedIndexChanged

    End Sub

    Protected Sub btnSearchII_Click(sender As Object, e As EventArgs) Handles btnSearchII.Click
        btnShowRecordsII_Click(sender, e)
    End Sub

    Protected Sub btnCNDN_Click(sender As Object, e As EventArgs) Handles btnCNDN.Click
        Try
            'If Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
            Session("cnfrom") = "invoice"

            If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                Session("invoiceno") = txtInvoiceNo.Text
            End If

            If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                'Session("contractno") = txtContractNo.Text
                'txt.Text = SQLDSContract.SelectCommand
                Session("gridsqlinv") = txt.Text
                Session("strcondition") = txtCondition.Text
                Session("rcnoinv") = txtRcno.Text
                Session("AccountId") = txtAccountIdBilling.Text
                Session("AccountName") = txtAccountName.Text
                Session("ContactType") = ddlContactType.Text
                Session("CompanyGroup") = txtCompanyGroup.Text
                Session("Salesman") = ddlSalesmanBilling.Text
                Session("fromtext") = txtFrom2.Text
                '''''''''''''''''''''''''''''
            End If

            Response.Redirect("CN.aspx", False)
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnCNDN_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnRecalculate_Click(sender As Object, e As EventArgs) Handles btnRecalculate.Click
        Try
            CType(Me.Master, MasterPage).UpdateInvoiceBal(txtInvoiceNo.Text)

            '' start
            'Dim lTotalReceipt As Decimal
            'Dim lInvoiceAmount As Decimal
            'Dim lTotalcn As Decimal
            'lTotalReceipt = 0.0
            'lInvoiceAmount = 0.0
            'lTotalcn = 0.0
            ''Get Item desc, price Id

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            ''command1.CommandType = CommandType.Text

            ''command1.CommandText = "SELECT AppliedBase FROM tblSales where InvoiceNumber = '" & txtInvoiceNo.Text & "'"
            ''command1.Connection = conn

            ''Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            ''Dim dt1 As New DataTable
            ''dt1.Load(dr1)

            ''If dt1.Rows.Count > 0 Then
            ''    lInvoiceAmount = dt1.Rows(0)("AppliedBase").ToString
            ''End If


            ' '''''''''''''''''''''
            'Dim commandReceipt As MySqlCommand = New MySqlCommand
            'commandReceipt.CommandType = CommandType.Text

            'commandReceipt.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
            '      "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
            '      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & txtInvoiceNo.Text & "' "
            'commandReceipt.Connection = conn

            'commandReceipt.ExecuteNonQuery()
            'commandReceipt.Dispose()

            ' '''''''''''''''''''

            'Dim commandCN As MySqlCommand = New MySqlCommand
            'commandCN.CommandType = CommandType.Text


            'commandCN.CommandText = "SELECT  ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) as totalcn FROM tblSalesDetail A, tblSales B WHERE " & _
            '    "A.InvoiceNumber=B.InvoiceNumber AND (B.DocType = 'ARCN' or B.DocType = 'ARDN')  and B.PostStatus = 'P' and A.SourceInvoice = '" & txtInvoiceNo.Text & "'"

            'commandCN.Connection = conn


            'Dim dr2 As MySqlDataReader = commandCN.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    lTotalcn = dt2.Rows(0)("totalcn").ToString
            'End If
            ''lTotalcn = lTotalcn * (-1)

            'commandCN.Dispose()
            ' ''''''''''''''''''''''''
            ' ''''''''''''''''''''''''




            ' '''''''''''''' Journal

            'Dim lTotalJV As Decimal
            'Dim commandJournal As MySqlCommand = New MySqlCommand
            'commandJournal.CommandType = CommandType.Text

            'commandJournal.CommandText = "SELECT   ifnull(SUM(ifnull(A.DebitBase,0)),0) as debitbase, ifnull(SUM(ifnull(A.CreditBase,0)),0) as creditbase  FROM tbljrnvdet A, tbljrnv B WHERE " & _
            '   "A.VoucherNumber=B.VoucherNumber AND  B.PostStatus = 'P'  and A.RefType = '" & txtInvoiceNo.Text & "' "

            'commandJournal.Connection = conn

            'Dim drJournal As MySqlDataReader = commandJournal.ExecuteReader()
            'Dim dtJournal As New DataTable
            'dtJournal.Load(drJournal)

            'If dtJournal.Rows.Count > 0 Then
            '    'If dtJournal.Rows(0)("debitbase").ToString > 0.0 Then
            '    '    lTotalJV = dtJournal.Rows(0)("debitbase").ToString
            '    'Else
            '    '    lTotalJV = dtJournal.Rows(0)("creditbase").ToString
            '    'End If
            '    lTotalJV = Convert.ToDecimal(dtJournal.Rows(0)("debitbase").ToString - dtJournal.Rows(0)("creditbase").ToString)
            'End If

            ' ''''''''''''''' Journal

            'Dim lbalance As Decimal
            'Dim command3 As MySqlCommand = New MySqlCommand
            'command3.CommandType = CommandType.Text
            'command3.CommandText = "SELECT ValueBase, GSTBase , AppliedBase , ReceiptBase, CreditBase, CreditBase FROM tblSales where InvoiceNumber = '" & txtInvoiceNo.Text & "'"

            'command3.Connection = conn
            'command3.ExecuteNonQuery()

            'Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            'Dim dt3 As New DataTable
            'dt3.Load(dr3)

            'If dt3.Rows.Count > 0 Then

            '    'If String.IsNullOrEmpty(dt3.Rows(0)("ValueBase").ToString) = False Then
            '    '    lbalance = dt3.Rows(0)("ValueBase").ToString
            '    'Else
            '    '    lbalance = 0.0
            '    'End If

            '    'If String.IsNullOrEmpty(dt3.Rows(0)("GSTBase").ToString) = False Then
            '    '    lbalance = lbalance + dt3.Rows(0)("GSTBase").ToString
            '    'Else
            '    '    'lbalance = 0.0
            '    'End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("AppliedBase").ToString) = False Then
            '        lbalance = dt3.Rows(0)("AppliedBase").ToString
            '    Else
            '        lbalance = 0.0
            '    End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
            '        lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
            '    Else
            '        'lbalance = 0.0
            '    End If

            '    lbalance = lbalance + lTotalcn + lTotalJV
            '    'If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
            '    '    lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
            '    'Else
            '    '    'lbalance = 0.0
            '    'End If

            'End If

            ' ''''''''''' Journal


            ' ''''''''''''''''

            ''Dim commandCNUpdate As MySqlCommand = New MySqlCommand
            ''commandCNUpdate.CommandType = CommandType.Text

            ''commandCNUpdate.CommandText = "UPDATE tblSales SET CreditBase = '" & lTotalcn * (-1) & "' WHERE InvoiceNumber = '" & txtInvoiceNo.Text & "'"
            ''commandCNUpdate.Connection = conn

            ' ''command4.Connection = conn
            ''commandCNUpdate.ExecuteNonQuery()
            ''commandCNUpdate.Dispose()

            ' '''''''''''''''''''

            'Dim lcredbal As Decimal
            'lcredbal = 0.0
            'lcredbal = (lTotalcn + lTotalJV) * (-1)

            'Dim command4 As MySqlCommand = New MySqlCommand
            'command4.CommandType = CommandType.Text

            'Dim qry4 As String = "Update tblSales Set CreditBase = " & lcredbal & ", BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            'command4.CommandText = qry4
            'command4.Parameters.Clear()

            'command4.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            'command4.Connection = conn
            'command4.ExecuteNonQuery()

            ''    'End: Update tblSales

            ''End
            'conn.Close()
            'conn.Dispose()

            'command1.Dispose()
            ''command2.Dispose()
            ''commandCN.Dispose()
            'command3.Dispose()
            'command4.Dispose()

            ''dt1.Dispose()
            'dt2.Dispose()
            'dt3.Dispose()

            ''dr1.Close()
            'dr2.Close()
            'dr3.Close()


            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataBind()
            updPanelInvoice.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "ReCalculate", ex.Message.ToString, "")
            Exit Sub
        End Try



        '===============================


    End Sub

    Protected Sub btnConfirmYesUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmYesUpdateGSTCode.Click
        Try
            Dim sql As String
            sql = ""
            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtGST.Text & "'"

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If txtGST.Text = "SR" Or txtGST.Text = "SR8" Or txtGST.Text = "DSP" Or txtGST.Text = "SR9" Then
                    '19.12.22
                    FindGSTPct()
                    txtGSTAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                    txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                    '19.12.22
                Else
                    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                    txtGSTAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                    txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                End If

            End If


            txtGSTSelected.Text = txtGST.Text

            UpdateGStCode()

            'conn.Close()
            'conn.Dispose()
            'command1.Dispose()
            'dt.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnConfirmYesUpdateGSTCode_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnConfirmNoUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmNoUpdateGSTCode.Click
        txtGST.Text = txtGSTSelected.Text
    End Sub


    Private Sub UpdateGStCode()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then

                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTPercGV"), TextBox)

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)

                        TextBoxTaxCode.Text = txtGST.Text
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        TextBoxGSTAmt.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) * Convert.ToDecimal(TextBoxGSTPerc.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then

                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)
                        Dim TextBoxGSTPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTPercGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If


                        TextBoxTaxCodeGVB.Text = txtGST.Text
                        TextBoxGSTPercGVB.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        TextBoxGSTAmtGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) * Convert.ToDecimal(TextBoxGSTPercGVB.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGSTGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)).ToString("N2")


                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        '    GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                        '    If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                        '        lGSTadjustedRecNoNew = j
                        '    End If
                        'End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        'GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If

            txtTotalGSTAmt.Text = (Convert.ToDecimal(GSTGV + GSTGVBNew)).ToString("N2")
            txtTotalWithGST.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + txtTotalGSTAmt.Text).ToString("N2")

            ''totalrecords = totalrecords + gvbRecords

            '' '' end of GVB
            ' ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ' ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            ''GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            'GSTCalc = GSTGVB + GSTGV
            'GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If

            '    txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
            '    txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            'End If

            ''''''''''''''''''''''''''''


            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION UpdateGStCode", ex.Message.ToString, "")
        End Try
    End Sub

    'Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '        filePath = Server.MapPath("~/Uploads/Service/") + filePath
    '        ' lblMessage.Text = filePath
    '        'Return

    '        Response.ContentType = ContentType
    '        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '        Response.WriteFile(filePath)
    '        Response.End()
    '    Catch ex As Exception
    '        ' InsertIntoTblWebEventLog("DownloadFile", ex.Message.ToString, txtTechRcNo.Text)
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Sub

    Protected Sub btnImgDownloadAll_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgDownloadAll.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            Dim qry As String = "SELECT recordno,filename,servicedate,filenamelink,filedescription FROM tblfileupload LEFT JOIN TBLSERVICErecord on tblfileupload.fileref = tblservicerecord.recordno"
            qry = qry + " where manualreport='Y' and fileref in (SELECT RefType FROM tblsalesdetail where InvoiceNumber = '" + txtInvoiceNo.Text + "');"


            command1.CommandText = qry

            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                For i As Integer = 0 To dt.Rows.Count - 1
                    Dim filePath As String = dt.Rows(i)("FileNameLink").ToString

                    Label26.Text = Label26.Text + " " + filePath

                    filePath = Server.MapPath("~/Uploads/Service/") + filePath
                    ' lblMessage.Text = filePath
                    'Return

                    Response.ContentType = ContentType
                    Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
                    Response.WriteFile(filePath)
                    Response.End()

                Next
            End If
            dt.Clear()
            dr.Close()
            command1.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnImgDownloadAll_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnConfirmNoContractTE_Click(sender As Object, e As EventArgs) Handles btnConfirmNoContractTE.Click
        Dim textbox1 As TextBox = CType(grvBillingDetails.Rows(txtContractTE.Text).Cells(0).FindControl("txtContractNoGV"), TextBox)
        textbox1.Text = ""
    End Sub

    'Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
    '    Try

    '        If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
    '            lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
    '            Return
    '        End If

    '        lblMessage.Text = ""
    '        'lblAlertSchDate.Text = ""
    '        lblAlert.Text = ""

    '        Dim btn1 As Button = DirectCast(sender, Button)

    '        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '        Dim rowindex1 As Integer = xrow1.RowIndex

    '        'MakeMeNull()
    '        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

    '        txtRcno.Text = lblidRcno
    '        'RetrieveData()

    '        GridView1.SelectedIndex = rowindex1

    '        'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
    '        Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
    '        'txtRcno.Text = ""

    '        'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
    '        'txtRcno.Text = rcno.ToString()

    '        lblMessage.Text = ""
    '        'lblAlertSchDate.Text = ""
    '        lblAlert.Text = ""
    '        'txtGridIndex.Text = rowindex1.ToString

    '        sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
    '        sqlDSViewEditHistory.DataBind()

    '        grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
    '        grdViewEditHistory.DataBind()

    '        mdlViewEditHistory.Show()

    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")
    '        lblAlert.Text = ex.Message.ToString
    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try

    'End Sub


    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex


            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno

            GridView1.SelectedIndex = rowindex1

            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(10).Text
            txtLogDocNo.Text = strRecordNo

            Dim qry As String = ""
            qry = "Select LogDate,DocRef,StaffID,Action,Comments from tblEventlog where  DocRef = '" & strRecordNo & "'"
            qry = qry & " UNION "
            qry = qry & "SELECT CreatedOn as LogDate,LoginID,ID AS StaffID,Event as Action,Error as Comments from tbleinvoiceeventlog where LoginID = '" & strRecordNo & "'"
            qry = qry & " order by logdate desc"
            sqlDSViewEditHistory.SelectCommand = qry
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub


    Protected Sub btnEInvoiceLogs_Click(sender As Object, e As EventArgs)
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex


            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno

            GridView1.SelectedIndex = rowindex1

            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(10).Text
            txtLogDocNo.Text = strRecordNo
            sqlDSViewEInvoiceLogs.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEInvoiceLogs.DataBind()

            grdViewEInvoiceLogs.DataSourceID = "sqlDSViewEInvoiceLogs"
            grdViewEInvoiceLogs.DataBind()

            mdlViewEInvoiceLogs.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "btnEInvoiceLogs_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub
    Protected Sub grdViewEditHistory_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdViewEditHistory.PageIndexChanging
        Try
            grdViewEditHistory.PageIndex = e.NewPageIndex

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & txtLogDocNo.Text & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()
            mdlViewEditHistory.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "GridView1_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtPopUpClient2_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient2.TextChanged
        If txtPopUpClient2.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter Client Name", "str")
            Exit Sub
        End If

        Try
            '"SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc,  B.AccountID, B.ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, A.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Status = 'O' and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"


            'If txtClientFrom.Text = "ImportService" Then

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    Else
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    End If


            '    txtImportService.Text = SqlDSClient.SelectCommand
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    mdlPopUpClient.Show()
            '    txtIsPopup.Text = "Client"
            'End If

            'If txtSearch.Text = "CustomerSearch" Then

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    Else
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    End If

            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    mdlPopUpClient.Show()
            '    txtIsPopup.Text = "Client"

            'End If

            If txtSearch.Text = "InvoiceSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient2.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient2.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (upper(D.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient2.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient2.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient2.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient2.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient2.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient2.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient2.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient2.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID,  A.BillingName From tblCompany A where  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient2.Text.Trim + "%""  or A.BillContactPerson like '%" + txtPopUpClient2.Text.Trim + "%') order by A.AccountID, A.BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C where  (upper(C.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or C.BillContactPerson like ""%" + txtPopUpClient2.Text.Trim + "%"") order by AccountID,  BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup,  A.BillAddress1,  A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName from tblCompany A  where  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or A.accountid like """ + txtPopUpClient2.Text + "%"" or A.BillContactPerson like ""%" + txtPopUpClient2.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup,  C.BillAddress1,  C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopUpClient2.Text + "%"" or C.BillingName like ""%" + txtPopUpClient2.Text + "%"") order by AccountID,  BillingName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient2.SelectCommand
                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                mdlPopUpClient2.Show()
                txtIsPopup.Text = "Client2"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "FUNCTION txtPopUpClient_TextChanged", ex.Message.ToString, "")
        End Try
        'txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
    End Sub

    Protected Sub chkFromSalesOrder_CheckedChanged(sender As Object, e As EventArgs) Handles chkFromSalesOrder.CheckedChanged
        If chkFromSalesOrder.Checked = True Then
            txtSalesOrderNumberSearch.Enabled = True
            mdlImportServices.Show()
        Else
            txtSalesOrderNumberSearch.Enabled = False
            txtSalesOrderNumberSearch.Text = ""
            mdlImportServices.Show()
        End If

    End Sub

    Protected Sub chkNoHardCopyInvoice_CheckedChanged(sender As Object, e As EventArgs) Handles chkNoHardCopyInvoice.CheckedChanged
        Dim strsql As String
        strsql = ""
        Try


            PopulateMultiPrint()


        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "chkNoHardCopyInvoice_CheckedChanged", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub


    Protected Sub btnExportToExcel_Click(sender As Object, e As EventArgs) Handles btnExportToExcel.Click
        '   GridView1.AllowPaging = False

        'Try
        '    '   InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "1", "")
        '    Response.Clear()
        '    Response.Buffer = True
        '    Response.ClearContent()
        '    Response.ClearHeaders()
        '    Response.Charset = ""
        '    Dim FileName As String = "ExcelImport_Log_" & DateTime.Now & ".xls"
        '    Dim strwritter As StringWriter = New StringWriter()
        '    Dim htmltextwrtter As HtmlTextWriter = New HtmlTextWriter(strwritter)
        '    Response.Cache.SetCacheability(HttpCacheability.NoCache)
        '    Response.ContentType = "application/vnd.ms-excel"
        '    Response.AddHeader("Content-Disposition", "attachment;filename=" & FileName)
        '    GridView1.AllowPaging = False

        '    GridView1.GridLines = GridLines.Both
        '    GridView1.HeaderStyle.Font.Bold = True
        '    GridView1.RenderControl(htmltextwrtter)
        '    '    InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "1", "")

        '    Response.Write(strwritter.ToString())
        '    '      InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "2", "")

        '    Response.[End]()
        '    '
        '    '   InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "3", "")

        'Catch ex As Exception
        '    lblAlert.Text = ex.Message.ToString

        '    InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", ex.Message.ToString, "")
        '    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        'End Try
        'GridView1.AllowPaging = True

        'Return

        Try
            '  ExportGridToExcel()
            ' InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", txt.Text, "")
            If String.IsNullOrEmpty(txt.Text) = False Then
                '   InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "2", "")
                Dim dt As DataTable = GetDataSet()
                '  InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "3", "")
                WriteExcelWithNPOI(dt, "xlsx")
                '   InsertIntoTblWebEventLog("INVOICE", "btnExportToExcel_Click", "4", "")
                'End If

                'Return


                'Dim attachment As String = "attachment; filename=Invoice.xls"
                'Response.ClearContent()
                'Response.AddHeader("content-disposition", attachment)
                'Response.ContentType = "application/vnd.ms-excel"
                'Response.ContentEncoding = System.Text.Encoding.GetEncoding("Windows-1252")
                'Dim tab As String = ""
                'For Each dc As DataColumn In dt.Columns
                '    Response.Write(tab + dc.ColumnName)
                '    tab = vbTab
                'Next
                'Response.Write(vbLf)
                'Dim i As Integer
                'For Each dr As DataRow In dt.Rows
                '    tab = ""
                '    For i = 0 To dt.Columns.Count - 1
                '        Response.Write(tab & dr(i).ToString())
                '        tab = vbTab
                '    Next
                '    Response.Write(vbLf)
                'Next

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", "", "btnExportToExcel_Click", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                Response.End()
                dt.Clear()


                'Response.ContentType = ContentType
                'Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
                'Response.WriteFile(filePath)
                'Response.End()
            Else
                lblAlert.Text = "NO DATA TO EXPORT"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("", "btnExportToExcel_Click", ex.Message.ToString, txtCreatedBy.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Public Overrides Sub VerifyRenderingInServerForm(ByVal control As Control)
    End Sub

    Public Sub WriteExcelWithNPOI(ByVal dt As DataTable, ByVal extension As String)
        Dim workbook As IWorkbook

        If extension = "xlsx" Then
            workbook = New XSSFWorkbook()
        ElseIf extension = "xls" Then
            workbook = New HSSFWorkbook()
        Else
            Throw New Exception("This format is not supported")
        End If

        Dim sheet1 As ISheet = workbook.CreateSheet("Sheet1")

        'Add Selection Criteria

        Dim row1 As IRow = sheet1.CreateRow(0)
        Dim cell1 As ICell = row1.CreateCell(0)
        cell1.SetCellValue("(" + ConfigurationManager.AppSettings("DomainName").ToString() + ")")
        '+ Session("Selection").ToString)

        ' cell1.SetCellValue(Session("Selection").ToString)
        cell1.CellStyle.WrapText = True
        Dim cra = New NPOI.SS.Util.CellRangeAddress(0, 0, 0, 8)
        sheet1.AddMergedRegion(cra)

        'Add Column Heading
        row1 = sheet1.CreateRow(1)

        Dim testeStyle As ICellStyle = workbook.CreateCellStyle()
        testeStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
        testeStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

        testeStyle.FillForegroundColor = IndexedColors.RoyalBlue.Index
        testeStyle.FillPattern = FillPattern.SolidForeground
        '  testeStyle.FillForegroundColor = IndexedColors.White.Index
        testeStyle.Alignment = HorizontalAlignment.Center

        Dim RowFont As IFont = workbook.CreateFont()
        RowFont.Color = IndexedColors.White.Index
        RowFont.IsBold = True

        testeStyle.SetFont(RowFont)

        For j As Integer = 0 To dt.Columns.Count - 1
            Dim cell As ICell = row1.CreateCell(j)
            '  InsertIntoTblWebEventLog("WriteExcel", dt.Columns(j).GetType().ToString(), dt.Columns(j).ToString())

            Dim columnName As String = dt.Columns(j).ToString()
            cell.SetCellValue(columnName)
            ' cell.Row.RowStyle.FillBackgroundColor = IndexedColors.LightBlue.Index
            cell.CellStyle = testeStyle

        Next

        'Add details
        Dim _doubleCellStyle As ICellStyle = Nothing

        If _doubleCellStyle Is Nothing Then
            _doubleCellStyle = workbook.CreateCellStyle()
            _doubleCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            _doubleCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            _doubleCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("#,##0.00")
        End If

        Dim _intCellStyle As ICellStyle = Nothing

        If _intCellStyle Is Nothing Then
            _intCellStyle = workbook.CreateCellStyle()
            _intCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            _intCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            _intCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("#,##0")
        End If

        Dim dateCellStyle As ICellStyle = Nothing

        If dateCellStyle Is Nothing Then
            dateCellStyle = workbook.CreateCellStyle()
            dateCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
            dateCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium

            dateCellStyle.DataFormat = workbook.CreateDataFormat().GetFormat("dd-mm-yyyy")
        End If

        Dim AllCellStyle As ICellStyle = Nothing

        AllCellStyle = workbook.CreateCellStyle()
        AllCellStyle.BorderTop = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderBottom = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderLeft = NPOI.SS.UserModel.BorderStyle.Medium
        AllCellStyle.BorderRight = NPOI.SS.UserModel.BorderStyle.Medium


        For i As Integer = 0 To dt.Rows.Count - 1
            Dim row As IRow = sheet1.CreateRow(i + 2)

            For j As Integer = 0 To dt.Columns.Count - 1
                Dim cell As ICell = row.CreateCell(j)

                If (j >= 14 And j <= 21) Or (j >= 27 And j <= 29) Or j = 36 Or j = 40 Or j = 41 Then
                    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                        Dim d As Double = Convert.ToDouble(dt.Rows(i)(j).ToString)
                        cell.SetCellValue(d)
                    Else
                        Dim d As Double = Convert.ToDouble("0.00")
                        cell.SetCellValue(d)

                    End If
                    cell.CellStyle = _doubleCellStyle

                    'ElseIf j = 26 Or j = 27 Or j = 28 Or j = 35 Or j = 39 Or j = 40 Then
                    '    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                    '        Dim d As Double = Convert.ToDouble(dt.Rows(i)(j).ToString)
                    '        cell.SetCellValue(d)
                    '    Else
                    '        Dim d As Double = Convert.ToDouble("0.00")
                    '        cell.SetCellValue(d)

                    '    End If
                    '    cell.CellStyle = _doubleCellStyle
                ElseIf j = 49 Or j = 37 or j = 68 or j = 57 Then
                    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                        Dim d As Int32 = Convert.ToInt32(dt.Rows(i)(j).ToString)
                        cell.SetCellValue(d)
                    Else
                        Dim d As Int32 = Convert.ToInt32("0")
                        cell.SetCellValue(d)

                    End If
                    cell.CellStyle = _intCellStyle

                ElseIf j = 4 Or j = 54 Or j = 56 Then
                    If String.IsNullOrEmpty(dt.Rows(i)(j).ToString) = False Then
                        Dim d As DateTime = Convert.ToDateTime(dt.Rows(i)(j).ToString())
                        cell.SetCellValue(d)
                        'Else
                        '    Dim d As Double = Convert.ToDouble("0.00")
                        '    cell.SetCellValue(d)

                    End If
                    cell.CellStyle = dateCellStyle
                Else
                    cell.SetCellValue(dt.Rows(i)(j).ToString)
                    cell.CellStyle = AllCellStyle

                End If
                If i = dt.Rows.Count - 1 Then
                    sheet1.AutoSizeColumn(j)
                End If
            Next
        Next



        Using exportData = New MemoryStream()
            Response.Clear()
            workbook.Write(exportData)
            '  Dim criteria As String = "_" + txtSvcDateFrom.Text + "_" + DateTime.Now.ToString("yyyyMMdd_hhmmss")
            Dim attachment As String = "attachment; filename=Invoice"


            If extension = "xlsx" Then
                Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                Response.AddHeader("Content-Disposition", String.Format(attachment + ".xlsx"))
                Response.BinaryWrite(exportData.ToArray())
            ElseIf extension = "xls" Then
                Response.ContentType = "application/vnd.ms-excel"
                Response.AddHeader("Content-Disposition", String.Format(attachment + ".xls"))
                Response.BinaryWrite(exportData.GetBuffer())
            End If

            Response.[End]()
        End Using
    End Sub


    Private Function GetDataSet() As DataTable
        Try
            Dim qry As String = ""

            'qry = "SELECT A.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent, A.ServiceBy, A.ServiceDate, A.SchServiceTime, A.SchServiceTimeOut, A.ScheduleType, A.LocationId, A.ServiceName, A.Address1 AS ServiceAddress, A.AddPostal as Postal, B.BillingFrequency, A.BillAmount as ToBillAmount, A.BilledAmt, A.BillNo, A.ContactPersonID as ContactPerson, replace(replace(A.Notes, char(10), ' '), char(13), ' ') as ServiceDescription, replace(replace(A.Comments, char(10), ' '), char(13), ' ') as ServiceInstruction,"
            'qry = qry + " A.RecordNo, b.ContractNo,B.ContractGroup,A.CompanyGroup,A.ContactType, A.AccountId, A.CustName as AccountName, replace(replace(A.Email, char(10), ' '), char(13), ' ') as Email, replace(replace(A.Description, char(10), ' '), char(13), ' ') as Description, replace(replace(A.Remarks, char(10), ' '), char(13), ' ') as Remarks, A.TeamId, A.Scheduler, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn, A.Rcno"
            'qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo "



            'qry = "SELECT A.Status, if(C.SvcLock is null, 'N', C.SvcLock) as LockSt, cast(A.Emailsent as unsigned) AS EmailSent, A.ServiceBy, A.ServiceDate, A.SchServiceTime, A.SchServiceTimeOut, A.ScheduleType, A.LocationId, A.ServiceName, A.Address1 AS ServiceAddress, A.AddPostal as Postal, B.BillingFrequency, A.BillAmount as ToBillAmount, A.BilledAmt, A.BillNo, A.ContactPersonID as ContactPerson, replace(replace(A.Notes, char(10), ' '), char(13), ' ') as ServiceDescription, replace(replace(A.Comments, char(10), ' '), char(13), ' ') as ServiceInstruction,"
            'qry = qry + " A.RecordNo, b.ContractNo, A.ContactType, A.AccountId, A.CustName as AccountName, replace(replace(A.Email, char(10), ' '), char(13), ' ') as Email, replace(replace(A.Description, char(10), ' '), char(13), ' ') as Description, replace(replace(A.Remarks, char(10), ' '), char(13), ' ') as Remarks, A.TeamId, A.Scheduler, A.TimeIn, A.TimeOut, A.Duration, A.OurRef, A.yourRef, A.LocateGrp, A.TabletId as MobileDeviceID, A.TabletDownloadedDate AS MobileDownloadDate, A.UploadDate as MobileUploadDate,  A.EmailSentDate, A.CreatedBy, A.CreatedOn, A.LastModifiedBy as EditedBy, A.LastModifiedOn as EditedOn, A.Rcno,  ifnull(left(D.JobStatus,1),'') as JobStatus"
            'qry = qry + " FROM tblservicerecord as A Left join tblcontract B on A.contractno = B.contractno Left OUTER join tblLockServiceRecord C on A.ServiceDate between c.SvcDateFrom and C.SvcDateTo Left OUTER join tblServiceRecord2 D on A.RecordNo =D.RecordNo  where  "

            ' qry = qry.Replace("A.Description", "replace(replace(Notes, char(10), ' '), char(13), ' ') as Notes")

            Dim query As String = txt.Text
            'query = qry + query.Substring(query.IndexOf("where"))


            Dim dt As New DataTable()
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim cmd As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim sda As New MySqlDataAdapter()
            cmd.CommandType = CommandType.Text
            cmd.CommandText = query

            cmd.Connection = conn
            Try
                conn.Open()
                sda.SelectCommand = cmd
                sda.Fill(dt)

                Return dt
            Catch ex As Exception
                Throw ex
            Finally
                conn.Close()
                sda.Dispose()
                conn.Dispose()
            End Try
        Catch ex As Exception
            InsertIntoTblWebEventLog("", "GetDataSet", ex.Message.ToString, txtCreatedBy.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Function

    Protected Sub grdManualReports_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdManualReports.PageIndexChanging

        grdManualReports.PageIndex = e.NewPageIndex

        Dim qry As String = "SELECT recordno,filename,servicedate,filenamelink,filedescription FROM tblfileupload LEFT JOIN TBLSERVICErecord on tblfileupload.fileref = tblservicerecord.recordno"
        qry = qry + " where manualreport='Y' and fileref in (SELECT RefType FROM tblsalesdetail where InvoiceNumber = '" + txtInvoiceNo.Text + "');"
        SqlDSManualReports.SelectCommand = qry
        SqlDSManualReports.DataBind()
        grdManualReports.DataBind()

    End Sub

    Protected Sub btnConfirmZeroValuePrintYes_Click(sender As Object, e As EventArgs) Handles btnConfirmZeroValuePrintYes.Click
        mdlPopupPrint.Show()

    End Sub

    Protected Sub chkZeroValue_CheckedChanged(sender As Object, e As EventArgs) Handles chkZeroValue.CheckedChanged
        Dim strsql As String
        strsql = ""
        Try


            PopulateMultiPrint()


        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "chkZeroValue_CheckedChanged", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub


    Protected Sub grdManualReports_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grdManualReports.RowDataBound
        'Dim LB As LinkButton = e.Row.FindControl("lnkEmail1")
        '' LB.Attributes.Add("href", "../Test.aspx")
        'LB.Attributes.Add("target", "_blank")
    End Sub

    Protected Sub ddlContractGroupBilling_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlContractGroupBilling.SelectedIndexChanged
        UpdateTaxCodeRate()
        'If ddlContractGroupBilling.SelectedIndex = 0 Then
        '    FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
        'Else
        '    FindDefaultTaxCodeandPctFromContractGroup(ddlContractGroupBilling.Text)
        'End If
    End Sub

    Private Sub UpdateTaxCodeRate()
        Try
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd") < "2024-04-01" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST.Text = "NA"
                    txtGST1.Text = "0.00"
                    txtGSTSelected.Text = txtGST.Text
                    GoTo UpdateValues
                    'Exit Sub
                    'FindDefaultTaxCodeandPctFromPeriod(txtReceiptPeriod.Text)
                End If
            End If
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            'conn.Close()
            'Dim Query As String

            Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
            commandServiceRecordMasterSetup.CommandType = CommandType.Text
            commandServiceRecordMasterSetup.CommandText = "SELECT  DefaultTaxCode, CorporateApplyTax, ResidentialApplyTax FROM tblservicerecordmastersetup"
            commandServiceRecordMasterSetup.Connection = conn

            Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
            Dim dtServiceRecordMasterSetup As New DataTable
            dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

            txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode").ToString
            txtApplyCorporateTax.Text = dtServiceRecordMasterSetup.Rows(0)("CorporateApplyTax").ToString
            txtApplyResidentialTax.Text = dtServiceRecordMasterSetup.Rows(0)("ResidentialApplyTax").ToString


            If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
                If txtApplyCorporateTax.Text = "0" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST.Text = "NA"
                    txtGST1.Text = "0.00"
                    txtGSTSelected.Text = txtGST.Text
                    GoTo UpdateValues
                    'Exit Sub
                End If
            End If

            If txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
                If txtApplyResidentialTax.Text = "0" Then
                    txtDefaultTaxCode.Text = "NA"
                    txtGST1.Text = "0.00"

                    txtGST.Text = txtDefaultTaxCode.Text

                    txtGSTSelected.Text = txtGST.Text
                    txtTaxRatePct.Text = "0.00"
                    GoTo UpdateValues
                    'Exit Sub
                End If
            End If

            'Start : From Contract Group Master

            If ddlContractGroupBilling.SelectedIndex > 0 Then
                Dim commandContractGroup As MySqlCommand = New MySqlCommand
                commandContractGroup.CommandType = CommandType.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ddlContractGroupBilling.Text.Trim & "'"
                Else
                    commandContractGroup.CommandText = "SELECT TaxType FROM tblContractGroup where ContractGroup='" & ddlContractGroupBilling.Text.Trim & "'"
                End If

                commandContractGroup.Connection = conn

                Dim drcommandContractGroup As MySqlDataReader = commandContractGroup.ExecuteReader()
                Dim dtcommandContractGroup As New DataTable
                dtcommandContractGroup.Load(drcommandContractGroup)

                If String.IsNullOrEmpty(dtcommandContractGroup.Rows(0)("TaxType").ToString) = False Then
                    txtDefaultTaxCode.Text = dtcommandContractGroup.Rows(0)("TaxType").ToString
                    'Else
                    '    FindDefaultTaxCodeandPctFromPeriod(txtBillingPeriod.Text)
                End If
            End If

            'End:  From Contract Group Master


            Dim sql As String
            sql = ""

            txtGST.Text = txtDefaultTaxCode.Text

            txtGSTSelected.Text = txtGST.Text

            sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString
            End If

UpdateValues:

            UpdateGStCode()

            CalculateTotalPrice()

            AdjustGStAmount()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "UpdateTaxCodeRate", ex.Message.ToString, ddlContractGroupBilling.Text)

            Exit Sub
        End Try
    End Sub

    Private Function ValidateTaxCode(TaxCode As String) As Boolean
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()

        Dim Sql As String = "Select TaxRatePct from tbltaxtype where TaxType = '" & TaxCode & "'"

        Dim command1 As MySqlCommand = New MySqlCommand
        command1.CommandType = CommandType.Text
        command1.CommandText = Sql
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()

        Dim dt As New DataTable
        dt.Load(dr)

        Dim TaxPct As String = ""

        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
            TaxPct = dt.Rows(0)("TaxRatePct").ToString
        End If
        conn.Close()

        'If txtGST1.Text = TaxPct Then
        If Convert.ToDecimal(txtGST1.Text).ToString("N4") = Convert.ToDecimal(TaxPct).ToString("N4") Then
            Return True
        Else
            Return False

        End If

    End Function
    Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If String.IsNullOrEmpty(lblFileUploadInvNo.Text) Then
                lblAlert.Text = "SELECT INVOICE TO UPLOAD FILE"
                Return

            End If

            If String.IsNullOrEmpty(txtFileDescription.Text) Then
                lblAlert.Text = "ENTER FILE DESCRIPTION TO UPLOAD FILE"
                Exit Sub

            End If
            InsertIntoTblWebEventLog("INVOICE - UPLOAD1", "BTNUPLOAD", FileUpload1.HasFile.ToString, txtInvoiceNo.Text)

            If FileUpload1.HasFile Then

                Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
                Dim ext As String = Path.GetExtension(fileName)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                InsertIntoTblWebEventLog("INVOICE - UPLOAD2", "BTNUPLOAD", ext, txtInvoiceNo.Text)

                If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

                    Dim strFilePath As String = Server.MapPath("~/Uploads/Accounts/Invoice/")

                    strFilePath = strFilePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

                    If File.Exists(strFilePath + txtInvoiceNo.Text + "_" + fileName) Then

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtInvoiceNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            '  MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                            lblAlert.Text = "FILE ALREADY EXISTS"
                            conn.Close()

                            Exit Sub
                        End If
                    Else
                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtInvoiceNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text

                            command2.CommandText = "delete from fileupload where filenamelink='" + txtInvoiceNo.Text + "_" + fileName + "'"

                            command2.Connection = conn

                            command2.ExecuteNonQuery()
                        End If
                    End If
                    FileUpload1.PostedFile.SaveAs(strFilePath + txtInvoiceNo.Text + "_" + fileName)

                    'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
                    'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
                    'Dim files As List(Of ListItem) = New List(Of ListItem)

                    'For Each foundFile As FileInfo In filesInDir
                    '    Dim fullName As String = foundFile.FullName
                    '    files.Add(New ListItem(foundFile.Name))
                    'Next
                    ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                    ''For Each filePath As String In filePaths
                    ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                    ''Next

                    'ADD FILE UPLOAD INFORMATION TO DATABASE INORDER TO STORE FILES WITH DESCRIPTION - 20170930

                    InsertIntoTblWebEventLog("INVOICE - UPLOAD3", "BTNUPLOAD", ext, txtInvoiceNo.Text)


                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblfileupload(FileGroup,FileRef,FileName,FileDescription,FileType,FileNameLink,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                    qry = qry + "VALUES(@FileGroup,@FileRef,@FileName,@FileDescription,@FileType,@FileNameLink,@CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"


                    command.CommandText = qry
                    command.Parameters.Clear()

                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                        command.Parameters.AddWithValue("@FileGroup", "INVOICE")
                        command.Parameters.AddWithValue("@FileRef", txtInvoiceNo.Text)
                        command.Parameters.AddWithValue("@FileName", fileName.ToUpper)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtInvoiceNo.Text + "_" + fileName.ToUpper)

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                        command.Parameters.AddWithValue("@FileGroup", "INVOICE")
                        command.Parameters.AddWithValue("@FileRef", txtInvoiceNo.Text)
                        command.Parameters.AddWithValue("@FileName", fileName)
                        command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@FileNameLink", txtInvoiceNo.Text + "_" + fileName)

                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    conn.Close()
                    conn.Dispose()
                    command.Dispose()

                    InsertIntoTblWebEventLog("INVOICE - UPLOAD4", "BTNUPLOAD", ext, txtInvoiceNo.Text)


                    SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtInvoiceNo.Text + "'"
                    gvUpload.DataSourceID = "SqlDSUpload"
                    gvUpload.DataBind()
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtInvoiceNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", txtInvoiceNo.Text + "_" + fileName, txtInvoiceNo.Text)

                    '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtAccountID.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtAccountID.Text + "_" + fileName)

                    txtFileDescription.Text = ""

                    lblMessage.Text = "FILE UPLOADED"
                    lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
                    InsertIntoTblWebEventLog("INVOICE - UPLOAD5", "BTNUPLOAD", ext, txtInvoiceNo.Text)

                Else
                    lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
                    Return
                End If
            Else
                lblAlert.Text = "SELECT FILE TO UPLOAD"
            End If
            '  Response.Redirect(Request.Url.AbsoluteUri)
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, "Upload File", ex.Message.ToString, txtInvoiceNo.Text + "-" + FileUpload1.PostedFile.FileName)
        End Try
    End Sub

    'Protected Sub btnEditFileDesc_Click(sender As Object, e As EventArgs)
    '    Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

    '    Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '    Dim rowindex1 As Integer = xrow1.RowIndex



    '    Dim rcnofile = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
    '    txtfilercno.Text = rcnofile.ToString

    '    lblMessage.Text = ""
    '    lblAlert.Text = ""

    '    txtEditFileName.Text = GridView1.Rows(rowindex1).Cells(0).Text
    '    txtEditFileDescription.Text = GridView1.Rows(rowindex1).Cells(1).Text

    '    mdlPopupEditFileDesc.Show()


    'End Sub


    Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            filePath = Server.MapPath("~/Uploads/Accounts/Invoice/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            Response.ContentType = ContentType
            Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
            Response.WriteFile(filePath)
            Response.End()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, "DownloadFile", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub DeleteFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            txtFileLink.Text = filePath

            filePath = Server.MapPath("~/Uploads/Accounts/Invoice/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            txtDeleteUploadedFile.Text = filePath
            iframeid.Attributes.Add("src", "about:blank")

            lblQuery.Text = "Are you sure to DELETE the File? <br><br> File Name : " + txtFileLink.Text

            mdlPopupDeleteUploadedFile.Show()

            'File.Delete(filePath)
            ''  Response.Redirect(Request.Url.AbsoluteUri)
            'lblMessage.Text = "FILE DELETED"
            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, "DeleteFile", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub PreviewFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            If ConfigurationManager.AppSettings("DomainName") = "MALAYSIA PRE-PRODUCTION" Then
                Dim filepath1 As String = Server.MapPath("Uploads\Accounts\Invoice\") + txtFileLink.Text
                Dim filepath2 As String = "E:\WEBSITE FILES\MalaysiaPreproduction\Uploads\Accounts\Invoice\" + txtFileLink.Text

                File.Copy(filepath1, filepath2)

            End If



            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Dim ext As String = Path.GetExtension(filePath)
            filePath = "Uploads/Accounts/Invoice/" + filePath
            ext = ext.ToLower

            '  filePath = Server.MapPath("~/Uploads/") + filePath
            '    frmWord.Attributes["src"] = http://localhost/MyApp/resume.doc;
            ' iframeid.Attributes.Add("src", Server.HtmlDecode("D:\1_CWBInfotech\A_Sitapest\Program\Sitapest\Uploads\10000145_photo (1).JPG"))
            If ext = ".doc" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Then
                Dim strFilePath As String = Server.MapPath("Uploads\Accounts\Invoice\")
                Dim strFile As String = CType(sender, LinkButton).CommandArgument
                Dim File As String() = strFile.Split("."c)
                Dim strExtension As String = ext
                Dim strUrl As String = "http://" + Request.Url.Authority + "/WordinIFrame/ConvertedLocation/"

                Dim Filename As String = strFilePath + strFile.Split("."c)(0) & Convert.ToString(".html")

                If System.IO.File.Exists(Filename) Then
                    System.IO.File.Delete(Filename)
                End If

                If ext = ".doc" Or ext = ".docx" Then
                    ConvertHTMLFromWord(strFilePath & strFile, strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html"))

                ElseIf ext = ".xls" Or ext = ".xlsx" Then
                    ConvertHtmlFromExcel(strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
                End If

                iframeid.Attributes("src") = "Uploads/Accounts/Invoice/A" + strFile.Split("."c)(0) & Convert.ToString(".html")

            Else
                iframeid.Attributes.Add("src", filePath)

            End If



        Catch ex As Exception
            InsertIntoTblWebEventLog("CN - " + txtCreatedBy.Text, "PreviewFile", ex.Message.ToString, "")
        End Try
    End Sub

    Public Sub ConvertHTMLFromWord(Source As Object, Target As Object)
        If Word Is Nothing Then
            ' Check for the prior instance of the OfficeWord Object
            Word = New Microsoft.Office.Interop.Word.ApplicationClass()
        End If

        Try
            ' To suppress window display the following code will help
            Word.Visible = False
            Word.Application.Visible = False
            Word.WindowState = Microsoft.Office.Interop.Word.WdWindowState.wdWindowStateMinimize



            Word.Documents.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Word.WdSaveFormat.wdFormatHTML

            Word.ActiveDocument.SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS
            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Word IsNot Nothing Then
                Word.Documents.Close(Unknown, Unknown, Unknown)
                Word.Quit(Unknown, Unknown, Unknown)
            End If
        End Try
    End Sub

    Public Sub ConvertHtmlFromExcel(Source As String, Target As String)
        If Excel Is Nothing Then
            Excel = New Microsoft.Office.Interop.Excel.ApplicationClass()
        End If

        Try
            Excel.Visible = False
            Excel.Application.Visible = False
            Excel.WindowState = Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized

            Excel.Workbooks.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            Excel.Workbooks(1).SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, Unknown, Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS

            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
        Finally
            If Excel IsNot Nothing Then
                Excel.Workbooks.Close()
                Excel.Quit()
            End If
        End Try
    End Sub

    'Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '        filePath = Server.MapPath("~/Uploads/Service/") + filePath
    '        'lblMessage.Text = filePath
    '        'Return

    '        Response.ContentType = ContentType
    '        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '        Response.WriteFile(filePath)
    '        Response.End()
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("Invoice", "DownloadFile", ex.Message.ToString, txtInvoiceNo.Text)
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Sub

    Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Session.Add("FileName", filePath)
            filePath = Server.MapPath("~/Uploads/Accounts/Invoice/") + filePath
            filePath = filePath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

            'lblMessage.Text = filePath
            'Return
            Session.Add("FilePath", filePath)

            '    Response.Redirect("Email.aspx?Type=FileUpload")
            Dim Url As String = "Email.aspx?Type=FileUpload"
            Response.Write("<script language='javascript'>window.open('" & Url & "','_blank','');")
            Response.Write("</script>")
        Catch ex As Exception
            InsertIntoTblWebEventLog("Invoice", "EmailFile", ex.Message.ToString, txtInvoiceNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        ' InsertIntoTblWebEventLog("FILEDELETE1", "ConfirmDelete", "1", txtInvoiceNo.Text)

        Dim deletefilepath1 As String = Server.MapPath("~/Uploads/Accounts/Invoice/DeletedFiles/") + txtFileLink.Text
        Dim deletefilepath As String = Server.MapPath("~/Uploads/Accounts/Invoice/DeletedFiles/") + Path.GetFileNameWithoutExtension(deletefilepath1) + "_" + DateTime.Now.ToString("yyyyMMdd") + "_" + DateTime.Now.ToString("ssmmhh") + Path.GetExtension(deletefilepath1)

        deletefilepath = deletefilepath.Replace("MalaysiaPreProduction", "AnticimexMalaysia")
        deletefilepath1 = deletefilepath1.Replace("MalaysiaPreProduction", "AnticimexMalaysia")

        File.Move(txtDeleteUploadedFile.Text, deletefilepath)


        'File.Delete(txtDeleteUploadedFile.Text)
        '  Response.Redirect(Request.Url.AbsoluteUri)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblfileupload where filenamelink='" + txtFileLink.Text + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblfileupload where filenamelink='" + txtFileLink.Text + "'"

                command.CommandText = qry

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()

                '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOADDELETE", txtFileLink.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtFileLink.Text)

            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            lblMessage.Text = "FILE DELETED"

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtInvoiceNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, "FILE DELETE", ex.Message.ToString, txtInvoiceNo.Text + " " + txtFileLink.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub


    Protected Sub btnPostEInvoice_Click(sender As Object, e As EventArgs) Handles btnPostEInvoice.Click
        InsertIntoTblWebEventLog("INVOICE1 - " + txtCreatedBy.Text, txtEInvoiceStatus.Text, txtRcNo.Text, txtInvoiceNo.Text)

        If txtEInvoiceStatus.Text = "FAILURE" Then
            lblAlert.Text = "INVOICE STATUS NOT CONFIRMED. TRY AFTER SOMETIME"
            updPnlMsg.Update()
            btnPostEInvoice.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        Dim EIsLock = FindEINVPeriod(txtBillingPeriod.Text)
        InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, EIsLock, "1", txtInvoiceNo.Text)

        If String.IsNullOrEmpty(EIsLock) Or EIsLock = "" Then
            EIsLock = "N"
        End If

        '     InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, EIsLock, "2", txtInvoiceNo.Text)

        If EIsLock = "Y" Then
            '       InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, EIsLock, "3", txtInvoiceNo.Text)

            lblAlert.Text = "PERIOD IS LOCKED"
            updPnlMsg.Update()
            txtInvoiceDate.Focus()
            btnPostEInvoice.Enabled = True
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "VALID" Then

            ' txtReasonCancelEInvoice.Visible = False
            txtCancelCode.Text = ""
            lblRCNO.Text = "(" & txtRcNo.Text & ")"
            InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, txtLastPostedDate.Text, txtLastPostedBy.Text, txtInvoiceNo.Text)
            'lblRCNO.Text = txtInvoiceNo.Text
            'InsertIntoTblWebEventLog("INVOICE - " + txtCreatedBy.Text, txtEInvoiceStatus.Text, lblRcNo.Text, txtInvoiceNo.Text)
            ddlReasonforCancellation.SelectedIndex = 0
            '  ddlReasonforCancellation_SelectedIndexChanged(sender,e)
            reasonother.Visible = False
            txtReasonCancelEInvoice.Text = ""

            txtCancelInvoiceNo.Text = txtInvoiceNo.Text
            txtCancelLastPosted.Text = txtLastPostedDate.Text
            txtCancelLastPostedBy.Text = txtLastPostedBy.Text
            '    InsertIntoTblEInvoiceLock("CANCEL")
            mdlConfirmCancelEInvoice.Show()
        Else
            If String.IsNullOrEmpty(txtEInvoiceStatus.Text) = False Then
                lblAlert.Text = "INVOICE STATUS NOT CONFIRMED. TRY AFTER SOMETIME"
                updPnlMsg.Update()
                btnPostEInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If
            InsertIntoTblWebEventLog("INVOICE2 - " + txtCreatedBy.Text, txtInvoiceDate.Text, txtEInvoiceStartDate.Text, txtInvoiceNo.Text)

            If Date.Compare(CDate(txtInvoiceDate.Text), CDate(txtEInvoiceStartDate.Text)) < 0 Then
                lblAlert.Text = "ONLY INVOICES STARTING " & txtEInvoiceStartDate.Text & " CAN BE POSTED TO E-INVOICE"
                Return
            End If
            InsertIntoTblWebEventLog("INVOICE3 - " + txtCreatedBy.Text, txtInvoiceDate.Text, txtEInvoiceStartDate.Text, txtInvoiceNo.Text)

            If CheckEInvoiceLock(txtInvoiceNo.Text) = True Then
                lblAlert.Text = "E-INVOICE HAS BEEN SUBMITTED TO THE PORTAL. AWAITING SYSTEM UPDATE"
                Exit Sub
            End If

            If txtPostStatus.Text = "P" Then
            Else
                lblMessage.Text = "ONLY POSTED INVOICES CAN BE SUBMITTED"
                Return

            End If

            '  InsertIntoTblEInvoiceLock("SUBMIT")
            mdlEInvoiceConfirm.Show()
            ' UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
        End If

    End Sub

    Protected Function EInvoiceCancelValidation() As Boolean
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT SubmissionDate FROM tblsales where InvoiceNumber='" & txtInvoiceNo.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If String.IsNullOrEmpty(dt.rows(0)("SubmissionDate").tostring) = False Then
                    Dim hours As Long = DateDiff(DateInterval.Hour, dt.rows(0)("SubmissionDate"), DateTime.Now)
                    InsertIntoTblWebEventLog("INVOICE", "EInvoiceCancelValidation", hours.ToString, txtInvoiceNo.Text)
                    If hours > 71 Then
                        Return False
                    Else
                        Return True
                    End If
                End If
            End If

            dt.Dispose()
            dr.Close()
            command1.Dispose()
            conn.Close()
            conn.Dispose()
            Return True

        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE", "EInvoiceCancelValidation", ex.Message.ToString, txtInvoiceNo.Text)
            Return False
        End Try
    End Function



    Protected Sub btnConfirmCancelEInvoice_Click(sender As Object, e As EventArgs) Handles btnConfirmCancelEInvoice.Click

        If String.IsNullOrEmpty(txtReasonCancelEInvoice.Text) Then
            lblAlertCancelEInvoice.Text = "ENTER CANCELLATION REASON"
            mdlConfirmCancelEInvoice.Show()
            Return
        End If
        If String.IsNullOrEmpty(txtCancelCode.Text) Then
            lblAlertCancelEInvoice.Text = "ENTER RCNO AS CONFIRMATION CODE FOR CANCELLATION"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If

        Dim CancelValidate As Boolean = EInvoiceCancelValidation()
        If CancelValidate = False Then
            lblAlertCancelEInvoice.Text = "CANCELLATION CANNOT BE DONE AFTER 71 HOURS OF EINVOICE SUBMISSION"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If


        If txtCancelCode.Text <> txtRcNo.Text Then
            lblAlertCancelEInvoice.Text = "ENTER A VALID CONFIRMATION CODE"
            mdlConfirmCancelEInvoice.Show()

            Return
        End If
        '  InsertIntoTblWebEventLog("EInvoiceConfirmYes1", txtSubmissionDate.Text, txtCancelCode.Text, Session("UserID").ToString)


        Dim token = GetToken()
        Dim tokenno As String = ""
        tokenno = AccessToken
        InsertIntoTblWebEventLog("INVOICE2", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                Try

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes1", txtUUID.Text, tokenno, Session("UserID").ToString)

                    Dim Success As String = DocumentCancellation()

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes2", Success, txtInvoiceNo.Text, Session("UserID").ToString)
                    If Success = "SUCCESS" Then


                        UpdateEInvoiceCancellation(txtInvoiceNo.Text)
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes3", txtEInvoiceStatus.Text, txtInvoiceNo.Text, Session("UserID").ToString)

                        If txtEInvoiceStatus.Text = "APPROVED" Or txtEInvoiceStatus.Text = "VALID" Then
                            btnPostEInvoice.Text = "CANCEL E-INVOICE"
                        Else
                            btnPostEInvoice.Text = "SUBMIT E-INVOICE"

                        End If

                        Try
                            Dim conn As MySqlConnection = New MySqlConnection()
                            ' ''''''''''''''''''''''''''''''''
                            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                            conn.Open()

                            'Dim qryAR As String
                            Dim commandAR As MySqlCommand = New MySqlCommand
                            commandAR.CommandType = CommandType.Text

                            ''Start:Loop thru' Credit values

                            Dim commandValues As MySqlCommand = New MySqlCommand
                            commandValues.CommandType = CommandType.StoredProcedure
                            commandValues.CommandText = "PostInvoiceUpdateServiceRecord"

                            commandValues.Parameters.Clear()

                            commandValues.Parameters.AddWithValue("@pr_EditDelete", "Delete")
                            commandValues.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

                            commandValues.Connection = conn
                            commandValues.ExecuteScalar()

                            conn.close()
                            conn.dispose()

                            CType(Me.Master, MasterPage).UpdateInvoiceBal(txtInvoiceNo.Text)

                            updPanelInvoice.Update()
                        Catch ex As Exception
                            InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "CancellationReCalculate", ex.Message.ToString, "")
                            '   Exit Sub
                        End Try


                        SQLDSInvoice.SelectCommand = txt.Text
                        SQLDSInvoice.DataBind()

                        GridView1.DataBind()

                        '   lblMessage.Text = "Document Cancelled Successfully <br/> Status : " & Status
                        lblMessage.Text = "Invoice '" & txtInvoiceNo.Text & "' is Cancelled and Voided Successfully."

                        mdlConfirmCancelEInvoice.Hide()

                    Else
                        lblMessage.Text = "Error in submitting the document"
                        mdlConfirmCancelEInvoice.Hide()
                    End If
                Catch ex As Exception
                    lblMessage.Text = "Error in submitting the document" & ex.Message.ToString
                    mdlConfirmCancelEInvoice.Hide()
                End Try

            End If

        End Using

    End Sub

    Protected Sub GrdViewClassificationCode_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GrdViewClassificationCode.SelectedIndexChanged
        Dim xrowNumber1 = txtxRow.Text

        If txtClassificationCodeFrom.Text = "ClassificationCodeGVB" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtClassificationCodeGVB"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtClassificationDescGVB"), TextBox)

            If GrdViewClassificationCode.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewClassificationCode.SelectedRow.Cells(1).Text
            End If

            If GrdViewClassificationCode.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewClassificationCode.SelectedRow.Cells(2).Text
            End If

        ElseIf txtClassificationCodeFrom.Text = "ClassificationCodeGV" Then
            Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtClassificationCodeGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtClassificationDescGV"), TextBox)

            If GrdViewClassificationCode.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewClassificationCode.SelectedRow.Cells(1).Text
            End If

            If GrdViewClassificationCode.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewClassificationCode.SelectedRow.Cells(2).Text
            End If
            mdlClassificationCode.Show()
        End If
        mdlClassificationCode.Hide()
        'txtIsPopup.Text = "Location"
        'mdlImportServices.Show()
    End Sub

    'Protected Sub txtPopUpGL_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpGL.TextChanged
    '    Try
    '        If txtPopUpGL.Text.Trim = "" Then
    '            MessageBox.Message.Alert(Page, "Please enter Team name", "str")
    '        Else
    '            'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
    '            SqlDSPopClassificationCode.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts where  COACode like '%" + txtPopUpGL.Text.Trim.ToUpper + "%' order by COACode "

    '            SqlDSPopClassificationCode.DataBind()
    '            GrdViewClassificationCode.DataBind()
    '            'im()
    '            'imgBtnGL_ModalPopupExtender.show()
    '            'imgBtnGL_ModalPopupExtender.mdl imgBtnGL_ModalPopupExtender.mdlPopUpTeam.Show()
    '            txtIsPopup.Text = "GL"
    '            'IsPopUpTeam = "Y"
    '        End If
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("INVOICE - " + Session("UserID"), "txtPopUpGL_TextChanged", ex.Message.ToString, "")
    '    End Try
    'End Sub

    'Protected Sub btnGLB_Click(sender As Object, e As EventArgs)
    '    txtGLFrom.Text = "InvoiceB"
    '    updPnlQR.Update()
    '    Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

    '    Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '    'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

    '    Dim rowindex1 As Integer = xrow1.RowIndex
    '    txtxRow.Text = rowindex1
    '    updPanelSave.Update()

    '    imgBtnGL_ModalPopupExtender.Show()
    'End Sub

    'Protected Sub btnGL_Click(sender As Object, e As EventArgs)
    '    txtGLFrom.Text = "Invoice"
    '    updPnlQR.Update()
    '    Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

    '    Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '    'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

    '    Dim rowindex1 As Integer = xrow1.RowIndex
    '    txtxRow.Text = rowindex1
    '    updPanelSave.Update()

    '    imgBtnGL_ModalPopupExtender.Show()
    'End Sub




    '  Private AccessToken As String = "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk2RjNBNjU2OEFEQzY0MzZDNjVBNDg1MUQ5REM0NTlFQTlCM0I1NTRSUzI1NiIsIng1dCI6Imx2T21Wb3JjWkRiR1draFIyZHhGbnFtenRWUSIsInR5cCI6ImF0K2p3dCJ9.eyJpc3MiOiJodHRwczovL3ByZXByb2QtaWRlbnRpdHkubXlpbnZvaXMuaGFzaWwuZ292Lm15IiwibmJmIjoxNzM0MzM2MDMxLCJpYXQiOjE3MzQzMzYwMzEsImV4cCI6MTczNDMzOTYzMSwiYXVkIjpbIkludm9pY2luZ0FQSSIsImh0dHBzOi8vcHJlcHJvZC1pZGVudGl0eS5teWludm9pcy5oYXNpbC5nb3YubXkvcmVzb3VyY2VzIl0sInNjb3BlIjpbIkludm9pY2luZ0FQSSJdLCJjbGllbnRfaWQiOiIwZmNhYTU3Yy04YTJkLTQxOTQtODU3Mi0xOTM4YzJjY2M2MjgiLCJJc1RheFJlcHJlcyI6IjEiLCJJc0ludGVybWVkaWFyeSI6IjAiLCJJbnRlcm1lZElkIjoiMCIsIkludGVybWVkVElOIjoiIiwiSW50ZXJtZWRST0IiOiIiLCJJbnRlcm1lZEVuZm9yY2VkIjoiMiIsIm5hbWUiOiJDMTE1MzI2NTIwOTA6MGZjYWE1N2MtOGEyZC00MTk0LTg1NzItMTkzOGMyY2NjNjI4IiwiU1NJZCI6IjNlMjM3OTI2LTU4NmMtOTUzZS1iZjBiLWQ5NjI3ZmVmNjIwMCIsInByZWZlcnJlZF91c2VybmFtZSI6IkFPTCBCZXRhIiwiVGF4SWQiOiIzNDYwMSIsIlRheHBheWVyVElOIjoiQzExNTMyNjUyMDkwIiwiVGF4VGluIjoiQzExNTMyNjUyMDkwIiwiUHJvZklkIjoiNDMyMjciLCJJc1RheEFkbWluIjoiMCIsIklzU3lzdGVtIjoiMSJ9.VGRpp7B8A1X9yT4E32sj-1eedQhqTuciyvOf1XZRuCx9_6qjw6nwDyQymLFwSxOwnEaGJdNNzLDZrleV9zcvdGX50xMzytLP8nZpnQJAqPm5uU-HcNpEkI1lKaUby-zv01QZ3tEcUqS5kKY_b6iyb_ijfw414btJQN4WsaSWcP77dymma7EQvMYkcwRnEW8iGq8GyS8148ed_QhT8dcBR_ghM8JfnOz6evNAbaWDZWN-xyspAfeOJzVznmgo5HrBhY6MxH8ObZDlkNsyXl4XXUs6H3izX8AzGRTxhvH_68hQ6Ho9UDp_Au8Y6hRv4F1baOHpnuGebouXlv54zM-B1A"
    Private AccessToken As String '= '"eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk2RjNBNjU2OEFEQzY0MzZDNjVBNDg1MUQ5REM0NTlFQTlCM0I1NTRSUzI1NiIsIng1dCI6Imx2T21Wb3JjWkRiR1draFIyZHhGbnFtenRWUSIsInR5cCI6ImF0K2p3dCJ9.eyJpc3MiOiJodHRwczovL3ByZXByb2QtaWRlbnRpdHkubXlpbnZvaXMuaGFzaWwuZ292Lm15IiwibmJmIjoxNzM1Mjk5OTM4LCJpYXQiOjE3MzUyOTk5MzgsImV4cCI6MTczNTMwMzUzOCwiYXVkIjpbIkludm9pY2luZ0FQSSIsImh0dHBzOi8vcHJlcHJvZC1pZGVudGl0eS5teWludm9pcy5oYXNpbC5nb3YubXkvcmVzb3VyY2VzIl0sInNjb3BlIjpbIkludm9pY2luZ0FQSSJdLCJjbGllbnRfaWQiOiIwZmNhYTU3Yy04YTJkLTQxOTQtODU3Mi0xOTM4YzJjY2M2MjgiLCJJc1RheFJlcHJlcyI6IjEiLCJJc0ludGVybWVkaWFyeSI6IjAiLCJJbnRlcm1lZElkIjoiMCIsIkludGVybWVkVElOIjoiIiwiSW50ZXJtZWRST0IiOiIiLCJJbnRlcm1lZEVuZm9yY2VkIjoiMiIsIm5hbWUiOiJDMTE1MzI2NTIwOTA6MGZjYWE1N2MtOGEyZC00MTk0LTg1NzItMTkzOGMyY2NjNjI4IiwiU1NJZCI6IjZkMjNiOGNhLTFiODgtZmExNy1kZTU2LTZlYTJiYTFmZmIwMCIsInByZWZlcnJlZF91c2VybmFtZSI6IkFPTCBCZXRhIiwiVGF4SWQiOiIzNDYwMSIsIlRheHBheWVyVElOIjoiQzExNTMyNjUyMDkwIiwiVGF4VGluIjoiQzExNTMyNjUyMDkwIiwiUHJvZklkIjoiNDMyMjciLCJJc1RheEFkbWluIjoiMCIsIklzU3lzdGVtIjoiMSJ9.nLz_PadiyijqN9KW4qyybga4YRZDAwXiJhodK8rDiHPg1AvzwO17zw9Ularr69I0cKmUk5AVDncbp9VbilwZAXRgy34rKyvvg09RZH73Y9k5NfrC7N6ztk91eXepO7duDiPdAEIWIAjHGBa282rt5R3Do-nYiiskkfqoLZPjLcAuEBUysOSuj0MuzUGbzfqfF0kiJX6ORnTTjB8EpcFtl5r9Za0MPKR27XRCaHlPCwdfi_akQ3YSTC7yYjEQ14UFuWivDLDzBIJLANAvABKM2ijhNijJl2aatxCyz5kMg139EPwokr1rr2ZONneerrBXVy5yQ4si9YW9ZSj-ygRCSQ"

    Private schedule As System.Threading.Timer
    Private apitoken As String = ""
    Private token As AuthenticationResult


    'Private Function Get_API_Token() As Task
    '    Dim clientId As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientId")
    '    Dim clientSecret As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientSecret")
    '    Dim grant_type As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicegrant_type")
    '    Dim scope As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicescope")
    '    Dim tokenURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceToken")

    '    Return Task.Run(Async Function()

    '                        Dim token As String = ""
    '                        Using client = New HttpClient()
    '                            Try

    '                                Dim data = {
    '                                         New KeyValuePair(Of String, String)("client_id", clientId),
    '                                         New KeyValuePair(Of String, String)("client_secret", clientSecret),
    '                                         New KeyValuePair(Of String, String)("grant_type", grant_type),
    '                                         New KeyValuePair(Of String, String)("scope", scope)
    '                                     }

    '                                Dim apiGetToken As String = tokenURL
    '                                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '                                Dim response As HttpResponseMessage = client.PostAsync(apiGetToken, New FormUrlEncodedContent(data)).Result
    '                                Dim responseString = response.Content.ReadAsStringAsync().Result
    '                                If response.IsSuccessStatusCode Then
    '                                    Dim jObject = Newtonsoft.Json.Linq.JObject.Parse(responseString)
    '                                    AccessToken = jObject("access_token").ToString()
    '                                End If
    '                            Catch ex As Exception

    '                                Dim test As String = ""

    '                            End Try

    '                        End Using
    '                    End Function)

    'End Function

    'Private Async Function GetToken() As Task
    '    Get_API_Token().Wait()
    'End Function

    Protected Sub EInvoiceConfirmYes_Click(sender As Object, e As EventArgs) Handles EInvoiceConfirmYes.Click
      
        InsertIntoTblEInvoiceLock("OPEN")
        
        Dim token = GetToken()
        Dim tokenno As String = ""
        tokenno = AccessToken
        InsertIntoTblWebEventLog("INVOICE2", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                '  Try

                'Dim Name = txtAccountName.Text ' "C11532652090"
                'Dim IDType = "BRN"
                'Dim IDvalue = "200701041254"  '"199801017599"


                'Dim TinValiDate = SearchTin(TinNumber, IDType, IDvalue)

                '       InsertIntoTblWebEventLog("EInvoiceConfirmYes", TinNumber.ToString, TinValiDate.ToString, Session("UserID").ToString)

                Dim TinNumber As String = ""
                Dim IDType As String = ""
                Dim IDvalue As String = ""
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim CustTinNo As String = ""

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()
                Dim dt As New datatable
                InsertIntoTblWebEventLog("TIN", txtAccountID.Text, txtAccountIDBilling.Text, Session("UserID").ToString)

                dt = RetrieveCustomerTable(conn)
                InsertIntoTblWebEventLog("TIN", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                If dt.rows.count > 0 Then
                    InsertIntoTblWebEventLog("TIN1", txtTIN.Text, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)
                    CustTinNo = dt.rows(0)("TaxIdentificationNo").ToString

                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then

                        InsertIntoTblWebEventLog("TIN11", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)
                        If String.IsNullOrEmpty(dt.rows(0)("TaxIdentificationNo").ToString) = False Then
                            '   TinNumber = dt.rows(0)("TaxIdentificationNo")
                            TinNumber = txtTIN.Text
                            IDType = "BRN"
                            IDvalue = dt.rows(0)("RocNos")
                            InsertIntoTblWebEventLog("TIN2", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                        End If

                    ElseIf txtAccountType.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then

                        'TinNumber = dt.rows(0)("TaxIdentificationNo")
                        TinNumber = txtTIN.Text
                        IDType = "NRIC"
                        IDvalue = "NA"
                    End If
                End If
                InsertIntoTblWebEventLog("TIN3", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                If String.IsNullOrEmpty(txtTIN.Text) Then
                    InsertIntoTblWebEventLog("TIN Blank", TinNumber.ToString, txtTIN.Text, Session("UserID").ToString)

                    txtTIN.Text = TinNumber

                End If
                conn.Close()
                InsertIntoTblWebEventLog("TIN4", dt.Rows.Count.ToString, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                'Dim TinNumber = "EI00000000010"
                'Dim IDType = "NRIC"
                'Dim IDvalue = "NA"

                Dim CustPostal As String = dt.Rows(0)("AddPostal").ToString
                InsertIntoTblWebEventLog("TIN5", CustPostal, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                If String.IsNullOrEmpty(CustPostal) = False Then
                    InsertIntoTblWebEventLog("TIN6", CustPostal, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                    If CustPostal.Length > 5 Then
                        InsertIntoTblWebEventLog("TIN7", CustPostal, ddlContactType.SelectedIndex.ToString, Session("UserID").ToString)

                        lblMessage.Text = "Postal Code must be of maximum 5 characters"
                        '  Return
                        UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                    End If
                Else
                    lblMessage.Text = "Postal Code cannot be blank"
                    UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                End If

                If String.IsNullOrEmpty(TinNumber) Then
                    lblMessage.Text = "Enter Tin Number <br/>"
                    UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                Else
                    Dim TinValiDate = ValiDateTin(TinNumber, IDType, IDvalue)

                    InsertIntoTblWebEventLog("EInvoiceConfirmYes", TinNumber.ToString, TinValiDate.ToString, Session("UserID").ToString)
                    'Dim tin = SearchTin("", "BRN", "199901007530")
                    'InsertIntoTblWebEventLog("SearchTIN", TinNumber.ToString, tin.ToString, Session("UserID").ToString)
                    If TinValiDate = False Then
                        TinNumber = CustTinNo
                        TinValiDate = ValiDateTin(TinNumber, IDType, IDvalue)

                        InsertIntoTblWebEventLog("EInvoiceConfirmYesNew", TinNumber.ToString, TinValiDate.ToString, Session("UserID").ToString)

                    End If
                    If TinValiDate = True Then
                        lblMessage.Text = "Tin Number valid <br/>"
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes0", lblMessage.Text, TinValiDate.ToString, Session("UserID").ToString)


                        Dim RESULT = submitDocument_without_Certificate(tokenno, TinNumber)
                        InsertIntoTblWebEventLog("EInvoiceConfirmYes1", RESULT.ToString, "", Session("UserID").ToString)
                        If Not String.IsNullOrEmpty(RESULT) Then
                            If RESULT = "error message" Then
                                lblMessage.Text = "Document Submission Failed"
                                UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                            ElseIf RESULT = "Classification Code Error Message" Then
                                lblMessage.Text = "UPDATE CLASSIFICATION CODE IN AR MODULE SETUP"
                                UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                            Else
                                InsertIntoTblWebEventLog("EInvoiceConfirmYes1", RESULT.ToString, TinValiDate.ToString, Session("UserID").ToString)
                                'lblMessage.Text = "Document Submitted Successfully <br/>"
                                'Return

                                'mdlEInvoiceConfirm.Hide()
                                'mdlpopupmsg.Show()
                                'Thread.Sleep(30000)

                                Dim submissionid = GetSubmission(tokenno)

                                If submissionid = "ERROR" Then
                                    txtEInvoiceStatus.Text = "REJECTED"
                                    txtSubmissionID.Text = ""
                                    txtUUID.Text = ""
                                    txtLongID.Text = ""
                                    lblMessage.Text = "Document Submission Failed : Portal Error"
                                    lblMessage.Text = lblMessage.Text + "<br/>" + txtRejectedDocError.Text
                                    UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                                    Return
                                Else
                                    InsertIntoTblWebEventLog("EInvoiceStatus1", txtUUID.Text, txtEInvoiceStatus.Text, Session("UserID").ToString)
                                    UpdateEInvoiceLockUUID(txtInvoiceNo.Text)
                                    Thread.Sleep(10000)
                                    '  If txtEInvoiceStatus.Text <> "VALID" Then
                                    txtEInvoiceStatus.Text = GetDocument(tokenno, txtUUID.Text)

                                    'End If
                                    InsertIntoTblWebEventLog("EInvoiceStatus2", txtUUID.Text, txtEInvoiceStatus.Text, Session("UserID").ToString)

                                End If

                                InsertIntoTblWebEventLog("EInvoiceConfirmYes2", submissionid.ToString, txtInvoiceNo.Text, Session("UserID").ToString)

                                UpdateEInvoiceSubmission(txtInvoiceNo.Text)

                                InsertIntoTblWebEventLog("EInvoiceConfirmYes3", txtSubmissionDate.Text, txtInvoiceNo.Text, Session("UserID").ToString)

                                InsertIntoTblEInvoiceEventLog("SUBMISSION", txtUUID.Text)


                                '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "EINVOICE", txtInvoiceNo.Text, "", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                                '  CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "EINVOICE", txtInvoiceNo.Text, "SUBMISSION", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtSubmissionID.Text, "", txtRcno.Text)
                                '  CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "DELETE", Convert.ToDateTime(txt), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                                SQLDSInvoice.SelectCommand = txt.Text
                                SQLDSInvoice.DataBind()

                                GridView1.DataBind()

                                'Dim result = submitDocument()
                                ' lblMessage.Text = "Document Submitted Successfully <br/> Response From API: </br> " + RESULT + "<br/> Submission ID : " & submissionid
                                lblMessage.Text = "Document Submitted Successfully <br/> Submission ID : " & submissionid
                                UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                                btnPostEInvoice.Text = "CANCEL E-INVOICE"

                                btnPostEInvoice.Enabled = True
                                btnPostEInvoice.Forecolor = System.Drawing.Color.Black
                            End If

                        End If

                    Else
                        lblMessage.Text = "Tin Number Not valid <br/>"
                        UpdateEInvoiceLock(txtInvoiceNo.Text, txtEInvoiceStatus.Text)
                        'TinNumber = CustTinNo
                        'GoTo gotoTIN
                    End If

                    'Catch ex As Exception
                    '    lblMessage.Text = "Error in submitting the document" & ex.Message.ToString

                    'End Try

                End If

            End If

        End Using


    End Sub

    'Protected Function ValiDateTin(TinNumber As String, idType As String, idvalue As String) As Boolean

    '    Dim tokenno As String = ""
    '    tokenno = AccessToken
    '    InsertIntoTblWebEventLog("INVOICE2", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

    '    Dim values As String = TinNumber + "?idType=" + idType + "&idValue= " + idvalue
    '    InsertIntoTblWebEventLog("INVOICE_TIN1", values, tokenno, Session("UserID").ToString)

    '    Dim apivalidateTinURL = ConfigurationManager.AppSettings.[Get]("apivalidateTin")
    '    InsertIntoTblWebEventLog("INVOICE_TIN2", apivalidateTinURL.ToString, tokenno, Session("UserID").ToString)

    '    Using client = New HttpClient()
    '        If Not String.IsNullOrWhiteSpace(tokenno) Then

    '            client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
    '            Dim apivalidateTinurlPath As String = apivalidateTinURL & "/" & values
    '            InsertIntoTblWebEventLog("INVOICE_TIN3", apivalidateTinurlPath, tokenno, Session("UserID").ToString)

    '            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '            Dim response As HttpResponseMessage = client.GetAsync(apivalidateTinurlPath).Result
    '            InsertIntoTblWebEventLog("INVOICE_TIN", response.IsSuccessStatusCode.ToString, tokenno, Session("UserID").ToString)

    '            Dim responseString = response.Content.ReadAsStringAsync().Result
    '            InsertIntoTblWebEventLog("INVOICE_TIN", response.IsSuccessStatusCode.ToString, responseString.ToString, Session("UserID").ToString)

    '            If response.IsSuccessStatusCode Then
    '                Return True
    '            End If

    '        End If
    '    End Using

    '    Return False

    'End Function


    Private Function Get_API_Token() As Task
        Dim clientId As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientId")
        Dim clientSecret As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceclientSecret")
        Dim grant_type As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicegrant_type")
        Dim scope As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicescope")
        Dim tokenURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoiceToken")

        Return Task.Run(Async Function()

                            Dim token As String = ""
                            Using client = New HttpClient()
                                Try

                                    Dim data = {
                                             New KeyValuePair(Of String, String)("client_id", clientId),
                                             New KeyValuePair(Of String, String)("client_secret", clientSecret),
                                             New KeyValuePair(Of String, String)("grant_type", grant_type),
                                             New KeyValuePair(Of String, String)("scope", scope)
                                         }

                                    Dim apiGetToken As String = tokenURL
                                    System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                                    Dim response As HttpResponseMessage = client.PostAsync(apiGetToken, New FormUrlEncodedContent(data)).Result
                                    Dim responseString = response.Content.ReadAsStringAsync().Result

                                    InsertIntoTblWebEventLog("GETTOKEN", tokenurl, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                                    If response.IsSuccessStatusCode Then
                                        Dim jObject = Newtonsoft.Json.Linq.JObject.Parse(responseString)
                                        AccessToken = jObject("access_token").ToString()
                                    End If
                                Catch ex As Exception

                                    Dim test As String = ""

                                End Try

                            End Using
                        End Function)

    End Function

    Private Async Function GetToken() As Task
        Get_API_Token().Wait()
    End Function
    'Protected Sub btn_start_einvoice_Click(sender As Object, e As EventArgs)

    '    Dim token = GetToken()
    '    Dim tokenno As String = ""
    '    tokenno = AccessToken

    '    Using client = New HttpClient()

    '        If Not String.IsNullOrWhiteSpace(tokenno) Then
    '            Try
    '                Dim TinNumber = "C11532652090"
    '                Dim IDType = "BRN"
    '                Dim IDvalue = "199801017599"

    '                Dim TinValiDate = ValiDateTin(TinNumber, IDType, IDvalue)

    '                If TinValiDate = True Then
    '                    Dim result = submitDocument()
    '                    lblResult.Text = "Document Submitted Successfully <br/> Response From API: </br> " + result
    '                Else
    '                    lblResult.Text = "Tin Number Not valid <br/>"
    '                End If

    '            Catch ex As Exception
    '                lblResult.Text = "Error in submitting the document"
    '            End Try

    '        End If

    '    End Using


    '    Dim assignvaluestest = ""
    'End Sub

    Private Sub UpdateEInvoiceUOMCode(InvoiceNumber As String)
        ' Try
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()


        '''''''''''''''


    End Sub


    Private Sub UpdateEInvoiceCancellation(InvoiceNumber As String)
        ' Try
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()


        '''''''''''''''

        Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
        commandUpdateInvoice.CommandType = CommandType.Text
        Dim sqlUpdateInvoice As String = "Update tblsales set EInvoiceStatus=@EInvoiceStatus,CancellationDate=@CancellationDate,CancellationReason=@CancellationReason,PostStatus='V', ReasonChSt =@CancellationReason where InvoiceNumber=@invoicenumber"
        InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation1", sqlUpdateInvoice, txtCreatedBy.Text)

        commandUpdateInvoice.CommandText = sqlUpdateInvoice
        commandUpdateInvoice.Parameters.Clear()
        commandUpdateInvoice.Parameters.AddwithValue("@EInvoiceStatus", "CANCELLED")
        InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation2", txtEInvoiceStatus.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Parameters.AddwithValue("@invoiceNumber", InvoiceNumber)
        InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation3", InvoiceNumber, txtCreatedBy.Text)

        '    commandUpdateInvoice.Parameters.AddwithValue("@CancellationDate", Convert.ToDateTime((txtCancellationDate.Text).ToString("yyyy-MM-dd")))
        commandUpdateInvoice.Parameters.AddwithValue("@CancellationDate", Convert.ToDateTime(txtCancellationDate.Text))

        InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation4", txtCancellationDate.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Parameters.AddwithValue("@CancellationReason", txtReasonCancelEInvoice.Text)

        InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation5", txtReasonCancelEInvoice.Text, txtCreatedBy.Text)

        commandUpdateInvoice.Connection = conn
        commandUpdateInvoice.ExecuteNonQuery()
        commandUpdateInvoice.Dispose()
        conn.Close()
        conn.Dispose()
        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICECancellation", ex.Message.ToString, txtCreatedBy.Text)

        'End Try
    End Sub


    Private Sub UpdateEInvoiceSubmission(InvoiceNumber As String)
        Dim count As Int16 = 0
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''
Submission:
            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set EI='Y',EInvoiceStatus=@EInvoiceStatus,UUID=@UUID,SubmissionID=@SubmissionID,SubmissionDate=@SubmissionDate,SubmissionBy=@SubmissionBy,LongID=@LongID where InvoiceNumber=@invoicenumber"
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION1", sqlUpdateInvoice, txtCreatedBy.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddwithValue("@EInvoiceStatus", txtEInvoiceStatus.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@UUID", txtUUID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@SubmissionID", txtSubmissionID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@LongID", txtLongID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            commandUpdateInvoice.Parameters.AddwithValue("@SubmissionDate", Convert.ToDateTime(txtSubmissionDate.Text))
            commandUpdateInvoice.Parameters.AddwithValue("@SubmissionBy", txtCreatedBy.Text)
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION2", InvoiceNumber, txtCreatedBy.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            count = count + 1

            If count <= 2 Then
                InsertIntoTblWebEventLog("INVOICEERR-" + count.ToString, "UPDATEINVOICESUBMISSION", ex.Message.ToString, txtCreatedBy.Text)

                GoTo Submission

            End If

            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION", ex.Message.ToString, txtCreatedBy.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Private Sub UpdateEInvoiceLongID(InvoiceNumber As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set LongID=@LongID where InvoiceNumber=@invoicenumber"
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION1", sqlUpdateInvoice, txtCreatedBy.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddwithValue("@LongID", txtLongID.Text)
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION2", InvoiceNumber, txtCreatedBy.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICESUBMISSION", ex.Message.ToString, txtCreatedBy.Text)

        End Try
    End Sub


    Private Sub UpdateEInvoiceEI(InvoiceNumber As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblsales set EI='Y' where InvoiceNumber=@invoicenumber"
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICEEI1", sqlUpdateInvoice, txtCreatedBy.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Parameters.AddwithValue("@InvoiceNumber", InvoiceNumber)
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICEEI2", InvoiceNumber, txtCreatedBy.Text)

            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()
            txtEI.Text = "Y"
            commandUpdateInvoice.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("INVOICE", "UPDATEINVOICEEI", ex.Message.ToString, txtCreatedBy.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Function submitDocument_without_Certificate(tokenno As String, tinno As String)
        InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)

        Dim serializer As JavaScriptSerializer = New JavaScriptSerializer()
        'Dim tokenno As String = ""
        'tokenno = AccessToken
        InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)

        InsertIntoTblWebEventLog("SubmitDoc1", "", "", Session("UserID").ToString)

        Dim DocumentPayload As String = ""
        Dim DocumentHashcode As String = ""
        Dim DocumentFormat As String = ""
        Dim DocumentPayloadbase64 As String = ""
        Dim SubmitDocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")
        Dim invoiceNumber = txtInvoiceNo.Text '"CI6210502938017"
        '   Dim invoiceNumber = "CI6210502938017"
        InsertIntoTblWebEventLog("SubmitDoc2", SubmitDocumentURL, tokenno, Session("UserID").ToString)
        Try
            Using client = New HttpClient()
                InsertIntoTblWebEventLog("SubmitDoc3", invoiceNumber, tokenno, Session("UserID").ToString)

                If Not String.IsNullOrWhiteSpace(tokenno) Then
                    InsertIntoTblWebEventLog("SubmitDoc4", invoiceNumber, tokenno, Session("UserID").ToString)

                    client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)

                    InsertIntoTblWebEventLog("SubmitDoc5", invoiceNumber, tokenno, Session("UserID").ToString)

                    DocumentPayload = AssignJsonvalue_Without_certificate(invoiceNumber, tinno)

                 
                    If Not String.IsNullOrEmpty(DocumentPayload) Then
                        InsertIntoTblWebEventLog("SubmitDoc6", invoiceNumber, DocumentPayload.Length.ToString, Session("UserID").ToString)

                        If DocumentPayload = "CLASSIFICATION CODE ERROR" Then
                            Dim result1 = "Classification Code Error Message"
                            Return result1
                        End If
                        InsertIntoTblWebEventLog("SubmitDoc7", invoiceNumber, tokenno, Session("UserID").ToString)

                        DocumentHashcode = GetSHA256Hash(DocumentPayload)
                        DocumentFormat = "JSON"
                        Dim byt As Byte() = System.Text.Encoding.UTF8.GetBytes(DocumentPayload)
                        DocumentPayloadbase64 = Convert.ToBase64String(byt)

                        InsertIntoTblWebEventLog("SubmitDoc8", invoiceNumber, DocumentHashcode, Session("UserID").ToString)


                        Dim jsonData As New Dictionary(Of String, Object) From {
                                {"documents", New List(Of Object) From {
                                    New Dictionary(Of String, Object) From {
                                        {"format", DocumentFormat},
                                        {"documentHash", DocumentHashcode},
                                        {"codeNumber", invoiceNumber},
                                        {"document", DocumentPayloadbase64}
                                    }
                                }}
                            }

                        InsertIntoTblWebEventLog("SubmitDoc9", invoiceNumber, tokenno, Session("UserID").ToString)


                        Dim jsonContent As String = Newtonsoft.Json.JsonConvert.SerializeObject(jsonData)

                        Dim content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
                        Dim filepath As String = Server.MapPath("~/PDFs/" + Convert.ToString(Session("InvoiceNo") + ".txt"))

                        ' File.WriteAllText(filePath, jsonContent)

                        InsertIntoTblWebEventLog("SubmitDoc10", invoiceNumber, content.ToString, Session("UserID").ToString)
                        InsertIntoTblWebEventLog("SubmitDoc10A", invoiceNumber, jsonContent, Session("UserID").ToString)

                        Try
                            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                            Dim response As HttpResponseMessage = client.PostAsync(SubmitDocumentURL, content).Result
                            Dim responseString = response.Content.ReadAsStringAsync().Result
                            InsertIntoTblWebEventLog("SubmitDoc11", invoiceNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)
                            '     InsertIntoTblWebEventLog("SubmitDoc11", invoiceNumber, responseString.ToString, Session("UserID").ToString)


                            If response.IsSuccessStatusCode Then
                                InsertIntoTblWebEventLog("SubmitDoc111", invoiceNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)
                                Dim SubmissionResult As New SubmissionResult
                                Thread.Sleep(3000)
                                Try
                                    SubmissionResult = JsonConvert.DeserializeObject(Of SubmissionResult)(responseString)
                                    InsertIntoTblWebEventLog("SubmitDoc112", invoiceNumber, SubmissionResult.submissionUid.Length.ToString, Session("UserID").ToString)

                                    txtSubmissionID.Text = SubmissionResult.submissionUid.ToString


                                Catch ex As Exception
                                    InsertIntoTblWebEventLog("SubmitDocError", invoiceNumber, ex.Message.ToString, Session("UserID").ToString)

                                End Try


                                InsertIntoTblWebEventLog("SubmitDoc12", invoiceNumber, txtSubmissionID.Text, responseString.ToString.Length.ToString)

                                If SubmissionResult.acceptedDocuments.Count() > 0 Then
                                    For Each Item In SubmissionResult.acceptedDocuments
                                        txtUUID.Text = Item.uuid

                                        Exit For
                                    Next
                                End If

                                txtRejectedDocError.Text = ""

                                Dim error1 As String = ""
                                Dim error2 As Int32
                                Dim error3 As Int32
                                If SubmissionResult.rejectedDocuments.Count() > 0 Then
                                    ' InsertIntoTblWebEventLog("SubmitDoc120", invoiceNumber, SubmissionResult.rejectedDocuments.Count.ToString, responseString.ToString.Length.ToString)

                                    For Each Item In SubmissionResult.rejectedDocuments
                                        '    InsertIntoTblWebEventLog("SubmitDoc12", invoiceNumber, txtSubmissionID.Text, responseString.ToString.Length.ToString)

                                        '  responseString.ToString.Split(
                                        '  error1 = responseString.ToString.IndexOf(responseString.ToString.Substring("""propertyPath"":null,""details"":[{""")).ToString
                                        error1 = responseString.ToString.Substring(responseString.ToString.IndexOf("""propertyPath"":null,""details"":[{""") + 57).ToString
                                        InsertIntoTblWebEventLog("SubmitDocR10", invoiceNumber, error1, Item.invoicecodenumber)

                                        error2 = error1.ToString.IndexOf(""",""")
                                        InsertIntoTblWebEventLog("SubmitDocR11", invoiceNumber, error2.ToString, Item.invoicecodenumber)

                                        error3 = responseString.ToString.IndexOf("""propertyPath"":null,""details"":[{""") + 57

                                        InsertIntoTblWebEventLog("SubmitDocR12", invoiceNumber, error3.ToString, Item.invoicecodenumber)

                                        error1 = responseString.ToString.Substring(error3, error2 + 1).ToString

                                        InsertIntoTblWebEventLog("SubmitDocR13", invoiceNumber, error1, Item.invoicecodenumber)

                                        txtRejectedDocError.Text = error1

                                        Exit For
                                    Next
                                End If
                                ' ''Dim AcceptedDocs As AcceptedDocuments = JsonConvert.DeserializeObject(Of AcceptedDocuments)(responseString)
                                ''txtUUID.text = SubmissionResult.acceptedDocuments[0].submissionUid.acceptedDocuments. .UUID.ToString 
                                ' ''txtUUID.Text = AcceptedDocs.uuid.ToString
                                ' ''InsertIntoTblWebEventLog("SubmitDoc13", invoiceNumber, txtUUID.Text, Session("UserID").ToString)

                                txtEInvoiceStatus.Text = "VALID"
                                Return responseString
                            Else
                                txtEInvoiceStatus.Text = "REJECTED"
                                txtSubmissionID.Text = ""
                                txtUUID.Text = ""
                                txtLongID.Text = ""
                                Return responseString
                            End If

                        Catch ex As HttpRequestException

                            Dim result1 = "error message -" + ex.Message
                            Return result1
                        End Try
                    Else
                        Dim result1 = "error message"
                        Return result1
                    End If
                End If
            End Using
        Catch ex As HttpRequestException

            Dim result1 = "error message -" + ex.Message
            Return result1
        End Try
        Return ""
    End Function

    Private Function submitDocument()
        InsertIntoTblWebEventLog("SubmitDoc0", "", "", Session("UserID").ToString)


        Dim serializer As JavaScriptSerializer = New JavaScriptSerializer()
        Dim tokenno As String = ""
        tokenno = AccessToken
        Dim DocumentPayload As String = ""
        Dim DocumentHashcode As String = ""
        Dim DocumentFormat As String = ""
        Dim DocumentPayloadbase64 As String = ""
        Dim SumbitDocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")
        'Dim certificate_path = Server.MapPath("/Soft_Certificate/CERT_18855227.p12")
        'Dim certificate_pin = "VYcaW9PoWI"
        'Dim certificate As X509Certificate2 = New X509Certificate2(certificate_path, certificate_pin)
        'Dim privateKey As RSA = certificate.GetRSAPrivateKey()
        Dim signature As Byte()
        Dim signatureBase64 As String = ""
        'DocDigest
        Dim docdigest As String
        Dim hash As Byte()

        Dim tinno As String = ""
        Dim invoiceNumber '= "APMSBINV-24-0009"
        InsertIntoTblWebEventLog("SubmitDoc1", invoiceNumber, "", Session("UserID").ToString)

        DocumentPayload = AssignJsonvalue_Without_certificate(invoiceNumber, tinno)
        InsertIntoTblWebEventLog("SubmitDoc2", invoiceNumber, DocumentPayload, Session("UserID").ToString)

        Dim documentHashcode1 As String = GetSHA256Hash(DocumentPayload)

        'If Not certificate.HasPrivateKey Then
        '    Return "Certificate does not have a private key."
        'End If
        InsertIntoTblWebEventLog("SubmitDoc3", invoiceNumber, documentHashcode1.ToString, Session("UserID").ToString)


        Using sha256 As SHA256 = sha256.Create()
            hash = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(DocumentPayload))
            docdigest = Convert.ToBase64String(hash)
        End Using

        ' Load the certificate from the file store Or the key store as required
        'Dim privateKeyProvider As RSACryptoServiceProvider = privateKey
        'Dim sign = privateKeyProvider.SignHash(hash, HashAlgorithmName.SHA256, RSASignaturePadding.Pkcs1)
        'Dim signature = Convert.ToBase64String(sign)

        'Step 4: Calculate the certificate digest
        ' Load the certificate from the file store Or the key store as required
        'Dim CertDigest As String
        'Using sha256 As SHA256 = sha256.Create()
        '    Dim certash = sha256.ComputeHash(certificate.RawData)
        '    CertDigest = Convert.ToBase64String(certash)
        'End Using
        InsertIntoTblWebEventLog("SubmitDoc4", invoiceNumber, documentHashcode1.ToString, Session("UserID").ToString)

        'Using rsa As RSA = privateKey
        '    Using sha256 As SHA256 = sha256.Create()
        '        Dim hash1 As Byte() = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(documentHashcode1))
        '        Dim rsaFormatter As RSAPKCS1SignatureFormatter = New RSAPKCS1SignatureFormatter(rsa)
        '        rsaFormatter.SetHashAlgorithm("SHA256")

        '        signature = rsaFormatter.CreateSignature(hash1)
        '        signatureBase64 = Convert.ToBase64String(signature)
        '    End Using
        'End Using


        '  Dim UBLExtensions = assignSignedProperties(CertDigest, certificate, docdigest, signatureBase64)

        Dim jsonresult As String
        ' Try
        Dim jsonObj As InvoiceWrapper = JsonConvert.DeserializeObject(Of InvoiceWrapper)(DocumentPayload)
        InsertIntoTblWebEventLog("SubmitDoc501", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        Dim jsonObj1 As List(Of Invoice) = jsonObj.Invoice
        InsertIntoTblWebEventLog("SubmitDoc502", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        For Each invoice As Invoice In jsonObj1

            InsertIntoTblWebEventLog("SubmitDoc503", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

            invoice.UBLExtensions = UBLExtensions
            InsertIntoTblWebEventLog("SubmitDoc504", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

            ' Initialize the Signature list
            Dim SignatureList As New List(Of Signature)

            ' Create a Signature object
            Dim signatureObj As New Signature()
            InsertIntoTblWebEventLog("SubmitDoc505", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

            ' Set the ID list
            signatureObj.ID = New List(Of ID)
            Dim idObj As New ID
            idObj.Value = "urn:oasis:names:specification:ubl:signature:Invoice"
            signatureObj.ID.Add(idObj)
            InsertIntoTblWebEventLog("SubmitDoc506", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

            ' Set the SignatureMethod list
            signatureObj.SignatureMethod = New List(Of SignatureMethod)
            Dim signatureMethodObj As New SignatureMethod
            signatureMethodObj.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
            signatureObj.SignatureMethod.Add(signatureMethodObj)

            ' Add the fully configured Signature object to the Signature list
            SignatureList.Add(signatureObj)

            invoice.Signature = SignatureList
            InsertIntoTblWebEventLog("SubmitDoc507", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        Next

        InsertIntoTblWebEventLog("SubmitDoc508", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        Dim settings As New JsonSerializerSettings With {
        .NullValueHandling = NullValueHandling.Ignore
        }
        InsertIntoTblWebEventLog("SubmitDoc509", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        jsonresult = JsonConvert.SerializeObject(jsonObj, settings)
        InsertIntoTblWebEventLog("SubmitDoc510", invoiceNumber, jsonresult.ToString, Session("UserID").ToString)

        DocumentHashcode = GetSHA256Hash(jsonresult)

        'Catch ex As Exception
        '    InsertIntoTblWebEventLog("SubmitDoc50", invoiceNumber, ex.Message.ToString, Session("UserID").ToString)

        'End Try
        InsertIntoTblWebEventLog("SubmitDoc5", invoiceNumber, DocumentHashcode.ToString, Session("UserID").ToString)

        Try
            Using client = New HttpClient()
                InsertIntoTblWebEventLog("SubmitDoc6", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

                If Not String.IsNullOrWhiteSpace(tokenno) Then

                    client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
                    InsertIntoTblWebEventLog("SubmitDoc7", invoiceNumber, DocumentPayload.ToString, Session("UserID").ToString)

                    If Not String.IsNullOrEmpty(DocumentPayload) Then
                        InsertIntoTblWebEventLog("SubmitDoc71", invoiceNumber, DocumentPayload.ToString, Session("UserID").ToString)

                        DocumentFormat = "JSON"
                        Dim byt As Byte() = System.Text.Encoding.UTF8.GetBytes(jsonresult)
                        DocumentPayloadbase64 = Convert.ToBase64String(byt)
                        InsertIntoTblWebEventLog("SubmitDoc8", invoiceNumber, DocumentPayloadbase64.ToString, Session("UserID").ToString)

                        Dim jsonData As New Dictionary(Of String, Object) From {
                                {"documents", New List(Of Object) From {
                                    New Dictionary(Of String, Object) From {
                                            {"format", DocumentFormat},
                                            {"documentHash", DocumentHashcode},
                                            {"codeNumber", invoiceNumber},
                                            {"document", DocumentPayloadbase64}
                                    }
                                }
                                }
                        }
                        InsertIntoTblWebEventLog("SubmitDoc9", invoiceNumber, tokenno.ToString, Session("UserID").ToString)
                        '   File.WriteAllText(Server.MapPath("~/PDFs/content1.txt"), DocumentPayloadbase64)

                        Dim jsonContent As String = Newtonsoft.Json.JsonConvert.SerializeObject(jsonData)
                        InsertIntoTblWebEventLog("SubmitDoc10", invoiceNumber, tokenno.ToString, Session("UserID").ToString)
                        '   File.WriteAllText(Server.MapPath("~/PDFs/content.txt"), jsoncontent)

                        Dim content As New StringContent(jsonContent, Encoding.UTF8, "application/json")
                        InsertIntoTblWebEventLog("SubmitDoc11", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

                        Try
                            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                            'Dim response As HttpResponseMessage = client.PostAsync(SumbitDocumentURL, content).Result
                            Dim response As HttpResponseMessage = client.PostAsync(SumbitDocumentURL, content).Result
                            Dim responseString = response.Content.ReadAsStringAsync().Result
                            If response.IsSuccessStatusCode Then
                                Dim SubmissionResult As SubmissionResult = JsonConvert.DeserializeObject(Of SubmissionResult)(responseString)
                                InsertIntoTblWebEventLog("SubmitDoc12", invoiceNumber, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                                Return responseString
                            End If
                        Catch ex As HttpRequestException
                            Dim result1 = "error message -" + ex.Message
                            InsertIntoTblWebEventLog("SubmitDoc13", invoiceNumber, ex.Message.ToString, Session("UserID").ToString)

                            Return result1
                        End Try
                        InsertIntoTblWebEventLog("SubmitDoc14", invoiceNumber, tokenno.ToString, Session("UserID").ToString)

                    End If
                End If
            End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("SubmitDoc15", "Exception", ex.Message.ToString, Session("UserID").ToString)

        End Try

        InsertIntoTblWebEventLog("INVOICE", "Submit Document", invoiceNumber, Session("UserID").ToString)

        Return ""
    End Function
    Public Function assignSignedProperties(DigestValue As String, certificate As X509Certificate2, docdigest As String, signatureBase64 As String) As List(Of UBLExtensions)

        ' Create the main signedProperties list
        Dim signedProperties_digest As New List(Of SignedProperties)

        ' Create a SignedProperties object
        Dim signedPropertiesObj_digest As New SignedProperties()
        signedPropertiesObj_digest.ID = "id-xades-signed-props"

        ' Initialize SignedSignatureProperties
        signedPropertiesObj_digest.SignedSignatureProperties = New List(Of SignedSignatureProperties)
        Dim signedSignaturePropertiesObj_digest As New SignedSignatureProperties()

        ' SigningTime
        signedSignaturePropertiesObj_digest.SigningTime = New List(Of SigningTime)
        Dim signingTimeObj_digest As New SigningTime
        signingTimeObj_digest.value = DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")

        'signingTimeObj_digest.Algorithm = ""
        signedSignaturePropertiesObj_digest.SigningTime.Add(signingTimeObj_digest)

        ' SigningCertificate
        signedSignaturePropertiesObj_digest.SigningCertificate = New List(Of SigningCertificate)
        Dim signingCertificateObj_digest As New SigningCertificate()

        ' Cert
        signingCertificateObj_digest.Cert = New List(Of Cert)
        Dim certObj_digest As New Cert()

        ' CertDigest
        certObj_digest.CertDigest = New List(Of CertDigest)
        Dim certDigestObj_digest As New CertDigest()

        certDigestObj_digest.DigestMethod = New List(Of DigestMethod)
        Dim digestMethodObj_digest As New DigestMethod
        digestMethodObj_digest.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        digestMethodObj_digest.value = ""
        certDigestObj_digest.DigestMethod.Add(digestMethodObj_digest)

        certDigestObj_digest.DigestValue = New List(Of DigestValue)
        Dim digestValueObj_digest As New DigestValue
        digestValueObj_digest.value = DigestValue
        certDigestObj_digest.DigestValue.Add(digestValueObj_digest)

        certObj_digest.CertDigest.Add(certDigestObj_digest)

        ' IssuerSerial
        certObj_digest.IssuerSerial = New List(Of IssuerSerial)
        Dim issuerSerialObj_digest As New IssuerSerial()

        issuerSerialObj_digest.X509IssuerName = New List(Of X509IssuerName)
        Dim x509IssuerNameObj_digest As New X509IssuerName
        x509IssuerNameObj_digest.value = certificate.IssuerName.ToString()
        issuerSerialObj_digest.X509IssuerName.Add(x509IssuerNameObj_digest)

        Dim serialNumber1 As String = certificate.SerialNumber
        Dim CertSerialNumber1 As Long = Convert.ToInt64(serialNumber1, 16)


        issuerSerialObj_digest.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj_digest As New X509SerialNumber
        x509SerialNumberObj_digest.value = CertSerialNumber1
        issuerSerialObj_digest.X509SerialNumber.Add(x509SerialNumberObj_digest)

        certObj_digest.IssuerSerial.Add(issuerSerialObj_digest)

        ' Add the configured Cert object to SigningCertificate
        signingCertificateObj_digest.Cert.Add(certObj_digest)

        ' Add the SigningCertificate to SignedSignatureProperties
        signedSignaturePropertiesObj_digest.SigningCertificate.Add(signingCertificateObj_digest)

        ' Add the fully configured SignedSignatureProperties to SignedProperties
        signedPropertiesObj_digest.SignedSignatureProperties.Add(signedSignaturePropertiesObj_digest)

        ' Finally, add this SignedProperties object to the signedProperties list
        signedProperties_digest.Add(signedPropertiesObj_digest)


        Dim settings As New JsonSerializerSettings With {
            .NullValueHandling = NullValueHandling.Ignore
        }

        Dim json As String = JsonConvert.SerializeObject(signedProperties_digest, settings)

        Dim hashvalue As Byte()
        Dim signedpropsdigest As String
        Using sha256 As SHA256 = sha256.Create()
            hashvalue = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(json))
            signedpropsdigest = Convert.ToBase64String(hashvalue)
        End Using


        Dim UBLExtensions As New List(Of UBLExtensions)
        Dim UBLExtension As New List(Of UBLExtension)
        Dim UBLExtensionvalue As New UBLExtension

        Dim ExtensionURI As New List(Of ExtensionURI)
        Dim ExtensionURIvalue As New ExtensionURI
        ExtensionURIvalue.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
        ExtensionURI.Add(ExtensionURIvalue)

        UBLExtensionvalue.ExtensionURI = ExtensionURI

        Dim ExtensionContent As New List(Of ExtensionContent)
        Dim ExtensionContentvalue As New ExtensionContent
        Dim UBLDocumentSignatures As New List(Of UBLDocumentSignatures)
        Dim UBLDocumentSignaturesValue As New UBLDocumentSignatures

        Dim SignatureInformation As New List(Of SignatureInformation)
        Dim SignatureInformationValue As New SignatureInformation
        Dim SignatureInformationID As New List(Of ID)
        Dim SignatureInformationIDValue As New ID
        SignatureInformationIDValue.Value = "urn:oasis:names:specification:ubl:signature:1"

        SignatureInformationID.Add(SignatureInformationIDValue)

        Dim ReferencedSignatureID As New List(Of ReferencedSignatureID)
        Dim ReferencedSignatureIDvalue As New ReferencedSignatureID
        ReferencedSignatureIDvalue.value = "urn:oasis:names:specification:ubl:signature:Invoice"

        ReferencedSignatureID.Add(ReferencedSignatureIDvalue)

        ' Create the top-level list
        Dim _UBLExtensions As New List(Of UBLExtensions)

        ' Create UBLExtensions object
        Dim ublExtensionsObj As New UBLExtensions
        ublExtensionsObj.UBLExtension = New List(Of UBLExtension)

        ' Create a UBLExtension object
        Dim ublExtensionObj As New UBLExtension

        ' Set ExtensionURI
        ublExtensionObj.ExtensionURI = New List(Of ExtensionURI)
        Dim extensionUriObj As New ExtensionURI
        extensionUriObj.value = "urn:oasis:names:specification:ubl:dsig:enveloped:xades"
        ublExtensionObj.ExtensionURI.Add(extensionUriObj)

        ' Create ExtensionContent
        ublExtensionObj.ExtensionContent = New List(Of ExtensionContent)
        Dim extensionContentObj As New ExtensionContent

        ' Create UBLDocumentSignatures
        extensionContentObj.UBLDocumentSignatures = New List(Of UBLDocumentSignatures)
        Dim ublDocumentSignaturesObj As New UBLDocumentSignatures

        ' Create SignatureInformation
        ublDocumentSignaturesObj.SignatureInformation = New List(Of SignatureInformation)
        Dim signatureInformationObj As New SignatureInformation

        ' Set SignatureInformation ID
        signatureInformationObj.ID = New List(Of ID)
        Dim idObj As New ID
        idObj.Value = "urn:oasis:names:specification:ubl:signature:1"
        signatureInformationObj.ID.Add(idObj)

        ' Set ReferencedSignatureID
        signatureInformationObj.ReferencedSignatureID = New List(Of ReferencedSignatureID)
        Dim referencedSignatureIdObj As New ReferencedSignatureID
        referencedSignatureIdObj.value = "urn:oasis:names:specification:ubl:signature:Invoice"
        signatureInformationObj.ReferencedSignatureID.Add(referencedSignatureIdObj)

        ' Create SignatureInformation_Signature list
        signatureInformationObj.SignatureInformation_Signature = New List(Of SignatureInformation_Signature)

        ' Create the main SignatureInformation_Signature object
        Dim signatureInfoSignatureObj As New SignatureInformation_Signature
        signatureInfoSignatureObj.ID = "signature"

        ' Create SignatureObject
        signatureInfoSignatureObj.SignatureObject = New List(Of SignatureObject)
        Dim signatureObjectObj As New SignatureObject

        ' Create QualifyingProperties
        signatureObjectObj.QualifyingProperties = New List(Of QualifyingProperties)
        Dim qualifyingPropertiesObj As New QualifyingProperties
        qualifyingPropertiesObj.Target = "signature"

        ' Create SignedProperties
        qualifyingPropertiesObj.SignedProperties = New List(Of SignedProperties)
        Dim signedPropertiesObj As New SignedProperties
        signedPropertiesObj.ID = "id-xades-signed-props"

        ' Create SignedSignatureProperties
        signedPropertiesObj.SignedSignatureProperties = New List(Of SignedSignatureProperties)
        Dim signedSignaturePropertiesObj As New SignedSignatureProperties

        ' Set SigningTime
        signedSignaturePropertiesObj.SigningTime = New List(Of SigningTime)
        Dim signingTimeObj As New SigningTime
        signingTimeObj.value = DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")
        'signingTimeObj.Algorithm = ""
        signedSignaturePropertiesObj.SigningTime.Add(signingTimeObj)

        ' Set SigningCertificate
        signedSignaturePropertiesObj.SigningCertificate = New List(Of SigningCertificate)
        Dim signingCertificateObj As New SigningCertificate

        ' Create Cert
        signingCertificateObj.Cert = New List(Of Cert)
        Dim certObj As New Cert

        ' Create CertDigest
        certObj.CertDigest = New List(Of CertDigest)
        Dim certDigestObj As New CertDigest

        certDigestObj.DigestMethod = New List(Of DigestMethod)
        Dim digestMethodObj As New DigestMethod
        digestMethodObj.value = ""
        digestMethodObj.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        certDigestObj.DigestMethod.Add(digestMethodObj)

        certDigestObj.DigestValue = New List(Of DigestValue)
        Dim certDigestValueObj As New DigestValue
        certDigestValueObj.value = DigestValue
        certDigestObj.DigestValue.Add(certDigestValueObj)
        certObj.CertDigest.Add(certDigestObj)

        ' Set IssuerSerial
        certObj.IssuerSerial = New List(Of IssuerSerial)
        Dim issuerSerialObj As New IssuerSerial

        issuerSerialObj.X509IssuerName = New List(Of X509IssuerName)
        Dim issuerNameObj As New X509IssuerName
        issuerNameObj.value = certificate.IssuerName.Name
        issuerSerialObj.X509IssuerName.Add(issuerNameObj)

        issuerSerialObj.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj As New X509SerialNumber
        x509SerialNumberObj.value = certificate.SerialNumber
        issuerSerialObj.X509SerialNumber.Add(x509SerialNumberObj)

        certObj.IssuerSerial.Add(issuerSerialObj)
        signingCertificateObj.Cert.Add(certObj)

        ' Add SigningCertificate to SignedSignatureProperties
        signedSignaturePropertiesObj.SigningCertificate.Add(signingCertificateObj)

        ' Add SignedSignatureProperties to SignedProperties
        signedPropertiesObj.SignedSignatureProperties.Add(signedSignaturePropertiesObj)

        ' Add SignedProperties to QualifyingProperties
        qualifyingPropertiesObj.SignedProperties.Add(signedPropertiesObj)

        ' Add QualifyingProperties to SignatureObject
        signatureObjectObj.QualifyingProperties.Add(qualifyingPropertiesObj)

        ' Add SignatureObject to SignatureInformation_Signature
        signatureInfoSignatureObj.SignatureObject.Add(signatureObjectObj)

        ' Create KeyInfo
        signatureInfoSignatureObj.KeyInfo = New List(Of KeyInfo)
        Dim keyInfoObj As New KeyInfo

        keyInfoObj.X509Data = New List(Of X509Data)
        Dim x509DataObj As New X509Data

        x509DataObj.X509Certificate = New List(Of X509Certificate)
        Dim x509CertObj As New X509Certificate
        x509CertObj.value = Convert.ToBase64String(certificate.RawData)
        x509DataObj.X509Certificate.Add(x509CertObj)

        x509DataObj.X509SubjectName = New List(Of X509SubjectName)
        Dim x509SubjectNameObj As New X509SubjectName
        x509SubjectNameObj.value = certificate.SubjectName.Name
        x509DataObj.X509SubjectName.Add(x509SubjectNameObj)

        x509DataObj.X509IssuerSerial = New List(Of X509IssuerSerial)
        Dim x509IssuerSerialObj As New X509IssuerSerial

        x509IssuerSerialObj.X509IssuerName = New List(Of X509IssuerName)
        Dim x509IssuerNameObj2 As New X509IssuerName
        x509IssuerNameObj2.value = certificate.IssuerName.Name
        x509IssuerSerialObj.X509IssuerName.Add(x509IssuerNameObj2)

        Dim serialNumber As String = certificate.SerialNumber
        Dim CertSerialNumber As Long = Convert.ToInt64(serialNumber, 16)

        x509IssuerSerialObj.X509SerialNumber = New List(Of X509SerialNumber)
        Dim x509SerialNumberObj2 As New X509SerialNumber
        x509SerialNumberObj2.value = CertSerialNumber
        x509IssuerSerialObj.X509SerialNumber.Add(x509SerialNumberObj2)

        x509DataObj.X509IssuerSerial.Add(x509IssuerSerialObj)

        keyInfoObj.X509Data.Add(x509DataObj)

        ' Add KeyInfo to SignatureInformation_Signature
        signatureInfoSignatureObj.KeyInfo.Add(keyInfoObj)

        ' Create SignatureValue
        signatureInfoSignatureObj.SignatureValue = New List(Of SignatureValue)
        Dim signatureValueObj As New SignatureValue
        signatureValueObj.value = signatureBase64
        signatureInfoSignatureObj.SignatureValue.Add(signatureValueObj)

        ' Create SignedInfo
        signatureInfoSignatureObj.SignedInfo = New List(Of SignedInfo)
        Dim signedInfoObj As New SignedInfo

        ' SignedInfoSignatureMethod
        signedInfoObj.SignedInfoSignatureMethod = New List(Of SignedInfoSignatureMethod)
        Dim signedInfoSigMethodObj As New SignedInfoSignatureMethod
        signedInfoSigMethodObj.value = ""
        signedInfoSigMethodObj.Algorithm = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
        signedInfoObj.SignedInfoSignatureMethod.Add(signedInfoSigMethodObj)

        ' References
        signedInfoObj.Reference = New List(Of Reference)

        Dim refProps As New Reference
        refProps.Type = "http://uri.etsi.org/01903/v1.3.2#SignedProperties"
        refProps.URI = "#id-xades-signed-props"
        refProps.DigestMethod = New List(Of DigestMethod)
        Dim refPropsDigestMethod As New DigestMethod
        refPropsDigestMethod.value = ""
        refPropsDigestMethod.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        refProps.DigestMethod.Add(refPropsDigestMethod)
        refProps.DigestValue = New List(Of DigestValue)
        Dim refPropsDigestValueObj As New DigestValue
        refPropsDigestValueObj.value = signedpropsdigest
        refProps.DigestValue.Add(refPropsDigestValueObj)
        signedInfoObj.Reference.Add(refProps)

        Dim refDoc As New Reference
        refDoc.Type = ""
        refDoc.URI = ""
        refDoc.DigestMethod = New List(Of DigestMethod)
        Dim refDocDigestMethod As New DigestMethod
        refDocDigestMethod.value = ""
        refDocDigestMethod.Algorithm = "http://www.w3.org/2001/04/xmlenc#sha256"
        refDoc.DigestMethod.Add(refDocDigestMethod)
        refDoc.DigestValue = New List(Of DigestValue)
        Dim refDocDigestValueObj As New DigestValue
        refDocDigestValueObj.value = docdigest
        refDoc.DigestValue.Add(refDocDigestValueObj)
        signedInfoObj.Reference.Add(refDoc)

        ' Add SignedInfo to SignatureInformation_Signature
        signatureInfoSignatureObj.SignedInfo.Add(signedInfoObj)

        ' Add SignatureInformation_Signature to SignatureInformation
        signatureInformationObj.SignatureInformation_Signature.Add(signatureInfoSignatureObj)

        ' Add SignatureInformation to UBLDocumentSignatures
        ublDocumentSignaturesObj.SignatureInformation.Add(signatureInformationObj)

        ' Add UBLDocumentSignatures to ExtensionContent
        extensionContentObj.UBLDocumentSignatures.Add(ublDocumentSignaturesObj)

        ' Add ExtensionContent to UBLExtension
        ublExtensionObj.ExtensionContent.Add(extensionContentObj)

        ' Add UBLExtension to UBLExtensions
        ublExtensionsObj.UBLExtension.Add(ublExtensionObj)

        ' Finally add this to the list
        _UBLExtensions.Add(ublExtensionsObj)

        Dim ublExtensionjson As String = JsonConvert.SerializeObject(_UBLExtensions, settings)


        Return _UBLExtensions
    End Function

    Public Function AssignJsonvalue(invoiceNumber As String)
        Try
            Dim invoiceWrapper As New InvoiceWrapper()

            Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
            Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
            Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

            Dim test1 = DateTime.UtcNow.Date
            Dim test = DateTime.UtcNow.TimeOfDay

            InsertIntoTblWebEventLog("Invoice", "AssignJsonvalue1", "", "")


            Dim invoiceID = invoiceNumber 'for testing manually add this. want to change this and submit document method also need to change
            Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
            Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
            Dim InvoiceTypeCode = "01"
            'Dim InvoiceListVersionID = "1.0"
            Dim InvoiceListVersionID = "1.1"
            Dim DocumentCurrencyCode = "MYR"
            Dim periodStartDate = "2024-11-15"
            Dim periodEndDate = "2024-12-15"
            Dim periodDescription = "Monthly"
            Dim BillingAdditionalDocumentReferenceID = " "
            Dim AdditionalDocumentReferenceID = ""

            InsertIntoTblWebEventLog("AssignJsonvalue2", invoiceNumber, test.ToString, Session("UserID").ToString)


            ' for AccountingSupplierParty
            Dim AccountingSupplierParty_AdditionalAccountID = ""
            Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
            Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
            Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
            Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
            Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
            Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
            Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
            Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"

            InsertIntoTblWebEventLog("AssignJsonvalue3", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' for AccountingCustomerParty
            'For ConsolidatedInvoice "EI00000000010" value for same in all Buyer. In standard It different
            Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "EI00000000010"
            'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"

            'For ConsolidatedInvoice PartyIdentification ID is NA value. In standard It different
            Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "NA"

            '  Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
            Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
            Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
            Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
            Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"
            'For ConsolidatedInvoice Contact ID is NA value. In standard It different
            Dim AccountingCustomerParty_Party_Contact_Telephone = "NA"
            Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "NA"

            InsertIntoTblWebEventLog("AssignJsonvalue4", invoiceNumber, test1.ToString, Session("UserID").ToString)


            'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
            'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"

            'for Delivery DeliveryParty
            Dim DeliveryParty_LegalEntity_RegistrationName = ""
            Dim DeliveryParty_PostalAddress_CityName = ""
            Dim DeliveryParty_PostalAddress_PostalZone = ""
            Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
            Dim DeliveryParty_PostalAddress_AddressLine1 = ""
            Dim DeliveryParty_PostalAddress_AddressLine2 = ""
            Dim DeliveryParty_PostalAddress_AddressLine3 = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
            Dim DeliveryParty_PartyIdentification_ID = ""
            Dim DeliveryParty_PartyIdentification_schemeID = ""

            InsertIntoTblWebEventLog("AssignJsonvalue5", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for Delivery Shipment
            Dim Delivery_Shipment_ID = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
            Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue6", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for paymentMeans
            Dim paymentMeans_PaymentMeansCode_value = "01"
            Dim paymentMeans_PayeeFinancialAccount_value = ""

            'for paymentTerm
            Dim paymentTerms_Note_value = ""

            'for prepaidPayment
            Dim prepaidPayment_ID = ""
            Dim prepaidPayment_PaidAmount_value = 0
            Dim prepaidPayment_PaidAmount_currencyID = "MYR"
            Dim prepaidPayment_PaidDate = ""
            Dim prepaidPayment_PaidTime_value = ""

            'for AllowanceCharge 
            Dim AllowanceCharge_ChargeIndicator = True
            Dim AllowanceCharge_AllowanceChargeReason_value = ""
            Dim AllowanceCharge_Amount_value = 0
            Dim AllowanceCharge_Amount_currencyID = "MYR"

            'for AllowanceCharge 1
            Dim AllowanceCharge_ChargeIndicator_1 = False
            Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
            Dim AllowanceCharge_Amount_value_1 = 0
            Dim AllowanceCharge_Amount_currencyID_1 = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue7", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for TaxTotal
            Dim TaxTotal_TaxAmount_value = 10
            Dim TaxTotal_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
            Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxAmount_value = 10
            Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 2000D
            Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 20D
            Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = "MYR"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            'for LegalMonetaryTotal 
            Dim LegalMonetaryTotal_LineExtensionAmount_value = 3000
            Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_TaxExclusiveAmount_value = 3000
            Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_TaxInclusiveAmount_value = 3010
            Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
            Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
            Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_PayableAmount_value = 3010
            Dim LegalMonetaryTotal_PayableAmount_currencyID = "MYR"
            Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
            Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = "MYR"

            InsertIntoTblWebEventLog("AssignJsonvalue8", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'for InvoiceLine 
            Dim InvoiceLine_AllowanceCharge_Amount_value = 0
            Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
            Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
            Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
            Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

            Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
            Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
            Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
            Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
            Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

            Dim InvoiceLine_ID_value = "1"
            Dim InvoiceLine_InvoicedQuantity_value = 3
            Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

            'For ConsolidatedInvoice ItemClassificationCode is 004. in Standard is 035
            'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
            Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "004"

            'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
            Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
            Dim InvoiceLine_Item_Description_value = "Pest control"
            Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

            Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
            Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

            Dim InvoiceLine_LineExtensionAmount_value = 3000
            Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

            Dim InvoiceLine_Price_PriceAmount_value = 1000
            Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
            Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
            Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
            Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

            InsertIntoTblWebEventLog("AssignJsonvalue9", invoiceNumber, test1.ToString, Session("UserID").ToString)


            'for TaxExchangeRate
            Dim TaxExchangeRate_SourceCurrencyCode_value = "MYR"
            Dim TaxExchangeRate_TargetCurrencyCode_value = "MYR"
            Dim TaxExchangeRate_CalculationRate_value = 0


            invoiceWrapper._D = invoiceDetails_D
            invoiceWrapper._A = invoiceDetails_A
            invoiceWrapper._B = invoiceDetails_B

            invoiceWrapper.Invoice = New List(Of Invoice)()

            InsertIntoTblWebEventLog("AssignJsonvalue10", invoiceNumber, test1.ToString, Session("UserID").ToString)

            Dim invoice As New Invoice()

            invoice.ID = New List(Of ID)
            Dim invoiceIDObj As New ID
            invoiceIDObj.Value = invoiceID
            invoice.ID.Add(invoiceIDObj)

            ' Set IssueDate
            invoice.IssueDate = New List(Of IssueDate)
            Dim issueDateObj As New IssueDate
            issueDateObj.Value = IssueDate
            invoice.IssueDate.Add(issueDateObj)

            ' Set IssueTime
            invoice.IssueTime = New List(Of IssueTime)
            Dim issueTimeObj As New IssueTime
            issueTimeObj.Value = IssueTime
            invoice.IssueTime.Add(issueTimeObj)

            ' Set InvoiceTypeCode
            invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)
            Dim invoiceTypeCodeObj As New InvoiceTypeCode
            invoiceTypeCodeObj.Value = InvoiceTypeCode
            invoiceTypeCodeObj.ListVersionID = InvoiceListVersionID
            invoice.InvoiceTypeCode.Add(invoiceTypeCodeObj)

            ' Set DocumentCurrencyCode
            invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)
            Dim docCurrencyCodeObj As New DocumentCurrencyCode
            docCurrencyCodeObj.Value = DocumentCurrencyCode
            invoice.DocumentCurrencyCode.Add(docCurrencyCodeObj)

            InsertIntoTblWebEventLog("AssignJsonvalue11", invoiceNumber, test1.ToString, Session("UserID").ToString)


            ' InvoicePeriod
            invoice.InvoicePeriod = New List(Of InvoicePeriod)
            Dim period As New InvoicePeriod()

            InsertIntoTblWebEventLog("AssignJsonvalue12", invoiceNumber, test1.ToString, Session("UserID").ToString)


            period.StartDate = New List(Of StartDate)
            Dim startDateObj As New StartDate
            startDateObj.Value = periodStartDate
            period.StartDate.Add(startDateObj)

            period.EndDate = New List(Of EndDate)
            Dim endDateObj As New EndDate
            endDateObj.Value = periodEndDate
            period.EndDate.Add(endDateObj)

            period.Description = New List(Of Description)
            Dim descriptionObj As New Description
            descriptionObj.Value = periodDescription
            period.Description.Add(descriptionObj)

            invoice.InvoicePeriod.Add(period)
            InsertIntoTblWebEventLog("AssignJsonvalue13", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' BillingReference
            invoice.BillingReference = New List(Of BillingReference)
            Dim billingRef As New BillingReference

            billingRef.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)
            Dim billingAdditionalDocRef As New AdditionalDocumentReference

            billingAdditionalDocRef.ID = New List(Of ID)
            Dim billingAddDocRefIDObj As New ID
            billingAddDocRefIDObj.Value = BillingAdditionalDocumentReferenceID
            billingAdditionalDocRef.ID.Add(billingAddDocRefIDObj)

            billingRef.AdditionalDocumentReference.Add(billingAdditionalDocRef)
            invoice.BillingReference.Add(billingRef)
            InsertIntoTblWebEventLog("AssignJsonvalue14", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AdditionalDocumentReference
            invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

            Dim addDocRef1 As New AdditionalDocumentReference
            addDocRef1.ID = New List(Of ID)
            Dim addDocRef1ID As New ID
            addDocRef1ID.Value = AdditionalDocumentReferenceID
            addDocRef1.ID.Add(addDocRef1ID)
            invoice.AdditionalDocumentReference.Add(addDocRef1)

            ' Repeat the pattern for AdditionalDocumentReference2, 3, and 4
            Dim addDocRef2 As New AdditionalDocumentReference
            addDocRef2.ID = New List(Of ID)
            Dim addDocRef2ID As New ID
            addDocRef2ID.Value = AdditionalDocumentReferenceID
            addDocRef2.ID.Add(addDocRef2ID)
            invoice.AdditionalDocumentReference.Add(addDocRef2)

            Dim addDocRef3 As New AdditionalDocumentReference
            addDocRef3.ID = New List(Of ID)
            Dim addDocRef3ID As New ID
            addDocRef3ID.Value = AdditionalDocumentReferenceID
            addDocRef3.ID.Add(addDocRef3ID)
            invoice.AdditionalDocumentReference.Add(addDocRef3)

            Dim addDocRef4 As New AdditionalDocumentReference
            addDocRef4.ID = New List(Of ID)
            Dim addDocRef4ID As New ID
            addDocRef4ID.Value = AdditionalDocumentReferenceID
            addDocRef4.ID.Add(addDocRef4ID)
            invoice.AdditionalDocumentReference.Add(addDocRef4)
            InsertIntoTblWebEventLog("AssignJsonvalue15", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AccountingSupplierParty start

            invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

            ' Create the supplier object
            Dim supplier As New AccountingSupplierParty()

            ' AdditionalAccountID
            supplier.AdditionalAccountID = New List(Of AdditionalAccountID)
            Dim additionalAccountIDObj As New AdditionalAccountID
            additionalAccountIDObj.value = AccountingSupplierParty_AdditionalAccountID
            additionalAccountIDObj.schemeAgencyName = AccountingSupplierParty_schemeAgencyName
            supplier.AdditionalAccountID.Add(additionalAccountIDObj)

            ' Party
            supplier.Party = New List(Of Party)
            Dim partyObj As New Party()

            ' IndustryClassificationCode
            partyObj.IndustryClassificationCode = New List(Of IndustryClassificationCode)
            Dim industryCodeObj As New IndustryClassificationCode
            industryCodeObj.value = AccountingSupplierParty_Party_IndustryClassificationCode_value
            industryCodeObj.name = AccountingSupplierParty_Party_IndustryClassificationCode_name
            partyObj.IndustryClassificationCode.Add(industryCodeObj)

            ' PartyIdentification
            partyObj.PartyIdentification = New List(Of PartyIdentification)

            Dim partyIdentificationObj1 As New PartyIdentification
            partyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID1 As New PartyIdentificationID
            partyIdentificationID1.ID = AccountingSupplierParty_Party_PartyIdentification_ID1
            partyIdentificationID1.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
            partyIdentificationObj1.ID.Add(partyIdentificationID1)
            partyObj.PartyIdentification.Add(partyIdentificationObj1)

            Dim partyIdentificationObj2 As New PartyIdentification
            partyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID2 As New PartyIdentificationID
            partyIdentificationID2.ID = AccountingSupplierParty_Party_PartyIdentification_ID2
            partyIdentificationID2.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
            partyIdentificationObj2.ID.Add(partyIdentificationID2)
            partyObj.PartyIdentification.Add(partyIdentificationObj2)

            InsertIntoTblWebEventLog("AssignJsonvalue16", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' PostalAddress
            partyObj.PostalAddress = New List(Of PostalAddress)
            Dim postalAddressObj As New PostalAddress

            postalAddressObj.CityName = New List(Of CityName)
            Dim cityNameObj As New CityName
            cityNameObj.value = AccountingSupplierParty_Party_PostalAddress_CityName
            postalAddressObj.CityName.Add(cityNameObj)

            postalAddressObj.PostalZone = New List(Of PostalZone)
            Dim postalZoneObj As New PostalZone
            postalZoneObj.value = AccountingSupplierParty_Party_PostalAddress_PostalZone
            postalAddressObj.PostalZone.Add(postalZoneObj)

            postalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim countrySubentityCodeObj As New CountrySubentityCode
            countrySubentityCodeObj.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode
            postalAddressObj.CountrySubentityCode.Add(countrySubentityCodeObj)

            InsertIntoTblWebEventLog("AssignJsonvalue17", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' AddressLine
            postalAddressObj.AddressLine = New List(Of AddressLine)

            Dim addressLineObj1 As New AddressLine
            addressLineObj1.Line = New List(Of Line)
            Dim lineObj1 As New Line
            lineObj1.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1
            addressLineObj1.Line.Add(lineObj1)
            postalAddressObj.AddressLine.Add(addressLineObj1)

            Dim addressLineObj2 As New AddressLine
            addressLineObj2.Line = New List(Of Line)
            Dim lineObj2 As New Line
            lineObj2.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2
            addressLineObj2.Line.Add(lineObj2)
            postalAddressObj.AddressLine.Add(addressLineObj2)

            Dim addressLineObj3 As New AddressLine
            addressLineObj3.Line = New List(Of Line)
            Dim lineObj3 As New Line
            lineObj3.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3
            addressLineObj3.Line.Add(lineObj3)
            postalAddressObj.AddressLine.Add(addressLineObj3)

            ' Country
            postalAddressObj.Country = New List(Of Country)
            Dim countryObj As New Country
            countryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim identificationCodeObj As New IdentificationCode
            identificationCodeObj.value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value
            identificationCodeObj.listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID
            identificationCodeObj.listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            countryObj.IdentificationCode.Add(identificationCodeObj)
            postalAddressObj.Country.Add(countryObj)

            partyObj.PostalAddress.Add(postalAddressObj)

            InsertIntoTblWebEventLog("AssignJsonvalue18", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' PartyLegalEntity
            partyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim partyLegalEntityObj As New PartyLegalEntity
            partyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim registrationNameObj As New RegistrationName
            registrationNameObj.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName
            partyLegalEntityObj.RegistrationName.Add(registrationNameObj)
            partyObj.PartyLegalEntity.Add(partyLegalEntityObj)

            ' Contact
            partyObj.Contact = New List(Of Contact)
            Dim contactObj As New Contact

            contactObj.Telephone = New List(Of Telephone)
            Dim telephoneObj As New Telephone
            telephoneObj.value = AccountingSupplierParty_Party_Contact_Telephone
            contactObj.Telephone.Add(telephoneObj)

            contactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim emailObj As New ElectronicMail
            emailObj.value = AccountingSupplierParty_Party_Contact_ElectronicMail
            contactObj.ElectronicMail.Add(emailObj)

            partyObj.Contact.Add(contactObj)

            InsertIntoTblWebEventLog("AssignJsonvalue19", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Add the configured party to the supplier
            supplier.Party.Add(partyObj)

            ' Add supplier to AccountingSupplierParty
            invoice.AccountingSupplierParty.Add(supplier)

            InsertIntoTblWebEventLog("AssignJsonvalue20", invoiceNumber, test1.ToString, Session("UserID").ToString)


            ' AccountingSupplierParty end

            ' AccountingCustomerParty start
            ' Initialize the AccountingCustomerParty list
            invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

            ' Create the AccountingCustomerParty object
            Dim customer As New AccountingCustomerParty()

            ' Create the Party list
            customer.Party = New List(Of Party)
            Dim customerpartyObj As New Party()

            ' IndustryClassificationCode is Nothing in this case
            customerpartyObj.IndustryClassificationCode = Nothing

            ' PartyIdentification
            customerpartyObj.PartyIdentification = New List(Of PartyIdentification)

            ' First PartyIdentification
            Dim customerpartyIdentificationObj1 As New PartyIdentification
            customerpartyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID1 As New PartyIdentificationID
            customerpartyIdentificationID1.ID = AccountingCustomerParty_Party_PartyIdentification_ID1
            customerpartyIdentificationID1.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
            customerpartyIdentificationObj1.ID.Add(customerpartyIdentificationID1)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj1)

            ' Second PartyIdentification
            Dim customerpartyIdentificationObj2 As New PartyIdentification
            customerpartyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID2 As New PartyIdentificationID
            customerpartyIdentificationID2.ID = AccountingCustomerParty_Party_PartyIdentification_ID2
            customerpartyIdentificationID2.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
            customerpartyIdentificationObj2.ID.Add(customerpartyIdentificationID2)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj2)

            ' Third PartyIdentification
            Dim customerpartyIdentificationObj3 As New PartyIdentification
            customerpartyIdentificationObj3.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID3 As New PartyIdentificationID
            customerpartyIdentificationID3.ID = AccountingCustomerParty_Party_PartyIdentification_ID3
            customerpartyIdentificationID3.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
            customerpartyIdentificationObj3.ID.Add(customerpartyIdentificationID3)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj3)

            ' PostalAddress
            customerpartyObj.PostalAddress = New List(Of PostalAddress)
            Dim customerpostalAddressObj As New PostalAddress

            customerpostalAddressObj.CityName = New List(Of CityName)
            Dim customercityNameObj As New CityName
            customercityNameObj.value = AccountingCustomerParty_Party_PostalAddress_CityName
            customerpostalAddressObj.CityName.Add(customercityNameObj)

            customerpostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim customerpostalZoneObj As New PostalZone
            customerpostalZoneObj.value = AccountingCustomerParty_Party_PostalAddress_PostalZone
            customerpostalAddressObj.PostalZone.Add(customerpostalZoneObj)

            customerpostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim customercountrySubentityCodeObj As New CountrySubentityCode
            customercountrySubentityCodeObj.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode
            customerpostalAddressObj.CountrySubentityCode.Add(customercountrySubentityCodeObj)

            ' AddressLine
            customerpostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim customeraddressLineObj1 As New AddressLine
            customeraddressLineObj1.Line = New List(Of Line)
            Dim customerlineObj1 As New Line
            customerlineObj1.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1
            customeraddressLineObj1.Line.Add(customerlineObj1)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj1)

            Dim customeraddressLineObj2 As New AddressLine
            customeraddressLineObj2.Line = New List(Of Line)
            Dim customerlineObj2 As New Line
            customerlineObj2.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2
            customeraddressLineObj2.Line.Add(customerlineObj2)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj2)

            Dim customeraddressLineObj3 As New AddressLine
            customeraddressLineObj3.Line = New List(Of Line)
            Dim customerlineObj3 As New Line
            customerlineObj3.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3
            customeraddressLineObj3.Line.Add(customerlineObj3)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj3)

            ' Country
            customerpostalAddressObj.Country = New List(Of Country)
            Dim customercountryObj As New Country
            customercountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim customeridentificationCodeObj As New IdentificationCode
            customeridentificationCodeObj.value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value
            customeridentificationCodeObj.listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID
            customeridentificationCodeObj.listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            customercountryObj.IdentificationCode.Add(customeridentificationCodeObj)
            customerpostalAddressObj.Country.Add(customercountryObj)

            customerpartyObj.PostalAddress.Add(customerpostalAddressObj)

            ' PartyLegalEntity
            customerpartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim customerpartyLegalEntityObj As New PartyLegalEntity
            customerpartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim customerregistrationNameObj As New RegistrationName
            customerregistrationNameObj.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName
            customerpartyLegalEntityObj.RegistrationName.Add(customerregistrationNameObj)
            customerpartyObj.PartyLegalEntity.Add(customerpartyLegalEntityObj)

            ' Contact
            customerpartyObj.Contact = New List(Of Contact)
            Dim customercontactObj As New Contact

            customercontactObj.Telephone = New List(Of Telephone)
            Dim customertelephoneObj As New Telephone
            customertelephoneObj.value = AccountingCustomerParty_Party_Contact_Telephone
            customercontactObj.Telephone.Add(customertelephoneObj)

            customercontactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim customeremailObj As New ElectronicMail
            customeremailObj.value = AccountingCustomerParty_Party_Contact_ElectronicMail
            customercontactObj.ElectronicMail.Add(customeremailObj)

            customerpartyObj.Contact.Add(customercontactObj)

            InsertIntoTblWebEventLog("AssignJsonvalue21", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Add the configured party to customer
            customer.Party.Add(customerpartyObj)

            ' Finally, add the customer to AccountingCustomerParty list
            invoice.AccountingCustomerParty.Add(customer)


            ' AccountingCustomerParty end

            ' delivery start
            ' Initialize the Delivery list
            invoice.Delivery = New List(Of Delivery)

            ' Create the Delivery object
            Dim delivery As New Delivery()

            ' DeliveryParty

            delivery.DeliveryParty = New List(Of DeliveryParty)
            Dim deliveryPartyObj As New DeliveryParty

            ' PartyLegalEntity
            deliveryPartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim deliverypartyLegalEntityObj As New PartyLegalEntity
            deliverypartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim deliveryregistrationNameObj As New RegistrationName
            deliveryregistrationNameObj.value = DeliveryParty_LegalEntity_RegistrationName
            deliverypartyLegalEntityObj.RegistrationName.Add(deliveryregistrationNameObj)
            deliveryPartyObj.PartyLegalEntity.Add(deliverypartyLegalEntityObj)

            ' PostalAddress
            deliveryPartyObj.PostalAddress = New List(Of PostalAddress)
            Dim deliverypostalAddressObj As New PostalAddress

            ' CityName
            deliverypostalAddressObj.CityName = New List(Of CityName)
            Dim deliverycityNameObj As New CityName
            deliverycityNameObj.value = DeliveryParty_PostalAddress_CityName
            deliverypostalAddressObj.CityName.Add(deliverycityNameObj)

            ' PostalZone
            deliverypostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim deliverypostalZoneObj As New PostalZone
            deliverypostalZoneObj.value = DeliveryParty_PostalAddress_PostalZone
            deliverypostalAddressObj.PostalZone.Add(deliverypostalZoneObj)

            ' CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim deliverycountrySubentityCodeObj As New CountrySubentityCode
            deliverycountrySubentityCodeObj.value = DeliveryParty_PostalAddress_CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode.Add(deliverycountrySubentityCodeObj)

            ' AddressLine
            deliverypostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim deliveryaddressLineObj1 As New AddressLine
            deliveryaddressLineObj1.Line = New List(Of Line)
            Dim deliverylineObj1 As New Line
            deliverylineObj1.value = DeliveryParty_PostalAddress_AddressLine1
            deliveryaddressLineObj1.Line.Add(deliverylineObj1)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj1)

            Dim deliveryaddressLineObj2 As New AddressLine
            deliveryaddressLineObj2.Line = New List(Of Line)
            Dim deliverylineObj2 As New Line
            deliverylineObj2.value = DeliveryParty_PostalAddress_AddressLine2
            deliveryaddressLineObj2.Line.Add(deliverylineObj2)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj2)

            Dim deliveryaddressLineObj3 As New AddressLine
            deliveryaddressLineObj3.Line = New List(Of Line)
            Dim deliverylineObj3 As New Line
            deliverylineObj3.value = DeliveryParty_PostalAddress_AddressLine3
            deliveryaddressLineObj3.Line.Add(deliverylineObj3)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj3)

            ' Country
            deliverypostalAddressObj.Country = New List(Of Country)
            Dim deliverycountryObj As New Country
            deliverycountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim deliveryidentificationCodeObj As New IdentificationCode
            deliveryidentificationCodeObj.value = DeliveryParty_PostalAddress_Country_IdentificationCode_value
            deliveryidentificationCodeObj.listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID
            deliveryidentificationCodeObj.listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
            deliverycountryObj.IdentificationCode.Add(deliveryidentificationCodeObj)
            deliverypostalAddressObj.Country.Add(deliverycountryObj)

            deliveryPartyObj.PostalAddress.Add(deliverypostalAddressObj)

            ' PartyIdentification
            deliveryPartyObj.PartyIdentification = New List(Of PartyIdentification)
            Dim deliverypartyIdentificationObj As New PartyIdentification
            deliverypartyIdentificationObj.ID = New List(Of PartyIdentificationID)
            Dim deliverypartyIdentificationIDObj As New PartyIdentificationID
            deliverypartyIdentificationIDObj.ID = DeliveryParty_PartyIdentification_ID
            deliverypartyIdentificationIDObj.schemeID = DeliveryParty_PartyIdentification_schemeID
            deliverypartyIdentificationObj.ID.Add(deliverypartyIdentificationIDObj)
            deliveryPartyObj.PartyIdentification.Add(deliverypartyIdentificationObj)

            delivery.DeliveryParty.Add(deliveryPartyObj)

            InsertIntoTblWebEventLog("AssignJsonvalue22", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' Shipment
            delivery.Shipment = New List(Of Shipment)
            Dim deliveryshipmentObj As New Shipment

            deliveryshipmentObj.ID = New List(Of ID)
            Dim deliveryshipmentIDObj As New ID
            deliveryshipmentIDObj.Value = Delivery_Shipment_ID
            deliveryshipmentObj.ID.Add(deliveryshipmentIDObj)

            ' FreightAllowanceCharge
            deliveryshipmentObj.FreightAllowanceCharge = New List(Of FreightAllowanceCharge)
            Dim deliveryfreightAllowanceChargeObj As New FreightAllowanceCharge

            deliveryfreightAllowanceChargeObj.ChargeIndicator = New List(Of ChargeIndicator)
            Dim deliverychargeIndicatorObj As New ChargeIndicator
            deliverychargeIndicatorObj.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator
            deliveryfreightAllowanceChargeObj.ChargeIndicator.Add(deliverychargeIndicatorObj)

            deliveryfreightAllowanceChargeObj.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim deliveryallowanceChargeReasonObj As New AllowanceChargeReason
            deliveryallowanceChargeReasonObj.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason
            deliveryfreightAllowanceChargeObj.AllowanceChargeReason.Add(deliveryallowanceChargeReasonObj)

            deliveryfreightAllowanceChargeObj.Amount = New List(Of Amount)
            Dim deliveryamountObj As New Amount
            deliveryamountObj.value = Delivery_Shipment_FreightAllowanceCharge_Amount_value
            deliveryamountObj.currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
            deliveryfreightAllowanceChargeObj.Amount.Add(deliveryamountObj)

            deliveryshipmentObj.FreightAllowanceCharge.Add(deliveryfreightAllowanceChargeObj)

            delivery.Shipment.Add(deliveryshipmentObj)

            ' Finally, add the delivery to the invoice
            invoice.Delivery.Add(delivery)

            InsertIntoTblWebEventLog("AssignJsonvalue23", invoiceNumber, test1.ToString, Session("UserID").ToString)

            ' delivery End

            'paymentMeans start
            ' Initialize the PaymentMeans list
            invoice.PaymentMeans = New List(Of PaymentMeans)

            ' Create a PaymentMeans object
            Dim paymentMeans As New PaymentMeans()

            ' Set PaymentMeansCode
            paymentMeans.PaymentMeansCode = New List(Of PaymentMeansCode)
            Dim paymentMeansCodeObj As New PaymentMeansCode
            paymentMeansCodeObj.value = paymentMeans_PaymentMeansCode_value
            paymentMeans.PaymentMeansCode.Add(paymentMeansCodeObj)

            ' Set PayeeFinancialAccount
            paymentMeans.PayeeFinancialAccount = New List(Of PayeeFinancialAccount)
            Dim payeeFinancialAccountObj As New PayeeFinancialAccount

            payeeFinancialAccountObj.ID = New List(Of ID)
            Dim payeeFinancialAccountID As New ID
            payeeFinancialAccountID.Value = paymentMeans_PayeeFinancialAccount_value
            payeeFinancialAccountObj.ID.Add(payeeFinancialAccountID)

            paymentMeans.PayeeFinancialAccount.Add(payeeFinancialAccountObj)

            ' Add the completed PaymentMeans object to the invoice
            invoice.PaymentMeans.Add(paymentMeans)

            'paymentMeans end

            'paymentTerms start

            ' Initialize the PaymentTerms list
            invoice.PaymentTerms = New List(Of PaymentTerms)

            ' Create a PaymentTerms object
            Dim paymentTerms As New PaymentTerms()

            ' Set Note
            paymentTerms.Note = New List(Of Note)
            Dim noteObj As New Note
            noteObj.value = paymentTerms_Note_value
            paymentTerms.Note.Add(noteObj)

            ' Add the completed paymentTerms object to invoice.PaymentTerms
            invoice.PaymentTerms.Add(paymentTerms)

            'paymentTerms end

            'prepaidPayment start
            ' Initialize the PrepaidPayment list
            invoice.PrepaidPayment = New List(Of PrepaidPayment)

            ' Create PrepaidPayment object
            Dim prepaidPayment As New PrepaidPayment()

            ' Set ID
            prepaidPayment.ID = New List(Of ID)
            Dim idObj As New ID
            idObj.Value = prepaidPayment_ID
            prepaidPayment.ID.Add(idObj)

            ' Set PaidAmount
            prepaidPayment.PaidAmount = New List(Of PaidAmount)
            Dim paidAmountObj As New PaidAmount
            paidAmountObj.value = prepaidPayment_PaidAmount_value
            paidAmountObj.currencyID = prepaidPayment_PaidAmount_currencyID
            prepaidPayment.PaidAmount.Add(paidAmountObj)

            ' Set PaidDate
            prepaidPayment.PaidDate = New List(Of PaidDate)
            Dim paidDateObj As New PaidDate
            paidDateObj.value = prepaidPayment_PaidDate
            prepaidPayment.PaidDate.Add(paidDateObj)

            ' Set PaidTime
            prepaidPayment.PaidTime = New List(Of PaidTime)
            Dim paidTimeObj As New PaidTime
            paidTimeObj.value = prepaidPayment_PaidTime_value
            prepaidPayment.PaidTime.Add(paidTimeObj)

            ' Add prepaidPayment to the invoice
            invoice.PrepaidPayment.Add(prepaidPayment)

            'prepaidPayment end

            InsertIntoTblWebEventLog("AssignJsonvalue24", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'allowanceCharge start
            ' Initialize the AllowanceCharge list
            invoice.AllowanceCharge = New List(Of AllowanceCharge)

            ' Create the first AllowanceCharge object
            Dim allowanceCharge As New AllowanceCharge()

            allowanceCharge.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj As New ChargeIndicator
            allowancchargeIndicatorObj.value = AllowanceCharge_ChargeIndicator
            allowanceCharge.ChargeIndicator.Add(allowancchargeIndicatorObj)

            allowanceCharge.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj As New AllowanceChargeReason
            allowanceChargeReasonObj.value = AllowanceCharge_AllowanceChargeReason_value
            allowanceCharge.AllowanceChargeReason.Add(allowanceChargeReasonObj)

            allowanceCharge.Amount = New List(Of Amount)
            Dim allowancamountObj As New Amount
            allowancamountObj.value = AllowanceCharge_Amount_value
            allowancamountObj.currencyID = AllowanceCharge_Amount_currencyID
            allowanceCharge.Amount.Add(allowancamountObj)

            ' Create the second AllowanceCharge object
            Dim allowanceCharge1 As New AllowanceCharge()

            allowanceCharge1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj1 As New ChargeIndicator
            allowancchargeIndicatorObj1.value = AllowanceCharge_ChargeIndicator_1
            allowanceCharge1.ChargeIndicator.Add(allowancchargeIndicatorObj1)

            allowanceCharge1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj1 As New AllowanceChargeReason
            allowanceChargeReasonObj1.value = AllowanceCharge_AllowanceChargeReason_value_1
            allowanceCharge1.AllowanceChargeReason.Add(allowanceChargeReasonObj1)

            allowanceCharge1.Amount = New List(Of Amount)
            Dim allowancamountObj1 As New Amount
            allowancamountObj1.value = AllowanceCharge_Amount_value_1
            allowancamountObj1.currencyID = AllowanceCharge_Amount_currencyID_1
            allowanceCharge1.Amount.Add(allowancamountObj1)

            ' Add both AllowanceCharge objects to the invoice
            invoice.AllowanceCharge.Add(allowanceCharge)
            invoice.AllowanceCharge.Add(allowanceCharge1)

            'allowanceCharge end

            InsertIntoTblWebEventLog("AssignJsonvalue25", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'TaxTotal start
            ' Initialize the TaxTotal list
            invoice.TaxTotal = New List(Of TaxTotal)

            ' Create the TaxTotal object
            Dim taxTotal As New TaxTotal()

            ' Set TaxAmount
            taxTotal.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj As New TaxAmount
            taxAmountObj.value = TaxTotal_TaxAmount_value
            taxAmountObj.currencyID = TaxTotal_TaxAmount_currencyID
            taxTotal.TaxAmount.Add(taxAmountObj)

            ' Set TaxSubtotal
            taxTotal.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim taxSubtotalObj1 As New TaxSubtotal

            ' TaxableAmount for first TaxSubtotal
            taxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj1 As New TaxableAmount
            taxableAmountObj1.value = TaxTotal_TaxSubtotal_TaxableAmount_value
            taxableAmountObj1.currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            taxSubtotalObj1.TaxableAmount.Add(taxableAmountObj1)

            ' TaxAmount for first TaxSubtotal
            taxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj1_1 As New TaxAmount
            taxAmountObj1_1.value = TaxTotal_TaxSubtotal_TaxAmount_value
            taxAmountObj1_1.currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID
            taxSubtotalObj1.TaxAmount.Add(taxAmountObj1_1)

            ' TaxCategory for first TaxSubtotal
            taxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj1 As New TaxCategory

            taxCategoryObj1.ID = New List(Of ID)
            Dim taxCategoryIDObj1 As New ID
            taxCategoryIDObj1.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value
            taxCategoryObj1.ID.Add(taxCategoryIDObj1)

            taxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj1 As New TaxScheme
            taxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj1 As New TaxSchemeID
            taxSchemeIDObj1.ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj1.schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj1.schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj1.ID.Add(taxSchemeIDObj1)

            taxCategoryObj1.TaxScheme.Add(taxSchemeObj1)

            taxCategoryObj1.Percent = Nothing
            taxCategoryObj1.TaxExemptionReason = Nothing

            taxSubtotalObj1.TaxCategory.Add(taxCategoryObj1)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj1.BaseUnitMeasure = Nothing
            taxSubtotalObj1.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj1)

            ' Second TaxSubtotal
            Dim taxSubtotalObj2 As New TaxSubtotal

            ' TaxableAmount for second TaxSubtotal
            taxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj2 As New TaxableAmount
            taxableAmountObj2.value = TaxTotal_TaxSubtotal2_TaxableAmount_value
            taxableAmountObj2.currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
            taxSubtotalObj2.TaxableAmount.Add(taxableAmountObj2)

            ' TaxAmount for second TaxSubtotal
            taxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj2_1 As New TaxAmount
            taxAmountObj2_1.value = TaxTotal_TaxSubtotal2_TaxAmount_value
            taxAmountObj2_1.currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
            taxSubtotalObj2.TaxAmount.Add(taxAmountObj2_1)

            ' TaxCategory for second TaxSubtotal
            taxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj2 As New TaxCategory

            taxCategoryObj2.ID = New List(Of ID)
            Dim taxCategoryIDObj2 As New ID
            taxCategoryIDObj2.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value
            taxCategoryObj2.ID.Add(taxCategoryIDObj2)

            taxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj2 As New TaxScheme
            taxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj2 As New TaxSchemeID
            taxSchemeIDObj2.ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj2.schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj2.schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj2.ID.Add(taxSchemeIDObj2)

            taxCategoryObj2.TaxScheme.Add(taxSchemeObj2)

            taxCategoryObj2.Percent = Nothing
            taxCategoryObj2.TaxExemptionReason = Nothing

            taxSubtotalObj2.TaxCategory.Add(taxCategoryObj2)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj2.BaseUnitMeasure = Nothing
            taxSubtotalObj2.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj2)

            ' Add the fully constructed taxTotal object to invoice.TaxTotal
            invoice.TaxTotal.Add(taxTotal)

            'TaxTotal end

            InsertIntoTblWebEventLog("AssignJsonvalue26", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'LegalMonetaryTotal start
            ' Initialize the LegalMonetaryTotal list
            invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)

            ' Create the LegalMonetaryTotal object
            Dim legalMonetaryTotal As New LegalMonetaryTotal()

            ' Set LineExtensionAmount
            legalMonetaryTotal.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim lineExtensionAmountObj As New LineExtensionAmount
            lineExtensionAmountObj.value = LegalMonetaryTotal_LineExtensionAmount_value
            lineExtensionAmountObj.currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
            legalMonetaryTotal.LineExtensionAmount.Add(lineExtensionAmountObj)

            ' Set TaxExclusiveAmount
            legalMonetaryTotal.TaxExclusiveAmount = New List(Of TaxExclusiveAmount)
            Dim taxExclusiveAmountObj As New TaxExclusiveAmount
            taxExclusiveAmountObj.value = LegalMonetaryTotal_TaxExclusiveAmount_value
            taxExclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
            legalMonetaryTotal.TaxExclusiveAmount.Add(taxExclusiveAmountObj)

            ' Set TaxInclusiveAmount
            legalMonetaryTotal.TaxInclusiveAmount = New List(Of TaxInclusiveAmount)
            Dim taxInclusiveAmountObj As New TaxInclusiveAmount
            taxInclusiveAmountObj.value = LegalMonetaryTotal_TaxInclusiveAmount_value
            taxInclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
            legalMonetaryTotal.TaxInclusiveAmount.Add(taxInclusiveAmountObj)

            ' Set AllowanceTotalAmount
            legalMonetaryTotal.AllowanceTotalAmount = New List(Of AllowanceTotalAmount)
            Dim legalMonetaryallowanceTotalAmountObj As New AllowanceTotalAmount
            legalMonetaryallowanceTotalAmountObj.value = LegalMonetaryTotal_AllowanceTotalAmount_value
            legalMonetaryallowanceTotalAmountObj.currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
            legalMonetaryTotal.AllowanceTotalAmount.Add(legalMonetaryallowanceTotalAmountObj)

            ' Set ChargeTotalAmount
            legalMonetaryTotal.ChargeTotalAmount = New List(Of ChargeTotalAmount)
            Dim legalMonetarychargeTotalAmountObj As New ChargeTotalAmount
            legalMonetarychargeTotalAmountObj.value = LegalMonetaryTotal_ChargeTotalAmount_value
            legalMonetarychargeTotalAmountObj.currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
            legalMonetaryTotal.ChargeTotalAmount.Add(legalMonetarychargeTotalAmountObj)

            ' Set PayableAmount
            legalMonetaryTotal.PayableAmount = New List(Of PayableAmount)
            Dim legalMonetarypayableAmountObj As New PayableAmount
            legalMonetarypayableAmountObj.value = LegalMonetaryTotal_PayableAmount_value
            legalMonetarypayableAmountObj.currencyID = LegalMonetaryTotal_PayableAmount_currencyID
            legalMonetaryTotal.PayableAmount.Add(legalMonetarypayableAmountObj)

            ' Set PayableRoundingAmount
            legalMonetaryTotal.PayableRoundingAmount = New List(Of PayableRoundingAmount)
            Dim legalMonetarypayableRoundingAmountObj As New PayableRoundingAmount
            legalMonetarypayableRoundingAmountObj.value = LegalMonetaryTotal_PayableRoundingAmount_value
            legalMonetarypayableRoundingAmountObj.currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
            legalMonetaryTotal.PayableRoundingAmount.Add(legalMonetarypayableRoundingAmountObj)

            ' Add the fully configured legalMonetaryTotal object to invoice.LegalMonetaryTotal
            invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)

            'LegalMonetaryTotal end

            InsertIntoTblWebEventLog("AssignJsonvalue27", invoiceNumber, test1.ToString, Session("UserID").ToString)

            'InvoiceLine start
            ' Initialize the InvoiceLine list
            invoice.InvoiceLine = New List(Of InvoiceLine)

            ' Create the InvoiceLine object
            Dim invoiceLine As New InvoiceLine()

            ' AllowanceCharge
            invoiceLine.AllowanceCharge = New List(Of InvoiceLineAllowanceCharge)

            ' First InvoiceLineAllowanceCharge
            Dim invoiceLineallowanceChargeObj1 As New InvoiceLineAllowanceCharge()

            invoiceLineallowanceChargeObj1.Amount = New List(Of Amount)
            Dim invoiceLineallowanceChargeAmountObj1 As New Amount
            invoiceLineallowanceChargeAmountObj1.value = InvoiceLine_AllowanceCharge_Amount_value
            invoiceLineallowanceChargeAmountObj1.currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
            invoiceLineallowanceChargeObj1.Amount.Add(invoiceLineallowanceChargeAmountObj1)

            invoiceLineallowanceChargeObj1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim invoiceLineallowanceChargeIndicatorObj1 As New ChargeIndicator
            invoiceLineallowanceChargeIndicatorObj1.value = InvoiceLine_AllowanceCharge_ChargeIndicator
            invoiceLineallowanceChargeObj1.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj1)

            invoiceLineallowanceChargeObj1.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
            Dim invoiceLinemultiplierFactorNumericObj1 As New MultiplierFactorNumeric
            invoiceLinemultiplierFactorNumericObj1.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value
            invoiceLineallowanceChargeObj1.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj1)

            invoiceLineallowanceChargeObj1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim invoiceLineallowanceChargeReasonObj1 As New AllowanceChargeReason
            invoiceLineallowanceChargeReasonObj1.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value
            invoiceLineallowanceChargeObj1.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj1)

            invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj1)

            ' Second InvoiceLineAllowanceCharge
            Dim invoiceLineallowanceChargeObj2 As New InvoiceLineAllowanceCharge()

            invoiceLineallowanceChargeObj2.Amount = New List(Of Amount)
            Dim invoiceLineallowanceChargeAmountObj2 As New Amount
            invoiceLineallowanceChargeAmountObj2.value = InvoiceLine_AllowanceCharge2_Amount_value
            invoiceLineallowanceChargeAmountObj2.currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
            invoiceLineallowanceChargeObj2.Amount.Add(invoiceLineallowanceChargeAmountObj2)

            invoiceLineallowanceChargeObj2.ChargeIndicator = New List(Of ChargeIndicator)
            Dim invoiceLineallowanceChargeIndicatorObj2 As New ChargeIndicator
            invoiceLineallowanceChargeIndicatorObj2.value = InvoiceLine_AllowanceCharge2_ChargeIndicator
            invoiceLineallowanceChargeObj2.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj2)

            invoiceLineallowanceChargeObj2.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
            Dim invoiceLinemultiplierFactorNumericObj2 As New MultiplierFactorNumeric
            invoiceLinemultiplierFactorNumericObj2.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value
            invoiceLineallowanceChargeObj2.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj2)

            invoiceLineallowanceChargeObj2.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim invoiceLineallowanceChargeReasonObj2 As New AllowanceChargeReason
            invoiceLineallowanceChargeReasonObj2.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value
            invoiceLineallowanceChargeObj2.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj2)

            invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj2)

            ' ID
            invoiceLine.ID = New List(Of ID)
            Dim invoiceLineIDObj As New ID
            invoiceLineIDObj.Value = InvoiceLine_ID_value
            invoiceLine.ID.Add(invoiceLineIDObj)

            ' InvoicedQuantity
            invoiceLine.InvoicedQuantity = New List(Of InvoicedQuantity)
            Dim invoicedQuantityObj As New InvoicedQuantity
            invoicedQuantityObj.value = InvoiceLine_InvoicedQuantity_value
            invoicedQuantityObj.unitCode = InvoiceLine_InvoicedQuantity_unitCode
            invoiceLine.InvoicedQuantity.Add(invoicedQuantityObj)

            ' Item
            invoiceLine.Item = New List(Of Item)
            Dim itemObj As New Item

            ' CommodityClassification
            itemObj.CommodityClassification = New List(Of CommodityClassification)
            Dim invoiceLinecommodityClassificationObj As New CommodityClassification
            invoiceLinecommodityClassificationObj.ItemClassificationCode = New List(Of ItemClassificationCode)
            Dim invoiceLineitemClassificationCodeObj As New ItemClassificationCode
            invoiceLineitemClassificationCodeObj.value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value
            invoiceLineitemClassificationCodeObj.listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
            invoiceLinecommodityClassificationObj.ItemClassificationCode.Add(invoiceLineitemClassificationCodeObj)
            itemObj.CommodityClassification.Add(invoiceLinecommodityClassificationObj)

            ' Description
            itemObj.Description = New List(Of Description)
            Dim invoiceLinedescriptionObj As New Description
            invoiceLinedescriptionObj.Value = InvoiceLine_Item_Description_value
            itemObj.Description.Add(invoiceLinedescriptionObj)

            ' OriginCountry
            itemObj.OriginCountry = New List(Of OriginCountry)
            Dim invoiceLineoriginCountryObj As New OriginCountry
            invoiceLineoriginCountryObj.IdentificationCode = New List(Of IdentificationCodeID)
            Dim identificationCodeIDObj As New IdentificationCodeID
            identificationCodeIDObj.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value
            invoiceLineoriginCountryObj.IdentificationCode.Add(identificationCodeIDObj)
            itemObj.OriginCountry.Add(invoiceLineoriginCountryObj)

            invoiceLine.Item.Add(itemObj)

            ' ItemPriceExtension
            invoiceLine.ItemPriceExtension = New List(Of ItemPriceExtension)
            Dim invoiceLineitemPriceExtensionObj As New ItemPriceExtension
            invoiceLineitemPriceExtensionObj.Amount = New List(Of Amount)
            Dim invoiceLineitemPriceExtensionAmountObj As New Amount
            invoiceLineitemPriceExtensionAmountObj.value = InvoiceLine_ItemPriceExtension_Amount_value
            invoiceLineitemPriceExtensionAmountObj.currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
            invoiceLineitemPriceExtensionObj.Amount.Add(invoiceLineitemPriceExtensionAmountObj)
            invoiceLine.ItemPriceExtension.Add(invoiceLineitemPriceExtensionObj)

            ' LineExtensionAmount
            invoiceLine.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim invoiceLine_lineExtensionAmountObj As New LineExtensionAmount
            invoiceLine_lineExtensionAmountObj.value = InvoiceLine_LineExtensionAmount_value
            invoiceLine_lineExtensionAmountObj.currencyID = InvoiceLine_LineExtensionAmount_currencyID
            invoiceLine.LineExtensionAmount.Add(invoiceLine_lineExtensionAmountObj)

            ' Price
            invoiceLine.Price = New List(Of Price)
            Dim invoiceLinepriceObj As New Price
            invoiceLinepriceObj.PriceAmount = New List(Of PriceAmount)
            Dim invoiceLinepriceAmountObj As New PriceAmount
            invoiceLinepriceAmountObj.value = InvoiceLine_Price_PriceAmount_value
            invoiceLinepriceAmountObj.currencyID = InvoiceLine_Price_PriceAmount_currencyID
            invoiceLinepriceObj.PriceAmount.Add(invoiceLinepriceAmountObj)
            invoiceLine.Price.Add(invoiceLinepriceObj)

            ' TaxTotal
            invoiceLine.TaxTotal = New List(Of TaxTotal)
            Dim invoiceLinetaxTotalObj As New TaxTotal

            invoiceLinetaxTotalObj.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxTotalAmountObj As New TaxAmount
            invoiceLinetaxTotalAmountObj.value = InvoiceLine_TaxTotal_TaxAmount_value
            invoiceLinetaxTotalAmountObj.currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
            invoiceLinetaxTotalObj.TaxAmount.Add(invoiceLinetaxTotalAmountObj)

            invoiceLinetaxTotalObj.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim invoiceLinetaxSubtotalObj1 As New TaxSubtotal
            invoiceLinetaxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim invoiceLinetaxSubtotalTaxableAmountObj1 As New TaxableAmount
            invoiceLinetaxSubtotalTaxableAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value
            invoiceLinetaxSubtotalTaxableAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            invoiceLinetaxSubtotalObj1.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj1)

            invoiceLinetaxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxSubtotalTaxAmountObj1 As New TaxAmount
            invoiceLinetaxSubtotalTaxAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value
            invoiceLinetaxSubtotalTaxAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
            invoiceLinetaxSubtotalObj1.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj1)

            invoiceLinetaxSubtotalObj1.PerUnitAmount = New List(Of PerUnitAmount)
            Dim invoiceLineperUnitAmountObj1 As New PerUnitAmount
            invoiceLineperUnitAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value
            invoiceLineperUnitAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
            invoiceLinetaxSubtotalObj1.PerUnitAmount.Add(invoiceLineperUnitAmountObj1)

            invoiceLinetaxSubtotalObj1.BaseUnitMeasure = New List(Of BaseUnitMeasure)
            Dim invoiceLinebaseUnitMeasureObj1 As New BaseUnitMeasure
            invoiceLinebaseUnitMeasureObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value
            invoiceLinebaseUnitMeasureObj1.unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
            invoiceLinetaxSubtotalObj1.BaseUnitMeasure.Add(invoiceLinebaseUnitMeasureObj1)

            invoiceLinetaxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim invoiceLinetaxCategoryObj1 As New TaxCategory
            invoiceLinetaxCategoryObj1.ID = New List(Of ID)
            Dim invoiceLinetaxCategoryIDObj1 As New ID
            invoiceLinetaxCategoryIDObj1.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value
            invoiceLinetaxCategoryObj1.ID.Add(invoiceLinetaxCategoryIDObj1)

            invoiceLinetaxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim invoiceLinetaxSchemeObj1 As New TaxScheme
            invoiceLinetaxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim invoiceLinetaxSchemeIDObj1 As New TaxSchemeID
            invoiceLinetaxSchemeIDObj1.ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            invoiceLinetaxSchemeIDObj1.schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            invoiceLinetaxSchemeIDObj1.schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            invoiceLinetaxSchemeObj1.ID.Add(invoiceLinetaxSchemeIDObj1)
            invoiceLinetaxCategoryObj1.TaxScheme.Add(invoiceLinetaxSchemeObj1)

            invoiceLinetaxCategoryObj1.Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent
            invoiceLinetaxCategoryObj1.TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason

            invoiceLinetaxSubtotalObj1.TaxCategory.Add(invoiceLinetaxCategoryObj1)

            invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj1)

            ' Second TaxSubtotal
            Dim invoiceLinetaxSubtotalObj2 As New TaxSubtotal
            invoiceLinetaxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim invoiceLinetaxSubtotalTaxableAmountObj2 As New TaxableAmount
            invoiceLinetaxSubtotalTaxableAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value
            invoiceLinetaxSubtotalTaxableAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
            invoiceLinetaxSubtotalObj2.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj2)

            invoiceLinetaxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim invoiceLinetaxSubtotalTaxAmountObj2 As New TaxAmount
            invoiceLinetaxSubtotalTaxAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value
            invoiceLinetaxSubtotalTaxAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
            invoiceLinetaxSubtotalObj2.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj2)

            invoiceLinetaxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim invoiceLinetaxCategoryObj2 As New TaxCategory
            invoiceLinetaxCategoryObj2.ID = New List(Of ID)
            Dim invoiceLinetaxCategoryIDObj2 As New ID
            invoiceLinetaxCategoryIDObj2.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value
            invoiceLinetaxCategoryObj2.ID.Add(invoiceLinetaxCategoryIDObj2)

            invoiceLinetaxCategoryObj2.Percent = New List(Of Percent)
            Dim invoiceLinepercentObj As New Percent
            invoiceLinepercentObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent
            invoiceLinetaxCategoryObj2.Percent.Add(invoiceLinepercentObj)

            invoiceLinetaxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim invoiceLinetaxSchemeObj2 As New TaxScheme
            invoiceLinetaxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim invoiceLinetaxSchemeIDObj2 As New TaxSchemeID
            invoiceLinetaxSchemeIDObj2.ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            invoiceLinetaxSchemeIDObj2.schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            invoiceLinetaxSchemeIDObj2.schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            invoiceLinetaxSchemeObj2.ID.Add(invoiceLinetaxSchemeIDObj2)

            invoiceLinetaxCategoryObj2.TaxScheme.Add(invoiceLinetaxSchemeObj2)

            invoiceLinetaxCategoryObj2.TaxExemptionReason = New List(Of TaxExemptionReason)
            Dim invoiceLinetaxExemptionReasonObj As New TaxExemptionReason
            invoiceLinetaxExemptionReasonObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
            invoiceLinetaxCategoryObj2.TaxExemptionReason.Add(invoiceLinetaxExemptionReasonObj)

            invoiceLinetaxSubtotalObj2.TaxCategory.Add(invoiceLinetaxCategoryObj2)

            invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj2)

            invoiceLine.TaxTotal.Add(invoiceLinetaxTotalObj)

            ' Add the constructed invoiceLine to invoice.InvoiceLine
            invoice.InvoiceLine.Add(invoiceLine)

            'invoiceLine end

            'TaxExchangeRate start
            ' Initialize the TaxExchangeRate list
            invoice.TaxExchangeRate = New List(Of TaxExchangeRate)

            ' Create a new TaxExchangeRate object
            Dim taxExchangeRateObj As New TaxExchangeRate()

            ' Set SourceCurrencyCode
            taxExchangeRateObj.SourceCurrencyCode = New List(Of SourceCurrencyCode)
            Dim sourceCurrencyCodeObj As New SourceCurrencyCode
            sourceCurrencyCodeObj.value = TaxExchangeRate_SourceCurrencyCode_value
            taxExchangeRateObj.SourceCurrencyCode.Add(sourceCurrencyCodeObj)

            ' Set TargetCurrencyCode
            taxExchangeRateObj.TargetCurrencyCode = New List(Of TargetCurrencyCode)
            Dim targetCurrencyCodeObj As New TargetCurrencyCode
            targetCurrencyCodeObj.value = TaxExchangeRate_TargetCurrencyCode_value
            taxExchangeRateObj.TargetCurrencyCode.Add(targetCurrencyCodeObj)

            ' Set CalculationRate
            taxExchangeRateObj.CalculationRate = New List(Of CalculationRate)
            Dim calculationRateObj As New CalculationRate
            calculationRateObj.value = TaxExchangeRate_CalculationRate_value
            taxExchangeRateObj.CalculationRate.Add(calculationRateObj)


            ' Add the configured TaxExchangeRate object to invoice.TaxExchangeRate
            invoice.TaxExchangeRate.Add(taxExchangeRateObj)

            'TaxExchangeRate end
            InsertIntoTblWebEventLog("AssignJsonvalue28", invoiceNumber, test1.ToString, Session("UserID").ToString)

            invoiceWrapper.Invoice.Add(invoice)
            InsertIntoTblWebEventLog("AssignJsonvalue29", invoiceNumber, test1.ToString, Session("UserID").ToString)


            Dim settings As New JsonSerializerSettings With {
                .NullValueHandling = NullValueHandling.Ignore,
                .ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
            .ContractResolver = New CustomResolver()
               }



            InsertIntoTblWebEventLog("AssignJsonvalue30", invoiceNumber, test1.ToString, Session("UserID").ToString)


            Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)
            InsertIntoTblWebEventLog("AssignJsonvalue31", invoiceNumber, test1.ToString, Session("UserID").ToString)

            Return json
        Catch ex As Exception
            InsertIntoTblWebEventLog("AssignJsonvalue", "Exception", ex.Message.ToString, Session("UserID").ToString)
            lblAlert.Text = ex.Message.ToString

        End Try
    End Function


    Public Shared Function AssignJsonvalue1()
        Dim invoiceWrapper As New InvoiceWrapper()

        Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
        Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
        Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

        Dim test1 = DateTime.UtcNow.Date
        Dim test = DateTime.UtcNow.TimeOfDay


        Dim invoiceID = "CI6210502939008" 'for testing manually add this. want to change this and submit document method also need to change
        Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
        Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
        Dim InvoiceTypeCode = "01"
        'Dim InvoiceListVersionID = "1.0"
        Dim InvoiceListVersionID = "1.1"
        Dim DocumentCurrencyCode = "MYR"
        Dim periodStartDate = "2024-11-10"
        Dim periodEndDate = "2024-12-10"
        Dim periodDescription = "Monthly"
        Dim BillingAdditionalDocumentReferenceID = " "
        Dim AdditionalDocumentReferenceID = ""

        ' for AccountingSupplierParty
        Dim AccountingSupplierParty_AdditionalAccountID = ""
        Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
        Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
        Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
        Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
        Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
        Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
        Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
        Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
        Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
        Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
        Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
        Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
        Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"

        ' for AccountingCustomerParty
        'For ConsolidatedInvoice "EI00000000010" value for same in all Buyer. In standard It different
        Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "EI00000000010"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"

        'For ConsolidatedInvoice PartyIdentification ID is NA value. In standard It different
        Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "NA"

        '  Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
        Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
        Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
        Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
        Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
        Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
        Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"

        'For ConsolidatedInvoice Contact ID is NA value. In standard It different
        Dim AccountingCustomerParty_Party_Contact_Telephone = "NA"
        Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "NA"

        'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
        'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"

        'for Delivery DeliveryParty
        Dim DeliveryParty_LegalEntity_RegistrationName = ""
        Dim DeliveryParty_PostalAddress_CityName = ""
        Dim DeliveryParty_PostalAddress_PostalZone = ""
        Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
        Dim DeliveryParty_PostalAddress_AddressLine1 = ""
        Dim DeliveryParty_PostalAddress_AddressLine2 = ""
        Dim DeliveryParty_PostalAddress_AddressLine3 = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
        Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
        Dim DeliveryParty_PartyIdentification_ID = ""
        Dim DeliveryParty_PartyIdentification_schemeID = ""

        'for Delivery Shipment
        Dim Delivery_Shipment_ID = ""
        Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
        Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
        Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
        Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = "MYR"

        'for paymentMeans
        Dim paymentMeans_PaymentMeansCode_value = "01"
        Dim paymentMeans_PayeeFinancialAccount_value = ""

        'for paymentTerm
        Dim paymentTerms_Note_value = ""

        'for prepaidPayment
        Dim prepaidPayment_ID = ""
        Dim prepaidPayment_PaidAmount_value = 0
        Dim prepaidPayment_PaidAmount_currencyID = "MYR"
        Dim prepaidPayment_PaidDate = ""
        Dim prepaidPayment_PaidTime_value = ""

        'for AllowanceCharge 
        Dim AllowanceCharge_ChargeIndicator = True
        Dim AllowanceCharge_AllowanceChargeReason_value = ""
        Dim AllowanceCharge_Amount_value = 0
        Dim AllowanceCharge_Amount_currencyID = "MYR"

        'for AllowanceCharge 1
        Dim AllowanceCharge_ChargeIndicator_1 = False
        Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
        Dim AllowanceCharge_Amount_value_1 = 0
        Dim AllowanceCharge_Amount_currencyID_1 = "MYR"

        'for TaxTotal
        Dim TaxTotal_TaxAmount_value = 10
        Dim TaxTotal_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
        Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxAmount_value = 10
        Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

        Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 2000D
        Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 20D
        Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = "MYR"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

        'for LegalMonetaryTotal 
        Dim LegalMonetaryTotal_LineExtensionAmount_value = 3000
        Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_TaxExclusiveAmount_value = 3000
        Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_TaxInclusiveAmount_value = 3010
        Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
        Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
        Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_PayableAmount_value = 3010
        Dim LegalMonetaryTotal_PayableAmount_currencyID = "MYR"
        Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
        Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = "MYR"

        'for InvoiceLine 
        Dim InvoiceLine_AllowanceCharge_Amount_value = 0
        Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
        Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
        Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
        Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

        Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
        Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
        Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
        Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
        Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

        Dim InvoiceLine_ID_value = "1"
        Dim InvoiceLine_InvoicedQuantity_value = 3
        Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

        'For ConsolidatedInvoice ItemClassificationCode is 004. in Standard is 035
        'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
        Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "004"

        'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
        Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
        Dim InvoiceLine_Item_Description_value = "Pest control"
        Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

        Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
        Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

        Dim InvoiceLine_LineExtensionAmount_value = 3000
        Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

        Dim InvoiceLine_Price_PriceAmount_value = 1000
        Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
        Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
        Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
        Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
        Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

        'for TaxExchangeRate
        Dim TaxExchangeRate_SourceCurrencyCode_value = "MYR"
        Dim TaxExchangeRate_TargetCurrencyCode_value = "MYR"
        Dim TaxExchangeRate_CalculationRate_value = 0


        invoiceWrapper._D = invoiceDetails_D
        invoiceWrapper._A = invoiceDetails_A
        invoiceWrapper._B = invoiceDetails_B

        invoiceWrapper.Invoice = New List(Of Invoice)()

        Dim invoice As New Invoice()

        invoice.ID = New List(Of ID)() From {
            New ID() With {.Value = invoiceID}
        }
        invoice.IssueDate = New List(Of IssueDate)() From {
            New IssueDate() With {.Value = IssueDate}
        }
        invoice.IssueTime = New List(Of IssueTime)() From {
            New IssueTime() With {.Value = IssueTime}
        }
        invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)() From {
            New InvoiceTypeCode() With {.Value = InvoiceTypeCode, .ListVersionID = InvoiceListVersionID}
        }
        invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)() From {
            New DocumentCurrencyCode() With {.Value = DocumentCurrencyCode}
        }

        invoice.InvoicePeriod = New List(Of InvoicePeriod)()

        Dim period As New InvoicePeriod()
        period.StartDate = New List(Of StartDate)() From {
            New StartDate() With {.Value = periodStartDate}
        }
        period.EndDate = New List(Of EndDate)() From {
            New EndDate() With {.Value = periodEndDate}
        }
        period.Description = New List(Of Description)() From {
            New Description() With {.Value = periodDescription}
        }
        invoice.InvoicePeriod.Add(period)

        invoice.BillingReference = New List(Of BillingReference)

        Dim BillingAdditionalDocumentReference As New BillingReference With {
            .AdditionalDocumentReference = New List(Of AdditionalDocumentReference) From {
                New AdditionalDocumentReference With {
                .ID = New List(Of ID)() From {
                        New ID() With {.Value = BillingAdditionalDocumentReferenceID}
                    }
                }
            }
        }

        invoice.BillingReference.Add(BillingAdditionalDocumentReference)

        'AdditionalDocumentReference start

        invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

        Dim AdditionalDocumentReference1 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference2 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference3 As New AdditionalDocumentReference()
        Dim AdditionalDocumentReference4 As New AdditionalDocumentReference()

        AdditionalDocumentReference1.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference2.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference3.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }
        AdditionalDocumentReference4.ID = New List(Of ID)() From {
            New ID() With {.Value = AdditionalDocumentReferenceID}
        }

        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference1)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference2)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference3)
        invoice.AdditionalDocumentReference.Add(AdditionalDocumentReference4)

        'AdditionalDocumentReference end

        ' AccountingSupplierParty start

        invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

        Dim supplier As New AccountingSupplierParty With {
            .AdditionalAccountID = New List(Of AdditionalAccountID) From {
                New AdditionalAccountID With {
                    .value = AccountingSupplierParty_AdditionalAccountID,
                    .schemeAgencyName = AccountingSupplierParty_schemeAgencyName
                }
            },
            .Party = New List(Of Party) From {
                New Party With {
                    .IndustryClassificationCode = New List(Of IndustryClassificationCode) From {
                        New IndustryClassificationCode With {
                            .value = AccountingSupplierParty_Party_IndustryClassificationCode_value,
                            .name = AccountingSupplierParty_Party_IndustryClassificationCode_name
                        }
                    },
                    .PartyIdentification = New List(Of PartyIdentification) From {
                            New PartyIdentification With {
                                .ID = New List(Of PartyIdentificationID) From {
                                    New PartyIdentificationID With {
                                        .ID = AccountingSupplierParty_Party_PartyIdentification_ID1,
                                        .schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
                                    }
                                }
                            },
                             New PartyIdentification With {
                                .ID = New List(Of PartyIdentificationID) From {
                                    New PartyIdentificationID With {
                                        .ID = AccountingSupplierParty_Party_PartyIdentification_ID2,
                                        .schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
                                    }
                                }
                            }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = AccountingSupplierParty_Party_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = AccountingSupplierParty_Party_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                            .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value,
                                            .listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName}
                            }
                        }
                    },
                    .Contact = New List(Of Contact) From {
                        New Contact With {
                            .Telephone = New List(Of Telephone) From {
                                New Telephone With {.value = AccountingSupplierParty_Party_Contact_Telephone}
                            },
                            .ElectronicMail = New List(Of ElectronicMail) From {
                                New ElectronicMail With {.value = AccountingSupplierParty_Party_Contact_ElectronicMail}
                            }
                        }
                    }
                }
            }
        }

        invoice.AccountingSupplierParty.Add(supplier)


        ' AccountingSupplierParty end

        ' AccountingCustomerParty start

        invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

        Dim customer As New AccountingCustomerParty With {
            .Party = New List(Of Party) From {
                New Party With {
                    .IndustryClassificationCode = Nothing,
                    .PartyIdentification = New List(Of PartyIdentification) From {
                        New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID1,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
                                }
                            }
                        },
                         New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID2,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
                                }
                            }
                        },
                         New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                   .ID = AccountingCustomerParty_Party_PartyIdentification_ID3,
                                   .schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
                                }
                            }
                        }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = AccountingCustomerParty_Party_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = AccountingCustomerParty_Party_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                            .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value,
                                            .listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName}
                            }
                        }
                    },
                    .Contact = New List(Of Contact) From {
                        New Contact With {
                            .Telephone = New List(Of Telephone) From {
                                New Telephone With {.value = AccountingCustomerParty_Party_Contact_Telephone}
                            },
                           .ElectronicMail = New List(Of ElectronicMail) From {
                                New ElectronicMail With {.value = AccountingCustomerParty_Party_Contact_ElectronicMail}
                            }
                        }
                    }
                }
            }
        }

        invoice.AccountingCustomerParty.Add(customer)

        ' AccountingCustomerParty end

        ' delivery start
        invoice.Delivery = New List(Of Delivery)


        Dim delivery As New Delivery With {
            .DeliveryParty = New List(Of DeliveryParty) From {
                New DeliveryParty With {
                    .PartyLegalEntity = New List(Of PartyLegalEntity) From {
                        New PartyLegalEntity With {
                            .RegistrationName = New List(Of RegistrationName) From {
                                New RegistrationName With {.value = DeliveryParty_LegalEntity_RegistrationName}
                            }
                        }
                    },
                    .PostalAddress = New List(Of PostalAddress) From {
                        New PostalAddress With {
                            .CityName = New List(Of CityName) From {
                                New CityName With {.value = DeliveryParty_PostalAddress_CityName}
                            },
                            .PostalZone = New List(Of PostalZone) From {
                                New PostalZone With {.value = DeliveryParty_PostalAddress_PostalZone}
                            },
                            .CountrySubentityCode = New List(Of CountrySubentityCode) From {
                                New CountrySubentityCode With {.value = DeliveryParty_PostalAddress_CountrySubentityCode}
                            },
                            .AddressLine = New List(Of AddressLine) From {
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine1}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine2}
                                    }
                                },
                                New AddressLine With {
                                    .Line = New List(Of Line) From {
                                        New Line With {.value = DeliveryParty_PostalAddress_AddressLine3}
                                    }
                                }
                            },
                           .Country = New List(Of Country) From {
                                New Country With {
                                    .IdentificationCode = New List(Of IdentificationCode) From {
                                        New IdentificationCode With {
                                            .value = DeliveryParty_PostalAddress_Country_IdentificationCode_value,
                                            .listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID,
                                            .listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
                                        }
                                    }
                                }
                            }
                        }
                    },
                    .PartyIdentification = New List(Of PartyIdentification) From {
                        New PartyIdentification With {
                            .ID = New List(Of PartyIdentificationID) From {
                                New PartyIdentificationID With {
                                    .ID = DeliveryParty_PartyIdentification_ID,
                                    .schemeID = DeliveryParty_PartyIdentification_schemeID
                                }
                            }
                        }
                    }
                }
            },
            .Shipment = New List(Of Shipment) From {
                    New Shipment With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = Delivery_Shipment_ID}
                                    },
                                    .FreightAllowanceCharge = New List(Of FreightAllowanceCharge) From {
                                        New FreightAllowanceCharge With {
                                            .ChargeIndicator = New List(Of ChargeIndicator) From {
                                                New ChargeIndicator With {.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator}
                                            },
                                           .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                                                New AllowanceChargeReason With {.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason}
                                            },
                                            .Amount = New List(Of Amount) From {
                                                New Amount With {
                                                    .value = Delivery_Shipment_FreightAllowanceCharge_Amount_value,
                                                    .currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
                                                }
                                            }
                                        }
                                     }
                        }
            }
        }

        invoice.Delivery.Add(delivery)

        ' delivery End

        'paymentMeans start

        invoice.PaymentMeans = New List(Of PaymentMeans)


        Dim paymentMeans As New PaymentMeans With {
            .PaymentMeansCode = New List(Of PaymentMeansCode) From {
                New PaymentMeansCode With {.value = paymentMeans_PaymentMeansCode_value}
            },
            .PayeeFinancialAccount = New List(Of PayeeFinancialAccount) From {
                New PayeeFinancialAccount With {
                    .ID = New List(Of ID) From {
                        New ID With {.Value = paymentMeans_PayeeFinancialAccount_value}
                    }
                }
            }
        }

        invoice.PaymentMeans.Add(paymentMeans)

        'paymentMeans end

        'paymentTerms start

        invoice.PaymentTerms = New List(Of PaymentTerms)

        Dim paymentTerms As New PaymentTerms With {
            .Note = New List(Of Note) From {
                New Note With {.value = paymentTerms_Note_value}
            }
        }
        invoice.PaymentTerms.Add(paymentTerms)
        'paymentTerms end

        'prepaidPayment start
        invoice.PrepaidPayment = New List(Of PrepaidPayment)


        Dim prepaidPayment As New PrepaidPayment With {
            .ID = New List(Of ID) From {
                New ID With {.Value = prepaidPayment_ID}
            },
            .PaidAmount = New List(Of PaidAmount) From {
                New PaidAmount With {.value = prepaidPayment_PaidAmount_value, .currencyID = prepaidPayment_PaidAmount_currencyID}
            },
            .PaidDate = New List(Of PaidDate) From {
                New PaidDate With {.value = prepaidPayment_PaidDate}
            },
            .PaidTime = New List(Of PaidTime) From {
                New PaidTime With {.value = prepaidPayment_PaidTime_value}
            }
        }

        invoice.PrepaidPayment.Add(prepaidPayment)
        'prepaidPayment end

        'need to check this
        invoice.AllowanceCharge = New List(Of AllowanceCharge)

        Dim allowanceCharge As New AllowanceCharge With {
            .ChargeIndicator = New List(Of ChargeIndicator) From {
                New ChargeIndicator With {.value = AllowanceCharge_ChargeIndicator}
            },
            .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                New AllowanceChargeReason With {.value = AllowanceCharge_AllowanceChargeReason_value}
            },
            .Amount = New List(Of Amount) From {
                New Amount With {.value = AllowanceCharge_Amount_value, .currencyID = AllowanceCharge_Amount_currencyID}
            }
        }

        Dim allowanceCharge1 As New AllowanceCharge With {
            .ChargeIndicator = New List(Of ChargeIndicator) From {
                New ChargeIndicator With {.value = AllowanceCharge_ChargeIndicator_1}
            },
            .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                New AllowanceChargeReason With {.value = AllowanceCharge_AllowanceChargeReason_value_1}
            },
            .Amount = New List(Of Amount) From {
                New Amount With {.value = AllowanceCharge_Amount_value_1, .currencyID = AllowanceCharge_Amount_currencyID_1}
            }
        }

        invoice.AllowanceCharge.Add(allowanceCharge)
        invoice.AllowanceCharge.Add(allowanceCharge1)
        'allowanceCharge end

        'TaxTotal start
        invoice.TaxTotal = New List(Of TaxTotal)


        Dim taxTotal As New TaxTotal With {
            .TaxAmount = New List(Of TaxAmount) From {
                New TaxAmount With {.value = TaxTotal_TaxAmount_value, .currencyID = TaxTotal_TaxAmount_currencyID}
            },
            .TaxSubtotal = New List(Of TaxSubtotal) From {
                New TaxSubtotal With {
                    .TaxableAmount = New List(Of TaxableAmount) From {
                        New TaxableAmount With {.value = TaxTotal_TaxSubtotal_TaxableAmount_value, .currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID}
                    },
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {.value = TaxTotal_TaxSubtotal_TaxAmount_value, .currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID}
                    },
                    .TaxCategory = New List(Of TaxCategory) From {
                        New TaxCategory With {
                            .ID = New List(Of ID) From {
                                New ID With {.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value}
                            },
                            .TaxScheme = New List(Of TaxScheme) From {
                                New TaxScheme With {
                                    .ID = New List(Of TaxSchemeID) From {
                                        New TaxSchemeID With {
                                            .ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                            .schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID,
                                            .schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                                        }
                                    }
                                }
                            },
                            .Percent = Nothing,
                            .TaxExemptionReason = Nothing
                        }
                    },
                    .BaseUnitMeasure = Nothing,
                    .PerUnitAmount = Nothing
                },
                 New TaxSubtotal With {
                     .TaxableAmount = New List(Of TaxableAmount) From {
                        New TaxableAmount With {
                            .value = TaxTotal_TaxSubtotal2_TaxableAmount_value,
                            .currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
                        }
                    },
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {
                            .value = TaxTotal_TaxSubtotal2_TaxAmount_value,
                            .currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
                        }
                    },
                    .TaxCategory = New List(Of TaxCategory) From {
                        New TaxCategory With {
                            .ID = New List(Of ID) From {
                                New ID With {.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value}
                            },
                            .TaxScheme = New List(Of TaxScheme) From {
                                New TaxScheme With {
                                    .ID = New List(Of TaxSchemeID) From {
                                        New TaxSchemeID With {
                                            .ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value,
                                            .schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID,
                                            .schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
                                        }
                                    }
                                }
                            },
                            .Percent = Nothing,
                            .TaxExemptionReason = Nothing
                        }
                    },
                    .BaseUnitMeasure = Nothing,
                    .PerUnitAmount = Nothing
                }
            }
        }

        invoice.TaxTotal.Add(taxTotal)
        'TaxTotal end


        'LegalMonetaryTotal start
        invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)



        Dim legalMonetaryTotal As New LegalMonetaryTotal With {
        .LineExtensionAmount = New List(Of LineExtensionAmount) From {
                New LineExtensionAmount With {
                     .value = LegalMonetaryTotal_LineExtensionAmount_value,
                     .currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
                }
            },
            .TaxExclusiveAmount = New List(Of TaxExclusiveAmount) From {
                New TaxExclusiveAmount With {
                     .value = LegalMonetaryTotal_TaxExclusiveAmount_value,
                     .currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
                }
            },
            .TaxInclusiveAmount = New List(Of TaxInclusiveAmount) From {
                New TaxInclusiveAmount With {
                     .value = LegalMonetaryTotal_TaxInclusiveAmount_value,
                    .currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
                }
            },
            .AllowanceTotalAmount = New List(Of AllowanceTotalAmount) From {
                New AllowanceTotalAmount With {
                       .value = LegalMonetaryTotal_AllowanceTotalAmount_value,
                       .currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
                }
            },
            .ChargeTotalAmount = New List(Of ChargeTotalAmount) From {
                New ChargeTotalAmount With {
                     .value = LegalMonetaryTotal_ChargeTotalAmount_value,
                     .currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
                }
            },
            .PayableAmount = New List(Of PayableAmount) From {
                New PayableAmount With {
                     .value = LegalMonetaryTotal_PayableAmount_value,
                     .currencyID = LegalMonetaryTotal_PayableAmount_currencyID
                }
            },
            .PayableRoundingAmount = New List(Of PayableRoundingAmount) From {
                New PayableRoundingAmount With {
                     .value = LegalMonetaryTotal_PayableRoundingAmount_value,
                     .currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
                }
            }
        }

        invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)
        'LegalMonetaryTotal end


        'InvoiceLine start
        invoice.InvoiceLine = New List(Of InvoiceLine)



        Dim invoiceLine As New InvoiceLine With {
            .AllowanceCharge = New List(Of InvoiceLineAllowanceCharge) From {
                New InvoiceLineAllowanceCharge With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_AllowanceCharge_Amount_value,
                            .currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
                        }
                    },
                    .ChargeIndicator = New List(Of ChargeIndicator) From {
                        New ChargeIndicator With {.value = InvoiceLine_AllowanceCharge_ChargeIndicator}
                    },
                    .MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric) From {
                        New MultiplierFactorNumeric With {.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value}
                    },
                    .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                        New AllowanceChargeReason With {.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value}
                    }
                },
                New InvoiceLineAllowanceCharge With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_AllowanceCharge2_Amount_value,
                            .currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
                        }
                    },
                    .ChargeIndicator = New List(Of ChargeIndicator) From {
                        New ChargeIndicator With {.value = InvoiceLine_AllowanceCharge2_ChargeIndicator}
                    },
                    .MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric) From {
                        New MultiplierFactorNumeric With {.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value}
                    },
                    .AllowanceChargeReason = New List(Of AllowanceChargeReason) From {
                        New AllowanceChargeReason With {.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value}
                    }
                }
            },
            .ID = New List(Of ID) From {New ID With {.Value = InvoiceLine_ID_value}},
            .InvoicedQuantity = New List(Of InvoicedQuantity) From {
                New InvoicedQuantity With {
                    .value = InvoiceLine_InvoicedQuantity_value,
                    .unitCode = InvoiceLine_InvoicedQuantity_unitCode
                }
            },
            .Item = New List(Of Item) From {
                New Item With {
                    .CommodityClassification = New List(Of CommodityClassification) From {
                        New CommodityClassification With {
                            .ItemClassificationCode = New List(Of ItemClassificationCode) From {
                                New ItemClassificationCode With {
                                     .value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value,
                                     .listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
                                }
                            }
                        }
                    },
                    .Description = New List(Of Description) From {
                        New Description With {.Value = InvoiceLine_Item_Description_value}
                    },
                    .OriginCountry = New List(Of OriginCountry) From {
                        New OriginCountry With {
                            .IdentificationCode = New List(Of IdentificationCodeID) From {
                                New IdentificationCodeID With {.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value}
                            }
                        }
                    }
                }
            },
            .ItemPriceExtension = New List(Of ItemPriceExtension) From {
                New ItemPriceExtension With {
                    .Amount = New List(Of Amount) From {
                        New Amount With {
                            .value = InvoiceLine_ItemPriceExtension_Amount_value,
                            .currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
                        }
                    }
                }
            },
            .LineExtensionAmount = New List(Of LineExtensionAmount) From {
                New LineExtensionAmount With {
                     .value = InvoiceLine_LineExtensionAmount_value,
                     .currencyID = InvoiceLine_LineExtensionAmount_currencyID
                }
            },
            .Price = New List(Of Price) From {
                New Price With {
                    .PriceAmount = New List(Of PriceAmount) From {
                        New PriceAmount With {
                             .value = InvoiceLine_Price_PriceAmount_value,
                            .currencyID = InvoiceLine_Price_PriceAmount_currencyID
                        }
                    }
                }
            },
            .TaxTotal = New List(Of TaxTotal) From {
                New TaxTotal With {
                    .TaxAmount = New List(Of TaxAmount) From {
                        New TaxAmount With {
                             .value = InvoiceLine_TaxTotal_TaxAmount_value,
                            .currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
                        }
                    },
                    .TaxSubtotal = New List(Of TaxSubtotal) From {
                        New TaxSubtotal With {
                            .TaxableAmount = New List(Of TaxableAmount) From {
                                New TaxableAmount With {
                                     .value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
                                }
                            },
                            .TaxAmount = New List(Of TaxAmount) From {
                                New TaxAmount With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
                                }
                            },
                            .PerUnitAmount = New List(Of PerUnitAmount) From {
                                New PerUnitAmount With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
                                }
                            },
                            .BaseUnitMeasure = New List(Of BaseUnitMeasure) From {
                                New BaseUnitMeasure With {
                                    .value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value,
                                    .unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
                                }
                            },
                            .TaxCategory = New List(Of TaxCategory) From {
                                New TaxCategory With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value}
                                    },
                                    .TaxScheme = New List(Of TaxScheme) From {
                                        New TaxScheme With {
                                            .ID = New List(Of TaxSchemeID) From {
                                                New TaxSchemeID With {
                                                    .ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                                    .schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID,
                                                    .schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                                                }
                                            }
                                        }
                                    },
                                    .Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent,
                                    .TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
                                }
                            }
                        },
                        New TaxSubtotal With {
                            .TaxableAmount = New List(Of TaxableAmount) From {
                                New TaxableAmount With {
                                    .value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
                                }
                            },
                            .TaxAmount = New List(Of TaxAmount) From {
                                New TaxAmount With {
                                    .value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value,
                                    .currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
                                }
                            },
                            .TaxCategory = New List(Of TaxCategory) From {
                                New TaxCategory With {
                                    .ID = New List(Of ID) From {
                                        New ID With {.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value}
                                    },
                                    .Percent = New List(Of Percent) From {
                                            New Percent With {.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent}
                                    },
                                    .TaxScheme = New List(Of TaxScheme) From {
                                    New TaxScheme With {
                                            .ID = New List(Of TaxSchemeID) From {
                                                New TaxSchemeID With {
                                                    .ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value,
                                                    .schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID,
                                                    .schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                                                }
                                            }
                                    }
                                    },
                                     .TaxExemptionReason = New List(Of TaxExemptionReason) From {
                                            New TaxExemptionReason With {.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason}
                                     }
                                }
                            }
                        }
                    }
                }
            }
        }

        invoice.InvoiceLine.Add(invoiceLine)
        'invoiceLine end

        'TaxExchangeRate start
        invoice.TaxExchangeRate = New List(Of TaxExchangeRate)



        Dim TaxExchangeRate As New TaxExchangeRate With {
            .SourceCurrencyCode = New List(Of SourceCurrencyCode) From {
                New SourceCurrencyCode With {.value = TaxExchangeRate_SourceCurrencyCode_value}
            },
            .TargetCurrencyCode = New List(Of TargetCurrencyCode) From {
                New TargetCurrencyCode With {.value = TaxExchangeRate_TargetCurrencyCode_value}
            },
            .CalculationRate = New List(Of CalculationRate) From {
                New CalculationRate With {.value = TaxExchangeRate_CalculationRate_value}
            }
        }

        invoice.TaxExchangeRate.Add(TaxExchangeRate)
        'TaxExchangeRate end


        invoiceWrapper.Invoice.Add(invoice)


        Dim settings As New JsonSerializerSettings With {
            .NullValueHandling = NullValueHandling.Ignore
        }
        Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)

        Return json

    End Function

    'For submit document
    Private Shared Function HexStringToByteArray(ByVal hex As String) As Byte()
        Dim length As Integer = hex.Length
        Dim bytes As Byte() = New Byte(length / 2 - 1) {}

        For i As Integer = 0 To length - 1 Step 2
            bytes(i / 2) = Convert.ToByte(hex.Substring(i, 2), 16)
        Next

        Return bytes
    End Function


    Protected Function ValiDateTin(TinNumber As String, idType As String, idvalue As String) As Boolean

        Dim tokenno As String = ""
        tokenno = AccessToken
        '  tokenno = GetToken()
        InsertIntoTblWebEventLog("TIN1", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        Dim values As String = TinNumber + "?idType=" + idType + "&idValue= " + idvalue
        Dim apivalidateTinURL = ConfigurationManager.AppSettings.[Get]("apivalidateTin")
        Using client = New HttpClient()
            If Not String.IsNullOrWhiteSpace(tokenno) Then

                client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
                Dim apivalidateTinurlPath As String = apivalidateTinURL & "/" & values
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apivalidateTinurlPath).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                If response.IsSuccessStatusCode Then
                    Return True
                End If

            End If
        End Using

        Return False

    End Function


    'Protected Function SearchTin(TaxPayerName As String, idType As String, idvalue As String) As Boolean

    '    Dim tokenno As String = ""
    '    tokenno = AccessToken
    '    '  tokenno = GetToken()
    '    InsertIntoTblWebEventLog("TIN1", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

    '    Dim values As String = "tin?idType=" + idType + "&idValue= " + idvalue + "&taxpayername= " + TaxPayerName
    '    Dim apiSearchTinURL = ConfigurationManager.AppSettings.[Get]("apiSearchTin")
    '    Using client = New HttpClient()
    '        If Not String.IsNullOrWhiteSpace(tokenno) Then

    '            client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
    '            Dim apiSearchTinurlPath As String = apiSearchTinURL & "/" & values
    '            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '            Dim response As HttpResponseMessage = client.GetAsync(apiSearchTinurlPath).Result
    '            Dim responseString = response.Content.ReadAsStringAsync().Result

    '            If response.IsSuccessStatusCode Then
    '                Return True
    '            End If

    '        End If
    '    End Using

    '    Return False

    'End Function


    Private Function RetrieveCompanyInfoTable(conn As MySqlConnection) As DataTable
        Try
            'Dim Command As MySqlCommand = New MySqlCommand

            'Command.CommandType = CommandType.Text
            'Command.CommandText = "SELECT *,AccountName as CompanyName FROM tbllocation where locationid = @location;"
            'Command.Parameters.AddWithValue("@location", txtLocation.Text)
            'Command.Connection = conn

            'Dim dr As MySqlDataReader = Command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    Return dt
            'Else
            Dim Command1 As MySqlCommand = New MySqlCommand

            Command1.CommandType = CommandType.Text
            Command1.CommandText = "SELECT * FROM tblcompanyinfo where rcno=1;"
            Command1.Connection = conn

            Dim dr1 As MySqlDataReader = Command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                Return dt1

            End If
            '  End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveCompanyInfoTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveEInvoiceMalaysiaCodeTable(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Command.CommandText = "SELECT * FROM tbleinvoicemalaysiasicode where rcno=1;"
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveEInvoiceMalaysiaCodeTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function


    Private Function RetrieveCustomerTable(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""
            InsertIntoTblWebEventLog("RetrieveCustomerTable", "ContactType", txtAccountType.Text, Session("UserID").ToString)

            ' If ddlContactType.SelectedIndex = 0 Then
            If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then

                qry = "SELECT AccountID,Name,Name2,RocNos,TaxIdentificationNo,SalesTaxRegistrationNo,Address1,AddStreet,AddBuilding,"
                qry = qry + "AddState,AddCity,AddCountry,AddPostal,Telephone,Mobile,Email,TaxIdentificationNo,SalesTaxRegistrationNo,RocNos FROM tblcompany where accountid=@accountid;"

                '  ElseIf ddlContactType.SelectedIndex = 1 Then
            ElseIf txtAccountType.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then

                qry = "SELECT AccountID,Name,Name2,TaxIdentificationNo,NRIC,SalesTaxRegistrationNo,Address1,AddStreet,AddBuilding,"
                qry = qry + "AddState,AddCity,AddCountry,AddPostal,TelHome as Telephone,TelMobile as Mobile,Email,TaxIdentificationNo,SalesTaxRegistrationNo FROM tblPERSON where accountid=@accountid;"
            End If
            Command.CommandText = qry
            Command.Parameters.AddWithValue("@accountid", txtAccountIdBilling.Text)
            Command.Connection = conn
            InsertIntoTblWebEventLog("RetrieveCustomerTable1", txtAccountIdBilling.Text, "", Session("UserID").ToString)

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                InsertIntoTblWebEventLog("RetrieveCustomerTable2", dt.Rows.Count.ToString, "", Session("UserID").ToString)

                Return dt
            Else
                InsertIntoTblWebEventLog("RetrieveCustomerTable3", txtAccountIdBilling.Text, "", Session("UserID").ToString)

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveCustomerTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveSalesTable(conn As MySqlConnection, InvoiceNumber As String) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""

            qry = "SELECT InvoiceNumber,SalesDate,CreatedOn,Currency,GlPeriod,AccountId,CustAddPostal,CustAddCity,"
            qry = qry + "BillAddress1, BillBuilding, BillCity, BillCountry, BillStreet, BillPostal, Comments, Terms, GstBase, ExchangeRate,"
            qry = qry + "ValueBase,AppliedBase,SalesTaxRegistrationNo,TaxIdentificationNo,Description"
            qry = qry + " FROM tblsales where invoicenumber=@invoicenumber;"


            Command.CommandText = qry
            Command.Parameters.AddWithValue("@invoicenumber", InvoiceNumber)
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSalesTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try


    End Function

    Private Function RetrieveSetUpInfo(conn As MySqlConnection) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Command.CommandText = "SELECT ARCurrency,EInvClassificationCode,EInvClassificationDesc FROM tblservicerecordmastersetup where rcno=1;"
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSetUpInfo", ex.Message.ToString, "", Session("UserID").ToString)

        End Try

    End Function

    Private Function RetrieveSalesDetailTable(conn As MySqlConnection, InvoiceNumber As String) As DataTable
        Try
            Dim Command As MySqlCommand = New MySqlCommand

            Command.CommandType = CommandType.Text
            Dim qry As String = ""

            qry = "SELECT *"
            qry = qry + " FROM tblsalesdetail where invoicenumber=@invoicenumber;"


            Command.CommandText = qry
            Command.Parameters.AddWithValue("@invoicenumber", InvoiceNumber)
            Command.Connection = conn

            Dim dr As MySqlDataReader = Command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                Return dt

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("RetrieveSalesDetailTable", ex.Message.ToString, "", Session("UserID").ToString)

        End Try
    End Function

    'Private Function RetrieveContractInfo(conn As MySqlConnection, ContractNo As String) As DataTable
    '    Try
    '        Dim Command As MySqlCommand = New MySqlCommand

    '        Command.CommandType = CommandType.Text
    '        Dim qry As String = ""

    '        qry = "SELECT *"
    '        qry = qry + " FROM tblcontract where contractno=@contractno;"


    '        Command.CommandText = qry
    '        Command.Parameters.AddWithValue("@contractno", ContractNo)
    '        Command.Connection = conn

    '        Dim dr As MySqlDataReader = Command.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            Return dt

    '        End If
    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("RetrieveContractInfo", ex.Message.ToString, "", Session("UserID").ToString)

    '    End Try
    'End Function

    Protected Function SearchTin(TaxPayerName As String, idType As String, idvalue As String) As String

        'Dim tokenno As String = ""
        'tokenno = AccessToken
        ''  tokenno = GetToken()
        'InsertIntoTblWebEventLog("TIN1", "ACCESSTOKEN", AccessToken, Session("UserID").ToString)

        ''   Dim values As String = "tin?idType=" + idType + "&idValue= " + idvalue + "&taxpayername= " + TaxPayerName
        ''  Dim apiSearchTinURL = ConfigurationManager.AppSettings.[Get]("apiSearchTin")
        'Dim apiSearchTinURL = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/taxpayer/search"
        'Dim values As String = "tin?idType=" + idType + "&idValue=" + idvalue

        'Using client = New HttpClient()
        '    If Not String.IsNullOrWhiteSpace(tokenno) Then

        '        client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
        '        Dim apiSearchTinurlPath As String = apiSearchTinURL & "/" & values
        '        InsertIntoTblWebEventLog("TIN1", "SEARCHTIN", apiSearchTinurlPath, Session("UserID").ToString)

        '        System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
        '        Dim response As HttpResponseMessage = client.GetAsync(apiSearchTinurlPath).Result
        '        Dim responseString = response.Content.ReadAsStringAsync().Result

        '        If response.IsSuccessStatusCode Then
        '            Return True
        '        End If

        '    End If
        'End Using

        'Return False

        Dim tin As String = "A"
        Dim tokenno As String = ""
        tokenno = AccessToken
        '  tokenno = GetToken()
        InsertIntoTblWebEventLog("TIN1", idvalue, idType, Session("UserID").ToString)

        Dim values As String = "tin?idType=" + idType + "&idValue=" + idvalue
        Dim apiSearchTinURL = ConfigurationManager.AppSettings.[Get]("apiSearchTin")
        '  Dim apiSearchTinURL = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/taxpayer/search"
        Using client = New HttpClient()
            If Not String.IsNullOrWhiteSpace(tokenno) Then

                client.DefaultRequestHeaders.Authorization = New Headers.AuthenticationHeaderValue("Bearer", tokenno)
                Dim apiSearchTinurlPath As String = apiSearchTinURL & "/" & values
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiSearchTinurlPath).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("TIN2", "RESPONSE", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    'Return True
                    Dim jObject = Newtonsoft.Json.Linq.JObject.Parse(responseString)
                    tin = jObject("tin").ToString()
                End If

            End If
        End Using
        InsertIntoTblWebEventLog("TIN3", "TIN", tin.ToString, Session("UserID").ToString)


        Return tin
    End Function

    Public Function AssignJsonvalue_Without_certificate(invoiceNumber As String, tinno As String)
        InsertIntoTblWebEventLog("JsonValue0", invoiceNumber, "", Session("UserID").ToString)

        Dim invoiceWrapper As New InvoiceWrapper_Without_certificate()

        Dim invoiceDetails_D = "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
        Dim invoiceDetails_A = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
        Dim invoiceDetails_B = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"

        Dim test1 = DateTime.UtcNow.Date
        Dim test = DateTime.UtcNow.TimeOfDay

        Dim invoiceID = invoiceNumber
        'Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
        'Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")
        'Dim InvoiceTypeCode = "01"
        'Dim InvoiceListVersionID = "1.0"
        'Dim DocumentCurrencyCode = "MYR"
        'Dim periodStartDate = "2024-11-03"
        'Dim periodEndDate = "2024-12-03"
        'Dim periodDescription = "Monthly"
        'Dim BillingAdditionalDocumentReferenceID = " "
        'Dim AdditionalDocumentReferenceID = ""
        'InsertIntoTblWebEventLog("JsonValue1", invoiceNumber, "", Session("UserID").ToString)

        Dim conn As MySqlConnection = New MySqlConnection()
        Dim command As MySqlCommand = New MySqlCommand

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()

        Dim dtCompanyInfo As DataTable = RetrieveCompanyInfoTable(conn)
        Dim dtEInvoiceMalaysiaCode As DataTable = RetrieveEInvoiceMalaysiaCodeTable(conn)
        Dim dtCustomerInfo As DataTable = RetrieveCustomerTable(conn)
        InsertIntoTblWebEventLog("JsonValue21", invoiceNumber, txtAccountID.Text, Session("UserID").ToString)

        Dim dtSales As DataTable = RetrieveSalesTable(conn, invoiceID)
        InsertIntoTblWebEventLog("JsonValue22", invoiceNumber, "", Session("UserID").ToString)

        Dim dtSalesDetail As DataTable = RetrieveSalesDetailTable(conn, invoiceID)
        InsertIntoTblWebEventLog("JsonValue23", invoiceNumber, "", Session("UserID").ToString)

        '  Dim dtContractInfo As DataTable = RetrieveContractInfo(conn, dtSalesDetail.Rows(0)("CostCode"))
        Dim dtSetup As DataTable = RetrieveSetupInfo(conn)

        conn.Close()
        InsertIntoTblWebEventLog("JsonValue2", invoiceNumber, "", Session("UserID").ToString)

        If IsDBNull(dtSetup.Rows(0)("EInvClassificationCode")) Then
            InsertIntoTblWebEventLog("JsonClassiCodeError", "", invoiceID, Session("UserID"))
            lblMessage.Text = "UPDATE CLASSIFICATION CODE IN AR MODULE SETUP"
            Return "CLASSIFICATION CODE ERROR"


        End If

        ' for AccountingSupplierParty
        'Dim AccountingSupplierParty_AdditionalAccountID = ""
        'Dim AccountingSupplierParty_schemeAgencyName = "CertEx"
        ' Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = "81296"
        '  Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = "Disinfecting and exterminating activities"
        'Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = "C11532652090"
        'Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = "TIN"
        'Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = "199801017599"
        'Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = "BRN"
        'Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
        'Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
        'Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = "10"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = "33, JALAN SERENDAH"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = "26/41, SEKITAR 26"
        'Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        'Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        'Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = "AXXX_XXXXDN BHD"
        'Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"
        'Dim AccountingSupplierParty_Party_Contact_ElectronicMail = "MARCUS.VOOON@ANTICIMEX.COM"


        '' for AccountingCustomerParty
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = "IG5547767040"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID2 = "750601075693"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
        'Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = "NA"
        'Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
        'Dim AccountingCustomerParty_Party_PostalAddress_CityName = "TANJONG BUNGAH PULAU PINANG"
        'Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = "11200"
        'Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = "1B-7-3A, SURIN CONDO SOLOK TANJUNG BUNGA 11200,TANJONG BUNGAH PULAU PINANG"
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = ""
        'Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = ""
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
        'Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
        'Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = "VOON CHOON YU"
        'Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
        'Dim AccountingCustomerParty_Party_Contact_ElectronicMail = "marcnics4134@gmail.com"
        Try
            ' InsertIntoTblWebEventLog("JsonValue2", dtEInvoiceMalaysiaCode.Rows(0)("IndustrialClassificationCode").ToString, dtEInvoiceMalaysiaCode.Rows(0)("Description").ToString, Session("UserID").ToString)

            Dim AccountingSupplierParty_AdditionalAccountID = ""
            Dim AccountingSupplierParty_schemeAgencyName = dtCompanyInfo.Rows(0)("schemeAgencyName").ToString
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_value = dtCompanyInfo.Rows(0)("IndustryClassificationCode").ToString
            Dim AccountingSupplierParty_Party_IndustryClassificationCode_name = dtCompanyInfo.Rows(0)("IndustryClassificationDesc").ToString

            Dim AccountingSupplierParty_Party_PartyIdentification_ID1 = dtCompanyInfo.Rows(0)("TaxIndentificationNo").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID1 = dtCompanyInfo.Rows(0)("EInvoiceID1").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_ID2 = dtCompanyInfo.Rows(0)("BRN").ToString
            Dim AccountingSupplierParty_Party_PartyIdentification_schemeID2 = dtCompanyInfo.Rows(0)("EInvoiceID2").ToString

            Dim AccountingSupplierParty_Party_PostalAddress_CityName = "SHAH ALAM"
            Dim AccountingSupplierParty_Party_PostalAddress_PostalZone = "40400"
            Dim AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode = dtCompanyInfo.Rows(0)("CountryEntityCode").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine1 = dtCompanyInfo.Rows(0)("OfficeAddress1").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine2 = dtCompanyInfo.Rows(0)("OfficeAddress2").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_AddressLine3 = "SEKSYEN 26"
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value = dtCompanyInfo.Rows(0)("CountryIdentificationValue").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID = dtCompanyInfo.Rows(0)("CountryIdentificationListID").ToString
            Dim AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = dtCompanyInfo.Rows(0)("CountryIdentificationAgencyID").ToString
            Dim AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName = dtCompanyInfo.Rows(0)("CompanyName").ToString
            '  Dim AccountingSupplierParty_Party_Contact_Telephone = dtCompanyInfo.Rows(0)("TelephoneNumber").ToString
            Dim AccountingSupplierParty_Party_Contact_Telephone = "0116015723"

            Dim AccountingSupplierParty_Party_Contact_ElectronicMail = dtCompanyInfo.Rows(0)("Email").ToString

            InsertIntoTblWebEventLog("JsonValue3", invoiceNumber, dtCustomerInfo.Rows.Count.ToString, Session("UserID").ToString)


            ' for AccountingCustomerParty
            '  Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = dtCustomerInfo.Rows(0)("TaxIdentificationNo").ToString.Trim
            Dim AccountingCustomerParty_Party_PartyIdentification_ID1 = tinno.Trim
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID1 = "TIN"
            Dim AccountingCustomerParty_Party_PartyIdentification_ID2
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID2
            If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                AccountingCustomerParty_Party_PartyIdentification_ID2 = dtCustomerInfo.Rows(0)("RocNos").ToString
                '  AccountingCustomerParty_Party_PartyIdentification_ID2 = "28728-U / 197601002776"
                AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "BRN"
            ElseIf txtAccountType.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then

                AccountingCustomerParty_Party_PartyIdentification_ID2 = dtCustomerInfo.Rows(0)("NRIC").ToString
                AccountingCustomerParty_Party_PartyIdentification_schemeID2 = "NRIC"
            End If

            Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = ""

            If dtSales.Rows(0)("SalesTaxRegistrationNo").ToString = "N/A" Then
                AccountingCustomerParty_Party_PartyIdentification_ID3 = ""

            Else
                AccountingCustomerParty_Party_PartyIdentification_ID3 = dtSales.Rows(0)("SalesTaxRegistrationNo").ToString

            End If
            '  Dim AccountingCustomerParty_Party_PartyIdentification_ID3 = dtCustomerInfo.Rows(0)("SalesTaxRegistrationNo").ToString
            Dim AccountingCustomerParty_Party_PartyIdentification_schemeID3 = "SST"
            Dim AccountingCustomerParty_Party_PostalAddress_CityName = dtCustomerInfo.Rows(0)("AddCity").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_PostalZone = dtCustomerInfo.Rows(0)("AddPostal").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode = "10"
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine1 = dtCustomerInfo.Rows(0)("Address1").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine2 = dtCustomerInfo.Rows(0)("AddStreet").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_AddressLine3 = dtCustomerInfo.Rows(0)("AddBuilding").ToString
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value = "MYS"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID = "3166-1"
            Dim AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID = "ISO"
            Dim AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName = dtCustomerInfo.Rows(0)("Name").ToString
            '    Dim AccountingCustomerParty_Party_Contact_Telephone
            Dim AccountingCustomerParty_Party_Contact_Telephone = "0162109898"
            'If String.IsNullOrEmpty(dtCustomerInfo.Rows(0)("Telephone").ToString) Then
            '    AccountingCustomerParty_Party_Contact_Telephone = dtCustomerInfo.Rows(0)("Mobile").ToString
            'Else
            '    AccountingCustomerParty_Party_Contact_Telephone = dtCustomerInfo.Rows(0)("Telephone").ToString

            'End If
            Dim AccountingCustomerParty_Party_Contact_ElectronicMail = dtCustomerInfo.Rows(0)("Email").ToString.Trim


            InsertIntoTblWebEventLog("JsonValue4", invoiceNumber, "", Session("UserID").ToString)

            'for Delivery DeliveryParty
            Dim DeliveryParty_LegalEntity_RegistrationName = ""
            Dim DeliveryParty_PostalAddress_CityName = ""
            Dim DeliveryParty_PostalAddress_PostalZone = ""
            Dim DeliveryParty_PostalAddress_CountrySubentityCode = ""
            Dim DeliveryParty_PostalAddress_AddressLine1 = ""
            Dim DeliveryParty_PostalAddress_AddressLine2 = ""
            Dim DeliveryParty_PostalAddress_AddressLine3 = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_value = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listID = ""
            Dim DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID = ""
            Dim DeliveryParty_PartyIdentification_ID = ""
            Dim DeliveryParty_PartyIdentification_schemeID = ""

            'for Delivery Shipment
            Dim Delivery_Shipment_ID = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator = True
            Dim Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason = ""
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_value = 0D
            Dim Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

            'for paymentMeans
            Dim paymentMeans_PaymentMeansCode_value = "01"
            Dim paymentMeans_PayeeFinancialAccount_value = ""

            'for paymentTerm
            Dim paymentTerms_Note_value = ""

            'for prepaidPayment
            Dim prepaidPayment_ID = ""
            Dim prepaidPayment_PaidAmount_value = 0
            Dim prepaidPayment_PaidAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim prepaidPayment_PaidDate = ""
            Dim prepaidPayment_PaidTime_value = ""

            'for AllowanceCharge 
            Dim AllowanceCharge_ChargeIndicator = True
            Dim AllowanceCharge_AllowanceChargeReason_value = ""
            Dim AllowanceCharge_Amount_value = 0
            Dim AllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

            'for AllowanceCharge 1
            Dim AllowanceCharge_ChargeIndicator_1 = False
            Dim AllowanceCharge_AllowanceChargeReason_value_1 = ""
            Dim AllowanceCharge_Amount_value_1 = 0
            Dim AllowanceCharge_Amount_currencyID_1 = dtSetup.Rows(0)("ARCurrency")

            InsertIntoTblWebEventLog("JsonValue4", invoiceNumber, "", Session("UserID").ToString)

            'for TaxTotal
            Dim TaxTotal_TaxAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxableAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxAmount_value = dtSales.Rows(0)("GSTBase").ToString
            Dim TaxTotal_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            Dim TaxTotal_TaxSubtotal2_TaxableAmount_value = 0
            Dim TaxTotal_TaxSubtotal2_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal2_TaxAmount_value = 0
            Dim TaxTotal_TaxSubtotal2_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim TaxTotal_TaxSubtotal2_TaxCategory_ID_value = "E"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value = "OTH"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
            Dim TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"

            'for LegalMonetaryTotal 
            Dim LegalMonetaryTotal_LineExtensionAmount_value As Decimal = Convert.ToDecimal(dtSales.Rows(0)("ValueBase"))
            Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_TaxExclusiveAmount_value As Decimal = Convert.ToDecimal(dtSales.Rows(0)("ValueBase"))

            '   Dim LegalMonetaryTotal_TaxExclusiveAmount_value As Decimal = "22.10"

            Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_TaxInclusiveAmount_value = Convert.ToDecimal(dtSales.Rows(0)("ValueBase").ToString) + Convert.ToDecimal(dtSales.Rows(0)("GSTBase").ToString)
            Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
            Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
            Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_PayableAmount_value = Convert.ToDecimal(dtSales.Rows(0)("AppliedBase").ToString)
            Dim LegalMonetaryTotal_PayableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")
            Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
            Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = dtSetup.Rows(0)("ARCurrency")


            'for LegalMonetaryTotal 
            'Dim LegalMonetaryTotal_LineExtensionAmount_value = 1436.65
            'Dim LegalMonetaryTotal_LineExtensionAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_TaxExclusiveAmount_value As Decimal = 1436.65
            'Dim LegalMonetaryTotal_TaxExclusiveAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_TaxInclusiveAmount_value = 3010.5
            'Dim LegalMonetaryTotal_TaxInclusiveAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_AllowanceTotalAmount_value = 0
            'Dim LegalMonetaryTotal_AllowanceTotalAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_ChargeTotalAmount_value = 0
            'Dim LegalMonetaryTotal_ChargeTotalAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_PayableAmount_value = 3010.5
            'Dim LegalMonetaryTotal_PayableAmount_currencyID = "MYR"
            'Dim LegalMonetaryTotal_PayableRoundingAmount_value = 0
            'Dim LegalMonetaryTotal_PayableRoundingAmount_currencyID = "MYR"

            InsertIntoTblWebEventLog("JsonValue5", invoiceNumber, "", Session("UserID").ToString)


            InsertIntoTblWebEventLog("JsonValue6", invoiceNumber, "", Session("UserID").ToString)

            'for TaxExchangeRate
            Dim TaxExchangeRate_SourceCurrencyCode_value = dtSetup.Rows(0)("ARCurrency")
            Dim TaxExchangeRate_TargetCurrencyCode_value = dtSetup.Rows(0)("ARCurrency")
            Dim TaxExchangeRate_CalculationRate_value = 0


            invoiceWrapper._D = invoiceDetails_D
            invoiceWrapper._A = invoiceDetails_A
            invoiceWrapper._B = invoiceDetails_B

            invoiceWrapper.Invoice = New List(Of Invoice_without_Certificate)()

            Dim invoice As New Invoice_without_Certificate()

            invoice.ID = New List(Of ID)
            Dim invoiceIDObj As New ID
            invoiceIDObj.Value = invoiceID
            invoice.ID.Add(invoiceIDObj)


            Dim IssueDate = DateTime.UtcNow.ToString("yyyy-MM-dd")
            Dim IssueTime = DateTime.UtcNow.ToString("HH:mm:ssZ")

            Dim InvoiceTypeCode

            If txtDocType.Text = "ARIN" Then
                InvoiceTypeCode = "01"
            End If

            Dim InvoiceListVersionID = "1.0"
            Dim DocumentCurrencyCode = dtSetup.Rows(0)("ARCurrency")
            Dim periodStartDate = "2024-11-03"
            Dim periodEndDate = "2024-12-03"
            Dim periodDescription = "Monthly"
            Dim BillingAdditionalDocumentReferenceID = " "
            Dim AdditionalDocumentReferenceID = ""


            ' Set IssueDate
            invoice.IssueDate = New List(Of IssueDate)
            Dim issueDateObj As New IssueDate
            '   issueDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            issueDateObj.Value = IssueDate
            invoice.IssueDate.Add(issueDateObj)

            InsertIntoTblWebEventLog("JsonValue7", invoiceNumber, "", Session("UserID").ToString)

            ' Set IssueTime
            invoice.IssueTime = New List(Of IssueTime)
            Dim issueTimeObj As New IssueTime
            '    issueTimeObj.Value = Convert.ToDateTime(dtSales.Rows(0)("CreatedOn")).ToString("yyyy-MM-dd")
            issueTimeObj.Value = IssueTime
            invoice.IssueTime.Add(issueTimeObj)

            ' Set InvoiceTypeCode
            invoice.InvoiceTypeCode = New List(Of InvoiceTypeCode)
            Dim invoiceTypeCodeObj As New InvoiceTypeCode
            invoiceTypeCodeObj.Value = InvoiceTypeCode
            invoiceTypeCodeObj.ListVersionID = InvoiceListVersionID
            invoice.InvoiceTypeCode.Add(invoiceTypeCodeObj)

            ' Set DocumentCurrencyCode
            invoice.DocumentCurrencyCode = New List(Of DocumentCurrencyCode)
            Dim docCurrencyCodeObj As New DocumentCurrencyCode
            docCurrencyCodeObj.Value = DocumentCurrencyCode
            invoice.DocumentCurrencyCode.Add(docCurrencyCodeObj)

            ' InvoicePeriod
            invoice.InvoicePeriod = New List(Of InvoicePeriod)
            Dim period As New InvoicePeriod()

            period.StartDate = New List(Of StartDate)
            Dim startDateObj As New StartDate
            startDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            ' startDateObj.Value = periodStartDate
            period.StartDate.Add(startDateObj)

            period.EndDate = New List(Of EndDate)
            Dim endDateObj As New EndDate
            '  endDateObj.Value = periodEndDate
            endDateObj.Value = Convert.ToDateTime(dtSales.Rows(0)("SalesDate")).ToString("yyyy-MM-dd")
            period.EndDate.Add(endDateObj)

            period.Description = New List(Of Description)
            Dim descriptionObj As New Description
            descriptionObj.Value = dtSalesDetail.Rows(0)("BillingFrequency")
            period.Description.Add(descriptionObj)

            invoice.InvoicePeriod.Add(period)

            InsertIntoTblWebEventLog("JsonValue8", invoiceNumber, "", Session("UserID").ToString)

            ' BillingReference
            invoice.BillingReference = New List(Of BillingReference)
            Dim billingRef As New BillingReference

            billingRef.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)
            Dim billingAdditionalDocRef As New AdditionalDocumentReference

            billingAdditionalDocRef.ID = New List(Of ID)
            Dim billingAddDocRefIDObj As New ID
            billingAddDocRefIDObj.Value = BillingAdditionalDocumentReferenceID
            billingAdditionalDocRef.ID.Add(billingAddDocRefIDObj)

            billingRef.AdditionalDocumentReference.Add(billingAdditionalDocRef)
            invoice.BillingReference.Add(billingRef)

            ' AdditionalDocumentReference
            invoice.AdditionalDocumentReference = New List(Of AdditionalDocumentReference)

            Dim addDocRef1 As New AdditionalDocumentReference
            addDocRef1.ID = New List(Of ID)
            Dim addDocRef1ID As New ID
            addDocRef1ID.Value = AdditionalDocumentReferenceID
            addDocRef1.ID.Add(addDocRef1ID)
            invoice.AdditionalDocumentReference.Add(addDocRef1)

            ' Repeat the pattern for AdditionalDocumentReference2, 3, and 4
            Dim addDocRef2 As New AdditionalDocumentReference
            addDocRef2.ID = New List(Of ID)
            Dim addDocRef2ID As New ID
            addDocRef2ID.Value = AdditionalDocumentReferenceID
            addDocRef2.ID.Add(addDocRef2ID)
            invoice.AdditionalDocumentReference.Add(addDocRef2)

            Dim addDocRef3 As New AdditionalDocumentReference
            addDocRef3.ID = New List(Of ID)
            Dim addDocRef3ID As New ID
            addDocRef3ID.Value = AdditionalDocumentReferenceID
            addDocRef3.ID.Add(addDocRef3ID)
            invoice.AdditionalDocumentReference.Add(addDocRef3)

            Dim addDocRef4 As New AdditionalDocumentReference
            addDocRef4.ID = New List(Of ID)
            Dim addDocRef4ID As New ID
            addDocRef4ID.Value = AdditionalDocumentReferenceID
            addDocRef4.ID.Add(addDocRef4ID)
            invoice.AdditionalDocumentReference.Add(addDocRef4)

            InsertIntoTblWebEventLog("JsonValue9", invoiceNumber, "", Session("UserID").ToString)

            ' AccountingSupplierParty start

            invoice.AccountingSupplierParty = New List(Of AccountingSupplierParty)

            ' Create the supplier object
            Dim supplier As New AccountingSupplierParty()

            ' AdditionalAccountID
            supplier.AdditionalAccountID = New List(Of AdditionalAccountID)
            Dim additionalAccountIDObj As New AdditionalAccountID
            additionalAccountIDObj.value = AccountingSupplierParty_AdditionalAccountID
            additionalAccountIDObj.schemeAgencyName = AccountingSupplierParty_schemeAgencyName
            supplier.AdditionalAccountID.Add(additionalAccountIDObj)

            ' Party
            supplier.Party = New List(Of Party)
            Dim partyObj As New Party()

            ' IndustryClassificationCode
            partyObj.IndustryClassificationCode = New List(Of IndustryClassificationCode)
            Dim industryCodeObj As New IndustryClassificationCode
            industryCodeObj.value = AccountingSupplierParty_Party_IndustryClassificationCode_value
            industryCodeObj.name = AccountingSupplierParty_Party_IndustryClassificationCode_name
            partyObj.IndustryClassificationCode.Add(industryCodeObj)

            ' PartyIdentification
            partyObj.PartyIdentification = New List(Of PartyIdentification)

            Dim partyIdentificationObj1 As New PartyIdentification
            partyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID1 As New PartyIdentificationID
            partyIdentificationID1.ID = AccountingSupplierParty_Party_PartyIdentification_ID1
            partyIdentificationID1.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID1
            partyIdentificationObj1.ID.Add(partyIdentificationID1)
            partyObj.PartyIdentification.Add(partyIdentificationObj1)

            Dim partyIdentificationObj2 As New PartyIdentification
            partyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim partyIdentificationID2 As New PartyIdentificationID
            partyIdentificationID2.ID = AccountingSupplierParty_Party_PartyIdentification_ID2
            partyIdentificationID2.schemeID = AccountingSupplierParty_Party_PartyIdentification_schemeID2
            partyIdentificationObj2.ID.Add(partyIdentificationID2)
            partyObj.PartyIdentification.Add(partyIdentificationObj2)

            ' PostalAddress
            partyObj.PostalAddress = New List(Of PostalAddress)
            Dim postalAddressObj As New PostalAddress

            postalAddressObj.CityName = New List(Of CityName)
            Dim cityNameObj As New CityName
            cityNameObj.value = AccountingSupplierParty_Party_PostalAddress_CityName
            postalAddressObj.CityName.Add(cityNameObj)

            postalAddressObj.PostalZone = New List(Of PostalZone)
            Dim postalZoneObj As New PostalZone
            postalZoneObj.value = AccountingSupplierParty_Party_PostalAddress_PostalZone
            postalAddressObj.PostalZone.Add(postalZoneObj)

            postalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim countrySubentityCodeObj As New CountrySubentityCode
            countrySubentityCodeObj.value = AccountingSupplierParty_Party_PostalAddress_CountrySubentityCode
            postalAddressObj.CountrySubentityCode.Add(countrySubentityCodeObj)

            InsertIntoTblWebEventLog("JsonValue10", invoiceNumber, "", Session("UserID").ToString)

            ' AddressLine
            postalAddressObj.AddressLine = New List(Of AddressLine)

            Dim addressLineObj1 As New AddressLine
            addressLineObj1.Line = New List(Of Line)
            Dim lineObj1 As New Line
            lineObj1.value = AccountingSupplierParty_Party_PostalAddress_AddressLine1
            addressLineObj1.Line.Add(lineObj1)
            postalAddressObj.AddressLine.Add(addressLineObj1)

            Dim addressLineObj2 As New AddressLine
            addressLineObj2.Line = New List(Of Line)
            Dim lineObj2 As New Line
            lineObj2.value = AccountingSupplierParty_Party_PostalAddress_AddressLine2
            addressLineObj2.Line.Add(lineObj2)
            postalAddressObj.AddressLine.Add(addressLineObj2)

            Dim addressLineObj3 As New AddressLine
            addressLineObj3.Line = New List(Of Line)
            Dim lineObj3 As New Line
            lineObj3.value = AccountingSupplierParty_Party_PostalAddress_AddressLine3
            addressLineObj3.Line.Add(lineObj3)
            postalAddressObj.AddressLine.Add(addressLineObj3)

            ' Country
            postalAddressObj.Country = New List(Of Country)
            Dim countryObj As New Country
            countryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim identificationCodeObj As New IdentificationCode
            identificationCodeObj.value = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_value
            identificationCodeObj.listID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listID
            identificationCodeObj.listAgencyID = AccountingSupplierParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            countryObj.IdentificationCode.Add(identificationCodeObj)
            postalAddressObj.Country.Add(countryObj)

            partyObj.PostalAddress.Add(postalAddressObj)

            InsertIntoTblWebEventLog("JsonValue11", invoiceNumber, "", Session("UserID").ToString)

            ' PartyLegalEntity
            partyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim partyLegalEntityObj As New PartyLegalEntity
            partyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim registrationNameObj As New RegistrationName
            registrationNameObj.value = AccountingSupplierParty_Party_PartyLegalEntity_RegistrationName
            partyLegalEntityObj.RegistrationName.Add(registrationNameObj)
            partyObj.PartyLegalEntity.Add(partyLegalEntityObj)

            ' Contact
            partyObj.Contact = New List(Of Contact)
            Dim contactObj As New Contact

            contactObj.Telephone = New List(Of Telephone)
            Dim telephoneObj As New Telephone
            telephoneObj.value = AccountingSupplierParty_Party_Contact_Telephone
            contactObj.Telephone.Add(telephoneObj)

            contactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim emailObj As New ElectronicMail
            emailObj.value = AccountingSupplierParty_Party_Contact_ElectronicMail
            contactObj.ElectronicMail.Add(emailObj)

            partyObj.Contact.Add(contactObj)

            ' Add the configured party to the supplier
            supplier.Party.Add(partyObj)

            ' Add supplier to AccountingSupplierParty
            invoice.AccountingSupplierParty.Add(supplier)

            ' AccountingSupplierParty end

            InsertIntoTblWebEventLog("JsonValue12", invoiceNumber, "", Session("UserID").ToString)

            ' AccountingCustomerParty start

            invoice.AccountingCustomerParty = New List(Of AccountingCustomerParty)

            ' Create the AccountingCustomerParty object
            Dim customer As New AccountingCustomerParty()

            ' Create the Party list
            customer.Party = New List(Of Party)
            Dim customerpartyObj As New Party()

            ' IndustryClassificationCode is Nothing in this case
            customerpartyObj.IndustryClassificationCode = Nothing

            ' PartyIdentification
            customerpartyObj.PartyIdentification = New List(Of PartyIdentification)

            ' First PartyIdentification
            Dim customerpartyIdentificationObj1 As New PartyIdentification
            customerpartyIdentificationObj1.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID1 As New PartyIdentificationID
            customerpartyIdentificationID1.ID = AccountingCustomerParty_Party_PartyIdentification_ID1
            customerpartyIdentificationID1.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID1
            customerpartyIdentificationObj1.ID.Add(customerpartyIdentificationID1)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj1)

            ' Second PartyIdentification
            Dim customerpartyIdentificationObj2 As New PartyIdentification
            customerpartyIdentificationObj2.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID2 As New PartyIdentificationID
            customerpartyIdentificationID2.ID = AccountingCustomerParty_Party_PartyIdentification_ID2
            customerpartyIdentificationID2.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID2
            customerpartyIdentificationObj2.ID.Add(customerpartyIdentificationID2)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj2)

            ' Third PartyIdentification
            Dim customerpartyIdentificationObj3 As New PartyIdentification
            customerpartyIdentificationObj3.ID = New List(Of PartyIdentificationID)
            Dim customerpartyIdentificationID3 As New PartyIdentificationID
            customerpartyIdentificationID3.ID = AccountingCustomerParty_Party_PartyIdentification_ID3
            customerpartyIdentificationID3.schemeID = AccountingCustomerParty_Party_PartyIdentification_schemeID3
            customerpartyIdentificationObj3.ID.Add(customerpartyIdentificationID3)
            customerpartyObj.PartyIdentification.Add(customerpartyIdentificationObj3)

            InsertIntoTblWebEventLog("JsonValue13", invoiceNumber, "", Session("UserID").ToString)

            ' PostalAddress
            customerpartyObj.PostalAddress = New List(Of PostalAddress)
            Dim customerpostalAddressObj As New PostalAddress

            customerpostalAddressObj.CityName = New List(Of CityName)
            Dim customercityNameObj As New CityName
            customercityNameObj.value = AccountingCustomerParty_Party_PostalAddress_CityName
            customerpostalAddressObj.CityName.Add(customercityNameObj)

            customerpostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim customerpostalZoneObj As New PostalZone
            customerpostalZoneObj.value = AccountingCustomerParty_Party_PostalAddress_PostalZone
            customerpostalAddressObj.PostalZone.Add(customerpostalZoneObj)

            customerpostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim customercountrySubentityCodeObj As New CountrySubentityCode
            customercountrySubentityCodeObj.value = AccountingCustomerParty_Party_PostalAddress_CountrySubentityCode
            customerpostalAddressObj.CountrySubentityCode.Add(customercountrySubentityCodeObj)

            ' AddressLine
            customerpostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim customeraddressLineObj1 As New AddressLine
            customeraddressLineObj1.Line = New List(Of Line)
            Dim customerlineObj1 As New Line
            customerlineObj1.value = AccountingCustomerParty_Party_PostalAddress_AddressLine1
            customeraddressLineObj1.Line.Add(customerlineObj1)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj1)

            Dim customeraddressLineObj2 As New AddressLine
            customeraddressLineObj2.Line = New List(Of Line)
            Dim customerlineObj2 As New Line
            customerlineObj2.value = AccountingCustomerParty_Party_PostalAddress_AddressLine2
            customeraddressLineObj2.Line.Add(customerlineObj2)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj2)

            Dim customeraddressLineObj3 As New AddressLine
            customeraddressLineObj3.Line = New List(Of Line)
            Dim customerlineObj3 As New Line
            customerlineObj3.value = AccountingCustomerParty_Party_PostalAddress_AddressLine3
            customeraddressLineObj3.Line.Add(customerlineObj3)
            customerpostalAddressObj.AddressLine.Add(customeraddressLineObj3)

            ' Country
            customerpostalAddressObj.Country = New List(Of Country)
            Dim customercountryObj As New Country
            customercountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim customeridentificationCodeObj As New IdentificationCode
            customeridentificationCodeObj.value = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_value
            customeridentificationCodeObj.listID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listID
            customeridentificationCodeObj.listAgencyID = AccountingCustomerParty_Party_PostalAddress_Country_IdentificationCode_listAgencyID
            customercountryObj.IdentificationCode.Add(customeridentificationCodeObj)
            customerpostalAddressObj.Country.Add(customercountryObj)

            customerpartyObj.PostalAddress.Add(customerpostalAddressObj)

            InsertIntoTblWebEventLog("JsonValue14", invoiceNumber, "", Session("UserID").ToString)

            ' PartyLegalEntity
            customerpartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim customerpartyLegalEntityObj As New PartyLegalEntity
            customerpartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim customerregistrationNameObj As New RegistrationName
            customerregistrationNameObj.value = AccountingCustomerParty_Party_PartyLegalEntity_RegistrationName
            customerpartyLegalEntityObj.RegistrationName.Add(customerregistrationNameObj)
            customerpartyObj.PartyLegalEntity.Add(customerpartyLegalEntityObj)

            ' Contact
            customerpartyObj.Contact = New List(Of Contact)
            Dim customercontactObj As New Contact

            customercontactObj.Telephone = New List(Of Telephone)
            Dim customertelephoneObj As New Telephone
            customertelephoneObj.value = AccountingCustomerParty_Party_Contact_Telephone
            customercontactObj.Telephone.Add(customertelephoneObj)

            customercontactObj.ElectronicMail = New List(Of ElectronicMail)
            Dim customeremailObj As New ElectronicMail
            customeremailObj.value = AccountingCustomerParty_Party_Contact_ElectronicMail
            customercontactObj.ElectronicMail.Add(customeremailObj)

            customerpartyObj.Contact.Add(customercontactObj)

            ' Add the configured party to customer
            customer.Party.Add(customerpartyObj)

            invoice.AccountingCustomerParty.Add(customer)

            InsertIntoTblWebEventLog("JsonValue15", invoiceNumber, "", Session("UserID").ToString)

            ' AccountingCustomerParty end

            ' delivery start
            invoice.Delivery = New List(Of Delivery)

            ' Create the Delivery object
            Dim delivery As New Delivery()

            ' DeliveryParty

            delivery.DeliveryParty = New List(Of DeliveryParty)
            Dim deliveryPartyObj As New DeliveryParty

            ' PartyLegalEntity
            deliveryPartyObj.PartyLegalEntity = New List(Of PartyLegalEntity)
            Dim deliverypartyLegalEntityObj As New PartyLegalEntity
            deliverypartyLegalEntityObj.RegistrationName = New List(Of RegistrationName)
            Dim deliveryregistrationNameObj As New RegistrationName
            deliveryregistrationNameObj.value = DeliveryParty_LegalEntity_RegistrationName
            deliverypartyLegalEntityObj.RegistrationName.Add(deliveryregistrationNameObj)
            deliveryPartyObj.PartyLegalEntity.Add(deliverypartyLegalEntityObj)

            ' PostalAddress
            deliveryPartyObj.PostalAddress = New List(Of PostalAddress)
            Dim deliverypostalAddressObj As New PostalAddress

            ' CityName
            deliverypostalAddressObj.CityName = New List(Of CityName)
            Dim deliverycityNameObj As New CityName
            deliverycityNameObj.value = DeliveryParty_PostalAddress_CityName
            deliverypostalAddressObj.CityName.Add(deliverycityNameObj)

            ' PostalZone
            deliverypostalAddressObj.PostalZone = New List(Of PostalZone)
            Dim deliverypostalZoneObj As New PostalZone
            deliverypostalZoneObj.value = DeliveryParty_PostalAddress_PostalZone
            deliverypostalAddressObj.PostalZone.Add(deliverypostalZoneObj)

            ' CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode = New List(Of CountrySubentityCode)
            Dim deliverycountrySubentityCodeObj As New CountrySubentityCode
            deliverycountrySubentityCodeObj.value = DeliveryParty_PostalAddress_CountrySubentityCode
            deliverypostalAddressObj.CountrySubentityCode.Add(deliverycountrySubentityCodeObj)

            ' AddressLine
            deliverypostalAddressObj.AddressLine = New List(Of AddressLine)

            Dim deliveryaddressLineObj1 As New AddressLine
            deliveryaddressLineObj1.Line = New List(Of Line)
            Dim deliverylineObj1 As New Line
            deliverylineObj1.value = DeliveryParty_PostalAddress_AddressLine1
            deliveryaddressLineObj1.Line.Add(deliverylineObj1)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj1)

            Dim deliveryaddressLineObj2 As New AddressLine
            deliveryaddressLineObj2.Line = New List(Of Line)
            Dim deliverylineObj2 As New Line
            deliverylineObj2.value = DeliveryParty_PostalAddress_AddressLine2
            deliveryaddressLineObj2.Line.Add(deliverylineObj2)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj2)

            Dim deliveryaddressLineObj3 As New AddressLine
            deliveryaddressLineObj3.Line = New List(Of Line)
            Dim deliverylineObj3 As New Line
            deliverylineObj3.value = DeliveryParty_PostalAddress_AddressLine3
            deliveryaddressLineObj3.Line.Add(deliverylineObj3)
            deliverypostalAddressObj.AddressLine.Add(deliveryaddressLineObj3)

            ' Country
            deliverypostalAddressObj.Country = New List(Of Country)
            Dim deliverycountryObj As New Country
            deliverycountryObj.IdentificationCode = New List(Of IdentificationCode)
            Dim deliveryidentificationCodeObj As New IdentificationCode
            deliveryidentificationCodeObj.value = DeliveryParty_PostalAddress_Country_IdentificationCode_value
            deliveryidentificationCodeObj.listID = DeliveryParty_PostalAddress_Country_IdentificationCode_listID
            deliveryidentificationCodeObj.listAgencyID = DeliveryParty_PostalAddress_Country_IdentificationCode_listAgencyID
            deliverycountryObj.IdentificationCode.Add(deliveryidentificationCodeObj)
            deliverypostalAddressObj.Country.Add(deliverycountryObj)

            deliveryPartyObj.PostalAddress.Add(deliverypostalAddressObj)

            InsertIntoTblWebEventLog("JsonValue16", invoiceNumber, "", Session("UserID").ToString)

            ' PartyIdentification
            deliveryPartyObj.PartyIdentification = New List(Of PartyIdentification)
            Dim deliverypartyIdentificationObj As New PartyIdentification
            deliverypartyIdentificationObj.ID = New List(Of PartyIdentificationID)
            Dim deliverypartyIdentificationIDObj As New PartyIdentificationID
            deliverypartyIdentificationIDObj.ID = DeliveryParty_PartyIdentification_ID
            deliverypartyIdentificationIDObj.schemeID = DeliveryParty_PartyIdentification_schemeID
            deliverypartyIdentificationObj.ID.Add(deliverypartyIdentificationIDObj)
            deliveryPartyObj.PartyIdentification.Add(deliverypartyIdentificationObj)

            delivery.DeliveryParty.Add(deliveryPartyObj)

            ' Shipment
            delivery.Shipment = New List(Of Shipment)
            Dim deliveryshipmentObj As New Shipment

            deliveryshipmentObj.ID = New List(Of ID)
            Dim deliveryshipmentIDObj As New ID
            deliveryshipmentIDObj.Value = Delivery_Shipment_ID
            deliveryshipmentObj.ID.Add(deliveryshipmentIDObj)

            ' FreightAllowanceCharge
            deliveryshipmentObj.FreightAllowanceCharge = New List(Of FreightAllowanceCharge)
            Dim deliveryfreightAllowanceChargeObj As New FreightAllowanceCharge

            deliveryfreightAllowanceChargeObj.ChargeIndicator = New List(Of ChargeIndicator)
            Dim deliverychargeIndicatorObj As New ChargeIndicator
            deliverychargeIndicatorObj.value = Delivery_Shipment_FreightAllowanceCharge_ChargeIndicator
            deliveryfreightAllowanceChargeObj.ChargeIndicator.Add(deliverychargeIndicatorObj)

            deliveryfreightAllowanceChargeObj.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim deliveryallowanceChargeReasonObj As New AllowanceChargeReason
            deliveryallowanceChargeReasonObj.value = Delivery_Shipment_FreightAllowanceCharge_AllowanceChargeReason
            deliveryfreightAllowanceChargeObj.AllowanceChargeReason.Add(deliveryallowanceChargeReasonObj)

            deliveryfreightAllowanceChargeObj.Amount = New List(Of Amount)
            Dim deliveryamountObj As New Amount
            deliveryamountObj.value = Delivery_Shipment_FreightAllowanceCharge_Amount_value
            deliveryamountObj.currencyID = Delivery_Shipment_FreightAllowanceCharge_Amount_currencyID
            deliveryfreightAllowanceChargeObj.Amount.Add(deliveryamountObj)

            deliveryshipmentObj.FreightAllowanceCharge.Add(deliveryfreightAllowanceChargeObj)

            delivery.Shipment.Add(deliveryshipmentObj)

            invoice.Delivery.Add(delivery)

            ' delivery End
            InsertIntoTblWebEventLog("JsonValue17", invoiceNumber, "", Session("UserID").ToString)

            'paymentMeans start

            invoice.PaymentMeans = New List(Of PaymentMeans)

            ' Create a PaymentMeans object
            Dim paymentMeans As New PaymentMeans()

            ' Set PaymentMeansCode
            paymentMeans.PaymentMeansCode = New List(Of PaymentMeansCode)
            Dim paymentMeansCodeObj As New PaymentMeansCode
            paymentMeansCodeObj.value = paymentMeans_PaymentMeansCode_value
            paymentMeans.PaymentMeansCode.Add(paymentMeansCodeObj)

            ' Set PayeeFinancialAccount
            paymentMeans.PayeeFinancialAccount = New List(Of PayeeFinancialAccount)
            Dim payeeFinancialAccountObj As New PayeeFinancialAccount

            payeeFinancialAccountObj.ID = New List(Of ID)
            Dim payeeFinancialAccountID As New ID
            payeeFinancialAccountID.Value = paymentMeans_PayeeFinancialAccount_value
            payeeFinancialAccountObj.ID.Add(payeeFinancialAccountID)

            paymentMeans.PayeeFinancialAccount.Add(payeeFinancialAccountObj)

            invoice.PaymentMeans.Add(paymentMeans)

            'paymentMeans end

            InsertIntoTblWebEventLog("JsonValue18", invoiceNumber, "", Session("UserID").ToString)

            'paymentTerms start

            invoice.PaymentTerms = New List(Of PaymentTerms)

            ' Create a PaymentTerms object
            Dim paymentTerms As New PaymentTerms()

            ' Set Note
            paymentTerms.Note = New List(Of Note)
            Dim noteObj As New Note
            ' noteObj.value = paymentTerms_Note_value
            '  noteObj.value = dtSales.Rows(0)("Comments")
            noteObj.value = dtSales.Rows(0)("Terms")
            paymentTerms.Note.Add(noteObj)

            ' Add the completed paymentTerms object to invoice.PaymentTerms
            invoice.PaymentTerms.Add(paymentTerms)
            'paymentTerms end

            'prepaidPayment start
            invoice.PrepaidPayment = New List(Of PrepaidPayment)

            ' Create PrepaidPayment object
            Dim prepaidPayment As New PrepaidPayment()

            ' Set ID
            prepaidPayment.ID = New List(Of ID)
            Dim idObj As New ID
            idObj.Value = prepaidPayment_ID
            prepaidPayment.ID.Add(idObj)

            ' Set PaidAmount
            prepaidPayment.PaidAmount = New List(Of PaidAmount)
            Dim paidAmountObj As New PaidAmount
            paidAmountObj.value = prepaidPayment_PaidAmount_value
            paidAmountObj.currencyID = prepaidPayment_PaidAmount_currencyID
            prepaidPayment.PaidAmount.Add(paidAmountObj)

            ' Set PaidDate
            prepaidPayment.PaidDate = New List(Of PaidDate)
            Dim paidDateObj As New PaidDate
            paidDateObj.value = prepaidPayment_PaidDate
            prepaidPayment.PaidDate.Add(paidDateObj)

            ' Set PaidTime
            prepaidPayment.PaidTime = New List(Of PaidTime)
            Dim paidTimeObj As New PaidTime
            paidTimeObj.value = prepaidPayment_PaidTime_value
            prepaidPayment.PaidTime.Add(paidTimeObj)

            invoice.PrepaidPayment.Add(prepaidPayment)
            'prepaidPayment end

            InsertIntoTblWebEventLog("JsonValue19", invoiceNumber, "", Session("UserID").ToString)

            'allowanceCharge start
            ' Initialize the AllowanceCharge list
            invoice.AllowanceCharge = New List(Of AllowanceCharge)

            ' Create the first AllowanceCharge object
            Dim allowanceCharge As New AllowanceCharge()

            allowanceCharge.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj As New ChargeIndicator
            allowancchargeIndicatorObj.value = AllowanceCharge_ChargeIndicator
            allowanceCharge.ChargeIndicator.Add(allowancchargeIndicatorObj)

            allowanceCharge.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj As New AllowanceChargeReason
            allowanceChargeReasonObj.value = AllowanceCharge_AllowanceChargeReason_value
            allowanceCharge.AllowanceChargeReason.Add(allowanceChargeReasonObj)

            allowanceCharge.Amount = New List(Of Amount)
            Dim allowancamountObj As New Amount
            allowancamountObj.value = AllowanceCharge_Amount_value
            allowancamountObj.currencyID = AllowanceCharge_Amount_currencyID
            allowanceCharge.Amount.Add(allowancamountObj)

            ' Create the second AllowanceCharge object
            Dim allowanceCharge1 As New AllowanceCharge()

            allowanceCharge1.ChargeIndicator = New List(Of ChargeIndicator)
            Dim allowancchargeIndicatorObj1 As New ChargeIndicator
            allowancchargeIndicatorObj1.value = AllowanceCharge_ChargeIndicator_1
            allowanceCharge1.ChargeIndicator.Add(allowancchargeIndicatorObj1)

            allowanceCharge1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
            Dim allowanceChargeReasonObj1 As New AllowanceChargeReason
            allowanceChargeReasonObj1.value = AllowanceCharge_AllowanceChargeReason_value_1
            allowanceCharge1.AllowanceChargeReason.Add(allowanceChargeReasonObj1)

            allowanceCharge1.Amount = New List(Of Amount)
            Dim allowancamountObj1 As New Amount
            allowancamountObj1.value = AllowanceCharge_Amount_value_1
            allowancamountObj1.currencyID = AllowanceCharge_Amount_currencyID_1
            allowanceCharge1.Amount.Add(allowancamountObj1)

            invoice.AllowanceCharge.Add(allowanceCharge)
            invoice.AllowanceCharge.Add(allowanceCharge1)
            'allowanceCharge end

            InsertIntoTblWebEventLog("JsonValue20", invoiceNumber, "", Session("UserID").ToString)

            'TaxTotal start
            invoice.TaxTotal = New List(Of TaxTotal)

            ' Create the TaxTotal object
            Dim taxTotal As New TaxTotal()

            ' Set TaxAmount
            taxTotal.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj As New TaxAmount
            taxAmountObj.value = TaxTotal_TaxAmount_value
            taxAmountObj.currencyID = TaxTotal_TaxAmount_currencyID
            taxTotal.TaxAmount.Add(taxAmountObj)

            ' Set TaxSubtotal
            taxTotal.TaxSubtotal = New List(Of TaxSubtotal)

            ' First TaxSubtotal
            Dim taxSubtotalObj1 As New TaxSubtotal

            ' TaxableAmount for first TaxSubtotal
            taxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj1 As New TaxableAmount
            taxableAmountObj1.value = TaxTotal_TaxSubtotal_TaxableAmount_value
            taxableAmountObj1.currencyID = TaxTotal_TaxSubtotal_TaxableAmount_currencyID
            taxSubtotalObj1.TaxableAmount.Add(taxableAmountObj1)

            ' TaxAmount for first TaxSubtotal
            taxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj1_1 As New TaxAmount
            taxAmountObj1_1.value = TaxTotal_TaxSubtotal_TaxAmount_value
            taxAmountObj1_1.currencyID = TaxTotal_TaxSubtotal_TaxAmount_currencyID
            taxSubtotalObj1.TaxAmount.Add(taxAmountObj1_1)

            ' TaxCategory for first TaxSubtotal
            taxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj1 As New TaxCategory

            taxCategoryObj1.ID = New List(Of ID)
            Dim taxCategoryIDObj1 As New ID
            taxCategoryIDObj1.Value = TaxTotal_TaxSubtotal_TaxCategory_ID_value
            taxCategoryObj1.ID.Add(taxCategoryIDObj1)

            taxCategoryObj1.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj1 As New TaxScheme
            taxSchemeObj1.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj1 As New TaxSchemeID
            taxSchemeIDObj1.ID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj1.schemeAgencyID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj1.schemeID = TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj1.ID.Add(taxSchemeIDObj1)

            taxCategoryObj1.TaxScheme.Add(taxSchemeObj1)

            taxCategoryObj1.Percent = Nothing
            taxCategoryObj1.TaxExemptionReason = Nothing

            taxSubtotalObj1.TaxCategory.Add(taxCategoryObj1)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj1.BaseUnitMeasure = Nothing
            taxSubtotalObj1.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj1)

            ' Second TaxSubtotal
            Dim taxSubtotalObj2 As New TaxSubtotal

            ' TaxableAmount for second TaxSubtotal
            taxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
            Dim taxableAmountObj2 As New TaxableAmount
            taxableAmountObj2.value = TaxTotal_TaxSubtotal2_TaxableAmount_value
            taxableAmountObj2.currencyID = TaxTotal_TaxSubtotal2_TaxableAmount_currencyID
            taxSubtotalObj2.TaxableAmount.Add(taxableAmountObj2)

            ' TaxAmount for second TaxSubtotal
            taxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
            Dim taxAmountObj2_1 As New TaxAmount
            taxAmountObj2_1.value = TaxTotal_TaxSubtotal2_TaxAmount_value
            taxAmountObj2_1.currencyID = TaxTotal_TaxSubtotal2_TaxAmount_currencyID
            taxSubtotalObj2.TaxAmount.Add(taxAmountObj2_1)

            ' TaxCategory for second TaxSubtotal
            taxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
            Dim taxCategoryObj2 As New TaxCategory

            taxCategoryObj2.ID = New List(Of ID)
            Dim taxCategoryIDObj2 As New ID
            taxCategoryIDObj2.Value = TaxTotal_TaxSubtotal2_TaxCategory_ID_value
            taxCategoryObj2.ID.Add(taxCategoryIDObj2)

            taxCategoryObj2.TaxScheme = New List(Of TaxScheme)
            Dim taxSchemeObj2 As New TaxScheme
            taxSchemeObj2.ID = New List(Of TaxSchemeID)
            Dim taxSchemeIDObj2 As New TaxSchemeID
            taxSchemeIDObj2.ID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_value
            taxSchemeIDObj2.schemeAgencyID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeAgencyID
            taxSchemeIDObj2.schemeID = TaxTotal_TaxSubtotal2_TaxCategory_TaxScheme_ID_schemeID
            taxSchemeObj2.ID.Add(taxSchemeIDObj2)

            taxCategoryObj2.TaxScheme.Add(taxSchemeObj2)

            taxCategoryObj2.Percent = Nothing
            taxCategoryObj2.TaxExemptionReason = Nothing

            taxSubtotalObj2.TaxCategory.Add(taxCategoryObj2)

            ' BaseUnitMeasure and PerUnitAmount are Nothing
            taxSubtotalObj2.BaseUnitMeasure = Nothing
            taxSubtotalObj2.PerUnitAmount = Nothing

            taxTotal.TaxSubtotal.Add(taxSubtotalObj2)

            invoice.TaxTotal.Add(taxTotal)
            'TaxTotal end
            InsertIntoTblWebEventLog("JsonValue21", invoiceNumber, "", Session("UserID").ToString)


            'LegalMonetaryTotal start
            invoice.LegalMonetaryTotal = New List(Of LegalMonetaryTotal)

            ' Create the LegalMonetaryTotal object
            Dim legalMonetaryTotal As New LegalMonetaryTotal()

            ' Set LineExtensionAmount
            legalMonetaryTotal.LineExtensionAmount = New List(Of LineExtensionAmount)
            Dim lineExtensionAmountObj As New LineExtensionAmount
            lineExtensionAmountObj.value = LegalMonetaryTotal_LineExtensionAmount_value
            lineExtensionAmountObj.currencyID = LegalMonetaryTotal_LineExtensionAmount_currencyID
            legalMonetaryTotal.LineExtensionAmount.Add(lineExtensionAmountObj)

            ' Set TaxExclusiveAmount
            legalMonetaryTotal.TaxExclusiveAmount = New List(Of TaxExclusiveAmount)
            Dim taxExclusiveAmountObj As New TaxExclusiveAmount
            taxExclusiveAmountObj.value = LegalMonetaryTotal_TaxExclusiveAmount_value
            taxExclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxExclusiveAmount_currencyID
            legalMonetaryTotal.TaxExclusiveAmount.Add(taxExclusiveAmountObj)

            ' Set TaxInclusiveAmount
            legalMonetaryTotal.TaxInclusiveAmount = New List(Of TaxInclusiveAmount)
            Dim taxInclusiveAmountObj As New TaxInclusiveAmount
            taxInclusiveAmountObj.value = LegalMonetaryTotal_TaxInclusiveAmount_value
            taxInclusiveAmountObj.currencyID = LegalMonetaryTotal_TaxInclusiveAmount_currencyID
            legalMonetaryTotal.TaxInclusiveAmount.Add(taxInclusiveAmountObj)

            ' Set AllowanceTotalAmount
            legalMonetaryTotal.AllowanceTotalAmount = New List(Of AllowanceTotalAmount)
            Dim legalMonetaryallowanceTotalAmountObj As New AllowanceTotalAmount
            legalMonetaryallowanceTotalAmountObj.value = LegalMonetaryTotal_AllowanceTotalAmount_value
            legalMonetaryallowanceTotalAmountObj.currencyID = LegalMonetaryTotal_AllowanceTotalAmount_currencyID
            legalMonetaryTotal.AllowanceTotalAmount.Add(legalMonetaryallowanceTotalAmountObj)

            ' Set ChargeTotalAmount
            legalMonetaryTotal.ChargeTotalAmount = New List(Of ChargeTotalAmount)
            Dim legalMonetarychargeTotalAmountObj As New ChargeTotalAmount
            legalMonetarychargeTotalAmountObj.value = LegalMonetaryTotal_ChargeTotalAmount_value
            legalMonetarychargeTotalAmountObj.currencyID = LegalMonetaryTotal_ChargeTotalAmount_currencyID
            legalMonetaryTotal.ChargeTotalAmount.Add(legalMonetarychargeTotalAmountObj)

            ' Set PayableAmount
            legalMonetaryTotal.PayableAmount = New List(Of PayableAmount)
            Dim legalMonetarypayableAmountObj As New PayableAmount
            legalMonetarypayableAmountObj.value = LegalMonetaryTotal_PayableAmount_value
            legalMonetarypayableAmountObj.currencyID = LegalMonetaryTotal_PayableAmount_currencyID
            legalMonetaryTotal.PayableAmount.Add(legalMonetarypayableAmountObj)

            ' Set PayableRoundingAmount
            legalMonetaryTotal.PayableRoundingAmount = New List(Of PayableRoundingAmount)
            Dim legalMonetarypayableRoundingAmountObj As New PayableRoundingAmount
            legalMonetarypayableRoundingAmountObj.value = LegalMonetaryTotal_PayableRoundingAmount_value
            legalMonetarypayableRoundingAmountObj.currencyID = LegalMonetaryTotal_PayableRoundingAmount_currencyID
            legalMonetaryTotal.PayableRoundingAmount.Add(legalMonetarypayableRoundingAmountObj)

            invoice.LegalMonetaryTotal.Add(legalMonetaryTotal)
            'LegalMonetaryTotal end
            InsertIntoTblWebEventLog("JsonValue22", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)


            'InvoiceLine start
            invoice.InvoiceLine = New List(Of InvoiceLine)

            If dtSalesDetail.Rows.Count > 0 Then

                For a = 0 To dtSalesDetail.Rows.Count - 1

                    'for InvoiceLine 
                    Dim InvoiceLine_AllowanceCharge_Amount_value = 0
                    Dim InvoiceLine_AllowanceCharge_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")
                    Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
                    Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
                    Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

                    Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
                    Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")
                    Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
                    Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
                    Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

                    InsertIntoTblWebEventLog("JsonValue22A", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)


                    Dim InvoiceLine_ID_value = a.ToString
                    Dim InvoiceLine_InvoicedQuantity_value = 3
                    Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

                    'Dim InvoiceLine_ID_value = "1"
                    '   Dim InvoiceLine_InvoicedQuantity_value = dtSalesDetail.Rows(a)("Quantity").ToString
                    '   Dim InvoiceLine_InvoicedQuantity_unitCode = dtSalesDetail.Rows(a)("UnitMs").ToString
                    'If String.IsNullOrEmpty(dtSalesDetail.Rows(a)("Quantity").ToString) = False Then
                    '    If dtSalesDetail.Rows(a)("Quantity").ToString > 0 Then
                    '        InvoiceLine_InvoicedQuantity_value = Convert.ToInt16(dtSalesDetail.Rows(a)("Quantity").ToString)

                    '    End If
                    'End If
                    'InsertIntoTblWebEventLog("JsonValue22B", invoiceNumber, InvoiceLine_InvoicedQuantity_value.ToString, Session("UserID").ToString)

                    'If String.IsNullOrEmpty(dtSalesDetail.Rows(a)("UOMDesc").ToString) Or dtSalesDetail.Rows(a)("UOMDesc").ToString <> "" Then
                    '    InvoiceLine_InvoicedQuantity_unitCode = dtSalesDetail.Rows(a)("UOMDesc").ToString()
                    'End If

                    InsertIntoTblWebEventLog("JsonValue22C", invoiceNumber, InvoiceLine_InvoicedQuantity_unitCode.ToString, Session("UserID").ToString)


                    Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = dtSetup.Rows(0)("EInvClassificationCode")
                    Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"


                    '  Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = dtSalesDetail.Rows(a)("ItemClassificationCode").ToString
                    '  Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
                    ' Dim InvoiceLine_Item_Description_value = dtSetup.Rows(0)("EInvClassificationDesc")
                    Dim InvoiceLine_Item_Description_value = "Pest control"
                    Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"

                    Dim InvoiceLine_ItemPriceExtension_Amount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("ValueBase")).ToString("F2")

                    '   Dim InvoiceLine_ItemPriceExtension_Amount_value As Decimal = "22.10"

                    Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_LineExtensionAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("AppliedBase")).ToString("F2")

                    '  Dim InvoiceLine_LineExtensionAmount_value As Decimal = "1000"

                    Dim InvoiceLine_LineExtensionAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_Price_PriceAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("UnitBase")).ToString("F2")
                    Dim InvoiceLine_Price_PriceAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("GSTBase")).ToString("F2")
                    Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("UnitBase")).ToString("F2")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("GSTBase")).ToString("F2")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value As Decimal = Convert.ToDecimal(dtSalesDetail.Rows(a)("UnitBase")).ToString("F2")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = dtSalesDetail.Rows(a)("Quantity")
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = dtSalesDetail.Rows(a)("UnitMs")

                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02" ' dtSalesDetail.Rows(a)("TaxTypeCode")
                    ' Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = dtSalesDetail.Rows(a)("Gst")
                    '   Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = dtS
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
                    Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing



                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = Convert.ToDecimal(dtSalesDetail.Rows(a)("GSTBase"))
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = dtSetup.Rows(0)("ARCurrency")

                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"

                    InsertIntoTblWebEventLog("JsonValue22B", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ''for InvoiceLine 
                    'Dim InvoiceLine_AllowanceCharge_Amount_value = 0
                    'Dim InvoiceLine_AllowanceCharge_Amount_currencyID = "MYR"
                    'Dim InvoiceLine_AllowanceCharge_ChargeIndicator = True
                    'Dim InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value = 0
                    'Dim InvoiceLine_AllowanceCharge_AllowanceChargeReason_value = ""

                    'Dim InvoiceLine_AllowanceCharge2_Amount_value = 0
                    'Dim InvoiceLine_AllowanceCharge2_Amount_currencyID = "MYR"
                    'Dim InvoiceLine_AllowanceCharge2_ChargeIndicator = False
                    'Dim InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value = 0
                    'Dim InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value = ""

                    'Dim InvoiceLine_ID_value = "1"
                    'Dim InvoiceLine_InvoicedQuantity_value = 3
                    'Dim InvoiceLine_InvoicedQuantity_unitCode = "M36"

                    'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value = "035"
                    'Dim InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID = "CLASS"
                    ''description
                    'Dim InvoiceLine_Item_Description_value = "Pest control"

                    ''OriginCountry
                    'Dim InvoiceLine_Item_OriginCountry_IdentificationCode_value = "MYS"


                    'Dim InvoiceLine_ItemPriceExtension_Amount_value = 3000
                    'Dim InvoiceLine_ItemPriceExtension_Amount_currencyID = "MYR"

                    'Dim InvoiceLine_LineExtensionAmount_value = 3000
                    'Dim InvoiceLine_LineExtensionAmount_currencyID = "MYR"

                    'Dim InvoiceLine_Price_PriceAmount_value = 1000
                    'Dim InvoiceLine_Price_PriceAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value = 1000
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value = 10
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value = 3
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode = "M36"

                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value = "02"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent = Nothing
                    'Dim InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = Nothing

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value = 2000
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value = 20
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID = "MYR"

                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value = "E"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent = 0
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value = "OTH"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID = "UN/ECE 5153"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID = "6"
                    'Dim InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason = "Test"



                    ' Create the InvoiceLine object
                    Dim invoiceLine As New InvoiceLine()

                    ' AllowanceCharge
                    invoiceLine.AllowanceCharge = New List(Of InvoiceLineAllowanceCharge)

                    ' First InvoiceLineAllowanceCharge
                    Dim invoiceLineallowanceChargeObj1 As New InvoiceLineAllowanceCharge()

                    invoiceLineallowanceChargeObj1.Amount = New List(Of Amount)
                    Dim invoiceLineallowanceChargeAmountObj1 As New Amount
                    invoiceLineallowanceChargeAmountObj1.value = InvoiceLine_AllowanceCharge_Amount_value
                    invoiceLineallowanceChargeAmountObj1.currencyID = InvoiceLine_AllowanceCharge_Amount_currencyID
                    invoiceLineallowanceChargeObj1.Amount.Add(invoiceLineallowanceChargeAmountObj1)

                    invoiceLineallowanceChargeObj1.ChargeIndicator = New List(Of ChargeIndicator)
                    Dim invoiceLineallowanceChargeIndicatorObj1 As New ChargeIndicator
                    invoiceLineallowanceChargeIndicatorObj1.value = InvoiceLine_AllowanceCharge_ChargeIndicator
                    invoiceLineallowanceChargeObj1.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj1)

                    invoiceLineallowanceChargeObj1.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
                    Dim invoiceLinemultiplierFactorNumericObj1 As New MultiplierFactorNumeric
                    invoiceLinemultiplierFactorNumericObj1.value = InvoiceLine_AllowanceCharge_MultiplierFactorNumeric_value
                    invoiceLineallowanceChargeObj1.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj1)

                    invoiceLineallowanceChargeObj1.AllowanceChargeReason = New List(Of AllowanceChargeReason)
                    Dim invoiceLineallowanceChargeReasonObj1 As New AllowanceChargeReason
                    invoiceLineallowanceChargeReasonObj1.value = InvoiceLine_AllowanceCharge_AllowanceChargeReason_value
                    invoiceLineallowanceChargeObj1.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj1)

                    invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj1)
                    InsertIntoTblWebEventLog("JsonValue22C", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Second InvoiceLineAllowanceCharge
                    Dim invoiceLineallowanceChargeObj2 As New InvoiceLineAllowanceCharge()

                    invoiceLineallowanceChargeObj2.Amount = New List(Of Amount)
                    Dim invoiceLineallowanceChargeAmountObj2 As New Amount
                    invoiceLineallowanceChargeAmountObj2.value = InvoiceLine_AllowanceCharge2_Amount_value
                    invoiceLineallowanceChargeAmountObj2.currencyID = InvoiceLine_AllowanceCharge2_Amount_currencyID
                    invoiceLineallowanceChargeObj2.Amount.Add(invoiceLineallowanceChargeAmountObj2)

                    invoiceLineallowanceChargeObj2.ChargeIndicator = New List(Of ChargeIndicator)
                    Dim invoiceLineallowanceChargeIndicatorObj2 As New ChargeIndicator
                    invoiceLineallowanceChargeIndicatorObj2.value = InvoiceLine_AllowanceCharge2_ChargeIndicator
                    invoiceLineallowanceChargeObj2.ChargeIndicator.Add(invoiceLineallowanceChargeIndicatorObj2)

                    invoiceLineallowanceChargeObj2.MultiplierFactorNumeric = New List(Of MultiplierFactorNumeric)
                    Dim invoiceLinemultiplierFactorNumericObj2 As New MultiplierFactorNumeric
                    invoiceLinemultiplierFactorNumericObj2.value = InvoiceLine_AllowanceCharge2_MultiplierFactorNumeric_value
                    invoiceLineallowanceChargeObj2.MultiplierFactorNumeric.Add(invoiceLinemultiplierFactorNumericObj2)

                    invoiceLineallowanceChargeObj2.AllowanceChargeReason = New List(Of AllowanceChargeReason)
                    Dim invoiceLineallowanceChargeReasonObj2 As New AllowanceChargeReason
                    invoiceLineallowanceChargeReasonObj2.value = InvoiceLine_AllowanceCharge2_AllowanceChargeReason_value
                    invoiceLineallowanceChargeObj2.AllowanceChargeReason.Add(invoiceLineallowanceChargeReasonObj2)

                    invoiceLine.AllowanceCharge.Add(invoiceLineallowanceChargeObj2)
                    InsertIntoTblWebEventLog("JsonValue22D", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' ID
                    invoiceLine.ID = New List(Of ID)
                    Dim invoiceLineIDObj As New ID
                    invoiceLineIDObj.Value = InvoiceLine_ID_value
                    invoiceLine.ID.Add(invoiceLineIDObj)

                    ' InvoicedQuantity
                    invoiceLine.InvoicedQuantity = New List(Of InvoicedQuantity)
                    Dim invoicedQuantityObj As New InvoicedQuantity
                    invoicedQuantityObj.value = InvoiceLine_InvoicedQuantity_value
                    invoicedQuantityObj.unitCode = InvoiceLine_InvoicedQuantity_unitCode
                    invoiceLine.InvoicedQuantity.Add(invoicedQuantityObj)
                    InsertIntoTblWebEventLog("JsonValue22E", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Item
                    invoiceLine.Item = New List(Of Item)
                    Dim itemObj As New Item

                    ' CommodityClassification
                    itemObj.CommodityClassification = New List(Of CommodityClassification)
                    Dim invoiceLinecommodityClassificationObj As New CommodityClassification
                    invoiceLinecommodityClassificationObj.ItemClassificationCode = New List(Of ItemClassificationCode)
                    Dim invoiceLineitemClassificationCodeObj As New ItemClassificationCode
                    invoiceLineitemClassificationCodeObj.value = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_value
                    invoiceLineitemClassificationCodeObj.listID = InvoiceLine_Item_CommodityClassification_ItemClassificationCode_listID
                    invoiceLinecommodityClassificationObj.ItemClassificationCode.Add(invoiceLineitemClassificationCodeObj)
                    itemObj.CommodityClassification.Add(invoiceLinecommodityClassificationObj)
                    InsertIntoTblWebEventLog("JsonValue22E1", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Description
                    itemObj.Description = New List(Of Description)
                    Dim invoiceLinedescriptionObj As New Description
                    invoiceLinedescriptionObj.Value = InvoiceLine_Item_Description_value
                    itemObj.Description.Add(invoiceLinedescriptionObj)
                    InsertIntoTblWebEventLog("JsonValue22E2", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' OriginCountry
                    itemObj.OriginCountry = New List(Of OriginCountry)
                    Dim invoiceLineoriginCountryObj As New OriginCountry
                    invoiceLineoriginCountryObj.IdentificationCode = New List(Of IdentificationCodeID)
                    Dim identificationCodeIDObj As New IdentificationCodeID
                    identificationCodeIDObj.Value = InvoiceLine_Item_OriginCountry_IdentificationCode_value
                    invoiceLineoriginCountryObj.IdentificationCode.Add(identificationCodeIDObj)
                    itemObj.OriginCountry.Add(invoiceLineoriginCountryObj)

                    invoiceLine.Item.Add(itemObj)
                    InsertIntoTblWebEventLog("JsonValue22F", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' ItemPriceExtension
                    invoiceLine.ItemPriceExtension = New List(Of ItemPriceExtension)
                    Dim invoiceLineitemPriceExtensionObj As New ItemPriceExtension
                    invoiceLineitemPriceExtensionObj.Amount = New List(Of Amount)
                    Dim invoiceLineitemPriceExtensionAmountObj As New Amount
                    invoiceLineitemPriceExtensionAmountObj.value = InvoiceLine_ItemPriceExtension_Amount_value
                    invoiceLineitemPriceExtensionAmountObj.currencyID = InvoiceLine_ItemPriceExtension_Amount_currencyID
                    invoiceLineitemPriceExtensionObj.Amount.Add(invoiceLineitemPriceExtensionAmountObj)
                    invoiceLine.ItemPriceExtension.Add(invoiceLineitemPriceExtensionObj)

                    ' LineExtensionAmount
                    invoiceLine.LineExtensionAmount = New List(Of LineExtensionAmount)
                    Dim invoiceLine_lineExtensionAmountObj As New LineExtensionAmount
                    invoiceLine_lineExtensionAmountObj.value = InvoiceLine_LineExtensionAmount_value
                    invoiceLine_lineExtensionAmountObj.currencyID = InvoiceLine_LineExtensionAmount_currencyID
                    invoiceLine.LineExtensionAmount.Add(invoiceLine_lineExtensionAmountObj)

                    ' Price
                    invoiceLine.Price = New List(Of Price)
                    Dim invoiceLinepriceObj As New Price
                    invoiceLinepriceObj.PriceAmount = New List(Of PriceAmount)
                    Dim invoiceLinepriceAmountObj As New PriceAmount
                    invoiceLinepriceAmountObj.value = InvoiceLine_Price_PriceAmount_value
                    invoiceLinepriceAmountObj.currencyID = InvoiceLine_Price_PriceAmount_currencyID
                    invoiceLinepriceObj.PriceAmount.Add(invoiceLinepriceAmountObj)
                    invoiceLine.Price.Add(invoiceLinepriceObj)
                    InsertIntoTblWebEventLog("JsonValue22G", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' TaxTotal
                    invoiceLine.TaxTotal = New List(Of TaxTotal)
                    Dim invoiceLinetaxTotalObj As New TaxTotal
                    InsertIntoTblWebEventLog("JsonValue22G1", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxTotalObj.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxTotalAmountObj As New TaxAmount
                    invoiceLinetaxTotalAmountObj.value = InvoiceLine_TaxTotal_TaxAmount_value
                    invoiceLinetaxTotalAmountObj.currencyID = InvoiceLine_TaxTotal_TaxAmount_currencyID
                    invoiceLinetaxTotalObj.TaxAmount.Add(invoiceLinetaxTotalAmountObj)
                    InsertIntoTblWebEventLog("JsonValue22G2", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxTotalObj.TaxSubtotal = New List(Of TaxSubtotal)

                    ' First TaxSubtotal
                    Dim invoiceLinetaxSubtotalObj1 As New TaxSubtotal
                    invoiceLinetaxSubtotalObj1.TaxableAmount = New List(Of TaxableAmount)
                    Dim invoiceLinetaxSubtotalTaxableAmountObj1 As New TaxableAmount
                    invoiceLinetaxSubtotalTaxableAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_value
                    invoiceLinetaxSubtotalTaxableAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxableAmount_currencyID
                    invoiceLinetaxSubtotalObj1.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G3", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxSubtotalTaxAmountObj1 As New TaxAmount
                    invoiceLinetaxSubtotalTaxAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_value
                    invoiceLinetaxSubtotalTaxAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxAmount_currencyID
                    invoiceLinetaxSubtotalObj1.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G4", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.PerUnitAmount = New List(Of PerUnitAmount)
                    Dim invoiceLineperUnitAmountObj1 As New PerUnitAmount
                    invoiceLineperUnitAmountObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_value
                    invoiceLineperUnitAmountObj1.currencyID = InvoiceLine_TaxTotal_TaxSubtotal_PerUnitAmount_currencyID
                    invoiceLinetaxSubtotalObj1.PerUnitAmount.Add(invoiceLineperUnitAmountObj1)
                    InsertIntoTblWebEventLog("JsonValue22G5", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.BaseUnitMeasure = New List(Of BaseUnitMeasure)
                    Dim invoiceLinebaseUnitMeasureObj1 As New BaseUnitMeasure
                    invoiceLinebaseUnitMeasureObj1.value = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_value
                    invoiceLinebaseUnitMeasureObj1.unitCode = InvoiceLine_TaxTotal_TaxSubtotal_BaseUnitMeasure_unitCode
                    invoiceLinetaxSubtotalObj1.BaseUnitMeasure.Add(invoiceLinebaseUnitMeasureObj1)
                    InsertIntoTblWebEventLog("JsonValue22G6", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj1.TaxCategory = New List(Of TaxCategory)
                    Dim invoiceLinetaxCategoryObj1 As New TaxCategory
                    invoiceLinetaxCategoryObj1.ID = New List(Of ID)
                    Dim invoiceLinetaxCategoryIDObj1 As New ID
                    invoiceLinetaxCategoryIDObj1.Value = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_ID_value
                    invoiceLinetaxCategoryObj1.ID.Add(invoiceLinetaxCategoryIDObj1)

                    InsertIntoTblWebEventLog("JsonValue22H", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxCategoryObj1.TaxScheme = New List(Of TaxScheme)
                    Dim invoiceLinetaxSchemeObj1 As New TaxScheme
                    invoiceLinetaxSchemeObj1.ID = New List(Of TaxSchemeID)
                    Dim invoiceLinetaxSchemeIDObj1 As New TaxSchemeID
                    invoiceLinetaxSchemeIDObj1.ID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_value
                    invoiceLinetaxSchemeIDObj1.schemeID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                    invoiceLinetaxSchemeIDObj1.schemeAgencyID = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                    invoiceLinetaxSchemeObj1.ID.Add(invoiceLinetaxSchemeIDObj1)
                    invoiceLinetaxCategoryObj1.TaxScheme.Add(invoiceLinetaxSchemeObj1)

                    invoiceLinetaxCategoryObj1.Percent = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_Percent
                    invoiceLinetaxCategoryObj1.TaxExemptionReason = InvoiceLine_TaxTotal_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason

                    invoiceLinetaxSubtotalObj1.TaxCategory.Add(invoiceLinetaxCategoryObj1)

                    invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj1)
                    InsertIntoTblWebEventLog("JsonValue22I", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    ' Second TaxSubtotal
                    Dim invoiceLinetaxSubtotalObj2 As New TaxSubtotal
                    invoiceLinetaxSubtotalObj2.TaxableAmount = New List(Of TaxableAmount)
                    Dim invoiceLinetaxSubtotalTaxableAmountObj2 As New TaxableAmount
                    invoiceLinetaxSubtotalTaxableAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_value
                    invoiceLinetaxSubtotalTaxableAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxableAmount_currencyID
                    invoiceLinetaxSubtotalObj2.TaxableAmount.Add(invoiceLinetaxSubtotalTaxableAmountObj2)

                    invoiceLinetaxSubtotalObj2.TaxAmount = New List(Of TaxAmount)
                    Dim invoiceLinetaxSubtotalTaxAmountObj2 As New TaxAmount
                    invoiceLinetaxSubtotalTaxAmountObj2.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_value
                    invoiceLinetaxSubtotalTaxAmountObj2.currencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxAmount_currencyID
                    invoiceLinetaxSubtotalObj2.TaxAmount.Add(invoiceLinetaxSubtotalTaxAmountObj2)

                    InsertIntoTblWebEventLog("JsonValue22J", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxSubtotalObj2.TaxCategory = New List(Of TaxCategory)
                    Dim invoiceLinetaxCategoryObj2 As New TaxCategory
                    invoiceLinetaxCategoryObj2.ID = New List(Of ID)
                    Dim invoiceLinetaxCategoryIDObj2 As New ID
                    invoiceLinetaxCategoryIDObj2.Value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_ID_value
                    invoiceLinetaxCategoryObj2.ID.Add(invoiceLinetaxCategoryIDObj2)

                    invoiceLinetaxCategoryObj2.Percent = New List(Of Percent)
                    Dim invoiceLinepercentObj As New Percent
                    invoiceLinepercentObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_Percent
                    invoiceLinetaxCategoryObj2.Percent.Add(invoiceLinepercentObj)

                    InsertIntoTblWebEventLog("JsonValue22K", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLinetaxCategoryObj2.TaxScheme = New List(Of TaxScheme)
                    Dim invoiceLinetaxSchemeObj2 As New TaxScheme
                    invoiceLinetaxSchemeObj2.ID = New List(Of TaxSchemeID)
                    Dim invoiceLinetaxSchemeIDObj2 As New TaxSchemeID
                    invoiceLinetaxSchemeIDObj2.ID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_value
                    invoiceLinetaxSchemeIDObj2.schemeID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeID
                    invoiceLinetaxSchemeIDObj2.schemeAgencyID = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_ID_schemeAgencyID
                    invoiceLinetaxSchemeObj2.ID.Add(invoiceLinetaxSchemeIDObj2)

                    invoiceLinetaxCategoryObj2.TaxScheme.Add(invoiceLinetaxSchemeObj2)

                    invoiceLinetaxCategoryObj2.TaxExemptionReason = New List(Of TaxExemptionReason)
                    Dim invoiceLinetaxExemptionReasonObj As New TaxExemptionReason
                    invoiceLinetaxExemptionReasonObj.value = InvoiceLine_TaxTotal1_TaxSubtotal_TaxCategory_TaxScheme_TaxExemptionReason
                    invoiceLinetaxCategoryObj2.TaxExemptionReason.Add(invoiceLinetaxExemptionReasonObj)

                    invoiceLinetaxSubtotalObj2.TaxCategory.Add(invoiceLinetaxCategoryObj2)

                    invoiceLinetaxTotalObj.TaxSubtotal.Add(invoiceLinetaxSubtotalObj2)

                    InsertIntoTblWebEventLog("JsonValue22L", invoiceNumber, dtSalesDetail.Rows.Count, Session("UserID").ToString)

                    invoiceLine.TaxTotal.Add(invoiceLinetaxTotalObj)

                    invoice.InvoiceLine.Add(invoiceLine)
                    'invoiceLine end
                    InsertIntoTblWebEventLog("JsonValue23", invoiceNumber, a.ToString, Session("UserID").ToString)

                Next
            End If



            InsertIntoTblWebEventLog("JsonValue24", invoiceNumber, "", Session("UserID").ToString)

            'TaxExchangeRate start
            invoice.TaxExchangeRate = New List(Of TaxExchangeRate)

            ' Create a new TaxExchangeRate object
            Dim taxExchangeRateObj As New TaxExchangeRate()

            ' Set SourceCurrencyCode
            taxExchangeRateObj.SourceCurrencyCode = New List(Of SourceCurrencyCode)
            Dim sourceCurrencyCodeObj As New SourceCurrencyCode
            sourceCurrencyCodeObj.value = TaxExchangeRate_SourceCurrencyCode_value
            taxExchangeRateObj.SourceCurrencyCode.Add(sourceCurrencyCodeObj)

            ' Set TargetCurrencyCode
            taxExchangeRateObj.TargetCurrencyCode = New List(Of TargetCurrencyCode)
            Dim targetCurrencyCodeObj As New TargetCurrencyCode
            targetCurrencyCodeObj.value = TaxExchangeRate_TargetCurrencyCode_value
            taxExchangeRateObj.TargetCurrencyCode.Add(targetCurrencyCodeObj)

            ' Set CalculationRate
            taxExchangeRateObj.CalculationRate = New List(Of CalculationRate)
            Dim calculationRateObj As New CalculationRate
            calculationRateObj.value = TaxExchangeRate_CalculationRate_value
            taxExchangeRateObj.CalculationRate.Add(calculationRateObj)

            ' Add the configured TaxExchangeRate object to invoice.TaxExchangeRate
            invoice.TaxExchangeRate.Add(taxExchangeRateObj)

            'TaxExchangeRate end

            invoiceWrapper.Invoice.Add(invoice)
            InsertIntoTblWebEventLog("JsonValue24", invoiceNumber, "", Session("UserID").ToString)


            '  Dim settings As New JsonSerializerSettings With {
            '    .NullValueHandling = NullValueHandling.Ignore
            '}

            InsertIntoTblWebEventLog("JsonValue25", invoiceNumber, JsonConvert.SerializeObject(invoiceWrapper).ToString, Session("UserID").ToString)

            Dim settings As New JsonSerializerSettings With {
                .NullValueHandling = NullValueHandling.Ignore,
                .ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            }

            Dim json As String = JsonConvert.SerializeObject(invoiceWrapper, settings)
            InsertIntoTblWebEventLog("JsonValue26", invoiceNumber, json, Session("UserID").ToString)


            Return json

        Catch ex As Exception
            InsertIntoTblWebEventLog("JsonError2", ex.Message.ToString, invoiceID, Session("UserID"))
            lblMessage.Text = ex.Message.ToString

        End Try
    End Function

    'Protected Function ValidateSubmission(tokenno As String) As String

    '    'Dim tokenno As String = ""
    '    'tokenno = AccessToken
    '    txtInternalID.Text = ""
    '    ' Dim submissionUid As String = txtSubmissionID.Text
    '    InsertIntoTblWebEventLog("ValidateSubmission", ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions"), submissionUid, Session("UserID"))
    '    ' = "2HNM2FC7PSBH8ZDE8C9RA8EJ10"
    '    Dim apiGetdocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")

    '    '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documentsubmissions/"

    '    Using client = New HttpClient()

    '        If Not String.IsNullOrWhiteSpace(tokenno) Then
    '            client.DefaultRequestHeaders.Clear()
    '            client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
    '            client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
    '        End If

    '        Try
    '            Dim apiGetdocument As String = apiGetdocumentURL + submissionUid
    '            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '            Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
    '            Dim responseString = response.Content.ReadAsStringAsync().Result
    '            InsertIntoTblWebEventLog("ValidateSubmission1", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

    '            If response.IsSuccessStatusCode Then
    '                Dim apiResponse As GetSubmissionDocument = JsonConvert.DeserializeObject(Of GetSubmissionDocument)(responseString)
    '                txtSubmissionDate.Text = apiResponse.dateTimeReceived.ToString

    '                If apiResponse.documentSummary.Count() > 0 Then
    '                    For Each Item In apiResponse.documentSummary
    '                        ' txtUUID.Text = Item.uuid
    '                        txtInternalID.Text = Item.internalid
    '                        Exit For
    '                    Next
    '                End If
    '                InsertIntoTblWebEventLog("ValidateSubmission1", txtInternalID.Text, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

    '                Return txtInternalID.Text
    '            Else
    '                Return "ERROR"
    '            End If


    '        Catch ex As Exception
    '            Dim result = "error Message -" + ex.Message
    '            Dim result1 = ""
    '        End Try
    '    End Using

    'End Function

    Protected Function GetSubmission(tokenno As String) As String

        'Dim tokenno As String = ""
        'tokenno = AccessToken

        Dim submissionUid As String = txtSubmissionID.Text
        InsertIntoTblWebEventLog("GetSubmission", ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions"), submissionUid, Session("UserID"))
        ' = "2HNM2FC7PSBH8ZDE8C9RA8EJ10"
        Dim apiGetdocumentURL = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentsubmissions")

        '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documentsubmissions/"

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenNO) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + submissionUid
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("GetSubmission1", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetSubmissionDocument = JsonConvert.DeserializeObject(Of GetSubmissionDocument)(responseString)
                    txtSubmissionDate.Text = apiResponse.dateTimeReceived.ToString

                    If apiResponse.documentSummary.Count() > 0 Then
                        For Each Item In apiResponse.documentSummary
                            ' txtUUID.Text = Item.uuid
                            txtLongID.Text = Item.longid
                            Exit For
                        Next
                    End If
                    InsertIntoTblWebEventLog("GetSubmission1", txtLongID.Text, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                    Return apiResponse.submissionUid
                Else
                    Return "ERROR"
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Function

    '  Protected Function DocumentCancellation() As String

    'Dim tokenno As String = ""
    'tokenno = AccessToken

    'Dim documentUUID As String = txtUUID.Text + "/state"
    'Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/state/"

    'Using client = New HttpClient()

    '    If Not String.IsNullOrWhiteSpace(tokenno) Then
    '        client.DefaultRequestHeaders.Clear()
    '        client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
    '        client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
    '    End If

    '    Try
    '        Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
    '        InsertIntoTblWebEventLog("DocumentCancellation", apiGetdocument, txtUUID.Text, Session("UserID"))

    '        System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
    '        Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
    '        Dim responseString = response.Content.ReadAsStringAsync().Result

    '        If response.IsSuccessStatusCode Then
    '            Dim apiResponse As CancelDocument = JsonConvert.DeserializeObject(Of CancelDocument)(responseString)
    '            Return apiResponse.Status
    '        End If

    '    Catch ex As Exception
    '        Dim result = "error Message -" + ex.Message
    '        Dim result1 = ""
    '    End Try
    'End Using

    Protected Function DocumentCancellation() As String

        Dim tokenno As String = ""
        tokenno = AccessToken

        ' Dim documentUUID As String = "YSRXY4XAY7JZ022KR4CBH1JJ10" + "/state"
        Dim documentUUID As String = txtUUID.Text + "/state"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocumentcancellation")

        '  Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/state/"

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim requestBody As New CancelDocument With {
                .uuid = txtUUID.Text,
                .status = "cancelled",
                .Reason = txtReasonCancelEInvoice.Text
                }
                Dim jsonPayload As String = JsonConvert.SerializeObject(requestBody)
                Dim content As New StringContent(jsonPayload, Encoding.UTF8, "application/json")
                Dim response As HttpResponseMessage = client.PutAsync(apiGetdocument, content).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result
                InsertIntoTblWebEventLog("DocumentCancellation1", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As CancelDocument = JsonConvert.DeserializeObject(Of CancelDocument)(responseString)

                    txtEInvoiceStatus.Text = "CANCELLED"
                    txtCancellationDate.Text = DateTime.Now.ToString
                    InsertIntoTblWebEventLog("DocumentCancellation21", "", txtInvoiceNo.Text, Session("UserID").ToString)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "EINVOICE", txtInvoiceNo.Text, "CANCELLATION", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtRcno.Text)
                    InsertIntoTblEInvoiceEventLog("CANCELLATION", txtCancellationReason.Text)

                    '   CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "INVOICE", txtInvoiceNo.Text, "EINVOICECANCELLATION", DateTime.Now.ToString, 0, 0, 0, txtUUID.Text, "", txtRcno.Text)

                    InsertIntoTblWebEventLog("DocumentCancellation21", "", txtInvoiceNo.Text, Session("UserID").ToString)

                    Return "SUCCESS"
                    ' Return apiResponse.status
                Else
                    Return "FAILURE"
                End If


                InsertIntoTblWebEventLog("DocumentCancellation2", "", response.IsSuccessStatusCode.ToString, Session("UserID").ToString)

            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
                Return "FAILURE"
            End Try
        End Using

    End Function

    Protected Function GetDocument(tokenno As String, UUID As String) As String

        'Dim token = GetToken()
        'Dim tokenno As String = AccessToken

        Dim documentUUID As String = UUID + "/raw"
        '  Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        ' WriteToFile(documentUUID)

        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                '    WriteToFile(apiGetdocument)
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                InsertIntoTblWebEventLog("GetDocument1", apiGetdocument, response.IsSuccessStatusCode.ToString, Session("UserID").ToString)


                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetDocumentByID = JsonConvert.DeserializeObject(Of GetDocumentByID)(responseString)
                    txtLongID.Text = apiResponse.longID
                    InsertIntoTblWebEventLog("GetDocument2", txtEInvoiceStatus.Text, apiResponse.status.ToString, Session("UserID").ToString)

                    Return apiResponse.status.ToUpper

                Else
                    Return "FAILURE"
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                InsertIntoTblWebEventLog("GetDocumentError", result, ex.Message.ToString, Session("UserID").ToString)

                Return "FAILURE"
            End Try
        End Using

    End Function

    'Get document By ID
    Protected Sub GetDocument()

        Dim tokenno As String = ""
        tokenno = AccessToken

        Dim documentUUID As String = "FMA9ZNWHMY3ZPSJS8C9RA8EJ10" + "/raw"
        '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetDocumentByID = JsonConvert.DeserializeObject(Of GetDocumentByID)(responseString)
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Sub

    'Get document Details
    Protected Sub GetDocumentDetails()

        Dim tokenno As String = ""
        tokenno = AccessToken

        Dim documentUUID As String = "FMA9ZNWHMY3ZPSJS8C9RA8EJ10" + "/details"
        '   Dim apiGetdocumentURL As String = "https://preprod-api.myinvois.hasil.gov.my/api/v1.0/documents/"
        Dim apiGetdocumentURL As String = ConfigurationManager.AppSettings.[Get]("apiEInvoicedocuments")

        Using client = New HttpClient()

            If Not String.IsNullOrWhiteSpace(tokenno) Then
                client.DefaultRequestHeaders.Clear()
                client.DefaultRequestHeaders.Add("Authorization", "Bearer " & tokenno)
                client.DefaultRequestHeaders.Accept.Add(New MediaTypeWithQualityHeaderValue("application/json"))
            End If

            Try
                Dim apiGetdocument As String = apiGetdocumentURL + documentUUID
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 Or SecurityProtocolType.Tls12
                Dim response As HttpResponseMessage = client.GetAsync(apiGetdocument).Result
                Dim responseString = response.Content.ReadAsStringAsync().Result

                If response.IsSuccessStatusCode Then
                    Dim apiResponse As GetSubmissionDocument = JsonConvert.DeserializeObject(Of GetSubmissionDocument)(responseString)
                End If


            Catch ex As Exception
                Dim result = "error Message -" + ex.Message
                Dim result1 = ""
            End Try
        End Using

    End Sub


    Public Shared Function GetSHA256Hash(input As String) As String
        Dim bytes As Byte() = Encoding.UTF8.GetBytes(input)

        Using sha256 As SHA256 = sha256.Create()
            Dim hashBytes As Byte() = sha256.ComputeHash(bytes)

            Dim sb As New StringBuilder()
            For Each b As Byte In hashBytes
                sb.Append(b.ToString("x2")) ' Format as hexadecimal
            Next

            Return sb.ToString()
        End Using
    End Function

    Protected Sub ddlReasonforCancellation_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlReasonforCancellation.SelectedIndexChanged
        If ddlReasonforCancellation.Text = "Other" Then
            ' txtReasonCancelEInvoice.Visible = True
            reasonother.Visible = True
            mdlConfirmCancelEInvoice.Show()
        ElseIf ddlReasonforCancellation.Text = "--SELECT--" Then
            reasonother.Visible = False
            txtReasonCancelEInvoice.Text = ""
        Else
            reasonother.Visible = False
            ' txtReasonCancelEInvoice.Visible = False
            txtReasonCancelEInvoice.Text = ddlReasonforCancellation.Text
            mdlConfirmCancelEInvoice.Show()
        End If

    End Sub

End Class


Public Class GetDocumentByID
    Public Property submissionUid As String
    Public Property longID As String
    Public Property internalId As String
    Public Property typeName As String
    Public Property typeVersionName As String
    Public Property issuerTin As String
    Public Property issuerName As String
    Public Property receiverId As String
    Public Property receiverName As String
    Public Property dateTimeReceived As String
    Public Property dateTimeValidated As String
    Public Property status As String
    Public Property documentStatusReason As String
    Public Property cancelDateTime As String
    Public Property rejectRequestDateTime As String
    Public Property document As String
    Public Property createdByUserId As String
    Public Property dateTimeIssued As String
    Public Property totalExcludingTax As String
    Public Property totalDiscount As String
    Public Property totalNetAmount As String
    Public Property totalPayableAmount As String

End Class

Public Class GetSubmissionDocument
    Public Property submissionUid As String
    Public Property documentCount As String
    Public Property dateTimeReceived As String
    Public Property overallStatus As String
    Public Property documentSummary As List(Of DocumentSummary)

End Class

Public Class DocumentSummary
    Public Property uuid As String
    Public Property submissionUid As String
    Public Property longId As String
    Public Property internalId As String
    Public Property typeName As String
    Public Property typeVersionName As String
    Public Property issuerTin As String
    Public Property issuerName As String
    Public Property receiverId As String
    Public Property receiverName As String
    Public Property dateTimeIssued As String
    Public Property dateTimeReceived As String
    Public Property dateTimeValidated As String
    Public Property totalPayableAmount As String
    Public Property totalExcludingTax As String
    Public Property totalDiscount As String
    Public Property totalNetAmount As String
    Public Property status As String
    Public Property cancelDateTime As String
    Public Property rejectRequestDateTime As String
    Public Property documentStatusReason As String
    Public Property createdByUserId As String
End Class

Public Class InvoiceWrapper

    <JsonProperty("_D")>
    Public Property _D As String

    <JsonProperty("_A")>
    Public Property _A As String

    <JsonProperty("_B")>
    Public Property _B As String

    <JsonProperty("Invoice")>
    Public Property Invoice As List(Of Invoice)

    <JsonProperty("LastActivityDate")>
    Public Property _LastActDate As DateTime

End Class

Public Class InvoiceWrapper_Without_certificate

    <JsonProperty("_D")>
    Public Property _D As String

    <JsonProperty("_A")>
    Public Property _A As String

    <JsonProperty("_B")>
    Public Property _B As String

    <JsonProperty("Invoice")>
    Public Property Invoice As List(Of Invoice_without_Certificate)

End Class

Public Class Invoice_without_Certificate
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("IssueDate")>
    Public Property IssueDate As List(Of IssueDate)

    <JsonProperty("IssueTime")>
    Public Property IssueTime As List(Of IssueTime)

    <JsonProperty("InvoiceTypeCode")>
    Public Property InvoiceTypeCode As List(Of InvoiceTypeCode)

    <JsonProperty("DocumentCurrencyCode")>
    Public Property DocumentCurrencyCode As List(Of DocumentCurrencyCode)

    <JsonProperty("InvoicePeriod")>
    Public Property InvoicePeriod As List(Of InvoicePeriod)

    <JsonProperty("BillingReference")>
    Public Property BillingReference As List(Of BillingReference)

    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)

    <JsonProperty("AccountingSupplierParty")>
    Public Property AccountingSupplierParty As List(Of AccountingSupplierParty)

    <JsonProperty("AccountingCustomerParty")>
    Public Property AccountingCustomerParty As List(Of AccountingCustomerParty)

    <JsonProperty("Delivery")>
    Public Property Delivery As List(Of Delivery)

    <JsonProperty("PaymentMeans")>
    Public Property PaymentMeans As List(Of PaymentMeans)

    <JsonProperty("PaymentTerms")>
    Public Property PaymentTerms As List(Of PaymentTerms)

    <JsonProperty("PrepaidPayment")>
    Public Property PrepaidPayment As List(Of PrepaidPayment)

    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of AllowanceCharge)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)

    <JsonProperty("LegalMonetaryTotal")>
    Public Property LegalMonetaryTotal As List(Of LegalMonetaryTotal)

    <JsonProperty("InvoiceLine")>
    Public Property InvoiceLine As List(Of InvoiceLine)

    <JsonProperty("TaxExchangeRate")>
    Public Property TaxExchangeRate As List(Of TaxExchangeRate)

End Class

Public Class Invoice
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("IssueDate")>
    Public Property IssueDate As List(Of IssueDate)

    <JsonProperty("IssueTime")>
    Public Property IssueTime As List(Of IssueTime)

    <JsonProperty("InvoiceTypeCode")>
    Public Property InvoiceTypeCode As List(Of InvoiceTypeCode)

    <JsonProperty("DocumentCurrencyCode")>
    Public Property DocumentCurrencyCode As List(Of DocumentCurrencyCode)

    <JsonProperty("InvoicePeriod")>
    Public Property InvoicePeriod As List(Of InvoicePeriod)

    <JsonProperty("BillingReference")>
    Public Property BillingReference As List(Of BillingReference)

    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)

    <JsonProperty("AccountingSupplierParty")>
    Public Property AccountingSupplierParty As List(Of AccountingSupplierParty)

    <JsonProperty("AccountingCustomerParty")>
    Public Property AccountingCustomerParty As List(Of AccountingCustomerParty)

    <JsonProperty("Delivery")>
    Public Property Delivery As List(Of Delivery)

    <JsonProperty("PaymentMeans")>
    Public Property PaymentMeans As List(Of PaymentMeans)

    <JsonProperty("PaymentTerms")>
    Public Property PaymentTerms As List(Of PaymentTerms)

    <JsonProperty("PrepaidPayment")>
    Public Property PrepaidPayment As List(Of PrepaidPayment)

    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of AllowanceCharge)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)

    <JsonProperty("LegalMonetaryTotal")>
    Public Property LegalMonetaryTotal As List(Of LegalMonetaryTotal)

    <JsonProperty("InvoiceLine")>
    Public Property InvoiceLine As List(Of InvoiceLine)

    <JsonProperty("TaxExchangeRate")>
    Public Property TaxExchangeRate As List(Of TaxExchangeRate)

    <JsonProperty("UBLExtensions")>
    Public Property UBLExtensions As List(Of UBLExtensions)
    <JsonProperty("Signature")>
    Public Property Signature As List(Of Signature)

End Class
Public Class ID
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class IssueDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class IssueTime
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class InvoiceTypeCode
    <JsonProperty("_")>
    Public Property Value As String

    <JsonProperty("listVersionID")>
    Public Property ListVersionID As String
End Class

Public Class DocumentCurrencyCode
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class InvoicePeriod
    <JsonProperty("StartDate")>
    Public Property StartDate As List(Of StartDate)

    <JsonProperty("EndDate")>
    Public Property EndDate As List(Of EndDate)

    <JsonProperty("Description")>
    Public Property Description As List(Of Description)
End Class

' Classes for InvoicePeriod sub-properties

Public Class StartDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class EndDate
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class Description
    <JsonProperty("_")>
    Public Property Value As String
End Class

Public Class BillingReference
    <JsonProperty("AdditionalDocumentReference")>
    Public Property AdditionalDocumentReference As List(Of AdditionalDocumentReference)
End Class

Public Class AdditionalDocumentReference
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)
End Class

Public Class AccountingSupplierParty
    <JsonProperty("AdditionalAccountID")>
    Public Property AdditionalAccountID As List(Of AdditionalAccountID)

    <JsonProperty("Party")>
    Public Property Party As List(Of Party)
End Class

Public Class AdditionalAccountID
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("schemeAgencyName")>
    Public Property schemeAgencyName As String
End Class

Public Class Party
    <JsonProperty("IndustryClassificationCode")>
    Public Property IndustryClassificationCode As List(Of IndustryClassificationCode)

    <JsonProperty("PartyIdentification")>
    Public Property PartyIdentification As List(Of PartyIdentification)

    <JsonProperty("PostalAddress")>
    Public Property PostalAddress As List(Of PostalAddress)

    <JsonProperty("PartyLegalEntity")>
    Public Property PartyLegalEntity As List(Of PartyLegalEntity)

    <JsonProperty("Contact")>
    Public Property Contact As List(Of Contact)

End Class

Public Class IndustryClassificationCode
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("name")>
    Public Property name As String
End Class
Public Class PartyIdentification
    <JsonProperty("ID")>
    Public Property ID As List(Of PartyIdentificationID)

End Class

Public Class PartyIdentificationID
    <JsonProperty("_")>
    Public Property ID As String

    <JsonProperty("schemeID")>
    Public Property schemeID As String


End Class

' PostalAddress Class
Public Class PostalAddress
    <JsonProperty("CityName")>
    Public Property CityName As List(Of CityName)

    <JsonProperty("PostalZone")>
    Public Property PostalZone As List(Of PostalZone)

    <JsonProperty("CountrySubentityCode")>
    Public Property CountrySubentityCode As List(Of CountrySubentityCode)

    <JsonProperty("AddressLine")>
    Public Property AddressLine As List(Of AddressLine)

    <JsonProperty("Country")>
    Public Property Country As List(Of Country)
End Class

' CityName Class
Public Class CityName
    <JsonProperty("_")>
    Public Property value As String
End Class

' PostalZone Class
Public Class PostalZone
    <JsonProperty("_")>
    Public Property value As String
End Class

' CountrySubentityCode Class
Public Class CountrySubentityCode
    <JsonProperty("_")>
    Public Property value As String
End Class

' AddressLine Class
Public Class AddressLine
    <JsonProperty("Line")>
    Public Property Line As List(Of Line)
End Class

' Line Class
Public Class Line
    <JsonProperty("_")>
    Public Property value As String
End Class

' Country Class
Public Class Country
    <JsonProperty("IdentificationCode")>
    Public Property IdentificationCode As List(Of IdentificationCode)
End Class

' IdentificationCode Class
Public Class IdentificationCode
    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("listID")>
    Public Property listID As String

    <JsonProperty("listAgencyID")>
    Public Property listAgencyID As String
End Class

' PartyLegalEntity Class
Public Class PartyLegalEntity
    <JsonProperty("RegistrationName")>
    Public Property RegistrationName As List(Of RegistrationName)
End Class

' RegistrationName Class
Public Class RegistrationName
    <JsonProperty("_")>
    Public Property value As String
End Class

' Contact Class
Public Class Contact
    <JsonProperty("Telephone")>
    Public Property Telephone As List(Of Telephone)

    <JsonProperty("ElectronicMail")>
    Public Property ElectronicMail As List(Of ElectronicMail)
End Class

' Telephone Class
Public Class Telephone
    <JsonProperty("_")>
    Public Property value As String
End Class

' ElectronicMail Class
Public Class ElectronicMail
    <JsonProperty("_")>
    Public Property value As String
End Class

' AccountingCustomerParty Class (new class for customer data)
Public Class AccountingCustomerParty
    <JsonProperty("Party")>
    Public Property Party As List(Of Party)
End Class

' Delivery Class (new class for delivery data)
Public Class Delivery
    <JsonProperty("DeliveryParty")>
    Public Property DeliveryParty As List(Of DeliveryParty)

    <JsonProperty("Shipment")>
    Public Property Shipment As List(Of Shipment)

End Class

' DeliveryParty Class
Public Class DeliveryParty
    <JsonProperty("PartyLegalEntity")>
    Public Property PartyLegalEntity As List(Of PartyLegalEntity)

    <JsonProperty("PostalAddress")>
    Public Property PostalAddress As List(Of PostalAddress)

    <JsonProperty("PartyIdentification")>
    Public Property PartyIdentification As List(Of PartyIdentification)

End Class

Public Class Shipment
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("FreightAllowanceCharge")>
    Public Property FreightAllowanceCharge As List(Of FreightAllowanceCharge)
End Class

' FreightAllowanceCharge Class
Public Class FreightAllowanceCharge
    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)
End Class

' ChargeIndicator Class
Public Class ChargeIndicator
    <JsonProperty("_")>
    Public Property value As Boolean
End Class

' AllowanceChargeReason Class
Public Class AllowanceChargeReason
    <JsonProperty("_")>
    Public Property value As String
End Class

' Amount Class
Public Class Amount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PaymentMeans Class
Public Class PaymentMeans
    <JsonProperty("PaymentMeansCode")>
    Public Property PaymentMeansCode As List(Of PaymentMeansCode)

    <JsonProperty("PayeeFinancialAccount")>
    Public Property PayeeFinancialAccount As List(Of PayeeFinancialAccount)
End Class

' PaymentMeansCode Class
Public Class PaymentMeansCode
    <JsonProperty("_")>
    Public Property value As String
End Class

' PayeeFinancialAccount Class
Public Class PayeeFinancialAccount
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)
End Class

' PaymentTerms Class
Public Class PaymentTerms
    <JsonProperty("Note")>
    Public Property Note As List(Of Note)
End Class

' Note Class
Public Class Note
    <JsonProperty("_")>
    Public Property value As String
End Class

' PrepaidPayment Class
Public Class PrepaidPayment
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("PaidAmount")>
    Public Property PaidAmount As List(Of PaidAmount)

    <JsonProperty("PaidDate")>
    Public Property PaidDate As List(Of PaidDate)

    <JsonProperty("PaidTime")>
    Public Property PaidTime As List(Of PaidTime)
End Class

' PaidAmount Class
Public Class PaidAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PaidDate Class
Public Class PaidDate
    <JsonProperty("_")>
    Public Property value As String
End Class

' PaidTime Class
Public Class PaidTime
    <JsonProperty("_")>
    Public Property value As String
End Class


' AllowanceCharge Class
Public Class AllowanceCharge

    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)

End Class

Public Class InvoiceLineAllowanceCharge

    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)

    <JsonProperty("ChargeIndicator")>
    Public Property ChargeIndicator As List(Of ChargeIndicator)

    <JsonProperty("MultiplierFactorNumeric")>
    Public Property MultiplierFactorNumeric As List(Of MultiplierFactorNumeric)

    <JsonProperty("AllowanceChargeReason")>
    Public Property AllowanceChargeReason As List(Of AllowanceChargeReason)

End Class

' TaxTotal Class
Public Class TaxTotal
    <JsonProperty("TaxAmount")>
    Public Property TaxAmount As List(Of TaxAmount)

    <JsonProperty("TaxSubtotal")>
    Public Property TaxSubtotal As List(Of TaxSubtotal)

End Class

' TaxAmount Class
Public Class TaxAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxSubtotal Class
Public Class TaxSubtotal
    <JsonProperty("TaxableAmount")>
    Public Property TaxableAmount As List(Of TaxableAmount)

    <JsonProperty("TaxAmount")>
    Public Property TaxAmount As List(Of TaxAmount)

    <JsonProperty("PerUnitAmount")>
    Public Property PerUnitAmount As List(Of PerUnitAmount)

    <JsonProperty("BaseUnitMeasure")>
    Public Property BaseUnitMeasure As List(Of BaseUnitMeasure)
    <JsonProperty("TaxCategory")>
    Public Property TaxCategory As List(Of TaxCategory)

End Class

' TaxableAmount Class
Public Class TaxableAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxCategory Class
Public Class TaxCategory
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("Percent")>
    Public Property Percent As List(Of Percent)

    <JsonProperty("TaxScheme")>
    Public Property TaxScheme As List(Of TaxScheme)

    <JsonProperty("TaxExemptionReason")>
    Public Property TaxExemptionReason As List(Of TaxExemptionReason)

End Class

' TaxScheme Class
Public Class TaxScheme
    <JsonProperty("ID")>
    Public Property ID As List(Of TaxSchemeID)
End Class

Public Class TaxSchemeID
    <JsonProperty("_")>
    Public Property ID As String

    <JsonProperty("schemeAgencyID")>
    Public Property schemeAgencyID As String

    <JsonProperty("schemeID")>
    Public Property schemeID As String
End Class

' LegalMonetaryTotal Class
Public Class LegalMonetaryTotal
    <JsonProperty("LineExtensionAmount")>
    Public Property LineExtensionAmount As List(Of LineExtensionAmount)

    <JsonProperty("TaxExclusiveAmount")>
    Public Property TaxExclusiveAmount As List(Of TaxExclusiveAmount)

    <JsonProperty("TaxInclusiveAmount")>
    Public Property TaxInclusiveAmount As List(Of TaxInclusiveAmount)

    <JsonProperty("AllowanceTotalAmount")>
    Public Property AllowanceTotalAmount As List(Of AllowanceTotalAmount)

    <JsonProperty("ChargeTotalAmount")>
    Public Property ChargeTotalAmount As List(Of ChargeTotalAmount)

    <JsonProperty("PayableAmount")>
    Public Property PayableAmount As List(Of PayableAmount)

    <JsonProperty("PayableRoundingAmount")>
    Public Property PayableRoundingAmount As List(Of PayableRoundingAmount)
End Class

' LineExtensionAmount Class
Public Class LineExtensionAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxExclusiveAmount Class
Public Class TaxExclusiveAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' TaxInclusiveAmount Class
Public Class TaxInclusiveAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' AllowanceTotalAmount Class
Public Class AllowanceTotalAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' ChargeTotalAmount Class
Public Class ChargeTotalAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PayableAmount Class
Public Class PayableAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' PayableRoundingAmount Class
Public Class PayableRoundingAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' InvoiceLine Class
Public Class InvoiceLine
    <JsonProperty("AllowanceCharge")>
    Public Property AllowanceCharge As List(Of InvoiceLineAllowanceCharge)

    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("InvoicedQuantity")>
    Public Property InvoicedQuantity As List(Of InvoicedQuantity)

    <JsonProperty("Item")>
    Public Property Item As List(Of Item)

    <JsonProperty("ItemPriceExtension")>
    Public Property ItemPriceExtension As List(Of ItemPriceExtension)

    <JsonProperty("LineExtensionAmount")>
    Public Property LineExtensionAmount As List(Of LineExtensionAmount)

    <JsonProperty("Price")>
    Public Property Price As List(Of Price)

    <JsonProperty("TaxTotal")>
    Public Property TaxTotal As List(Of TaxTotal)
End Class

' Item Class
Public Class Item
    <JsonProperty("CommodityClassification")>
    Public Property CommodityClassification As List(Of CommodityClassification)

    <JsonProperty("Description")>
    Public Property Description As List(Of Description)

    <JsonProperty("OriginCountry")>
    Public Property OriginCountry As List(Of OriginCountry)
End Class

' ItemPriceExtension Class
Public Class ItemPriceExtension
    <JsonProperty("Amount")>
    Public Property Amount As List(Of Amount)
End Class

' Price Class
Public Class Price
    <JsonProperty("PriceAmount")>
    Public Property PriceAmount As List(Of PriceAmount)
End Class

' PriceAmount Class
Public Class PriceAmount

    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' CommodityClassification Class
Public Class CommodityClassification

    <JsonProperty("ItemClassificationCode")>
    Public Property ItemClassificationCode As List(Of ItemClassificationCode)
End Class

' ItemClassificationCode Class
Public Class ItemClassificationCode

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("listID")>
    Public Property listID As String
End Class

' OriginCountry Class
Public Class OriginCountry
    <JsonProperty("IdentificationCode")>
    Public Property IdentificationCode As List(Of IdentificationCodeID)
End Class

' IdentificationCode Class
Public Class IdentificationCodeID
    <JsonProperty("_")>
    Public Property Value As String
End Class

' InvoicedQuantity Class
Public Class InvoicedQuantity

    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("unitCode")>
    Public Property unitCode As String
End Class

' MultiplierFactorNumeric Class
Public Class MultiplierFactorNumeric
    <JsonProperty("_")>
    Public Property value As Int32
End Class

' PerUnitAmount Class
Public Class PerUnitAmount
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("currencyID")>
    Public Property currencyID As String
End Class

' BaseUnitMeasure Class
Public Class BaseUnitMeasure
    <JsonProperty("_")>
    Public Property value As Decimal

    <JsonProperty("unitCode")>
    Public Property unitCode As String
End Class

Public Class Percent
    <JsonProperty("_")>
    Public Property value As Decimal

End Class

Public Class TaxExemptionReason
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class TaxExchangeRate
    <JsonProperty("SourceCurrencyCode")>
    Public Property SourceCurrencyCode As List(Of SourceCurrencyCode)

    <JsonProperty("TargetCurrencyCode")>
    Public Property TargetCurrencyCode As List(Of TargetCurrencyCode)

    <JsonProperty("CalculationRate")>
    Public Property CalculationRate As List(Of CalculationRate)

End Class

Public Class TargetCurrencyCode
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class CalculationRate
    <JsonProperty("_")>
    Public Property value As Decimal

End Class

Public Class SourceCurrencyCode
    <JsonProperty("_")>
    Public Property value As String

End Class


'Public Class UBLExtensions
'    <JsonProperty("UBLExtension")>
'    Public Property UBLExtension As List(Of UBLExtension)

'End Class
Public Class Signature
    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("SignatureMethod")>
    Public Property SignatureMethod As List(Of SignatureMethod)

End Class

Public Class SignatureMethod

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class UBLExtensions
    <JsonProperty("UBLExtension")>
    Public Property UBLExtension As List(Of UBLExtension)

End Class
Public Class UBLExtension
    <JsonProperty("ExtensionURI")>
    Public Property ExtensionURI As List(Of ExtensionURI)

    <JsonProperty("ExtensionContent")>
    Public Property ExtensionContent As List(Of ExtensionContent)

End Class

Public Class ExtensionURI
    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class ExtensionContent

    <JsonProperty("UBLDocumentSignatures")>
    Public Property UBLDocumentSignatures As List(Of UBLDocumentSignatures)

End Class
Public Class UBLDocumentSignatures

    <JsonProperty("SignatureInformation")>
    Public Property SignatureInformation As List(Of SignatureInformation)

End Class

Public Class SignatureInformation

    <JsonProperty("ID")>
    Public Property ID As List(Of ID)

    <JsonProperty("ReferencedSignatureID")>
    Public Property ReferencedSignatureID As List(Of ReferencedSignatureID)

    <JsonProperty("Signature")>
    Public Property SignatureInformation_Signature As List(Of SignatureInformation_Signature)

End Class
Public Class SignatureInformation_Signature

    <JsonProperty("Id")>
    Public Property ID As String

    <JsonProperty("Object")>
    Public Property SignatureObject As List(Of SignatureObject)

    <JsonProperty("KeyInfo")>
    Public Property KeyInfo As List(Of KeyInfo)

    <JsonProperty("SignatureValue")>
    Public Property SignatureValue As List(Of SignatureValue)
    <JsonProperty("SignedInfo")>
    Public Property SignedInfo As List(Of SignedInfo)


End Class
Public Class SignatureValue

    <JsonProperty("_")>
    Public Property value As String

End Class
Public Class SignedInfo

    <JsonProperty("SignatureMethod")>
    Public Property SignedInfoSignatureMethod As List(Of SignedInfoSignatureMethod)

    <JsonProperty("Reference")>
    Public Property Reference As List(Of Reference)

End Class

Public Class Reference

    <JsonProperty("Type")>
    Public Property Type As String

    <JsonProperty("URI")>
    Public Property URI As String

    <JsonProperty("DigestMethod")>
    Public Property DigestMethod As List(Of DigestMethod)
    <JsonProperty("DigestValue")>
    Public Property DigestValue As List(Of DigestValue)

End Class
Public Class DigestMethod

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String
End Class
Public Class SignedInfoSignatureMethod

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String


End Class
Public Class KeyInfo

    <JsonProperty("X509Data")>
    Public Property X509Data As List(Of X509Data)

End Class

Public Class X509Data

    <JsonProperty("X509Certificate")>
    Public Property X509Certificate As List(Of X509Certificate)

    <JsonProperty("X509SubjectName")>
    Public Property X509SubjectName As List(Of X509SubjectName)

    <JsonProperty("X509IssuerSerial")>
    Public Property X509IssuerSerial As List(Of X509IssuerSerial)

End Class

Public Class X509Certificate

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class X509SubjectName

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class X509IssuerSerial

    <JsonProperty("X509IssuerName")>
    Public Property X509IssuerName As List(Of X509IssuerName)

    <JsonProperty("X509SerialNumber")>
    Public Property X509SerialNumber As List(Of X509SerialNumber)

End Class

Public Class X509IssuerName

    <JsonProperty("_")>
    Public Property value As String

End Class

Public Class SignatureObject

    <JsonProperty("QualifyingProperties")>
    Public Property QualifyingProperties As List(Of QualifyingProperties)

End Class

Public Class QualifyingProperties

    <JsonProperty("Target")>
    Public Property Target As String

    <JsonProperty("SignedProperties")>
    Public Property SignedProperties As List(Of SignedProperties)

End Class

Public Class SignedProperties

    <JsonProperty("Id")>
    Public Property ID As String

    <JsonProperty("SignedSignatureProperties")>
    Public Property SignedSignatureProperties As List(Of SignedSignatureProperties)

End Class
Public Class SignedSignatureProperties

    <JsonProperty("SigningTime")>
    Public Property SigningTime As List(Of SigningTime)

    <JsonProperty("SigningCertificate")>
    Public Property SigningCertificate As List(Of SigningCertificate)

End Class

Public Class SigningCertificate
    <JsonProperty("Cert")>
    Public Property Cert As List(Of Cert)
End Class

Public Class Cert
    <JsonProperty("CertDigest")>
    Public Property CertDigest As List(Of CertDigest)

    <JsonProperty("IssuerSerial")>
    Public Property IssuerSerial As List(Of IssuerSerial)

End Class
Public Class IssuerSerial

    <JsonProperty("X509IssuerName")>
    Public Property X509IssuerName As List(Of X509IssuerName)

    <JsonProperty("X509SerialNumber")>
    Public Property X509SerialNumber As List(Of X509SerialNumber)

End Class

Public Class CertDigest

    <JsonProperty("DigestMethod")>
    Public Property DigestMethod As List(Of DigestMethod)

    <JsonProperty("DigestValue")>
    Public Property DigestValue As List(Of DigestValue)

End Class

Public Class X509SerialNumber

    <JsonProperty("_")>
    Public Property value As String

End Class
'Public Class DigestMethod

'    <JsonProperty("_")>
'    Public Property value As String

'End Class
Public Class DigestValue

    <JsonProperty("_")>
    Public Property value As String

End Class
Public Class SigningTime

    <JsonProperty("_")>
    Public Property value As String

    <JsonProperty("Algorithm")>
    Public Property Algorithm As String

End Class
Public Class ReferencedSignatureID

    <JsonProperty("_")>
    Public Property value As String

End Class


Public Class SubmissionResult
    Public Property submissionUid As String
    Public Property acceptedDocuments As List(Of AcceptedDocuments)
    Public Property rejectedDocuments As List(Of RejectedDocuments)
End Class

Public Class AcceptedDocuments
    Public Property uuid As String
    Public Property invoiceCodeNumber As String

End Class
Public Class RejectedDocuments
    ' Public Property error As List(of Error)
    Public Property invoiceCodeNumber As String

End Class

'Public Class Error
'    <JsonProperty("-")>
'    Public Property error1 As String
'End Class

Public Class CancelDocument
    Public Property uuid As String
    Public Property status As String
    Public Property Reason As String
End Class

Public Class IgnoreErrorPropertiesResolver
    Inherits DefaultContractResolver

    ' Public Property LastActivityDate As DateTime

    Protected Overrides Function CreateProperty(ByVal member As MemberInfo, ByVal memberSerialization As MemberSerialization) As JsonProperty
        'Dim [property] As JsonProperty = MyBase.CreateProperty(member, memberSerialization)
        Dim [property] As JsonProperty
        If [property].PropertyName = "LastActivityDate" Then
            [property].Ignored = True
        End If
        'If [("InputStream", "Filter", "Length", "Position", "ReadTimeout", "WriteTimeout", "LastActivityDate", "LastUpdatedDate", "Session").Contains([property].PropertyName)] Then
        '    [property].Ignored = True
        'End If

        Return [property]
    End Function

End Class


Public Class CustomResolver
    Inherits DefaultContractResolver

    Protected Overrides Function CreateProperty(ByVal member As MemberInfo, ByVal memberSerialization As MemberSerialization) As JsonProperty
        Dim [property] As JsonProperty = MyBase.CreateProperty(member, memberSerialization)

        [property].Ignored = True

        Return [property]
    End Function

End Class

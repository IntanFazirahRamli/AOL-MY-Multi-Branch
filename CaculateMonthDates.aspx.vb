Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Web.UI.WebControls
Imports System.Web

Imports System.IO
Imports System.Net
Imports System.Text
' Include this namespace if it is not already there

Imports System.Globalization
Imports System.Threading
Imports System.Drawing

Imports Microsoft.VisualBasic
Imports System
Imports System.Collections
Imports System.ComponentModel
Imports System.Reflection

Partial Class CaculateMonthDates
    Inherits System.Web.UI.Page
    Public rcno As String
    Private Shared GridSelected As String = String.Empty
    Private Shared gScheduler, gSalesman As String

    Public Message As String = String.Empty
    ' To store the Error or Message
    Private Word As Microsoft.Office.Interop.Word.ApplicationClass
    ' The Interop Object for Word
    Private Excel As Microsoft.Office.Interop.Excel.ApplicationClass
    ' The Interop Object for Excel
    Private Unknown As Object = Type.Missing
    ' For passing Empty values
    Public Enum StatusType
        SUCCESS
        FAILED
    End Enum
    ' To Specify Success or Failure Types
    Public Status As StatusType


    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String
    'Public rcno As String

    Public TotDetailRecords As Integer
    Dim gFreqMTD As String
    Dim gSeq As String
    Dim gServiceDate As Date
    Dim gdayofWeek As String
    Dim gServiceDatestr As String

    Dim rowdeleted As Boolean
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer

    Dim gDOW As String
    Dim gDayNo As Integer
    Dim gMonthNo As Integer
    Dim gWeekNo As Integer
    Dim mode As String
    Dim vStrStatus, vStrRenewalStatus, vStrNotedStatus As String

    Public HasDuplicateTarget As Boolean
    Public HasDuplicateLocaion As Boolean
    Public HasDuplicateServices As Boolean
    Public HasDuplicateFrequency As Boolean

    Public IsPopUpTeam As String
    'Public Static gLimit As Long

    Public isInPage As Boolean = False

    Protected Sub Page_Init(sender As Object, e As EventArgs) Handles Me.Init
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1))
        Response.Cache.SetNoStore()
    End Sub

    'Protected Sub PrintFile(ByVal sender As Object, ByVal e As EventArgs)
    '    If chkPrintStatus.Checked = True Then
    '        Session.Add("Status", "[""""O"""", """"P""""]")
    '    Else
    '        Session.Add("Status", "[""""O""""]")
    '    End If


    '    Response.Redirect("RV_ContractServiceSchedule.aspx")


    'End Sub

    Private Sub AccessControl()

        '''''''''''''''''''Access Control 
        Try
            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            command.CommandType = CommandType.Text
            command.CommandText = "SELECT x2412, x2413, x2412Add, x2412Copy, x2412Edit, x2412Delete, x2412Print, x2412ChSt, x2412Update, x2412Reverse, x2412Process, x2412Early, x2412Term, x2412Cancel, x2412Renewal, x2412ServiceEButton, x2412EditPortfolioValue, x2412EditAgreeValue, x2412EditOurRef, x2412EditManualContractNo, x2412EditPONo, x2412EditNotes, x2412SORAccess, x2412SORAdd, x2412SOREdit, x2412SORDelete, x2412FileAccess,x2412FileUpload, x2412FileDelete, x2412BackDateContract, x2412BackDateContractTermination, x2412BackDateContractSameMonthOnly, x2412BackDateContractTerminationSameMonthOnly, x2412EditAutoRenewal, x2412BillingFrequency FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                If Not IsDBNull(dt.Rows(0)("x2412FileAccess")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileAccess")) = False Then
                        txtFileAccess.Text = dt.Rows(0)("x2412FileAccess").ToString()
                        If Convert.ToBoolean(dt.Rows(0)("x2412FileAccess")) = False Then
                            tb1.Tabs(5).Visible = False
                        End If
                    Else
                        txtFileAccess.Text = "0"
                    End If
                Else
                    txtFileAccess.Text = "0"
                End If


                If Not IsDBNull(dt.Rows(0)("x2412FileUpload")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileUpload")) = False Then
                        txtFileUpload.Text = dt.Rows(0)("x2412FileUpload").ToString()
                        btnUpload.Enabled = dt.Rows(0)("x2412FileUpload").ToString()
                        FileUpload1.Enabled = dt.Rows(0)("x2412FileUpload").ToString()
                    Else
                        txtFileUpload.Text = "0"
                    End If
                Else
                    txtFileUpload.Text = "0"
                End If

                If Not IsDBNull(dt.Rows(0)("x2412FileDelete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412FileDelete")) = False Then
                        txtFileDelete.Text = dt.Rows(0)("x2412FileDelete").ToString()
                    Else
                        txtFileDelete.Text = "0"
                    End If
                Else
                    txtFileDelete.Text = "0"
                End If


                If Not IsDBNull(dt.Rows(0)("x2412BackDateContract")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContract")) = False Then
                        txtBackDateContract.Text = dt.Rows(0)("x2412BackDateContract").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractTermination")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractTermination")) = False Then
                        txtBackDateContractTermination.Text = dt.Rows(0)("x2412BackDateContractTermination").ToString()
                    End If
                End If


                ''''''''''''''''

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractSameMonthOnly")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractSameMonthOnly")) = False Then
                        txtBackDateContractSameMonthOnly.Text = dt.Rows(0)("x2412BackDateContractSameMonthOnly").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly")) = False Then
                        txtBackDateContractTerminationSameMonthOnly.Text = dt.Rows(0)("x2412BackDateContractTerminationSameMonthOnly").ToString()
                    End If
                End If


                '''''''''''''

                If Not IsDBNull(dt.Rows(0)("x2412")) Then
                    If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("x2412"))) = False Then
                        If Convert.ToBoolean(dt.Rows(0)("x2412")) = False Then
                            Response.Redirect("Home.aspx")
                        End If
                    End If
                End If



               


                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnADD.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnSvcAdd.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412Copy")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Copy")) = False Then
                        Me.btnCopy.Enabled = dt.Rows(0)("x2412Copy").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Add")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Add")) = False Then
                        Me.btnRevision.Enabled = dt.Rows(0)("x2412Add").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Edit")) = False Then
                        Me.btnEdit.Enabled = dt.Rows(0)("x2412Edit").ToString()

                        'btnClient0.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient1.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient2.Enabled = dt.Rows(0)("x2412Edit").ToString()

                        'btnClient3.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient4.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnRecalculate.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient5.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient6.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        btnClient7.Enabled = dt.Rows(0)("x2412Edit").ToString()
                        'btnClient8.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient9.Enabled = dt.Rows(0)("x2412Edit").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Edit")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Edit")) = False Then
                        Me.btnSvcEdit.Enabled = dt.Rows(0)("x2412Edit").ToString()
                    End If
                End If

               
                If Not IsDBNull(dt.Rows(0)("x2412Delete")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Delete")) = False Then
                        Me.btnSvcDelete.Enabled = dt.Rows(0)("x2412Delete").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412Print")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412Print")) = False Then
                        Me.btnPrint.Enabled = dt.Rows(0)("x2412Print").ToString()
                    End If
                End If


                If Not IsDBNull(dt.Rows(0)("x2412ChSt")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412ChSt")) = False Then
                        Me.btnChangeStatus.Enabled = dt.Rows(0)("x2412ChSt").ToString()
                    End If
                End If




                If Not IsDBNull(dt.Rows(0)("x2412EditPortfolioValue")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditPortfolioValue")) = False Then
                        Me.txtPortfolioValue.Enabled = dt.Rows(0)("x2412EditPortfolioValue").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditAgreeValue")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditAgreeValue")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient8.Visible = dt.Rows(0)("x2412EditAgreeValue").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditOurRef")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditOurRef")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient0.Visible = dt.Rows(0)("x2412EditOurRef").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditManualContractNo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditManualContractNo")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient1.Visible = dt.Rows(0)("x2412EditManualContractNo").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditPONo")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditPONo")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient2.Visible = dt.Rows(0)("x2412EditPONo").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditNotes")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditNotes")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        btnClient3.Visible = dt.Rows(0)("x2412EditNotes").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412SORAccess")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAccess")) = False Then
                        'Me.txtAgreeVal.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        tb1.Tabs(3).Visible = dt.Rows(0)("x2412SORAccess").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412EditAutoRenewal")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412EditAutoRenewal")) = False Then
                        'chkAutoRenew.Visible = dt.Rows(0)("x2412EditAutoRenewal").ToString()
                        btnAutoRenew.Enabled = dt.Rows(0)("x2412EditAutoRenewal").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x2412BillingFrequency")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x2412BillingFrequency")) = False Then
                        'chkAutoRenew.Visible = dt.Rows(0)("x2412EditAutoRenewal").ToString()
                        btnClient4.Visible = dt.Rows(0)("x2412BillingFrequency").ToString()
                    End If
                End If


                '''''''''''
                'If Not IsDBNull(dt.Rows(0)("x2412SORAdd")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAdd")) = False Then
                '        Me.btnAddRateSchedule.Enabled = dt.Rows(0)("x2412SORAdd").ToString()
                '    End If
                'End If



                'If Not IsDBNull(dt.Rows(0)("x2412SOREdit")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SOREdit")) = False Then
                '        Me.btnEditRateSchedule.Enabled = dt.Rows(0)("x2412SOREdit").ToString()
                '    End If
                'End If


                'If Not IsDBNull(dt.Rows(0)("x2412SORDelete")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x2412SORDelete")) = False Then
                '        Me.btnDeleteRateSchedule.Enabled = dt.Rows(0)("x2412SORDelete").ToString()
                '    End If
                'End If

                ''''''''''
                'btnClient0.Enabled = dt.Rows(0)("x2412EditOurRef").ToString()
                'btnClient1.Enabled = dt.Rows(0)("x2412EditManualContractNo").ToString()
                'btnClient2.Enabled = dt.Rows(0)("x2412EditPONo").ToString()


                If btnADD.Enabled = True Then
                    btnADD.ForeColor = System.Drawing.Color.Black
                Else
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If btnCopy.Enabled = True Then
                    btnCopy.ForeColor = System.Drawing.Color.Black
                Else
                    btnCopy.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEdit.Enabled = True Then
                    btnEdit.ForeColor = System.Drawing.Color.Black
                Else
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                End If

              

                If btnChangeStatus.Enabled = True Then
                    btnChangeStatus.ForeColor = System.Drawing.Color.Black
                Else
                    btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEarlyCompletion.Enabled = True Then
                    btnEarlyCompletion.ForeColor = System.Drawing.Color.Black
                Else
                    btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray
                End If

                If btnCancelByCompany.Enabled = True Then
                    btnCancelByCompany.ForeColor = System.Drawing.Color.Black
                Else
                    btnCancelByCompany.ForeColor = System.Drawing.Color.Gray
                End If

             

                If btnPrint.Enabled = True Then
                    btnPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnPrint.ForeColor = System.Drawing.Color.Gray
                End If

               

                If btnRevision.Enabled = True Then
                    btnRevision.ForeColor = System.Drawing.Color.Black
                Else
                    btnRevision.ForeColor = System.Drawing.Color.Gray
                End If

         

            End If
                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
                'Else
                'txtBackDateContract.Text = True
                'txtBackDateContractTermination.Text = True
                'txtFileDelete.Text = "1"
                'End If


                ''''''''
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)

                ''''''''
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ACCESS CONTROL", ex.Message.ToString, "")
            Exit Sub
        End Try
        '''''''''''''''''''Access Control 
    End Sub
    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            Dim Query As String

            ddlStatusChSt.Attributes.Add("OnSelectedIndexChanged", "statuschange()")

            txtAgreeVal.Attributes.Add("onchange", "getValuePerMonth()")
            txtConDetVal.Attributes.Add("onchange", "getNetAmount()")
            txtDisAmt.Attributes.Add("onchange", "getNetAmount()")
            txtDisPercent.Attributes.Add("onchange", "getNetAmount()")

            txtContractStart.Attributes.Add("onchange", "CalculateContractDates()")
            'txtContractEnd.Attributes.Add("onchange", "ValidateDatesContract()")

            txtServStart.Attributes.Add("onchange", "ValidateDatesService()")
            'txtServEnd.Attributes.Add("onchange", "ValidateDatesService()")

            txtWarrStart.Attributes.Add("onchange", "ValidateDatesWarranty()")
            txtWarrEnd.Attributes.Add("onchange", "ValidateDatesWarranty()")

            txtDuration.Attributes.Add("onchange", "CalculateDates()")
            rbtLstDuration.Attributes.Add("onchange", "CalculateDates()")

            'ddlContactType.Attributes.Add("onchange", "RefreshFields()")
            ddlBillingFreq.Attributes.Add("onchange", "getValuePerMonth()")

            ddlContactType.Attributes.Add("onchange", "getContactType()")
            txtAccountId.Attributes.Add("onchange", "getContactType()")



            btnTop.Attributes.Add("onclick", "<script> ResetScrollPosition();</Script>")

            'btnCopy.Attributes.Add("onclick", "<script> CalculateContractDates();</Script>")


            If Not Page.IsPostBack Then

                txtCreatedBy.Text = Session("userid")

                FindLocation()

                txtContractDate.Attributes.Add("readonly", "readonly")
                txtContractStart.Attributes.Add("readonly", "readonly")
                txtContractEnd.Attributes.Add("readonly", "readonly")
                txtServStart.Attributes.Add("readonly", "readonly")
                txtServEnd.Attributes.Add("readonly", "readonly")
                txtWarrStart.Attributes.Add("readonly", "readonly")
                txtWarrEnd.Attributes.Add("readonly", "readonly")
                txtRenewalDate.Attributes.Add("readonly", "readonly")
                txtCreatedOn.Attributes.Add("readonly", "readonly")

                txtActualServiceStart.Attributes.Add("readonly", "readonly")
                txtActualEnd.Attributes.Add("readonly", "readonly")
                txtTotContVal.Attributes.Add("readonly", "readonly")

                txtActualEndChSt.Attributes.Add("readonly", "readonly")
                txtServStartDay.Attributes.Add("readonly", "readonly")
                TxtServEndDay.Attributes.Add("readonly", "readonly")
                txtServStartSvc.Attributes.Add("readonly", "readonly")
                txtServEndSvc.Attributes.Add("readonly", "readonly")
                txtServStartDaySvc.Attributes.Add("readonly", "readonly")
                txtServEndDaySvc.Attributes.Add("readonly", "readonly")

                ddlIndustry.Attributes.Add("readonly", "readonly")
                ddlMarketSegmentID.Attributes.Add("readonly", "readonly")

                txtRetentionValue.Attributes.Add("disabled", "true")

                txtServiceNo.Attributes.Add("disabled", "true")
                txtServiceBal.Attributes.Add("disabled", "true")
                txtServiceNoActual.Attributes.Add("disabled", "true")

                txtServiceAmt.Attributes.Add("disabled", "true")
                txtServiceAmtBal.Attributes.Add("disabled", "true")
                txtServiceAmtActual.Attributes.Add("disabled", "true")

                txtTotalArea.Attributes.Add("disabled", "true")
                txtCompletedArea.Attributes.Add("disabled", "true")
                txtBalanceArea.Attributes.Add("disabled", "true")

                txtBaitStationTotal.Attributes.Add("disabled", "true")
                txtBaitStationInstalled.Attributes.Add("disabled", "true")
                txtBaitStationBalance.Attributes.Add("disabled", "true")
                txtBillingAddress.Attributes.Add("disabled", "true")
                txtServiceAddressCons.Attributes.Add("disabled", "true")

                'txtLocation.Attributes.Add("disabled", "true")

                txtAlertStatus.Attributes.Add("readonly", "readonly")
                txtCategoryID.Attributes.Add("readonly", "readonly")
                txtPortfolioValueEdit.Attributes.Add("readonly", "readonly")

                'txtContractEnd.Attributes.Add("readonly", "readonly")

                txtTerminationDesc.Attributes.Add("disabled", "true")

                txtFinalPricePerServiceRateSchedule.Attributes.Add("disabled", "true")
                txtEndofLastSchedule.Attributes.Add("disabled", "true")

                txtEndDate.Attributes.Add("disabled", "true")

                txtLastServiceDate.Attributes.Add("readonly", "readonly")


                'ddlOnHoldCodeChSt.Attributes.Add("disabled", "true")
                'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "true")
                'txtOnHoldCommentsChSt.Attributes.Add("disabled", "true")


                mdlPopUpTeam.Hide()
                mdlPopUpClient.Hide()
                MakeMeNull()
                MakeSvcNull()
                MakeCommNull()



                'ddlTerminationCode.Attributes.Add("disabled", "true")
                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                AccessControl()

                btnClient0.Visible = False
                btnClient1.Visible = False
                btnClient2.Visible = False
                btnClient3.Visible = False
                btnClient4.Visible = False
                btnClient5.Visible = False
                btnClient6.Visible = False
                btnClient7.Visible = False
                btnClient8.Visible = False
                btnClient9.Visible = False
                btnAutoRenew.Visible = False
                btnRecalculate.Visible = False
                btnExtendContractEndDate.Visible = False

                'btnAutoRenew.Visible = False

                txtGroupAuthority.Text = Session("SecGroupAuthority")
                txtSearch1Status.Text = "O,P,H,R,C,T,E"
                EnableSvcControls()
                IsPopUpTeam = "N"
                'DisableControls()
                tb1.ActiveTabIndex = 0
                'ViewState("ClientCurrentAlphabet") = "A"
                'GenerateClientAlphabets()


                'ViewState("TeamCurrentAlphabet") = "A"
                'GenerateTeamAlphabets()
                gvTeam.DataSourceID = "SqlDSTeam"

                Query = "Select ScheduleType from tblscheduletype order by ScheduleType"
                PopulateDropDownList(Query, "ScheduleType", "ScheduleType", ddlScheduleType)

                Query = "Select Category from tblContractGroupCategory order by Category"
                PopulateDropDownList(Query, "Category", "Category", ddlCategorySearch)

                'PopulateComboBox(Query, "ScheduleType", "ScheduleType", ComboBox1)

                'If ddlContractGrp.Text = "CP" Or ddlContractGrp.Text = "CP(ADHOC)" Or ddlContractGrp.Text = "MQ" Or ddlContractGrp.Text = "MQ (ADHOC)" Then
                '    ddlContractGrp.Enabled = True
                '    Query = "Select ContractGroup from tblcontractgroup where ContractGroup  like '" & ddlContractGrp.Text & "%'"
                '    PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrp)
                '    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlSearchContractGroup)
                '    'PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrpSearch)
                'Else
                '    ddlContractGrp.Enabled = False
                'End If

                Query = "Select ContractGroup from tblcontractgroup"
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrp)
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlSearchContractGroup)
                PopulateDropDownList(Query, "ContractGroup", "ContractGroup", ddlContractGrpSearch)

                Query = "Select LocationGroup from tbllocationgroup"
                PopulateDropDownList(Query, "LocationGroup", "LocationGroup", ddlLocateGrp)
                PopulateDropDownList(Query, "LocationGroup", "LocationGroup", ddlSearchLocationGroup)


                Query = "Select Frequency from tblFrequency"
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFreq)
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFreqEdit)


                Query = "Select CompanyGroup from tblCompanyGroup order by CompanyGroup"
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlCompanyGrp)
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlSearchCompanyGroup)
                PopulateDropDownList(Query, "CompanyGroup", "CompanyGroup", ddlCompanyGroupEdit)

                'Query = "Select StaffId from tblStaff where (SecGroupAuthority like  'SCHEDULER%' or  SecGroupAuthority like '%ADMINISTRATOR%') and Status = 'O'"
                Query = "Select StaffId from tblStaff where SecGroupAuthority <> 'GUEST' and Status = 'O'"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlScheduler)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchScheduler)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSchedulerEdit)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchCreatedBy)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchEditedBy)

                Query = "Select StaffId from tblStaff where Roles = 'SALES MAN'"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanSearch)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanEdit)

                Query = "Select DocumentType from tblDocumentType where Module = 'CONTRACT'"
                PopulateDropDownList(Query, "DocumentType", "DocumentType", ddlDocumentType)


                Query = "SELECT CONCAT(Code, ' : ', Description) AS HC FROM tblHoldcode where Status = 'Y' ORDER BY Code"
                PopulateDropDownList(Query, "HC", "HC", ddlOnHoldCodeChSt)

                'SELECT upper(ScheduleType) FROM tblscheduletype ORDER BY upper(Scheduletype)
                'Query = "Select Category from tblcontractgroupcategory"
                'PopulateDropDownList(Query, "Category", "Category", ddlCategoryID)

                ''''''''''''''''''''''''''''''''''''
                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                'commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec,DisplayRecordsLocationWise, BackDateContract, BackDateContractTermination, ContractRevisionTerminationCode, PrefixDocNoContract, AutoRenewal FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec,DisplayRecordsLocationWise, ContractRevisionTerminationCode, PrefixDocNoContract, AutoRenewal, ContinuousContract FROM tblservicerecordmastersetup"

                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceContractMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString

                'txtBackDateContractSetup.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContract")
                'txtBackDateContractTerminationSetup.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContractTermination")

                txtContractRevisionTerminationCode.Text = dtServiceRecordMasterSetup.Rows(0)("ContractRevisionTerminationCode")

                txtPrefixDocNoContract.Text = dtServiceRecordMasterSetup.Rows(0)("PrefixDocNoContract")

                If dtServiceRecordMasterSetup.Rows(0)("AutoRenewal") = 1 Then
                    chkAutoRenew.Visible = True
                    'btnAutoRenew.Visible = True
                    txtbtnAutoRenew.Text = "Y"
                Else
                    chkAutoRenew.Visible = False
                    btnAutoRenew.Visible = False
                    txtbtnAutoRenew.Text = "N"
                End If

                txtFixedContinuousVisible.Text = dtServiceRecordMasterSetup.Rows(0)("ContinuousContract")

                If txtFixedContinuousVisible.Text = "0" Then
                    rbtFixedContinuous.Items.RemoveAt(1)
                    'Rating.Items[0].Enabled = false;
                    'Else
                    '    rbtFixedContinuous.Items.RemoveAt(1)
                End If
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)

                'If dtServiceRecordMasterSetup.Rows(0)("ContinuousContract") = 1 Then
                '    txtFixContinuousVisible.text = dtServiceRecordMasterSetup.Rows(0)("ContinuousContract")
                '    lblDurationType.Visible = True
                '    rbtFixedContinuous.Visible = True
                'Else
                '    lblDurationType.Visible = False
                '    rbtFixedContinuous.Visible = False
                'End If


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    Query = "select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "'"
                    PopulateDropDownList(Query, "locationID", "locationID", txtLocation)
                    PopulateComboBox(Query, "locationID", "locationID", ddlLocationSearch)

                    lblBranch1.Visible = True
                    lblBranch2.Visible = True
                    ddlLocationSearch.Visible = True
                    txtLocation.Visible = True
                Else
                    lblBranch1.Visible = False
                    lblBranch2.Visible = False
                    ddlLocationSearch.Visible = False
                    txtLocation.Visible = False

                End If

                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                If String.IsNullOrEmpty(Session("accountid")) = True And String.IsNullOrEmpty(Session("contractno")) = True Then
                    Session.Remove("contractfrom")
                    Session.Remove("contractdetailfrom")
                    Session.Remove("contractno")
                    Session.Remove("serviceschedulefrom")

                    Session.Remove("contractdate")
                    Session.Remove("contracttype")
                    Session.Remove("client")
                    Session.Remove("custname")
                    Session.Remove("contact")
                    Session.Remove("servstart")
                    Session.Remove("servend")
                    Session.Remove("agreedvalue")
                    Session.Remove("discamt")
                    Session.Remove("status")
                    Session.Remove("accountid")
                    lblAccountID.Text = ""


                    ' ''''''''''''''''''''''''''''''''''''
                    'Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                    'commandServiceRecordMasterSetup.CommandType = CommandType.Text
                    'commandServiceRecordMasterSetup.CommandText = "SELECT showSConScreenLoad, ServiceContractMaxRec FROM tblservicerecordmastersetup"
                    'commandServiceRecordMasterSetup.Connection = conn

                    'Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                    'Dim dtServiceRecordMasterSetup As New DataTable
                    'dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                    'txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("ServiceContractMaxRec")

                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("showSConScreenLoad")) = False Then
                        txt.Text = ""
                        SQLDSContract.SelectCommand = ""
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                    Else
                        'Dim lLimit As Long

                        If txtDisplayRecordsLocationwise.Text = "N" Then
                            txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, "
                            txt.Text = txt.Text & "  A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, "
                            txt.Text = txt.Text & " A.Scheduler, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, "
                            txt.Text = txt.Text & " A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                            txt.Text = txt.Text & " From tblContract A where A.Status ='O'"
                        End If


                        If txtDisplayRecordsLocationwise.Text = "Y" Then
                            txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, "
                            txt.Text = txt.Text & "  A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, "
                            txt.Text = txt.Text & " A.Scheduler, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, "
                            txt.Text = txt.Text & " A.Renewaldate, A.TeamId, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                            txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
                            txt.Text = txt.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                        End If

                        txt.Text = " order by A.rcno desc, A.CustName limit " & txtLimit.Text

                        SQLDSContract.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()

                    End If

                Else

                    If String.IsNullOrEmpty(Session("contractfrom")) = False And String.IsNullOrEmpty(Session("servicefrom")) = True Then
                        'btnADD_Click(sender, e)
                        txtclientid.Text = Session("accountid")

                        txtClient.Text = Session("clientid")
                        ddlContactType.Text = Session("contracttype")
                        lblAccountIdContact.Visible = True
                        lblAccountIdContact1.Text = Session("accountid")

                        lblAccountNameContact.Visible = True
                        lblAccountNameContact1.Text = Session("custname")

                        btnQuit.Text = "BACK"

                        'txtLocation.Attributes.Add("readonly", "readonly")

                        If String.IsNullOrEmpty(Session("locationid")) = False Then
                            lblAccountIdContactLocation.Visible = True
                            lblAccountIdContactLocation1.Text = Session("locationid")
                            btnClient.Visible = False
                        End If

                        If String.IsNullOrEmpty(Session("sevaddress")) = False Then
                            lblAccountIdServiceAddress.Visible = True
                            lblAccountIdServiceAddress1.Text = Session("sevaddress")
                        End If

                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            txtContType1.Text = "CORPORATE"
                            txtContType2.Text = "COMPANY"
                            txtContType3.Text = "RESIDENTIAL"
                            txtContType4.Text = "PERSON"
                        Else
                            txtContType1.Text = "RESIDENTIAL"
                            txtContType2.Text = "PERSON"
                            txtContType3.Text = "CORPORATE"
                            txtContType4.Text = "COMPANY"
                        End If


                        'txtclientid.Text = Session("clientid")
                        txtCustName.Text = Session("custname")
                        txtContactPerson.Text = Session("contactperson")
                        txtConPerMobile.Text = Session("conpermobile")
                        txtAccCode.Text = Session("acctcode")
                        txtTelephone.Text = Session("telephone")
                        txtFax.Text = Session("fax")
                        txtPostal.Text = Session("offpostal")
                        txtOfficeAddress.Text = Session("sevaddress")
                        ddlLocateGrp.Text = Session("locategrp")
                        ddlSalesman.Text = Session("salesman")

                        txtAccountId.Text = Session("accountid")
                        txtCustName.Text = Session("custname")
                        chkInactive.Checked = Session("inactive")

                        If chkInactive.Checked = True Then
                            btnADD.Enabled = False
                            btnADD.ForeColor = System.Drawing.Color.Gray
                        End If
                        If String.IsNullOrEmpty(Session("contractgroup")) = False Then
                            ddlContractGrp.Text = Session("contractgroup")
                        Else
                            ddlContractGrp.SelectedIndex = 0
                        End If

                        FindCategoryId()

                        Dim lindustry As String
                        lindustry = Session("industry")
                        txtIndustrySession.Text = lindustry
                        txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                        txtContractGroupSession.Text = Session("contractgroup")
                        txtCompanyGroupSession.Text = Session("companygroup")

                        txtSalesmanSession.Text = Session("salesman")


                        If String.IsNullOrEmpty(Session("industry")) = False Then
                            'ddlIndustry.SelectedIndex = -1
                            '    ddlIndustry.Items.Clear()
                            '    ddlIndustry.DataValueField = lindustry
                            '     ddlIndustry.DataTextField = lindustry
                            ddlIndustry.Text = lindustry
                            ddlMarketSegmentID.Text = Session("marketsegmentidsvc")
                            'FindMarketSegmentID()
                        End If


                        If String.IsNullOrEmpty(Session("contractgroup")) = False Then
                            ddlContractGrp.Text = txtContractGroupSession.Text
                        End If

                        If String.IsNullOrEmpty(Session("companygroup")) = False Then
                            'ddlCompanyGrp.Text = Session("companygroup")
                            ddlCompanyGrp.Text = txtCompanyGroupSession.Text
                        End If


                        txtClient.Enabled = False
                        ddlContactType.Enabled = False
                        ddlCompanyGrp.Enabled = False
                        txtCustName.Enabled = False
                        txtAccCode.Enabled = False
                        txtPostal.Enabled = False
                        'btnClient.Visible = False
                        'ddlSalesman.Enabled = False
                        txtAccountId.Enabled = False

                        If (String.IsNullOrEmpty(Session("billaddress1")) = True) Then
                            txtBillingAddress.Text = ""
                        Else
                            txtBillingAddress.Text = Session("billaddress1")
                        End If

                        If (String.IsNullOrEmpty(Session("billstreet")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billstreet")
                        End If

                        If (String.IsNullOrEmpty(Session("billbuilding")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billbuilding")
                        End If

                        If (String.IsNullOrEmpty(Session("billcountry")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billcountry")
                        End If

                        If (String.IsNullOrEmpty(Session("billpostal")) = True) Then
                        Else
                            txtBillingAddress.Text = txtBillingAddress.Text + ", " + Session("billpostal")
                        End If

                        txtBillingAdressSession.Text = txtBillingAddress.Text

                        txtcontractfrom.Text = Session("contractfrom")
                        txtLocationSession.Text = Session("location")



                        If String.IsNullOrEmpty(txtLocationSession.Text) = True Then
                            txtLocation.SelectedIndex = 0
                        Else
                            txtLocation.Text = txtLocationSession.Text
                        End If


                        If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                            Dim ContractClientIdLocation As String = ""

                            ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                            ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                            ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                            ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                            ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R') or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                            SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                            GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                            GridSelected = "SQLDSContractClientIdLocation"
                            txt.Text = ContractClientIdLocation
                        Else
                            Dim ContractClientId As String = ""

                            ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                            ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                            SQLDSContractClientId.SelectCommand = ContractClientId

                            GridView1.DataSourceID = "SQLDSContractClientId"
                            GridSelected = "SQLDSContractClientId"
                            txt.Text = ContractClientId
                        End If

                        If GridView1.Rows.Count > 0 Then
                            txtMode.Text = "View"
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                            PopulateRecord()
                            GridView1.SelectedIndex = 0
                        End If

                        ''
                        Session.Remove("contractfrom")
                        Session.Remove("clientid")
                        'Session.Remove("contracttype")
                        Session.Remove("companygroup")
                        Session.Remove("clientid")
                        Session.Remove("custname")
                        Session.Remove("contactperson")
                        Session.Remove("conpermobile")
                        Session.Remove("acctcode")
                        Session.Remove("telephone")
                        Session.Remove("fax")
                        Session.Remove("postal")
                        Session.Remove("sevaddress")
                        Session.Remove("locategrp")
                        Session.Remove("salesman")
                        Session.Remove("accountid")
                        Session.Remove("sevaddress")
                        Session.Remove("inactive")
                        Session.Remove("industry")
                        Session.Remove("contractgroup")
                        Session.Remove("location")


                        Session.Remove("billaddress1")
                        Session.Remove("billstreet")
                        Session.Remove("billbuiling")
                        Session.Remove("billcity")
                        Session.Remove("billcountry")
                        Session.Remove("billpostal")
                    ElseIf String.IsNullOrEmpty(Session("contractdetailfrom")) = False Then

                        '''''''''''''''''''
                        txtContractNo.Text = Session("contractno")
                        txtRcno.Text = Session("rcno")
                        txtcontractfrom.Text = Session("contractdetailfrom")

                        '''''''''''''''''''''''
                        If String.IsNullOrEmpty(Session("accountid")) = False Then
                            txtAccountIdSearch.Text = Session("accountid")
                        End If

                        If String.IsNullOrEmpty(Session("searchstatus")) = False Then
                            txtSearch1Status.Text = Session("searchstatus")
                        End If

                        If String.IsNullOrEmpty(Session("searchteam")) = False Then
                            txtServiceAddressSearch.Text = Session("searchteam")
                        End If

                        'If String.IsNullOrEmpty(Session("searchincharge")) = False Then
                        '    txtInchargeSearch.Text = Session("searchincharge")
                        'End If

                        If String.IsNullOrEmpty(Session("searchaccountid")) = False Then
                            txtAccountIdSearch.Text = Session("searchaccountid")
                        End If

                        If String.IsNullOrEmpty(Session("searchclientname")) = False Then
                            txtClientNameSearch.Text = Session("searchclientname")
                        End If


                        '''''''''''''''''''''''

                        txt.Text = Session("gridsqlcontract")
                        SQLDSContract.SelectCommand = Session("gridsqlcontract")
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = Session("gridsqlcontract")
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        ''''''''''''''''''''''''''''
                        'txtContractNo.Text = Session("contractno")
                        'txtRcno.Text = Session("rcno")
                        'txtcontractfrom.Text = Session("contractdetailfrom")
                        'txtAccountIdSearch.Text = Session("accountid")
                        'GridView1.Visible = True
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = txt.Text
                        'GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")
                        Session.Remove("accountid")
                        Session.Remove("contractdate")
                        Session.Remove("contracttype")
                        Session.Remove("client")
                        Session.Remove("custname")
                        Session.Remove("contact")
                        Session.Remove("servstart")
                        Session.Remove("servend")
                        Session.Remove("agreedvalue")
                        Session.Remove("discamt")
                        Session.Remove("status")
                        'Session.Remove("accountid")
                        'Session("contractdetailfrom") = ""
                        'Session("contractno") = ""
                        'GridSelected = "SQLDSContractNo"
                        'GridSelected = "SQLDSContract"
                    ElseIf String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                        'From Service Schedule

                        '''''''''''''''''''''
                        txtclientid.Text = Session("accountid")

                        lblAccountIdContact.Visible = True
                        lblAccountIdContact1.Text = Session("accountid")

                        lblAccountNameContact.Visible = True
                        lblAccountNameContact1.Text = Session("custname")

                        ''''''''''''''''
                        txtContractNo.Text = Session("contractno")
                        txtRcno.Text = Session("rcno")
                        txtcontractfrom.Text = Session("contractdetailfrom")

                        txt.Text = Session("gridsqlcontract")
                        SQLDSContract.SelectCommand = Session("gridsqlcontract")
                        GridView1.DataSourceID = "SqlDSContract"
                        GridView1.DataBind()
                        'GridView1.DataSourceID = "SqlDSContractNo"
                        'GridView1.DataSourceID = Session("gridsqlcontract")
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                        'GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")

                        Session.Remove("contractdate")
                        Session.Remove("contracttype")
                        Session.Remove("client")
                        Session.Remove("custname")
                        Session.Remove("contact")
                        Session.Remove("servstart")
                        Session.Remove("servend")
                        Session.Remove("agreedvalue")
                        Session.Remove("discamt")
                        Session.Remove("status")
                        Session.Remove("accountid")

                        ''Session("serviceschedulefrom") = ""
                        ''Session("contractno") = ""
                        'GridSelected = "SQLDSContractNo"
                        GridSelected = "SQLDSContractNo"

                    ElseIf String.IsNullOrEmpty(Session("servicefrom")) = False Then
                        'Session("servicefrom") = "contract"

                        If String.IsNullOrEmpty(Session("lblaccountid")) = False Then
                            lblAccountIdContact.Visible = True
                            lblAccountIdContact1.Text = Session("lblaccountid")

                            txtclientid.Text = Session("lblaccountid")
                            txtClient.Text = Session("clientid")
                            txtcontractfrom.Text = Session("contractfrom")


                            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                                Dim ContractClientIdLocation As String = ""

                                ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblContract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                                ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                                ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                                GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                                GridSelected = "SQLDSContractClientIdLocation"
                            Else
                                Dim ContractClientId As String = ""

                                ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientId.SelectCommand = ContractClientId

                                GridView1.DataSourceID = "SQLDSContractClientId"
                                GridSelected = "SQLDSContractClientId"
                            End If

                        Else

                            If String.IsNullOrEmpty(Session("contractno")) = False Then

                                txtContractNo.Text = Session("contractno")
                                txtRcno.Text = Session("rcno")
                                txtcontractfrom.Text = Session("contractfrom")

                                txt.Text = Session("gridsqlcontract")
                                SQLDSContract.SelectCommand = txt.Text
                                SQLDSContract.DataBind()

                                GridView1.DataSourceID = "SQLDSContract"
                                GridView1.DataBind()
                                GridView1.Visible = True
                                GridSelected = "SQLDSContract"

                                GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                            End If


                        End If
                        Session("servicefrom") = ""

                        ''''''''''''''''''''''''''''''''''''''''''
                    ElseIf String.IsNullOrEmpty(Session("teamfrom")) = False Then

                        If String.IsNullOrEmpty(Session("lblaccountid")) = False Then
                            lblAccountIdContact.Visible = True
                            lblAccountIdContact1.Text = Session("lblaccountid")

                            txtclientid.Text = Session("lblaccountid")
                            txtClient.Text = Session("clientid")
                            txtcontractfrom.Text = Session("contractfrom")


                            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                                Dim ContractClientIdLocation As String = ""

                                ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblContract.AmtBalance, tblContract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                                ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                                ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                                GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                                GridSelected = "SQLDSContractClientIdLocation"
                            Else
                                Dim ContractClientId As String = ""

                                ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')  or (status ='C') or (status ='T') or (status ='E')) order by rcno desc"

                                SQLDSContractClientId.SelectCommand = ContractClientId

                                GridView1.DataSourceID = "SQLDSContractClientId"
                                GridSelected = "SQLDSContractClientId"
                            End If

                        Else

                            If String.IsNullOrEmpty(Session("contractno")) = False Then

                                txtContractNo.Text = Session("contractno")
                                txtRcno.Text = Session("rcno")
                                txtcontractfrom.Text = Session("contractfrom")

                                txt.Text = Session("gridsqlcontract")
                                SQLDSContract.SelectCommand = txt.Text
                                SQLDSContract.DataBind()

                                GridView1.DataSourceID = "SQLDSContract"
                                GridView1.DataBind()
                                GridView1.Visible = True
                                GridSelected = "SQLDSContract"

                                GridView1_SelectedIndexChanged(New Object(), New EventArgs)

                                If GridView1.Rows.Count > 0 Then
                                    GridView1.SelectedIndex = 0
                                End If
                            End If

                        End If
                        Session("teamfrom") = ""
                        'BtnTeam_Click(sender, e)
                        'sender As Object, e As ImageClickEventArgs
                        'BtnTeam_Click(sender As new Object(), e As ImageClickEventArgs)
                        tb1.ActiveTabIndex = 1

                        AddHandler BtnTeam.Click, AddressOf BtnTeam_Click
                        mdlPopUpTeam.Show()

                        '''''''''''''''''''''''''''''''''''''''''
                    Else
                        Session.Remove("contractdetailfrom")
                        Session.Remove("contractno")
                        Session.Remove("serviceschedulefrom")
                        'Session("serviceschedulefrom") = ""
                        'Session("contractno") = ""
                        'Session("contractdetailfrom") = ""
                        'btnADD_Click(sender, e)
                    End If
                End If
                'txt.Text = SQLDSContract.SelectCommand

                conn.Close()
                conn.Dispose()
                commandServiceRecordMasterSetup.Dispose()

            Else
                'If tb1.ActiveTabIndex = 1 Then
                '    GridView1.Visible = False
                'Else
                '    GridView1.Visible = True
                'End If
                If txtIsPopup.Text = "Team" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpTeam.Show()
                ElseIf txtIsPopup.Text = "Client" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient.Show()
                    'ElseIf txtIsPopup.Text = "Location" Then
                    '    txtIsPopup.Text = "N"

                    '    imgBtnService_ModalPopupExtender.Show()
                End If

                'ModalPopupExtender5.Show()
                If txtIsPopupChSt.Text = "ContractNo" Then
                    ModalPopupExtender5.Show()
                End If
                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
            End If

            tb1.Visible = True
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Page_Load", ex.Message.ToString, Left(txt.Text, 1500))
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_DataBound(sender As Object, e As EventArgs) Handles GridView1.DataBound
        Try
            'If String.IsNullOrEmpty(Session("servicefrom")) = False Then
            '    If (isInPage = False) Then

            '        GridView1.PageIndex = GridView1.PageIndex + 1
            '        GridView1.DataBind()
            '    End If

            'End If

            'If String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
            '    If (isInPage = False) Then

            '        GridView1.PageIndex = GridView1.PageIndex + 1
            '        GridView1.DataBind()
            '    End If
            'End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_DataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then

                Dim ContractEndDate As Date
                Dim CategoryId As String
                CategoryId = ""


                If e.Row.Cells(14).Text.Trim = "F" Then
                    e.Row.Cells(14).Text = "FIXED"
                Else
                    e.Row.Cells(14).Text = "CONTINUOUS"
                End If



                If e.Row.Cells(19).Text.Trim <> "&nbsp;" Then
                    If String.IsNullOrEmpty(e.Row.Cells(19).Text.Trim) = False Then
                        ContractEndDate = e.Row.Cells(19).Text.Trim
                    End If

                    If String.IsNullOrEmpty(e.Row.Cells(25).Text.Trim) = False Then
                        CategoryId = e.Row.Cells(25).Text.Trim
                    End If

                    If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                        If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                            isInPage = True

                            txtSelectedRow.Text = e.Row.RowIndex
                        End If
                    End If


                    If CategoryId = "CONTRACT" And IsDate(ContractEndDate) = True Then
                        Dim noofdays As Integer
                        noofdays = DateDiff(DateInterval.Day, Now(), ContractEndDate)

                        If noofdays < 0 Then
                            e.Row.ForeColor = Color.Red
                        End If

                        If noofdays > 0 And noofdays < 30 Then
                            e.Row.ForeColor = Color.Green
                        End If

                        If noofdays > 30 And noofdays < 60 Then
                            e.Row.ForeColor = Color.Blue
                        End If
                    End If
                End If

                'If e.Row.Cells(17).Text.Trim <> "&nbsp;" Then
                '    If String.IsNullOrEmpty(e.Row.Cells(17).Text.Trim) = False Then
                '        ContractEndDate = e.Row.Cells(17).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(e.Row.Cells(23).Text.Trim) = False Then
                '        CategoryId = e.Row.Cells(23).Text.Trim
                '    End If

                '    If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                '        If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                '            isInPage = True

                '            txtSelectedRow.Text = e.Row.RowIndex
                '        End If
                '    End If

                '    If CategoryId = "CONTRACT" And IsDate(ContractEndDate) = True Then
                '        Dim noofdays As Integer
                '        noofdays = DateDiff(DateInterval.Day, Now(), ContractEndDate)

                '        If noofdays < 0 Then
                '            e.Row.ForeColor = Color.Red
                '        End If

                '        If noofdays > 0 And noofdays < 30 Then
                '            e.Row.ForeColor = Color.Green
                '        End If

                '        If noofdays > 30 And noofdays < 60 Then
                '            e.Row.ForeColor = Color.Blue
                '        End If
                '    End If
                'End If

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_RowDataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        ''Dim cultureInfo As CultureInfo = Thread.CurrentThread.CurrentCulture
        ''Dim objTextInfo As TextInfo = cultureInfo.TextInfo

        'If txtMode.Text = "EDIT" Then

        Try
            If txtMode.Text = "NEW" Or txtMode.Text = "EDIT" Then
                lblAlert.Text = "CANNOT SELECT RECORD IN ADD/EDIT MODE. SAVE OR CANCEL TO PROCEED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Return
            End If
            EnableControls()

            txtIsPopup.Text = "N"
            txtMode.Text = "View"
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()


            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'btnSvcEdit.Enabled = False
            'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            'btnSvcDelete.Enabled = False
            'btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            'btnPrint.Enabled = True
            'btnPrint.ForeColor = System.Drawing.Color.Black

            'txtContractStart.ForeColor = Drawing.Color.Black
            'txtServStart.ForeColor = Drawing.Color.Black

            'btnClient0.Visible = True
            'btnClient1.Visible = True
            'btnClient2.Visible = True
            'btnClient3.Visible = True
            'SASI - 17/04/2017 - COMMISSION 

            MakeCommNull()
            EnablecommControls()
            MakeNotesNull()
            EnableNotesControls()

            MakeRateScheduleNull()
            'EnableRateScheduleControls()

            'grvContractDetail.DataBind()

            'SASI - END
            Dim editindex As Integer = GridView1.SelectedIndex

            If String.IsNullOrEmpty(Session("contractdetailfrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("servicefrom")) = False Then
                rcno = Session("rcno")
            ElseIf String.IsNullOrEmpty(Session("teamfrom")) = False Then
                rcno = Session("rcno")
            Else
                rcno = DirectCast(GridView1.Rows(editindex).FindControl("Label1"), Label).Text
            End If

            If String.IsNullOrEmpty(rcno) = True Then
                txtRcno.Text = "0"
            Else
                txtRcno.Text = rcno.ToString()
            End If


            ddlServiceTypeID.SelectedIndex = -1
            txtCategoryID.Text = ""
            ddlPortfolioYN.SelectedIndex = -1
            ddlProjectCode.SelectedIndex = -1

            PopulateRecord()

            'txtLastServiceDate.Text = ""

            'FindLastServiceDate()
            If String.IsNullOrEmpty(txtSelectedRow.Text) = False Then
                If String.IsNullOrEmpty(Session("servicefrom")) = False Then
                    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                End If

                If String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                    Session("serviceschedulefrom") = ""
                End If
            End If


            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> HideElements();</Script>", False)
            ' '''''''''''''''''''''''''''''''''''''
            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'btnSvcEdit.Enabled = False
            'btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            'btnSvcDelete.Enabled = False
            'btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            'btnPrint.Enabled = True
            'btnPrint.ForeColor = System.Drawing.Color.Black

            'txtContractStart.ForeColor = Drawing.Color.Black
            'txtServStart.ForeColor = Drawing.Color.Black

            'btnClient0.Visible = True
            'btnClient1.Visible = True
            'btnClient2.Visible = True
            'btnClient3.Visible = True

            ' '''''''''''''''''''''''''''''''''''''''

            'btnEdit.Enabled = True
            'btnEdit.ForeColor = System.Drawing.Color.Black

            'btnCopy.Enabled = True
            'btnCopy.ForeColor = System.Drawing.Color.Black

            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black
            ''btnQuit.Enabled = True
            ''btnQuit.ForeColor = System.Drawing.Color.Black


            'btnContractDetail.Enabled = True
            'btnContractDetail.ForeColor = System.Drawing.Color.Black

            'btnTerminate.Enabled = True
            'btnTerminate.ForeColor = System.Drawing.Color.Black

            'btnEarlyCompletion.Enabled = True
            'btnEarlyCompletion.ForeColor = System.Drawing.Color.Black

            'btnContractRenewal.Enabled = True
            'btnContractRenewal.ForeColor = System.Drawing.Color.Black

            'btnCancelByCompany.Enabled = True
            'btnCancelByCompany.ForeColor = System.Drawing.Color.Black

            ''btnDelete.ForeColor = System.Drawing.Color.Black

            'btnChangeStatus.Enabled = True
            'btnChangeStatus.ForeColor = System.Drawing.Color.Black

            'btnRevision.Enabled = True
            'btnRevision.ForeColor = System.Drawing.Color.Black


            'btnServiceRecords.Enabled = True

            'If txtGS.Text = "P" Then
            '    btnServiceSchedule.Enabled = False
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnServiceSchedule.Enabled = True
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            '    'btnSave.Enabled = True
            'End If

            'btnSvcEdit.Enabled = False
            'btnSvcDelete.Enabled = False

            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            '    AccessControl()
            'End If

            'FindIsInActiveCustomer()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub PopulateRecord()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            ddlServiceTypeID.SelectedIndex = -1
            txtCategoryID.Text = ""
            ddlPortfolioYN.SelectedIndex = -1
            ddlProjectCode.SelectedIndex = -1

            ddlContactType.SelectedIndex = -1
            ddlAgreementType.SelectedIndex = -1
            ddlCompanyGrp.SelectedIndex = -1
            ddlScheduler.SelectedIndex = -1
            ddlContractGrp.SelectedIndex = -1
            ddlBillingFreq.SelectedIndex = -1

            ddlSearchCompanyGroup.SelectedIndex = -1
            ddlSearchContactType.SelectedIndex = -1
            ddlSearchContractGroup.SelectedIndex = -1
            ddlSearchInChargeId.SelectedIndex = -1
            ddlSearchLocationGroup.SelectedIndex = -1
            ddlSearchRenewalStatus.SelectedIndex = -1
            ddlSearchSalesman.SelectedIndex = -1
            ddlSearchStatus.SelectedIndex = -1
            ddlSearchScheduler.SelectedIndex = -1
            ddlWarrantyFrequency.SelectedIndex = -1

            ddlStatusChSt.SelectedIndex = -1
            ddlTerminationCode.SelectedIndex = -1
            ddlRenewalStatus.SelectedIndex = -1
            ddlCompanyGroupEdit.SelectedIndex = -1
            txtLocation.SelectedIndex = -1

            ddlOnHoldCodeChSt.SelectedIndex = -1

            lblIsInActiveAccountId.Text = ""
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Dim sql As String
            'sql = ""
            'sql = "Select AccountID, Status, RenewalSt, NotedSt, GSt, ContractNo, ContractDate, CustName, InChargeId, AgreeValue, ContractValue, StartDate, EndDate, ActualEnd, "
            'sql = sql + "Scheduler, SalesMan, ProspectId, ContactType, CustCode, CustAddr, Duration, DurationMs, ServiceNo, ServiceBal, ServiceAmt, HourNo, HourBal, HourAmt, "
            'sql = sql + "CallNo, CallBal, CallAmt, ResponseHours, CancelCharges, CompensatePct, CompensateMax, Notes, Comments, ServiceNoActual, HourNoActual, CallNoActual, MinDuration,"
            'sql = sql + "OContractNo, RenewalContractNo, RenewalDate, UnitNo, UnitBal, UnitAmt, UnitNoActual, settle, YourReference, ServiceStart, ContractGroup, MainContractNo, "
            'sql = sql + "ServiceEnd, TimeIn, TimeOut, WarrantyStart, WarrantyEnd, ContractValue, PerServiceValue, Disc_Percent, DiscAmt, BillingFrequency, Support, TeamID, Postal,"
            'sql = sql + "LocateGrp, ContactPersonMobile, OurReference, PrintingRemarks, AmtCompleted, AmtBalance, ValuePerMonth, BillingAmount, AllocatedSvcTime, Remarks,"
            'sql = sql + "QuotePrice, QuoteUnitMS, CompanyGroup, GSTNos, ScheduleType, Warranty, WarrantyDuration, RequireInspecton, InspectionFrequency, InspectionStart, InspectionEnd,"
            'sql = sql + "ComputationMethod, ContractNo, CustName, TotalArea, CompletedArea, BalanceArea, RetentionPerc, RetentionValue, RetentionClaimDate, PONo, ServiceAddress, BillAddress1,"
            'sql = sql + "TerminationCode, TerminationDescription, SalesCommissionPerc, SalesCommissionAmt, TechCommissionPerc, TechCommissionAmt, Supervisor, ServiceTypeID,ServiceTypeDescription,CategoryID,PortfolioYN,PortfolioValue,MarketSegmentID,industry,  "
            'sql = sql + "ProjectCode, ProjectName, BaitStationTotal, BaitStationInstalled,  BaitStationBalance, WarrantyBillingFrequency, WarrantyBillingAmount, ActualServiceStartDate, AgreementType, commentsStatus, LastBillDate, Location  FROM tblcontract "
            'sql = sql + "where rcno = " & Convert.ToInt64(txtRcno.Text)


            SqlDSContractDet.SelectCommand = ""
            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()

            SqlDSNotesMaster.SelectCommand = ""
            gvNotesMaster.DataSourceID = "SqlDSNotesMaster"
            gvNotesMaster.DataBind()

            MakeNotesNull()

            MakeRateScheduleNull()

            SqlDSScheduleType.SelectCommand = ""
            gvRateSchedule.DataSourceID = "SqlDSScheduleType"
            gvRateSchedule.DataBind()
            ''''''''''''''''''''''''''
            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.StoredProcedure
            command1.CommandText = "SelectContractRecordSingaporeNew2"

            command1.Connection = conn

            ''InsertIntoTblWebEventLog("PopulateRecord", "1", "")

            'InsertIntoTblWebEventLog("PopulateRecord", "1", "1", "1")

            'InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION POPULATERECORD", ex.Message.ToString, txtContractNo.Text)

            command1.Parameters.Clear()
            command1.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))


            command1.Parameters.Add(New MySqlParameter("pr_AccountID", MySqlDbType.String))
            command1.Parameters("pr_AccountID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_ActualEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualServHrs", MySqlDbType.String))
            command1.Parameters("pr_ActualServHrs").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualServiceStartDate", MySqlDbType.String))
            command1.Parameters("pr_ActualServiceStartDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ActualStaff", MySqlDbType.String))
            command1.Parameters("pr_ActualStaff").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AgreementType", MySqlDbType.String))
            command1.Parameters("pr_AgreementType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AgreeValue", MySqlDbType.String))
            command1.Parameters("pr_AgreeValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AllocatedSvcTime", MySqlDbType.String))
            command1.Parameters("pr_AllocatedSvcTime").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AmtBalance", MySqlDbType.String))
            command1.Parameters("pr_AmtBalance").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_AmtCompleted", MySqlDbType.String))
            command1.Parameters("pr_AmtCompleted").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationBalance", MySqlDbType.String))
            command1.Parameters("pr_BaitStationBalance").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationInstalled", MySqlDbType.String))
            command1.Parameters("pr_BaitStationInstalled").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BaitStationTotal", MySqlDbType.String))
            command1.Parameters("pr_BaitStationTotal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BalanceArea", MySqlDbType.String))
            command1.Parameters("pr_BalanceArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillAddress1", MySqlDbType.String))
            command1.Parameters("pr_BillAddress1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillContactPerson", MySqlDbType.String))
            command1.Parameters("pr_BillContactPerson").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillFax", MySqlDbType.String))
            command1.Parameters("pr_BillFax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillingAmount", MySqlDbType.String))
            command1.Parameters("pr_BillingAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillingFrequency", MySqlDbType.String))
            command1.Parameters("pr_BillingFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillMobile", MySqlDbType.String))
            command1.Parameters("pr_BillMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_BillTelephone", MySqlDbType.String))
            command1.Parameters("pr_BillTelephone").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallAmt", MySqlDbType.String))
            command1.Parameters("pr_CallAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallBal", MySqlDbType.String))
            command1.Parameters("pr_CallBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallNo", MySqlDbType.String))
            command1.Parameters("pr_CallNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CallNoActual", MySqlDbType.String))
            command1.Parameters("pr_CallNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CancelCharges", MySqlDbType.String))
            command1.Parameters("pr_CancelCharges").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CategoryID", MySqlDbType.String))
            command1.Parameters("pr_CategoryID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Comments", MySqlDbType.Text))
            command1.Parameters("pr_Comments").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CommentsStatus", MySqlDbType.String))
            command1.Parameters("pr_CommentsStatus").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompanyGroup", MySqlDbType.String))
            command1.Parameters("pr_CompanyGroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompensateMax", MySqlDbType.String))
            command1.Parameters("pr_CompensateMax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompensatePct", MySqlDbType.String))
            command1.Parameters("pr_CompensatePct").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CompletedArea", MySqlDbType.String))
            command1.Parameters("pr_CompletedArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ComputationMethod", MySqlDbType.String))
            command1.Parameters("pr_ComputationMethod").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Contact", MySqlDbType.String))
            command1.Parameters("pr_Contact").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactPersonMobile", MySqlDbType.String))
            command1.Parameters("pr_ContactPersonMobile").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContactType", MySqlDbType.String))
            command1.Parameters("pr_ContactType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractDate", MySqlDbType.DateTime))
            command1.Parameters("pr_ContractDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractGroup", MySqlDbType.String))
            command1.Parameters("pr_ContractGroup").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractValue", MySqlDbType.String))
            command1.Parameters("pr_ContractValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CreatedBy", MySqlDbType.String))
            command1.Parameters("pr_CreatedBy").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CreatedOn", MySqlDbType.DateTime))
            command1.Parameters("pr_CreatedOn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustAddr", MySqlDbType.String))
            command1.Parameters("pr_CustAddr").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustCode", MySqlDbType.String))
            command1.Parameters("pr_CustCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_CustName", MySqlDbType.String))
            command1.Parameters("pr_CustName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate1", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate2", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayHourRate3", MySqlDbType.String))
            command1.Parameters("pr_DayHourRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService1", MySqlDbType.String))
            command1.Parameters("pr_DayService1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService2", MySqlDbType.String))
            command1.Parameters("pr_DayService2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService3", MySqlDbType.String))
            command1.Parameters("pr_DayService3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayService4", MySqlDbType.String))
            command1.Parameters("pr_DayService4").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport1", MySqlDbType.String))
            command1.Parameters("pr_DayTransport1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport2", MySqlDbType.String))
            command1.Parameters("pr_DayTransport2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayTransport3", MySqlDbType.String))
            command1.Parameters("pr_DayTransport3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate1", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate2", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DayVisitRate3", MySqlDbType.String))
            command1.Parameters("pr_DayVisitRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Disc_Percent", MySqlDbType.String))
            command1.Parameters("pr_Disc_Percent").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DiscAmt", MySqlDbType.String))
            command1.Parameters("pr_DiscAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Duration", MySqlDbType.String))
            command1.Parameters("pr_Duration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_DurationMs", MySqlDbType.String))
            command1.Parameters("pr_DurationMs").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndDate", MySqlDbType.DateTime))
            command1.Parameters("pr_EndDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate1", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate2", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndHourRate3", MySqlDbType.String))
            command1.Parameters("pr_EndHourRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport1", MySqlDbType.String))
            command1.Parameters("pr_EndTransport1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport2", MySqlDbType.String))
            command1.Parameters("pr_EndTransport2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndTransport3", MySqlDbType.String))
            command1.Parameters("pr_EndTransport3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate1", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate2", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndVisitRate3", MySqlDbType.String))
            command1.Parameters("pr_EndVisitRate3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EntryDate", MySqlDbType.DateTime))
            command1.Parameters("pr_EntryDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Fax", MySqlDbType.String))
            command1.Parameters("pr_Fax").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_GSt", MySqlDbType.String))
            command1.Parameters("pr_GSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_GSTNos", MySqlDbType.String))
            command1.Parameters("pr_GSTNos").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourAmt", MySqlDbType.String))
            command1.Parameters("pr_HourAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourBal", MySqlDbType.String))
            command1.Parameters("pr_HourBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourNo", MySqlDbType.String))
            command1.Parameters("pr_HourNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_HourNoActual", MySqlDbType.String))
            command1.Parameters("pr_HourNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InChargeId", MySqlDbType.String))
            command1.Parameters("pr_InChargeId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Industry", MySqlDbType.String))
            command1.Parameters("pr_Industry").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_InspectionEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionFrequency", MySqlDbType.String))
            command1.Parameters("pr_InspectionFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_InspectionStart", MySqlDbType.DateTime))
            command1.Parameters("pr_InspectionStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastBillDate", MySqlDbType.DateTime))
            command1.Parameters("pr_LastBillDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastModifiedBy", MySqlDbType.String))
            command1.Parameters("pr_LastModifiedBy").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastModifiedOn", MySqlDbType.DateTime))
            command1.Parameters("pr_LastModifiedOn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LocateGrp", MySqlDbType.String))
            command1.Parameters("pr_LocateGrp").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Location", MySqlDbType.String))
            command1.Parameters("pr_Location").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MainContractNo", MySqlDbType.String))
            command1.Parameters("pr_MainContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MarketSegmentID", MySqlDbType.String))
            command1.Parameters("pr_MarketSegmentID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_MinDuration", MySqlDbType.String))
            command1.Parameters("pr_MinDuration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_NotedDate", MySqlDbType.DateTime))
            command1.Parameters("pr_NotedDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_NotedSt", MySqlDbType.String))
            command1.Parameters("pr_NotedSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Notes", MySqlDbType.String))
            command1.Parameters("pr_Notes").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OContractNo", MySqlDbType.String))
            command1.Parameters("pr_OContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OfficeAddress", MySqlDbType.String))
            command1.Parameters("pr_OfficeAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_OurReference", MySqlDbType.String))
            command1.Parameters("pr_OurReference").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PerServiceValue", MySqlDbType.String))
            command1.Parameters("pr_PerServiceValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PONo", MySqlDbType.String))
            command1.Parameters("pr_PONo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PortfolioValue", MySqlDbType.String))
            command1.Parameters("pr_PortfolioValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PortfolioYN", MySqlDbType.String))
            command1.Parameters("pr_PortfolioYN").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Postal", MySqlDbType.String))
            command1.Parameters("pr_Postal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PrintBody", MySqlDbType.String))
            command1.Parameters("pr_PrintBody").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_PrintingRemarks", MySqlDbType.String))
            command1.Parameters("pr_PrintingRemarks").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProjectCode", MySqlDbType.String))
            command1.Parameters("pr_ProjectCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProjectName", MySqlDbType.String))
            command1.Parameters("pr_ProjectName").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ProspectId", MySqlDbType.String))
            command1.Parameters("pr_ProspectId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_QuotePrice", MySqlDbType.String))
            command1.Parameters("pr_QuotePrice").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_QuoteUnitMS", MySqlDbType.String))
            command1.Parameters("pr_QuoteUnitMS").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Remarks", MySqlDbType.String))
            command1.Parameters("pr_Remarks").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalContractNo", MySqlDbType.String))
            command1.Parameters("pr_RenewalContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalDate", MySqlDbType.DateTime))
            command1.Parameters("pr_RenewalDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RenewalSt", MySqlDbType.String))
            command1.Parameters("pr_RenewalSt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RequireInspecton", MySqlDbType.String))
            command1.Parameters("pr_RequireInspecton").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ResponseHours", MySqlDbType.String))
            command1.Parameters("pr_ResponseHours").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionClaimDate", MySqlDbType.DateTime))
            command1.Parameters("pr_RetentionClaimDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionPerc", MySqlDbType.String))
            command1.Parameters("pr_RetentionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_RetentionValue", MySqlDbType.String))
            command1.Parameters("pr_RetentionValue").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Rev", MySqlDbType.String))
            command1.Parameters("pr_Rev").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesCommissionAmt", MySqlDbType.String))
            command1.Parameters("pr_SalesCommissionAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesCommissionPerc", MySqlDbType.String))
            command1.Parameters("pr_SalesCommissionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesGRP", MySqlDbType.String))
            command1.Parameters("pr_SalesGRP").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SalesMan", MySqlDbType.String))
            command1.Parameters("pr_SalesMan").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Scheduler", MySqlDbType.String))
            command1.Parameters("pr_Scheduler").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ScheduleType", MySqlDbType.String))
            command1.Parameters("pr_ScheduleType").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServDay", MySqlDbType.String))
            command1.Parameters("pr_ServDay").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServDayMethod", MySqlDbType.String))
            command1.Parameters("pr_ServDayMethod").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceAddress", MySqlDbType.String))
            command1.Parameters("pr_ServiceAddress").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceAmt", MySqlDbType.String))
            command1.Parameters("pr_ServiceAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceBal", MySqlDbType.String))
            command1.Parameters("pr_ServiceBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceDescription", MySqlDbType.String))
            command1.Parameters("pr_ServiceDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceFrequence", MySqlDbType.String))
            command1.Parameters("pr_ServiceFrequence").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceNo", MySqlDbType.String))
            command1.Parameters("pr_ServiceNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceNoActual", MySqlDbType.String))
            command1.Parameters("pr_ServiceNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceStart", MySqlDbType.DateTime))
            command1.Parameters("pr_ServiceStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceTypeDescription", MySqlDbType.String))
            command1.Parameters("pr_ServiceTypeDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ServiceTypeID", MySqlDbType.String))
            command1.Parameters("pr_ServiceTypeID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_settle", MySqlDbType.String))
            command1.Parameters("pr_settle").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_StaffId", MySqlDbType.String))
            command1.Parameters("pr_StaffId").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_StartDate", MySqlDbType.DateTime))
            command1.Parameters("pr_StartDate").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Status", MySqlDbType.String))
            command1.Parameters("pr_Status").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Supervisor", MySqlDbType.String))
            command1.Parameters("pr_Supervisor").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Support", MySqlDbType.String))
            command1.Parameters("pr_Support").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TeamID", MySqlDbType.String))
            command1.Parameters("pr_TeamID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TechCommissionAmt", MySqlDbType.String))
            command1.Parameters("pr_TechCommissionAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TechCommissionPerc", MySqlDbType.String))
            command1.Parameters("pr_TechCommissionPerc").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Telephone", MySqlDbType.String))
            command1.Parameters("pr_Telephone").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TerminationCode", MySqlDbType.String))
            command1.Parameters("pr_TerminationCode").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TerminationDescription", MySqlDbType.String))
            command1.Parameters("pr_TerminationDescription").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeIn", MySqlDbType.String))
            command1.Parameters("pr_TimeIn").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TimeOut", MySqlDbType.String))
            command1.Parameters("pr_TimeOut").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_TotalArea", MySqlDbType.String))
            command1.Parameters("pr_TotalArea").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitAmt", MySqlDbType.String))
            command1.Parameters("pr_UnitAmt").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitBal", MySqlDbType.String))
            command1.Parameters("pr_UnitBal").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitNo", MySqlDbType.String))
            command1.Parameters("pr_UnitNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_UnitNoActual", MySqlDbType.String))
            command1.Parameters("pr_UnitNoActual").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ValuePerMonth", MySqlDbType.String))
            command1.Parameters("pr_ValuePerMonth").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_Warranty", MySqlDbType.String))
            command1.Parameters("pr_Warranty").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyBillingAmount", MySqlDbType.String))
            command1.Parameters("pr_WarrantyBillingAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyBillingFrequency", MySqlDbType.String))
            command1.Parameters("pr_WarrantyBillingFrequency").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyDuration", MySqlDbType.String))
            command1.Parameters("pr_WarrantyDuration").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyEnd", MySqlDbType.DateTime))
            command1.Parameters("pr_WarrantyEnd").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WarrantyStart", MySqlDbType.DateTime))
            command1.Parameters("pr_WarrantyStart").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebCreateDeviceID", MySqlDbType.String))
            command1.Parameters("pr_WebCreateDeviceID").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebCreateSource", MySqlDbType.String))
            command1.Parameters("pr_WebCreateSource").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebDeleteStatus", MySqlDbType.String))
            command1.Parameters("pr_WebDeleteStatus").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebEditSource", MySqlDbType.String))
            command1.Parameters("pr_WebEditSource").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebFlowFrom", MySqlDbType.String))
            command1.Parameters("pr_WebFlowFrom").Direction = ParameterDirection.Output
            command1.Parameters.Add(New MySqlParameter("pr_WebFlowTo", MySqlDbType.String))
            command1.Parameters("pr_WebFlowTo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WebLastEditDevice", MySqlDbType.String))
            command1.Parameters("pr_WebLastEditDevice").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom1", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom2", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayFrom3", MySqlDbType.String))
            command1.Parameters("pr_WeekDayFrom3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo1", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo2", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekDayTo3", MySqlDbType.String))
            command1.Parameters("pr_WeekDayTo3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom1", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom2", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndFrom3", MySqlDbType.String))
            command1.Parameters("pr_WeekEndFrom3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo1", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo1").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo2", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo2").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_WeekEndTo3", MySqlDbType.String))
            command1.Parameters("pr_WeekEndTo3").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_YourReference", MySqlDbType.String))
            command1.Parameters("pr_YourReference").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_ContractNo", MySqlDbType.String))
            command1.Parameters("pr_ContractNo").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SignedServiceAgreement", MySqlDbType.String))
            command1.Parameters("pr_SignedServiceAgreement").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_LastBillAmount", MySqlDbType.String))
            command1.Parameters("pr_LastBillAmount").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_SignedAgreementReference", MySqlDbType.String))
            command1.Parameters("pr_SignedAgreementReference").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_AutoRenew", MySqlDbType.String))
            command1.Parameters("pr_AutoRenew").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_FixedContinuous", MySqlDbType.String))
            command1.Parameters("pr_FixedContinuous").Direction = ParameterDirection.Output

            command1.Parameters.Add(New MySqlParameter("pr_EndofLastSchedule", MySqlDbType.DateTime))
            command1.Parameters("pr_EndofLastSchedule").Direction = ParameterDirection.Output



            command1.Parameters.Add(New MySqlParameter("pr_OnHoldDate", MySqlDbType.DateTime))
            command1.Parameters("pr_OnHoldDate").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldCode", MySqlDbType.String))
            command1.Parameters("pr_OnHoldCode").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldDescription", MySqlDbType.String))
            command1.Parameters("pr_OnHoldDescription").Direction = ParameterDirection.Output


            command1.Parameters.Add(New MySqlParameter("pr_OnHoldComments", MySqlDbType.String))
            command1.Parameters("pr_OnHoldComments").Direction = ParameterDirection.Output

            command1.ExecuteScalar()

            'InsertIntoTblWebEventLog("PopulateRecord", "2", "1", "1")

            txtAccountId.Text = command1.Parameters("@pr_AccountID").Value.ToString

            'InsertIntoTblWebEventLog("PopulateRecord", "3", "1", "1")

            txtOriginalAccountId.Text = txtAccountId.Text
            lblAccountID.Text = txtAccountId.Text

            'InsertIntoTblWebEventLog("PopulateRecord", "4", "1", "1")

            chkSignedServiceAgreement.Checked = command1.Parameters("@pr_SignedServiceAgreement").Value.ToString

            'InsertIntoTblWebEventLog("PopulateRecord", "5", "1", "1")

            If command1.Parameters("@pr_SignedAgreementReference").Value.ToString <> "" Then
                txtSignedAgreementReference.Text = "Signed Service Agreement Refer To  " & command1.Parameters("@pr_SignedAgreementReference").Value.ToString
            Else
                txtSignedAgreementReference.Text = "Signed Service Agreement"

            End If

            'InsertIntoTblWebEventLog("PopulateRecord", "51", "1", "1")

            If command1.Parameters("@pr_AgreementType").Value.ToString = "" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("NEW")
                ddlAgreementType.Items.Add("ADDITION")
                'ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
                ddlAgreementType.SelectedIndex = 0
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "NEW" Or command1.Parameters("@pr_AgreementType").Value.ToString = "ADDITION" Then
                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("NEW")
                ddlAgreementType.Items.Add("ADDITION")
                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()

            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "RENEWAL" Then
                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("RENEWAL")

                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()
                'ddlAgreementType.Attributes.Add("disabled", "true")
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "NO PRICE CHANGE" Or command1.Parameters("@pr_AgreementType").Value.ToString = "PRICE INCREASE" Or command1.Parameters("@pr_AgreementType").Value.ToString = "PRICE DECREASE" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("NO PRICE CHANGE")
                ddlAgreementType.Items.Add("PRICE INCREASE")
                ddlAgreementType.Items.Add("PRICE DECREASE")

                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim
            ElseIf command1.Parameters("@pr_AgreementType").Value.ToString = "WARRANTY" Then

                ddlAgreementType.Items.Clear()
                ddlAgreementType.Items.Add("--SELECT--")
                ddlAgreementType.Items.Add("WARRANTY")

                ddlAgreementType.Text = command1.Parameters("@pr_AgreementType").Value.ToString.Trim()
            End If
            'InsertIntoTblWebEventLog("PopulateRecord", "52", "1", "1")

            txtStatus.Text = command1.Parameters("@pr_Status").Value.ToString.Trim()
            If command1.Parameters("@pr_RenewalSt").Value.ToString <> "" Then : txtRs.Text = command1.Parameters("@pr_RenewalSt").Value.ToString.ToUpper.Trim() : End If
            If command1.Parameters("@pr_NotedSt").Value.ToString <> "" Then : txtNS.Text = command1.Parameters("@pr_NotedSt").Value.ToString : End If
            If command1.Parameters("@pr_GSt").Value.ToString <> "" Then : txtGS.Text = command1.Parameters("@pr_GSt").Value.ToString : End If
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : txtContractNo.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            txtContractNoSelected.Text = txtContractNo.Text
            lblContractNo.Text = txtContractNo.Text
            If command1.Parameters("@pr_ContractDate").Value.ToString <> "" Then : txtContractDate.Text = Convert.ToDateTime(command1.Parameters("@pr_ContractDate").Value).ToString("dd/MM/yyyy") : End If
            'Convert.ToDateTime(command1.Parameters("@pr_SchServiceDate").Value).ToString("dd/MM/yyyy")
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : txtCustName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If
            lblName.Text = txtCustName.Text


            If command1.Parameters("@pr_InChargeId").Value.ToString <> "" Then : txtTeamIncharge.Text = command1.Parameters("@pr_InChargeId").Value.ToString : End If
            If command1.Parameters("@pr_AgreeValue").Value.ToString <> "" Then : txtAgreeVal.Text = Convert.ToDecimal(command1.Parameters("@pr_AgreeValue").Value).ToString("f2") : End If

            txtAgreeValueEdit.Text = txtAgreeVal.Text

            If command1.Parameters("@pr_ContractValue").Value.ToString <> "" Then : txtTotContVal.Text = Convert.ToDecimal(command1.Parameters("@pr_ContractValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_StartDate").Value.ToString <> "" Then : txtContractStart.Text = Convert.ToDateTime(command1.Parameters("@pr_StartDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_EndDate").Value.ToString <> "" Then : txtContractEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_EndDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_ActualServiceStartDate").Value.ToString <> "" Then : txtActualServiceStart.Text = Convert.ToDateTime(command1.Parameters("@pr_ActualServiceStartDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_ActualEnd").Value.ToString <> "" Then : txtActualEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_ActualEnd").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_Scheduler").Value.ToString <> "" Then

                gScheduler = command1.Parameters("@pr_Scheduler").Value.ToString.ToUpper()

                If ddlScheduler.Items.FindByValue(gScheduler) Is Nothing Then
                    ddlScheduler.Items.Add(gScheduler)
                    ddlScheduler.Text = gScheduler
                Else
                    ddlScheduler.Text = command1.Parameters("@pr_Scheduler").Value.ToString.Trim().ToUpper()
                End If
            End If


            If command1.Parameters("@pr_Scheduler").Value.ToString <> "" Then
                gScheduler = command1.Parameters("@pr_Scheduler").Value.ToString.ToUpper()

                If ddlSchedulerEdit.Items.FindByValue(gScheduler) Is Nothing Then
                    ddlSchedulerEdit.Items.Add(gScheduler)
                    ddlSchedulerEdit.Text = gScheduler
                Else
                    ddlSchedulerEdit.Text = command1.Parameters("@pr_Scheduler").Value.ToString.Trim().ToUpper()
                End If
            End If


            If command1.Parameters("@pr_SalesMan").Value.ToString = "" Or command1.Parameters("@pr_SalesMan").Value.ToString = "&nbsp;" Then
                ddlSalesman.SelectedIndex = 0
            Else
                'If command1.Parameters("@pr_SalesMan").Value.ToString <> "" Then

                gSalesman = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper()

                If ddlSalesman.Items.FindByValue(gSalesman) Is Nothing Then
                    ddlSalesman.Items.Add(gSalesman)
                    ddlSalesman.Text = gSalesman
                Else
                    ddlSalesman.Text = command1.Parameters("@pr_SalesMan").Value.ToString.Trim().ToUpper()
                End If
                'End If
            End If


            If command1.Parameters("@pr_SalesMan").Value.ToString = "" Or command1.Parameters("@pr_SalesMan").Value.ToString = "&nbsp;" Then
                ddlSalesmanEdit.SelectedIndex = 0
            Else
                gSalesman = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper()

                If ddlSalesmanEdit.Items.FindByValue(gSalesman) Is Nothing Then
                    ddlSalesmanEdit.Items.Add(gSalesman)
                    ddlSalesmanEdit.Text = gSalesman
                Else
                    ddlSalesmanEdit.Text = command1.Parameters("@pr_SalesMan").Value.ToString.Trim().ToUpper()
                End If
                'End If
            End If
            'InsertIntoTblWebEventLog("PopulateRecord", "53", "1", "1")

            'If command1.Parameters("@pr_SalesMan").Value.ToString <> "" Then : ddlSalesman.Text = command1.Parameters("@pr_SalesMan").Value.ToString.ToUpper.Trim().ToUpper() : End If
            If command1.Parameters("@pr_ProspectId").Value.ToString <> "" Then : txtProspectId.Text = command1.Parameters("@pr_ProspectId").Value.ToString : End If
            'If command1.Parameters("@pr_StaffId").Value.ToString <> "" Then : txtStaffId.Text = command1.Parameters("@pr_StaffId").Value.ToString : End If


            If command1.Parameters("@pr_ContactType").Value.ToString <> "" Then
                If command1.Parameters("@pr_ContactType").Value.ToString = "CORPORATE" Or command1.Parameters("@pr_ContactType").Value.ToString = "COMPANY" Then
                    ddlContactType.Text = "COMPANY"
                End If
                If command1.Parameters("@pr_ContactType").Value.ToString = "RESIDENTIAL" Or command1.Parameters("@pr_ContactType").Value.ToString = "PERSON" Then
                    ddlContactType.Text = "PERSON"
                End If

                'If command1.Parameters("@pr_ContactType").Value.ToString = "CORPORATE" Or command1.Parameters("@pr_ContactType").Value.ToString = "COMPANY" Then
                '    ddlContactType.Text = "CORPORATE"
                'End If
                'If command1.Parameters("@pr_ContactType").Value.ToString = "RESIDENTIAL" Or command1.Parameters("@pr_ContactType").Value.ToString = "PERSON" Then
                '    ddlContactType.Text = "RESIDENTIAL"
                'End If
            End If
            If command1.Parameters("@pr_CustCode").Value.ToString <> "" Then : txtClient.Text = command1.Parameters("@pr_CustCode").Value.ToString : End If
            If command1.Parameters("@pr_CustAddr").Value.ToString <> "" Then : txtOfficeAddress.Text = command1.Parameters("@pr_CustAddr").Value.ToString : End If


            'If command1.Parameters("@pr_Contact").Value.ToString <> "" Then : txtContactPerson.Text = command1.Parameters("@pr_Contact").Value.ToString : End If
            'If command1.Parameters("@pr_Telephone").Value.ToString <> "" Then : txtTelephone.Text = command1.Parameters("@pr_Telephone").Value.ToString : End If
            'If command1.Parameters("@pr_Fax").Value.ToString <> "" Then : txtFax.Text = command1.Parameters("@pr_Fax").Value.ToString : End If
            If command1.Parameters("@pr_Duration").Value.ToString <> "" Then : txtDuration.Text = command1.Parameters("@pr_Duration").Value.ToString : End If

            If command1.Parameters("@pr_DurationMs").Value.ToString <> "" Then
                If command1.Parameters("@pr_DurationMs").Value.ToString = "DAYS" Then
                    rbtLstDuration.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "WEEKS" Then
                    rbtLstDuration.SelectedIndex = 1
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "MONTHS" Then
                    rbtLstDuration.SelectedIndex = 2
                ElseIf command1.Parameters("@pr_DurationMs").Value.ToString = "YEARS" Then
                    rbtLstDuration.SelectedIndex = 3
                End If
            End If


            If command1.Parameters("@pr_ServiceNo").Value.ToString <> "" Then : txtServiceNo.Text = command1.Parameters("@pr_ServiceNo").Value.ToString : End If
            If command1.Parameters("@pr_ServiceBal").Value.ToString <> "" Then : txtServiceBal.Text = command1.Parameters("@pr_ServiceBal").Value.ToString : End If
            If command1.Parameters("@pr_ServiceAmt").Value.ToString <> "" Then : txtServiceAmt.Text = command1.Parameters("@pr_ServiceAmt").Value.ToString : End If
            If command1.Parameters("@pr_HourNo").Value.ToString <> "" Then : txtHourNo.Text = command1.Parameters("@pr_HourNo").Value.ToString : End If
            If command1.Parameters("@pr_HourBal").Value.ToString <> "" Then : txtHourBal.Text = command1.Parameters("@pr_HourBal").Value.ToString : End If
            If command1.Parameters("@pr_HourAmt").Value.ToString <> "" Then : txtHourAmt.Text = command1.Parameters("@pr_HourAmt").Value.ToString : End If
            If command1.Parameters("@pr_CallNo").Value.ToString <> "" Then : txtCallNo.Text = command1.Parameters("@pr_CallNo").Value.ToString : End If
            If command1.Parameters("@pr_CallBal").Value.ToString <> "" Then : txtCallBal.Text = command1.Parameters("@pr_CallBal").Value.ToString : End If
            If command1.Parameters("@pr_CallAmt").Value.ToString <> "" Then : txtCallAmt.Text = command1.Parameters("@pr_CallAmt").Value.ToString : End If
            If command1.Parameters("@pr_ResponseHours").Value.ToString <> "" Then : txtResponse.Text = command1.Parameters("@pr_ResponseHours").Value.ToString : End If
            If command1.Parameters("@pr_CancelCharges").Value.ToString <> "" Then : txtCancelCharges.Text = command1.Parameters("@pr_CancelCharges").Value.ToString : End If
            If command1.Parameters("@pr_CompensatePct").Value.ToString <> "" Then : txtCompensatePct.Text = command1.Parameters("@pr_CompensatePct").Value.ToString : End If
            If command1.Parameters("@pr_CompensateMax").Value.ToString <> "" Then : txtCompensateMax.Text = command1.Parameters("@pr_CompensateMax").Value.ToString : End If
            If command1.Parameters("@pr_Notes").Value.ToString <> "" Then : txtContractNotes.Text = command1.Parameters("@pr_Notes").Value.ToString : End If
            txtNotesEdit.Text = txtContractNotes.Text


            If command1.Parameters("@pr_Comments").Value.ToString <> "" Then : txtServInst.Text = command1.Parameters("@pr_Comments").Value.ToString : End If
            'If command1.Parameters("@pr_ActualStaff").Value.ToString <> "" Then : txtActualStaff.Text = command1.Parameters("@pr_ActualStaff").Value.ToString : End If
            If command1.Parameters("@pr_ServiceNoActual").Value.ToString <> "" Then : txtServiceNoActual.Text = command1.Parameters("@pr_ServiceNoActual").Value.ToString : End If
            If command1.Parameters("@pr_HourNoActual").Value.ToString <> "" Then : txtHourNoActual.Text = command1.Parameters("@pr_HourNoActual").Value.ToString : End If
            If command1.Parameters("@pr_CallNoActual").Value.ToString <> "" Then : txtCallNoActual.Text = command1.Parameters("@pr_CallNoActual").Value.ToString : End If
            If command1.Parameters("@pr_MinDuration").Value.ToString <> "" Then : txtMinDuration.Text = command1.Parameters("@pr_MinDuration").Value.ToString : End If
            If command1.Parameters("@pr_OContractNo").Value.ToString <> "" Then : txtOContract.Text = command1.Parameters("@pr_OContractNo").Value.ToString : End If
            If command1.Parameters("@pr_RenewalContractNo").Value.ToString <> "" Then : txtRenewed.Text = command1.Parameters("@pr_RenewalContractNo").Value.ToString : End If

            If command1.Parameters("@pr_RenewalDate").Value.ToString <> "" Then : txtRenewalDate.Text = Convert.ToDateTime(command1.Parameters("@pr_RenewalDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_UnitNo").Value.ToString <> "" Then : txtUnitNo.Text = command1.Parameters("@pr_UnitNo").Value.ToString : End If
            If command1.Parameters("@pr_UnitBal").Value.ToString <> "" Then : txtUnitBal.Text = command1.Parameters("@pr_UnitBal").Value.ToString : End If
            If command1.Parameters("@pr_UnitAmt").Value.ToString <> "" Then : txtUnitAmt.Text = command1.Parameters("@pr_UnitAmt").Value.ToString : End If
            If command1.Parameters("@pr_UnitNoActual").Value.ToString <> "" Then : txtUnitNoActual.Text = command1.Parameters("@pr_UnitNoActual").Value.ToString : End If
            'If command1.Parameters("@pr_NotedDate").Value.ToString <> "" Then : txtNotedDate.Text = command1.Parameters("@pr_NotedDate").Value.ToString : End If

            If command1.Parameters("@pr_settle").Value.ToString <> "" Then
                If command1.Parameters("@pr_settle").Value.ToString = "UC" Then
                    rbtnLSettle.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_settle").Value.ToString = "OC" Then
                    rbtnLSettle.SelectedIndex = 1
                ElseIf command1.Parameters("@pr_settle").Value.ToString = "CB" Then
                    rbtnLSettle.SelectedIndex = 2
                End If
            End If
            'If command1.Parameters("@pr_ActualServHrs").Value.ToString <> "" Then : txtActualServHrs.Text = command1.Parameters("@pr_ActualServHrs").Value.ToString : End If
            If command1.Parameters("@pr_YourReference").Value.ToString <> "" Then : txtYourRef.Text = command1.Parameters("@pr_YourReference").Value.ToString : End If
            If command1.Parameters("@pr_ContractGroup").Value.ToString.Trim <> "" Then : ddlContractGrp.Text = command1.Parameters("@pr_ContractGroup").Value.ToString.ToUpper.Trim : End If
            'If command1.Parameters("@pr_ServDayMethod").Value.ToString <> "" Then : txtServDayMethod.Text = command1.Parameters("@pr_ServDayMethod").Value.ToString : End If
            'If command1.Parameters("@pr_ServDay").Value.ToString <> "" Then : txtServDay.Text = command1.Parameters("@pr_ServDay").Value.ToString : End If
            If command1.Parameters("@pr_ServiceStart").Value.ToString <> "" Then : txtServStart.Text = Convert.ToDateTime(command1.Parameters("@pr_ServiceStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_ServiceEnd").Value.ToString <> "" Then : txtServEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_ServiceEnd").Value).ToString("dd/MM/yyyy") : End If
            'If command1.Parameters("@pr_ServiceFrequence").Value.ToString <> "" Then : txtServiceFrequence.Text = command1.Parameters("@pr_ServiceFrequence").Value.ToString : End If
            If command1.Parameters("@pr_TimeIn").Value.ToString <> "" Then : txtServTimeIn.Text = command1.Parameters("@pr_TimeIn").Value.ToString : End If
            If command1.Parameters("@pr_TimeOut").Value.ToString <> "" Then : txtServTimeOut.Text = command1.Parameters("@pr_TimeOut").Value.ToString : End If
            'Convert.ToDateTime(Server.HtmlDecode(GridView1.SelectedRow.Cells(6).Text).Value.ToString).Value.ToString("dd/MM/yyyy")
            If command1.Parameters("@pr_WarrantyStart").Value.ToString <> "" Then : txtWarrStart.Text = Convert.ToDateTime(command1.Parameters("@pr_WarrantyStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_WarrantyEnd").Value.ToString <> "" Then : txtWarrEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_WarrantyEnd").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_ContractValue").Value.ToString <> "" Then : txtConDetVal.Text = Convert.ToDecimal(command1.Parameters("@pr_ContractValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_PerServiceValue").Value.ToString <> "" Then : txtPerServVal.Text = Convert.ToDecimal(command1.Parameters("@pr_PerServiceValue").Value).ToString("f2") : End If
            If command1.Parameters("@pr_Disc_Percent").Value.ToString <> "" Then : txtDisPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_Disc_Percent").Value).ToString("f2") : End If
            If command1.Parameters("@pr_DiscAmt").Value.ToString <> "" Then : txtDisAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_DiscAmt").Value).ToString("f2") : End If
            If command1.Parameters("@pr_BillingFrequency").Value.ToString.Trim <> "" Then : ddlBillingFreq.Text = command1.Parameters("@pr_BillingFrequency").Value.ToString.ToUpper().Trim : End If
            If command1.Parameters("@pr_BillingFrequency").Value.ToString.Trim <> "" Then : ddlBillingFreqEdit.Text = command1.Parameters("@pr_BillingFrequency").Value.ToString.ToUpper().Trim : End If

            'InsertIntoTblWebEventLog("PopulateRecord", "54", "1", "1")
            'If command1.Parameters("@pr_DayService1").Value.ToString <> "" Then : txtDayService1.Text = command1.Parameters("@pr_DayService1").Value.ToString : End If
            'If command1.Parameters("@pr_DayService2").Value.ToString <> "" Then : txtDayService2.Text = command1.Parameters("@pr_DayService2").Value.ToString : End If
            'If command1.Parameters("@pr_DayService3").Value.ToString <> "" Then : txtDayService3.Text = command1.Parameters("@pr_DayService3").Value.ToString : End If
            'If command1.Parameters("@pr_DayService4").Value.ToString <> "" Then : txtDayService4.Text = command1.Parameters("@pr_DayService4").Value.ToString : End If
            If command1.Parameters("@pr_Support").Value.ToString <> "" Then : txtServiceBy.Text = command1.Parameters("@pr_Support").Value.ToString : End If
            If command1.Parameters("@pr_Supervisor").Value.ToString <> "" Then : txtSupervisor.Text = command1.Parameters("@pr_Supervisor").Value.ToString : End If



            If command1.Parameters("@pr_TeamID").Value.ToString <> "" Then : txtTeam.Text = command1.Parameters("@pr_TeamID").Value.ToString : End If
            If command1.Parameters("@pr_Postal").Value.ToString <> "" Then : txtPostal.Text = command1.Parameters("@pr_Postal").Value.ToString : End If
            If command1.Parameters("@pr_LocateGrp").Value.ToString <> "" Then : ddlLocateGrp.Text = command1.Parameters("@pr_LocateGrp").Value.ToString.ToUpper().Trim : End If
            If command1.Parameters("@pr_ContactPersonMobile").Value.ToString <> "" Then : txtConPerMobile.Text = command1.Parameters("@pr_ContactPersonMobile").Value.ToString : End If
            If command1.Parameters("@pr_OurReference").Value.ToString <> "" Then : txtOurRef.Text = command1.Parameters("@pr_OurReference").Value.ToString : End If
            'If command1.Parameters("@pr_ServiceDescription").Value.ToString <> "" Then : txtServiceDescription.Text = command1.Parameters("@pr_ServiceDescription").Value.ToString : End If
            If command1.Parameters("@pr_PrintingRemarks").Value.ToString <> "" Then : txtNotesTemplate.Text = command1.Parameters("@pr_PrintingRemarks").Value.ToString : End If
            'If command1.Parameters("@pr_Rev").Value.ToString <> "" Then : txtRev.Text = command1.Parameters("@pr_Rev").Value.ToString : End If
            If command1.Parameters("@pr_MainContractNo").Value.ToString <> "" Then : txtMainContractNo.Text = command1.Parameters("@pr_MainContractNo").Value.ToString : End If
            If command1.Parameters("@pr_AmtCompleted").Value.ToString <> "" Then : txtAmtCompleted.Text = command1.Parameters("@pr_AmtCompleted").Value.ToString : End If
            If command1.Parameters("@pr_AmtCompleted").Value.ToString <> "" Then : txtServiceAmtActual.Text = command1.Parameters("@pr_AmtCompleted").Value.ToString : End If

            If command1.Parameters("@pr_AmtBalance").Value.ToString <> "" Then : txtAmtBalance.Text = command1.Parameters("@pr_AmtBalance").Value.ToString : End If
            If command1.Parameters("@pr_AmtBalance").Value.ToString <> "" Then : txtServiceAmtBal.Text = command1.Parameters("@pr_AmtBalance").Value.ToString : End If

            If command1.Parameters("@pr_ValuePerMonth").Value.ToString <> "" Then : txtValPerMnth.Text = command1.Parameters("@pr_ValuePerMonth").Value.ToString : End If
            If command1.Parameters("@pr_BillingAmount").Value.ToString <> "" Then : txtBillingAmount.Text = command1.Parameters("@pr_BillingAmount").Value.ToString : End If

            If command1.Parameters("@pr_AllocatedSvcTime").Value.ToString <> "" Then : txtAllocTime.Text = command1.Parameters("@pr_AllocatedSvcTime").Value.ToString : End If
            If command1.Parameters("@pr_Remarks").Value.ToString <> "" Then : txtRemarks.Text = command1.Parameters("@pr_Remarks").Value.ToString : End If
            If command1.Parameters("@pr_QuotePrice").Value.ToString <> "" Then : txtQuotePrice.Text = command1.Parameters("@pr_QuotePrice").Value.ToString : End If
            If command1.Parameters("@pr_QuoteUnitMS").Value.ToString <> "" Then : txtQuoteUnit.Text = command1.Parameters("@pr_QuoteUnitMS").Value.ToString : End If
            If command1.Parameters("@pr_CompanyGroup").Value.ToString <> "" Then : ddlCompanyGrp.Text = command1.Parameters("@pr_CompanyGroup").Value.ToString.Trim : End If

            If command1.Parameters("@pr_CompanyGroup").Value.ToString <> "" Then : ddlCompanyGroupEdit.Text = command1.Parameters("@pr_CompanyGroup").Value.ToString.Trim : End If

            'If command1.Parameters("@pr_SalesGRP").Value.ToString <> "" Then : txtSalesGRP.Text = command1.Parameters("@pr_SalesGRP").Value.ToString : End If
            If command1.Parameters("@pr_GSTNos").Value.ToString <> "" Then : txtGstNo.Text = command1.Parameters("@pr_GSTNos").Value.ToString : End If

            If command1.Parameters("@pr_ScheduleType").Value.ToString <> "" Then
                ddlScheduleType.Text = command1.Parameters("@pr_ScheduleType").Value.ToString.Trim
            End If

            'SASI - 17/04/2017 - COMMISSION

            If command1.Parameters("@pr_SalesCommissionPerc").Value.ToString <> "" Then : txtSalesCommPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_SalesCommissionPerc").Value).ToString("f2") : End If
            If command1.Parameters("@pr_SalesCommissionAmt").Value.ToString <> "" Then : txtSalesCommAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_SalesCommissionAmt").Value).ToString("f2") : End If
            If command1.Parameters("@pr_TechCommissionPerc").Value.ToString <> "" Then : txtTechCommPercent.Text = Convert.ToDecimal(command1.Parameters("@pr_TechCommissionPerc").Value).ToString("f2") : End If
            If command1.Parameters("@pr_TechCommissionAmt").Value.ToString <> "" Then : txtTechCommAmt.Text = Convert.ToDecimal(command1.Parameters("@pr_TechCommissionAmt").Value).ToString("f2") : End If

            'SASI - END

            'SASI - Industry Segment 28/04/2017

            If command1.Parameters("@pr_ServiceTypeID").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_ServiceTypeID").Value.ToString) = True Then
                ddlServiceTypeID.SelectedIndex = 0
            Else
                ddlServiceTypeID.Text = (command1.Parameters("@pr_ServiceTypeID").Value.ToString.Trim & " - " & command1.Parameters("@pr_ServiceTypeDescription").Value.ToString.Trim)
            End If

            'If command1.Parameters("@pr_ServiceTypeID").Value.ToString <> "" Then : ddlServiceTypeID.Text = command1.Parameters("@pr_ServiceTypeID").Value.ToString : End If
            'If command1.Parameters("@pr_ServiceTypeDescription").Value.ToString <> "" Then : ddlServiceTypeID.SelectedValue = command1.Parameters("@pr_ServiceTypeDescription").Value.ToString : End If
            If command1.Parameters("@pr_CategoryID").Value.ToString <> "" Then : txtCategoryID.Text = command1.Parameters("@pr_CategoryID").Value.ToString : End If
            If command1.Parameters("@pr_PortfolioYN").Value.ToString <> "" Then : ddlPortfolioYN.SelectedValue = command1.Parameters("@pr_PortfolioYN").Value.ToString.Trim : End If
            If command1.Parameters("@pr_PortfolioValue").Value.ToString <> "" Then : txtPortfolioValue.Text = Convert.ToDecimal(command1.Parameters("@pr_PortfolioValue").Value).ToString("f2") : End If
            txtPortfolioValueEdit.Text = txtPortfolioValue.Text

            If command1.Parameters("@pr_MarketSegmentID").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_MarketSegmentID").Value.ToString) = True Then
                ddlMarketSegmentID.Text = ""
            Else
                ddlMarketSegmentID.Text = Server.HtmlDecode(command1.Parameters("@pr_MarketSegmentID").Value.ToString)
            End If
            'If command1.Parameters("@pr_MarketSegmentID").Value.ToString <> "" Then : ddlMarketSegmentID.Text = command1.Parameters("@pr_MarketSegmentID").Value.ToString : End If

            If command1.Parameters("@pr_Industry").Value.ToString = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_Industry").Value.ToString) = True Then
                ddlIndustry.Text = ""
            Else
                ddlIndustry.Text = Server.HtmlDecode(command1.Parameters("@pr_Industry").Value.ToString)
            End If

            If command1.Parameters("@pr_LastBillAmount").Value.ToString <> "" Then : txtLastBillAmount.Text = command1.Parameters("@pr_LastBillAmount").Value.ToString : End If

            'If command1.Parameters("@pr_Industry").Value.ToString <> "" Then : ddlIndustry.SelectedItem.Text = command1.Parameters("@pr_Industry").Value.ToString : End If

            'SASI - End Industry Segment


            If command1.Parameters("@pr_Warranty").Value.ToString = "Y" Then
                ChkWithWarranty.Checked = True
            Else
                ChkWithWarranty.Checked = False
            End If

            'If ChkWithWarranty.Checked = True Then
            '    Command.Parameters.AddWithValue("@Warranty", "Y")
            'Else
            '    Command.Parameters.AddWithValue("@Warranty", "N")
            'End If

            If command1.Parameters("@pr_WarrantyDuration").Value.ToString <> "" Then : txtWarrDurtion.Text = command1.Parameters("@pr_WarrantyDuration").Value.ToString : End If
            If command1.Parameters("@pr_WarrantyBillingAmount").Value.ToString <> "" Then : txtWarrantyBillingAmount.Text = command1.Parameters("@pr_WarrantyBillingAmount").Value.ToString : End If


            If command1.Parameters("@pr_WarrantyBillingFrequency").Value.ToString <> "" Then
                ddlWarrantyFrequency.Text = command1.Parameters("@pr_WarrantyBillingFrequency").Value.ToString.ToUpper()
            Else
                ddlWarrantyFrequency.SelectedIndex = 0
            End If



            'If ChkRequireInspection.Checked = True Then
            '    Command.Parameters.AddWithValue("@RequireInspecton", "Y")
            'Else
            '    Command.Parameters.AddWithValue("@RequireInspecton", "N")
            'End If

            If command1.Parameters("@pr_RequireInspecton").Value.ToString = "Y" Then
                ChkRequireInspection.Checked = True
            Else
                ChkRequireInspection.Checked = False
            End If

            'If ddlInspectionFrequency.SelectedIndex = 0 Then
            '    Command.Parameters.AddWithValue("@InspectionFrequency", "")
            'Else
            '    Command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.Value.ToString)
            'End If

            If command1.Parameters("@pr_InspectionFrequency").Value.ToString <> "" Then : ddlInspectionFrequency.Text = command1.Parameters("@pr_InspectionFrequency").Value.ToString.Trim : End If

            'If TxtInspectionStart.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).Value.ToString("yyyy-MM-dd"))

            'End If

            'If TxtInspectionEnd.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).Value.ToString("yyyy-MM-dd"))

            'End If

            If command1.Parameters("@pr_InspectionStart").Value.ToString <> "" Then : TxtInspectionStart.Text = Convert.ToDateTime(command1.Parameters("@pr_InspectionStart").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_InspectionEnd").Value.ToString <> "" Then : TxtInspectionEnd.Text = Convert.ToDateTime(command1.Parameters("@pr_InspectionEnd").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_ComputationMethod").Value.ToString <> "" Then
                If command1.Parameters("@pr_ComputationMethod").Value.ToString = "Monthly" Then
                    rbtComputationMethod.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_ComputationMethod").Value.ToString = "Fixed" Then
                    rbtComputationMethod.SelectedIndex = 1

                End If
            End If

            'If rbtComputationMethod.SelectedIndex = 0 Then
            '    Command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
            'Else
            '    Command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
            'End If


            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If
            'If command1.Parameters("@pr_OfficeAddress").Value.ToString <> "" Then : txtOfficeAddress.Text = command1.Parameters("@pr_OfficeAddress").Value.ToString : End If

            'SASI - 17/04/2017 | Commission Tab

            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID2.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            'txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo2.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblAccountName.Text = command1.Parameters("@pr_CustName").Value.ToString : End If


            'SASI - 17/04/2017 End

            If command1.Parameters("@pr_AccountId").Value.ToString <> "" Then : lblAccountID1.Text = command1.Parameters("@pr_AccountId").Value.ToString : End If
            'txtAccountIdSelection.Text = lblAccountID.Text
            If command1.Parameters("@pr_ContractNo").Value.ToString <> "" Then : lblContractNo1.Text = command1.Parameters("@pr_ContractNo").Value.ToString : End If
            If command1.Parameters("@pr_CustName").Value.ToString <> "" Then : lblName1.Text = command1.Parameters("@pr_CustName").Value.ToString : End If


            If command1.Parameters("@pr_TotalArea").Value.ToString <> "" Then : txtTotalArea.Text = command1.Parameters("@pr_TotalArea").Value.ToString : End If
            If command1.Parameters("@pr_CompletedArea").Value.ToString <> "" Then : txtCompletedArea.Text = command1.Parameters("@pr_CompletedArea").Value.ToString : End If
            If command1.Parameters("@pr_BalanceArea").Value.ToString <> "" Then : txtBalanceArea.Text = command1.Parameters("@pr_BalanceArea").Value.ToString : End If

            If command1.Parameters("@pr_RetentionPerc").Value.ToString <> "" Then : txtRetentionPerc.Text = command1.Parameters("@pr_RetentionPerc").Value.ToString : End If
            If command1.Parameters("@pr_RetentionValue").Value.ToString <> "" Then : txtRetentionValue.Text = command1.Parameters("@pr_RetentionValue").Value.ToString : End If
            If command1.Parameters("@pr_RetentionClaimDate").Value.ToString <> "" Then : txtRetentionReleaseDate.Text = Convert.ToDateTime(command1.Parameters("@pr_RetentionClaimDate").Value).ToString("dd/MM/yyyy") : End If

            If command1.Parameters("@pr_PONo").Value.ToString <> "" Then : txtPONo.Text = command1.Parameters("@pr_PONo").Value.ToString : End If
            If command1.Parameters("@pr_ServiceAddress").Value.ToString <> "" Then : txtServiceAddressCons.Text = command1.Parameters("@pr_ServiceAddress").Value.ToString : End If

            If command1.Parameters("@pr_BillAddress1").Value.ToString <> "" Then : txtBillingAddress.Text = command1.Parameters("@pr_BillAddress1").Value.ToString : End If


            'If txtStatus.Text = "T" Then
            If txtStatus.Text = "T" Or txtStatus.Text = "C" Or txtStatus.Text = "E" Or txtStatus.Text = "X" Or txtStatus.Text = "R" Then
                If command1.Parameters("@pr_TerminationCode").Value.ToString <> "" Then : ddlTerminationCode.Text = command1.Parameters("@pr_TerminationCode").Value.ToString + " - " + command1.Parameters("@pr_TerminationDescription").Value.ToString : End If
            End If

            'txtTerminationDescription.Text = command1.Parameters("@pr_TerminationDescription").Value.ToString

            txtTerminationCode.Text = command1.Parameters("@pr_TerminationCode").Value.ToString
            txtTerminationDescription.Text = command1.Parameters("@pr_CommentsStatus").Value.ToString
            If String.IsNullOrEmpty(txtAccountId.Text) = False Then

                ddlProjectCode.Items.Clear()
                ddlProjectCode.Items.Add("--SELECT--")

                Dim query1 As String
                query1 = "SELECT CONCAT(ProjectNo, ' - ', ProjectName) AS ProjectCode FROM tblProject where Status ='O' and AccountID = '" & txtAccountId.Text & "' and ProjectName is not null ORDER BY ProjectNo  "
                PopulateDropDownList(query1, "ProjectCode", "ProjectCode", ddlProjectCode)



                If command1.Parameters("@pr_ProjectName").Value.ToString.Trim = "&nbsp;" Or String.IsNullOrEmpty(command1.Parameters("@pr_ProjectName").Value.ToString) = True Then
                    ddlProjectCode.SelectedIndex = 0
                Else
                    'ddlProjectCode.Items.Add(command1.Parameters("@pr_ProjectCode").Value.ToString.Trim & " - " & command1.Parameters("@pr_ProjectName").Value.ToString.Trim)
                    ddlProjectCode.Text = command1.Parameters("@pr_ProjectCode").Value.ToString.Trim & " - " & command1.Parameters("@pr_ProjectName").Value.ToString.Trim.ToUpper
                End If
            End If


            If command1.Parameters("@pr_BaitStationTotal").Value.ToString <> "" Then : txtBaitStationTotal.Text = command1.Parameters("@pr_BaitStationTotal").Value.ToString : End If
            If command1.Parameters("@pr_BaitStationInstalled").Value.ToString <> "" Then : txtBaitStationInstalled.Text = command1.Parameters("@pr_BaitStationInstalled").Value.ToString : End If
            If command1.Parameters("@pr_BaitStationBalance").Value.ToString <> "" Then : txtBaitStationBalance.Text = command1.Parameters("@pr_BaitStationBalance").Value.ToString : End If

            If Convert.ToDecimal(txtRetentionPerc.Text) = 0.0 Then
                'chkGenerateCreditNote.Visible = True
                chkGenerateCreditNote.Checked = False
            End If

            If command1.Parameters("@pr_CommentsStatus").Value.ToString <> "" Then : txtCommentChSt.Text = command1.Parameters("@pr_CommentsStatus").Value.ToString : End If

            If command1.Parameters("@pr_LastBillDate").Value.ToString <> "" Then : txtLastBillDate.Text = Convert.ToDateTime(command1.Parameters("@pr_LastBillDate").Value).ToString("dd/MM/yyyy") : End If

            If String.IsNullOrEmpty(command1.Parameters("@pr_Location").Value.ToString) = True Then
                txtLocation.SelectedIndex = 0
            Else
                txtLocation.Text = command1.Parameters("@pr_Location").Value.ToString
            End If

            If command1.Parameters("@pr_AutoRenew").Value.ToString = "Y" Then
                chkAutoRenew.Checked = True
            Else
                chkAutoRenew.Checked = False
            End If

            If command1.Parameters("@pr_EndofLastSchedule").Value.ToString <> "" Then : txtEndofLastSchedule.Text = Convert.ToDateTime(command1.Parameters("@pr_EndofLastSchedule").Value).ToString("dd/MM/yyyy") : End If


            If command1.Parameters("@pr_OnHoldDate").Value.ToString <> "" Then : txtOnHoldDate.Text = Convert.ToDateTime(command1.Parameters("@pr_OnHoldDate").Value).ToString("dd/MM/yyyy") : End If
            If command1.Parameters("@pr_OnHoldCode").Value.ToString.Trim <> "" Then : txtOnHoldCode.Text = command1.Parameters("@pr_OnHoldCode").Value.ToString.Trim : End If
            If command1.Parameters("@pr_OnHoldDescription").Value.ToString <> "" Then : txtonholddescription.Text = command1.Parameters("@pr_OnHoldDescription").Value.ToString : End If
            If command1.Parameters("@pr_OnHoldComments").Value.ToString <> "" Then : txtOnHoldComments.Text = command1.Parameters("@pr_OnHoldComments").Value.ToString : End If


            If command1.Parameters("@pr_FixedContinuous").Value.ToString <> "" Then
                If command1.Parameters("@pr_FixedContinuous").Value.ToString = "F" Then
                    rbtFixedContinuous.SelectedIndex = 0
                ElseIf command1.Parameters("@pr_FixedContinuous").Value.ToString = "C" Then
                    rbtFixedContinuous.SelectedIndex = 1
                End If
            End If


            txtBillingRemarksEdit.Text = txtRemarks.Text

            'InsertIntoTblWebEventLog("PopulateRecord", "6", "1", "1")
            'txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).Value.ToString("dd/MM/yyyy") : End If
            'Command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
            'Command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
            'If txtRetentionReleaseDate.Text.Trim = "" Then
            '    Command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
            'Else
            '    Command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).Value.ToString("yyyy-MM-dd"))
            'End If

            tb1.ActiveTabIndex = 0

            ''''''''''''''''''''''''''
            btnClient0.Visible = True
            btnClient1.Visible = True
            btnClient2.Visible = True
            btnClient3.Visible = True
            'btnClient4.Visible = True
            btnClient5.Visible = True
            btnClient6.Visible = True
            btnClient7.Visible = True
            btnClient8.Visible = True
            btnClient9.Visible = True

            btnExtendContractEndDate.Visible = True

            'Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text
            'command1.CommandText = sql
            ''command1.CommandText = "SELECT * FROM tblcontract where rcno=" & Convert.ToInt64(txtRcno.Text)
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then

            '    If dt.Rows(0)("AccountID").ToString <> "" Then : txtAccountId.Text = dt.Rows(0)("AccountID").ToString : End If

            '    txtOriginalAccountId.Text = txtAccountId.Text
            '    lblAccountID.Text = txtAccountId.Text

            '    If dt.Rows(0)("AgreementType").ToString = "" Then


            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NEW")
            '        ddlAgreementType.Items.Add("ADDITION")
            '        'ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '        ddlAgreementType.SelectedIndex = 0
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "NEW" Or dt.Rows(0)("AgreementType").ToString = "ADDITION" Then
            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NEW")
            '        ddlAgreementType.Items.Add("ADDITION")
            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()

            '    ElseIf dt.Rows(0)("AgreementType").ToString = "RENEWAL" Then
            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("RENEWAL")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '        'ddlAgreementType.Attributes.Add("disabled", "true")
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "NO PRICE CHANGE" Or dt.Rows(0)("AgreementType").ToString = "PRICE INCREASE" Or dt.Rows(0)("AgreementType").ToString = "PRICE DECREASE" Then

            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("NO PRICE CHANGE")
            '        ddlAgreementType.Items.Add("PRICE INCREASE")
            '        ddlAgreementType.Items.Add("PRICE DECREASE")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '    ElseIf dt.Rows(0)("AgreementType").ToString = "WARRANTY" Then

            '        ddlAgreementType.Items.Clear()
            '        ddlAgreementType.Items.Add("--SELECT--")
            '        ddlAgreementType.Items.Add("WARRANTY")

            '        ddlAgreementType.Text = dt.Rows(0)("AgreementType").ToString.Trim()
            '    End If


            '    If dt.Rows(0)("Status").ToString <> "" Then : txtStatus.Text = dt.Rows(0)("Status").ToString.Trim() : End If
            '    If dt.Rows(0)("RenewalSt").ToString <> "" Then : txtRs.Text = dt.Rows(0)("RenewalSt").ToString.ToUpper.Trim() : End If
            '    If dt.Rows(0)("NotedSt").ToString <> "" Then : txtNS.Text = dt.Rows(0)("NotedSt").ToString : End If
            '    If dt.Rows(0)("GSt").ToString <> "" Then : txtGS.Text = dt.Rows(0)("GSt").ToString : End If
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : txtContractNo.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    txtContractNoSelected.Text = txtContractNo.Text
            '    lblContractNo.Text = txtContractNo.Text
            '    If dt.Rows(0)("ContractDate").ToString <> "" Then : txtContractDate.Text = Convert.ToDateTime(dt.Rows(0)("ContractDate")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("CustName").ToString <> "" Then : txtCustName.Text = dt.Rows(0)("CustName").ToString : End If
            '    lblName.Text = txtCustName.Text


            '    If dt.Rows(0)("InChargeId").ToString <> "" Then : txtTeamIncharge.Text = dt.Rows(0)("InChargeId").ToString : End If
            '    If dt.Rows(0)("AgreeValue").ToString <> "" Then : txtAgreeVal.Text = Convert.ToDecimal(dt.Rows(0)("AgreeValue")).ToString("f2") : End If

            '    txtAgreeValueEdit.Text = txtAgreeVal.Text

            '    If dt.Rows(0)("ContractValue").ToString <> "" Then : txtTotContVal.Text = Convert.ToDecimal(dt.Rows(0)("ContractValue")).ToString("f2") : End If
            '    If dt.Rows(0)("StartDate").ToString <> "" Then : txtContractStart.Text = Convert.ToDateTime(dt.Rows(0)("StartDate")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("EndDate").ToString <> "" Then : txtContractEnd.Text = Convert.ToDateTime(dt.Rows(0)("EndDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("ActualServiceStartDate").ToString <> "" Then : txtActualServiceStart.Text = Convert.ToDateTime(dt.Rows(0)("ActualServiceStartDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("ActualEnd").ToString <> "" Then : txtActualEnd.Text = Convert.ToDateTime(dt.Rows(0)("ActualEnd")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("Scheduler").ToString <> "" Then

            '        gScheduler = dt.Rows(0)("Scheduler").ToString.ToUpper()

            '        If ddlScheduler.Items.FindByValue(gScheduler) Is Nothing Then
            '            ddlScheduler.Items.Add(gScheduler)
            '            ddlScheduler.Text = gScheduler
            '        Else
            '            ddlScheduler.Text = dt.Rows(0)("Scheduler").ToString.Trim().ToUpper()
            '        End If
            '    End If


            '    If dt.Rows(0)("Scheduler").ToString <> "" Then
            '        gScheduler = dt.Rows(0)("Scheduler").ToString.ToUpper()

            '        If ddlSchedulerEdit.Items.FindByValue(gScheduler) Is Nothing Then
            '            ddlSchedulerEdit.Items.Add(gScheduler)
            '            ddlSchedulerEdit.Text = gScheduler
            '        Else
            '            ddlSchedulerEdit.Text = dt.Rows(0)("Scheduler").ToString.Trim().ToUpper()
            '        End If
            '    End If


            '    If dt.Rows(0)("SalesMan").ToString = "" Or dt.Rows(0)("SalesMan").ToString = "&nbsp;" Then
            '        ddlSalesman.SelectedIndex = 0
            '    Else
            '        'If dt.Rows(0)("SalesMan").ToString <> "" Then

            '        gSalesman = dt.Rows(0)("SalesMan").ToString.ToUpper()

            '        If ddlSalesman.Items.FindByValue(gSalesman) Is Nothing Then
            '            ddlSalesman.Items.Add(gSalesman)
            '            ddlSalesman.Text = gSalesman
            '        Else
            '            ddlSalesman.Text = dt.Rows(0)("SalesMan").ToString.Trim().ToUpper()
            '        End If
            '        'End If
            '    End If


            '    If dt.Rows(0)("SalesMan").ToString = "" Or dt.Rows(0)("SalesMan").ToString = "&nbsp;" Then
            '        ddlSalesmanEdit.SelectedIndex = 0
            '    Else
            '        gSalesman = dt.Rows(0)("SalesMan").ToString.ToUpper()

            '        If ddlSalesmanEdit.Items.FindByValue(gSalesman) Is Nothing Then
            '            ddlSalesmanEdit.Items.Add(gSalesman)
            '            ddlSalesmanEdit.Text = gSalesman
            '        Else
            '            ddlSalesmanEdit.Text = dt.Rows(0)("SalesMan").ToString.Trim().ToUpper()
            '        End If
            '        'End If
            '    End If


            '    'If dt.Rows(0)("SalesMan").ToString <> "" Then : ddlSalesman.Text = dt.Rows(0)("SalesMan").ToString.ToUpper.Trim().ToUpper() : End If
            '    If dt.Rows(0)("ProspectId").ToString <> "" Then : txtProspectId.Text = dt.Rows(0)("ProspectId").ToString : End If
            '    'If dt.Rows(0)("StaffId").ToString <> "" Then : txtStaffId.Text = dt.Rows(0)("StaffId").ToString : End If


            '    If dt.Rows(0)("ContactType").ToString <> "" Then
            '        If dt.Rows(0)("ContactType").ToString = "CORPORATE" Or dt.Rows(0)("ContactType").ToString = "COMPANY" Then
            '            ddlContactType.Text = "COMPANY"
            '        End If
            '        If dt.Rows(0)("ContactType").ToString = "RESIDENTIAL" Or dt.Rows(0)("ContactType").ToString = "PERSON" Then
            '            ddlContactType.Text = "PERSON"
            '        End If

            '        'If dt.Rows(0)("ContactType").ToString = "CORPORATE" Or dt.Rows(0)("ContactType").ToString = "COMPANY" Then
            '        '    ddlContactType.Text = "CORPORATE"
            '        'End If
            '        'If dt.Rows(0)("ContactType").ToString = "RESIDENTIAL" Or dt.Rows(0)("ContactType").ToString = "PERSON" Then
            '        '    ddlContactType.Text = "RESIDENTIAL"
            '        'End If
            '    End If
            '    If dt.Rows(0)("CustCode").ToString <> "" Then : txtClient.Text = dt.Rows(0)("CustCode").ToString : End If
            '    If dt.Rows(0)("CustAddr").ToString <> "" Then : txtOfficeAddress.Text = dt.Rows(0)("CustAddr").ToString : End If
            '    'If dt.Rows(0)("Contact").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("Contact").ToString : End If
            '    'If dt.Rows(0)("Telephone").ToString <> "" Then : txtTelephone.Text = dt.Rows(0)("Telephone").ToString : End If
            '    'If dt.Rows(0)("Fax").ToString <> "" Then : txtFax.Text = dt.Rows(0)("Fax").ToString : End If
            '    If dt.Rows(0)("Duration").ToString <> "" Then : txtDuration.Text = dt.Rows(0)("Duration").ToString : End If

            '    If dt.Rows(0)("DurationMs").ToString <> "" Then
            '        If dt.Rows(0)("DurationMs").ToString = "DAYS" Then
            '            rbtLstDuration.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "WEEKS" Then
            '            rbtLstDuration.SelectedIndex = 1
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "MONTHS" Then
            '            rbtLstDuration.SelectedIndex = 2
            '        ElseIf dt.Rows(0)("DurationMs").ToString = "YEARS" Then
            '            rbtLstDuration.SelectedIndex = 3
            '        End If
            '    End If


            '    If dt.Rows(0)("ServiceNo").ToString <> "" Then : txtServiceNo.Text = dt.Rows(0)("ServiceNo").ToString : End If
            '    If dt.Rows(0)("ServiceBal").ToString <> "" Then : txtServiceBal.Text = dt.Rows(0)("ServiceBal").ToString : End If
            '    If dt.Rows(0)("ServiceAmt").ToString <> "" Then : txtServiceAmt.Text = dt.Rows(0)("ServiceAmt").ToString : End If
            '    If dt.Rows(0)("HourNo").ToString <> "" Then : txtHourNo.Text = dt.Rows(0)("HourNo").ToString : End If
            '    If dt.Rows(0)("HourBal").ToString <> "" Then : txtHourBal.Text = dt.Rows(0)("HourBal").ToString : End If
            '    If dt.Rows(0)("HourAmt").ToString <> "" Then : txtHourAmt.Text = dt.Rows(0)("HourAmt").ToString : End If
            '    If dt.Rows(0)("CallNo").ToString <> "" Then : txtCallNo.Text = dt.Rows(0)("CallNo").ToString : End If
            '    If dt.Rows(0)("CallBal").ToString <> "" Then : txtCallBal.Text = dt.Rows(0)("CallBal").ToString : End If
            '    If dt.Rows(0)("CallAmt").ToString <> "" Then : txtCallAmt.Text = dt.Rows(0)("CallAmt").ToString : End If
            '    If dt.Rows(0)("ResponseHours").ToString <> "" Then : txtResponse.Text = dt.Rows(0)("ResponseHours").ToString : End If
            '    If dt.Rows(0)("CancelCharges").ToString <> "" Then : txtCancelCharges.Text = dt.Rows(0)("CancelCharges").ToString : End If
            '    If dt.Rows(0)("CompensatePct").ToString <> "" Then : txtCompensatePct.Text = dt.Rows(0)("CompensatePct").ToString : End If
            '    If dt.Rows(0)("CompensateMax").ToString <> "" Then : txtCompensateMax.Text = dt.Rows(0)("CompensateMax").ToString : End If
            '    If dt.Rows(0)("Notes").ToString <> "" Then : txtContractNotes.Text = dt.Rows(0)("Notes").ToString : End If
            '    txtNotesEdit.Text = txtContractNotes.Text


            '    If dt.Rows(0)("Comments").ToString <> "" Then : txtServInst.Text = dt.Rows(0)("Comments").ToString : End If
            '    'If dt.Rows(0)("ActualStaff").ToString <> "" Then : txtActualStaff.Text = dt.Rows(0)("ActualStaff").ToString : End If
            '    If dt.Rows(0)("ServiceNoActual").ToString <> "" Then : txtServiceNoActual.Text = dt.Rows(0)("ServiceNoActual").ToString : End If
            '    If dt.Rows(0)("HourNoActual").ToString <> "" Then : txtHourNoActual.Text = dt.Rows(0)("HourNoActual").ToString : End If
            '    If dt.Rows(0)("CallNoActual").ToString <> "" Then : txtCallNoActual.Text = dt.Rows(0)("CallNoActual").ToString : End If
            '    If dt.Rows(0)("MinDuration").ToString <> "" Then : txtMinDuration.Text = dt.Rows(0)("MinDuration").ToString : End If
            '    If dt.Rows(0)("OContractNo").ToString <> "" Then : txtOContract.Text = dt.Rows(0)("OContractNo").ToString : End If
            '    If dt.Rows(0)("RenewalContractNo").ToString <> "" Then : txtRenewed.Text = dt.Rows(0)("RenewalContractNo").ToString : End If

            '    If dt.Rows(0)("RenewalDate").ToString <> "" Then : txtRenewalDate.Text = Convert.ToDateTime(dt.Rows(0)("RenewalDate")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("UnitNo").ToString <> "" Then : txtUnitNo.Text = dt.Rows(0)("UnitNo").ToString : End If
            '    If dt.Rows(0)("UnitBal").ToString <> "" Then : txtUnitBal.Text = dt.Rows(0)("UnitBal").ToString : End If
            '    If dt.Rows(0)("UnitAmt").ToString <> "" Then : txtUnitAmt.Text = dt.Rows(0)("UnitAmt").ToString : End If
            '    If dt.Rows(0)("UnitNoActual").ToString <> "" Then : txtUnitNoActual.Text = dt.Rows(0)("UnitNoActual").ToString : End If
            '    'If dt.Rows(0)("NotedDate").ToString <> "" Then : txtNotedDate.Text = dt.Rows(0)("NotedDate").ToString : End If

            '    If dt.Rows(0)("settle").ToString <> "" Then
            '        If dt.Rows(0)("settle").ToString = "UC" Then
            '            rbtnLSettle.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("settle").ToString = "OC" Then
            '            rbtnLSettle.SelectedIndex = 1
            '        ElseIf dt.Rows(0)("settle").ToString = "CB" Then
            '            rbtnLSettle.SelectedIndex = 2
            '        End If
            '    End If
            '    'If dt.Rows(0)("ActualServHrs").ToString <> "" Then : txtActualServHrs.Text = dt.Rows(0)("ActualServHrs").ToString : End If
            '    If dt.Rows(0)("YourReference").ToString <> "" Then : txtYourRef.Text = dt.Rows(0)("YourReference").ToString : End If
            '    If dt.Rows(0)("ContractGroup").ToString.Trim <> "" Then : ddlContractGrp.Text = dt.Rows(0)("ContractGroup").ToString.ToUpper.Trim : End If
            '    'If dt.Rows(0)("ServDayMethod").ToString <> "" Then : txtServDayMethod.Text = dt.Rows(0)("ServDayMethod").ToString : End If
            '    'If dt.Rows(0)("ServDay").ToString <> "" Then : txtServDay.Text = dt.Rows(0)("ServDay").ToString : End If
            '    If dt.Rows(0)("ServiceStart").ToString <> "" Then : txtServStart.Text = Convert.ToDateTime(dt.Rows(0)("ServiceStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("ServiceEnd").ToString <> "" Then : txtServEnd.Text = Convert.ToDateTime(dt.Rows(0)("ServiceEnd")).ToString("dd/MM/yyyy") : End If
            '    'If dt.Rows(0)("ServiceFrequence").ToString <> "" Then : txtServiceFrequence.Text = dt.Rows(0)("ServiceFrequence").ToString : End If
            '    If dt.Rows(0)("TimeIn").ToString <> "" Then : txtServTimeIn.Text = dt.Rows(0)("TimeIn").ToString : End If
            '    If dt.Rows(0)("TimeOut").ToString <> "" Then : txtServTimeOut.Text = dt.Rows(0)("TimeOut").ToString : End If
            '    'Convert.ToDateTime(Server.HtmlDecode(GridView1.SelectedRow.Cells(6).Text).ToString).ToString("dd/MM/yyyy")
            '    If dt.Rows(0)("WarrantyStart").ToString <> "" Then : txtWarrStart.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("WarrantyEnd").ToString <> "" Then : txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("ContractValue").ToString <> "" Then : txtConDetVal.Text = Convert.ToDecimal(dt.Rows(0)("ContractValue")).ToString("f2") : End If
            '    If dt.Rows(0)("PerServiceValue").ToString <> "" Then : txtPerServVal.Text = Convert.ToDecimal(dt.Rows(0)("PerServiceValue")).ToString("f2") : End If
            '    If dt.Rows(0)("Disc_Percent").ToString <> "" Then : txtDisPercent.Text = Convert.ToDecimal(dt.Rows(0)("Disc_Percent")).ToString("f2") : End If
            '    If dt.Rows(0)("DiscAmt").ToString <> "" Then : txtDisAmt.Text = Convert.ToDecimal(dt.Rows(0)("DiscAmt")).ToString("f2") : End If
            '    If dt.Rows(0)("BillingFrequency").ToString.Trim <> "" Then : ddlBillingFreq.Text = dt.Rows(0)("BillingFrequency").ToString.ToUpper().Trim : End If
            '    If dt.Rows(0)("BillingFrequency").ToString.Trim <> "" Then : ddlBillingFreqEdit.Text = dt.Rows(0)("BillingFrequency").ToString.ToUpper().Trim : End If


            '    'If dt.Rows(0)("DayService1").ToString <> "" Then : txtDayService1.Text = dt.Rows(0)("DayService1").ToString : End If
            '    'If dt.Rows(0)("DayService2").ToString <> "" Then : txtDayService2.Text = dt.Rows(0)("DayService2").ToString : End If
            '    'If dt.Rows(0)("DayService3").ToString <> "" Then : txtDayService3.Text = dt.Rows(0)("DayService3").ToString : End If
            '    'If dt.Rows(0)("DayService4").ToString <> "" Then : txtDayService4.Text = dt.Rows(0)("DayService4").ToString : End If
            '    If dt.Rows(0)("Support").ToString <> "" Then : txtServiceBy.Text = dt.Rows(0)("Support").ToString : End If
            '    If dt.Rows(0)("Supervisor").ToString <> "" Then : txtSupervisor.Text = dt.Rows(0)("Supervisor").ToString : End If



            '    If dt.Rows(0)("TeamID").ToString <> "" Then : txtTeam.Text = dt.Rows(0)("TeamID").ToString : End If
            '    If dt.Rows(0)("Postal").ToString <> "" Then : txtPostal.Text = dt.Rows(0)("Postal").ToString : End If
            '    If dt.Rows(0)("LocateGrp").ToString <> "" Then : ddlLocateGrp.Text = dt.Rows(0)("LocateGrp").ToString.ToUpper().Trim : End If
            '    If dt.Rows(0)("ContactPersonMobile").ToString <> "" Then : txtConPerMobile.Text = dt.Rows(0)("ContactPersonMobile").ToString : End If
            '    If dt.Rows(0)("OurReference").ToString <> "" Then : txtOurRef.Text = dt.Rows(0)("OurReference").ToString : End If
            '    'If dt.Rows(0)("ServiceDescription").ToString <> "" Then : txtServiceDescription.Text = dt.Rows(0)("ServiceDescription").ToString : End If
            '    If dt.Rows(0)("PrintingRemarks").ToString <> "" Then : txtNotesTemplate.Text = dt.Rows(0)("PrintingRemarks").ToString : End If
            '    'If dt.Rows(0)("Rev").ToString <> "" Then : txtRev.Text = dt.Rows(0)("Rev").ToString : End If
            '    If dt.Rows(0)("MainContractNo").ToString <> "" Then : txtMainContractNo.Text = dt.Rows(0)("MainContractNo").ToString : End If
            '    If dt.Rows(0)("AmtCompleted").ToString <> "" Then : txtAmtCompleted.Text = dt.Rows(0)("AmtCompleted").ToString : End If
            '    If dt.Rows(0)("AmtCompleted").ToString <> "" Then : txtServiceAmtActual.Text = dt.Rows(0)("AmtCompleted").ToString : End If

            '    If dt.Rows(0)("AmtBalance").ToString <> "" Then : txtAmtBalance.Text = dt.Rows(0)("AmtBalance").ToString : End If
            '    If dt.Rows(0)("AmtBalance").ToString <> "" Then : txtServiceAmtBal.Text = dt.Rows(0)("AmtBalance").ToString : End If

            '    If dt.Rows(0)("ValuePerMonth").ToString <> "" Then : txtValPerMnth.Text = dt.Rows(0)("ValuePerMonth").ToString : End If
            '    If dt.Rows(0)("BillingAmount").ToString <> "" Then : txtBillingAmount.Text = dt.Rows(0)("BillingAmount").ToString : End If

            '    If dt.Rows(0)("AllocatedSvcTime").ToString <> "" Then : txtAllocTime.Text = dt.Rows(0)("AllocatedSvcTime").ToString : End If
            '    If dt.Rows(0)("Remarks").ToString <> "" Then : txtRemarks.Text = dt.Rows(0)("Remarks").ToString : End If
            '    If dt.Rows(0)("QuotePrice").ToString <> "" Then : txtQuotePrice.Text = dt.Rows(0)("QuotePrice").ToString : End If
            '    If dt.Rows(0)("QuoteUnitMS").ToString <> "" Then : txtQuoteUnit.Text = dt.Rows(0)("QuoteUnitMS").ToString : End If
            '    If dt.Rows(0)("CompanyGroup").ToString <> "" Then : ddlCompanyGrp.Text = dt.Rows(0)("CompanyGroup").ToString.Trim : End If

            '    If dt.Rows(0)("CompanyGroup").ToString <> "" Then : ddlCompanyGroupEdit.Text = dt.Rows(0)("CompanyGroup").ToString.Trim : End If

            '    'If dt.Rows(0)("SalesGRP").ToString <> "" Then : txtSalesGRP.Text = dt.Rows(0)("SalesGRP").ToString : End If
            '    If dt.Rows(0)("GSTNos").ToString <> "" Then : txtGstNo.Text = dt.Rows(0)("GSTNos").ToString : End If

            '    If dt.Rows(0)("ScheduleType").ToString <> "" Then
            '        ddlScheduleType.Text = dt.Rows(0)("ScheduleType").ToString.Trim
            '    End If

            '    'SASI - 17/04/2017 - COMMISSION

            '    If dt.Rows(0)("SalesCommissionPerc").ToString <> "" Then : txtSalesCommPercent.Text = Convert.ToDecimal(dt.Rows(0)("SalesCommissionPerc")).ToString("f2") : End If
            '    If dt.Rows(0)("SalesCommissionAmt").ToString <> "" Then : txtSalesCommAmt.Text = Convert.ToDecimal(dt.Rows(0)("SalesCommissionAmt")).ToString("f2") : End If
            '    If dt.Rows(0)("TechCommissionPerc").ToString <> "" Then : txtTechCommPercent.Text = Convert.ToDecimal(dt.Rows(0)("TechCommissionPerc")).ToString("f2") : End If
            '    If dt.Rows(0)("TechCommissionAmt").ToString <> "" Then : txtTechCommAmt.Text = Convert.ToDecimal(dt.Rows(0)("TechCommissionAmt")).ToString("f2") : End If

            '    'SASI - END

            '    'SASI - Industry Segment 28/04/2017

            '    If dt.Rows(0)("ServiceTypeID").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("ServiceTypeID").ToString) = True Then
            '        ddlServiceTypeID.SelectedIndex = 0
            '    Else
            '        ddlServiceTypeID.Text = (dt.Rows(0)("ServiceTypeID").ToString.Trim & " - " & dt.Rows(0)("ServiceTypeDescription").ToString.Trim)
            '    End If

            '    'If dt.Rows(0)("ServiceTypeID").ToString <> "" Then : ddlServiceTypeID.Text = dt.Rows(0)("ServiceTypeID").ToString : End If
            '    'If dt.Rows(0)("ServiceTypeDescription").ToString <> "" Then : ddlServiceTypeID.SelectedValue = dt.Rows(0)("ServiceTypeDescription").ToString : End If
            '    If dt.Rows(0)("CategoryID").ToString <> "" Then : txtCategoryID.Text = dt.Rows(0)("CategoryID").ToString : End If
            '    If dt.Rows(0)("PortfolioYN").ToString <> "" Then : ddlPortfolioYN.SelectedValue = dt.Rows(0)("PortfolioYN").ToString.Trim : End If
            '    If dt.Rows(0)("PortfolioValue").ToString <> "" Then : txtPortfolioValue.Text = Convert.ToDecimal(dt.Rows(0)("PortfolioValue")).ToString("f2") : End If
            '    txtPortfolioValueEdit.Text = txtPortfolioValue.Text

            '    If dt.Rows(0)("MarketSegmentID").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("MarketSegmentID").ToString) = True Then
            '        ddlMarketSegmentID.Text = ""
            '    Else
            '        ddlMarketSegmentID.Text = Server.HtmlDecode(dt.Rows(0)("MarketSegmentID").ToString)
            '    End If
            '    'If dt.Rows(0)("MarketSegmentID").ToString <> "" Then : ddlMarketSegmentID.Text = dt.Rows(0)("MarketSegmentID").ToString : End If

            '    If dt.Rows(0)("Industry").ToString = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("Industry").ToString) = True Then
            '        ddlIndustry.Text = ""
            '    Else
            '        ddlIndustry.Text = Server.HtmlDecode(dt.Rows(0)("Industry").ToString)
            '    End If
            '    'If dt.Rows(0)("Industry").ToString <> "" Then : ddlIndustry.SelectedItem.Text = dt.Rows(0)("Industry").ToString : End If

            '    'SASI - End Industry Segment


            '    If dt.Rows(0)("Warranty").ToString = "Y" Then
            '        ChkWithWarranty.Checked = True
            '    Else
            '        ChkWithWarranty.Checked = False
            '    End If

            '    'If ChkWithWarranty.Checked = True Then
            '    '    Command.Parameters.AddWithValue("@Warranty", "Y")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@Warranty", "N")
            '    'End If

            '    If dt.Rows(0)("WarrantyDuration").ToString <> "" Then : txtWarrDurtion.Text = dt.Rows(0)("WarrantyDuration").ToString : End If
            '    If dt.Rows(0)("WarrantyBillingAmount").ToString <> "" Then : txtWarrantyBillingAmount.Text = dt.Rows(0)("WarrantyBillingAmount").ToString : End If


            '    If dt.Rows(0)("WarrantyBillingFrequency").ToString <> "" Then
            '        ddlWarrantyFrequency.Text = dt.Rows(0)("WarrantyBillingFrequency").ToString.ToUpper()
            '    Else
            '        ddlWarrantyFrequency.SelectedIndex = 0
            '    End If



            '    'If ChkRequireInspection.Checked = True Then
            '    '    Command.Parameters.AddWithValue("@RequireInspecton", "Y")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@RequireInspecton", "N")
            '    'End If

            '    If dt.Rows(0)("RequireInspecton").ToString = "Y" Then
            '        ChkRequireInspection.Checked = True
            '    Else
            '        ChkRequireInspection.Checked = False
            '    End If

            '    'If ddlInspectionFrequency.SelectedIndex = 0 Then
            '    '    Command.Parameters.AddWithValue("@InspectionFrequency", "")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
            '    'End If

            '    If dt.Rows(0)("InspectionFrequency").ToString <> "" Then : ddlInspectionFrequency.Text = dt.Rows(0)("InspectionFrequency").ToString.Trim : End If

            '    'If TxtInspectionStart.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

            '    'End If

            '    'If TxtInspectionEnd.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

            '    'End If

            '    If dt.Rows(0)("InspectionStart").ToString <> "" Then : TxtInspectionStart.Text = Convert.ToDateTime(dt.Rows(0)("InspectionStart")).ToString("dd/MM/yyyy") : End If
            '    If dt.Rows(0)("InspectionEnd").ToString <> "" Then : TxtInspectionEnd.Text = Convert.ToDateTime(dt.Rows(0)("InspectionEnd")).ToString("dd/MM/yyyy") : End If


            '    If dt.Rows(0)("ComputationMethod").ToString <> "" Then
            '        If dt.Rows(0)("ComputationMethod").ToString = "Monthly" Then
            '            rbtComputationMethod.SelectedIndex = 0
            '        ElseIf dt.Rows(0)("ComputationMethod").ToString = "Fixed" Then
            '            rbtComputationMethod.SelectedIndex = 1

            '        End If
            '    End If

            '    'If rbtComputationMethod.SelectedIndex = 0 Then
            '    '    Command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
            '    'Else
            '    '    Command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
            '    'End If


            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID.Text = dt.Rows(0)("AccountId").ToString : End If
            '    txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblName.Text = dt.Rows(0)("CustName").ToString : End If
            '    'If dt.Rows(0)("OfficeAddress").ToString <> "" Then : txtOfficeAddress.Text = dt.Rows(0)("OfficeAddress").ToString : End If

            '    'SASI - 17/04/2017 | Commission Tab

            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID2.Text = dt.Rows(0)("AccountId").ToString : End If
            '    'txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo2.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblAccountName.Text = dt.Rows(0)("CustName").ToString : End If


            '    'SASI - 17/04/2017 End

            '    If dt.Rows(0)("AccountId").ToString <> "" Then : lblAccountID1.Text = dt.Rows(0)("AccountId").ToString : End If
            '    'txtAccountIdSelection.Text = lblAccountID.Text
            '    If dt.Rows(0)("ContractNo").ToString <> "" Then : lblContractNo1.Text = dt.Rows(0)("ContractNo").ToString : End If
            '    If dt.Rows(0)("CustName").ToString <> "" Then : lblName1.Text = dt.Rows(0)("CustName").ToString : End If


            '    If dt.Rows(0)("TotalArea").ToString <> "" Then : txtTotalArea.Text = dt.Rows(0)("TotalArea").ToString : End If
            '    If dt.Rows(0)("CompletedArea").ToString <> "" Then : txtCompletedArea.Text = dt.Rows(0)("CompletedArea").ToString : End If
            '    If dt.Rows(0)("BalanceArea").ToString <> "" Then : txtBalanceArea.Text = dt.Rows(0)("BalanceArea").ToString : End If

            '    If dt.Rows(0)("RetentionPerc").ToString <> "" Then : txtRetentionPerc.Text = dt.Rows(0)("RetentionPerc").ToString : End If
            '    If dt.Rows(0)("RetentionValue").ToString <> "" Then : txtRetentionValue.Text = dt.Rows(0)("RetentionValue").ToString : End If
            '    If dt.Rows(0)("RetentionClaimDate").ToString <> "" Then : txtRetentionReleaseDate.Text = Convert.ToDateTime(dt.Rows(0)("RetentionClaimDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("PONo").ToString <> "" Then : txtPONo.Text = dt.Rows(0)("PONo").ToString : End If
            '    If dt.Rows(0)("ServiceAddress").ToString <> "" Then : txtServiceAddressCons.Text = dt.Rows(0)("ServiceAddress").ToString : End If

            '    If dt.Rows(0)("BillAddress1").ToString <> "" Then : txtBillingAddress.Text = dt.Rows(0)("BillAddress1").ToString : End If


            '    'If txtStatus.Text = "T" Then
            '    If txtStatus.Text = "T" Or txtStatus.Text = "C" Or txtStatus.Text = "E" Or txtStatus.Text = "X" Or txtStatus.Text = "R" Then
            '        If dt.Rows(0)("TerminationCode").ToString <> "" Then : ddlTerminationCode.Text = dt.Rows(0)("TerminationCode").ToString + " - " + dt.Rows(0)("TerminationDescription").ToString : End If
            '    End If

            '    'txtTerminationDescription.Text = dt.Rows(0)("TerminationDescription").ToString

            '    txtTerminationCode.Text = dt.Rows(0)("TerminationCode").ToString
            '    txtTerminationDescription.Text = dt.Rows(0)("CommentsStatus").ToString
            '    If String.IsNullOrEmpty(txtAccountId.Text) = False Then

            '        ddlProjectCode.Items.Clear()
            '        ddlProjectCode.Items.Add("--SELECT--")

            '        Dim query1 As String
            '        query1 = "SELECT CONCAT(ProjectNo, ' - ', ProjectName) AS ProjectCode FROM tblProject where Status ='O' and AccountID = '" & txtAccountId.Text & "' and ProjectName is not null ORDER BY ProjectNo  "
            '        PopulateDropDownList(query1, "ProjectCode", "ProjectCode", ddlProjectCode)



            '        If dt.Rows(0)("ProjectName").ToString.Trim = "&nbsp;" Or String.IsNullOrEmpty(dt.Rows(0)("ProjectName").ToString) = True Then
            '            ddlProjectCode.SelectedIndex = 0
            '        Else
            '            'ddlProjectCode.Items.Add(dt.Rows(0)("ProjectCode").ToString.Trim & " - " & dt.Rows(0)("ProjectName").ToString.Trim)
            '            ddlProjectCode.Text = dt.Rows(0)("ProjectCode").ToString.Trim & " - " & dt.Rows(0)("ProjectName").ToString.Trim.ToUpper
            '        End If
            '    End If


            '    If dt.Rows(0)("BaitStationTotal").ToString <> "" Then : txtBaitStationTotal.Text = dt.Rows(0)("BaitStationTotal").ToString : End If
            '    If dt.Rows(0)("BaitStationInstalled").ToString <> "" Then : txtBaitStationInstalled.Text = dt.Rows(0)("BaitStationInstalled").ToString : End If
            '    If dt.Rows(0)("BaitStationBalance").ToString <> "" Then : txtBaitStationBalance.Text = dt.Rows(0)("BaitStationBalance").ToString : End If

            '    If Convert.ToDecimal(txtRetentionPerc.Text) = 0.0 Then
            '        'chkGenerateCreditNote.Visible = True
            '        chkGenerateCreditNote.Checked = False
            '    End If

            '    If dt.Rows(0)("CommentsStatus").ToString <> "" Then : txtCommentChSt.Text = dt.Rows(0)("CommentsStatus").ToString : End If

            '    If dt.Rows(0)("LastBillDate").ToString <> "" Then : txtLastBillDate.Text = Convert.ToDateTime(dt.Rows(0)("LastBillDate")).ToString("dd/MM/yyyy") : End If

            '    If dt.Rows(0)("Location").ToString <> "" Then : txtLocation.Text = dt.Rows(0)("Location").ToString : End If

            '    'txtWarrEnd.Text = Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).ToString("dd/MM/yyyy") : End If
            '    'Command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
            '    'Command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
            '    'If txtRetentionReleaseDate.Text.Trim = "" Then
            '    '    Command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
            '    'Else
            '    '    Command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
            '    'End If

            '    tb1.ActiveTabIndex = 0
            'End If

            'Start:Retrive Service Records

            Dim commandService As MySqlCommand = New MySqlCommand

            commandService.CommandType = CommandType.Text
            commandService.CommandText = "SELECT count(*) as totservicerec FROM tblservicerecord where contractno ='" & txtContractNo.Text & "' and ((status ='O') or (Status ='P') or (Status ='H'))"
            commandService.Connection = conn

            Dim drService As MySqlDataReader = commandService.ExecuteReader()
            Dim dtService As New DataTable
            dtService.Load(drService)

            txtTotServicerec.Text = "0"

          

            'End:Retrieve Service Records
            'conn.Close()

            If String.IsNullOrEmpty(txtServStart.Text.Trim) = False Then
                txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
            End If

            If String.IsNullOrEmpty(txtServEnd.Text.Trim) = False Then
                TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString().ToUpper
            End If

            If ((ddlContactType.Text.Trim = "CORPORATE") Or (ddlContactType.Text.Trim = "COMPANY")) Then
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
                txtContType3.Text = "RESIDENTIAL"
                'txtContType4.Text = "PERSON"
            Else
                txtContType1.Text = "RESIDENTIAL"
                txtContType2.Text = "PERSON"
                txtContType3.Text = "CORPORATE"
                'txtContType4.Text = "COMPANY"
            End If

            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
            ElseIf GridSelected = "SQLDSContractClientId" Then
                'SqlDataSource1.SelectCommand = txt.Text
                'SQLDSContractClientId.DataBind()
            ElseIf GridSelected = "SQLDSContractNo" Then
                'SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
            End If

            Session("contractdetailfrom") = ""
            Session("contractno") = ""
            'Session("serviceschedulefrom") = ""

            'ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")

            'If txtStatus.Text = "O" Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    'ddlStatusChSt.Items.Add("X - Cancelled")
            '    'ddlStatusChSt.Items.Add("V - Void")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If



            '''''''''Transaction

            Dim commandTrans As MySqlCommand = New MySqlCommand

            commandTrans.CommandType = CommandType.Text
            commandTrans.CommandText = "SELECT count(distinct(tblsalesdetail.InvoiceNumber)) as VoucherNumber FROM tblsales, tblsalesdetail where tblsales.InvoiceNumber = tblsalesdetail.InvoiceNumber and  tblsales.PostStatus = 'P'  and tblsalesdetail.CostCode= '" & txtContractNo.Text & "'"
            commandTrans.Connection = conn

            Dim drTrans As MySqlDataReader = commandTrans.ExecuteReader()
            Dim dtTrans As New DataTable
            dtTrans.Load(drTrans)

            If dtTrans.Rows.Count > 0 Then
                'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
                btnTransactions.Text = "TRANSACTIONS [" & Val(dtTrans.Rows(0)("VoucherNumber").ToString).ToString & "]"
                'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

                'btnServiceRecords.Enabled = True
                'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            End If

            '''''''''''''''''''
            '''''''''''''''''''''''

            'start: to be modified
            'Dim IsPosted As Integer
            'IsPosted = 0

            'Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
            'commandXIsServicePosted.CommandType = CommandType.Text

            'commandXIsServicePosted.CommandText = "select Rcno from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "' limit 1"
            'commandXIsServicePosted.Connection = conn

            'Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
            'Dim dtIsServicePosted As New DataTable
            'dtIsServicePosted.Load(drIsServicePosted)

            'If dtIsServicePosted.Rows.Count > 0 Then
            '    IsPosted = 1
            'End If


            'If txtStatus.Text = "O" And ddlRenewalStatus.Text = "O" And IsPosted = 0 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    ddlStatusChSt.Items.Add("X - Cancelled")
            '    ddlStatusChSt.Items.Add("V - Void")
            'ElseIf txtStatus.Text = "O" And ddlRenewalStatus.Text = "O" And IsPosted = 1 Then
            '    'ddlStatusChSt.Items.Add("C - Completed")
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    'ddlStatusChSt.Items.Add("E - Early Completed")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    'ddlStatusChSt.Items.Add("X - Cancelled")
            '    'ddlStatusChSt.Items.Add("V - Void")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If

            'end: to be modified

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            commandService.Dispose()
            'dt.Dispose()
            dtService.Dispose()
            'dr.Close()
            drService.Close()

            '''''''''''''''' 25.10.17

            '''''''''''''''''''''''''''''''''''''
            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False

            btnSvcEdit.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            btnSvcDelete.Enabled = False
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = True
            btnPrint.ForeColor = System.Drawing.Color.Black

            txtContractStart.ForeColor = Drawing.Color.Black
            txtServStart.ForeColor = Drawing.Color.Black

         

            If txtbtnAutoRenew.Text = "Y" Then
                btnAutoRenew.Visible = True
            End If

            '''''''''''''''''''''''''''''''''''''''

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black

            btnCopy.Enabled = True
            btnCopy.ForeColor = System.Drawing.Color.Black

          

            btnTerminate.Enabled = True
            btnTerminate.ForeColor = System.Drawing.Color.Black

            btnEarlyCompletion.Enabled = True
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Black

         
            btnCancelByCompany.Enabled = True
            btnCancelByCompany.ForeColor = System.Drawing.Color.Black

            'btnDelete.ForeColor = System.Drawing.Color.Black

            btnChangeStatus.Enabled = True
            btnChangeStatus.ForeColor = System.Drawing.Color.Black

            btnRevision.Enabled = True
            btnRevision.ForeColor = System.Drawing.Color.Black

            btnRecalculate.Enabled = True
            btnRecalculate.ForeColor = System.Drawing.Color.Black

         
            btnTransactions.Enabled = True
            btnTransactions.ForeColor = System.Drawing.Color.Black

            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False

            ''If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            AccessControl()
            'End If

            'ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")

            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.SelectedIndex = 0
            'End If


         


            If txtStatus.Text = "O" Then

                ''''''''''''
                Dim sqlstr As String
                sqlstr = ""

                sqlstr = "SELECT ShowExpiryNotification FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

                Dim commandIsShowExpiryNotification As MySqlCommand = New MySqlCommand

                Dim connIsShowExpiryNotification As MySqlConnection = New MySqlConnection()
                connIsShowExpiryNotification.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsShowExpiryNotification.Open()

                commandIsShowExpiryNotification.CommandType = CommandType.Text
                commandIsShowExpiryNotification.CommandText = sqlstr
                commandIsShowExpiryNotification.Connection = connIsShowExpiryNotification

                Dim dr As MySqlDataReader = commandIsShowExpiryNotification.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    ''''''''''
                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                            If dt.Rows(0)("ShowExpiryNotification").ToString() = True Then
                                lblAlert.Text = "This contract has EXPIRED, please Renew or Terminate this contract"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            End If

                            ddlStatusChSt.Items.Clear()
                            ddlStatusChSt.Items.Add("--SELECT--")

                            ddlStatusChSt.Items.Add("T - Terminated")


                            btnRevision.Enabled = False
                            btnRevision.ForeColor = System.Drawing.Color.Gray

                            btnEdit.Enabled = False
                            btnEdit.ForeColor = System.Drawing.Color.Gray

                        Else
                            ddlStatusChSt.Items.Clear()
                            ddlStatusChSt.Items.Add("--SELECT--")

                            ddlStatusChSt.Items.Add("H - On Hold")
                            ddlStatusChSt.Items.Add("T - Terminated")
                        End If
                    End If

                End If

                connIsShowExpiryNotification.Close()
                connIsShowExpiryNotification.Dispose()
                commandIsShowExpiryNotification.Dispose()
                dt.Dispose()
                dr.Close()


            End If


            If txtStatus.Text = "C" Or txtStatus.Text = "X" Then
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If


            If txtStatus.Text = "T" Then
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray



               

                ''''''''
                ''''''''

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If


          


            If txtStatus.Text = "E" Then
                'btnChangeStatus.Enabled = False
                'btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                ddlStatusChSt.Items.Clear()
                ddlStatusChSt.Items.Add("--SELECT--")

                ddlStatusChSt.Items.Add("T - Terminated")



            End If
            If txtStatus.Text = "R" Then
                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

            End If


            If txtStatus.Text = "H" Then

                btnRevision.Enabled = False
                btnRevision.ForeColor = System.Drawing.Color.Gray


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                ddlStatusChSt.Items.Clear()
                ddlStatusChSt.Items.Add("--SELECT--")

                ddlStatusChSt.Items.Add("O - Open")
                ddlStatusChSt.Items.Add("T - Terminated")
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 1 Then
                If Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray
                End If
              
            End If

            FindIsInActiveCustomer()

            FindIsContractValueAllowEdit()

            FindLastServiceDate()

            If String.IsNullOrEmpty(txtTerminationCode.Text) = False Then
                FindTerminationDescription()
            End If

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()
            lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"

            '''''''''''''''' 25.10 17

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION POPULATERECORD", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub





    Private Sub FindTerminationDescription()
        Dim sqlstr As String
        sqlstr = ""

        Try

            sqlstr = "SELECT Description FROM tblTerminationCode where Code = '" & txtTerminationCode.Text & "'"
           

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtTerminationDesc.Text = dt.Rows(0)("Description").ToString
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    Private Sub FindIsInActiveCustomer()
        Dim sqlstr As String
        sqlstr = ""

        Try
            If ddlContactType.Text = "CORPORTE" Or ddlContactType.Text = "COMPANY" Then
                sqlstr = "SELECT InActive FROM tblCompany where AccountId = '" & txtAccountId.Text & "'"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                sqlstr = "SELECT InActive FROM tblPerson where AccountId = '" & txtAccountId.Text & "'"
            End If

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Inactive").ToString = "1" Then
                    chkInactive.Checked = True
                    lblIsInActiveAccountId.Visible = True

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray

                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray

                    btnCopy.Enabled = False
                    btnCopy.ForeColor = System.Drawing.Color.Gray

                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray

                    btnChangeStatus.Enabled = False
                    btnChangeStatus.ForeColor = System.Drawing.Color.Gray



                    lblIsInActiveAccountId.Text = txtAccountId.Text & " - " & txtCustName.Text & " is an InActive Account"
                Else
                    chkInactive.Checked = False
                    lblIsInActiveAccountId.Visible = False
                End If

            Else
                lblIsInActiveAccountId.Visible = False
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    'Function

    Private Sub GenerateContractNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lContractNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String

            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtContractDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")

            'lContractNo = "SVCN" + lPrefix + "-"
            lContractNo = txtPrefixDocNoContract.Text.Trim + "SVCN" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "SVCN" + lYear
            'lPrefix = txtPrefixDocNoContract.Text.Trim + "SVCN" + lYear


            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                If lMonth = "01" Then
                    lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "02" Then
                    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "03" Then
                    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "04" Then
                    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "05" Then
                    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "06" Then
                    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "07" Then
                    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "08" Then
                    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "09" Then
                    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "10" Then
                    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "11" Then
                    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString

                    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "12" Then
                    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr)

                commandDocControlEdit.Dispose()
                dt2.Dispose()
            Else


                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If
                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & Left(lPrefix, Len(lPrefix) - 2) & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"
                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                         "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr)

                lSetWidth = 6
                lSuffixVal = 1
                commandDocControlInsert.Dispose()
                dt2.Dispose()
            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtContractNo.Text = lContractNo + lSuffix
            conn.Close()
            conn.Dispose()
            commandDocControl.Dispose()

            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION GenerateContractNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Public Sub MakeMeNull()
        Try
            If txtMode.Text <> "View" Then
                If String.IsNullOrEmpty(Session("serviceschedulefrom")) = True And String.IsNullOrEmpty(Session("servicefrom")) = True And String.IsNullOrEmpty(Session("contractfrom")) = True Then
                    Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimecontract();", True)
                End If

            End If

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""
            lblFileUploadCount.Text = "File Upload"
            If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True Then
                txtAccountId.Text = ""
                txtCustName.Text = ""
                ddlSalesman.SelectedIndex = 0
                ddlCompanyGrp.SelectedIndex = 0
                txtAddress.Text = ""
                txtOfficeAddress.Text = ""
                txtBillingAddress.Text = ""
                txtServiceAddressCons.Text = ""
                txtPostal.Text = ""

                ddlIndustry.Text = ""
                ddlMarketSegmentID.Text = ""

                ddlContractGrp.SelectedIndex = 0
                txtCategoryID.Text = ""
            End If

            txtContractNo.Text = ""
            txtContractNoSelected.Text = ""
            txtOurRef.Text = ""
            txtYourRef.Text = ""
            txtTelephone.Text = ""
            txtFax.Text = ""
            txtConPerMobile.Text = ""
            txtAgreeVal.Text = "0.00"
            txtDuration.Text = "1"
            rbtLstDuration.SelectedIndex = 3
            rbtComputationMethod.SelectedIndex = 0

            ddlAgreementType.SelectedIndex = 0

            'txtContractStart.Text = ""
            'txtServStart.Text = ""
            'txtContractEnd.Text = ""
            'txtServEnd.Text = ""

            ''txtWarrStart.Text = ""
            txtWarrEnd.Text = ""
            txtServStartDay.Text = ""
            TxtServEndDay.Text = ""
            'txtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""

            'txtWarrEnd.Text = ""
            txtValPerMnth.Text = "0.00"
            txtBillingAmount.Text = "0.00"
            txtContractNotes.Text = ""
            txtServInst.Text = ""
            txtStatus.Text = "O"
            txtLastBillDate.Text = ""

            txtRs.Text = "O"

            txtNS.Text = "O"
            txtProspectId.Text = ""
            txtGstNo.Text = ""
            txtAccCode.Text = ""

            txtGS.Text = "O"
            txtResponse.Text = ""
            txtCancelCharges.Text = ""
            txtMinDuration.Text = ""
            txtConDetVal.Text = "0.00"
            txtPerServVal.Text = "0.00"
            txtDisPercent.Text = "0.00"
            txtDisAmt.Text = "0.00"
            txtTotContVal.Text = "0.00"
            txtOContract.Text = ""
            txtRenewalDate.Text = ""
            txtRenewed.Text = ""
            txtQuotePrice.Text = "0.00"
            txtQuoteUnit.Text = ""
            txtRemarks.Text = ""
            txtPrintBody.Text = ""
            txtClient.Text = ""
            txtContactPerson.Text = ""
            'txtSalesMan.Text = ""
            'txtScheduler.Text = ""
            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""
            txtServiceNo.Text = "0"
            txtServiceNoActual.Text = "0"
            txtServiceBal.Text = "0"
            txtPrevContract.Text = ""
            txtServiceAmt.Text = "0.00"
            txtServiceAmtActual.Text = "0.00"
            txtServiceAmtBal.Text = "0.00"
            txtHourAmt.Text = "0.00"
            txtHourBal.Text = "0.00"
            txtHourNo.Text = "0"
            txtHourNoActual.Text = "0"
            txtUnitAmt.Text = "0.00"
            txtUnitBal.Text = "0.00"
            txtUnitNo.Text = "0.00"
            txtUnitNoActual.Text = "0.00"
            txtCallAmt.Text = "0.00"
            txtCallBal.Text = "0.00"
            txtCallNo.Text = "0"
            txtCallNoActual.Text = "0"
            txtCompensateMax.Text = "0.00"
            txtCompensatePct.Text = "0.00"
            txtAmtBalance.Text = "0.00"
            txtAmtCompleted.Text = "0.00"

            txtPONo.Text = ""
            txtMainContractNo.Text = ""

            txtActualServiceStart.Text = ""
            txtActualEnd.Text = ""
            lblIsInActiveAccountId.Text = ""

            lblIsInActiveAccountId.Visible = False
            'txtContractnoSearch.Text = ""
            'txtClientNameSearch.Text = ""
            'txtAccountIdSearch.Text = ""
            chkSearchAll.Checked = False
            'chkSearchOpen.Checked = False
            'chkSearchVoid.Checked = False
            'chkSearchOnHold.Checked = False
            'chkSearchCancelled.Checked = False
            'chkSearchCompleted.Checked = False
            'chkSearchPost.Checked = False
            'chkSearchEarlyComplete.Checked = False
            'chkSearchTerminated.Checked = False
            'chkSearchRevised.Checked = False

            txtModeRenew.Text = ""
            txtRcnoRenew.Text = 0

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                ddlContactType.Text = "COMPANY"
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
            End If

            txtTeamSelection.Text = ""

            ddlLocateGrp.SelectedIndex = 0
            ddlScheduleType.SelectedIndex = 0


            ddlBillingFreq.SelectedIndex = 0

            'ddlScheduler.SelectedIndex = 0


            ddlScheduler.Text = Session("StaffID")

            'SASI - Industry Segment 28/04/2017

            '   ddlIndustry.SelectedIndex = 0
            ddlServiceTypeID.SelectedIndex = 0

            '   ddlMarketSegmentID.SelectedIndex = 0
            ddlPortfolioYN.SelectedItem.Text = "YES"
            txtPortfolioValue.Text = "0.00"
            txtBaitStationTotal.Text = "0"

            'SASI - End Industry Segment

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnCancelByCompany.Enabled = False
            btnEarlyCompletion.Enabled = False
            btnTerminate.Enabled = False
            btnChangeStatus.Enabled = False
          
            btnTransactions.Text = "TRANSACTIONS"

            'txtSearch1Status.Text = "O,P,H,R"
            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""

            'Query = "Select * from tblStaff where SecGroupAuthority like  'SCHEDULER%' and Status = 'O'"
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlScheduler)
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchScheduler)

            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            ChkWithWarranty.Checked = False
            txtWarrDurtion.Text = ""
            TxtInspectionStart.Text = ""
            TxtInspectionEnd.Text = ""
            ChkRequireInspection.Checked = False
            ddlInspectionFrequency.SelectedIndex = 0
            txtOriginalAccountId.Text = ""

            txtTotalArea.Text = "0.00"
            txtCompletedArea.Text = "0.00"
            txtBalanceArea.Text = "0.00"

            ddlTerminationCode.SelectedIndex = 0

            txtRetentionPerc.Text = "0.00"
            txtRetentionValue.Text = "0.00"
            txtRetentionReleaseDate.Text = ""
            txtCommentChSt.Text = ""

            txtNotesTemplate.Text = ""
            txtLocation.SelectedIndex = 0

            txtTerminationCode.Text = ""
            txtTerminationDesc.Text = ""
            txtTerminationDescription.Text = ""

            txtWarrantyBillingAmount.Text = "0.00"
            chkGenerateCreditNote.Visible = False
            chkGenerateCreditNote.Checked = False

            rbtFixedContinuous.SelectedIndex = 0
            txtEndofLastSchedule.Text = ""
            txtTotServicerec.Text = "0"

            txtSignedAgreementReference.Text = "Signed Service Agreement"

            txtOnHoldCode.Text = ""
            txtOnHoldComments.Text = ""
            ddlOnHoldCodeChSt.SelectedIndex = 0
            txtOnHoldCommentsChSt.Text = ""
            txtOnHoldDate.Text = ""
            txtOnHoldDateChSt.Text = ""
            txtOnHoldDescription.Text = ""
            txtOnHoldDscriptionChSt.Text = ""

            txtLastServiceDate.Text = ""
            txtIsPopupChSt.Text = ""
            'ddlSalesman.Items.Clear()
            'Query = "Select * from tblStaff where Roles = 'SALES MAN'"
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesman)
            'PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)

            DisableControls()
            EnableSvcControls()




            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            'Dim Query As String

            'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            'Query = "Select descrip1 from tblTarget order by descrip1"

            'grvFreqDetails.Enabled = False
            'grvTargetDetails.Enabled = False
            'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)

            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)

            'Dim lblidlocation As ImageButton = CType(grvServiceLocation.Rows(0).FindControl("BtnLocation"), ImageButton)
            'lblidlocation.Visible = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeMeNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Public Sub MakeSvcNull()
        Try
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""


            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""

            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""

            txtValPerMnth.Text = "0.00"
            txtContractNotes.Text = ""
            txtServInst.Text = ""
            txtStatus.Text = "O"
            txtCustName.Text = ""
            txtRs.Text = "O"
            txtAddress.Text = ""
            txtOfficeAddress.Text = ""
            txtNS.Text = "O"
            txtProspectId.Text = ""

            txtAccCode.Text = ""
            txtPostal.Text = ""



            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""

            ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0
            txtServStartSvc.Text = ""
            txtServStartDaySvc.Text = ""
            txtServEndSvc.Text = ""
            txtServEndDaySvc.Text = ""
            lblContractNo.Text = ""
            lblAccountID.Text = ""
            lblName.Text = ""


            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False

            btnTransactions.Text = "TRANSACTIONS"

            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""


            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            'ChkWithWarranty.Checked = False
            'txtWarrDurtion.Text = ""
            'TxtInspectionStart.Text = ""
            'TxtInspectionEnd.Text = ""
            'ChkRequireInspection.Checked = False
            'ddlInspectionFrequency.SelectedIndex = 0



            'DisableControls()

            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            'Query = "Select descrip1 from tblTarget order by descrip1"

            'grvFreqDetails.Enabled = False
            'grvTargetDetails.Enabled = False
            'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
            'Query1 = "Select LocationID from tblcompanylocation order by LocationID"

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"

            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs where UnitType = 'AREA'"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeSvcNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Public Sub MakeSvcDetailNull()
        Try
            'Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimecontract();", True)
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""


            lblMessage.Text = ""
            lblAlert.Text = ""
            'txtMode.Text = ""
            txtSvcMode.Text = ""

            txtLocationId.Text = ""
            txtServiceId.Text = ""
            txtServiceName.Text = ""
            txtServiceAddress.Text = ""
            txtZone.Text = ""
            txtFrequency.Text = ""
            txtFrequencyDesc.Text = ""
            txtSalesman.Text = ""




            'txtServTimeIn.Text = ""
            'txtServTimeOut.Text = ""
            'txtAllocTime.Text = ""

            'txtValPerMnth.Text = "0.00"
            'txtContractNotes.Text = ""
            'txtServInst.Text = ""
            'txtStatus.Text = "O"
            'txtCustName.Text = ""
            'txtRs.Text = "O"
            'txtAddress.Text = ""

            'txtNS.Text = "O"
            'txtProspectId.Text = ""

            'txtAccCode.Text = ""
            'txtPostal.Text = ""



            'txtTeamIncharge.Text = ""
            'txtTeam.Text = ""
            'txtServiceBy.Text = ""


            'ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0


            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False

            btnTransactions.Text = "TRANSACTIONS"

            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""


            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            'ChkWithWarranty.Checked = False
            'txtWarrDurtion.Text = ""
            'TxtInspectionStart.Text = ""
            'TxtInspectionEnd.Text = ""
            'ChkRequireInspection.Checked = False
            'ddlInspectionFrequency.SelectedIndex = 0



            'DisableControls()

            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            Query = "Select descrip1 from tblTarget order by descrip1"

            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False
            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
            'Query1 = "Select LocationID from tblcompanylocation order by LocationID"

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(2).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs  order by UnitMsID"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)



            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION MakeSvcDetailNull", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Private Sub pFindContractEndDate()
        'If Me.txtDuration.ReadOnly = True Then Exit Sub
        'Try

        '    txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")
        '    txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
        '    txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")

        '    Dim d As Date

        '    If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
        '        txtServStartDay.Text = DateTime.Parse(d.ToShortDateString).DayOfWeek.ToString()
        '    End If

        '    Dim dateStart, dateEnd As Date
        '    dateStart = CDate(Me.txtContractStart.Text)

        '    If rbtLstDuration.SelectedIndex = 0 Then
        '        dateEnd = DateAdd(DateInterval.Day, Val(Me.txtDuration.Text), dateStart)
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '    ElseIf rbtLstDuration.SelectedIndex = 1 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Day, (Val(Me.txtDuration.Text) * 7), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    ElseIf rbtLstDuration.SelectedIndex = 2 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Month, Val(Me.txtDuration.Text), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    ElseIf rbtLstDuration.SelectedIndex = 3 Then
        '        dateEnd = DateAdd(DateInterval.Day, -1, DateAdd(DateInterval.Year, Val(Me.txtDuration.Text), dateStart))
        '        txtContractEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtServEnd.Text = dateEnd.ToString("dd/MM/yyyy")
        '        txtWarrEnd.Text = dateEnd.ToString("dd/MM/yyyy")

        '    End If



        '    If Date.TryParseExact(txtServEnd.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
        '        TxtServEndDay.Text = DateTime.Parse(d.ToShortDateString).DayOfWeek.ToString()
        '    End If



        '    'Dim NoofMonth As Integer
        '    'NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
        '    'txtValPerMnth.Text = NoofMonth.ToString()

        '    ''txtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
        '    Dim NoofMonth As Integer
        '    NoofMonth = 0.0
        '    NoofMonth = Int(DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text)))
        '    txtNoofMonth.Text = NoofMonth
        '    If NoofMonth = 0 Then
        '        txtValPerMnth.Text = Convert.ToDecimal(Convert.ToDecimal(txtAgreeVal.Text))
        '    Else
        '        txtValPerMnth.Text = Convert.ToDecimal(Convert.ToDecimal(txtAgreeVal.Text) / NoofMonth)
        '    End If


        'Catch ex As Exception
        '    MsgBox("Error" & ex.Message)
        'End Try
    End Sub
    Private Sub DisableControls()
        Try
            btnSave.Enabled = False
            btnSave.ForeColor = System.Drawing.Color.Gray
            btnCancel.Enabled = False
            btnCancel.ForeColor = System.Drawing.Color.Gray
            btnADD.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black
            btnClient.Visible = False
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black

            'btnClient0.Visible = False
            'btnClient1.Visible = False
            'btnClient2.Visible = False
            'btnClient3.Visible = False
            'btnClient4.Visible = False
            'btnClient5.Visible = False
            'btnClient6.Visible = False
            'btnClient7.Visible = False
            'btnClient8.Visible = False
            'btnClient9.Visible = False
            'btnAutoRenew.Visible = False

            btnRecalculate.Enabled = False

            ddlAgreementType.Enabled = False

            txtAccountId.Enabled = False
            txtContractNo.Enabled = False
            txtContractDate.Enabled = False
            txtOurRef.Enabled = False
            txtYourRef.Enabled = False
            txtPONo.Enabled = False
            txtTelephone.Enabled = False
            txtFax.Enabled = False
            txtConPerMobile.Enabled = False
            txtAgreeVal.Enabled = False
            txtDuration.Enabled = False
            txtContractStart.Enabled = False
            txtContractEnd.Enabled = False
            txtServStart.Enabled = False
            txtServStartDay.Enabled = False
            txtServEnd.Enabled = False
            TxtServEndDay.Enabled = False

            txtBaitStationTotal.Enabled = False
            ddlWarrantyFrequency.Enabled = False
            txtWarrantyBillingAmount.Enabled = False


            ChkWithWarranty.Enabled = False
            ChkRequireInspection.Enabled = False
            txtWarrDurtion.Enabled = False
            ddlInspectionFrequency.Enabled = False
            TxtInspectionStart.Enabled = False
            TxtInspectionEnd.Enabled = False

            txtWarrStart.Enabled = False
            txtWarrEnd.Enabled = False
            txtValPerMnth.Enabled = False
            txtContractNotes.Enabled = False

            txtStatus.Enabled = False
            txtCustName.Enabled = False
            txtRs.Enabled = False
            txtAddress.Enabled = False
            txtOfficeAddress.Enabled = False
            txtNS.Enabled = False
            txtProspectId.Enabled = False
            txtGstNo.Enabled = False
            txtAccCode.Enabled = False
            txtPostal.Enabled = False
            txtGS.Enabled = False
            txtResponse.Enabled = False
            txtCancelCharges.Enabled = False
            txtMinDuration.Enabled = False
            txtConDetVal.Enabled = False
            txtPerServVal.Enabled = False
            txtDisPercent.Enabled = False
            txtDisAmt.Enabled = False
            'txtTotContVal.Enabled = False
            'txtRenewed.Enabled = False
            'txtRenewalDate.Enabled = False
            'txtOContract.Enabled = False
            txtQuotePrice.Enabled = False
            txtQuoteUnit.Enabled = False
            txtRemarks.Enabled = False
            txtPrintBody.Enabled = False
            txtClient.Enabled = False
            txtContactPerson.Enabled = False
            ddlSalesman.Enabled = False
            ddlScheduler.Enabled = False

            rbtLstDuration.Enabled = False
            rbtComputationMethod.Enabled = False
            'ddlScheduleType.Enabled = False
            'txtServTimeIn.Enabled = False
            'txtServTimeOut.Enabled = False
            'txtAllocTime.Enabled = False
            'txtTeamIncharge.Enabled = False
            'txtTeam.Enabled = False
            'txtServiceBy.Enabled = False
            'txtServInst.Enabled = False

            'txtNoOfHrsServBal.Enabled = False
            'txtNoOfHrsServComp.Enabled = False
            'txtNoOfHrsTotServ.Enabled = False
            'txtNoOfHrsTotAmt.Enabled = False
            'txtNoOfPhServBal.Enabled = False
            'txtNoOfPhServComp.Enabled = False
            'txtNoOfPhTotAmt.Enabled = False
            'txtNoOfPhTotServ.Enabled = False
            'txtNoOfServBal.Enabled = False
            'txtNoOfServComp.Enabled = False
            'txtNoOfServTotAmt.Enabled = False
            'txtNoOfServTotServ.Enabled = False
            'txtNoOfUnitServBal.Enabled = False
            'txtNoOfUnitServComp.Enabled = False
            'txtNoOfUnitTotAmt.Enabled = False
            'txtNoOfUnitTotServ.Enabled = False
            'txtUnExpBal.Enabled = False
            'txtUnExpTotServ.Enabled = False


            txtBillingAmount.Enabled = False
            txtActualEnd.Enabled = False
            txtServiceAmt.Enabled = False
            'txtServiceNo.Enabled = False
            txtHourAmt.Enabled = False
            txtHourNo.Enabled = False
            txtUnitAmt.Enabled = False
            txtUnitNo.Enabled = False
            txtCallAmt.Enabled = False
            txtCallNo.Enabled = False
            txtAmtCompleted.Enabled = False


            ddlContactType.Enabled = False
            ddlLocateGrp.Enabled = False

            ddlContractGrp.Enabled = False
            ddlCompanyGrp.Enabled = False
            ddlBillingFreq.Enabled = False

            'SASI - Industry Segment 28/04/2017

            ddlIndustry.Enabled = False
            ddlServiceTypeID.Enabled = False
            txtCategoryID.Enabled = False
            ddlMarketSegmentID.Enabled = False
            ddlPortfolioYN.Enabled = False
            txtPortfolioValue.Enabled = False

            txtTerminationCode.Enabled = False
            txtTerminationDescription.Enabled = False
            'SASI - End Industry Segment

            txtTotalArea.Enabled = False
            txtRetentionPerc.Enabled = False
            txtRetentionValue.Enabled = False
            txtRetentionReleaseDate.Enabled = False
            chkAutoRenew.Enabled = False

            txtContractnoSearch.Enabled = True
            txtServiceAddressSearch.Enabled = True
            ddlContractGrpSearch.Enabled = True
            txtAccountIdSearch.Enabled = True
            txtClientNameSearch.Enabled = True
            ddlSalesmanSearch.Enabled = True
            ddlCategorySearch.Enabled = True
            txtSearch1Status.Enabled = True
            btnQuickSearch.Enabled = True
            btnQuickReset.Enabled = True

            ImageButton2.Enabled = True
            ImageButton3.Enabled = True
            btnSearch1Status.Enabled = True


          
            btnInvoice.Enabled = False
            txtLocation.Enabled = False

            rbtFixedContinuous.Enabled = False
            txtEndofLastSchedule.Enabled = False

            txtOnHoldDate.Enabled = False
            txtOnHoldCode.Enabled = False
            txtOnHoldDescription.Enabled = False
            txtOnHoldComments.Enabled = False

            'txtOnHoldDate.Visible = False
            'txtOnHoldCode.Visible = False
            'txtOnHoldDescription.Visible = False
            'txtOnHoldComments.Visible = False


            btnTransactions.Enabled = False

            'btnContractDetail.Enabled = False
            'btnContractDetail.ForeColor = System.Drawing.Color.Gray

            'btnTerminate.Enabled = False
            'btnContractDetail.ForeColor = System.Drawing.Color.Gray

            'btnEarlyCompletion.Enabled = False
            'btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

            'btnContractRenewal.Enabled = False
            'btnContractRenewal.ForeColor = System.Drawing.Color.Gray

            'btnCancelByCompany.Enabled = False
            'btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

            'btnServiceSchedule.Enabled = False
            'btnServiceSchedule.ForeColor = System.Drawing.Color.Gray

            'btnServiceRecords.Enabled = False
            'btnServiceRecords.ForeColor = System.Drawing.Color.Gray

            'btnInvoice.Enabled = False
            'btnInvoice.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = True
            btnFilter.ForeColor = System.Drawing.Color.Black

            btnReset.Enabled = True
            btnReset.ForeColor = System.Drawing.Color.Black
            AccessControl()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION DisableControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub EnableControls()
        Try
            btnSave.Enabled = True
            btnSave.ForeColor = System.Drawing.Color.Black
            btnCancel.Enabled = True
            btnCancel.ForeColor = System.Drawing.Color.Black
            btnClient.Visible = True
            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            'btnClient0.Visible = False
            'btnClient1.Visible = False
            'btnClient2.Visible = False
            'btnClient3.Visible = False
            'btnClient4.Visible = False
            'btnClient5.Visible = False
            'btnClient6.Visible = False
            'btnClient7.Visible = False
            'btnClient8.Visible = False
            'btnClient9.Visible = False

            'btnAutoRenew.Visible = False

            ''''''''''''''''''''''''
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnCancelByCompany.Enabled = False
            btnCancelByCompany.ForeColor = System.Drawing.Color.Gray

            btnEarlyCompletion.Enabled = False
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

            btnTerminate.Enabled = False
            btnTerminate.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

           

            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

          

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            'btnSearch.Enabled = False
            'btnSearch.ForeColor = System.Drawing.Color.Gray

            btnReset.Enabled = False
            btnReset.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = False
            btnFilter.ForeColor = System.Drawing.Color.Gray

            '''''''''''''''''''''''
            'btnDelete.Enabled = False
            'btnDelete.ForeColor = System.Drawing.Color.Gray



            'btnClient.Visible = False

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                txtAccountId.Enabled = True
                txtCustName.Enabled = True
                ddlCompanyGrp.Enabled = True
                btnClient.Visible = True
                ddlContactType.Enabled = True
                ddlContractGrp.Enabled = True
                'txtLocation.Enabled = True
            End If

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                btnClient.Visible = False
            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    txtLocation.Enabled = True
                End If

            End If

            ddlAgreementType.Enabled = True
            ddlSalesman.Enabled = True
            txtContractNo.Enabled = True
            txtContractDate.Enabled = True
            txtOurRef.Enabled = True
            txtYourRef.Enabled = True
            txtPONo.Enabled = True
            'txtTelephone.Enabled = True
            'txtFax.Enabled = True
            'txtConPerMobile.Enabled = True
            txtAgreeVal.Enabled = True
            txtDuration.Enabled = True
            'txtContractStart.Enabled = True
            'txtContractEnd.Enabled = True
            txtServStart.Enabled = True
            txtServStartDay.Enabled = True
            txtServEnd.Enabled = True
            TxtServEndDay.Enabled = True

            ChkWithWarranty.Enabled = True
            'ChkRequireInspection.Enabled = True
            'txtWarrDurtion.Enabled = True
            'ddlInspectionFrequency.Enabled = True
            'TxtInspectionStart.Enabled = True
            'TxtInspectionEnd.Enabled = True

            'txtWarrStart.Enabled = True
            'txtWarrEnd.Enabled = True
            txtValPerMnth.Enabled = True
            txtContractNotes.Enabled = True

            'txtStatus.Enabled = True

            'txtRs.Enabled = True
            txtAddress.Enabled = True
            txtOfficeAddress.Enabled = True
            'txtNS.Enabled = True
            txtProspectId.Enabled = True
            txtGstNo.Enabled = True
            txtAccCode.Enabled = True
            txtPostal.Enabled = True
            'txtGS.Enabled = True
            txtResponse.Enabled = True
            txtCancelCharges.Enabled = True
            txtMinDuration.Enabled = True
            txtConDetVal.Enabled = True
            txtPerServVal.Enabled = True
            txtDisPercent.Enabled = True
            txtDisAmt.Enabled = True
            'txtTotContVal.Enabled = True
            'txtRenewed.Enabled = True
            'txtRenewalDate.Enabled = True
            'txtOContract.Enabled = True
            txtQuotePrice.Enabled = True
            txtQuoteUnit.Enabled = True
            txtRemarks.Enabled = True
            txtPrintBody.Enabled = True

            txtClient.Enabled = True
            'txtContactPerson.Enabled = True

            ddlScheduler.Enabled = True
            rbtLstDuration.Enabled = True
            rbtComputationMethod.Enabled = True
            'ddlScheduleType.Enabled = True
            'txtTeamIncharge.Enabled = True
            'txtTeam.Enabled = True
            'txtServiceBy.Enabled = True
            'txtServTimeIn.Enabled = True
            'txtServTimeOut.Enabled = True
            'txtAllocTime.Enabled = True
            'txtServInst.Enabled = True

            'txtNoOfHrsServBal.Enabled = True
            'txtNoOfHrsServComp.Enabled = True
            'txtNoOfHrsTotServ.Enabled = True
            'txtNoOfHrsTotAmt.Enabled = True
            'txtNoOfPhServBal.Enabled = True
            'txtNoOfPhServComp.Enabled = True
            'txtNoOfPhTotAmt.Enabled = True
            'txtNoOfPhTotServ.Enabled = True
            'txtNoOfServBal.Enabled = True
            'txtNoOfServComp.Enabled = True
            'txtNoOfServTotAmt.Enabled = True
            'txtNoOfServTotServ.Enabled = True
            'txtNoOfUnitServBal.Enabled = True
            'txtNoOfUnitServComp.Enabled = True
            'txtNoOfUnitTotAmt.Enabled = True
            'txtNoOfUnitTotServ.Enabled = True
            'txtUnExpBal.Enabled = True
            'txtUnExpTotServ.Enabled = True

            txtBillingAmount.Enabled = True
            txtActualEnd.Enabled = True
            'txtServiceAmt.Enabled = True
            'txtServiceNo.Enabled = True
            txtHourAmt.Enabled = True
            txtHourNo.Enabled = True
            txtUnitAmt.Enabled = True
            txtUnitNo.Enabled = True
            txtCallAmt.Enabled = True
            txtCallNo.Enabled = True
            txtAmtCompleted.Enabled = True

            txtTotalArea.Enabled = True
            txtRetentionPerc.Enabled = True
            txtRetentionValue.Enabled = True
            txtRetentionReleaseDate.Enabled = True

            ddlLocateGrp.Enabled = True
            ddlContractGrp.Enabled = True
            ddlBillingFreq.Enabled = True

            'btnContractDetail.Enabled = True
            'btnTerminate.Enabled = True
            'btnEarlyCompletion.Enabled = True
            'btnContractRenewal.Enabled = True
            'btnCancelByCompany.Enabled = True

            'SASI - Industry Segment 28/04/2017

            '       ddlIndustry.Enabled = True
            ddlServiceTypeID.Enabled = True
            txtCategoryID.Enabled = True
            '        ddlMarketSegmentID.Enabled = True



            txtContractnoSearch.Enabled = False
            txtServiceAddressSearch.Enabled = False
            ddlContractGrpSearch.Enabled = False
            txtAccountIdSearch.Enabled = False
            txtClientNameSearch.Enabled = False
            ddlSalesmanSearch.Enabled = False
            ddlCategorySearch.Enabled = False

            txtSearch1Status.Enabled = False
            btnQuickSearch.Enabled = False
            btnQuickReset.Enabled = False
            ImageButton2.Enabled = False
            ImageButton3.Enabled = False
            btnSearch1Status.Enabled = False

            If Session("UserID") = "admin" Or Session("UserID") = "ADMIN" Then
                ddlPortfolioYN.Enabled = True
            End If

            txtPortfolioValue.Enabled = True
            txtBaitStationTotal.Enabled = True

            rbtFixedContinuous.Enabled = True
            txtEndofLastSchedule.Enabled = True

            'txtLocation.Enabled = True

            'SASI - End Industry Segment
            'ddlMarketSegmentID.Enabled = True

            txtConDetVal.Attributes.Remove("readonly")
            txtAgreeVal.Attributes.Remove("readonly")
            txtDisPercent.Attributes.Remove("readonly")
            txtDisAmt.Attributes.Remove("readonly")

            txtConDetVal.BackColor = txtContractnoSearch.BackColor
            txtAgreeVal.BackColor = txtContractnoSearch.BackColor
            txtDisPercent.BackColor = txtContractnoSearch.BackColor
            txtDisAmt.BackColor = txtContractnoSearch.BackColor

            chkAutoRenew.Enabled = True
            AccessControl()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION EnableControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub EnableSvcControls()
        Try
            btnSvcSave.Enabled = False
            btnSvcSave.ForeColor = System.Drawing.Color.Gray

            btnSvcSaveSchedule.Enabled = False
            btnSvcSaveSchedule.ForeColor = System.Drawing.Color.Gray

            btnSvcCancel.Enabled = False
            btnSvcCancel.ForeColor = System.Drawing.Color.Gray

            btnSvcAdd.Enabled = True
            btnSvcAdd.ForeColor = System.Drawing.Color.Black
            btnSvcEdit.Enabled = True
            btnSvcEdit.ForeColor = System.Drawing.Color.Black
            btnSvcDelete.Enabled = True
            btnSvcDelete.ForeColor = System.Drawing.Color.Black


            grvServiceLocation.Enabled = False
            grvServices.Enabled = False
            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False

            txtContactPerson.Enabled = False
            BtnTeam.Visible = False

            txtContactPerson.Enabled = False
            txtContactPerson2.Enabled = False
            txtPosition.Enabled = False
            txtPosition2.Enabled = False
            txtTelephone.Enabled = False
            txtTelephone2.Enabled = False
            txtFax.Enabled = False
            txtFax2.Enabled = False
            txtCP2Telephone.Enabled = False
            txtCP2Telephone2.Enabled = False
            txtConPerMobile.Enabled = False
            txtConPerMobile2.Enabled = False
            txtEmail1.Enabled = False
            txtEmail2.Enabled = False
            txtAddress.Enabled = False

            ddlScheduleType.Enabled = False
            txtTeamIncharge.Enabled = False
            txtTeam.Enabled = False
            txtServiceBy.Enabled = False
            txtSupervisor.Enabled = False
            txtServTimeIn.Enabled = False
            txtServTimeOut.Enabled = False
            txtAllocTime.Enabled = False
            txtServInst.Enabled = False
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION EnableSvcControls", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub DisableSvcControls()
        Try
            btnSvcSave.Enabled = True
            btnSvcSave.ForeColor = System.Drawing.Color.Black

            btnSvcSaveSchedule.Enabled = True
            btnSvcSaveSchedule.ForeColor = System.Drawing.Color.Black

            btnSvcCancel.Enabled = True
            btnSvcCancel.ForeColor = System.Drawing.Color.Black

            btnSvcAdd.Enabled = False
            btnSvcAdd.ForeColor = System.Drawing.Color.Gray

            btnSvcEdit.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray

            btnSvcDelete.Enabled = False
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            BtnTeam.Visible = True

            grvServiceLocation.Enabled = True
            grvServices.Enabled = True
            grvFreqDetails.Enabled = True
            grvTargetDetails.Enabled = True


            'GridView1.Visible = False
            'FirstGridViewRowLocation()
            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    Query1 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    Query1 = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'End If

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If

            ddlScheduleType.Enabled = True
            txtTeamIncharge.Enabled = True
            txtTeam.Enabled = True
            txtServiceBy.Enabled = True
            txtSupervisor.Enabled = True

            txtServTimeIn.Enabled = True
            txtServTimeOut.Enabled = True
            txtAllocTime.Enabled = True
            txtServInst.Enabled = True

            txtContactPerson.Enabled = True
            txtContactPerson2.Enabled = True
            txtPosition.Enabled = True
            txtPosition2.Enabled = True
            txtTelephone.Enabled = True
            txtTelephone2.Enabled = True
            txtFax.Enabled = True
            txtFax2.Enabled = True
            txtCP2Telephone.Enabled = True
            txtCP2Telephone2.Enabled = True
            txtConPerMobile.Enabled = True
            txtConPerMobile2.Enabled = True
            txtEmail1.Enabled = True
            txtEmail2.Enabled = True
            txtAddress.Enabled = True

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION DisableSvcControls", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub
    'Function

    'Button-click
  

    Protected Sub ShowMessage(sender As Object, e As EventArgs, message As String)

        'Dim message As String = "alert('Hello! Mudassar.')"

        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try
            txtMode.Text = ""
            MakeMeNull()
            MakeCommNull()
            'MakeSvcNull()
            MakeSvcDetailNull()
            EnableControls()
            'DisableControls()
            txtContractNo.Focus()


            If String.IsNullOrEmpty(lblAccountIdServiceAddress1.Text) = False Then
                txtServiceAddressCons.Text = lblAccountIdServiceAddress1.Text
            Else

            End If

            'txtIndustrySession.Text = lindustry
            'txtMarketSegmentSession.Text = Session("marketsegmentidsvc")

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                ddlIndustry.Text = txtIndustrySession.Text
                ddlMarketSegmentID.Text = txtMarketSegmentSession.Text
                ddlContractGrp.Text = txtContractGroupSession.Text
                ddlCompanyGrp.Text = txtCompanyGroupSession.Text

                'ddlContractGrp.Enabled = False

                If Left(ddlContractGrp.Text, 2) = "CP" Or Left(ddlContractGrp.Text, 2) = "MQ" Then
                    Dim query As String

                    ddlContractGrp.Enabled = True
                    ddlContractGrp.Items.Clear()
                    ddlContractGrp.Items.Add("--SELECT--")
                    query = "Select ContractGroup from tblcontractgroup where ContractGroup  like '" & Left(txtContractGroupSession.Text, 2) & "%'"
                    PopulateDropDownList(query, "ContractGroup", "ContractGroup", ddlContractGrp)
                    'ElseIf ddlContractGrp.Text = "MQ" Or ddlContractGrp.Text = "MQ (ADHOC)" Then
                    '    Dim query As String

                    '    ddlContractGrp.Enabled = True
                    '    ddlContractGrp.Items.Clear()
                    '    ddlContractGrp.Items.Add("--SELECT--")
                    '    query = "Select ContractGroup from tblcontractgroup where ContractGroup  like 'MQ%'"
                    '    PopulateDropDownList(query, "ContractGroup", "ContractGroup", ddlContractGrp)
                Else
                    ddlContractGrp.Enabled = False
                End If

                If String.IsNullOrEmpty(txtSalesmanSession.Text) = False Then
                    ddlSalesman.Text = txtSalesmanSession.Text
                End If

                If String.IsNullOrEmpty(txtLocationSession.Text) = True Then
                    txtLocation.SelectedIndex = 0
                Else
                    txtLocation.Text = txtLocationSession.Text
                End If

                txtBillingAddress.Text = txtBillingAdressSession.Text
                FindCategoryId()
            Else

            End If

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
            '        txtLocation.Enabled = True
            '    End If
            'End If

            txtSearch1Status.Text = "O,P,H,R,C,T,E"
            txtMode.Text = "NEW"
            lblMessage.Text = "ACTION: ADD RECORD"
            'tb1.ActiveTabIndex = 0

            ddlAgreementType.Items.Clear()
            ddlAgreementType.Items.Add("--SELECT--")
            ddlAgreementType.Items.Add("NEW")
            ddlAgreementType.Items.Add("ADDITION")

            ddlAgreementType.Attributes.Remove("disabled")

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnRevision.Enabled = False
            btnRevision.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

         
         

            btnEarlyCompletion.Enabled = False
            btnEarlyCompletion.ForeColor = System.Drawing.Color.Gray

      

            btnCancelByCompany.Enabled = False
            btnCancelByCompany.ForeColor = System.Drawing.Color.Gray


            btnTransactions.Enabled = False
            btnTransactions.ForeColor = System.Drawing.Color.Gray

            btnInvoice.Enabled = False
            btnInvoice.ForeColor = System.Drawing.Color.Gray

            btnFilter.Enabled = False
            btnFilter.ForeColor = System.Drawing.Color.Gray

            btnReset.Enabled = False
            btnReset.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnClient0.Visible = False
            btnClient1.Visible = False
            btnClient2.Visible = False
            btnClient3.Visible = False
            btnClient4.Visible = False
            btnClient5.Visible = False
            btnClient6.Visible = False
            btnClient7.Visible = False
            btnClient8.Visible = False
            btnClient9.Visible = False

            btnAutoRenew.Visible = False

            btnExtendContractEndDate.Visible = False

            tb1.ActiveTabIndex = 0

            'If ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '    ddlIndustry.Text = ""
            '    ddlMarketSegmentID.Text = ""
            'End If

            If String.IsNullOrEmpty(lblAccountNameContact1.Text.Trim) = False Then
                txtCustName.Text = lblAccountNameContact1.Text.Trim.ToUpper
            End If
            'ShowMessage(UpdatePanel1, UpdatePanel1.GetType(), "ok")
            ''MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")

            'Dim message As String = "Record added successfully!!!"
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> LoadDefaultDates();</Script>", False)
        Catch ex As Exception
            lblAlert.Text = "Error :" & ex.Message
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnADD_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub ConvertUpperGeneral()
        txtCustName.Text = txtCustName.Text.ToUpper
        txtOurRef.Text = txtOurRef.Text.ToUpper
        txtYourRef.Text = txtYourRef.Text.ToUpper
        txtPONo.Text = txtPONo.Text.ToUpper
        txtOfficeAddress.Text = txtOfficeAddress.Text.ToUpper
        txtPostal.Text = txtPostal.Text.ToUpper
        txtContractNotes.Text = txtContractNotes.Text.ToUpper
        txtRemarks.Text = txtRemarks.Text.ToUpper
    End Sub

    Private Sub ConvertUpperService()
        txtTeam.Text = txtTeam.Text.ToUpper
        txtTeamIncharge.Text = txtTeamIncharge.Text.ToUpper
        txtServiceBy.Text = txtServiceBy.Text.ToUpper
        txtSupervisor.Text = txtSupervisor.Text.ToUpper

        txtServInst.Text = txtServInst.Text.ToUpper

        txtContactPerson.Text = txtContactPerson.Text.ToUpper
        txtTelephone.Text = txtTelephone.Text.ToUpper
        txtPosition.Text = txtPosition.Text.ToUpper
        txtPosition2.Text = txtPosition2.Text.ToUpper
        txtConPerMobile.Text = txtConPerMobile.Text.ToUpper
        txtConPerMobile2.Text = txtConPerMobile2.Text.ToUpper
        txtContactPerson2.Text = txtContactPerson2.Text.ToUpper
        txtTelephone2.Text = txtTelephone2.Text.ToUpper
        txtCP2Telephone.Text = txtCP2Telephone.Text.ToUpper
        txtCP2Telephone2.Text = txtCP2Telephone2.Text.ToUpper
        txtFax.Text = txtFax.Text.ToUpper
        txtFax2.Text = txtFax2.Text.ToUpper

        txtEmail1.Text = txtEmail1.Text.ToUpper
        txtEmail2.Text = txtEmail2.Text.ToUpper

    End Sub
    'Button click


    Private Function FindAccountId() As Boolean
        Try
            Dim IsAccountId As Boolean
            IsAccountId = False

            Dim connIsAccountId As MySqlConnection = New MySqlConnection()

            connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connIsAccountId.Open()

            Dim commandIsAccountId As MySqlCommand = New MySqlCommand
            commandIsAccountId.CommandType = CommandType.Text

            If ddlContactType.Text = "COMPANY" Then
                commandIsAccountId.CommandText = "SELECT count(AccountId) as CountAccountId from tblCompany where AccountId ='" & txtAccountId.Text & "'"
            ElseIf ddlContactType.Text = "PERSON" Then
                commandIsAccountId.CommandText = "SELECT count(AccountId) as CountAccountId from tblPerson where AccountId ='" & txtAccountId.Text & "'"
            End If

            commandIsAccountId.Connection = connIsAccountId

            Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
            Dim dtIsAccountId As New DataTable
            dtIsAccountId.Load(drIsAccountId)

            If dtIsAccountId.Rows.Count > 0 Then
                If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                    IsAccountId = True
                End If


            End If
            commandIsAccountId.Dispose()
            connIsAccountId.Close()
            dtIsAccountId.Dispose()
            Return IsAccountId
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindAccountId", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Function


    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Try

            '''''''''''''''''''''
            'btnSave.Enabled = False

            lblAlert.Text = ""

            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            Dim commandLocked As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            commandLocked.CommandType = CommandType.Text
            commandLocked.CommandText = sqlstr
            commandLocked.Connection = conn

            Dim dr As MySqlDataReader = commandLocked.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            'InsertIntoTblWebEventLog("PopulateRecord", "1", "1", "1")

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("svcLock").ToString = "Y" Then
                    lblAlert.Text = "SERVICE START PERIOD IS LOCKED"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
            End If

            conn.Close()
            conn.Dispose()
            commandLocked.Dispose()
            dr.Close()

            'InsertIntoTblWebEventLog("PopulateRecord", "2", "1", "1")
            'txtBackDateContract.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContract")
            'txtBackDateContractTermination.Text = dtServiceRecordMasterSetup.Rows(0)("BackDateContractTermination")

            'If Convert.ToDateTime(txtContractDate.Text).ToString("dd/MM/yyyy") < Convert.ToDateTime(Now).ToString("dd/MM/yyyy") Then

            FindBackDateContractTermination()

            'InsertIntoTblWebEventLog("PopulateRecord", "3", "1", "1")
            If Convert.ToDateTime(txtContractDate.Text.Trim) < DateTime.Today Then  '1
                'InsertIntoTblWebEventLog("PopulateRecord", "4", "1", "1")
                If txtBackDateContractSetup.Text = False Then                       '2
                    lblAlert.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract entries."
                    txtContractDate.Focus()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                Else
                    If txtBackDateContract.Text = True Then   '3
                        GoTo proceedcontract
                    ElseIf txtBackDateContract.Text = False Then
                        'InsertIntoTblWebEventLog("PopulateRecord", "5", "1", "1")
                        If txtBackDateContractSameMonthOnly.Text = False Then  '4
                            lblAlert.Text = "This user account is not allowed to enter back-dated Contracts"
                            txtContractDate.Focus()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        ElseIf txtBackDateContractSameMonthOnly.Text = True Then
                            'InsertIntoTblWebEventLog("PopulateRecord", "6", "1", "1")
                            If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtContractDate.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtContractDate.Text).ToString("YYYY") Then  '5
                            Else
                                lblAlert.Text = "This user account is not allowed to enter back-dated Contracts"
                                txtContractDate.Focus()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If '5
                        End If '4
                    End If  '3
                End If  '2
            End If      '1
            ''InsertIntoTblWebEventLog("PopulateRecord", "10", "1", "1")

            'If txtBackDateContract.Text = False Then
            '    lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '    txtContractDate.Focus()
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'ElseIf txtBackDateContract.Text = True Then
            '    If txtBackDateContractSameMonthOnly.Text = False Then
            '        lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '        txtContractDate.Focus()
            '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        Exit Sub
            '    ElseIf txtBackDateContractSameMonthOnly.Text = True Then
            '        If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtContractDate.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtContractDate.Text).ToString("YYYY") Then
            '        Else
            '            lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
            '            txtContractDate.Focus()
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            Exit Sub
            '        End If
            '    End If
            'End If
            'End If
            'End If

proceedcontract:

            Dim IsAccountIdExist As Boolean = FindAccountId()

            If IsAccountIdExist = False Then

                lblAlert.Text = "Invalid Account Id"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If
            '''''''''''''''''''''
            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtContractStart.Text) > Convert.ToDateTime(txtContractEnd.Text) Then
                    lblAlert.Text = "Contract Start Date cannot be later than Contract End Date"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If

            If rbtFixedContinuous.SelectedIndex = 0 Then
                If Convert.ToDateTime(txtServStart.Text) > Convert.ToDateTime(txtServEnd.Text) Then
                    lblAlert.Text = "Service Start Date cannot be later than Service End Date"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If

            If rbtLstDuration.SelectedIndex = 0 Then
                Dim DurationDays As Long = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    DurationDays = DateDiff(DateInterval.Day, CDate(txtContractStart.Text), CDate(txtContractEnd.Text)) + 1
                    If DurationDays <> Convert.ToUInt64(txtDuration.Text) Then
                        lblAlert.Text = "Duration and Contract Dates Range Do Not Match"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSave.Enabled = True
                        Exit Sub
                    End If
                End If

                DurationDays = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    DurationDays = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                    If DurationDays <> Convert.ToUInt64(txtDuration.Text) Then
                        lblAlert.Text = "Duration and Service Dates Range Do Not Match"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        btnSave.Enabled = True
                        Exit Sub
                    End If
                End If

            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If txtLocation.SelectedIndex = 0 Then
                    lblAlert.Text = "Please Select Branch"
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    btnSave.Enabled = True
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(ddlIndustry.Text) = True Then

                lblAlert.Text = "Please Enter Industry"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub

            End If

            'If String.IsNullOrEmpty(ddlMarketSegmentID.Text) = True Then

            '    lblAlert.Text = "Please Enter Market Segment"
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    btnSave.Enabled = True
            '    Exit Sub

            'End If

            If Len(txtPONo.Text) > 25 Then
                lblAlert.Text = "PO No. cannot exceed 25 characters"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSave.Enabled = True
                Exit Sub
            End If


            If Convert.ToDecimal(txtAgreeVal.Text) = 0.0 Then
                mdlPopupZeroValue.Show()
            Else
                SaveContract()

                btnEdit.Enabled = True
                btnEdit.ForeColor = Color.Black
            End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSave_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateContractDetailsInfoFrequency(ByVal strFrequency As String)
        Try

            Dim lFrequency As String
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            'Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGV"), TextBox)

            lFrequency = strFrequency
            lblAlert.Text = ""
            'Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                'lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
            End If

            'Start: Frequency

            txtFrequencyDesc.Text = lFrequency
            txtFrequency.Text = lFrequency


            'txtMonthByWhichMonth.Text = lblid3.Text
            'txtDOWByWhichWeek.Text = lblid4.Text


            UpdatePanel1.Update()

            'grvFreqDetails.Enabled = True
            'grvTargetDetails.Enabled = True

            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                txtNoofSvcInterval.Text = 2

            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                txtNoofSvcInterval.Text = 3
                'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                '    txtNoofSvcInterval.Text = 3
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 4
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 5
            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 6
            Else
                txtNoofSvcInterval.Text = 1
            End If



            lblInterval.Text = ""
            Select Case txtFrequency.Text.ToUpper
                Case "DAILY"
                    lblInterval.Text = "Days"
                Case "WEEKLY", "TWICE-WEEKLY"
                    lblInterval.Text = "Wks"
                Case "BI-WEEKLY", "FORTNIGHTLY"
                    lblInterval.Text = "Bi-wks"
                Case "TRI-WEEKLY"
                    lblInterval.Text = "Tri-wks"
                Case "MONTHLY", "THRICE-MONTHLY"
                    lblInterval.Text = "Mths"
                Case "BI-MONTHLY"
                    lblInterval.Text = "Bi-mths"
                Case "QUARTERLY"
                    lblInterval.Text = "Quarterly"
                Case "HALF-ANNUALLY"
                    lblInterval.Text = "Half-Annually"
                Case "THRICE-ANNUALLY"
                    lblInterval.Text = "Thrice-Annually"
                Case "ANNUALLY"
                    lblInterval.Text = "Annually"
                Case "BI-ANNUALLY"
                    lblInterval.Text = "Bi-Annually"
            End Select

            Dim lInterval As Integer
            lInterval = txtNoofSvcInterval.Text


            Dim interval As Integer
            Dim endDate As Date
            If txtFrequencyDesc.Text = "MONTHLY" Then

                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            ElseIf txtFrequencyDesc.Text = "DAILY" Then
                txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If interval > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        interval = interval + 1
                    End If
                End If
                txtNoofInterval.Text = interval
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        weekNo = weekNo + 1
                    End If
                End If
                Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"

            ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        weekNo = weekNo + 1
                    End If
                End If

                Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'If weekNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        weekNo = weekNo + 1
                '    End If
                'End If

                'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                'txtNoofInterval.Text = tempInt
                'If txtNoofInterval.Text.Contains(".") Then
                '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                'End If
                'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "5"

            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "6"
            ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If

                txtNoofInterval.Text = Math.Round(monthNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

            ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"
            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"

            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthno = monthno + 1
                    End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round(monthNo / 3, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 6), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Then
                Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 4), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "ANNUALLY" Then
                Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        yearNo = yearNo + 1
                    End If
                End If

                txtNoofInterval.Text = yearNo
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        yearNo = yearNo + 1
                    End If
                End If

                txtNoofInterval.Text = Math.Round(yearNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            Else
                txtNoofInterval.Text = 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            End If
            fGetInterval()
            txtNoService.Text = CDec((txtNoofSvcInterval.Text)) * CDec((txtNoofInterval.Text))


            'lblid2.Text = txtNoService.Text
            '''''''''''''''''''''''''''''''''''''''''
            If Convert.ToInt64(txtNoofInterval.Text) > 0 Then
                'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                'End If
            Else
                'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "This Frequency CANNOT be selected within this Date Range"
                Exit Sub

            End If

            '''''''''''''''''''''''''''''''''''''''''
            ''Start:Frequency

            '' 'Delete first row

            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            'Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            'Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(3).FindControl("txtDayNoGV"), TextBox)
            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'If txtFrequencyDesc.Text = "DAILY" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
            '    gFreqMTD = "DOW"
            '    gSeq = "001"
            '    gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    gSeq = "001"
            '    gFreqMTD = "DOW"

            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        If i = 0 Then
            '            gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
            '        Else
            '            gDOW = ""
            '        End If
            '        AddNewRowFreq()
            '    Next i
            '    'AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
            '    'TextBoxSeqNo.Text = "001"
            '    'gFreqMTD = "DOW"
            '    TextBoxWeekNo.Enabled = True
            '    For i As Integer = 0 To lInterval - 1
            '        gSeq = "00" + (i + 1).ToString()
            '        AddNewRowFreq()

            '        TextBoxFreqMTD.Enabled = False
            '        TextBoxMonthNo.Enabled = False
            '        TextBoxDayNo.Enabled = False

            '        '
            '    Next i
            '    'AddNewRowFreq()
            '    'TextBoxFreqMTD.Enabled = False
            '    'TextBoxMonthNo.Enabled = False
            '    'TextBoxDayNo.Enabled = False
            '    'TextBoxWeekNo.Enabled = True
            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False
            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
            '    gSeq = "001"
            '    TextBoxWeekNo.Enabled = True
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False

            '    'TextBoxWeekDOW.Enabled = False
            '    'TextBoxLocation.Enabled = False
            '    'TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False


            'ElseIf txtFrequencyDesc.Text = "ADHOC" Or txtFrequencyDesc.Text = "ONE-TIME" Or txtFrequencyDesc.Text = "SVC CALL" Or txtFrequencyDesc.Text = "FOLLOW UP" Then
            '    gSeq = "001"

            '    gFreqMTD = "DAY"
            '    AddNewRowFreq()
            '    TextBoxFreqMTD.Enabled = False
            '    TextBoxMonthNo.Enabled = False
            '    TextBoxDayNo.Enabled = False
            '    TextBoxWeekNo.Enabled = False
            '    TextBoxWeekDOW.Enabled = False
            '    TextBoxLocation.Enabled = False
            '    TextBoxBranchID.Enabled = False
            '    TextBoxContractNo.Enabled = False
            '    TextBoxSourceSQLID.Enabled = False

            'End If

            'Delete last row

            'SetRowDataFreq()

            'Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq2 As DataRow = Nothing

            'If dtFreq2.Rows.Count > 1 Then
            '    dtFreq2.Rows.Remove(dtFreq2.Rows(0))
            '    drCurrentRowFreq2 = dtFreq2.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq2
            '    grvFreqDetails.DataSource = dtFreq2
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()

            'End If

            '''''''''''''''''End:Frequency




            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            'dtFreq.Dispose()
            'dtFreq2.Dispose()
            dr.Close()
        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateContractDetailsInfoFrequency", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Private Sub updateContractDetailsInfo()
        Try
            Dim sqlStr, sqlstr1 As String
            sqlStr = ""
            sqlstr1 = ""

            Dim connupdateContract As MySqlConnection = New MySqlConnection()

            connupdateContract.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connupdateContract.Open()

            '''''''''''''''''''''''''''
            'Dim connupdateContractHeaderInfo As MySqlConnection = New MySqlConnection()

            'connupdateContractHeaderInfo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'connupdateContractHeaderInfo.Open()

            Dim commandHeaderInfo As MySqlCommand = New MySqlCommand

            commandHeaderInfo.CommandType = CommandType.Text
            commandHeaderInfo.CommandText = "select Comments, TimeIn, Timeout, Support, ScheduleType, TeamId, AllocatedSvcTime from tblContract where ContractNo ='" & txtOContract.Text & "'"
            commandHeaderInfo.Connection = connupdateContract

            Dim drHeaderInfo As MySqlDataReader = commandHeaderInfo.ExecuteReader()
            Dim dtHeaderInfo As New DataTable
            dtHeaderInfo.Load(drHeaderInfo)

            If dtHeaderInfo.Rows.Count > 0 Then
                Dim commandHeaderUpdate As MySqlCommand = New MySqlCommand
                commandHeaderUpdate.CommandType = CommandType.Text
                commandHeaderUpdate.CommandText = "Update tblcontract set Comments=@Comments, TimeIn=@TimeIn, Timeout=@Timeout, Support=@Support, ScheduleType=@ScheduleType, TeamId=@TeamId, AllocatedSvcTime=@AllocatedSvcTime  where ContractNo = '" & txtContractNo.Text & "'"
                'commandHeaderUpdate.Connection = connupdateContract
                'commandHeaderUpdate.ExecuteNonQuery()

                ''''''''''''''''
                'commandHeaderUpdate.CommandText = qryRenew
                commandHeaderUpdate.Parameters.Clear()

                'commandHeaderUpdate.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                commandHeaderUpdate.Parameters.AddWithValue("@Comments", dtHeaderInfo.Rows(0)("Comments").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@TimeIn", dtHeaderInfo.Rows(0)("TimeIn").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@Timeout", dtHeaderInfo.Rows(0)("Timeout").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@Support", dtHeaderInfo.Rows(0)("Support").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@ScheduleType", dtHeaderInfo.Rows(0)("ScheduleType").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@TeamId", dtHeaderInfo.Rows(0)("TeamId").ToString)
                commandHeaderUpdate.Parameters.AddWithValue("@AllocatedSvcTime", dtHeaderInfo.Rows(0)("AllocatedSvcTime").ToString)
                'commandHeaderUpdate.Parameters.AddWithValue("@TimeIn", txtContractNo.Text.Trim)
                commandHeaderUpdate.Connection = connupdateContract
                commandHeaderUpdate.ExecuteNonQuery()
                commandHeaderUpdate.Dispose()

                '''''''''''''''''''
            End If

            '''''''''''''''''''''''''''''

            sqlStr = ""
            sqlstr1 = ""

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "select * from tblContractDet where ContractNo ='" & txtOContract.Text & "'"
            command1.Connection = connupdateContract

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                For i As Integer = 0 To dt.Rows.Count - 1
                    'sqlStr = "insert into tblContractDet(ContractNo, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn,ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc)"

                    '''''''''''''''''''''''''''''''''''''''
                    UpdateContractDetailsInfoFrequency(dt.Rows(i)("Frequency").ToString)

                    '''''''''''''''''''''''''''''''''''''''''

                    'sqlStr = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    'sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    'sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    'sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    'sqlStr = sqlStr + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    'sqlStr = sqlStr + "SELECT '" & txtContractNo.Text & "', Frequency, Value, NoService, Location, BranchId,"
                    'sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    'sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    'sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    'sqlStr = sqlStr + "'" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'"
                    'sqlStr = sqlStr & " from tblContractDet where rcno =" & dt.Rows(i)("rcno").ToString


                    sqlStr = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    sqlStr = sqlStr + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    sqlStr = sqlStr + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    sqlStr = sqlStr + "SELECT '" & txtContractNo.Text & "', Frequency, Value, " & txtNoService.Text & ", Location, BranchId,"
                    sqlStr = sqlStr + "NoOfSvcInterval, " & txtNoofInterval.Text & ", ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    sqlStr = sqlStr + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    sqlStr = sqlStr + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    sqlStr = sqlStr + "'" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'"
                    sqlStr = sqlStr & " from tblContractDet where rcno =" & dt.Rows(i)("rcno").ToString


                    Dim command2 As MySqlCommand = New MySqlCommand

                    command2.CommandText = sqlStr
                    command2.Parameters.Clear()
                    command2.Connection = connupdateContract
                    command2.ExecuteNonQuery()


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdet"

                    Dim command5 As MySqlCommand = New MySqlCommand
                    command5.CommandType = CommandType.Text

                    command5.CommandText = sqlLastId
                    command5.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command5.Connection = connupdateContract
                    txtSourceSQLID.Text = command5.ExecuteScalar()

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''

                    Dim command6 As MySqlCommand = New MySqlCommand
                    command6.CommandType = CommandType.Text
                    command6.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt64(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command6.Connection = connupdateContract
                    command6.ExecuteNonQuery()
                    ''''''''''''''''''''''''''''''''''''''''

                    Dim command3 As MySqlCommand = New MySqlCommand

                    command3.CommandType = CommandType.Text
                    command3.CommandText = "select * from tblContractServingTarget where ContractNo ='" & txtOContract.Text & "'"
                    command3.Connection = connupdateContract

                    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt3 As New DataTable
                    dt3.Load(dr3)

                    Dim prevrcno As Long

                    'prevrcno = dt.Rows(i)("rcno").ToString
                    prevrcno = dt.Rows(i)("OrigCode").ToString
                    If dt3.Rows.Count > 0 Then
                        sqlstr1 = "insert into tblContractServingTarget(SourceSQLID,ContractNo,CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn,ServiceID,TargetID,TargetDesc)"
                        sqlstr1 = sqlstr1 & " select " & Convert.ToInt64(txtSourceSQLID.Text) & ",'" & txtContractNo.Text & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "',ServiceID,TargetID,TargetDesc    "
                        'sqlstr1 = sqlstr1 & " from tblContractServingTarget where SourceSQLID =" & dt.Rows(i)("rcno").ToString
                        sqlstr1 = sqlstr1 & " from tblContractServingTarget where SourceSQLID =" & dt.Rows(i)("OrigCode").ToString
                        Dim command4 As MySqlCommand = New MySqlCommand

                        command4.CommandText = sqlstr1
                        command4.Parameters.Clear()
                        command4.Connection = connupdateContract
                        command4.ExecuteNonQuery()
                        command4.Dispose()
                    End If



                    ''''''''''''''''''''''''''''''''''''''''''''''''''''
                    Dim command7 As MySqlCommand = New MySqlCommand

                    command7.CommandType = CommandType.Text
                    command7.CommandText = "select * from tblContractServingTarget where ContractNo ='" & txtOContract.Text & "'"
                    command7.Connection = connupdateContract

                    Dim dr7 As MySqlDataReader = command3.ExecuteReader()
                    Dim dt7 As New DataTable
                    dt7.Load(dr7)

                    'Dim prevrcno As Long

                    'prevrcno = dt.Rows(i)("rcno").ToString
                    prevrcno = dt.Rows(i)("OrigCode").ToString
                    If dt7.Rows.Count > 0 Then
                        sqlstr1 = "insert into tblservicecontractfrequency(SourceSQLID, ContractNo,SeqNo, FreqMTD, DayNo, WeekNo, WeekDow,  MonthNo, CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                        sqlstr1 = sqlstr1 & " select " & Convert.ToInt64(txtSourceSQLID.Text) & ",'" & txtContractNo.Text & "', 001, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "', '" & txtCreatedBy.Text & "', '" & Convert.ToDateTime(txtCreatedOn.Text).ToString("yyyy-MM-dd") & "'    "
                        'sqlstr1 = sqlstr1 & " from tblContractServingTarget where SourceSQLID =" & dt.Rows(i)("rcno").ToString
                        sqlstr1 = sqlstr1 & " from tblservicecontractfrequency where SourceSQLID =" & dt.Rows(i)("OrigCode").ToString

                        Dim command8 As MySqlCommand = New MySqlCommand

                        command8.CommandText = sqlstr1
                        command8.Parameters.Clear()
                        command8.Connection = connupdateContract
                        command8.ExecuteNonQuery()
                        command8.Dispose()
                    End If



                    ''''''''''''''''''''''''''''''''''''''''''''''''''''
                    '''''''''''''''''''''''''''''''''''''''''''
                    command2.Dispose()
                    command3.Dispose()

                    command5.Dispose()
                    command6.Dispose()
                Next
            End If

            connupdateContract.Dispose()
            command1.Dispose()
            dt.Dispose()

            ''''''''''''''''''''''
            'Dim dsDet As New DataSet

            'dsDet = cls00Connection.getDataSet("select * from m24ContractDet where ContractNo=N'" & cls00Regional.String_Filter(vCopyAddDoc) & "'")
            'If RowCount(dsDet) > 0 Then
            '    Dim staffID As String = Strings.Left(cls00Regional.String_Filter(vpStaffId), 25)
            '    Dim entryDate As String = "convert(datetime,'" & Now.ToString("dd/MM/yyyy HH:mm") & "',103)"
            '    Dim contractNo As String = Strings.Left(cls00Regional.String_Filter(txtContractNo.Text), 25)
            '    Dim sqlStr As String, dsTemp As New DataSet
            '    For i = 0 To RowCount(dsDet) - 1
            '        sqlStr = "insert into m24ContractDet(ContractNo,EntryStaff,EntryDate,LastAddEditStaff,LastAddEditDate,ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc)"
            '        sqlStr = sqlStr & " select N'" & contractNo & "',N'" & staffID & "'," & entryDate & ",N'" & staffID & "'," & entryDate & ",ItemSeq ,StockID ,ServiceYN ,WarrantyYN ,SerialNo,Description,Qty,UnitMs,ControlID,Notes,SubCode,Frequency,Product_Service,Value,NoService,DayService1,DayService2,DayService3,DayService4,ServiceDateOption,ServDayMethod,ServDay,WeekNo,NoOfSvcInterval,NoOfInterval,ServiceID,ServiceDesc,TargetID,TargetDesc,Location,BranchID,ContactPerson,ServiceNotes,FrequencyDesc "
            '        sqlStr = sqlStr & " from m24ContractDet where code=" & Val(GetDsValue(dsDet, "code", i))
            '        cls00Connection.getDataSet(sqlStr)
            '        dsTemp = cls00Connection.getDataSet("select code from m24ContractDet where ContractNo=N'" & contractNo & "' order by code desc")
            '        If RowCount(dsTemp) > 0 Then
            '            sqlStr = "insert into m24ContractServingTarget(SourceSQLID,ContractNo,EntryStaff,EntryDate,LastAddEditStaff,LastAddEditDate,ServiceID,TargetID,TargetDesc)"
            '            sqlStr = sqlStr & " select " & Val(GetDsValue(dsTemp, "code")) & ",N'" & contractNo & "',N'" & staffID & "'," & entryDate & ",N'" & staffID & "'," & entryDate & ",ServiceID,TargetID,TargetDesc   from m24ContractServingTarget where SourceSQLID=" & Val(GetDsValue(dsDet, "code", i))
            '            cls00Connection.getDataSet(sqlStr)

            '        End If

            '    Next
            'End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "updateContractDetailsInfo", ex.Message.ToString, txtOContract.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub SaveContract()
        Try
            Dim lAddress1 As String
            Dim lTelephone As String
            Dim lContactPerson As String
            Dim lIndustry As String
            Dim lMobile As String
            Dim lFax As String

            lAddress1 = ""
            lTelephone = ""
            lContactPerson = ""
            lIndustry = ""
            lMobile = ""
            lFax = ""


            Dim connBillingDetails As MySqlConnection = New MySqlConnection()

            connBillingDetails.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connBillingDetails.Open()

            Dim commandBillingDetails As MySqlCommand = New MySqlCommand
            commandBillingDetails.CommandType = CommandType.Text

            If ddlContactType.Text = "COMPANY" Then

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal, BillTelephone, BillMobile, BillFax , BillContactPerson  FROM tblCompany where AccountId ='" & txtAccountId.Text & "'"
                Else
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddresssvc, BillStreetsvc, BillBuildingsvc, BillCountrysvc, BillPostalsvc, BillTelephone1svc, BillMobile1svc, BillFax1svc , BillContact1svc  FROM tblCompanyLocation where AccountId ='" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text & "'"
                End If

                commandBillingDetails.Connection = connBillingDetails

                Dim drBillingDetails As MySqlDataReader = commandBillingDetails.ExecuteReader()
                Dim dtBillingDetails As New DataTable
                dtBillingDetails.Load(drBillingDetails)

                If dtBillingDetails.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                        'lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString
                        lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillStreet").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillCountry").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString

                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone").ToString
                        lContactPerson = dtBillingDetails.Rows(0)("BillContactPerson").ToString
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile").ToString
                        lFax = dtBillingDetails.Rows(0)("BillFax").ToString
                    Else
                        lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString & ", " & dtBillingDetails.Rows(0)("BillStreetsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillBuildingsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillCountrysvc").ToString & ", " & dtBillingDetails.Rows(0)("BillPostalsvc").ToString

                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone1svc").ToString
                        lContactPerson = dtBillingDetails.Rows(0)("BillContact1svc").ToString
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile1svc").ToString
                        lFax = dtBillingDetails.Rows(0)("BillFax1svc").ToString

                    End If

                    'SASI - Industry Segment 28/04/2017

                    'ddlIndustry.SelectedItem.Text = lIndustry

                    'If String.IsNullOrEmpty(lIndustry) = False Then
                    '    Dim command1 As MySqlCommand = New MySqlCommand

                    '    command1.CommandType = CommandType.Text

                    '    command1.CommandText = "SELECT industry,marketsegmentid FROM tblindustry where industry='" & lIndustry & "'"
                    '    command1.Connection = connBillingDetails

                    '    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    '    Dim dt As New DataTable
                    '    dt.Load(dr)
                    '    ddlMarketSegmentID.SelectedItem.Text = dt.Rows(0)("marketsegmentid").ToString
                    '    If dt.Rows.Count > 0 Then

                    '    End If
                    'End If
                End If
                    dtBillingDetails.Dispose()
                    'SASI - End Industry Segment
            ElseIf ddlContactType.Text = "PERSON" Then

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    commandBillingDetails.CommandText = "SELECT  BillAddress1,  BillBuilding, BillStreet, BillCountry, BillPostal ,BillTelHome, BillTelMobile, BillTelFax , BillContactPerson  FROM tblPerson where AccountId ='" & txtAccountId.Text & "'"
                Else
                    commandBillingDetails.CommandText = "SELECT Industry, BillAddresssvc, BillStreetsvc, BillBuildingsvc, BillCountrysvc, BillPostalsvc, BillTelephone1svc, BillMobile1svc, BillFax1svc , BillContact1svc  FROM tblPersonLocation where AccountId ='" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text & "'"
                End If
                commandBillingDetails.Connection = connBillingDetails

                Dim drBillingDetails As MySqlDataReader = commandBillingDetails.ExecuteReader()
                Dim dtBillingDetails As New DataTable
                dtBillingDetails.Load(drBillingDetails)

                If dtBillingDetails.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                        lAddress1 = dtBillingDetails.Rows(0)("BillAddress1").ToString & ", " & dtBillingDetails.Rows(0)("BillStreet").ToString & ", " & dtBillingDetails.Rows(0)("BillBuilding").ToString & ", " & dtBillingDetails.Rows(0)("BillCountry").ToString & ", " & dtBillingDetails.Rows(0)("BillPostal").ToString
                        lTelephone = dtBillingDetails.Rows(0)("BillTelHome").ToString
                        lContactPerson = dtBillingDetails.Rows(0)("BillContactPerson").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillTelMobile").ToString
                        'lIndustry = ""
                        lMobile = dtBillingDetails.Rows(0)("BillTelMobile").ToString
                        lFax = dtBillingDetails.Rows(0)("BillTelFax").ToString
                    Else
                        lAddress1 = dtBillingDetails.Rows(0)("BillAddresssvc").ToString & ", " & dtBillingDetails.Rows(0)("BillStreetsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillBuildingsvc").ToString & ", " & dtBillingDetails.Rows(0)("BillCountrysvc").ToString & ", " & dtBillingDetails.Rows(0)("BillPostalsvc").ToString

                        lTelephone = dtBillingDetails.Rows(0)("BillTelephone1svc").ToString
                        lContactPerson = dtBillingDetails.Rows(0)("BillContact1svc").ToString
                        'lIndustry = dtBillingDetails.Rows(0)("Industry").ToString
                        lMobile = dtBillingDetails.Rows(0)("BillMobile1svc").ToString
                        lFax = dtBillingDetails.Rows(0)("BillFax1svc").ToString
                    End If
                   
                End If

                dtBillingDetails.Dispose()
                End If


                connBillingDetails.Close()
                commandBillingDetails.Dispose()

                If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                    ConvertUpperGeneral()
                End If

                If txtMode.Text = "NEW" Then

                    If txtModeRenew.Text <> "REV" Then
                        GenerateContractNo()
                    End If


                    If String.IsNullOrEmpty(txtContractNo.Text.Trim) = True Then
                        lblAlert.Text = "CONTRACT NUMBER CANNOT BE BLANK"
                        'updPnlMsg.Update()
                        Exit Sub
                    End If

                    Dim conn As MySqlConnection = New MySqlConnection()

                    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    conn.Open()

                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text
                    command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo"
                    command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then
                        lblAlert.Text = "RECORD ALREADY EXISTS"
                    Else
                        'Dim strdate As DateTime
                        Dim GstNo As String

                        'input check for numbers
                        If (txtAgreeVal.Text.Trim = "") Then
                            txtAgreeVal.Text = 0
                        End If

                        If (txtDuration.Text.Trim = "") Then
                            txtDuration.Text = 0
                        End If

                        If (txtDisPercent.Text.Trim = "") Then
                            txtDisPercent.Text = 0
                        End If

                        If (txtDisAmt.Text.Trim = "") Then
                            txtDisAmt.Text = 0
                        End If

                        If (txtAllocTime.Text.Trim = "") Then
                            txtAllocTime.Text = 0
                        End If

                        If (txtQuotePrice.Text.Trim = "") Then
                            txtQuotePrice.Text = 0
                        End If

                        If (txtResponse.Text.Trim = "") Then
                            txtResponse.Text = 0
                        End If

                        If (txtCancelCharges.Text.Trim = "") Then
                            txtCancelCharges.Text = 0
                        End If

                        If (txtMinDuration.Text.Trim = "") Then
                            txtMinDuration.Text = 0
                        End If

                        If (txtPerServVal.Text.Trim = "") Then
                            txtPerServVal.Text = 0
                        End If

                        ''''''''''''''''''
                        If (txtServiceAmt.Text.Trim = "") Then
                            txtServiceAmt.Text = 0
                        End If

                        If (txtServiceNo.Text.Trim = "") Then
                            txtServiceNo.Text = 0
                        End If

                        If (txtServiceNoActual.Text.Trim = "") Then
                            txtServiceNoActual.Text = 0
                        End If

                        If (txtServiceNoActual.Text.Trim = "") Then
                            txtServiceNoActual.Text = 0
                        End If


                        If (txtHourAmt.Text.Trim = "") Then
                            txtHourAmt.Text = 0
                        End If

                        If (txtHourNo.Text.Trim = "") Then
                            txtHourNo.Text = 0
                        End If

                        If (txtHourNoActual.Text.Trim = "") Then
                            txtHourNoActual.Text = 0
                        End If

                        If (txtHourNoActual.Text.Trim = "") Then
                            txtHourNoActual.Text = 0
                        End If

                        If (txtCallAmt.Text.Trim = "") Then
                            txtCallAmt.Text = 0
                        End If

                        If (txtCallNo.Text.Trim = "") Then
                            txtCallNo.Text = 0
                        End If

                        If (txtCallNoActual.Text.Trim = "") Then
                            txtCallNoActual.Text = 0
                        End If

                        If (txtCallNoActual.Text.Trim = "") Then
                            txtCallNoActual.Text = 0
                        End If

                        If (txtUnitAmt.Text.Trim = "") Then
                            txtUnitAmt.Text = 0
                        End If

                        If (txtUnitNo.Text.Trim = "") Then
                            txtUnitNo.Text = 0
                        End If

                        If (txtUnitNoActual.Text.Trim = "") Then
                            txtUnitNoActual.Text = 0
                        End If

                        If (txtUnitNoActual.Text.Trim = "") Then
                            txtUnitNoActual.Text = 0
                        End If

                        If (txtCompensateMax.Text.Trim = "") Then
                            txtCompensateMax.Text = 0
                        End If

                        If (txtCompensatePct.Text.Trim = "") Then
                            txtCompensatePct.Text = 0
                        End If



                        If (txtAmtBalance.Text.Trim = "") Then
                            txtAmtBalance.Text = 0
                        End If

                        If (txtAmtCompleted.Text.Trim = "") Then
                            txtAmtCompleted.Text = 0
                        End If


                        '''''''''''
                        If (txtConDetVal.Text.Trim = "") Then
                            txtConDetVal.Text = 0
                        End If

                        If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                            txtPortfolioValue.Text = 0
                        End If

                        If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                            txtRetentionPerc.Text = 0
                        End If

                        If String.IsNullOrEmpty(txtWarrantyBillingAmount.Text) = True Then
                            txtWarrantyBillingAmount.Text = "0.00"
                        End If

                        GstNo = txtGstNo.Text.Trim

                        'SASI - Industry Segment 28/04/2017
                        If (txtPortfolioValue.Text.Trim = "") Then
                            txtPortfolioValue.Text = 0
                        End If



                        'SASI - End Industry Segment

                        Dim command As MySqlCommand = New MySqlCommand
                        command.CommandType = CommandType.Text

                        Dim qry As String = "INSERT INTO tblContract(ContractNo, ContractDate, ContactType, CustCode, EntryDate,"
                        qry = qry + "OurReference, YourReference, Telephone, Fax, Contact, ContactPersonMobile, AgreeValue, Duration,"
                        qry = qry + "DurationMs, StartDate, EndDate, ServiceStart, ServiceEnd, "
                        qry = qry + "WarrantyStart, WarrantyEnd, Notes,   OContractNo, PrintBody, Remarks,"
                        qry = qry + "QuotePrice, QuoteUnitMs, Scheduler, SalesMan, Status, CustName, RenewalSt, CustAddr, NotedST, "
                        qry = qry + "ProspectId, GstNos, Postal, LocateGrp, GST, ContractGroup, MainContractNo,"
                        qry = qry + "ContractValue, PerServiceValue, CompanyGroup, Disc_Percent, DiscAmt, ResponseHours, CancelCharges, BillingFrequency,"
                        qry = qry + "MinDuration, Settle, ServiceNo, ServiceBal, ServiceAmt, ServiceNoActual, HourNo, HourBal, HourAmt, ActualEnd, HourNoActual, "
                        qry = qry + "CallNo, CallBal, CallAmt, CallNoActual, UnitNo, UnitBal, UnitAmt, UnitNoActual, CompensatePct,  "
                        qry = qry + "CompensateMax, AmtCompleted, AmtBalance, ValuePerMonth, BillingAmount, "
                        qry = qry + "AccountID, Warranty, WarrantyDuration, RequireInspecton, InspectionFrequency, InspectionStart,InspectionEnd,ComputationMethod,  "
                        qry = qry + "TotalArea, CompletedArea, BalanceArea, RetentionPerc, RetentionValue, RetentionClaimDate,  "
                        qry = qry + "Industry, BillAddress1, BillTelephone, BillMobile,  BillFax, BillContactPerson, "
                        qry = qry + "PONo, ServiceAddress, "
                        qry = qry + "ProjectCode, ProjectName,  "
                    qry = qry + "BaitStationTotal,  WarrantyBillingFrequency, WarrantyBillingAmount, Location, FixedContinuous, EndofLastSchedule, "
                        'qry = qry + "TimeIn, TimeOut, AllocatedSvcTime, ScheduleType,  TeamId, InchargeId, Support, Comments, "
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn,ServiceTypeID,ServiceTypeDescription,CategoryID,PortfolioYN,PortfolioValue,MarketSegmentID, AgreementType, AutoRenew)"

                        qry = qry + " VALUES(@ContractNo, @ContractDate, @ContactType, @CustCode, @EntryDate,  @OurReference, @YourReference, @Telephone,"
                        qry = qry + "@Fax, @Contact, @ContactPersonMobile, @AgreeValue, @Duration, @DurationMs, @StartDate, @EndDate,"
                        qry = qry + "@ServiceStart, @ServiceEnd, @WarrantyStart, @WarrantyEnd, @Notes,"
                        qry = qry + "@OContractNo, @PrintBody, @Remarks, @QuotePrice, @QuoteUnitMs, @Scheduler, "
                        qry = qry + "@SalesMan, @Status, @CustName, @RenewalSt, @CustAddr, @NotedST, @ProspectId, @GstNos, @Postal, "
                        qry = qry + "@LocateGrp, @GST,   @ContractGroup, @MainContractNo, @ContractValue,"
                        qry = qry + "@PerServiceValue, @CompanyGroup, @Disc_Percent, @DiscAmt, @ResponseHours, @CancelCharges, @BillingFrequency, "
                        qry = qry + "@MinDuration, @Settle, @ServiceNo, @ServiceBal, @ServiceAmt, @ServiceNoActual, @HourNo, @HourBal, @HourAmt, @ActualEnd, "
                        qry = qry + "@HourNoActual, @CallNo, @CallBal, @CallAmt, @CallNoActual, @UnitNo, @UnitBal, @UnitAmt, @UnitNoActual, @CompensatePct, @CompensateMax, @AmtCompleted, @AmtBalance, @ValuePerMonth, @BillingAmount,"
                        qry = qry + "@AccountID, @Warranty, @WarrantyDuration, @RequireInspecton, @InspectionFrequency, @InspectionStart, @InspectionEnd, @ComputationMethod,  "
                        qry = qry + "@TotalArea, @CompletedArea, @BalanceArea, @RetentionPerc, @RetentionValue, @RetentionClaimDate, "
                        qry = qry + "@Industry, @BillAddress1, @BillTelephone, @BillMobile,  @BillFax, @BillContactPerson, "
                        qry = qry + "@PONo, @ServiceAddress, "
                        qry = qry + "@ProjectCode, @ProjectName, "
                    qry = qry + "@BaitStationTotal,  @WarrantyBillingFrequency, @WarrantyBillingAmount, @Location, @FixedContinuous, @EndofLastSchedule,"
                        'qry = qry + " @TimeIn, @TimeOut, @AllocatedSvcTime, @ScheduleType, @TeamId, @InchargeId, @Support, @Comments,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn,@ServiceTypeID,@ServiceTypeDescription,@CategoryID,@PortfolioYN,@PortfolioValue,@MarketSegmentID, @AgreementType, @AutoRenew);"

                        command.CommandText = qry
                        command.Parameters.Clear()

                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim.ToUpper)

                        If txtContractDate.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@ContractDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@ContractDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        command.Parameters.AddWithValue("@ContactType", txtContType2.Text)
                        command.Parameters.AddWithValue("@CustCode", txtClient.Text.Trim)
                        command.Parameters.AddWithValue("@EntryDate", Now.AddHours(13))

                        command.Parameters.AddWithValue("@OurReference", txtOurRef.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@YourReference", txtYourRef.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@Contact", txtContactPerson.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@ContactPersonMobile", txtConPerMobile.Text.Trim)
                        command.Parameters.AddWithValue("@AgreeValue", txtAgreeVal.Text.Trim)
                        command.Parameters.AddWithValue("@Duration", txtDuration.Text.Trim)
                        command.Parameters.AddWithValue("@DurationMs", rbtLstDuration.SelectedValue.ToString)

                    If String.IsNullOrEmpty(txtContractStart.Text) = True Then
                        command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                        If txtServStart.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@ServiceStart", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@ServiceStart", Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd"))
                        End If

                    If String.IsNullOrEmpty(txtServEnd.Text.Trim) = True Then
                        command.Parameters.AddWithValue("@ServiceEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd"))
                    End If


                        If txtWarrStart.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStart.Text).ToString("yyyy-MM-dd"))

                        End If

                        If txtWarrEnd.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEnd.Text).ToString("yyyy-MM-dd"))

                        End If

                        command.Parameters.AddWithValue("@Notes", txtContractNotes.Text.Trim)

                        command.Parameters.AddWithValue("@OContractNo", txtOContract.Text.Trim)
                        command.Parameters.AddWithValue("@PrintBody", txtPrintBody.Text.Trim)
                        command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.Trim.ToUpper)
                        command.Parameters.AddWithValue("@QuotePrice", txtQuotePrice.Text.Trim)
                        command.Parameters.AddWithValue("@QuoteUnitMs", txtQuoteUnit.Text.Trim)

                        If ddlScheduler.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@Scheduler", "")
                        Else
                            command.Parameters.AddWithValue("@Scheduler", ddlScheduler.Text.Trim)
                        End If


                        If ddlSalesman.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@SalesMan", "")
                        Else
                            command.Parameters.AddWithValue("@SalesMan", ddlSalesman.Text.Trim)
                        End If

                        command.Parameters.AddWithValue("@Status", txtStatus.Text.Trim)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text.Trim)
                        command.Parameters.AddWithValue("@RenewalSt", txtRs.Text.Trim)
                    'command.Parameters.AddWithValue("@CustAddr", Left(txtOfficeAddress.Text.Trim, 200))
                    command.Parameters.AddWithValue("@CustAddr", Left(txtBillingAddress.Text.Trim.ToUpper, 200))

                        command.Parameters.AddWithValue("@NotedST", txtNS.Text.Trim)
                        command.Parameters.AddWithValue("@ProspectId", txtProspectId.Text.Trim)
                        command.Parameters.AddWithValue("@GstNos", GstNo)
                        command.Parameters.AddWithValue("@Postal", txtPostal.Text.Trim)


                        If ddlLocateGrp.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@LocateGrp", "")
                        Else
                            command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                        End If
                        'command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                        command.Parameters.AddWithValue("@GST", txtGS.Text.Trim)

                        If ddlContractGrp.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@ContractGroup", "")
                        Else
                            command.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.SelectedValue.ToString)
                        End If


                        command.Parameters.AddWithValue("@MainContractNo", txtMainContractNo.Text.Trim)
                        command.Parameters.AddWithValue("@ContractValue", txtConDetVal.Text.Trim)
                        command.Parameters.AddWithValue("@PerServiceValue", txtPerServVal.Text.Trim)
                        command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.SelectedValue.ToString)
                        command.Parameters.AddWithValue("@Disc_Percent", txtDisPercent.Text.Trim)
                        command.Parameters.AddWithValue("@DiscAmt", txtDisAmt.Text.Trim)
                        command.Parameters.AddWithValue("@ResponseHours", txtResponse.Text.Trim)
                        command.Parameters.AddWithValue("@CancelCharges", txtCancelCharges.Text.Trim)

                        If ddlBillingFreq.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@BillingFrequency", "")
                        Else
                            command.Parameters.AddWithValue("@BillingFrequency", ddlBillingFreq.SelectedValue.ToString)
                        End If

                        command.Parameters.AddWithValue("@MinDuration", txtMinDuration.Text.Trim)
                        'command.Parameters.AddWithValue("@Settle", rbtnLSettle.SelectedValue.ToString)
                        command.Parameters.AddWithValue("@Settle", "CB")
                        command.Parameters.AddWithValue("@ServiceNo", txtServiceNo.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceBal", txtServiceBal.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceAmt", txtAgreeVal.Text.Trim)
                        command.Parameters.AddWithValue("@ServiceNoActual", txtServiceNoActual.Text)

                        command.Parameters.AddWithValue("@HourNo", txtHourNo.Text.Trim)
                        command.Parameters.AddWithValue("@HourBal", txtHourBal.Text.Trim)
                        command.Parameters.AddWithValue("@HourAmt", txtHourAmt.Text.Trim)
                        command.Parameters.AddWithValue("@HourNoActual", txtHourNoActual.Text.Trim)
                        command.Parameters.AddWithValue("@CallNo", txtCallNo.Text.Trim)
                        command.Parameters.AddWithValue("@CallBal", txtCallBal.Text.Trim)
                        command.Parameters.AddWithValue("@CallAmt", txtCallAmt.Text.Trim)
                        command.Parameters.AddWithValue("@CallNoActual", txtCallNoActual.Text.Trim)
                        command.Parameters.AddWithValue("@UnitNo", txtUnitNo.Text.Trim)
                        command.Parameters.AddWithValue("@UnitBal", txtUnitBal.Text.Trim)
                        command.Parameters.AddWithValue("@UnitAmt", txtUnitAmt.Text.Trim)
                        command.Parameters.AddWithValue("@UnitNoActual", txtUnitNoActual.Text.Trim)

                        command.Parameters.AddWithValue("@CompensateMax", txtCompensateMax.Text.Trim)
                        command.Parameters.AddWithValue("@CompensatePct", txtCompensatePct.Text.Trim)

                        command.Parameters.AddWithValue("@AmtCompleted", txtAmtCompleted.Text.Trim)
                        command.Parameters.AddWithValue("@AmtBalance", txtAgreeVal.Text.Trim)

                        If String.IsNullOrEmpty(txtValPerMnth.Text) = True Then
                            command.Parameters.AddWithValue("@ValuePerMonth", 0.0)
                        Else
                            command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                        End If

                        If String.IsNullOrEmpty(txtBillingAmount.Text) = True Then
                            command.Parameters.AddWithValue("@BillingAmount", 0.0)
                        Else
                            command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)
                        End If

                        'If txtActualEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                        'Else
                        '    command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                        'End If
                        'If txtActualEnd.Text.Trim = "" Then
                        '    command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                        'Else
                        '    command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                        'End If


                        command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim)

                        If ChkWithWarranty.Checked = True Then
                            command.Parameters.AddWithValue("@Warranty", "Y")
                        Else
                            command.Parameters.AddWithValue("@Warranty", "N")
                        End If

                        command.Parameters.AddWithValue("@WarrantyDuration", txtWarrDurtion.Text.Trim)

                        If ChkRequireInspection.Checked = True Then
                            command.Parameters.AddWithValue("@RequireInspecton", "Y")
                        Else
                            command.Parameters.AddWithValue("@RequireInspecton", "N")
                        End If

                        If ddlInspectionFrequency.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@InspectionFrequency", "")
                        Else
                            command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
                        End If


                        If TxtInspectionStart.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

                        End If

                        If TxtInspectionEnd.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

                        End If

                        If rbtComputationMethod.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
                        Else
                            command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
                        End If

                        If String.IsNullOrEmpty(txtTotalArea.Text) = True Then
                            command.Parameters.AddWithValue("@TotalArea", 0.0)
                        Else
                            command.Parameters.AddWithValue("@TotalArea", txtTotalArea.Text)
                        End If

                        If String.IsNullOrEmpty(txtCompletedArea.Text) = True Then
                            command.Parameters.AddWithValue("@CompletedArea", 0.0)
                        Else
                            command.Parameters.AddWithValue("@CompletedArea", txtCompletedArea.Text)
                        End If

                        If String.IsNullOrEmpty(txtBalanceArea.Text) = True Then
                            command.Parameters.AddWithValue("@BalanceArea", 0.0)
                        Else
                            command.Parameters.AddWithValue("@BalanceArea", txtBalanceArea.Text)
                        End If

                        If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                            command.Parameters.AddWithValue("@RetentionPerc", 0.0)
                        Else
                            command.Parameters.AddWithValue("@RetentionPerc", Convert.ToDecimal(txtRetentionPerc.Text))
                        End If

                        If String.IsNullOrEmpty(txtRetentionValue.Text) = True Then
                            command.Parameters.AddWithValue("@RetentionValue", 0.0)
                        Else
                            command.Parameters.AddWithValue("@RetentionValue", Convert.ToDecimal(txtRetentionValue.Text))
                        End If


                        If txtRetentionReleaseDate.Text.Trim = "" Then
                            command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
                        Else
                            command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
                        End If


                        command.Parameters.AddWithValue("@Industry", ddlIndustry.Text)
                        'command.Parameters.AddWithValue("@BillAddress1", lAddress1.Trim)
                        command.Parameters.AddWithValue("@BillAddress1", Left(lAddress1.Trim, 100))
                        command.Parameters.AddWithValue("@BillTelephone", lTelephone)
                        command.Parameters.AddWithValue("@BillMobile", lMobile)
                        command.Parameters.AddWithValue("@BillFax", lFax)
                    command.Parameters.AddWithValue("@BillContactPerson", lContactPerson.Trim)

                        command.Parameters.AddWithValue("@PONo", txtPONo.Text.ToUpper)
                        command.Parameters.AddWithValue("@ServiceAddress", txtServiceAddressCons.Text.ToUpper)

                        If ddlProjectCode.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@ProjectCode", "")
                            command.Parameters.AddWithValue("@ProjectName", "")
                        Else
                            command.Parameters.AddWithValue("@ProjectCode", Left(ddlProjectCode.Text, 17).ToUpper)
                            command.Parameters.AddWithValue("@ProjectName", Mid(ddlProjectCode.Text, 21, 50).ToUpper)
                        End If


                        command.Parameters.AddWithValue("@BaitStationTotal", txtBaitStationTotal.Text)
                        'command.Parameters.AddWithValue("@StationCompleted", txtServiceAddressCons.Text)
                        'command.Parameters.AddWithValue("@StationBalance", txtServiceAddressCons.Text)

                        'If String.IsNullOrEmpty(ddlWarrantyFrequency.Text) = True Then
                        If ddlWarrantyFrequency.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@WarrantyBillingFrequency", "")
                        Else
                            command.Parameters.AddWithValue("@WarrantyBillingFrequency", ddlWarrantyFrequency.Text)
                        End If

                        command.Parameters.AddWithValue("@WarrantyBillingAmount", txtWarrantyBillingAmount.Text)

                    command.Parameters.AddWithValue("@AgreementType", ddlAgreementType.Text)

                    If String.IsNullOrEmpty(txtLocation.Text) = True Then
                        command.Parameters.AddWithValue("@Location", "")
                    Else
                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    End If


                    If chkAutoRenew.Checked = True Then
                        command.Parameters.AddWithValue("@AutoRenew", "Y")
                    Else
                        command.Parameters.AddWithValue("@AutoRenew", "N")
                    End If

                    command.Parameters.AddWithValue("@FixedContinuous", rbtFixedContinuous.SelectedValue.ToString)

                    If txtEndofLastSchedule.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@EndofLastSchedule", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndofLastSchedule", Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd"))

                    End If

                        'command.Parameters.AddWithValue("@OfficeAddress", txtOfficeAddress.Text.Trim)

                        'command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString.ToUpper)
                        'command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                        'command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)
                        'command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)

                        'command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim)
                        'command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim)
                        'command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim)
                        'command.Parameters.AddWithValue("@Comments", txtServInst.Text.Trim)


                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        'SASI - Industry Segment 28/04/2017
                        'Dim index As Integer = ddlServiceTypeID.SelectedItem.Text.IndexOf("-")
                        'Dim st As String = ddlServiceTypeID.SelectedItem.Text.Substring(1, index - 2)

                        If ddlServiceTypeID.SelectedIndex = 0 Then
                            command.Parameters.AddWithValue("@ServiceTypeID", "")
                            command.Parameters.AddWithValue("@ServiceTypedescription", "")
                        Else
                            command.Parameters.AddWithValue("@ServiceTypeID", Left(ddlServiceTypeID.Text, 4).ToUpper)
                            command.Parameters.AddWithValue("@ServiceTypedescription", Mid(ddlServiceTypeID.Text, 8, 65).ToUpper)
                        End If

                        'If ddlCategoryID.SelectedIndex = 0 Then
                        '    command.Parameters.AddWithValue("@CategoryID", "")
                        'Else
                        command.Parameters.AddWithValue("@CategoryID", txtCategoryID.Text.Trim)
                        'End If

                        If ddlPortfolioYN.SelectedItem.Text = "YES" Then
                            command.Parameters.AddWithValue("@PortfolioYN", 1)
                        Else
                            command.Parameters.AddWithValue("@PortfolioYN", 0)
                        End If

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                            command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                        Else
                            command.Parameters.AddWithValue("@PortfolioValue", Convert.ToDecimal(txtPortfolioValue.Text))
                        End If
                    Else
                        command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                    End If


                    If ddlMarketSegmentID.Text = "--SELECT--" Then
                        command.Parameters.AddWithValue("@MarketSegmentID", "")
                    Else
                        command.Parameters.AddWithValue("@MarketSegmentID", ddlMarketSegmentID.Text.Trim)
                    End If

                    'SASI - End Industry Segment

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontract"


                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcno.Text = commandRcno.ExecuteScalar()

                    commandRcno.Dispose()

                    'lblContractNo.Text = txtContractNo.Text
                    ''lblAccountID.Text = txtClient.Text
                    'lblAccountID.Text = txtAccountId.Text
                    'txtAccountIdSelection.Text = lblAccountID.Text
                    'lblName.Text = txtCustName.Text

                    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    'Dim message As String = "alert('Record added successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                    'Dim MyMasterPage As MasterPageClassName = CType(Page.Master, MasterPageClassName)

                    'MyMasterPage.Functionname()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

                    'Dim mainMaster = TryCast(Master.MasterPageFile, MasterPage)
                    'If mainMaster Is Nothing Then
                    'Else
                    '    mainMaster.EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Now, 0, 0, 0, txtAccountId.Text, "", sqlLastId)

                    'End If


                    'EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Now, 0, 0, 0, txtAccountId.Text, "", sqlLastId)
                End If


                'Renewal
                If txtModeRenew.Text = "R" Then

                    updateContractDetailsInfo()

                    Dim commandRenew As MySqlCommand = New MySqlCommand
                    commandRenew.CommandType = CommandType.Text

                    Dim qryRenew As String = "Update tblContract set  RenewalDate =@RenewalDate, Status = 'C', RenewalSt = 'R', RenewalContractNo =@RenewalContractNo where rcno = @rcno  "

                    commandRenew.CommandText = qryRenew
                    commandRenew.Parameters.Clear()

                    commandRenew.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                    commandRenew.Parameters.AddWithValue("@RenewalDate", Convert.ToDateTime(txtCreatedOn.Text))
                    commandRenew.Parameters.AddWithValue("@RenewalContractNo", txtContractNo.Text.Trim)
                    commandRenew.Connection = conn
                    commandRenew.ExecuteNonQuery()
                    commandRenew.Dispose()


                    ''''''''''
                    'UpdateSignedAgreementReference(txtOContract.Text, )

                    UpdateSignedAgreementReference(txtOContract.Text, txtRcno.Text)

                    'Dim commandSignedAgreementReference As MySqlCommand = New MySqlCommand
                    'commandSignedAgreementReference.CommandType = CommandType.Text

                    'Dim qrySignedAgreementReference As String = "Update tblContract set  RenewalDate =@RenewalDate, Status = 'C', RenewalSt = 'R', RenewalContractNo =@RenewalContractNo where rcno = @rcno  "

                    'commandSignedAgreementReference.CommandText = qrySignedAgreementReference
                    'commandSignedAgreementReference.Parameters.Clear()

                    'commandSignedAgreementReference.Parameters.AddWithValue("@rcno", txtRcnoRenew.Text.Trim)
                    'commandSignedAgreementReference.Parameters.AddWithValue("@RenewalDate", Convert.ToDateTime(txtCreatedOn.Text))
                    'commandSignedAgreementReference.Parameters.AddWithValue("@RenewalContractNo", txtContractNo.Text.Trim)
                    'commandSignedAgreementReference.Connection = conn
                    'commandSignedAgreementReference.ExecuteNonQuery()
                    'commandSignedAgreementReference.Dispose()

                    ''''''''''

                    lblMessage.Text = "EDIT: CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text & " SUCCESSFULLY "
                    lblAlert.Text = ""
                    commandRenew.Dispose()
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtOContract.Text, "RENEWED", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcnoRenew.Text)

                End If
                'Renewal



                'Revision
                If txtModeRenew.Text = "REV" Then

                    ''''''''''''''''''''''''''''''''''''''''
                    Dim CountBilledServiceRecords As Integer
                    CountBilledServiceRecords = 0

                    Dim CountPostedServiceRecords As Integer
                    CountPostedServiceRecords = 0
                    Dim commandT1 As MySqlCommand = New MySqlCommand

                    Dim strdate1 As DateTime


                    commandT1.CommandType = CommandType.Text
                    'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtPrevContract.Text & "'"

                    commandT1.Connection = conn

                    Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
                    Dim dtserviceT As New DataTable
                    dtserviceT.Load(drserviceT)

                    If dtserviceT.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceT.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecR
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where  RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecR:
                        Next

                    End If

                    Dim commandT As MySqlCommand = New MySqlCommand
                    commandT.CommandType = CommandType.Text

                    Dim qryT As String = "UPDATE tblContract SET  Status ='R', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription where ContractNo= @ContractNo "


                    commandT.CommandText = qryT
                    commandT.Parameters.Clear()


                    If txtActualEndChSt.Text = "" Then
                        commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate1 = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandT.Parameters.AddWithValue("@ActualEnd", strdate1.ToString("yyyy-MM-dd"))
                    End If


                    commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                    'commandT.Parameters.AddWithValue("@TerminationDescription", Strings.Mid(ddlTerminationCode.Text,9)

                    commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    commandT.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
                    'commandT.Parameters.AddWithValue("@Rcno", txtPrevContract.TexttxtRcno.Text)
                    commandT.Parameters.AddWithValue("@ContractNo", txtPrevContract.Text)
                    commandT.Connection = conn
                    commandT.ExecuteNonQuery()

                    GridView1.DataBind()

                    'originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""
                    txtModeRenew.Text = ""

                    ''''''''''''''''''''''''''''''''''''''''

                    UpdateSignedAgreementReference(txtPrevContract.Text, txtRcno.Text)

                    InsertCommissionNotes()

                    lblMessage.Text = "EDIT: CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text & " SUCCESSFULLY "
                    lblAlert.Text = ""

                End If
                'Revision

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                DisableControls()
                'txtMode.Text = ""
                'btnContractDetail.Enabled = True
            ElseIf txtMode.Text = "EDIT" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT * FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                Else
                    Dim strdate As DateTime
                    Dim GstNo As String

                    'input check for numbers
                    If (txtAgreeVal.Text.Trim = "") Then
                        txtAgreeVal.Text = 0
                    End If

                    If (txtDuration.Text.Trim = "") Then
                        txtDuration.Text = 0
                    End If

                    If (txtDisPercent.Text.Trim = "") Then
                        txtDisPercent.Text = 0
                    End If

                    If (txtDisAmt.Text.Trim = "") Then
                        txtDisAmt.Text = 0
                    End If

                    If (txtAllocTime.Text.Trim = "") Then
                        txtAllocTime.Text = 0
                    End If

                    If (txtQuotePrice.Text.Trim = "") Then
                        txtQuotePrice.Text = 0
                    End If

                    If (txtResponse.Text.Trim = "") Then
                        txtResponse.Text = 0
                    End If

                    If (txtCancelCharges.Text.Trim = "") Then
                        txtCancelCharges.Text = 0
                    End If

                    If (txtMinDuration.Text.Trim = "") Then
                        txtMinDuration.Text = 0
                    End If

                    If (txtPerServVal.Text.Trim = "") Then
                        txtPerServVal.Text = 0
                    End If

                    If (txtServiceAmt.Text.Trim = "") Then
                        txtServiceAmt.Text = 0
                    End If

                    If (txtServiceNo.Text.Trim = "") Then
                        txtServiceNo.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If

                    If (txtServiceNoActual.Text.Trim = "") Then
                        txtServiceNoActual.Text = 0
                    End If


                    If (txtHourAmt.Text.Trim = "") Then
                        txtHourAmt.Text = 0
                    End If

                    If (txtHourNo.Text.Trim = "") Then
                        txtHourNo.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtHourNoActual.Text.Trim = "") Then
                        txtHourNoActual.Text = 0
                    End If

                    If (txtCallAmt.Text.Trim = "") Then
                        txtCallAmt.Text = 0
                    End If

                    If (txtCallNo.Text.Trim = "") Then
                        txtCallNo.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If

                    If (txtCallNoActual.Text.Trim = "") Then
                        txtCallNoActual.Text = 0
                    End If



                    If (txtUnitAmt.Text.Trim = "") Then
                        txtUnitAmt.Text = 0
                    End If

                    If (txtUnitNo.Text.Trim = "") Then
                        txtUnitNo.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If

                    If (txtUnitNoActual.Text.Trim = "") Then
                        txtUnitNoActual.Text = 0
                    End If



                    If (txtCompensateMax.Text.Trim = "") Then
                        txtCompensateMax.Text = 0
                    End If

                    If (txtCompensatePct.Text.Trim = "") Then
                        txtCompensatePct.Text = 0
                    End If



                    If (txtAmtBalance.Text.Trim = "") Then
                        txtAmtBalance.Text = 0
                    End If

                    If (txtAmtCompleted.Text.Trim = "") Then
                        txtAmtCompleted.Text = 0
                    End If


                    If (txtConDetVal.Text.Trim = "") Then
                        txtConDetVal.Text = 0
                    End If


                    If String.IsNullOrEmpty(txtWarrantyBillingAmount.Text) = True Then
                        txtWarrantyBillingAmount.Text = "0.00"
                    End If

                    GstNo = txtGstNo.Text.Trim

                    'SASI - Industry Segment 28/04/2017


                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        txtRetentionPerc.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                        txtPortfolioValue.Text = 0
                    End If

                    If String.IsNullOrEmpty(txtContractNo.Text.Trim) = True Then
                        lblAlert.Text = "CONTRACT NUMBER CANNOT BE BLANK"
                        'updPnlMsg.Update()
                        Exit Sub
                    End If



                    'SASI - End Industry Segment

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "Update tblContract set ContractNo = @ContractNo, ContractDate = @ContractDate, ContactType = @ContactType, CustCode = @CustCode,"
                    qry = qry + "OurReference = @OurReference, YourReference = @YourReference , Telephone = @Telephone, Fax = @Fax, Contact = @Contact, ContactPersonMobile = @ContactPersonMobile, AgreeValue = @AgreeValue, Duration = @Duration,"
                    qry = qry + "DurationMs = @DurationMs, StartDate =@StartDate, EndDate =@EndDate, ServiceStart =@ServiceStart, ServiceEnd =@ServiceEnd, "
                    qry = qry + "WarrantyStart = @, WarrantyEnd = @WarrantyEnd, Notes = @Notes,  PrintBody =@PrintBody, Remarks =@Remarks,"
                    qry = qry + "QuotePrice = @QuotePrice, QuoteUnitMs =@QuoteUnitMs, Scheduler =@Scheduler, SalesMan =@SalesMan, Status =@Status, CustName =@CustName, CustAddr =@CustAddr, NotedST =@NotedST, "
                    qry = qry + "ProspectId = @ProspectId, GstNos =@GstNos, Postal =@Postal, LocateGrp =@LocateGrp, GST =@GST,  ContractGroup =@ContractGroup,"
                    qry = qry + "ContractValue = @ContractValue, PerServiceValue =@PerServiceValue, CompanyGroup =@CompanyGroup, Disc_Percent =@Disc_Percent, DiscAmt =@DiscAmt, ResponseHours =@ResponseHours, CancelCharges =@CancelCharges, BillingFrequency = @BillingFrequency,"
                    qry = qry + "MinDuration = @MinDuration, Settle = @Settle, ServiceNo =@ServiceNo, ServiceBal =@ServiceBal, ServiceAmt =@ServiceAmt, ServiceNoActual =@ServiceNoActual, HourNo =@HourNo, HourBal =@HourBal, HourAmt =@HourAmt, ActualEnd = @ActualEnd, HourNoActual =@HourNoActual, "
                    qry = qry + "CallNo = @CallNo, CallBal = @CallBal, CallAmt =@CallAmt, CallNoActual =@CallNoActual, UnitNo =@UnitNo, UnitBal =@UnitBal, UnitAmt =@UnitAmt, UnitNoActual =@UnitNoActual, "
                    qry = qry + "CompensatePct = @CompensatePct, CompensateMax = @CompensateMax, AmtCompleted = @AmtCompleted, AmtBalance = @AmtBalance,  ValuePerMonth = @ValuePerMonth, BillingAmount = @BillingAmount, "
                    qry = qry + "AccountID=@AccountID, Warranty=@Warranty, WarrantyDuration=@WarrantyDuration, RequireInspecton=@RequireInspecton, InspectionFrequency=@InspectionFrequency, InspectionStart=@InspectionStart, InspectionEnd=@InspectionEnd, ComputationMethod=@ComputationMethod,  "
                    'qry = qry + "TimeIn =@TimeIn, TimeOut =@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  "
                    qry = qry + "RetentionPerc =@RetentionPerc, RetentionValue = @RetentionValue, RetentionClaimDate = @RetentionClaimDate, "
                    qry = qry + "Industry = @Industry, BillAddress1 = @BillAddress1, BillTelephone = @BillTelephone, BillMobile = @BillMobile,  BillFax = @BillFax, BillContactPerson = @BillContactPerson,  PONo = @PoNo, ServiceAddress = @ServiceAddress, "
                    qry = qry + "ProjectCode = @ProjectCode, ProjectName = @ProjectName, TotalArea =@TotalArea, "
                    qry = qry + "BaitStationTotal =@BaitStationTotal, WarrantyBillingFrequency =@WarrantyBillingFrequency, WarrantyBillingAmount =@WarrantyBillingAmount,  "
                    qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn,ServiceTypeID = @ServiceTypeID,ServiceTypeDescription = @ServiceTypeDescription,"
                    qry = qry + "CategoryID = @CategoryID,PortfolioYN = @PortfolioYN,PortfolioValue = @PortfolioValue,MarketSegmentID = @MarketSegmentID,  AgreementTYpe = @AgreementType, location=@Location, AutoRenew = @AutoRenew, FixedContinuous=@FixedContinuous, EndofLastSchedule=@EndofLastSchedule  where rcno = " & Convert.ToInt32(txtRcno.Text)

                    'total 77 fields

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim.ToUpper)

                    If txtContractDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ContractDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ContractDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@ContactType", txtContType2.Text)
                    command.Parameters.AddWithValue("@CustCode", txtClient.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@OurReference", txtOurRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@YourReference", txtYourRef.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact", txtContactPerson.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ContactPersonMobile", txtConPerMobile.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@AgreeValue", txtAgreeVal.Text.Trim)
                    command.Parameters.AddWithValue("@Duration", txtDuration.Text.Trim)
                    command.Parameters.AddWithValue("@DurationMs", rbtLstDuration.SelectedValue.ToString)

                    If txtContractStart.Text = "" Then
                        command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    If txtContractEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@EndDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    If txtServStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceStart", Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd"))
                    End If

                    If txtServEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtServEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    If txtWarrStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@WarrantyStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyStart", Convert.ToDateTime(txtWarrStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If txtWarrEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@WarrantyEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@WarrantyEnd", Convert.ToDateTime(txtWarrEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@Notes", txtContractNotes.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@OContractNo", txtRenewed.Text.Trim)
                    command.Parameters.AddWithValue("@PrintBody", txtPrintBody.Text.Trim)
                    command.Parameters.AddWithValue("@Remarks", txtRemarks.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@QuotePrice", txtQuotePrice.Text.Trim)
                    command.Parameters.AddWithValue("@QuoteUnitMs", txtQuoteUnit.Text.Trim)

                    If ddlScheduler.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@Scheduler", "")
                    Else
                        command.Parameters.AddWithValue("@Scheduler", ddlScheduler.Text.Trim)
                    End If


                    If ddlSalesman.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@SalesMan", "")
                    Else
                        command.Parameters.AddWithValue("@SalesMan", ddlSalesman.Text.Trim)
                    End If

                    command.Parameters.AddWithValue("@Status", txtStatus.Text.Trim)
                    command.Parameters.AddWithValue("@CustName", txtCustName.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text.Trim)
                    'command.Parameters.AddWithValue("@CustAddr", txtOfficeAddress.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@CustAddr", Left(txtBillingAddress.Text.Trim.ToUpper, 200))
                    command.Parameters.AddWithValue("@NotedST", txtNS.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ProspectId", txtProspectId.Text.Trim)
                    command.Parameters.AddWithValue("@GstNos", GstNo)
                    command.Parameters.AddWithValue("@Postal", txtPostal.Text.Trim)

                    If ddlLocateGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@LocateGrp", "")
                    Else
                        command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    End If

                    'command.Parameters.AddWithValue("@LocateGrp", ddlLocateGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@GST", txtGS.Text.Trim)

                    If ddlContractGrp.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ContractGroup", "")
                    Else
                        command.Parameters.AddWithValue("@ContractGroup", ddlContractGrp.SelectedValue.ToString)
                    End If


                    command.Parameters.AddWithValue("@ContractValue", Convert.ToDecimal(txtConDetVal.Text.Trim))
                    command.Parameters.AddWithValue("@PerServiceValue", txtPerServVal.Text.Trim)
                    command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Disc_Percent", txtDisPercent.Text.Trim)
                    command.Parameters.AddWithValue("@DiscAmt", txtDisAmt.Text.Trim)
                    command.Parameters.AddWithValue("@ResponseHours", txtResponse.Text.Trim)
                    command.Parameters.AddWithValue("@CancelCharges", txtCancelCharges.Text.Trim)

                    If ddlBillingFreq.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@BillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@BillingFrequency", ddlBillingFreq.SelectedValue.ToString)
                    End If

                    command.Parameters.AddWithValue("@MinDuration", txtMinDuration.Text.Trim)
                    'command.Parameters.AddWithValue("@Settle", rbtnLSettle.SelectedValue.ToString)
                    command.Parameters.AddWithValue("@Settle", "CB")
                    command.Parameters.AddWithValue("@ServiceNo", txtServiceNo.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceBal", txtServiceBal.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceAmt", txtServiceAmt.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceNoActual", txtServiceNoActual.Text)

                    command.Parameters.AddWithValue("@HourNo", txtHourNo.Text.Trim)
                    command.Parameters.AddWithValue("@HourBal", txtHourBal.Text.Trim)
                    command.Parameters.AddWithValue("@HourAmt", txtHourAmt.Text.Trim)
                    command.Parameters.AddWithValue("@HourNoActual", txtHourNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@CallNo", txtCallNo.Text.Trim)
                    command.Parameters.AddWithValue("@CallBal", txtCallBal.Text.Trim)
                    command.Parameters.AddWithValue("@CallAmt", txtCallAmt.Text.Trim)
                    command.Parameters.AddWithValue("@CallNoActual", txtCallNoActual.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNo", txtUnitNo.Text.Trim)
                    command.Parameters.AddWithValue("@UnitBal", txtUnitBal.Text.Trim)
                    command.Parameters.AddWithValue("@UnitAmt", txtUnitAmt.Text.Trim)
                    command.Parameters.AddWithValue("@UnitNoActual", txtUnitNoActual.Text.Trim)

                    command.Parameters.AddWithValue("@CompensateMax", txtCompensateMax.Text.Trim)
                    command.Parameters.AddWithValue("@CompensatePct", txtCompensatePct.Text.Trim)

                    command.Parameters.AddWithValue("@AmtCompleted", txtAmtCompleted.Text.Trim)
                    'command.Parameters.AddWithValue("@AmtBalance", txtAmtBalance.Text.Trim)
                    command.Parameters.AddWithValue("@AmtBalance", txtServiceAmtBal.Text.Trim)

                    If String.IsNullOrEmpty(txtValPerMnth.Text) = True Then
                        command.Parameters.AddWithValue("@ValuePerMonth", 0.0)
                    Else
                        command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                    End If

                    If String.IsNullOrEmpty(txtBillingAmount.Text) = True Then
                        command.Parameters.AddWithValue("@BillingAmount", 0.0)
                    Else
                        command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@ValuePerMonth", txtValPerMnth.Text.Trim)
                    'command.Parameters.AddWithValue("@BillingAmount", txtBillingAmount.Text.Trim)

                    If txtActualEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ActualEnd", Convert.ToDateTime(txtActualEnd.Text).ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim)

                    If ChkWithWarranty.Checked = True Then
                        command.Parameters.AddWithValue("@Warranty", "Y")
                    Else
                        command.Parameters.AddWithValue("@Warranty", "N")
                    End If

                    command.Parameters.AddWithValue("@WarrantyDuration", txtWarrDurtion.Text.Trim)

                    If ChkRequireInspection.Checked = True Then
                        command.Parameters.AddWithValue("@RequireInspecton", "Y")
                    Else
                        command.Parameters.AddWithValue("@RequireInspecton", "N")
                    End If



                    If ddlInspectionFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@InspectionFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@InspectionFrequency", ddlInspectionFrequency.SelectedValue.ToString)
                    End If


                    If TxtInspectionStart.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionStart", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionStart", Convert.ToDateTime(TxtInspectionStart.Text).ToString("yyyy-MM-dd"))

                    End If

                    If TxtInspectionEnd.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@InspectionEnd", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@InspectionEnd", Convert.ToDateTime(TxtInspectionEnd.Text).ToString("yyyy-MM-dd"))

                    End If

                    If rbtComputationMethod.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ComputationMethod", "Monthly")
                    Else
                        command.Parameters.AddWithValue("@ComputationMethod", "Fixed")
                    End If


                    If String.IsNullOrEmpty(txtRetentionPerc.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionPerc", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionPerc", Convert.ToDecimal(txtRetentionPerc.Text))
                    End If

                    If String.IsNullOrEmpty(txtRetentionValue.Text) = True Then
                        command.Parameters.AddWithValue("@RetentionValue", 0.0)
                    Else
                        command.Parameters.AddWithValue("@RetentionValue", Convert.ToDecimal(txtRetentionValue.Text))
                    End If

                    'command.Parameters.AddWithValue("@RetentionPerc", txtRetentionPerc.Text)
                    'command.Parameters.AddWithValue("@RetentionValue", txtRetentionValue.Text)
                    If txtRetentionReleaseDate.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@RetentionClaimDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@RetentionClaimDate", Convert.ToDateTime(txtRetentionReleaseDate.Text).ToString("yyyy-MM-dd"))
                    End If


                    command.Parameters.AddWithValue("@Industry", ddlIndustry.Text.ToUpper)
                    command.Parameters.AddWithValue("@BillAddress1", Left(lAddress1.ToUpper.Trim, 100))
                    command.Parameters.AddWithValue("@BillTelephone", lTelephone)
                    command.Parameters.AddWithValue("@BillMobile", lMobile)
                    command.Parameters.AddWithValue("@BillFax", lFax.ToUpper)
                    command.Parameters.AddWithValue("@BillContactPerson", lContactPerson.ToUpper)

                    command.Parameters.AddWithValue("@PONo", txtPONo.Text.ToUpper)
                    command.Parameters.AddWithValue("@ServiceAddress", txtServiceAddressCons.Text.ToUpper)


                    If ddlProjectCode.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ProjectCode", "")
                        command.Parameters.AddWithValue("@ProjectName", "")
                    Else
                        command.Parameters.AddWithValue("@ProjectCode", Left(ddlProjectCode.Text, 17).ToUpper)
                        command.Parameters.AddWithValue("@ProjectName", Mid(ddlProjectCode.Text, 21, 50).ToUpper)
                    End If


                    command.Parameters.AddWithValue("@BaitStationTotal", txtBaitStationTotal.Text)

                    'If String.IsNullOrEmpty(ddlWarrantyFrequency.Text) = True Then
                    If ddlWarrantyFrequency.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", "")
                    Else
                        command.Parameters.AddWithValue("@WarrantyBillingFrequency", ddlWarrantyFrequency.Text)
                    End If

                    command.Parameters.AddWithValue("@WarrantyBillingAmount", txtWarrantyBillingAmount.Text)
                    command.Parameters.AddWithValue("@AgreementType", ddlAgreementType.Text)

                    'command.Parameters.AddWithValue("@OfficeAddress", txtOfficeAddress.Text.Trim)

                    'command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
                    'command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                    'command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)
                    'command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
                    'command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim)
                    'command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim)
                    'command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim)
                    'command.Parameters.AddWithValue("@Comments", txtServInst.Text.Trim)

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    'SASI - Industry Segment 28/04/2017

                    If ddlServiceTypeID.SelectedIndex = 0 Then
                        command.Parameters.AddWithValue("@ServiceTypeID", "")
                        command.Parameters.AddWithValue("@ServiceTypedescription", "")
                    Else
                        command.Parameters.AddWithValue("@ServiceTypeID", Left(ddlServiceTypeID.Text, 4).ToUpper)
                        command.Parameters.AddWithValue("@ServiceTypedescription", Mid(ddlServiceTypeID.Text, 8, 65).ToUpper)
                    End If

                    'If ddlCategoryID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@CategoryID", "")
                    'Else
                    command.Parameters.AddWithValue("@CategoryID", txtCategoryID.Text.Trim)
                    'End If

                    If ddlPortfolioYN.SelectedItem.Text = "YES" Then
                        command.Parameters.AddWithValue("@PortfolioYN", 1)
                    Else
                        command.Parameters.AddWithValue("@PortfolioYN", 0)
                    End If

                    If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                        command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                    Else
                        command.Parameters.AddWithValue("@PortfolioValue", Convert.ToDecimal(txtPortfolioValue.Text))
                    End If


                    If String.IsNullOrEmpty(ddlMarketSegmentID.Text) = True Then
                        command.Parameters.AddWithValue("@MarketSegmentID", "")
                    Else
                        command.Parameters.AddWithValue("@MarketSegmentID", ddlMarketSegmentID.Text.Trim)
                    End If

                    If String.IsNullOrEmpty(txtTotalArea.Text) = True Then
                        command.Parameters.AddWithValue("@TotalArea", 0.0)
                    Else
                        command.Parameters.AddWithValue("@TotalArea", txtTotalArea.Text)
                    End If

                    If String.IsNullOrEmpty(txtLocation.Text) = True Then
                        command.Parameters.AddWithValue("@Location", "")
                    Else
                        command.Parameters.AddWithValue("@Location", txtLocation.Text)
                    End If


                    If chkAutoRenew.Checked = True Then
                        command.Parameters.AddWithValue("@AutoRenew", "Y")
                    Else
                        command.Parameters.AddWithValue("@AutoRenew", "N")
                    End If

                    command.Parameters.AddWithValue("@FixedContinuous", rbtFixedContinuous.SelectedValue.ToString)

                    If txtEndofLastSchedule.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@EndofLastSchedule", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@EndofLastSchedule", Convert.ToDateTime(txtEndofLastSchedule.Text).ToString("yyyy-MM-dd"))
                    End If

                    'Dim index As Integer = ddlServiceTypeID.SelectedItem.Text.IndexOf("-")
                    'Dim st As String = ddlServiceTypeID.SelectedItem.Text.Substring(1, index - 2)

                    'If ddlServiceTypeID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@ServiceTypeID", "")
                    '    command.Parameters.AddWithValue("@ServiceTypedescription", "")
                    'Else
                    '    command.Parameters.AddWithValue("@ServiceTypeID", st.Trim)
                    '    command.Parameters.AddWithValue("@ServiceTypedescription", ddlServiceTypeID.SelectedValue.Trim)
                    'End If

                    'If ddlCategoryID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@CategoryID", "")
                    'Else
                    '    command.Parameters.AddWithValue("@CategoryID", ddlCategoryID.Text.Trim)
                    'End If

                    'If ddlPortfolioYN.SelectedItem.Text = "YES" Then
                    '    command.Parameters.AddWithValue("@PortfolioYN", 1)
                    'Else
                    '    command.Parameters.AddWithValue("@PortfolioYN", 0)
                    'End If

                    'If String.IsNullOrEmpty(txtPortfolioValue.Text) = True Then
                    '    command.Parameters.AddWithValue("@PortfolioValue", 0.0)
                    'Else
                    '    command.Parameters.AddWithValue("@PortfolioValue", Convert.ToDecimal(txtPortfolioValue.Text))
                    'End If


                    'If ddlMarketSegmentID.SelectedIndex = 0 Then
                    '    command.Parameters.AddWithValue("@MarketSegmentID", "")
                    'Else
                    '    command.Parameters.AddWithValue("@MarketSegmentID", ddlMarketSegmentID.Text.Trim)
                    'End If

                    'SASI - End Industry Segment

                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtOurRef.Text).ToString("yyyy-MM-dd"))
                    command.Connection = conn
                    command.ExecuteNonQuery()
                    ''MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")

                    'Dim message As String = "alert('Record updated successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)



                    'Start:  Delete Detail Records if different AccountId

                    'Dim conn As MySqlConnection = New MySqlConnection()

                    'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    'conn.Open()

                    'Dim command1 As MySqlCommand = New MySqlCommand
                    'command1.CommandType = CommandType.Text

                    'Dim qry1 As String = "DELETE from tblContract where ContractNo= @ContractNo "

                    'command1.CommandText = qry1
                    'command1.Parameters.Clear()

                    'command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    'command1.Connection = conn
                    'command1.ExecuteNonQuery()

                    If txtOriginalAccountId.Text <> txtAccountId.Text Then
                        Dim command2 As MySqlCommand = New MySqlCommand
                        command2.CommandType = CommandType.Text

                        Dim qry2 As String = "DELETE from tblContractDet where ContractNo= @ContractNo "

                        command2.CommandText = qry2
                        command2.Parameters.Clear()

                        command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command2.Connection = conn
                        command2.ExecuteNonQuery()
                        command2.Dispose()


                        Dim command3 As MySqlCommand = New MySqlCommand
                        command3.CommandType = CommandType.Text

                        Dim qry3 As String = "DELETE from tblContractServingTarget where ContractNo= @ContractNo "

                        command3.CommandText = qry3
                        command3.Parameters.Clear()

                        command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command3.Connection = conn
                        command3.ExecuteNonQuery()
                        command3.Dispose()

                        Dim command4 As MySqlCommand = New MySqlCommand
                        command4.CommandType = CommandType.Text

                        Dim qry4 As String = "DELETE from tblServiceContractFrequency where ContractNo= @ContractNo "

                        command4.CommandText = qry4
                        command4.Parameters.Clear()

                        command4.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command4.Connection = conn
                        command4.ExecuteNonQuery()
                        command4.Dispose()
                    End If


                    'Dim message As String = "alert('Contract is deleted Successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    'lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                    'btnADD_Click(sender, e)
                    'GridView1.DataBind()

                    'End:  Delete Detail Records if different AccountId 


                    ''Start: Generate Credit Note

                    'If chkGenerateCreditNote.Checked = True Then
                    '    GenerateCNNo()


                    '    ''''''''''''''''''''''''''
                    '    Dim sqlCN As String
                    '    sqlCN = ""
                    '    sqlCN = "Select ProductCode, Description, COACode, COADescription from tblbillingproducts where ProductCode = 'IN-ODT'"

                    '    Dim command10 As MySqlCommand = New MySqlCommand
                    '    command10.CommandType = CommandType.Text
                    '    command10.CommandText = sqlCN
                    '    command10.Connection = conn

                    '    Dim dr10 As MySqlDataReader = command10.ExecuteReader()

                    '    Dim dt10 As New DataTable
                    '    dt10.Load(dr10)
                    '    Dim ARDescription10 As String
                    '    Dim ARCode10 As String
                    '    Dim ProductCode As String

                    '    ARDescription10 = ""
                    '    ARCode10 = ""
                    '    ProductCode = ""

                    '    If dt10.Rows.Count > 0 Then
                    '        If dt10.Rows(0)("Description").ToString <> "" Then : ARDescription10 = dt10.Rows(0)("Description").ToString : End If
                    '        If dt10.Rows(0)("COACode").ToString <> "" Then : ARCode10 = dt10.Rows(0)("COACode").ToString : End If
                    '        If dt10.Rows(0)("ProductCode").ToString <> "" Then : ProductCode = dt10.Rows(0)("ProductCode").ToString : End If
                    '    End If

                    '    ''''''''''''''''''''''''''

                    '    qry = "INSERT INTO tblcn(CNNumber, CustomerName, AccountId,   "
                    '    qry = qry + "  CNDate, Cheque, ChequeDate, BankId, LedgerCode, LedgerName,  PaymentType, ContractNo, ItemCode, ItemDescription,  "
                    '    qry = qry + " BaseAmount, GSTAmount,  NetAmount, BankAmount, Comments, ContactType, CompanyGroup, GLPeriod, ModuleType, Salesman, "
                    '    qry = qry + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    '    qry = qry + " (@CNNumber, @CustomerName, @AccountId,  "
                    '    qry = qry + " @CNDate, @Cheque, @ChequeDate, @BankId, @LedgerCode, @LedgerName,  @PaymentType, @ContractNo, @ItemCode, @ItemDescription, "
                    '    qry = qry + " @BaseAmount, @GSTAmount,  @NetAmount, @BankAmount, @Comments, @ContactType, @CompanyGroup, @GLPeriod, @ModuleType, @Salesman, "
                    '    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"


                    '    Dim commandCN As MySqlCommand = New MySqlCommand

                    '    commandCN.CommandType = CommandType.Text
                    '    commandCN.CommandText = qry
                    '    commandCN.Parameters.Clear()

                    '    commandCN.Parameters.AddWithValue("@CNNumber", txtCNNo.Text)
                    '    commandCN.Parameters.AddWithValue("@CustomerName", txtCustName.Text)
                    '    commandCN.Parameters.AddWithValue("@AccountId", txtAccountId.Text)

                    '    If String.IsNullOrEmpty(txtContractDate.Text.Trim) = True Then
                    '        commandCN.Parameters.AddWithValue("@CNDate", DBNull.Value)
                    '    Else
                    '        commandCN.Parameters.AddWithValue("@CNDate", Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd"))
                    '    End If

                    '    'command.Parameters.AddWithValue("@ReceiptDate", Convert.ToDateTime(txtReceiptDate.Text))
                    '    'command.Parameters.AddWithValue("@BillAmount", 0.0)
                    '    commandCN.Parameters.AddWithValue("@ItemCode", ProductCode)
                    '    commandCN.Parameters.AddWithValue("@ItemDescription", ARDescription10)
                    '    commandCN.Parameters.AddWithValue("@Comments", "")
                    '    commandCN.Parameters.AddWithValue("@Cheque", "")
                    '    commandCN.Parameters.AddWithValue("@PaymentType", "")
                    '    commandCN.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)

                    '    'If String.IsNullOrEmpty(txtChequeDate.Text.Trim) = True Then
                    '    commandCN.Parameters.AddWithValue("@ChequeDate", DBNull.Value)
                    '    'Else
                    '    '    command.Parameters.AddWithValue("@ChequeDate", Convert.ToDateTime(txtChequeDate.Text).ToString("yyyy-MM-dd"))
                    '    'End If


                    '    commandCN.Parameters.AddWithValue("@BaseAmount", 0.0)
                    '    commandCN.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    'command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    commandCN.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtRetentionValue.Text))
                    '    commandCN.Parameters.AddWithValue("@BankAmount", 0.0)

                    '    commandCN.Parameters.AddWithValue("@BankId", "")
                    '    commandCN.Parameters.AddWithValue("@LedgerCode", "")
                    '    commandCN.Parameters.AddWithValue("@LedgerName", "")
                    '    commandCN.Parameters.AddWithValue("@ModuleType", "CNPB")

                    '    If ddlSalesman.Text = "-1" Then
                    '        command.Parameters.AddWithValue("@Salesman", "")
                    '    Else
                    '        command.Parameters.AddWithValue("@Salesman", ddlSalesman.Text)
                    '    End If

                    '    commandCN.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                    '    commandCN.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGrp.Text)
                    '    commandCN.Parameters.AddWithValue("@GLPeriod", txtCNPeriod.Text)


                    '    commandCN.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    '    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '    'commandCN.Parameters.AddWithValue("@CreatedOn", Now)
                    '    commandCN.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    '    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    '    'commandCN.Parameters.AddWithValue("@LastModifiedOn", Now)

                    '    commandCN.Connection = conn
                    '    commandCN.ExecuteNonQuery()

                    '    Dim sqlLastId As String
                    '    sqlLastId = "SELECT last_insert_id() from tblCN"

                    '    Dim commandRcno As MySqlCommand = New MySqlCommand
                    '    commandRcno.CommandType = CommandType.Text
                    '    commandRcno.CommandText = sqlLastId
                    '    commandRcno.Parameters.Clear()
                    '    commandRcno.Connection = conn
                    '    txtRcnoCN.Text = commandRcno.ExecuteScalar()
                    'End If

                    ''End: Generate Credit Note

                    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                DisableControls()
                txtMode.Text = ""
                command1.Dispose()

            End If


                'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then

                '    If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                '        txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                '    End If

                '    SQLDSContract.SelectCommand = txt.Text
                '    GridView1.DataSourceID = "SqlDSContract"
                '    GridView1.DataBind()
                '    GridView1.SelectedIndex = 0
                '    'GridView1.DataSourceID = "SQLDSContract"
                'Else
                '    If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                '        GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                '        GridSelected = "SQLDSContractClientIdLocation"
                '    ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '        GridView1.DataSourceID = "SQLDSContractClientId"
                '        GridSelected = "SQLDSContractClientId"
                '    ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                '        txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                '        SQLDSContract.SelectCommand = txt.Text
                '        GridView1.DataSourceID = "SqlDSContract"
                '        GridView1.DataBind()
                '        GridView1.SelectedIndex = 0
                '    End If

                'End If


                'If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then

                'If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                '    txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text
                'End If

                'SQLDSContract.SelectCommand = txt.Text
                'GridView1.DataSourceID = "SqlDSContract"
                'GridView1.DataBind()
                'GridView1.SelectedIndex = 0
                ''GridView1.DataSourceID = "SQLDSContract"
                'Else

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then

                    Dim ContractClientIdLocation As String = ""

                    ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId, tblContract.Location,  "
                ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous  from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                    ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                    ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation

                    GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                    GridSelected = "SQLDSContractClientIdLocation"
                ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    Dim ContractClientId As String = ""

                    ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, AmtBalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientId.SelectCommand = ContractClientId

                    GridView1.DataSourceID = "SQLDSContractClientId"
                    GridSelected = "SQLDSContractClientId"
                ElseIf String.IsNullOrEmpty(lblAccountIdContact1.Text) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = True Then
                    'txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where ContractNo = '" & txtContractNo.Text & "' order by rcno desc, CustName limit " & txtLimit.Text

                'If txtDisplayRecordsLocationwise.Text = "N" Then
                txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId,"
                'txt.Text = txt.Text & "  A.InchargeId,"
                txt.Text = txt.Text & " A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.Scheduler, "
                txt.Text = txt.Text & " A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, "
                txt.Text = txt.Text & " A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous  "
                txt.Text = txt.Text & " From tblContract A where A.ContractNo = '" & txtContractNo.Text & "'"
                'End If


                'If txtDisplayRecordsLocationwise.Text = "Y" Then
                '    txt.Text = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId,"
                '    'txt.Text = txt.Text & "  A.InchargeId,"
                '    txt.Text = txt.Text & " A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.Scheduler, "
                '    txt.Text = txt.Text & " A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, "
                '    txt.Text = txt.Text & " A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno  "
                '    'txt.Text = txt.Text & " From tblContract A where A.ContractNo = '" & txtContractNo.Text & "'"
                '    txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
                '    txt.Text = txt.Text & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                'End If

                'txt.Text = "select Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, "
                '    txt.Text = txt.Text & " AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress, Scheduler, "
                '    txt.Text = txt.Text & " ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, "
                'txt.Text = txt.Text & " OContractNo, Renewaldate, TeamId, AmtBalance, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  "
                '    txt.Text = txt.Text & " From tblContract where ContractNo = '" & txtContractNo.Text & "'"

                'If txtDisplayRecordsLocationwise.Text = "Y" Then
                '    txt.Text = txt.Text & " and Location = '" & txtLocation.Text & "'"
                'End If
                txt.Text = txt.Text & " order by A.rcno desc, A.CustName limit " & txtLimit.Text


                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()
                GridView1.SelectedIndex = 0
            End If

            'End If
            GridView1.DataBind()

            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()

            lblContractNo.Text = txtContractNo.Text
            'lblAccountID.Text = txtClient.Text
            lblAccountID.Text = txtAccountId.Text
            txtAccountIdSelection.Text = lblAccountID.Text
            lblName.Text = txtCustName.Text


            btnSvcEdit.Enabled = False
            btnSvcDelete.Enabled = False
            btnSvcEdit.ForeColor = System.Drawing.Color.Gray
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray

            If txtGS.Text = "O" Then
          
            End If
            If txtMode.Text = "NEW" And txtModeRenew.Text = "" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                txtMode.Text = ""
            ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "R" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtOContract.Text & " HAS BEEN RENEWED TO " & txtContractNo.Text, txtRcno.Text)
                txtMode.Text = ""
            ElseIf txtMode.Text = "NEW" And txtModeRenew.Text = "REV" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "CONTRACT " & txtPrevContract.Text & " HAS BEEN REVISED TO " & txtContractNo.Text, txtRcno.Text)
                txtMode.Text = ""
            Else
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, 0, 0, txtAccountId.Text, "", txtRcno.Text)
            End If

            btnSave.Text = "SAVE"

           


        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SaveContract", ex.Message.ToString, txtContractNo.Text)
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            btnSave.Text = "Save"
            Exit Sub
        End Try
    End Sub


    Private Sub UpdateSignedAgreementReference(PrevContract As String, Rcno As Long)
        Dim lPrevContractNo = ""
        Dim lNewRcno = 0

        lPrevContractNo = PrevContract
        lNewRcno = Rcno


        Dim connSignedAgreementReference As MySqlConnection = New MySqlConnection()

        connSignedAgreementReference.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connSignedAgreementReference.Open()

        Dim commandSignedAgreementReference As MySqlCommand = New MySqlCommand

        commandSignedAgreementReference.CommandType = CommandType.Text
        commandSignedAgreementReference.CommandText = "SELECT SignedServiceAgreement FROM tblContract where ContractNo ='" & PrevContract & "' and SignedServiceAgreement =True"
        commandSignedAgreementReference.Connection = connSignedAgreementReference

        Dim dr As MySqlDataReader = commandSignedAgreementReference.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            'txtLocation.Text = dt.Rows(0)("LocationID").ToString

            '''''''''''''

            Dim commandSignedAgreementReferenceUpdate As MySqlCommand = New MySqlCommand
            commandSignedAgreementReferenceUpdate.CommandType = CommandType.Text

            Dim qrySignedAgreementReference As String = "Update tblContract set  SignedServiceAgreement = True, SignedAgreementReference = @PrevContractNo where rcno = @lNewRcno  "

            commandSignedAgreementReferenceUpdate.CommandText = qrySignedAgreementReference
            commandSignedAgreementReferenceUpdate.Parameters.Clear()

            commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@lNewRcno", lNewRcno)
            'commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@RenewalDate", Convert.ToDateTime(txtCreatedOn.Text))
            commandSignedAgreementReferenceUpdate.Parameters.AddWithValue("@PrevContractNo", lPrevContractNo.Trim)
            commandSignedAgreementReferenceUpdate.Connection = connSignedAgreementReference
            commandSignedAgreementReferenceUpdate.ExecuteNonQuery()

            commandSignedAgreementReferenceUpdate.Dispose()

            txtSignedAgreementReference.Text = "Signed Service Agreement Refer To  " & lPrevContractNo.Trim
            ''''''''''''''''

        End If

        connSignedAgreementReference.Close()
        connSignedAgreementReference.Dispose()
        commandSignedAgreementReference.Dispose()
        dr.Close()
        dt.Dispose()
    End Sub

    Private Sub GenerateCNNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtContractDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")
            lInvoiceNo = "ARCN" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "ARCN" + lYear
            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then


                If lMonth = "01" Then
                    lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "02" Then
                    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "03" Then
                    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "04" Then
                    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "05" Then
                    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "06" Then
                    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "07" Then
                    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "08" Then
                    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "09" Then
                    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "10" Then
                    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "11" Then
                    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                ElseIf lMonth = "12" Then
                    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                    lSetWidth = dt.Rows(0)("Width").ToString
                    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)
            Else

                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If

                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                            "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1


            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtCNNo.Text = lInvoiceNo + lSuffix

            txtCNPeriod.Text = Year(Convert.ToDateTime(txtContractDate.Text)) & Format(Month(Convert.ToDateTime(txtContractDate.Text)), "00")

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION GenerateCNNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    'Pop-up

    Private Sub GenerateClientAlphabets()
        Dim alphabets As New List(Of ListItem)()
        Dim alphabet As New ListItem()
        alphabet.Value = "A"
        alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
        alphabets.Add(alphabet)
        For i As Integer = 66 To 90
            alphabet = New ListItem()
            alphabet.Value = [Char].ConvertFromUtf32(i)
            alphabet.Selected = alphabet.Value.Equals(ViewState("ClientCurrentAlphabet"))
            alphabets.Add(alphabet)
        Next
        rptClientAlphabets.DataSource = alphabets
        rptClientAlphabets.DataBind()
    End Sub

    Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
        'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        'select another alphabet ---records are not selected

        Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
        Me.GenerateClientAlphabets()
        

        If txtPopUpClient.Text.Trim = "" Then
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
            If ddlContactType.SelectedValue.ToString = "COMPANY" Then
                SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
            Else
                SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
            End If

        Else
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
            If ddlContactType.SelectedValue.ToString = "COMPANY" Then
                SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
            Else
                SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
            End If
        End If

        SqlDSClient.DataBind()

        mdlPopUpClient.Show()
    End Sub

   

    Protected Sub TeamAlphabet_Click(sender As Object, e As EventArgs)
        'please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        'select another alphabet ---records are not selected

        Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        ViewState("TeamCurrentAlphabet") = lnkAlphabet.Text
        Me.GenerateTeamAlphabets()
        gvTeam.PageIndex = 0

        If txtPopUpTeam.Text.Trim = "" Then
            SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1 = 1 and TeamName like '" + lnkAlphabet.Text + "%' and status <> 'N';"
        Else
            SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1 =1  and TeamName like '" + lnkAlphabet.Text + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' and status <> 'N';"
        End If

        SqlDSTeam.DataBind()
        gvTeam.DataBind()
        mdlPopUpTeam.Show()
    End Sub

    Private Sub GenerateTeamAlphabets()
        Dim alphabets As New List(Of ListItem)()
        Dim alphabet As New ListItem()
        alphabet.Value = "A"
        alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
        alphabets.Add(alphabet)
        For i As Integer = 66 To 90
            alphabet = New ListItem()
            alphabet.Value = [Char].ConvertFromUtf32(i)
            alphabet.Selected = alphabet.Value.Equals(ViewState("TeamCurrentAlphabet"))
            alphabets.Add(alphabet)
        Next
        rptrTeam.DataSource = alphabets
        rptrTeam.DataBind()
    End Sub


    Protected Sub gvTeam_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvTeam.SelectedIndexChanged
        Try
            txtIsPopup.Text = ""
            If txtTeamSelection.Text = "Search" Then
                txtServiceAddressSearch.Text = ""
                'txtInchargeSearch.Text = ""

                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtServiceAddressSearch.Text = " "
                Else
                    txtServiceAddressSearch.Text = gvTeam.SelectedRow.Cells(1).Text
                End If

                'If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                '    txtInchargeSearch.Text = " "
                'Else
                '    txtInchargeSearch.Text = gvTeam.SelectedRow.Cells(3).Text
                'End If
                'txtInchargeSearch.Focus()

                txtTeamSelection.Text = ""
            Else

                txtTeam.Text = " "
                txtServiceBy.Text = " "
                txtSupervisor.Text = " "
                txtTeamIncharge.Text = " "

                If gvTeam.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    txtTeam.Text = " "
                Else
                    txtTeam.Text = gvTeam.SelectedRow.Cells(1).Text
                End If

                'If gvTeam.SelectedRow.Cells(2).Text = "&nbsp;" Then
                '    txtServiceBy.Text = " "
                'Else
                '    txtServiceBy.Text = gvTeam.SelectedRow.Cells(2).Text
                'End If

                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtServiceBy.Text = " "
                Else
                    txtServiceBy.Text = gvTeam.SelectedRow.Cells(3).Text
                End If


                If gvTeam.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    txtTeamIncharge.Text = " "
                Else
                    txtTeamIncharge.Text = gvTeam.SelectedRow.Cells(3).Text
                End If
                If gvTeam.SelectedRow.Cells(4).Text = "&nbsp;" Then
                    txtSupervisor.Text = " "
                Else
                    txtSupervisor.Text = gvTeam.SelectedRow.Cells(4).Text
                End If

                txtTeam.Focus()

            End If
            txtPopUpTeam.Text = "Search Here for Team or In-ChargeId"
            mdlPopUpTeam.Hide()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvTeam_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub gvTeam_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvTeam.PageIndexChanging
        'gvTeam.PageIndex = e.NewPageIndex

        'If txtPopUpTeam.Text.Trim = "" Then
        '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%'"
        'Else
        '    SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
        'End If

        'SqlDSTeam.DataBind()
        'gvTeam.DataBind()
        'mdlPopUpTeam.Show()
        Try
            gvTeam.PageIndex = e.NewPageIndex

            If txtPopUpTeam.Text.Trim = "Search Here for Team or In-ChargeId" Then
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where  Status <> 'N' order by TeamName "
            Else
                SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and  Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%' order by TeamName"
            End If

            'If txtPopUpClient.Text.Trim = "" Then
            '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster "
            'Else
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

            SqlDSTeam.DataBind()
            gvTeam.DataBind()
            mdlPopUpTeam.Show()
            'End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvTeam_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
                con.Dispose()
                cmd.Dispose()
            End Using
            'End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION PopulateDropDownList", ex.Message.ToString, valueField & txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As Saplin.Controls.DropDownCheckBoxes)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub

    Protected Sub rbtLstDuration_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rbtLstDuration.SelectedIndexChanged
        'If String.IsNullOrEmpty(txtDuration.Text) = True Or Convert.ToInt32(txtDuration.Text) < 1 Then
        '    Dim message As String = "alert('Please Enter Valid Duration Value!!!')"
        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        '    Exit Sub
        'End If
        'pFindContractEndDate()
    End Sub

    Protected Sub txtDuration_TextChanged(sender As Object, e As EventArgs) Handles txtDuration.TextChanged
        'If rbtLstDuration.SelectedIndex = 0 Or rbtLstDuration.SelectedIndex = 1 Or rbtLstDuration.SelectedIndex = 2 Or rbtLstDuration.SelectedIndex = 3 Then
        '    pFindContractEndDate()
        'End If
    End Sub

    Protected Sub txtServEnd_TextChanged(sender As Object, e As EventArgs) Handles txtServEnd.TextChanged
        'TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
    End Sub

    Protected Sub IsServiceDateHoliday()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Holiday FROM tblHoliday where Holiday= '" & Convert.ToDateTime(txtServStart.Text).ToString("yyyy-MM-dd") & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Holiday").ToString <> "" Then
                    txtServStart.ForeColor = Drawing.Color.Red
                End If

            Else
                txtServStart.ForeColor = Drawing.Color.Black
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION IsServiceDateHoliday", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub txtServStart_TextChanged(sender As Object, e As EventArgs) Handles txtServStart.TextChanged
        IsServiceDateHoliday()
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        Try
            'MessageBox.Message.Alert(Page, ddlSearchStatus.Text + " " + txtDDLText.Text, "str")
            'Return
            MakeMeNull()
            Dim qry As String

            If txtDisplayRecordsLocationwise.Text = "N" Then
                qry = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                qry = qry + " A.Scheduler, A.ServiceAddress, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance,A.Location,  A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno  "
                qry = qry + " from tblcontract A where 1 =1 "

            End If

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                qry = "select A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                qry = qry + " A.Scheduler, A.ServiceAddress, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno  "
                qry = qry + " From tblContract A left join tblContractdet B on A.ContractNo=B.ContractNo where A.Status ='O'"
                qry = qry + " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            End If

            ' CategoryID, ServiceAddress, ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno  From tblContract where Status ='O' order by rcno desc, CustName limit " & txtLimit.Text

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    qry = qry & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            'End If

            'txt.Text = txt.Text & " From tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where Status ='O'"
            'txt.Text = txt.Text & " and B.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"


            If String.IsNullOrEmpty(txtSearchID.Text) = False Then
                'txtID.Text = txtSearchID.Text
                qry = qry + " and A.contractno like '%" + txtSearchID.Text + "%'"
            End If
            If (ddlSearchStatus.Text) <> "-1" Then
                If ddlSearchStatus.Text <> txtDDLText.Text Then
                    'ddlStatus.Text = ddlSearchStatus.Text
                    qry = qry + " and A.status = '" + ddlSearchStatus.Text + "'"
                End If
            Else
                qry = qry + " and A.status = 'O'"
            End If


            'If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
            '    'txtNameE.Text = txtSearchCompany.Text
            '    qry = qry + " and custcode like '%" + txtSearchCustCode.Text + "%'"
            'End If

            If String.IsNullOrEmpty(txtSearchCustCode.Text) = False Then
                'txtNameE.Text = txtSearchCompany.Text
                qry = qry + " and A.Accountid like '%" + txtSearchCustCode.Text + "%'"
            End If

            If String.IsNullOrEmpty(txtSearchCompany.Text) = False Then
                txtSearchCompany.Text = txtSearchCompany.Text.Replace("'", "\'")
                qry = qry + " and A.custname like ""%" + txtSearchCompany.Text + "%"""
            End If
            If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
                txtSearchAddress.Text = txtSearchAddress.Text.Replace("'", "\'")
                qry = qry + " and (A.custaddr like '%" + txtSearchAddress.Text + "%')"
                'qry = qry + " or addbuilding like '%" + txtSearchAddress.Text + "%'"
                'qry = qry + " or addstreet like '%" + txtSearchAddress.Text + "%')"
            End If

            If String.IsNullOrEmpty(txtSearchContactNo.Text) = False Then
                'txtNameE.Text = txtSearchCompany.Text
                qry = qry + " and (A.telephone = '" + txtSearchContactNo.Text + "'"
                qry = qry + " or A.contactpersonmobile = '" + txtSearchContactNo.Text + "')"
            End If

            If String.IsNullOrEmpty(txtSearchPostal.Text) = False Then
                'txtPostal.Text = txtSearchPostal.Text
                qry = qry + " and A.postal  = '" + txtSearchPostal.Text + "'"
            End If
            If String.IsNullOrEmpty(txtSearchContact.Text) = False Then
                qry = qry + " and A.contact like '%" + txtSearchContact.Text + "%'"

            End If
            If (ddlSearchSalesman.Text) <> "-1" Then

                qry = qry + " and A.salesman  = '" + ddlSearchSalesman.Text.Trim + "'"
            End If
            If (ddlSearchContactType.Text) <> "-1" Then
                'If ddlSearchContactType.Text <> txtDDLText.Text Then
                qry = qry + " and A.ContactType  = '" + ddlSearchContactType.Text + "'"
                'End If
            End If
            If (ddlSearchScheduler.Text) <> "-1" Then
                qry = qry + " and A.Scheduler  = '" + ddlSearchScheduler.Text + "'"
            End If


            If (ddlSearchInChargeId.Text) <> "-1" Then
                qry = qry + " and Inchargeid = '" + ddlSearchInChargeId.Text + "'"
            End If

            If (ddlSearchContractGroup.Text) <> "-1" Then
                qry = qry + " and A.ContractGroup  = '" + ddlSearchContractGroup.Text + "'"
            End If

            If (ddlSearchCompanyGroup.Text) <> "-1" Then
                qry = qry + " and A.CompanyGroup  = '" + ddlSearchCompanyGroup.Text + "'"
            End If

            If (ddlSearchLocationGroup.Text) <> "-1" Then
                qry = qry + " and A.LocateGRp  = '" + ddlSearchLocationGroup.Text + "'"
            End If


            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                'txtPostal.Text = txtSearchPostal.Text
                qry = qry + " and A.ourreference  = '" + txtSearchOurRef.Text + "'"
            End If


            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                qry = qry + " and A.yourreference  = '" + txtSearchYourRef.Text + "'"
            End If



            If String.IsNullOrEmpty(txtSearchContractDateFrom.Text) = False And IsDate(txtSearchContractDateFrom.Text) Then
                qry = qry + " and A.ContractDate>= '" + Convert.ToDateTime(txtSearchContractDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchContractDateTo.Text) = False And IsDate(txtSearchContractDateTo.Text) Then
                qry = qry + " and A.ContractDate  <= '" + Convert.ToDateTime(txtSearchContractDateTo.Text).ToString("yyyy-MM-dd") & "'"

            End If


            If String.IsNullOrEmpty(txtSearchStartDateFrom.Text) = False And IsDate(txtSearchStartDateFrom.Text) Then
                qry = qry + " and A.StartDate  >= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchStartDateTo.Text) = False And IsDate(txtSearchStartDateTo.Text) Then
                qry = qry + " and A.StartDate  <= '" + Convert.ToDateTime(txtSearchStartDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchEndDateFrom.Text) = False And IsDate(txtSearchEndDateFrom.Text) Then
                qry = qry + " and A.EndDate  >= '" + Convert.ToDateTime(txtSearchEndDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchEndDateTo.Text) = False And IsDate(txtSearchEndDateTo.Text) Then
                qry = qry + " and A.EndDate  <= '" + Convert.ToDateTime(txtSearchEndDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If



            If String.IsNullOrEmpty(txtSearchServiceStartFrom.Text) = False And IsDate(txtSearchServiceStartFrom.Text) Then
                qry = qry + " and A.ServiceStart  >= '" + Convert.ToDateTime(txtSearchServiceStartFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchServiceStartTo.Text) = False And IsDate(txtSearchServiceStartTo.Text) Then
                qry = qry + " and A.ServiceStart  <= '" + Convert.ToDateTime(txtSearchServiceStartTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchServiceEndFrom.Text) = False And IsDate(txtSearchServiceEndFrom.Text) Then
                qry = qry + " and A.ServiceEnd  >= '" + Convert.ToDateTime(txtSearchServiceEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchServiceEndTo.Text) = False And IsDate(txtSearchServiceEndTo.Text) Then
                qry = qry + " and A.ServiceEnd  <= '" + Convert.ToDateTime(txtSearchServiceEndTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
                qry = qry + " and A.ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
                qry = qry + " and A.ActualEnd  <= '" + Convert.ToDateTime(txtSearchActualEndTo.Text).ToString("yyyy-MM-dd") & "'"
            End If


            If String.IsNullOrEmpty(txtSearchActualEndFrom.Text) = False And IsDate(txtSearchActualEndFrom.Text) Then
                qry = qry + " and A.ActualEnd  >= '" + Convert.ToDateTime(txtSearchActualEndFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchActualEndTo.Text) = False And IsDate(txtSearchActualEndTo.Text) Then
                qry = qry + " and A.ActualEnd  <= '" + Convert.ToDateTime(txtSearchStartDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If



            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And IsDate(txtSearchEntryDateFrom.Text) Then
                qry = qry + " and A.EntryDate  >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And IsDate(txtSearchEntryDateTo.Text) Then
                qry = qry + " and A.EntryDate  <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") & "'"
            End If

            '''''''''''''''''''''''''''

            'If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            'End If
            'If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            'End If


            If String.IsNullOrEmpty(txtSearchModifiedDateFrom.Text) = False And txtSearchModifiedDateFrom.Text <> "__/__/____" Then
                qry = qry + +" and A.LastModifiedOn >= '" + Convert.ToDateTime(txtSearchModifiedDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchModifiedDateTo.Text) = False And txtSearchModifiedDateTo.Text <> "__/__/____" Then
                qry = qry + +" and A.LastModifiedOn <= '" + Convert.ToDateTime(txtSearchModifiedDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                qry = qry + " and A.LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                qry = qry + " and A.CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If (ddlSearchGenerateScheduleStatus.SelectedIndex > 0) Then
                qry = qry + " and A.GST = '" & Left(ddlSearchGenerateScheduleStatus.Text.Trim, 1) + "'"
            End If

            '''''''''''''''''''''''''''''

            qry = qry + " order by A.custname;"
            txt.Text = qry

            SQLDSContract.SelectCommand = qry
            SQLDSContract.DataBind()
            GridView1.DataBind()
            txtSearchID.Text = ""
            GridSelected = "SQLDSContract"

            lblAccountIdContact.Visible = False
            lblAccountIdContact1.Visible = False
            'lblAccountIdContact1.Text = ""

            lblAccountIdContactLocation.Visible = False
            lblAccountIdContactLocation1.Visible = False
            'lblAccountIdContactLocation1.Text = ""

            txtSearchCustCode.Text = ""
            txtSearchCompany.Text = ""
            txtSearchAddress.Text = ""
            txtSearchContact.Text = ""
            txtSearchContactNo.Text = ""
            txtSearchPostal.Text = ""

            txtSearchOurRef.Text = ""
            txtSearchYourRef.Text = ""

            ddlSearchSalesman.ClearSelection()
            ddlSearchScheduler.ClearSelection()
            ddlSearchStatus.ClearSelection()
            ddlSearchContractGroup.ClearSelection()
            ddlSearchCompanyGroup.ClearSelection()
            ddlSearchLocationGroup.ClearSelection()
            ddlSearchRenewalStatus.ClearSelection()
            ddlSearchInChargeId.ClearSelection()

            txtSearchContractDateFrom.Text = ""
            txtSearchContractDateTo.Text = ""
            txtSearchServiceStartFrom.Text = ""
            txtSearchServiceStartTo.Text = ""
            txtSearchServiceEndFrom.Text = ""
            txtSearchServiceEndTo.Text = ""
            txtSearchActualEndFrom.Text = ""
            txtSearchActualEndTo.Text = ""

            txtSearchStartDateFrom.Text = ""
            txtSearchStartDateTo.Text = ""

            txtSearchEndDateFrom.Text = ""
            txtSearchEndDateTo.Text = ""
            txtSearchEntryDateFrom.Text = ""
            txtSearchEntryDateTo.Text = ""

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSearch_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub btnQuit_Click(sender As Object, e As EventArgs) Handles btnQuit.Click

        If Session("contracttype") = "CORPORATE" Then

            Session("contractfrom") = "clients"
            Session("accountid") = lblAccountIdContact1.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Company.aspx")
        ElseIf Session("contracttype") = "PERSON" Then
            Session("contractfrom") = "clients"
            Session("accountid") = lblAccountIdContact1.Text
            Session("locationid") = lblAccountIdContactLocation1.Text
            Response.Redirect("Person.aspx")
        Else

            Response.Redirect("Home.aspx")
        End If

    End Sub


    Protected Sub txtServTimeIn_TextChanged(sender As Object, e As EventArgs) Handles txtServTimeIn.TextChanged
        ''If String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
        'If txtServTimeOut.Text <> "__:__" And txtServTimeOut.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeOut.Text) = False Then
        '    Dim datetime1 As DateTime
        '    Dim datetime2 As DateTime
        '    If DateTime.TryParse(txtServTimeIn.Text, datetime1) And DateTime.TryParse(txtServTimeOut.Text, datetime2) Then
        '        Dim difference As TimeSpan = datetime2.Subtract(datetime1)
        '        txtAllocTime.Text = difference.TotalMinutes
        '    Else
        '        Console.WriteLine("Date time is invalid")
        '    End If

        'End If
    End Sub

    Protected Sub txtServTimeOut_TextChanged(sender As Object, e As EventArgs) Handles txtServTimeOut.TextChanged
        'If (txtServTimeIn.Text <> "__:__" And txtServTimeIn.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeIn.Text) = False) And (txtServTimeOut.Text <> "__:__" And txtServTimeOut.Text <> "  :  " And String.IsNullOrEmpty(txtServTimeOut.Text) = False) Then
        '    'If String.IsNullOrEmpty(txtServTimeIn.Text) = False Then
        '    Dim datetime1 As DateTime
        '    Dim datetime2 As DateTime
        '    If DateTime.TryParse(txtServTimeIn.Text, datetime1) And DateTime.TryParse(txtServTimeOut.Text, datetime2) Then
        '        Dim difference As TimeSpan = datetime2.Subtract(datetime1)
        '        txtAllocTime.Text = difference.TotalMinutes
        '    Else
        '        Console.WriteLine("Date time is invalid")
        '    End If
        'End If
    End Sub



    'Protected Sub btnContractEarlyCompletion_Click(sender As Object, e As EventArgs) Handles btnContractEarlyCompletion.Click
    '    Try
    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_value")
    '        If Right(confirmValue, 3) = "Yes" Then
    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndEC.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndEC.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()

    '            End If
    '            '''

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='E', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "


    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndEC.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndEC.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsEC.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()


    '            'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")


    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '            ''''''
    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsEC.Text
    '            txtStatus.Text = "E"

    '            txtActualEndEC.Text = ""
    '            txtCommentsEC.Text = ""
    '            ''''''
    '            ModalPopupExtender2.Hide()
    '        Else
    '            ModalPopupExtender2.Show()
    '        End If



    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Protected Sub btnContractTerminate_Click(sender As Object, e As EventArgs) Handles btnContractTerminate.Click
    '    Try


    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_valueT")
    '        If Right(confirmValue, 3) = "Yes" Then

    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndT.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndT.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()
    '            End If

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "


    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndT.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndT.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsT.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()

    '            'Dim message As String = "alert('Contract Terminated successfully!!!!!!')"
    '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsT.Text
    '            txtStatus.Text = "T"

    '            txtActualEndT.Text = ""
    '            txtCommentsT.Text = ""


    '            ModalPopupExtender3.Hide()
    '        Else
    '            ModalPopupExtender3.Show()
    '        End If

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    'Protected Sub btnCancelledByCompany_Click(sender As Object, e As EventArgs) Handles btnCancelledByCompany.Click
    '    Try
    '        'If String.IsNullOrEmpty(txtActualEndC.Text) = True Then
    '        '    Dim message As String = "alert('Please Select Completion Date!!!!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    Exit Sub

    '        'End If

    '        'If IsDate(txtActualEndC.Text) = False Then
    '        '    Dim message As String = "alert('Please Enteer Valid Date!!!!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    Exit Sub

    '        'End If

    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_valueC")
    '        If Right(confirmValue, 3) = "Yes" Then

    '            Dim strdate As DateTime
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '            conn.Open()

    '            '''
    '            Dim command1 As MySqlCommand = New MySqlCommand

    '            command1.CommandType = CommandType.Text
    '            command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndC.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '            command1.Connection = conn

    '            Dim drservice As MySqlDataReader = command1.ExecuteReader()
    '            Dim dtservice As New DataTable
    '            dtservice.Load(drservice)

    '            If dtservice.Rows.Count > 0 Then
    '                Dim command2 As MySqlCommand = New MySqlCommand
    '                command2.CommandType = CommandType.Text
    '                'Exit Sub
    '                command2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndC.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
    '                command2.Connection = conn
    '                command2.ExecuteNonQuery()
    '            End If

    '            Dim command As MySqlCommand = New MySqlCommand
    '            command.CommandType = CommandType.Text

    '            Dim qry As String = "UPDATE tblContract SET  Status ='X', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,Comments = @Comments where rcno= @rcno "

    '            command.CommandText = qry
    '            command.Parameters.Clear()


    '            If txtActualEndC.Text = "" Then
    '                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
    '            Else
    '                strdate = DateTime.Parse(txtActualEndC.Text.Trim)
    '                command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
    '            End If


    '            command.Parameters.AddWithValue("@Comments", txtCommentsC.Text.Trim)

    '            command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
    '            command.Parameters.AddWithValue("@LastModifiedOn", DateAndTime.Now.ToString)
    '            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command.Connection = conn
    '            command.ExecuteNonQuery()
    '            'Dim message As String = "alert('Contract Cancelled successfully!!!!!!')"
    '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            conn.Close()
    '            Dim message As String = "alert('Contract Updated successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            GridView1.DataBind()
    '            txtServInst.Text = txtCommentsC.Text
    '            txtStatus.Text = "X"

    '            txtActualEndC.Text = ""
    '            txtCommentsC.Text = ""

    '            ModalPopupExtender4.Hide()
    '        Else
    '            ModalPopupExtender4.Show()
    '        End If

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '    End Try
    'End Sub

    Protected Sub btnEarlyCompletion_Click(sender As Object, e As EventArgs) Handles btnEarlyCompletion.Click

        'ModalPopupExtender2.Show()
    End Sub

    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        Try
            GridView1.PageIndex = e.NewPageIndex

            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
                GridView1.DataSourceID = "SQLDSContract"
            ElseIf GridSelected = "SQLDSContractClientId" Then
                SQLDSContractClientId.SelectCommand = txt.Text
                SQLDSContractClientId.DataBind()
                GridView1.DataSourceID = "SQLDSContractClientId"
            ElseIf GridSelected = "SQLDSContractNo" Then
                ''SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
                GridView1.DataSourceID = "SQLDSContractNo"
            Else
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
                GridView1.DataSourceID = "SQLDSContract"
            End If

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub txtSearchContact_TextChanged(sender As Object, e As EventArgs) Handles txtSearchContact.TextChanged

    End Sub

    Protected Sub BtnChSt_Click(sender As Object, e As EventArgs) Handles BtnChSt.Click
        Try
            'If ddlStatusChSt.SelectedIndex = "-1" Then
            '    Dim message As String = "alert('Please Select Status!!!!!!')"
            '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '    Exit Sub

            'End If
            lblAlert.Text = ""
            txtAlertStatus.Text = ""
            'txtAlertStatus.Text = ""
            Dim CountBilledServiceRecords As Integer
            CountBilledServiceRecords = 0

            Dim CountPostedServiceRecords As Integer
            CountPostedServiceRecords = 0


            'If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
            '    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
            '        txtAlertStatus.Visible = True
            '        txtAlertStatus.Text = "Past Date cannot be selected"
            '        ModalPopupExtender5.Show()
            '        Exit Sub
            '    End If

            'End If

            If Left(ddlStatusChSt.Text, 1) <> "R" Then
                If ddlStatusChSt.SelectedIndex = 0 Then
                    'If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Status"
                    ModalPopupExtender5.Show()
                    Exit Sub
                    'End If
                End If
            End If

            If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If


            If txtStatus.Text = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
                GoTo bypassenddatevalidation
            End If
            'Else
            If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                txtAlertStatus.Visible = True
                txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                ModalPopupExtender5.Show()
                Exit Sub
            End If

            'End If

          
                If Left(ddlStatusChSt.Text, 1) = "T" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then


                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
                    '    If txtBackDateContractTerminationSetup.Text = False Then
                    '        txtAlertStatus.Visible = True
                    '        txtAlertStatus.Text = "Past Date cannot be selected"
                    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '        ModalPopupExtender5.Show()
                    '        Exit Sub
                    '    Else
                    '        If String.IsNullOrEmpty(txtBackDateContractTermination.Text) = False Then
                    '            If txtBackDateContractTermination.Text = False Then
                    '                txtAlertStatus.Visible = True
                    '                txtAlertStatus.Text = "Past Date cannot be selected"
                    '                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    '                ModalPopupExtender5.Show()
                    '                Exit Sub
                    '            End If
                    '        End If

                    '    End If
                    'End If



                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then
                    '    If txtBackDateContractTerminationSetup.Text = False Then
                    '        txtAlertStatus.Visible = True
                    '        txtAlertStatus.Text = "Past Date cannot be selected"
                    '         ModalPopupExtender5.Show()
                    '        Exit Sub
                    '    Else
                    '        If txtBackDateContractTermination.Text = False Then
                    '            txtAlertStatus.Visible = True
                    '            txtAlertStatus.Text = "Past Date cannot be selected"
                    '            ModalPopupExtender5.Show()
                    '            Exit Sub
                    '        ElseIf txtBackDateContractTermination.Text = True Then
                    '            If txtBackDateContractTerminationSameMonthOnly.Text = False Then
                    '                txtAlertStatus.Visible = True
                    '                txtAlertStatus.Text = "Past Date cannot be selected"
                    '                ModalPopupExtender5.Show()
                    '                Exit Sub
                    '            ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                    '                If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then
                    '                Else
                    '                    txtAlertStatus.Visible = True
                    '                    txtAlertStatus.Text = "Past Date cannot be selected"
                    '                    ModalPopupExtender5.Show()
                    '                    Exit Sub
                    '                End If
                    '            End If
                    '        End If
                    '    End If
                    'End If


                    ''''''''

                    'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1
                    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                        FindBackDateContractTermination()
                        If txtBackDateContractTerminationSetup.Text = False Then                       '2
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract termination."
                            ModalPopupExtender5.Show()
                            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            If txtBackDateContractTermination.Text = True Then   '3
                                GoTo proceedcontracttermination
                            ElseIf txtBackDateContractTermination.Text = False Then

                                If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                                    txtAlertStatus.Visible = True
                                    txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                                    ModalPopupExtender5.Show()

                                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                    Exit Sub
                                ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                                    If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then  '5
                                    Else
                                        txtAlertStatus.Visible = True
                                        txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                                        ModalPopupExtender5.Show()

                                        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                        Exit Sub
                                    End If '5
                                End If '4
                            End If  '3
                        End If  '2
                    End If      '1

                    '''''''''''''
proceedcontracttermination:
                End If
            End If





bypassenddatevalidation:

            'CalendarExtender2.StartDate = DateTime.Today


            If Left(ddlStatusChSt.Text, 1) <> "O" Then
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Actual End Date"
                    ModalPopupExtender5.Show()
                    Exit Sub
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If ddlTerminationCode.SelectedIndex = 0 Then
                    'lblAlertStatus.Text = "Please Select Termination Code"
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select Termination Code"
                    ModalPopupExtender5.Show()
                    ddlTerminationCode.Attributes.Remove("disabled")
                    Exit Sub
                End If
            End If

            If Left(ddlStatusChSt.Text, 1) = "T" Then
                If String.IsNullOrEmpty(txtCommentChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter Comments"
                    ModalPopupExtender5.Show()
                    Exit Sub

                End If
            End If


            If Left(ddlStatusChSt.Text, 1) = "H" Then


                If ddlOnHoldCodeChSt.SelectedIndex = 0 Then
                    'lblAlertStatus.Text = "Please Select Termination Code"
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Select On-Hold Code"
                    ModalPopupExtender5.Show()
                    ddlOnHoldCodeChSt.Enabled = True
                    'ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                    Exit Sub
                End If


                If String.IsNullOrEmpty(txtOnHoldCommentsChSt.Text) = True Then
                    txtAlertStatus.Visible = True
                    txtAlertStatus.Text = "Please Enter On-Hold Comments"
                    ModalPopupExtender5.Show()
                    Exit Sub

                End If
            End If
            Dim originalStatus As String
            originalStatus = ""

            originalStatus = txtStatus.Text

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_valueChSt")

            If Right(confirmValue, 3) = "Yes" Then

                Dim strdate As DateTime
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim strTerminationCode As String

                strTerminationCode = ""

                If ddlTerminationCode.SelectedIndex > 0 Then
                    strTerminationCode = ddlTerminationCode.Text
                End If
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                'status E=V, T=T, X=V, O, V, C, R, H=H
                'status C, E, H, O, R, T, V, X

                ''''''''''''''''''EXPIRE
                If Left(ddlStatusChSt.Text, 1) = "E" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    Dim commandE1 As MySqlCommand = New MySqlCommand

                    commandE1.CommandType = CommandType.Text
                    commandE1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"
                    commandE1.Connection = conn

                    Dim drservice As MySqlDataReader = commandE1.ExecuteReader()
                    Dim dtservice As New DataTable
                    dtservice.Load(drservice)

                    If dtservice.Rows.Count > 0 Then
                        'ChangeStatus()


                        For x As Integer = 0 To dtservice.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtservice.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecE
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtservice.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecE:
                        Next
                    End If


                    Dim commandE As MySqlCommand = New MySqlCommand
                    commandE.CommandType = CommandType.Text

                    Dim qry As String = "UPDATE tblContract SET  Status ='E', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "


                    commandE.CommandText = qry
                    commandE.Parameters.Clear()


                    If txtActualEndChSt.Text = "" Then
                        commandE.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandE.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandE.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)


                    commandE.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandE.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                    commandE.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)

                    commandE.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    commandE.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandE.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    commandE.Connection = conn
                    commandE.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()

                    txtStatus.Text = "E"
                    commandE.Dispose()
                    commandE1.Dispose()
                    dtservice.Dispose()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    '''''''''''''''''''E

                    '''''''''''''''''''TERMINATE

                ElseIf Left(ddlStatusChSt.Text, 1) = "T" Then


                    Dim commandT1 As MySqlCommand = New MySqlCommand

                    commandT1.CommandType = CommandType.Text
                    'commandT1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    commandT1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    commandT1.Connection = conn

                    Dim drserviceT As MySqlDataReader = commandT1.ExecuteReader()
                    Dim dtserviceT As New DataTable
                    dtserviceT.Load(drserviceT)

                    If dtserviceT.Rows.Count > 0 Then
                        'ChangeStatus()

                        For x As Integer = 0 To dtserviceT.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecT
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''
                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='T' where RecordNo = '" & dtserviceT.Rows(x)("RecordNo").ToString & "'"
                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecT:
                        Next


                    End If

                    Dim commandT As MySqlCommand = New MySqlCommand
                    commandT.CommandType = CommandType.Text

                    Dim qryT As String = "UPDATE tblContract SET  Status ='T', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    commandT.CommandText = qryT
                    commandT.Parameters.Clear()


                    If txtActualEndChSt.Text = "" Then
                        commandT.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandT.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If


                    commandT.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    commandT.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandT.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))
                    commandT.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    commandT.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    commandT.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandT.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    commandT.Connection = conn
                    commandT.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = "T"
                    txtActualEnd.Text = txtActualEndChSt.Text
                    commandT.Dispose()
                    commandT1.Dispose()
                    dtserviceT.Dispose()

                    '' 23.06.19
                    If ddlAgreementType.Text = "RENEWAL" Then

                        '''''
                        Dim commandIsBilled As MySqlCommand = New MySqlCommand

                        commandIsBilled.CommandType = CommandType.Text
                        commandIsBilled.CommandText = "select count(RecordNo) as isServiced from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and Status ='P'"
                        commandIsBilled.Connection = conn

                        Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                        Dim dtIsBilled As New DataTable
                        dtIsBilled.Load(drIsBilled)

                        If dtIsBilled.Rows(0)("isServiced") = 0 Then

                            Dim commandPrevContractUpdate As MySqlCommand = New MySqlCommand
                            commandPrevContractUpdate.CommandType = CommandType.Text

                            Dim qryPrevContractUpdate As String = "UPDATE tblContract SET Status =@Status,  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = NULL where ContractNo= @ContractNo "

                            commandPrevContractUpdate.CommandText = qryPrevContractUpdate
                            commandPrevContractUpdate.Parameters.Clear()
                            commandPrevContractUpdate.Parameters.AddWithValue("@Status", "O")
                            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalSt", "O")
                            'commandPrevContractUpdate.Parameters.AddWithValue("@RenewalDate", vbNull)
                            commandPrevContractUpdate.Parameters.AddWithValue("@RenewalContractNo", "")
                            'commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", vbNull)

                            commandPrevContractUpdate.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
                            commandPrevContractUpdate.Connection = conn
                            commandPrevContractUpdate.ExecuteNonQuery()

                            '''

                            Dim commandRenewalUpdate As MySqlCommand = New MySqlCommand
                            commandRenewalUpdate.CommandType = CommandType.Text

                            Dim qryRenewalUpdate As String = "UPDATE tblContract SET  OContractNo = @OContractNo where rcno= @rcno "

                            commandRenewalUpdate.CommandText = qryRenewalUpdate
                            commandRenewalUpdate.Parameters.Clear()
                            commandRenewalUpdate.Parameters.AddWithValue("@OContractNo", "")
                            commandRenewalUpdate.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                            commandRenewalUpdate.Connection = conn
                            commandRenewalUpdate.ExecuteNonQuery()
                        End If
                    End If

                    txtOContract.Text = ""

                    ''23.06.19
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " Termination Code: " & strTerminationCode.Trim & " : " & txtCommentChSt.Text, txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    btnChangeStatus.Enabled = False
                    btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                    btnRevision.Enabled = False
                    btnRevision.ForeColor = System.Drawing.Color.Gray

                  
                    btnEdit.Enabled = False
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                    ''''''''''''''''''T

                    '''''''''''''''''''X
                ElseIf Left(ddlStatusChSt.Text, 1) = "X" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    ''''''''''''''''''''''''
                    Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
                    commandXIsServicePosted.CommandType = CommandType.Text

                    commandXIsServicePosted.CommandText = "select count(*) as IsPosted from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "'"

                    commandXIsServicePosted.Connection = conn

                    Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
                    Dim dtIsServicePosted As New DataTable
                    dtIsServicePosted.Load(drIsServicePosted)


                    If dtIsServicePosted.Rows(0)("IsPosted") > 0 Then
                        txtAlertStatus.Text = "CONTRACT HAS " & dtIsServicePosted.Rows(0)("IsPosted") & " POSTED SERVICE RECORD(S). CANNOT BE CANCELLED."
                        'updPanelContract1.Update()
                        txtAlertStatus.Visible = True
                        ModalPopupExtender5.Show()
                        'ModalPopupExtender5.Show()
                        'Exit Sub
                        Exit Sub
                    End If

                    commandXIsServicePosted.Dispose()
                    dtIsServicePosted.Dispose()
                    '''''''''''''''''''''''

                    Dim commandX1 As MySqlCommand = New MySqlCommand

                    commandX1.CommandType = CommandType.Text
                    'commandX1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"


                    commandX1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    commandX1.Connection = conn

                    Dim drserviceX As MySqlDataReader = commandX1.ExecuteReader()
                    Dim dtserviceX As New DataTable
                    dtserviceX.Load(drserviceX)

                    If dtserviceX.Rows.Count > 0 Then
                        'ChangeStatus()

                        For x As Integer = 0 To dtserviceX.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceX.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecX
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtserviceX.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecX:
                        Next
                        'Dim commandX2 As MySqlCommand = New MySqlCommand
                        'commandX2.CommandType = CommandType.Text
                        'commandX2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                        'commandX2.Connection = conn
                        'commandX2.ExecuteNonQuery()
                        'commandX2.Dispose()
                    End If

                    Dim commandX As MySqlCommand = New MySqlCommand
                    commandX.CommandType = CommandType.Text

                    Dim qryX As String = "UPDATE tblContract SET  Status ='X', ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    commandX.CommandText = qryX
                    commandX.Parameters.Clear()

                    If txtActualEndChSt.Text = "" Then
                        commandX.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        commandX.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandX.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    commandX.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    commandX.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))

                    commandX.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    commandX.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    commandX.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandX.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    commandX.Connection = conn
                    commandX.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = "X"

                    commandX.Dispose()
                    commandX1.Dispose()
                    dtserviceX.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""
                    ''''''''''''''''''X


                    ''''''OPEN

                ElseIf Left(ddlStatusChSt.Text, 1) = "O" Then

                    'If txtStatus.Text = "H" Then

                    '    txtOnHoldDateChSt.Attributes.Remove("disabled")
                    '    ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                    '    txtOnHoldDscriptionChSt.Attributes.Remove("disabled")
                    '    txtOnHoldCommentsChSt.Attributes.Remove("disabled")

                    '    'txtOnHoldDateChSt.Attributes.Add("disabled", "false")
                    '    'ddlOnHoldCodeChSt.Attributes.Add("disabled", "false")
                    '    'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "false")
                    '    'txtOnHoldCommentsChSt.Attributes.Add("disabled", "false")
                    'End If

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    'command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status ='H') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and ContractNo ='" & txtContractNo.Text & "'"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status ='H') and ContractNo ='" & txtContractNo.Text & "' and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            commandE2.CommandText = "update  tblServiceRecord set Status='O' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "

                    If txtStatus.Text = "H" Then

                        Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, OnHolddate=@OnHoldDate, OnHoldCode=@OnHoldCode, OnHoldDescription=@OnHoldDescription, OnHoldComments=@OnHoldComments, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        command.CommandText = qryE
                        command.Parameters.Clear()

                        If ddlStatusChSt.SelectedIndex <> "-1" Then
                            command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        Else
                            command.Parameters.AddWithValue("@Status", txtStatus.Text)
                        End If

                        command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)

                        command.Parameters.AddWithValue("@OnHolddate", DBNull.Value)
                        command.Parameters.AddWithValue("@OnHoldCode", "")
                        command.Parameters.AddWithValue("@OnHoldDescription", "")
                        command.Parameters.AddWithValue("@OnHoldComments", "")

                        command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        command.Connection = conn
                        command.ExecuteNonQuery()

                        txtOnHoldComments.Text = ""
                        txtOnHoldDescription.Text = ""
                        txtOnHoldDate.Text = ""
                        txtOnHoldCode.Text = ""
                    Else
                        Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                        command.CommandText = qryE
                        command.Parameters.Clear()

                        If ddlStatusChSt.SelectedIndex <> "-1" Then
                            command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        Else
                            command.Parameters.AddWithValue("@Status", txtStatus.Text)
                        End If

                        command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                        command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                        command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        command.Connection = conn
                        command.ExecuteNonQuery()
                    End If

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " " & txtCommentChSt.Text, txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""


                    ''''''''''' Contract

                ElseIf Left(ddlStatusChSt.Text, 1) = "V" Then
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    'command1.CommandText = "select 1 from tblServiceRecord where (Status <> 'O') and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecV
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update tblServiceRecord set Status='V' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecV:
                        Next

                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        command.Parameters.AddWithValue("@Status", txtStatus.Text)
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    If txtActualEndChSt.Text = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command1.Dispose()
                    command.Dispose()
                    dtserviceE.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""



                    '' 23.06.19
                    If ddlAgreementType.Text = "RENEWAL" Then

                        '''''
                        Dim commandPrevContractUpdate As MySqlCommand = New MySqlCommand
                        commandPrevContractUpdate.CommandType = CommandType.Text

                        Dim qryPrevContractUpdate As String = "UPDATE tblContract SET  RenewalSt =@RenewalSt, RenewalDate = NULL, RenewalContractNo = @RenewalContractNo, ActualEnd = NULL where ContractNo= @ContractNo "

                        commandPrevContractUpdate.CommandText = qryPrevContractUpdate
                        commandPrevContractUpdate.Parameters.Clear()
                        commandPrevContractUpdate.Parameters.AddWithValue("@RenewalSt", "O")
                        'commandPrevContractUpdate.Parameters.AddWithValue("@RenewalDate", vbNull)
                        commandPrevContractUpdate.Parameters.AddWithValue("@RenewalContractNo", "")
                        'commandPrevContractUpdate.Parameters.AddWithValue("@ActualEnd", vbNull)

                        commandPrevContractUpdate.Parameters.AddWithValue("@ContractNo", txtOContract.Text.Trim)
                        commandPrevContractUpdate.Connection = conn
                        commandPrevContractUpdate.ExecuteNonQuery()

                        '''

                        Dim commandRenewalUpdate As MySqlCommand = New MySqlCommand
                        commandRenewalUpdate.CommandType = CommandType.Text

                        Dim qryRenewalUpdate As String = "UPDATE tblContract SET  OContractNo = @OContractNo where rcno= @rcno "

                        commandRenewalUpdate.CommandText = qryRenewalUpdate
                        commandRenewalUpdate.Parameters.Clear()
                        commandRenewalUpdate.Parameters.AddWithValue("@OContractNo", "")
                        commandRenewalUpdate.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        commandRenewalUpdate.Connection = conn
                        commandRenewalUpdate.ExecuteNonQuery()
                    End If

                    txtOContract.Text = ""

                    ''23.06.19

                ElseIf Left(ddlStatusChSt.Text, 1) = "C" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status <> 'O') and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    'command1.CommandText = "select 1 from tblServiceRecord where (Status='O' or Status='' or Status is null) and (SchServiceDate)> " & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "  and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            '''''''''''''''''''''''''
                            Dim commandIsBilled As MySqlCommand = New MySqlCommand

                            commandIsBilled.CommandType = CommandType.Text
                            commandIsBilled.CommandText = "select count(RecordNo) as isBilled from tblServiceRecord where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "' and ((BillNo ='') or (Billno is Null))"
                            commandIsBilled.Connection = conn

                            Dim drIsBilled As MySqlDataReader = commandIsBilled.ExecuteReader()
                            Dim dtIsBilled As New DataTable
                            dtIsBilled.Load(drIsBilled)

                            If dtIsBilled.Rows(0)("isBilled") = 0 Then
                                CountBilledServiceRecords = CountBilledServiceRecords + 1
                                commandIsBilled.Dispose()
                                dtIsBilled.Dispose()
                                GoTo nextrecC
                            End If

                            commandIsBilled.Dispose()
                            dtIsBilled.Dispose()
                            '''''''''''''''''''''''''''

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='V' where RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
nextrecC:
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                        'command2.Dispose()
                    End If

                    ''''''''''' Contract

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status,  ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus, TerminationCode =@TerminationCode, TerminationDescription =@TerminationDescription, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        command.Parameters.AddWithValue("@Status", txtStatus.Text)
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    If txtActualEndChSt.Text = "" Then
                        command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                        command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@TerminationCode", Left(ddlTerminationCode.Text, 5))
                    command.Parameters.AddWithValue("@TerminationDescription", Right(ddlTerminationCode.Text, Len(ddlTerminationCode.Text) - 8))

                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()
                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()
                    command1.Dispose()
                    dtserviceE.Dispose()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)


                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""
                    ''''''''''''''''''''''''''''''''''''''' R

                ElseIf Left(ddlStatusChSt.Text, 1) = "R" Then

                    If ddlTerminationCode.SelectedIndex = 0 Then
                        'lblAlertStatus.Text = "Please Select Termination Code"
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Please Select Termination Code"
                        ModalPopupExtender5.Show()
                        ddlTerminationCode.Attributes.Remove("disabled")
                        Exit Sub
                    End If



                    Revise()

                    'commandT.Dispose()
                    'commandT1.Dispose()
                    'dtserviceT.Dispose()
                    '''''''''''''''''''''''''''''''''''' R
                ElseIf Left(ddlStatusChSt.Text, 1) = "H" Then
                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text
                    command1.CommandText = "select RecordNo, Status, SchServiceDate, ContractNo from tblServiceRecord where (Status <> 'P') and SchServiceDate > '" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "'  and ContractNo ='" & txtContractNo.Text & "'"

                    command1.Connection = conn

                    Dim drserviceE As MySqlDataReader = command1.ExecuteReader()
                    Dim dtserviceE As New DataTable
                    dtserviceE.Load(drserviceE)

                    If dtserviceE.Rows.Count > 0 Then

                        For x As Integer = 0 To dtserviceE.Rows.Count - 1

                            Dim commandE2 As MySqlCommand = New MySqlCommand
                            commandE2.CommandType = CommandType.Text
                            'commandE2.CommandText = "update  tblServiceRecord set Status='V' where (Status='O' or Status='' or Status is null)  and SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"
                            commandE2.CommandText = "update  tblServiceRecord set Status='H' where  RecordNo = '" & dtserviceE.Rows(x)("RecordNo").ToString & "'"

                            commandE2.Connection = conn
                            commandE2.ExecuteNonQuery()
                            commandE2.Dispose()
                        Next
                        'ChangeStatus()
                        'Dim command2 As MySqlCommand = New MySqlCommand
                        'command2.CommandType = CommandType.Text

                        'Dim qry1 As String = "update  tblServiceRecord set Status= @status where  SchServiceDate>'" & Convert.ToDateTime(txtActualEndChSt.Text).ToString("yyyy-MM-dd") & "' and recordNo in (select recordNo from tblServiceRecordDet where ContractNo ='" & txtContractNo.Text & "')"

                        'command2.CommandText = qry1
                        'command2.Parameters.Clear()

                        'If ddlStatusChSt.SelectedIndex <> "-1" Then
                        '    command2.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                        'Else
                        '    command2.Parameters.AddWithValue("@Status", txtStatus.Text)
                        'End If

                        'command2.Connection = conn
                        'command2.ExecuteNonQuery()
                        'command2.Dispose()
                    End If

                    ''''''''''' Contract

                    Dim hyphenpos As Integer
                    hyphenpos = 0
                    hyphenpos = (ddlOnHoldCodeChSt.Text.IndexOf(":"))

                    Dim OnHoldCode As String
                    OnHoldCode = Left(ddlOnHoldCodeChSt.Text, (hyphenpos - 1))
                    'txtOnHoldDscriptionChSt.Text = Right(ddlOnHoldCodeChSt.Text, Len(ddlOnHoldCodeChSt.Text) - (Len(OnHoldCode.Trim) + 3))


                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    'Dim qryE As String = "UPDATE tblContract SET  Status = @status, RenewalSt = @RenewalSt, ActualStaff = @ActualStaff, ActualEnd=@ActualEnd ,CommentsStatus = @CommentsStatus where rcno= @rcno "
                    Dim qryE As String = "UPDATE tblContract SET  Status = @status, ActualStaff = @ActualStaff, CommentsStatus = @CommentsStatus, OnHolddate=@OnHoldDate, OnHoldCode=@OnHoldCode, OnHoldDescription=@OnHoldDescription, OnHoldComments=@OnHoldComments, LastModifiedBy =@LastModifiedBy, LastModifiedOn =@LastModifiedOn where rcno= @rcno "

                    command.CommandText = qryE
                    command.Parameters.Clear()

                    If ddlStatusChSt.SelectedIndex <> "-1" Then
                        command.Parameters.AddWithValue("@Status", Left(ddlStatusChSt.Text, 1))
                    Else
                        command.Parameters.AddWithValue("@Status", txtStatus.Text)
                    End If

                    'If ddlRenewalStatus.SelectedIndex <> "0" Then
                    '    command.Parameters.AddWithValue("@RenewalSt", Left(ddlRenewalStatus.Text, 1))
                    'Else
                    '    command.Parameters.AddWithValue("@RenewalSt", txtRs.Text)
                    'End If

                    'If txtActualEndChSt.Text = "" Then
                    '    command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                    'Else
                    '    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                    '    command.Parameters.AddWithValue("@ActualEnd", strdate.ToString("yyyy-MM-dd"))
                    'End If

                    command.Parameters.AddWithValue("@CommentsStatus", txtCommentChSt.Text.Trim)
                    command.Parameters.AddWithValue("@ActualStaff", txtLastModifiedBy.Text)
                    'strdate.ToString("yyyy-MM-dd")
                    'command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(txtOnHoldDateChSt.Text).ToString("yyyy-MM-dd"))

                    'command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(strdate.ToString("yyyy-MM-dd")))

                    strdate = DateTime.Parse(txtActualEndChSt.Text.Trim)
                    command.Parameters.AddWithValue("@OnHolddate", Convert.ToDateTime(strdate.ToString("yyyy-MM-dd")))
                    command.Parameters.AddWithValue("@OnHoldCode", OnHoldCode.Trim)
                    command.Parameters.AddWithValue("@OnHoldDescription", txtOnHoldDscriptionChSt.Text.Trim)
                    command.Parameters.AddWithValue("@OnHoldComments", txtOnHoldCommentsChSt.Text.Trim)

                    command.Parameters.AddWithValue("@LastModifiedBy", txtCreatedBy.Text)
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    SQLDSContract.SelectCommand = txt.Text
                    SQLDSContract.DataBind()

                    GridView1.DataSourceID = "SQLDSContract"
                    GridView1.DataBind()

                    txtStatus.Text = Left(ddlStatusChSt.Text, 1)

                    If ddlRenewalStatus.SelectedIndex <> "0" Then
                        txtRs.Text = Left(ddlRenewalStatus.Text, 1)
                    End If

                    command.Dispose()
                    command1.Dispose()
                    dtserviceE.Dispose()

                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' on or after " & txtActualEndChSt.Text, txtRcno.Text)
                    'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtActualEndChSt.Text & " : " & strTerminationCode.Trim & " : " & txtCommentChSt.Text & "  :  Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from '" & originalStatus & "' To '" & Left(ddlStatusChSt.Text, 1) & "' Date Set: " & txtActualEndChSt.Text & " " & txtCommentChSt.Text, txtRcno.Text)






                    txtOnHoldComments.Text = txtOnHoldCommentsChSt.Text
                    txtOnHoldDescription.Text = txtOnHoldDscriptionChSt.Text
                    txtOnHoldDate.Text = txtActualEndChSt.Text
                    txtOnHoldCode.Text = OnHoldCode.Trim

                    originalStatus = ""
                    ddlStatusChSt.SelectedIndex = 0
                    txtActualEndChSt.Text = ""
                    txtCommentChSt.Text = ""

                    txtOnHoldCommentsChSt.Text = ""
                    txtOnHoldDscriptionChSt.Text = ""
                    txtOnHoldDateChSt.Text = ""
                    ddlOnHoldCodeChSt.SelectedIndex = 0

                End If '  If Left(ddlStatusChSt.Text, 1) = "E" Then

                conn.Close()
                conn.Dispose()


                GridView1.DataBind()
                ModalPopupExtender5.Hide()
                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                lblAlert.Text = ""


                'If Left(ddlStatusChSt.Text, 1) <> "R" Then
                '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, originalStatus & Left(ddlStatusChSt.Text, 1), txtRcno.Text)
                'End If

                'originalStatus = ""
                'ddlStatusChSt.SelectedIndex = 0
                'txtActualEndChSt.Text = ""
                'txtCommentChSt.Text = ""

                If CountBilledServiceRecords = 1 Then
                    lblAlert.Text = "The remaining " & CountBilledServiceRecords & " Service will not be voided because already BILLED"
                ElseIf CountBilledServiceRecords > 1 Then
                    lblAlert.Text = "The remaining " & CountBilledServiceRecords & " Services will not be voided because already BILLED"
                End If

            Else
                ModalPopupExtender5.Show()
            End If

InvalidStatus:
            txtIsPopup.Text = "N"
            If txtChangeStatus.Text = "000" Then

                txtAlertStatus.Text = "SELECTED STATUS IS SAME AS CURRENT STATUS"
                Exit Sub
            ElseIf txtChangeStatus.Text = "001" Then
                txtAlertStatus.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            ElseIf txtChangeStatus.Text = "002" Then
                txtAlertStatus.Text = "PLEASE SELECT VALID STATUS"
                Exit Sub
            ElseIf txtChangeStatus.Text = "003" Then
                txtAlertStatus.Text = "ACTUAL END DATE CANNOT BE BLANK"
                Exit Sub
            End If
            'txtIsPopup.Text = "N"
            txtIsPopupChSt.Text = ""
            ModalPopupExtender5.Hide()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "BtnChSt_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub ChangeStatus()

    End Sub

    Protected Sub RetrieveLocation()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT LocateGRP FROM tblpostaltolocation where postalbeginwith=@postalbeginwith"
            command1.Parameters.AddWithValue("@postalbeginwith", txtPostal.Text.Substring(0, 2))
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("LocateGRP").ToString <> "" Then
                    ddlLocateGrp.Text = dt.Rows(0)("LocateGRP").ToString
                End If
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION RetrieveLocation", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub txtPostal_TextChanged(sender As Object, e As EventArgs) Handles txtPostal.TextChanged
        Try
            If String.IsNullOrEmpty(txtPostal.Text) = False Then
                RetrieveLocation()
            End If
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPostal_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnRevision_Click(sender As Object, e As EventArgs) Handles btnRevision.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""

            If txtStatus.Text <> "O" Then
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.Items.Add("R - Revised")
            'Else
            '    ddlStatusChSt.Items.Add("O - Open")
            'End If

            If txtRcno.Text = "" Then
                lblAlert.Text = "SELECT RECORD TO REVISE"
                Return
            End If

            txtIsPopupChSt.Text = "ContractNo"
            'DisableControls()
            'txtMode.Text = "EDIT"
            lblMessage.Text = "ACTION: REVISE RECORD"

            '''''''''''''''''''''''''''''''''
            BtnChSt.Text = "Continue"
            ddlStatusChSt.Items.Clear()
            'ddlStatusChSt.Items.Add("--SELECT--")
            ddlStatusChSt.Items.Add("R - Revised")

            txtAlertStatus.Visible = False
            ddlStatusChSt.SelectedIndex = 0
            ddlTerminationCode.Attributes.Remove("disabled")
            tb1.ActiveTabIndex = 0

            If String.IsNullOrEmpty(txtContractRevisionTerminationCode.Text) = False Then
                ddlTerminationCode.Text = txtContractRevisionTerminationCode.Text
            End If

            lblActualEnd.Text = "Actual End"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = True
            Label62.Visible = True
            ddlTerminationCode.Visible = True

            lblCommetsChSt.Visible = True
            txtCommentChSt.Visible = True
            Label66.Visible = True


            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False

            txtOnHoldDscriptionChSt.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            'document.getElementById("<%=ddlOnHoldCodeChSt.ClientID%>").style.display = 'none';
            'ddlOnHoldCodeChSt.Attributes.Add("visible", "false")
            ModalPopupExtender5.Show()

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRevision_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Private Sub Revise()
        txtMode.Text = "NEW"
        txtModeRenew.Text = "REV"
        EnableControls()
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black


        ''''''''



        btnADD.Enabled = False
        btnCopy.Enabled = False
        btnRevision.Enabled = False
        btnSearch.Enabled = False
        btnReset.Enabled = False
        btnPrint.Enabled = False
      
        btnTransactions.Enabled = False
        btnEdit.Enabled = False
        btnChangeStatus.Enabled = False
        btnPrint.Enabled = False


        btnADD.ForeColor = System.Drawing.Color.Gray
        btnCopy.ForeColor = System.Drawing.Color.Gray
        btnRevision.ForeColor = System.Drawing.Color.Gray
        btnSearch.ForeColor = System.Drawing.Color.Gray
        btnReset.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
     
        btnTransactions.ForeColor = System.Drawing.Color.Gray
        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray

        updPanelContract1.Update()




        txtPrevContract.Text = txtContractNo.Text
        txtSignedAgreementReference.Text = "Signed Service Agreement"
        Try
            If String.IsNullOrEmpty(txtMainContractNo.Text) = True Then
                'txtOContract.Text = txtContractNo.Text
                txtMainContractNo.Text = txtContractNo.Text
                txtContractNo.Text = txtContractNo.Text + "-001"
            Else

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = "SELECT count(MainContractNo) as rocc FROM tblContract where MainContractNo=@ContractNo"
                command1.Parameters.AddWithValue("@ContractNo", txtMainContractNo.Text.Trim)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

             
                If dt.Rows.Count = 0 Then
                    txtContractNo.Text = txtContractNo.Text + "-001"
                Else
                    Dim suffix As Integer
                    suffix = Val(dt.Rows(0)("rocc").ToString) + 1

                    If (suffix.ToString.Length) = 1 Then
                        txtContractNo.Text = txtMainContractNo.Text + "-" + "00" & suffix
                    ElseIf (suffix.ToString.Length) = 2 Then
                        txtContractNo.Text = txtMainContractNo.Text + "-" + "0" & suffix
                    End If

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            End If

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtPrevContract.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtStatus.Text & Left(ddlStatusChSt.Text, 1), txtRcno.Text)

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtPrevContract.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "Status Changed from 'O' To '" & Left(ddlStatusChSt.Text, 1) & "'", txtRcno.Text)

            txtRcnoRenew.Text = txtRcno.Text

            ddlAgreementType.Items.Clear()
            ddlAgreementType.Items.Add("--SELECT--")
            ddlAgreementType.Items.Add("NO PRICE CHANGE")
            ddlAgreementType.Items.Add("PRICE INCREASE")
            ddlAgreementType.Items.Add("PRICE DECREASE")
            ddlAgreementType.Enabled = True

            txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
            txtAgreeVal.Text = "0.00"
            txtConDetVal.Text = "0.00"
            txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")

            txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
            txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = "0"
            txtValPerMnth.Text = ""
            txtStatus.Text = "O"
            txtRs.Text = "O"
            txtNS.Text = "O"
            txtProspectId.Text = ""
            txtGS.Text = "O"
            txtPrintBody.Text = ""

            txtPortfolioValue.Text = "0.00"

            txtServiceNo.Text = "0.00"
            txtServiceAmt.Text = "0.00"
            txtServiceNoActual.Text = "0.00"
            txtServiceBal.Text = "0.00"
            txtServiceAmtActual.Text = "0.00"
            txtTotalArea.Text = "0.00"
            txtCompletedArea.Text = "0.00"
            txtBalanceArea.Text = "0.00"
            txtServiceAmtBal.Text = "0.00"

            txtBillingAmount.Text = "0.00"
            txtRetentionPerc.Text = "0"
            txtRetentionValue.Text = "0.00"

            txtWarrantyBillingAmount.Text = "0.00"
            txtBaitStationTotal.Text = "0.00"
            txtBaitStationInstalled.Text = "0.00"
            txtBaitStationBalance.Text = "0.00"

            ''''''''''''''''''''''
            txtContactPerson.Text = ""
            txtContactPerson2.Text = ""
            txtPosition.Text = ""
            txtPosition2.Text = ""
            txtTelephone.Text = ""
            txtTelephone2.Text = ""
            txtFax.Text = ""
            txtFax2.Text = ""
            txtCP2Telephone.Text = ""
            txtCP2Telephone2.Text = ""
            txtConPerMobile.Text = ""
            txtConPerMobile2.Text = ""
            txtEmail1.Text = ""
            txtEmail2.Text = ""

            'lblMessage.Text = ""
            'lblAlert.Text = ""
            'txtMode.Text = ""

            txtServTimeIn.Text = ""
            txtServTimeOut.Text = ""
            txtAllocTime.Text = ""
            txtLastBillDate.Text = ""
            'txtValPerMnth.Text = "0.00"
            'txtContractNotes.Text = ""
            'txtServInst.Text = ""
            'txtStatus.Text = "O"
            ''txtCustName.Text = ""
            'txtRs.Text = "O"
            'txtAddress.Text = ""
            'txtOfficeAddress.Text = ""
            'txtNS.Text = "O"
            'txtProspectId.Text = ""

            'txtAccCode.Text = ""
            'txtPostal.Text = ""

            txtTeamIncharge.Text = ""
            txtTeam.Text = ""
            txtServiceBy.Text = ""
            txtSupervisor.Text = ""

            ddlScheduleType.SelectedIndex = 0
            'ddlScheduler.SelectedIndex = 0
            'ddlSalesman.SelectedIndex = 0
            txtServStartSvc.Text = ""
            txtServStartDaySvc.Text = ""
            txtServEndSvc.Text = ""
            txtServEndDaySvc.Text = ""
            lblContractNo.Text = ""
            lblAccountID.Text = ""
            lblName.Text = ""

            txtTerminationCode.Text = ""
            txtTerminationDescription.Text = ""
            txtActualEnd.Text = ""
            txtActualServiceStart.Text = ""

           

            'btnCancelByCompany.Enabled = False
            'btnEarlyCompletion.Enabled = False
            'btnTerminate.Enabled = False
            'btnChangeStatus.Enabled = False
            'btnServiceSchedule.Enabled = False
            'btnServiceRecords.Enabled = False
            'btnContractRenewal.Enabled = False
            'btnContractDetail.Enabled = False
            'btnRevision.Enabled = False
            'btnDelete.Enabled = False
            'btnPrint.Enabled = False

            btnTransactions.Text = "TRANSACTIONS"

            ddlScheduler.Text = Session("StaffID")
            'Dim Query As String
            'ddlScheduler.Items.Clear()
            'ddlScheduler.Items.Add("--Select--")

            'ddlScheduler.Items.Remove(gScheduler)
            'gScheduler = ""


            'ddlSalesman.Items.Remove(gSalesman)
            'gSalesman = ""

            'ChkWithWarranty.Checked = False
            'txtWarrDurtion.Text = ""
            'TxtInspectionStart.Text = ""
            'TxtInspectionEnd.Text = ""
            'ChkRequireInspection.Checked = False
            'ddlInspectionFrequency.SelectedIndex = 0



            'DisableControls()

            'Service Tab

            FirstGridViewRowLocation()
            FirstGridViewRowServices()
            FirstGridViewRowFreq()
            FirstGridViewRowTarget()

            Dim Query As String
            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            Query = "Select descrip1 from tblTarget order by descrip1"

            grvFreqDetails.Enabled = False
            grvTargetDetails.Enabled = False
            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)



            'Dim Query1 As String
            'Dim TextBoxLocationId As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
            'Query1 = "Select LocationID from tblcompanylocation order by LocationID"

            'PopulateDropDownList(Query1, "LocationID", "LocationID", TextBoxLocationId)


            Dim Query2 As String
            Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
            'Query2 = "Select ProductID from tblProduct"
            Query2 = "Select ProductID from tblProduct where productID = (Select DefaultServiceID from tblcontractgroup where ContractGroup ='" & ddlContractGrp.Text & "')"

            PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)

            If TextBoxServiceId.Items.Count = 1 Then
                Query2 = "Select ProductID from tblProduct"
                PopulateDropDownList(Query2, "ProductID", "ProductID", TextBoxServiceId)
            End If

            Dim Query3 As String
            Dim TextBoxServiceFreq As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
            Query3 = "Select Frequency from tblServiceFrequency order by Frequency"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query3, "Frequency", "Frequency", TextBoxServiceFreq)



            Dim Query4 As String
            Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query4 = "Select UnitMsID from tblUnitMs where UnitType = 'AREA'"

            'grvServiceLocation.Enabled = False
            'grvServiceLocation.Enabled = False
            PopulateDropDownList(Query4, "UnitMsID", "UnitMsID", TextBoxUOM)

            '''''''''''''''''''''''


            'MakeSvcNull()
            'MakeSvcDetailNull()
            MakeCommNull()
            MakeNotesNull()

            MakeRateScheduleNull()


          
            '''
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION Revise", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub btnTerminate_Click(sender As Object, e As EventArgs) Handles btnTerminate.Click
        'txtDuration.Text = "T"
        'ModalPopupExtender3.Show()
    End Sub

    Protected Sub btnCancelByCompany_Click(sender As Object, e As EventArgs) Handles btnCancelByCompany.Click
        'ModalPopupExtender4.Show()
    End Sub

    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        Try
            lblAlert.Text = ""
            txtPopUpClient.Text = ""
            If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
                '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
                lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
                Exit Sub
            End If

            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                txtContType1.Text = "CORPORATE"
                txtContType2.Text = "COMPANY"
                txtContType3.Text = "CORPORATE"
                txtContType4.Text = "COMPANY"
            Else
                txtContType1.Text = "RESIDENTIAL"
                txtContType2.Text = "PERSON"
                txtContType3.Text = "RESIDENTIAL"
                txtContType4.Text = "PERSON"
            End If


            If String.IsNullOrEmpty(txtOriginalAccountId.Text) = False Then
                Dim confirmValue As String
                confirmValue = ""

                confirmValue = Request.Form("confirm_value")
                If Right(confirmValue, 3) = "Yes" Then

                Else
                    Exit Sub
                End If
            End If


            txtSearchPopup.Text = "SELECTION"


            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                txtPopUpClient.Text = txtAccountId.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman,A.Industry,A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where 1=1 and  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location From tblPERSON A Left join tblPersonLocation b on A.Accountid = B.Accountid where 1=1 and  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman,A.Industry,A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, A.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where 1=1 and  A.InActive = False and  (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation b on A.Accountid = B.Accountid where 1=1 and  A.InActive = False and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopupClientSearch.Text + "%"" or A.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or B.LocationId like """ + txtPopupClientSearch.Text + "%"") order by B.ServiceName"
                    End If
                End If
              

                SqlDSClient.DataBind()

            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  1=1 and   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by A.Accountid, b.LocationId "
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by A.Accountid, b.LocationId "
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1  as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, A.Location From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where 1=1 and A.InActive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by A.Accountid, b.LocationId"
                    End If
                End If


                SqlDSClient.DataBind()

            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION btnClient_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub IsContractDateHoliday()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Holiday FROM tblHoliday where Holiday= '" & Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd") & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Holiday").ToString <> "" Then
                    txtContractStart.ForeColor = Drawing.Color.Red
                End If

            Else
                txtContractStart.ForeColor = Drawing.Color.Black
            End If


            'If dt.Rows.Count > 0 Then
            '    If dt.Rows(0)("Holiday").ToString <> "" Then
            '        txtContractStart.ForeColor = Drawing.Color.Red
            '    Else
            '        txtContractStart.ForeColor = Drawing.Color.Black
            '    End If
            'End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION IsContractDateHoliday", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    
    Protected Sub txtContractStart_TextChanged(sender As Object, e As EventArgs) Handles txtContractStart.TextChanged
        IsContractDateHoliday()

    End Sub

  

    
    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting
        Try
            If GridSelected = "SQLDSContract" Then
                SQLDSContract.SelectCommand = txt.Text
                SQLDSContract.DataBind()
            ElseIf GridSelected = "SQLDSContractClientId" Then
                'SqlDataSource1.SelectCommand = txt.Text
                SQLDSContractClientId.DataBind()
            ElseIf GridSelected = "SQLDSContractNo" Then
                ''SqlDataSource1.SelectCommand = txt.Text
                SqlDSContractNo.DataBind()
            End If

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "GridView1_Sorting", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    

    Protected Sub btnChangeStatus_Click(sender As Object, e As EventArgs) Handles btnChangeStatus.Click
        'txtActualEndChSt.Text = Date()
        Try
            BtnChSt.Text = "Save"
            txtIsPopupChSt.Text = "ContractNo"
            lblAlert.Text = ""
            txtAlertStatus.Text = ""
            txtAlertStatus.Visible = False
            'ddlTerminationCode.Attributes.Add("disabled", "true")

            ddlStatusChSt.Items.Clear()
            ddlStatusChSt.Items.Add("--SELECT--")

            If txtStatus.Text = "O" Then
                ddlStatusChSt.SelectedIndex = 0
            End If

            'If txtStatus.Text = "O" Then
            '    ddlStatusChSt.Items.Add("H - On Hold")
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    txtActualEndChSt.Enabled = True
            'ElseIf txtStatus.Text = "E" Then
            '    ddlStatusChSt.Items.Add("T - Terminated")
            '    txtActualEndChSt.Enabled = True
            'ElseIf txtStatus.Text = "H" Then
            '    ddlStatusChSt.Items.Add("O - Open")

            'End If

            'ddlTerminationCode.Attributes.Add("disabled", "true")
            'txtCommentChSt.Attributes.Add("disabled", "true")
            'ddlTerminationCode.Attributes.Add("disabled", "true")
            'ddlOnHoldCodeChSt.Attributes.Add("disabled", "true")
            'txtOnHoldDscriptionChSt.Attributes.Add("disabled", "true")
            'txtOnHoldCommentsChSt.Attributes.Add("disabled", "true")

            If txtStatus.Text = "O" Then
                If Convert.ToDateTime(txtContractEnd.Text).ToString("yyyy-MM-dd") < DateTime.Now.ToString("yyyy-MM-dd") Then
                    ddlStatusChSt.Items.Add("T - Terminated")
                Else
                    ddlStatusChSt.Items.Add("H - On Hold")
                    ddlStatusChSt.Items.Add("T - Terminated")
                End If
                txtActualEndChSt.Enabled = True

                
                'ddlTerminationCode.Attributes.Add("disabled", "true")

            ElseIf txtStatus.Text = "E" Then
                ddlStatusChSt.Items.Add("T - Terminated")

                If String.IsNullOrEmpty(txtActualEnd.Text) = False Then
                    txtActualEndChSt.Text = txtActualEnd.Text
                    'txtActualEndChSt.Enabled = False

                    'txtActualEndChSt.Attributes.Add("readonly", "readonly")
                    txtActualEndChSt.Enabled = True
                End If

            ElseIf txtStatus.Text = "H" Then
                ddlStatusChSt.Items.Add("O - Open")
                ddlStatusChSt.Items.Add("T - Terminated")
                txtActualEndChSt.Enabled = True


                ddlOnHoldCodeChSt.Text = txtOnHoldCode.Text + " : " + txtOnHoldDescription.Text
                txtOnHoldDscriptionChSt.Text = txtOnHoldDescription.Text
                txtOnHoldCommentsChSt.Text = txtOnHoldComments.Text

            End If
                tb1.ActiveTabIndex = 0

                'to be modfied
                'Dim conn As MySqlConnection = New MySqlConnection()

                'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                'conn.Open()

                'Dim IsPosted As Integer
                'IsPosted = 0

                'Dim commandXIsServicePosted As MySqlCommand = New MySqlCommand
                'commandXIsServicePosted.CommandType = CommandType.Text

                'commandXIsServicePosted.CommandText = "select Rcno from tblServiceRecord where (Status = 'P')  and ContractNo ='" & txtContractNo.Text & "' limit 1"
                'commandXIsServicePosted.Connection = conn

                'Dim drIsServicePosted As MySqlDataReader = commandXIsServicePosted.ExecuteReader()
                'Dim dtIsServicePosted As New DataTable
                'dtIsServicePosted.Load(drIsServicePosted)

                'If dtIsServicePosted.Rows.Count > 0 Then
                '    IsPosted = 1
                'End If


                'If txtStatus.Text = "O" And txtRs.Text = "O" And IsPosted = 0 Then
                '    'ddlStatusChSt.Items.Add("C - Completed")
                '    ddlStatusChSt.Items.Add("H - On Hold")
                '    'ddlStatusChSt.Items.Add("E - Early Completed")
                '    ddlStatusChSt.Items.Add("T - Terminated")
                '    ddlStatusChSt.Items.Add("X - Cancelled")
                '    ddlStatusChSt.Items.Add("V - Void")
                'ElseIf txtStatus.Text = "O" And txtRs.Text = "O" And IsPosted = 1 Then
                '    'ddlStatusChSt.Items.Add("C - Completed")
                '    ddlStatusChSt.Items.Add("H - On Hold")
                '    'ddlStatusChSt.Items.Add("E - Early Completed")
                '    ddlStatusChSt.Items.Add("T - Terminated")
                '    'ddlStatusChSt.Items.Add("X - Cancelled")
                '    'ddlStatusChSt.Items.Add("V - Void")
                'Else
                '    ddlStatusChSt.Items.Add("O - Open")
                'End If

                'conn.Close()
                'conn.Dispose()
                'dtIsServicePosted.Dispose()

                'to be modfied



            ''''''''''''

            lblActualEnd.Visible = False
            txtActualEndChSt.Visible = False
            Label29.Visible = False


            lblTermCode.Visible = False
            Label62.Visible = False
            ddlTerminationCode.Visible = False

            lblCommetsChSt.Visible = False
            txtCommentChSt.Visible = False
            Label66.Visible = False

            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False


            '''''''''''''''''
                ModalPopupExtender5.Show()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnChangeStatus_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    ''''''' Start: Service Details

    Private Sub fGetInterval()
        lblInterval.Text = ""
        Select Case txtFrequency.Text.ToUpper
            Case "DAILY"
                lblInterval.Text = "Days"
            Case "WEEKLY", "TWICE-WEEKLY"
                lblInterval.Text = "Wks"
            Case "BI-WEEKLY", "FORTNIGHTLY"
                lblInterval.Text = "Bi-wks"
            Case "TRI-WEEKLY"
                lblInterval.Text = "Tri-wks"
            Case "MONTHLY", "THRICE-MONTHLY"
                lblInterval.Text = "Mths"
            Case "BI-MONTHLY"
                lblInterval.Text = "Bi-mths"
            Case "QUARTERLY"
                lblInterval.Text = "Quarterly"
            Case "HALF-ANNUALLY"
                lblInterval.Text = "Half-Annually"
            Case "THRICE-ANNUALLY"
                lblInterval.Text = "Thrice-Annually"
            Case "ANNUALLY"
                lblInterval.Text = "Annually"
            Case "BI-ANNUALLY"
                lblInterval.Text = "Bi-Annually"
        End Select
    End Sub


    Private Function pWeekNumber(ByVal pDate As Date) As Integer
        pWeekNumber = 0
        Dim temp As String = Math.Round((pDate.Day - 1) / 7, 1)
        If temp.Contains(".") Then temp = temp.Substring(0, temp.IndexOf("."))
        pWeekNumber = 1 + temp
    End Function


    '''''''''' Start: Frequency



    Private Sub FirstGridViewRowFreq()
        Try
            Dim dtFreq As New DataTable()
            Dim drFreq As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dtFreq.Columns.Add(New DataColumn("SeqNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("FreqMTD", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("MonthNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("DayNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekNo", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("WeekDOW", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("Location", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("BranchID", GetType(String)))

            dtFreq.Columns.Add(New DataColumn("ContractNoF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("SourceSQLIDF", GetType(String)))
            dtFreq.Columns.Add(New DataColumn("RcnoF", GetType(String)))

            drFreq = dtFreq.NewRow()

            drFreq("SeqNo") = "001"
            drFreq("FreqMTD") = String.Empty
            drFreq("MonthNo") = String.Empty
            drFreq("DayNo") = String.Empty
            drFreq("WeekNo") = String.Empty
            drFreq("WeekDOW") = String.Empty
            drFreq("Location") = String.Empty
            drFreq("BranchID") = String.Empty

            drFreq("ContractNoF") = String.Empty
            drFreq("SourceSQLIDF") = 0
            drFreq("RcnoF") = 0
            dtFreq.Rows.Add(drFreq)

            ViewState("CurrentTableFreq") = dtFreq

            grvFreqDetails.DataSource = dtFreq
            grvFreqDetails.DataBind()

            'Dim btnAdd As Button = CType(grvTargetDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowFreq()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("SeqNo") = ""
                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()



                    If txtFrequencyDesc.Text = "DAILY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")

                        TextBoxWeekDOW.Enabled = False
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If
                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                  

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = gSeq
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If
                    '    'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                    '    rowIndex2 += 1
                    '    j += 1
                    'Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    ''Dim i5 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select * from Spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")

                    'dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecFreq()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()


                    If txtFrequencyDesc.Text = "DAILY" Then
                        'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        'TextBoxSeqNo.Text = gSeq
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DAY")
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("DATE")

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        If rowIndex = 1 Then
                            TextBoxWeekNo.Text = 1
                        ElseIf rowIndex = 2 Then
                            TextBoxWeekNo.Text = 3
                        End If

                        'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then

                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Enabled = True

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Items.Add("MONTH")
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = True

                    ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add("DOW")
                        TextBoxFreqMTD.Enabled = False

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Enabled = False

                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        'TextBoxWeekDOW.Text = gDOW
                        TextBoxWeekDOW.Enabled = True
                    Else
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                        'TextBoxFreqMTD.Items.Clear()
                        TextBoxFreqMTD.Items.Add(gFreqMTD)
                    End If
                    'Dim rowIndex1 As Integer = 0

                    'For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                    '    Dim TextBoxTargetDesc1 As DropDownList = CType(grvFreqDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    '    Query = "Select * from tblTarget"
                    '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)
                    '    'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and  BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                    '    rowIndex1 += 1
                    'Next j

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    ''Dim i7 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from Spare where  VATRate > 0.00 and   CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowWithDetailRecFreq", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataFreq()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If txtFrequencyDesc.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("DATE")
                            TextBoxWeekNo.Enabled = True

                            If rowIndex = 0 Then
                                TextBoxWeekNo.Text = 1
                            ElseIf rowIndex = 1 Then
                                TextBoxWeekNo.Text = 3
                            End If

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                        ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper


                        ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxMonthNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            'Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                            TextBoxSeqNo.Text = "001"
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxFreqMTD.Items.Add("MONTH")
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekDOW.Text = gDOW
                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True

                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            TextBoxWeekNo.Text = "1"
                            TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                            TextBoxWeekNo.Enabled = False
                            TextBoxFreqMTD.Enabled = False
                            TextBoxWeekDOW.Text = gDOW

                            'If TextBoxSeqNo.Text = "001" Then
                            '    TextBoxWeekDOW.Enabled = False
                            'End If

                            If TextBoxSeqNo.Text = "001" Then
                                TextBoxWeekDOW.Enabled = True
                            End If
                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If

                        'If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                        '    Query = "Select * from tblTarget"
                        '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        'End If


                        rowIndex += 1
                    Next i
                End If
            End If

        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreq", ex.Message.ToString, "")
            Exit Sub


            SetPreviousDataFreq()
        End Try
    End Sub

    Private Sub SetRowDataFreq()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.Text
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.Text
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text

                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableFreq") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreq()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetRowDataFreq", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    '''''''''''''''''''''''''''''''''

    Private Sub AddNewRowFreqEdit()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()


                        drCurrentRow("SeqNo") = gSeq
                        'drCurrentRow("FreqMTD") = gFreqMTD
                        drCurrentRow("ContractNoF") = txtContractNo.Text
                        drCurrentRow("RcnoF") = 0

                        dtCurrentTable.Rows(i - 1)("SeqNo") = TextBoxSeqNo.Text
                        dtCurrentTable.Rows(i - 1)("FreqMTD") = TextBoxFreqMTD.SelectedValue
                        dtCurrentTable.Rows(i - 1)("MonthNo") = TextBoxMonthNo.Text
                        dtCurrentTable.Rows(i - 1)("DayNo") = TextBoxDayNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekNo") = TextBoxWeekNo.Text
                        dtCurrentTable.Rows(i - 1)("WeekDOW") = TextBoxWeekDOW.SelectedValue
                        dtCurrentTable.Rows(i - 1)("Location") = TextBoxLocation.Text
                        dtCurrentTable.Rows(i - 1)("BranchID") = TextBoxBranchID.Text
                        dtCurrentTable.Rows(i - 1)("ContractNoF") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLIDF") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("RcnoF") = TextBoxRcno.Text
                        rowIndex += 1


                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableFreq") = dtCurrentTable

                    grvFreqDetails.DataSource = dtCurrentTable
                    grvFreqDetails.DataBind()


                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataFreqEdit()
        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRowFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub




    Private Sub SetPreviousDataFreqEdit()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            If ViewState("CurrentTableFreq") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(3).FindControl("txtDayNoGV"), TextBox)
                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndex).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                        TextBoxSeqNo.Text = dt.Rows(i)("SeqNo").ToString()
                        TextBoxFreqMTD.Text = dt.Rows(i)("FreqMTD").ToString()
                        TextBoxMonthNo.Text = dt.Rows(i)("MonthNo").ToString()
                        TextBoxDayNo.Text = dt.Rows(i)("DayNo").ToString()
                        TextBoxWeekNo.Text = dt.Rows(i)("WeekNo").ToString()
                        TextBoxLocation.Text = dt.Rows(i)("Location").ToString()
                        TextBoxBranchID.Text = dt.Rows(i)("BranchID").ToString()
                        TextBoxWeekDOW.Text = dt.Rows(i)("WeekDOW").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNoF").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLIDF").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("RcnoF").ToString()


                        If TextBoxFreqMTD.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMTD.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                                TextBoxFreqMTD.Enabled = False
                            End If


                        ElseIf TextBoxFreqMTD.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If


                        rowIndex += 1

                        If txtFrequencyDesc.Text = "DAILY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DAY")
                            TextBoxWeekDOW.Enabled = False

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            ''TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("MONTH")



                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DATE").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DATE")
                            End If

                            'TextBoxFreqMTD.Items.Add("DATE")
                            'TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            'TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString()

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            TextBoxFreqMTD.Items.Remove("DAY")
                            TextBoxFreqMTD.Items.Remove("DATE")

                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("DOW").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("DOW")
                            End If
                            If String.IsNullOrEmpty(TextBoxFreqMTD.Items.FindByValue("MONTH").ToString) = True Then
                                TextBoxFreqMTD.Items.Add("MONTH")
                            End If

                            'TextBoxWeekNo.Enabled = True
                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)
                            'TextBoxWeekDOW.Text = CDate(txtServStart.Text).DayOfWeek.ToString()
                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                            TextBoxWeekNo.Enabled = True
                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")

                        Else
                            TextBoxFreqMTD.Items.Clear()
                            TextBoxFreqMTD.Items.Add("DOW")
                        End If
                    Next i


                End If
            End If
        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION SetPreviousDataFreqEdit", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    ''''''''''''''''''''''''''''''


    '''
    Public Function HighlightDuplicateFreq(ByVal gridview As GridView) As Boolean
        Try
            Dim HasDuplicateFrequency As Boolean = False

            For currentRow As Integer = 0 To gridview.Rows.Count - 2
                Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

                For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                    Dim row As GridViewRow = gridview.Rows(otherRow)
                    Dim duplicateRow As Boolean = False

                    Dim TextBoxSeqGV As TextBox = CType(grvFreqDetails.Rows(currentRow).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                    Dim TextBoxdWeekDOWGVGV As DropDownList = CType(grvFreqDetails.Rows(currentRow).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                    Dim TextBoxdWeekDOWGVGV1 As DropDownList = CType(grvFreqDetails.Rows(otherRow).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)

                    'If TextBoxdWeekDOWGVGV.Text = "-1" And TextBoxdWeekDOWGVGV1.Text = "-1" Then

                    '    'duplicateRow = False
                    '    'HasDuplicateFrequency = False

                    '    'TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.White
                    '    'TextBoxdWeekDOWGVGV.BackColor = TextBoxSeqGV.BackColor

                    '    Return HasDuplicateFrequency
                    '    Exit Function
                    'End If


                    Dim currentBacColor = TextBoxdWeekDOWGVGV.BackColor


                    If ((TextBoxdWeekDOWGVGV.Text) = (TextBoxdWeekDOWGVGV1.Text)) Then

                        If TextBoxdWeekDOWGVGV.Text = "-1" And TextBoxdWeekDOWGVGV1.Text = "-1" Then
                            GoTo nextrec
                        End If
                        duplicateRow = True

                        TextBoxdWeekDOWGVGV.BackColor = Drawing.Color.LightCoral
                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.LightCoral

                        'TextBoxdWeekDOWGVGV.BackColor = Drawing.Color.LightCoral
                        'TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.LightCoral

                        'Dim custVal As New CustomValidator()
                        'custVal.IsValid = False
                        'custVal.ErrorMessage = ""
                        'custVal.ErrorMessage = "Week Day Already Exists"
                        'custVal.EnableClientScript = True

                        'custVal.ValidationGroup = "VGroup"
                        'Me.Page.Form.Controls.Add(custVal)

                        HasDuplicateFrequency = True
                        Return HasDuplicateFrequency


                    Else
                        duplicateRow = False
                        HasDuplicateFrequency = False

                        TextBoxdWeekDOWGVGV1.BackColor = Drawing.Color.White
                        TextBoxdWeekDOWGVGV.BackColor = TextBoxSeqGV.BackColor
                    End If
nextrec:
                Next otherRow
            Next currentRow

            Return HasDuplicateFrequency
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "HighlightDuplicateFreq", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Function


    Protected Sub grvFreqDetails_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvFreqDetails.RowDeleting
        '    Try

        '        Dim Query As String
        '        SetRowDataFreq()

        '        Dim dt As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)


        '        If ViewState("CurrentTableFreq") IsNot Nothing Then
        '            'Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
        '            'Dim drCurrentRow As DataRow = Nothing
        '            'Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)
        '            ''
        '            'Dim CatIdGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(13).FindControl("ddlCatIdGV"), TextBox)
        '            'Dim SpareIdGV As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlSpareIdGV"), DropDownList)
        '            'Dim TransIdDetailGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(9).FindControl("txtTransIdDetailGV"), TextBox)

        '            'If Convert.ToInt32(TransIdDetailGV.Text) > 0 Then
        '            '    'DropDownList SpareIdGV = (DropDownList)grvTargetDetails.Rows[rowIndex].Cells[0].FindControl("ddlSpareIdGV");
        '            '    Dim SpareSerialNoGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("ddlSpareSerialNoGV"), TextBox)
        '            '    Dim QuantityGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtQuantityGV"), TextBox)
        '            '    Dim TotalGV As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(7).FindControl("txtTotalGV"), TextBox)

        '            '    'Delete

        '            '    objBL.CompId = Convert.ToInt32(HttpContext.Current.Session("CompId"))
        '            '    objBL.BranchId = Convert.ToInt32(HttpContext.Current.Session("BranchId"))
        '            '    objBL.AccessBy = Convert.ToInt32(HttpContext.Current.Session("UserId"))
        '            '    objBL.TransId = Convert.ToInt32(txtParentId.Text)
        '            '    objBL.TransIdDetail = Convert.ToInt32(TransIdDetailGV.Text)
        '            '    objBL.CatId = (CatIdGV.Text)
        '            '    objBL.SpareId = Convert.ToInt32(SpareIdGV.Text)

        '            '    Dim OutputParam As Integer = -10

        '            '    'objBL.SpareId = Convert.ToInt32(txtSpareId.Text);
        '            '    If SpareSerialNoGV.Text = "---Select---" Then
        '            '        objBL.SpareSerialNo = ""
        '            '    Else
        '            '        objBL.SpareSerialNo = (SpareSerialNoGV.Text)
        '            '    End If


        '            '    objBL.Qty = Convert.ToDecimal(QuantityGV.Text)


        '            '    Dim i As Boolean = objBL.DeleteSparePurchDetail(OutputParam)
        '            '    'If i Then
        '            '    '    If OutputParam = 1 Then
        '            '    '        ShowMsg(objConstant.GsMsgDelete)
        '            '    '    ElseIf OutputParam = 2 Then
        '            '    '        ShowMsg(objConstant.GsMsgNotDeleted)
        '            '    '    End If
        '            '    'End If

        '        End If


        '        'If SpareIdGV.Text = "0" Then
        '        '    Return
        '        'End If

        '        If dt.Rows.Count > 1 Then
        '            dt.Rows.Remove(dt.Rows(rowIndex))
        '            drCurrentRow = dt.NewRow()
        '            ViewState("CurrentTableFreq") = dt
        '            grvFreqDetails.DataSource = dt
        '            grvFreqDetails.DataBind()

        '            SetPreviousDataFreq()

        '            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
        '            Query = "Select * from tblTarget"
        '            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
        '            'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
        '        End If
        '        'End If
        '    Catch ex As Exception
        '        Throw ex
        '    End Try
    End Sub


    Protected Sub grvFreqDetails_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                'For Each cell As DataControlFieldCell In e.Row.Cells
                '    ' check all cells in one row
                '    For Each control As Control In cell.Controls

                '        Dim button As ImageButton = TryCast(control, ImageButton)
                '        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                '            ' Add delete confirmation
                '            button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                '        End If
                '    Next control
                'Next cell

            End If



        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub



    Protected Sub ddlFreqMTDGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetails.PageSize >= 10 Then
                grvFreqDetails.PageSize = TotDetailRecords + 1
                'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            End If

           
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGV"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(3).FindControl("txtDayNoGV"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0

            If lblid1.Text = "DATE" Then
                lblid2.Enabled = False
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False
                lblid2.Text = ""
                lblid3.Text = Day(CDate(Me.txtServStart.Text))
                lblid4.Text = ""
                lblid5.SelectedIndex = 0

            ElseIf lblid1.Text = "DOW" Then

                If txtFrequencyDesc.Text = "QUARTERLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"

                ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                    lblid2.Enabled = True
                    TextBoxMonthNo.Text = 1
                    lblid2.Text = "1"
                Else
                    lblid2.Enabled = False
                    TextBoxMonthNo.Text = ""
                    lblid2.Text = ""
                End If

                'lblid2.Enabled = False
                lblid3.Enabled = False
                lblid4.Enabled = True
                lblid5.Enabled = True

                'lblid2.Text = ""
                lblid3.Text = ""
                lblid4.Text = pWeekNumber(txtServStart.Text)
                lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper

            ElseIf lblid1.Text = "MONTH" Then
                lblid2.Enabled = True
                lblid3.Enabled = True
                lblid4.Enabled = False
                lblid5.Enabled = False

                TextBoxMonthNo.Text = "1"
                TextBoxDayNo.Text = Day(CDate(Me.txtServStart.Text))
                TextBoxWeekNo.Text = ""
                TextBoxWeekDOW.SelectedIndex = 0
                'lblid2.Text = ""
                'lblid3.Text = Day(CDate(Me.txtServStart.Text))
                'lblid4.Text = ""
                'lblid5.SelectedIndex = 0

            End If

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlFreqMTDGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlWeekDOWGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            If grvFreqDetails.PageSize >= 10 Then
                grvFreqDetails.PageSize = TotDetailRecords + 1
            End If

            'Dim lTargetDesciption As String
            'SetRowDataFreq()
            'SetRowData()
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlFreqMTDGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)
            Dim lblid5 As DropDownList = CType(xrow1.FindControl("ddlWeekDOWGV"), DropDownList)

            Dim rowindex1 As Integer
            rowindex1 = xrow1.RowIndex

            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(3).FindControl("txtDayNoGV"), TextBox)
            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)

            'Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            'Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowindex1).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            'Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            'Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            'Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowindex1).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            'lblid2.Text = ""
            'lblid3.Text = ""
            'lblid4.Text = ""
            'lblid5.SelectedIndex = 0
            '''''''''''''''''''
            txtDuplicateFreq.Text = "N"
            txtRecordAdded.Text = "N"

            ''''''''''''''''''''''''
            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                HasDuplicateFrequency = HighlightDuplicateFreq(grvFreqDetails)

                If HasDuplicateFrequency = True Then
                    txtDuplicateFreq.Text = "Y"
                    lblAlert.Text = "Duplicate Frequency has been selected"
                    'btnSvcSave.Enabled = False
                    'UpdatePanel1.Update()
                    'updpnlFreq.Update()
                    'btnSvcSave.Enabled = False
                    Exit Sub
                Else
                    'btnSvcSave.Enabled = True
                End If
            End If

            If rowindex1 = grvFreqDetails.Rows.Count - 1 Then
                'btnAddDetail_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If


            If lblid1.Text = "DOW" Then
                If lblid5.Text = "--SELECT--" Then
                    'If lblid5.SelectedIndex = "0" Then
                    lblid5.Text = CDate(txtServStart.Text).DayOfWeek.ToString().ToUpper
                    MsgBox("Invalid DOW for the Frequency.. ")
                End If


            End If

        Catch ex As Exception
            Throw ex

            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlWeekDOWGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub txtWeekNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtWeekNoGV"), TextBox)

            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Week cannot be less than 0", "str")
                lblid1.Text = "1"

            End If


            If txtFrequency.Text = "BI-MONTHLY" Or txtFrequency.Text = "QUARTERLY" Or txtFrequency.Text = "HALF-ANNUALLY" Or txtFrequency.Text = "THRICE-ANNUALLY" Or txtFrequency.Text = "ANNUALLY" Or txtFrequency.Text = "BI-ANNUALLY" Then
                Dim maxWeekNo As String = (txtDOWByWhichWeek.Text)
                maxWeekNo = maxWeekNo.Substring(0, maxWeekNo.IndexOf(","))

                If Val(lblid1.Text) > Val(maxWeekNo) Then
                    MsgBox("Week No cannot be more than " & Val(maxWeekNo))
                    lblid1.Text = pWeekNumber(txtServStart.Text)
                    Exit Sub
                End If
            End If


            If txtFrequency.Text = "BI-WEEKLY" Or txtFrequency.Text = "TRI-WEEKLY" Or txtFrequency.Text = "MONTHLY" Or txtFrequency.Text = "FORTNIGHTLY" Or txtFrequency.Text = "THRICE-MONTHLY" Or txtFrequency.Text = "TWICE-MONTHLY" Or txtFrequency.Text = "FOUR-TIMES-MONTHLY" Then
                Dim maxWeekNo As Integer = Val(txtDOWByWhichWeek.Text)
                If Val(lblid1.Text) > maxWeekNo Then
                    If txtFrequency.Text.ToUpper = "MONTHLY" Then
                        If Val(lblid1.Text) > 5 Then
                            MsgBox("Week No cannot be more than 5")
                            lblid1.Text = pWeekNumber(txtServStart.Text)
                            Exit Sub
                        End If
                    Else
                        MsgBox("Week No can not be bigger than " & maxWeekNo)
                        lblid1.Text = pWeekNumber(txtServStart.Text)
                        Exit Sub
                    End If

                End If
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtWeekNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub txtMonthNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtMonthNoGV"), TextBox)


            If Val(lblid1.Text) <= 0 Then
                MessageBox.Message.Alert(Page, "Month cannot be less than 0", "str")
                lblid1.Text = "1"

            End If

            Dim maxMonthNo As Integer = Val(txtMonthByWhichMonth.Text)
            If Val(lblid1.Text) > maxMonthNo Then
                MsgBox("Month No cannot be more than " & maxMonthNo)
                lblid1.Text = "1"
                Exit Sub
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtMonthNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub txtDayNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)

            Dim xrow1 As GridViewRow = CType(txt1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtDayNoGV"), TextBox)

            If Val(lblid1.Text) <= 0 Or Val(lblid1.Text) > 31 Then
                MessageBox.Message.Alert(Page, "Day cannot be less than 0 and more than 31", "str")
                lblid1.Text = Day(CDate(Me.txtServStart.Text))

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtDayNoGV_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub



    'Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
    '    Try
    '        If txtStatus.Text = "P" Then
    '            Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

    '            Exit Sub
    '        End If

    '        Dim confirmValue As String
    '        confirmValue = ""

    '        confirmValue = Request.Form("confirm_value")
    '        If Right(confirmValue, 3) = "Yes" Then
    '            Dim conn As MySqlConnection = New MySqlConnection()

    '            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '            conn.Open()

    '            Dim command2 As MySqlCommand = New MySqlCommand
    '            command2.CommandType = CommandType.Text

    '            Dim qry2 As String = "DELETE from tblContractDet where Rcno= @Rcno "

    '            command2.CommandText = qry2
    '            command2.Parameters.Clear()

    '            command2.Parameters.AddWithValue("@Rcno", txtRcno.Text)
    '            command2.Connection = conn
    '            command2.ExecuteNonQuery()



    '            Dim command3 As MySqlCommand = New MySqlCommand
    '            command3.CommandType = CommandType.Text

    '            Dim qry3 As String = "DELETE from tblContractServingTarget where SourceSQLId= @OrigCode "

    '            command3.CommandText = qry3
    '            command3.Parameters.Clear()

    '            command3.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
    '            command3.Connection = conn
    '            command3.ExecuteNonQuery()


    '            Dim command4 As MySqlCommand = New MySqlCommand
    '            command4.CommandType = CommandType.Text

    '            Dim qry4 As String = "DELETE from tblServiceContractFrequency where SourceSQLId= @OrigCode "

    '            command4.CommandText = qry4
    '            command4.Parameters.Clear()

    '            command4.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
    '            command4.Connection = conn
    '            command4.ExecuteNonQuery()

    '            conn.Close()

    '            'UpdateContractHeader()

    '            Dim message As String = "alert('Contract Detail is deleted Successfully!!!')"
    '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    '            btnADD_Click(sender, e)
    '            GridView1.DataBind()
    '        End If
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        Dim message As String = "alert('" + exstr + "!!!')"
    '        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


    '    End Try
    'End Sub


    'Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)
    '    ''AddNewRowWithDetailRec()
    '    'If TotDetailRecords > 0 Then
    '    '    AddNewRowWithDetailRec()
    '    'Else
    '    '    AddNewRow()
    '    'End If
    'End Sub

    ''''''''''End: Frequency




    '''''''''' Start: Target


    Private Sub FirstGridViewRowTarget()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("TargetDesc", GetType(String)))
            dt.Columns.Add(New DataColumn("TargetId", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceID", GetType(String)))
            dt.Columns.Add(New DataColumn("SourceSQLID", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("TargetDesc") = String.Empty
            dr("TargetId") = String.Empty
            dr("ContractNo") = String.Empty

            dr("ServiceID") = String.Empty
            dr("SourceSQLID") = 0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTable") = dt

            grvTargetDetails.DataSource = dt
            grvTargetDetails.DataBind()

            Dim btnAdd As Button = CType(grvTargetDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FirstGridViewRowTarget", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRow()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)

                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                 
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If

            SetPreviousData()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION AddNewRow", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRec()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        drCurrentRow("TargetID") = ""
                        drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.SelectedValue
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTable") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc1)
                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and  BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & "order by SpareDesc", "SpareDesc", "SpareId")

                        rowIndex1 += 1
                    Next j

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
         
                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousData()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousData()
        Try
            Dim rowIndex As Integer = 0

            Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        TextBoxTargetDesc.Text = dt.Rows(i)("TargetDesc").ToString()
                        TextBoxTargtId.Text = dt.Rows(i)("TargetId").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxServiceID.Text = dt.Rows(i)("ServiceID").ToString()
                        TextBoxSourceSQLID.Text = dt.Rows(i)("SourceSQLID").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxRcno.Text <> "0") And (TextBoxRcno.Text <> "") And (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                        '    Query = "Select * from tblTarget"
                        '    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        'End If

                        If (TextBoxTargtId.Text <> "0") And (TextBoxTargtId.Text <> "") And (String.IsNullOrEmpty(TextBoxTargtId.Text) = False) Then
                            Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                            Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                            PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                        End If

                      

                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        '    If dt.Rows.Count > 0 Then
                        '        If i < dt.Rows.Count - 2 Then
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString() & ", "
                        '        Else
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString()
                        '        End If
                        '        ''
                        '    End If
                        'End If
                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowData()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTable") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(2).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceIDGV"), TextBox)
                        Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(4).FindControl("txtSourceSQLIDGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("TargetDesc") = TextBoxTargetDesc.Text
                        dtCurrentTable.Rows(i - 1)("TargetId") = TextBoxTargtId.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceID") = TextBoxServiceID.Text
                        dtCurrentTable.Rows(i - 1)("SourceSQLID") = TextBoxSourceSQLID.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTable") = dtCurrentTable

                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousData()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    Public Function HighlightDuplicate(ByVal gridview As GridView) As Boolean
        HasDuplicateTarget = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As DropDownList = CType(grvTargetDetails.Rows(currentRow).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                Dim TextBoxTargetDescGV1 As DropDownList = CType(grvTargetDetails.Rows(otherRow).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)


              
                        If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                        GoTo nextrec
                    End If

                            duplicateRow = True

                            TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                            TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral

                            'TextBoxTargetDescGV.Font.Bold = True
                            'TextBoxTargetDescGV1.Font.Bold = True
                            'TextBoxTargetDescGV.BackColor = Drawing.Color.Purple
                            'TextBoxTargetDescGV1.BackColor = Drawing.Color.Purple


                            'Dim custVal As New CustomValidator()
                            'custVal.IsValid = False
                            'custVal.ErrorMessage = ""
                            'custVal.ErrorMessage = "Selected Target Already Exists"
                            'custVal.EnableClientScript = True

                            'custVal.ValidationGroup = "VGroup"
                            'Me.Page.Form.Controls.Add(custVal)

                            HasDuplicateTarget = True
                            Return HasDuplicateTarget


                        Else
                            duplicateRow = False
                            HasDuplicateTarget = False
                        End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateTarget
    End Function



    Protected Sub ddlTargetDescGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            'If grvTargetDetails.PageSize >= 10 Then
            '    grvTargetDetails.PageSize = TotDetailRecords + 1
            '    'TotDetailRecordsForPaging = TotDetailRecordsForPaging + 1
            'End If


            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlTargetDescGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGV"), TextBox)


            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT TargetId FROM tblTarget where descrip1= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("TargetId").ToString
            End If
            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            txtDuplicateTarget.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateTarget = True Then
                txtDuplicateTarget.Text = "Y"
                'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "Duplicate Target/Pests has been selected"
                Exit Sub
            End If


            If rowindex1 = grvTargetDetails.Rows.Count - 1 Then
                btnAddDetail_Click(sender, e)
                txtRecordAdded.Text = "Y"
            End If
            'txtTargetDesc.Text = txtTargetDesc.Text & lblid1.Text & ", "
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ddlTargetDescGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub grvTargetDetails_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvTargetDetails.RowDeleting
        Try

            If txtRecordDeleted.Text = "Y" Then
                txtRecordDeleted.Text = "N"
                Exit Sub
            End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                txtRecordDeleted.Text = "N"
                Dim Query As String
                SetRowData()

                Dim dt As DataTable = CType(ViewState("CurrentTable"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



                Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                        Dim conn As MySqlConnection = New MySqlConnection(constr)
                        conn.Open()

                        Dim commandUpdGS As MySqlCommand = New MySqlCommand
                        commandUpdGS.CommandType = CommandType.Text
                        commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
                        commandUpdGS.Connection = conn
                        commandUpdGS.ExecuteNonQuery()
                        conn.Close()
                        conn.Dispose()
                        'UpdateTargetDescription()

                    End If
                End If

                If dt.Rows.Count > 1 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTable") = dt
                    grvTargetDetails.DataSource = dt
                    grvTargetDetails.DataBind()

                    SetPreviousData()

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select TargetId, descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)

                    ''''''''''''''''''''''''''
                    HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

                    txtDuplicateTarget.Text = "N"

                    If HasDuplicateTarget = True Then
                        txtDuplicateTarget.Text = "Y"
                        'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
                        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                        lblAlert.Text = "Duplicate Target/Pests has been selected"
                        Exit Sub
                    End If


                    'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

                    'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
                    'Dim rowindex1 As Integer = xrow1.RowIndex

                    If txtRecordAdded.Text = "N" Then
                        btnAddDetail_Click(sender, e)
                    End If

                    txtRecordDeleted.Text = "Y"
                    'UpdateTargetDescription()

                    ''''''''''''''''''''''
                    'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
                End If


                ' '''''''''''''''''''''''
                'Start:Target
                SetRowData()

                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                If tableAdd IsNot Nothing Then
                    txtTargetDesc.Text = ""

                    For rowIndex1 As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargetId As TextBox = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("txtTargtIdGV"), TextBox)


                        'If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                        'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex1).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                        If (TextBoxTargetDesc.Text) <> "-1" Then
                            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargetId.Text.Trim
                            Else
                                txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = TextBoxTargetId.Text.Trim
                            End If

                        End If
                    Next rowIndex1
                End If

                UpdateTargetDescription()
                grvContractDetail.DataSourceID = "SqlDSContractDet"
                grvContractDetail.DataBind()
                lblMessage.Text = "DELETE : DETAIL TARGET RECORD SUCCESSFULLY UPDATED"

                dt.Dispose()

                'lblAlert.Text = ""

                'updpnlTarget.Update()
                'UpdatePanel1.Update()
                'UpdatePanel2.Update()

                'grvContractDetail.DataSourceID = "SqlDSContractDet"
                'grvContractDetail.DataBind()
                'End:Target

                ' ''''''''''''''''''''''''''''
                ''UpdateTargetDescription()
            End If
        Catch ex As Exception
            Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION grvTargetDetails_RowDeleting", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub UpdateTargetDescription()
        Try
            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcnoDetail.Text)
            'command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)

            command1.CommandText = "Update tblcontractdet set TargetId ='" & txtTargetId.Text & "', TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)

            command1.Connection = conn
            command1.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command1.Dispose()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateTargetDescription", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub grvTargetDetails_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvTargetDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvTargetDetails_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvTargetDetails.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRec()
        Else
            AddNewRow()
        End If
    End Sub

    ''''''''''' End : Target


    '''''''''' Start: Location


    Private Sub FirstGridViewRowLocation()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceName", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceAddress", GetType(String)))
            dt.Columns.Add(New DataColumn("Zone", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))
            dt.Columns.Add(New DataColumn("LocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Branch", GetType(String)))

            dr = dt.NewRow()

            dr("LocationId") = String.Empty
            dr("ServiceName") = String.Empty
            dr("ServiceAddress") = String.Empty
            dr("Zone") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty
           
            dr("Rcno") = 0
            dr("LocationGroup") = String.Empty
            dr("Branch") = String.Empty

            dt.Rows.Add(dr)

            ViewState("CurrentTableLoc") = dt

            grvServiceLocation.DataSource = dt
            grvServiceLocation.DataBind()

            Dim btnAdd As Button = CType(grvServiceLocation.FooterRow.Cells(1).FindControl("btnAddDetailLoc"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowLoc()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            'AddNewRow()
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    grvServiceLocation.DataSource = dtCurrentTable
                    grvServiceLocation.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(rowIndex2).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                        ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"

                        'If ddlContactType.Text.Trim = "CORPORATE" Then
                        '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                        'Else
                        '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                        'End If
                        'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId1)

                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxLocationId2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    ''Query = "Select LocationId, LocationId from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"

                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId2)
                   
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecLoc()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableLoc") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()


                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(rowIndex1).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                        ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                        'If ddlContactType.Text.Trim = "CORPORATE" Then
                        '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                        'Else
                        '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                        'End If
                        'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId1)
                      
                        rowIndex1 += 1
                    Next j

                    'Dim TextBoxLocationId2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    ''Query = "Select LocationId, LocationId from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxLocationId2)
                    dtCurrentTable.Dispose()
                End If


            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataLoc()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            'txtLocationId.Text = ""
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)


                        TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
                        TextBoxServiceName.Text = dt.Rows(i)("ServiceName").ToString()
                        TextBoxServiceAddress.Text = dt.Rows(i)("ServiceAddress").ToString()
                        TextBoxZone.Text = dt.Rows(i)("Zone").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()
                        TextBoxLocationGroup.Text = dt.Rows(i)("LocationGroup").ToString()
                        TextBoxBranch.Text = dt.Rows(i)("Branch").ToString()

                        'If (TextBoxLocationId.Text <> "0") And (TextBoxLocationId.Text <> "") And (String.IsNullOrEmpty(TextBoxLocationId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("ddlLocationIdGV"), DropDownList)
                        '    Query = "Select LocationID, LocationID from tblCompanyLocation"
                        '    PopulateDropDownList(Query, "LocationID", "LocationID", TextBoxTargetDesc2)
                        'End If

                        'If (String.IsNullOrEmpty(TextBoxLocationId.Text) = False) And (TextBoxLocationId.Text <> "0") And (TextBoxLocationId.Text <> "-1") Then

                        '    If dt.Rows.Count > 0 Then
                        '        If i < dt.Rows.Count - 2 Then
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString() & ", "
                        '        Else
                        '            txtTargetDesc.Text = txtTargetDesc.Text & dt.Rows(i)("TargetDesc").ToString()
                        '        End If
                        '        ''
                        '    End If
                        'End If
                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataLoc()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableLoc") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count


                        Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                        Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(1).FindControl("txtServiceNameGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(2).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(3).FindControl("txtZoneGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(4).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        Dim TextBoxLocationGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtLocationGroupGV"), TextBox)
                        Dim TextBoxBranch As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(5).FindControl("txtBranchGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceName") = TextBoxServiceName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("Zone") = TextBoxZone.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        dtCurrentTable.Rows(i - 1)("LocationGroup") = TextBoxLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Branch") = TextBoxBranch.Text
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableLoc") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataLoc()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    'Public Function HighlightDuplicateLoc(ByVal gridview As GridView) As Boolean
    '    HasDuplicateLocaion = False
    '    For currentRow As Integer = 0 To grvServiceLocation.Rows.Count - 2
    '        Dim rowToCompare As GridViewRow = grvServiceLocation.Rows(currentRow)

    '        For otherRow As Integer = currentRow + 1 To grvServiceLocation.Rows.Count - 1
    '            Dim row As GridViewRow = grvServiceLocation.Rows(otherRow)
    '            Dim duplicateRow As Boolean = False
    '            Dim TextBoxlLocationIdGV As DropDownList = CType(grvServiceLocation.Rows(currentRow).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
    '            Dim TextBoxlLocationIdGV1 As DropDownList = CType(grvServiceLocation.Rows(otherRow).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

    '            If ((TextBoxlLocationIdGV.Text) = (TextBoxlLocationIdGV1.Text)) Then

    '                duplicateRow = True

    '                TextBoxlLocationIdGV.BackColor = Drawing.Color.LightCoral
    '                TextBoxlLocationIdGV1.BackColor = Drawing.Color.LightCoral


    '                HasDuplicateLocaion = True
    '                Return HasDuplicateLocaion


    '            Else
    '                duplicateRow = False
    '                HasDuplicateLocaion = False
    '            End If

    '        Next otherRow
    '    Next currentRow

    '    Return HighlightDuplicateLoc
    'End Function



    'Protected Sub ddlLocationIdGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        lblAlert.Text = ""
    '        Dim lLocationId As String

    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlLocationIdGV"), DropDownList)
    '        Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
    '        Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
    '        Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

    '        lLocationId = lblid1.Text

    '        Dim rowindex1 As Integer = xrow1.RowIndex

    '        'Get Contact Details

    '        Dim conn As MySqlConnection = New MySqlConnection()

    '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '        conn.Open()
    '        Dim command1 As MySqlCommand = New MySqlCommand

    '        command1.CommandType = CommandType.Text

    '        If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
    '            command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
    '        ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
    '            command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
    '        End If
    '        command1.Connection = conn

    '        Dim dr As MySqlDataReader = command1.ExecuteReader()
    '        Dim dt As New DataTable
    '        dt.Load(dr)

    '        If dt.Rows.Count > 0 Then
    '            lblid2.Text = dt.Rows(0)("ServiceName").ToString
    '            lblid3.Text = dt.Rows(0)("Address1").ToString + ", " + dt.Rows(0)("AddStreet").ToString + ", " + dt.Rows(0)("AddBuilding").ToString + ", " + dt.Rows(0)("Addcity").ToString
    '            lblid4.Text = dt.Rows(0)("LocateGrp").ToString

    '            txtLocationId.Text = lblid1.Text
    '            txtServiceName.Text = lblid2.Text
    '            txtServiceAddress.Text = lblid3.Text
    '            txtZone.Text = lblid4.Text

    '            RetrieveContactDetails(lLocationId)
    '            '    txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString
    '            '    txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString

    '            '    txtPosition.Text = dt.Rows(0)("Contact1Position").ToString
    '            '    txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString

    '            '    txtTelephone.Text = dt.Rows(0)("Telephone").ToString
    '            '    txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString

    '            '    txtFax.Text = dt.Rows(0)("Fax").ToString
    '            '    txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString

    '            '    txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
    '            '    txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString

    '            '    txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString
    '            '    txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString

    '            '    txtEmail1.Text = dt.Rows(0)("Contact2Tel").ToString
    '            '    txtEmail2.Text = dt.Rows(0)("Contact2Tel2").ToString

    '            '    txtEmail1.Text = dt.Rows(0)("Email").ToString
    '            '    txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString

    '            '    txtLocationId.Text = lblid1.Text
    '            '    txtServiceName.Text = lblid2.Text
    '            '    txtServiceAddress.Text = lblid3.Text
    '            '    txtZone.Text = lblid4.Text

    '            '    txtContactPerson.Enabled = True
    '            '    txtContactPerson2.Enabled = True
    '            '    txtPosition.Enabled = True
    '            '    txtPosition2.Enabled = True
    '            '    txtTelephone.Enabled = True
    '            '    txtTelephone2.Enabled = True
    '            '    txtFax.Enabled = True
    '            '    txtFax2.Enabled = True
    '            '    txtCP2Telephone.Enabled = True
    '            '    txtCP2Telephone2.Enabled = True
    '            '    txtConPerMobile.Enabled = True
    '            '    txtConPerMobile2.Enabled = True
    '            '    txtEmail1.Enabled = True
    '            '    txtEmail2.Enabled = True
    '            '    txtAddress.Enabled = True
    '        End If
    '        ''HasDuplicateTarget = False
    '        ''Dim HasDuplicate As Boolean
    '        'HasDuplicateLocaion = HighlightDuplicateLoc(grvServiceLocation)

    '        'txtDuplicateTarget.Text = "N"
    '        'txtRecordAdded.Text = "N"

    '        'If HasDuplicateLocaion = True Then
    '        '    txtDuplicateTarget.Text = "Y"
    '        '    Dim message As String = "alert('Duplicate Location has been selected!!!')"
    '        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
    '        '    lblAlert.Text = "Duplicate Location has been selected"
    '        '    Exit Sub
    '        'End If




    '        updpnlLocation.Update()
    '        updnLocationDet1.Update()
    '        updnLocationDet2.Update()
    '        UpdatePanel1.Update()
    '    Catch ex As Exception
    '        Throw ex
    '    End Try
    'End Sub


    Protected Sub grvServiceLocation_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocation.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            'Dim confirmValue As String
            'confirmValue = ""

            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then

            '    txtRecordDeleted.Text = "N"
            '    Dim Query As String
            '    SetRowData()

            '    Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            '    Dim drCurrentRow As DataRow = Nothing
            '    Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



            '    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
            '    If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
            '        If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

            '            Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            conn.Open()

            '            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '            commandUpdGS.CommandType = CommandType.Text
            '            commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
            '            commandUpdGS.Connection = conn
            '            commandUpdGS.ExecuteNonQuery()

            '            conn.Close()
            '        End If
            '    End If

            '    If dt.Rows.Count > 1 Then
            '        dt.Rows.Remove(dt.Rows(rowIndex))
            '        drCurrentRow = dt.NewRow()
            '        ViewState("CurrentTableLoc") = dt
            '        grvTargetDetails.DataSource = dt
            '        grvTargetDetails.DataBind()

            '        SetPreviousData()

            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select * from tblTarget"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


            '        ''''''''''''''''''''''''''
            '        HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            '        txtDuplicateTarget.Text = "N"

            '        If HasDuplicateTarget = True Then
            '            txtDuplicateTarget.Text = "Y"
            '            Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
            '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            Exit Sub
            '        End If


            '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            '        'Dim rowindex1 As Integer = xrow1.RowIndex

            '        If txtRecordAdded.Text = "N" Then
            '            btnAddDetail_Click(sender, e)
            '        End If

            '        txtRecordDeleted.Text = "Y"

            '        UpdateTargetDescription()
            '        ''''''''''''''''''''''
            '        'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
            '    End If
            'End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    'Private Sub UpdateTargetDescription()
    '    Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcno.Text)
    '    command1.Connection = conn
    '    command1.ExecuteNonQuery()

    '    conn.Close()

    'End Sub

    Protected Sub grvServiceLocation_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvServiceLocation_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServiceLocation.PageIndex = e.NewPageIndex
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetailLoc_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecLoc()
        Else
            AddNewRowLoc()
        End If
    End Sub

    ''''''''''' End : Location
    '''''''''' Start: Services


    Private Sub FirstGridViewRowServices()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("ProductId", GetType(String)))
            dt.Columns.Add(New DataColumn("ProductDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerService", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalServices", GetType(String)))
            dt.Columns.Add(New DataColumn("CompletedServices", GetType(String)))
            dt.Columns.Add(New DataColumn("BalanceServices", GetType(String)))

            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("MonthByWhichMonth", GetType(String)))
            dt.Columns.Add(New DataColumn("DOWByWhichWeek", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Area", GetType(String)))

            dt.Columns.Add(New DataColumn("Rcno", GetType(String)))

            dr = dt.NewRow()

            dr("ProductId") = String.Empty
            dr("ProductDescription") = String.Empty
            dr("PricePerService") = String.Empty
            dr("ServiceFrequency") = String.Empty
            dr("TotalServices") = String.Empty
            dr("CompletedServices") = String.Empty
            dr("BalanceServices") = String.Empty
            dr("ContractNo") = String.Empty
            dr("AccountId") = String.Empty
            dr("MonthByWhichMonth") = String.Empty
            dr("DOWByWhichWeek") = String.Empty
            dr("UOM") = String.Empty
            dr("Area") = 0.0
            dr("Rcno") = 0
            dt.Rows.Add(dr)

            ViewState("CurrentTableServices") = dt

            grvServices.DataSource = dt
            grvServices.DataBind()

            Dim btnAdd As Button = CType(grvServices.FooterRow.Cells(1).FindControl("btnAddDetailServices"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowServices()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text

                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvServices.DataSource = dtCurrentTable
                    grvServices.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        Dim TextBoxTargetDesc1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)


                        Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(rowIndex2).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)


                        'Dim i2 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(rowIndex2).Cells(0).FindControl("ddlSpareIdGV"), DropDownList), "Select SpareId, SpareDesc from spare where VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & " and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")) & " order by SpareDesc", "SpareDesc", "SpareId")
                        rowIndex2 += 1
                        j += 1
                    Loop

                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    Query = "Select ProductID, ProductDesc from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)
                   

                    Dim TextBoxServiceFrequency2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency2)
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecServices()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String
            Dim Query1 As String

            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)


                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'drCurrentRow("TargetID") = ""
                        'drCurrentRow("ServiceID") = txtServiceId.Text
                        drCurrentRow("ContractNo") = txtContractNo.Text
                        drCurrentRow("Rcno") = 0

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text
                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServices") = dtCurrentTable

                    grvTargetDetails.DataSource = dtCurrentTable
                    grvTargetDetails.DataBind()

                    Dim rowIndex1 As Integer = 0

                    For j As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxProductID1 As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Query = "Select ProductID, ProductID from tblProduct"
                        PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID1)

                        Dim TextBoxFrequency As DropDownList = CType(grvTargetDetails.Rows(rowIndex1).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                        PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency)

                        rowIndex1 += 1
                    Next j

                    Dim TextBoxProductID2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxProductID2)

                    Dim TextBoxFrequency2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxFrequency2)
             
                End If
                dtCurrentTable.Dispose()

            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataServices()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String
            txtTargetDesc.Text = ""
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1
                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        TextBoxServiceId.Text = dt.Rows(i)("ProductId").ToString()
                        TextBoxServiceDescription.Text = dt.Rows(i)("ProductDescription").ToString()
                        TextBoxPricePerService.Text = dt.Rows(i)("PricePerService").ToString()
                        TextBoxServiceFrequency.Text = dt.Rows(i)("ServiceFrequency").ToString()
                        TextBoxTotalServices.Text = dt.Rows(i)("TotalServices").ToString()
                        TextBoxCompletedServices.Text = dt.Rows(i)("CompletedServices").ToString()
                        TextBoxBalanceServices.Text = dt.Rows(i)("BalanceServices").ToString()

                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()

                        TextBoxMonthByWhichMonth.Text = dt.Rows(i)("MonthByWhichMonth").ToString()
                        TextBoxDOWByWhichWeek.Text = dt.Rows(i)("DOWByWhichWeek").ToString()
                        TextBoxRcno.Text = dt.Rows(i)("Rcno").ToString()

                        'If (TextBoxServiceId.Text <> "0") And (TextBoxServiceId.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceId.Text) = False) Then
                        '    Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        '    Query = "Select * from tblProduct"
                        '    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc2)
                        'End If

                        'If (TextBoxServiceFrequency.Text <> "0") And (TextBoxServiceFrequency.Text <> "") And (String.IsNullOrEmpty(TextBoxServiceFrequency.Text) = False) Then
                        '    Dim TextBoxTargetDesc3 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        '    Query = "Select * from tblServiceFrequency"
                        '    PopulateDropDownList(Query, "Frequency", "Frequency", TextBoxTargetDesc3)
                        'End If

                    
                        rowIndex += 1
                    Next i
                End If

                dt.Dispose()
            End If
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataServices()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableServices") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                        Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(1).FindControl("txtServiceDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(2).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(3).FindControl("txtPricePerServiceGV"), TextBox)
                        Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(4).FindControl("txtAreaGV"), TextBox)
                        Dim TextBoxServiceFrequency As DropDownList = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("ddlServiceFrequencyGV"), DropDownList)
                        Dim TextBoxTotalServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(6).FindControl("txtTotalServicesGV"), TextBox)
                        Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(7).FindControl("txtCompletedServicesGV"), TextBox)
                        Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(8).FindControl("txtBalanceServicesGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(9).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServices.Rows(rowIndex).Cells(10).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxMonthByWhichMonth As TextBox = CType(grvServices.Rows(rowIndex).Cells(11).FindControl("txtMonthByWhichMonthGV"), TextBox)
                        Dim TextBoxDOWByWhichWeek As TextBox = CType(grvServices.Rows(rowIndex).Cells(12).FindControl("txtDOWByWhichWeekGV"), TextBox)
                        Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("ProductId") = TextBoxServiceId.SelectedValue
                        dtCurrentTable.Rows(i - 1)("ProductDescription") = TextBoxServiceDescription.Text
                        dtCurrentTable.Rows(i - 1)("PricePerService") = TextBoxPricePerService.Text
                        dtCurrentTable.Rows(i - 1)("ServiceFrequency") = TextBoxServiceFrequency.Text

                        dtCurrentTable.Rows(i - 1)("TotalServices") = TextBoxTotalServices.Text
                        dtCurrentTable.Rows(i - 1)("CompletedServices") = TextBoxCompletedServices.Text
                        dtCurrentTable.Rows(i - 1)("BalanceServices") = TextBoxBalanceServices.Text

                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        'dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text

                        dtCurrentTable.Rows(i - 1)("MonthByWhichMonth") = TextBoxMonthByWhichMonth.Text
                        dtCurrentTable.Rows(i - 1)("DOWByWhichWeek") = TextBoxDOWByWhichWeek.Text
                        dtCurrentTable.Rows(i - 1)("Rcno") = TextBoxRcno.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableServices") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServices()
        Catch ex As Exception
            Throw ex
            Exit Sub
        End Try

    End Sub

    Public Function HighlightDuplicateServices(ByVal gridview As GridView) As Boolean
        HasDuplicateServices = False
        For currentRow As Integer = 0 To grvServices.Rows.Count - 2
            Dim rowToCompare As GridViewRow = grvServices.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To grvServices.Rows.Count - 1
                Dim row As GridViewRow = grvServices.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxlServiceIdGV As DropDownList = CType(grvServices.Rows(currentRow).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                Dim TextBoxlServiceIdGV1 As DropDownList = CType(grvServices.Rows(otherRow).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)

                If ((TextBoxlServiceIdGV.Text) = (TextBoxlServiceIdGV1.Text)) Then

                    duplicateRow = True

                    TextBoxlServiceIdGV.BackColor = Drawing.Color.LightCoral
                    TextBoxlServiceIdGV1.BackColor = Drawing.Color.LightCoral
                    HasDuplicateServices = True
                    Return HasDuplicateServices

                Else
                    duplicateRow = False
                    HasDuplicateServices = False
                End If

            Next otherRow
        Next currentRow

        Return HighlightDuplicateServices
    End Function



    Protected Sub ddlServiceIdGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim lTargetDesciption As String

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceIdGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceDescriptionGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtAreaGV"), TextBox)

            lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT ProductDesc, WithArea FROM tblproduct where ProductID= '" & lTargetDesciption & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("ProductDesc").ToString

                If dt.Rows(0)("WithArea").ToString = "Y" Then
                    lblid3.Enabled = True
                    lblid3.ReadOnly = False
                Else
                    lblid3.Enabled = False
                    lblid3.ReadOnly = True
                End If

            End If

            txtServiceId.Text = lblid1.Text
            txtServiceDesc.Text = lblid2.Text


            UpdatePanel1.Update()

            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            HasDuplicateServices = HighlightDuplicateServices(grvServices)

            txtDuplicateTarget.Text = "N"
            txtRecordAdded.Text = "N"

            If HasDuplicateServices = True Then
                txtDuplicateTarget.Text = "Y"
                'Dim message As String = "alert('Duplicate Service has been selected!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                lblAlert.Text = "Duplicate Service has been selected"
                Exit Sub
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()

            'If rowindex1 = grvServices.Rows.Count - 1 Then

            '    btnAddDetailServices_Click(sender, e)
            '    txtRecordAdded.Text = "Y"
            'End If


        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceIdGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub ddlServiceFrequencyGV_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try

            Dim lFrequency As String
            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlServiceFrequencyGV"), DropDownList)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTotalServicesGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtMonthByWhichMonthGV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtDOWByWhichWeekGV"), TextBox)

            lFrequency = lblid1.Text
            lblAlert.Text = ""
            Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblServiceFrequency where Frequency= '" & lFrequency & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'lblid2.Text = dt.Rows(0)("Frequency").ToString
                lblid3.Text = dt.Rows(0)("MonthByWhichMonth").ToString
                lblid4.Text = dt.Rows(0)("DOWByWhichWeek").ToString
            End If
            'HasDuplicateTarget = False
            'Dim HasDuplicate As Boolean
            'HasDuplicateServices = HighlightDuplicateServices(grvServices)

            'txtDuplicateTarget.Text = "N"
            'txtRecordAdded.Text = "N"

            'If HasDuplicateServices = True Then
            '    txtDuplicateTarget.Text = "Y"
            '    Dim message As String = "alert('Duplicate Frequency has been selected!!!')"
            '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '    Exit Sub
            'End If


            'Start: Frequency

            txtFrequencyDesc.Text = lFrequency
            txtFrequency.Text = lFrequency


            txtMonthByWhichMonth.Text = lblid3.Text
            txtDOWByWhichWeek.Text = lblid4.Text

            'grvFreqDetails.Enabled = True
            'grvTargetDetails.Enabled = True

            UpdatePanel1.Update()

            grvFreqDetails.Enabled = True
            grvTargetDetails.Enabled = True

            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                txtNoofSvcInterval.Text = 2

            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Then
                txtNoofSvcInterval.Text = 3
                'ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                '    txtNoofSvcInterval.Text = 3
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 4
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 5
            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-MONTHLY" Then
                txtNoofSvcInterval.Text = 6
            Else
                txtNoofSvcInterval.Text = 1
            End If



            lblInterval.Text = ""
            Select Case txtFrequency.Text.ToUpper
                Case "DAILY"
                    lblInterval.Text = "Days"
                Case "WEEKLY", "TWICE-WEEKLY"
                    lblInterval.Text = "Wks"
                Case "BI-WEEKLY", "FORTNIGHTLY"
                    lblInterval.Text = "Bi-wks"
                Case "TRI-WEEKLY"
                    lblInterval.Text = "Tri-wks"
                Case "MONTHLY", "THRICE-MONTHLY"
                    lblInterval.Text = "Mths"
                Case "BI-MONTHLY"
                    lblInterval.Text = "Bi-mths"
                Case "QUARTERLY"
                    lblInterval.Text = "Quarterly"
                Case "HALF-ANNUALLY"
                    lblInterval.Text = "Half-Annually"
                Case "THRICE-ANNUALLY"
                    lblInterval.Text = "Thrice-Annually"
                Case "ANNUALLY"
                    lblInterval.Text = "Annually"
                Case "BI-ANNUALLY"
                    lblInterval.Text = "Bi-Annually"
            End Select




            Dim lInterval As Integer
            lInterval = txtNoofSvcInterval.Text


            Dim interval As Integer
            Dim endDate As Date
            If txtFrequencyDesc.Text = "MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If

                ''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If

                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    'If monthno = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                '''''''''''''''''''
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            ElseIf txtFrequencyDesc.Text = "DAILY" Then
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                Else
                    txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text)) + 1
                End If
                'txtNoofInterval.Text = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text)) + 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If interval > 0 Then

                 
                    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)



                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            interval = interval + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    interval = interval + 1
                    'End If
                End If
                txtNoofInterval.Text = interval
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If
                Dim tempInt As Decimal = Math.Round(weekNo / 2, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))

                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"

            ElseIf txtFrequencyDesc.Text = "TRI-WEEKLY" Then
                Dim weekNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    weekNo = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                If weekNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddDays(7 * weekNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            weekNo = weekNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    weekNo = weekNo + 1
                    'End If
                End If

                Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                txtNoofInterval.Text = tempInt
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

                'Dim weekNo As Integer = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'If weekNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddDays(7 * weekNo).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        weekNo = weekNo + 1
                '    End If
                'End If

                'Dim tempInt As Decimal = Math.Round(weekNo / 3, 2)
                'If tempInt.ToString.Contains(".") Then tempInt = tempInt + 1
                'txtNoofInterval.Text = tempInt
                'If txtNoofInterval.Text.Contains(".") Then
                '    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                'End If
                'If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "THRICE-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))


                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"
            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "5"

            ElseIf txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                Else
                    interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text).AddDays(1))
                End If
                'interval = DateDiff(DateInterval.Weekday, CDate(txtServStart.Text), CDate(txtServEnd.Text).AddDays(1))
                'quoted by Sen on 10.06.17 as no. of services were coming more
                'If interval > 0 Then
                '    endDate = CDate(txtServStart.Text).AddDays(7 * interval).AddDays(-1)
                '    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                '        interval = interval + 1
                '    End If
                'End If
                'quoted by Sen on 10.06.17 as no. of services were coming more
                txtNoofInterval.Text = interval


                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "6"
            ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If

                txtNoofInterval.Text = Math.Round(monthNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"

            ElseIf txtFrequencyDesc.Text = "TWICE-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthno = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthno = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthno = 0 And ((dayno = 28) Or (dayno = 29) Or (dayno = 30) Or (dayno = 31)) Then
                    monthno = 1
                End If

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno
                If txtNoofInterval.Text = 0 Then
                    txtNoofInterval.Text = 1
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "2"
            ElseIf txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                Dim monthno As Integer

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "3"

            ElseIf txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                Dim monthno As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthno = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthno As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthno > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthno = monthno - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthno + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthno = monthno + 1
                'End If
                If monthno > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthno).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthno = monthno + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthno = monthno + 1
                    'End If
                End If
                txtNoofInterval.Text = monthno

                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "4"
            ElseIf txtFrequencyDesc.Text = "QUARTERLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                ''''''''''''''''''''''''''''''''''
                Dim dayno As Integer
                dayno = 0

                If rbtFixedContinuous.SelectedIndex = 0 Then
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                    End If
                Else
                    If monthNo = 0 Then
                        dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                    End If
                End If
                'If monthNo = 0 Then
                '    dayno = DateDiff(DateInterval.Day, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                'End If


                If monthNo = 0 And ((dayno = 30) Or (dayno = 31)) Then
                    monthNo = 1
                End If
                ''''''''''''''''''''''
                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofInterval.Text = Math.Round(monthNo / 3, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "HALF-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If monthNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        monthNo = monthNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddMonths(monthNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    monthNo = monthNo + 1
                'End If
                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            monthNo = monthNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    monthNo = monthNo + 1
                    'End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 6), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "THRICE-ANNUALLY" Then
                Dim monthNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    monthNo = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim monthNo As Integer = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))


                If monthNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddMonths(monthNo).AddDays(-1)
                    If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                        monthNo = monthNo + 1
                    End If
                End If
                txtNoofInterval.Text = Math.Round((monthNo / 4), 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If

                'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))

                'If yearNo > 0 Then
                '    endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo).AddDays(-1)
                '    If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) > 0 Then
                '        yearNo = yearNo - 1
                '    End If
                'End If
                'endDate = CDate(mskServiceStartDate.Text).AddYears(yearNo + 1).AddDays(-1)
                'If Date.Compare(endDate, CDate(mskServiceEndDate.Text)) = 0 Then
                '    yearNo = yearNo + 1
                'End If

                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofInterval.Text = yearNo
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            ElseIf txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                Dim yearNo As Integer
                If rbtFixedContinuous.SelectedIndex = 0 Then
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                Else
                    yearNo = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtEndofLastSchedule.Text))
                End If
                'Dim yearNo As Integer = DateDiff(DateInterval.Year, CDate(txtServStart.Text), CDate(txtServEnd.Text))

              
                If yearNo > 0 Then
                    endDate = CDate(txtServStart.Text).AddYears(yearNo).AddDays(-1)

                    If rbtFixedContinuous.SelectedIndex = 0 Then
                        If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    Else
                        If Date.Compare(CDate(txtEndofLastSchedule.Text), endDate) > 0 Then
                            yearNo = yearNo + 1
                        End If
                    End If
                    'If Date.Compare(CDate(txtServEnd.Text), endDate) > 0 Then
                    '    yearNo = yearNo + 1
                    'End If
                End If

                txtNoofInterval.Text = Math.Round(yearNo / 2, 2)
                If txtNoofInterval.Text.Contains(".") Then
                    txtNoofInterval.Text = txtNoofInterval.Text.Substring(0, txtNoofInterval.Text.IndexOf("."))
                End If
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"
            Else
                txtNoofInterval.Text = 1
                If txtNoofSvcInterval.Text.Trim = "" Then txtNoofSvcInterval.Text = "1"


            End If
                fGetInterval()
                txtNoService.Text = CDec((txtNoofSvcInterval.Text)) * CDec((txtNoofInterval.Text))


                lblid2.Text = txtNoService.Text




                '''''''''''''''''''''''''''''''''''''''''
                If Convert.ToInt64(txtNoofInterval.Text) > 0 Then
                    'If Convert.ToDecimal(txtAgreeVal.Text) > 0.0 Then
                    '    txtValuePerService.Text = (Convert.ToDecimal(txtAgreeVal.Text) / Convert.ToInt64(txtNoofInterval.Text)).ToString("N2")
                    'End If
                Else
                    'Dim message As String = "alert('This Frequency CANNOT be selected within this Date Range!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    lblAlert.Text = "This Frequency CANNOT be selected within this Date Range"
                    Exit Sub

                End If


                '''''''''''''''''''''''''''''''''''''''''
                'Start:Frequency

                ' 'Delete first row

                SetRowDataFreq()

                Dim dtFreq As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRowFreq As DataRow = Nothing

                For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
                    dtFreq.Rows.Remove(dtFreq.Rows(0))
                    drCurrentRowFreq = dtFreq.NewRow()
                    ViewState("CurrentTableFreq") = dtFreq
                    grvFreqDetails.DataSource = dtFreq
                    grvFreqDetails.DataBind()

                    SetPreviousDataFreq()
                Next i

                FirstGridViewRowFreq()



                Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(3).FindControl("txtDayNoGV"), TextBox)
                Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                If txtFrequencyDesc.Text = "DAILY" Then
                    gSeq = "001"

                    gFreqMTD = "DAY"
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    TextBoxWeekDOW.Enabled = False
                    TextBoxLocation.Enabled = False
                    TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                    gFreqMTD = "DOW"
                    gSeq = "001"
                    gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    'TextBoxSeqNo.Text = "001"
                    gSeq = "001"
                    gFreqMTD = "DOW"
                    TextBoxWeekNo.Enabled = True
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        AddNewRowFreq()
                    Next i
                    'AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False

                    TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                    'TextBoxSeqNo.Text = "001"
                    gSeq = "001"
                    gFreqMTD = "DOW"

                    TextBoxFreqMTD.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        If i = 0 Then
                            gDOW = CDate(txtServStart.Text).DayOfWeek.ToString.ToUpper
                        Else
                            gDOW = ""
                        End If
                        AddNewRowFreq()
                    Next i
                    'AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False

                    TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                    'TextBoxSeqNo.Text = "001"
                    'gFreqMTD = "DOW"
                    TextBoxWeekNo.Enabled = True
                    For i As Integer = 0 To lInterval - 1
                        gSeq = "00" + (i + 1).ToString()
                        AddNewRowFreq()

                        TextBoxFreqMTD.Enabled = False
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False

                        '
                    Next i
                    'AddNewRowFreq()
                    'TextBoxFreqMTD.Enabled = False
                    'TextBoxMonthNo.Enabled = False
                    'TextBoxDayNo.Enabled = False
                    'TextBoxWeekNo.Enabled = True
                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    gSeq = "001"
                    TextBoxWeekNo.Enabled = True
                    AddNewRowFreq()
                TextBoxFreqMTD.Enabled = False
                '14.11.19
                TextBoxMonthNo.Enabled = True
                '14.11.19

                TextBoxDayNo.Enabled = False


                    'TextBoxWeekDOW.Enabled = False
                    'TextBoxLocation.Enabled = False
                    'TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False
                    'For i As Integer = 0 To lInterval
                    '    If i = 0 Then
                    '        AddNewRow()
                    '    Else
                    '        AddNewRowWithDetailRecFreq()

                    '    End If

                    'Next i

                ElseIf txtFrequencyDesc.Text = "ADHOC" Or txtFrequencyDesc.Text = "ONE-TIME" Or txtFrequencyDesc.Text = "SVC CALL" Or txtFrequencyDesc.Text = "FOLLOW UP" Then
                    gSeq = "001"

                    gFreqMTD = "DAY"
                    AddNewRowFreq()
                    TextBoxFreqMTD.Enabled = False
                    TextBoxMonthNo.Enabled = False
                    TextBoxDayNo.Enabled = False
                    TextBoxWeekNo.Enabled = False
                    TextBoxWeekDOW.Enabled = False
                    TextBoxLocation.Enabled = False
                    TextBoxBranchID.Enabled = False
                    TextBoxContractNo.Enabled = False
                    TextBoxSourceSQLID.Enabled = False

                End If

                'Delete last row

                SetRowDataFreq()

                Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
                Dim drCurrentRowFreq2 As DataRow = Nothing

                If dtFreq2.Rows.Count > 1 Then
                    dtFreq2.Rows.Remove(dtFreq2.Rows(0))
                    drCurrentRowFreq2 = dtFreq2.NewRow()
                    ViewState("CurrentTableFreq") = dtFreq2
                    grvFreqDetails.DataSource = dtFreq2
                    grvFreqDetails.DataBind()

                    SetPreviousDataFreq()

                End If

                '''''''''''''''''End:Frequency


                'If rowindex1 = grvServices.Rows.Count - 1 Then
                '    btnAddDetailServices_Click(sender, e)
                '    txtRecordAdded.Text = "Y"
                'End If
                'End: Frequency

                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dtFreq.Dispose()
                dtFreq2.Dispose()

        Catch ex As Exception
            'Throw ex
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlServiceFrequencyGV_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub grvServices_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvServiceLocation.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            'Dim confirmValue As String
            'confirmValue = ""

            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then

            '    txtRecordDeleted.Text = "N"
            '    Dim Query As String
            '    SetRowData()

            '    Dim dt As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            '    Dim drCurrentRow As DataRow = Nothing
            '    Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)



            '    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(5).FindControl("txtRcnoGV"), TextBox)
            '    If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
            '        If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

            '            Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            conn.Open()

            '            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '            commandUpdGS.CommandType = CommandType.Text
            '            commandUpdGS.CommandText = "Delete from tblcontractservingtarget where rcno = " & TextBoxRcno.Text
            '            commandUpdGS.Connection = conn
            '            commandUpdGS.ExecuteNonQuery()

            '            conn.Close()
            '        End If
            '    End If

            '    If dt.Rows.Count > 1 Then
            '        dt.Rows.Remove(dt.Rows(rowIndex))
            '        drCurrentRow = dt.NewRow()
            '        ViewState("CurrentTableLoc") = dt
            '        grvTargetDetails.DataSource = dt
            '        grvTargetDetails.DataBind()

            '        SetPreviousData()

            '        Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlTargetDescGV"), DropDownList)
            '        Query = "Select * from tblTarget"
            '        PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


            '        ''''''''''''''''''''''''''
            '        HasDuplicateTarget = HighlightDuplicate(grvTargetDetails)

            '        txtDuplicateTarget.Text = "N"

            '        If HasDuplicateTarget = True Then
            '            txtDuplicateTarget.Text = "Y"
            '            Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
            '            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            Exit Sub
            '        End If


            '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            '        'Dim rowindex1 As Integer = xrow1.RowIndex

            '        If txtRecordAdded.Text = "N" Then
            '            btnAddDetail_Click(sender, e)
            '        End If

            '        txtRecordDeleted.Text = "Y"

            '        UpdateTargetDescription()
            '        ''''''''''''''''''''''
            '        'Dim i6 As Integer = objCommon.PopulateDropDown(CType(grvTargetDetails.Rows(dt.Rows.Count - 1).Cells(1).FindControl("ddlSpareIdGV"), DropDownList), "Select * from spare where  VATRate > 0.00 and  CompId=" & Convert.ToString(HttpContext.Current.Session("CompId")) & "  and BranchId=" & Convert.ToString(HttpContext.Current.Session("BranchID")), "SpareDesc", "SpareId")
            '    End If
            'End If
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub

    'Private Sub UpdateTargetDescription()
    '    Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "Update tblcontractdet set TargetDesc = '" & txtTargetDesc.Text & "' where rcno = " & Convert.ToInt32(txtRcno.Text)
    '    command1.Connection = conn
    '    command1.ExecuteNonQuery()

    '    conn.Close()

    'End Sub

    Protected Sub grvServices_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs) Handles grvServices.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                ' Delete

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control
                Next cell

            End If

        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub
    Protected Sub grvServices_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)
        Try
            grvServices.PageIndex = e.NewPageIndex
        Catch ex As Exception
            'Throw ex
            Exit Sub
        End Try
    End Sub


    Protected Sub btnAddDetailServices_Click(ByVal sender As Object, ByVal e As EventArgs)
        'AddNewRowWithDetailRec()
        If TotDetailRecords > 0 Then
            AddNewRowWithDetailRecServices()
        Else
            AddNewRowServices()
        End If
    End Sub

    ''''''''''' End : Services

   
   
    Protected Sub btnReset_Click(sender As Object, e As EventArgs) Handles btnReset.Click
        Try
            Session("serviceschedulefrom") = ""
            Session("contractno") = ""
            Session("contractdetailfrom") = ""

            lblAccountIdContact.Visible = False
            'lblAccountIdContact1.Text = ""

            txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit " & txtLimit.Text
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SqlDSContract"

            GridView1.DataBind()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnReset_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    

    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        txtMode.Text = ""
        MakeMeNull()
        DisableControls()

        '   txt.Text = "select * from tblasset where rcno<>0;"
        'SqlDataSource1.SelectCommand = "SELECT * FROM tblcompany WHERE  Inactive=0 order by AccountId desc limit 100;"
        'SqlDataSource1.DataBind()
        SQLDSContract.DataBind()
        GridView1.DataBind()



        btnClient0.Visible = False
        btnClient1.Visible = False
        btnClient2.Visible = False
        btnClient3.Visible = False
        btnClient4.Visible = False
        btnClient5.Visible = False
        btnClient6.Visible = False
        btnClient7.Visible = False
        btnClient8.Visible = False
        btnClient9.Visible = False
        btnAutoRenew.Visible = False
        btnRecalculate.Visible = False
        btnExtendContractEndDate.Visible = False

        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
    End Sub


    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        lblMessage.Text = ""
        'txtMode.Text = ""
        Try

            If txtStatus.Text = "O" Then
                'btnSave.Enabled = True
            Else
                'btnSave.Enabled = False
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            If txtGS.Text = "P" Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"

                ' '''''''''''''''''''''''''''''''''''''''''''''''
                'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                '    Dim conn As MySqlConnection = New MySqlConnection()
                '    Dim command As MySqlCommand = New MySqlCommand

                '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                '    conn.Open()

                '    command.CommandType = CommandType.Text
                '    command.CommandText = "SELECT  x2412Edit FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                '    command.Connection = conn

                '    Dim dr1 As MySqlDataReader = command.ExecuteReader()
                '    Dim dt1 As New DataTable
                '    dt1.Load(dr1)

                '    If dt1.Rows.Count > 0 Then

                '        If Convert.ToBoolean(dt1.Rows(0)("x2412Edit")) = True Then
                '            txtPONo.Enabled = dt1.Rows(0)("x2412Edit")
                '            ddlBillingFreq.Enabled = dt1.Rows(0)("x2412Edit")
                '            txtContractNotes.Enabled = dt1.Rows(0)("x2412Edit")
                '            lblAlert.Text = ""

                '            EnableControls()
                '            btnSave.Enabled = True
                '            btnSave.ForeColor = System.Drawing.Color.Black
                '            btnCancel.Enabled = True
                '            btnCancel.ForeColor = System.Drawing.Color.Black
                '        End If
                '    End If
                '    conn.Close()
                '    conn.Dispose()
                'Else

                '    txtPONo.Enabled = True
                '    ddlBillingFreq.Enabled = True
                '    txtContractNotes.Enabled = True
                '    lblAlert.Text = ""
                '    EnableControls()
                '    btnSave.Enabled = True
                '    btnSave.ForeColor = System.Drawing.Color.Black

                '    btnCancel.Enabled = True
                '    btnCancel.ForeColor = System.Drawing.Color.Black
                'End If


                ' '''''''''''''''''''''''''''''''''''''''''''''''''''

                'lblMessage.Text = "ACTION: EDIT RECORD"
                'txtMode.Text = "EDIT"
                Exit Sub
            End If

            If txtRcno.Text = "" Then
                lblAlert.Text = "SELECT RECORD TO EDIT"
                Return
            End If
            'DisableControls()
            'txtMode.Text = "EDIT"
            lblMessage.Text = "ACTION: EDIT RECORD"

            txtMode.Text = "EDIT"
            EnableControls()
            txtOriginalAccountId.Text = txtAccountId.Text
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black
            btnQuit.Enabled = True
            btnQuit.ForeColor = System.Drawing.Color.Black

            tb1.ActiveTabIndex = 0

            '''''' User Access
            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = "SELECT x2412EditAgreeValue, x2412EditPortFolioValue, x2412Edit FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                command.Connection = conn

                Dim dr1 As MySqlDataReader = command.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then
                    If Convert.ToBoolean(dt1.Rows(0)("x2412EditAgreeValue")) = False Then
                        'If dt.Rows(0)("x2412EditAgreeValue").ToString() = False Then
                        'Me.btnADD.Enabled = dt.Rows(0)("x2412EditAgreeValue").ToString()
                        txtConDetVal.Attributes.Add("readonly", "readonly")
                        txtAgreeVal.Attributes.Add("readonly", "readonly")
                        txtDisPercent.Attributes.Add("readonly", "readonly")
                        txtDisAmt.Attributes.Add("readonly", "readonly")

                        txtConDetVal.BackColor = txtContractNo.BackColor
                        txtAgreeVal.BackColor = txtContractNo.BackColor
                        txtDisPercent.BackColor = txtContractNo.BackColor
                        txtDisAmt.BackColor = txtContractNo.BackColor
                    End If


                    If Convert.ToBoolean(dt1.Rows(0)("x2412EditPortFolioValue")) = True Then
                        txtPortfolioValue.Enabled = dt1.Rows(0)("x2412EditPortFolioValue")
                    End If

                    If Convert.ToBoolean(dt1.Rows(0)("x2412Edit")) = True Then
                        txtPONo.Enabled = dt1.Rows(0)("x2412Edit")
                        ddlBillingFreq.Enabled = dt1.Rows(0)("x2412Edit")
                        txtContractNotes.Enabled = dt1.Rows(0)("x2412Edit")
                    End If
                End If
                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt1.Dispose()
                dr1.Close()
            Else
                txtPONo.Enabled = True
                ddlBillingFreq.Enabled = True
                txtContractNotes.Enabled = True
            End If


            btnClient0.Visible = False
            btnClient1.Visible = False
            btnClient2.Visible = False
            btnClient3.Visible = False
            btnClient4.Visible = False
            btnClient5.Visible = False
            btnClient6.Visible = False
            btnClient7.Visible = False
            btnClient8.Visible = False
            btnClient9.Visible = False
            btnAutoRenew.Visible = False
            btnRecalculate.Visible = False
            btnExtendContractEndDate.Visible = False
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ViewFixedContinuous();</Script>", False)
            '''''' User Access
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEdit_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    'Protected Sub btnCancelSvc_Click(sender As Object, e As EventArgs) Handles btnCancelSvc.Click
    '    'MakeMeNull()
    '    'DisableControls()


    '    'SQLDSContract.DataBind()
    '    'GridView1.DataBind()
    'End Sub

    'Protected Sub btnSvcSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnSvcSearch.Click


    '    'Dim qry As String
    '    'qry = "SELECT * FROM tblcompanylocation where accountid='" & txtAccountIDtab2.Text & "'"

    '    'If String.IsNullOrEmpty(txtSearch.Text) = False Then
    '    '    qry = qry + " and (locationid='" & txtSearch.Text & "'"
    '    '    ' or address1='" & txtSearch.Text & "' or addstreet='" & txtSearch.Text & "' or addbuilding='" & txtSearch.Text & "'or addpostal='" & txtSearch.Text & "';"
    '    '    qry = qry + " or description like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or address1 like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addbuilding like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addstreet like '%" + txtSearch.Text + "%'"
    '    '    qry = qry + " or addpostal like '" + txtSearch.Text + "%')"
    '    'End If

    '    'MakeSvcNull()
    '    'SqlDataSource2.SelectCommand = qry
    '    'SqlDataSource2.DataBind()
    '    'GridView2.DataBind()
    '    txtSearch.Text = "Search here"
    'End Sub

    Protected Sub btnSvcAdd_Click(sender As Object, e As EventArgs) Handles btnSvcAdd.Click
        Try
            If txtGS.Text = "P" Then
                lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
                Exit Sub
            End If

            If txtStatus.Text = "O" Then

            Else
                'btnSave.Enabled = False
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            MakeSvcDetailNull()
            DisableSvcControls()
            'MakeSvcNull()
            lblMessage.Text = "ACTION: ADD SERVICE DETAILS"

            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray
            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
         
            btnCopy.Enabled = False
            btnCopy.ForeColor = System.Drawing.Color.Gray

            btnQuit.Enabled = False
            btnQuit.ForeColor = System.Drawing.Color.Gray
            btnSvcAdd.Enabled = False
            btnSvcAdd.ForeColor = System.Drawing.Color.Gray


            txtSvcMode.Text = "NEW"
            txtContractGroupSelected.Text = ddlContractGrp.Text


            '''''''''''''''''''''''''''''''''''''''
            FindLocations()

            ''''''''''''''''''''''''''''''''''''''
            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    SqlDSCompanyLocation.SelectCommand=
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"

            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"
            'End If
            gvLocation.DataBind()

            '''''''''''''''''' Find Location

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                Dim sqlstr As String
                sqlstr = ""

                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup = '" & ddlContractGrp.Text & "' limit 1 "

                ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and LocationID = '" & lblAccountIdContactLocation1.Text.Trim & "' and ContractGroup  = '" & ddlContractGrp.Text & "' limit 1"
                End If

                'Dim lContractGroup As String
                'lContractGroup = ""
                'lContractGroup = Left(ddlContractGrp.Text, 2)
                'If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                '    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and ContractGroup like '" & lContractGroup & "%'"

                'ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                '    sqlstr = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and ContractGroup  like '" & lContractGroup & "%'"
                'End If

                Dim command As MySqlCommand = New MySqlCommand

                Dim conn As MySqlConnection = New MySqlConnection()
                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                command.CommandType = CommandType.Text
                command.CommandText = sqlstr
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New System.Data.DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '''''''''''''''''''''''''''''''''''''
                    Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
                    Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
                    Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
                    Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)
                    Dim lblid5 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtLocationGroupGV"), TextBox)
                    Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtBranchGV"), TextBox)
                    'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

                    'If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
                    '    txtLocationId.Text = " "
                    'Else
                    '    txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
                    '    lblid1.Text = txtLocationId.Text
                    'End If

                    txtLocationId.Text = lblAccountIdContactLocation1.Text.Trim
                    lblid1.Text = txtLocationId.Text

                    'If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
                    '    txtServiceName.Text = " "
                    'Else
                    '    txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
                    '    lblid2.Text = txtServiceName.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceName").ToString.Trim) = False Then
                        txtServiceName.Text = dt.Rows(0)("ServiceName").ToString
                        lblid2.Text = txtServiceName.Text
                    End If

                    'If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
                    '    txtServiceAddress.Text = " "
                    'Else
                    '    txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("Address1").ToString.Trim) = False Then
                        txtServiceAddress.Text = dt.Rows(0)("Address1").ToString
                        lblid3.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("Address1").ToString
                    End If


                    'If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddStreet").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddStreet").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddBuilding").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddBuilding").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If


                    'If gvLocation.SelectedRow.Cells(5).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(5).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If


                  


                    'If gvLocation.SelectedRow.Cells(6).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(6).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddCity").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddCity").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("AddPostal").ToString.Trim) = False Then
                        txtServiceAddress.Text = txtServiceAddress.Text + ", " + dt.Rows(0)("AddPostal").ToString
                        lblid3.Text = txtServiceAddress.Text
                    End If


                    If String.IsNullOrEmpty(dt.Rows(0)("ServiceLocationGroup").ToString.Trim) = False Then
                        lblid5.Text = dt.Rows(0)("ServiceLocationGroup").ToString
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("LocateGRP").ToString.Trim) = False Then
                        lblid4.Text = dt.Rows(0)("LocateGRP").ToString
                        txtLocationGroup.Text = lblid5.Text
                    End If

                    If String.IsNullOrEmpty(dt.Rows(0)("Location").ToString.Trim) = False Then
                        lblid6.Text = dt.Rows(0)("Location").ToString
                        txtBranch.Text = lblid6.Text
                    End If


                    'If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then
                    '    lblid4.Text = " "
                    'Else
                    '    lblid4.Text = gvLocation.SelectedRow.Cells(7).Text
                    'End If

                    'If gvLocation.SelectedRow.Cells(22).Text = "&nbsp;" Then
                    '    lblid5.Text = " "
                    'Else
                    '    txtLocationGroup.Text = gvLocation.SelectedRow.Cells(22).Text
                    '    lblid5.Text = gvLocation.SelectedRow.Cells(22).Text
                    'End If

                    'If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then

                    'Else
                    '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(23).Text)
                    '    lblid3.Text = txtServiceAddress.Text
                    'End If

                    RetrieveContactDetails(txtLocationId.Text.Trim)

                    ''''''''''''''''''''''''''''''''''''''
                End If

                conn.Close()
                conn.Dispose()
                dt.Dispose()
                command.Dispose()
                dr.Close()
            End If


            '''''''''''''''''' Find Location

            'txtServiceName.Focus()

            'FirstGridViewRowLocation()
            'Dim Query10 As String
            'Query10 = ""
            'Dim TextBoxLocationId1 As DropDownList = CType(grvServiceLocation.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    Query10 = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
            'End If

            'PopulateDropDownList(Query10, "LocationID", "LocationID", TextBoxLocationId1)


            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    gvLocation.DataSourceID = "SqlDSCompanyLocation"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    gvLocation.DataSourceID = "SqlDSPersonLocation"

            'End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcAdd_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnSvcEdit_Click(sender As Object, e As EventArgs) Handles btnSvcEdit.Click
        lblMessage.Text = ""

        If txtGS.Text = "P" Then
            lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If txtStatus.Text = "O" Then
        Else
            lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If txtRcnoDetail.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return

        End If
        DisableSvcControls()
        txtSvcMode.Text = "EDIT"
        lblMessage.Text = "ACTION: EDIT SERVICE DETAILS"
        FindLocations()
    End Sub

    Protected Sub btnSvcDelete_Click(sender As Object, e As EventArgs) Handles btnSvcDelete.Click
        lblMessage.Text = ""

        If txtGS.Text = "P" Then
            lblAlert.Text = "CONTRACT HAS ALREADY BEEN SCHEDULED"
            Exit Sub
        End If

        'If txtStatus.Text = "O" Then
        '    btnSave.Enabled = True
        'Else
        '    'btnSave.Enabled = False
        '    lblAlert.Text = "ONLY 'O-OPEN' CONTRACTS CANE BE DELETED"
        '    Exit Sub
        'End If

        If txtRcnoDetail.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If


        Try
            If txtStatus.Text <> "O" Then
                'Dim message1 As String = "alert('Contract status is POSTED.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)
                lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
                Exit Sub
            End If

            'If txtStatus.Text = "V" Then
            '    'Dim message1 As String = "alert('Contract status is VOID.. Cannot be DELETED!!!')"
            '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)
            '    lblAlert.Text = "CONTRACT STATUS IS VOID.. CANNOT BE DELETED"
            '    Exit Sub
            'End If



            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                lblMessage.Text = "ACTION: DELETE CONTRACT DETAILS"
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim qry2 As String = "DELETE from tblContractDet where Rcno= @Rcno "

                command2.CommandText = qry2
                command2.Parameters.Clear()

                command2.Parameters.AddWithValue("@Rcno", txtRcnoDetail.Text)
                command2.Connection = conn
                command2.ExecuteNonQuery()

                Dim command3 As MySqlCommand = New MySqlCommand
                command3.CommandType = CommandType.Text

                Dim qry3 As String = "DELETE from tblContractServingTarget where SourceSQLId= @OrigCode "

                command3.CommandText = qry3
                command3.Parameters.Clear()

                command3.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
                command3.Connection = conn
                command3.ExecuteNonQuery()


                Dim command4 As MySqlCommand = New MySqlCommand
                command4.CommandType = CommandType.Text

                Dim qry4 As String = "DELETE from tblServiceContractFrequency where SourceSQLId= @OrigCode "

                command4.CommandText = qry4
                command4.Parameters.Clear()

                command4.Parameters.AddWithValue("@OrigCode", txtOrigCode.Text)
                command4.Connection = conn
                command4.ExecuteNonQuery()

                conn.Close()
                conn.Dispose()
                command2.Dispose()
                command3.Dispose()
                command4.Dispose()
                'UpdateContractHeader()

                'Dim message As String = "alert('Contract Detail is deleted Successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                'btnADD_Click(sender, e)

                'grvContractDetail.DataBind()
                lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'Dim message As String = "alert('" + exstr + "!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcDelete_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
        EnableSvcControls()

        '    If String.IsNullOrEmpty(txtAccountId.Text) Then
        '        SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = " & txtclientid.Text
        '    Else
        '        SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = " & txtAccountId.Text
        '    End If

        SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

        grvContractDetail.DataSourceID = "SqlDSContractDet"
        grvContractDetail.DataBind()

        'SqlDSContractDet.DataBind()
        'grvContractDetail.DataBind()
        'MakeSvcNull()
        MakeSvcDetailNull()
        UpdateContractHeader()
        lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"
        'End If
    End Sub

    Protected Sub grvContractDetail_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvContractDetail.SelectedIndexChanged
        'Start: Detail Records
        'MakeMeNull()

        'grvFreqDetails.Enabled = True
        'grvTargetDetails.Enabled = True

        Try
           
            MakeSvcDetailNull()

            'Dim editindex As Integer
            Dim editindex As Integer = grvContractDetail.SelectedIndex

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then

                editindex = txtSelectedIndex.Text
            Else
                editindex = grvContractDetail.SelectedIndex
            End If

            If editindex < 0 Then
                btnSvcAdd.Enabled = True
                btnSvcAdd.ForeColor = System.Drawing.Color.Black
                Exit Sub

                'btnSvcEdit.Enabled = True
                'btnSvcDelete.Enabled = True
            End If

            'MakeSvcDetailNull()
            DisableSvcControls()
            FirstGridViewRowLocation()

            rcno = DirectCast(grvContractDetail.Rows(editindex).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()
            txtRcnoDetail.Text = rcno.ToString()
            'Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractDet where rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("Frequency").ToString <> "" Then : txtFrequency.Text = dt.Rows(0)("Frequency").ToString : End If
                If dt.Rows(0)("FrequencyDesc").ToString <> "" Then : txtFrequencyDesc.Text = dt.Rows(0)("FrequencyDesc").ToString : End If
                If dt.Rows(0)("ServiceID").ToString <> "" Then : txtServiceId.Text = dt.Rows(0)("ServiceID").ToString : End If
                If dt.Rows(0)("ServiceDesc").ToString <> "" Then : txtServiceDesc.Text = dt.Rows(0)("ServiceDesc").ToString : End If
                If dt.Rows(0)("NoService").ToString <> "" Then : txtNoService.Text = dt.Rows(0)("NoService").ToString : End If
                If dt.Rows(0)("NoofSvcInterval").ToString <> "" Then : txtNoofSvcInterval.Text = dt.Rows(0)("NoofSvcInterval").ToString : End If
                If dt.Rows(0)("NoofInterval").ToString <> "" Then : txtNoofInterval.Text = dt.Rows(0)("NoofInterval").ToString : End If
                If dt.Rows(0)("ServiceNotes").ToString <> "" Then : txtServiceNotes.Text = dt.Rows(0)("ServiceNotes").ToString : End If
                If dt.Rows(0)("Value").ToString <> "" Then : txtValuePerService.Text = dt.Rows(0)("Value").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtSourceSQLID.Text = dt.Rows(0)("OrigCode").ToString : End If
                If dt.Rows(0)("OrigCode").ToString <> "" Then : txtOrigCode.Text = dt.Rows(0)("OrigCode").ToString : End If

                If dt.Rows(0)("UOM").ToString <> "" Then : txtUOM.Text = dt.Rows(0)("UOM").ToString : End If
                If dt.Rows(0)("Area").ToString <> "" Then : txtArea.Text = dt.Rows(0)("Area").ToString : End If

                If dt.Rows(0)("ContactPerson").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString : End If
                If dt.Rows(0)("ContactPerson2").ToString <> "" Then : txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString : End If
                If dt.Rows(0)("Contact1Position").ToString <> "" Then : txtPosition.Text = dt.Rows(0)("Contact1Position").ToString : End If
                If dt.Rows(0)("Contact2Position").ToString <> "" Then : txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString : End If
                If dt.Rows(0)("Telephone").ToString <> "" Then : txtTelephone.Text = dt.Rows(0)("Telephone").ToString : End If

                If dt.Rows(0)("Telephone2").ToString <> "" Then : txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString : End If
                If dt.Rows(0)("Fax").ToString <> "" Then : txtFax.Text = dt.Rows(0)("Fax").ToString : End If
                If dt.Rows(0)("Contact2Fax").ToString <> "" Then : txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString : End If
                If dt.Rows(0)("Contact2Tel").ToString <> "" Then : txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString : End If
                If dt.Rows(0)("Contact2Tel2").ToString <> "" Then : txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString : End If

                If dt.Rows(0)("Mobile").ToString <> "" Then : txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString : End If
                If dt.Rows(0)("Contact2Mobile").ToString <> "" Then : txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString : End If
                If dt.Rows(0)("Email").ToString <> "" Then : txtEmail1.Text = dt.Rows(0)("Email").ToString : End If
                If dt.Rows(0)("Contact2Email").ToString <> "" Then : txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString : End If

                If dt.Rows(0)("LocationID").ToString <> "" Then : txtLocationId.Text = dt.Rows(0)("LocationID").ToString : End If
                If dt.Rows(0)("ServiceName").ToString <> "" Then : txtServiceName.Text = dt.Rows(0)("ServiceName").ToString : End If
                If dt.Rows(0)("Address1").ToString <> "" Then : txtServiceAddress.Text = dt.Rows(0)("Address1").ToString : End If
                If dt.Rows(0)("LocateGRP").ToString <> "" Then : txtZone.Text = dt.Rows(0)("LocateGRP").ToString : End If
                If dt.Rows(0)("ServiceLocationGroup").ToString <> "" Then : txtLocationGroup.Text = dt.Rows(0)("ServiceLocationGroup").ToString : End If
                If dt.Rows(0)("Location").ToString <> "" Then : txtBranch.Text = dt.Rows(0)("Location").ToString : End If


            End If

            EnableSvcControls()
            btnSvcEdit.Enabled = True

            btnSvcDelete.Enabled = True
            btnSvcEdit.ForeColor = Color.Black
            btnSvcDelete.ForeColor = Color.Black

            'Start: Location

            SetRowDataLoc()

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableLoc"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvServiceLocation.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableLoc") = dtScdrLoc
                grvServiceLocation.DataSource = dtScdrLoc
                grvServiceLocation.DataBind()

                SetPreviousDataLoc()
            Next i



            FirstGridViewRowLocation()
            Dim cmdContratLoc As MySqlCommand = New MySqlCommand
            cmdContratLoc.CommandType = CommandType.Text
            cmdContratLoc.CommandText = "SELECT * FROM tblcontractDet where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratLoc.Connection = conn

            Dim drLocation As MySqlDataReader = cmdContratLoc.ExecuteReader()
            Dim dtLocation As New DataTable
            dtLocation.Load(drLocation)

            Dim TotDetailRecordsTarget = dtLocation.Rows.Count
            If dtLocation.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtLocation.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxLocationId As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocationID"))

                    Dim TextBoxServiceName As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtServiceNameGV"), TextBox)
                    TextBoxServiceName.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceName"))

                    Dim TextBoxContractNo As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceAddress As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtServiceAddressGV"), TextBox)
                    TextBoxServiceAddress.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Address1"))

                    Dim TextBoxZone As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtZoneGV"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtLocation.Rows(rowIndex)("LocateGRP"))

                    'Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGV"), TextBox)
                    'TextBoxSourceSQLID.Text = Convert.ToString(dtLocation.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Rcno"))

                    Dim TextBoxLocaionGroup As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtLocationGroupGV"), TextBox)
                    TextBoxLocaionGroup.Text = Convert.ToString(dtLocation.Rows(rowIndex)("ServiceLocationGroup"))

                    Dim TextBoxLocaion As TextBox = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("txtBranchGV"), TextBox)
                    TextBoxLocaion.Text = Convert.ToString(dtLocation.Rows(rowIndex)("Location"))

                    'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" ThenIf txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query10 = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then



                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceLocation.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    'Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                    'If ddlContactType.Text.Trim = "CORPORATE" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'Else
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                    'End If

                    'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                    '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                    'End If

                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else
                FirstGridViewRowLocation()
                'Dim Query As String
                'Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                'Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                'If ddlContactType.Text.Trim = "CORPORATE" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'Else
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                'End If

                'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'End If
                'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc)
            End If

            'End: Location



            'Start: Service Detail


            SetRowDataServices()
            Dim dtScdrServices As DataTable = CType(ViewState("CurrentTableServices"), DataTable)
            Dim drCurrentRowServices As DataRow = Nothing

            For i As Integer = 0 To grvServices.Rows.Count - 1
                dtScdrServices.Rows.Remove(dtScdrServices.Rows(0))
                drCurrentRowServices = dtScdrServices.NewRow()
                ViewState("CurrentTableServices") = dtScdrServices
                grvServices.DataSource = dtScdrServices
                grvServices.DataBind()
                SetPreviousDataServices()

            Next i




            FirstGridViewRowServices()
            Dim cmdContratServices As MySqlCommand = New MySqlCommand
            cmdContratServices.CommandType = CommandType.Text
            cmdContratServices.CommandText = "SELECT * FROM tblcontractDet where Rcno=" & Convert.ToInt32(txtRcnoDetail.Text)
            cmdContratServices.Connection = conn

            Dim drServices As MySqlDataReader = cmdContratServices.ExecuteReader()
            Dim dtServices As New DataTable
            dtServices.Load(drServices)

            Dim TotDetailRecordsServices = dtServices.Rows.Count
            If dtServices.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtServices.Rows
                    'If (TotDetailRecordsTarget > (rowIndex + 1)) Then
                    '    AddNewRowLoc()
                    'End If

                    Dim TextBoxServiceId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    TextBoxServiceId.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceId"))

                    Dim TextBoxServiceDescription As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtServiceDescriptionGV"), TextBox)
                    TextBoxServiceDescription.Text = Convert.ToString(dtServices.Rows(rowIndex)("ServiceDesc"))

                    Dim TextBoxContractNo As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtServices.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxPricePerService As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtPricePerServiceGV"), TextBox)
                    TextBoxPricePerService.Text = Convert.ToString(dtServices.Rows(rowIndex)("Value"))

                    Dim TextBoxLocationId As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    TextBoxLocationId.Text = Convert.ToString(dtServices.Rows(rowIndex)("Frequency"))

                    Dim TextBoxZone As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtTotalServicesGV"), TextBox)
                    TextBoxZone.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoService"))

                    Dim TextBoxCompletedServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtCompletedServicesGV"), TextBox)
                    TextBoxCompletedServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("NoServiceCompleted"))

                    'Dim TextBoxBalanceServices As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtBalanceServicesGV"), TextBox)
                    'TextBoxBalanceServices.Text = Convert.ToString(dtServices.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtServices.Rows(rowIndex)("Rcno"))

                    Dim TextBoxUOM As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = Convert.ToString(dtServices.Rows(rowIndex)("UOM"))

                    Dim TextBoxArea As TextBox = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("txtAreaGV"), TextBox)
                    TextBoxArea.Text = Convert.ToString(dtServices.Rows(rowIndex)("Area"))

                    Dim Query As String
                    Dim TextBoxTargetDesc1 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceIdGV"), DropDownList)
                    Query = "Select ProductID, ProductID from tblProduct"
                    PopulateDropDownList(Query, "ProductID", "ProductID", TextBoxTargetDesc1)

                    Dim Query1 As String
                    Dim TextBoxServiceFrequency1 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlServiceFrequencyGV"), DropDownList)
                    Query1 = "Select Frequency, Frequency from tblServiceFrequency order by Frequency"
                    PopulateDropDownList(Query1, "Frequency", "Frequency", TextBoxServiceFrequency1)

                    'Dim Query As String
                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServices.Rows(rowIndex).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                    'Query = "Select * from tblCompanyLocation"
                    'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else

                FirstGridViewRowServices()
                'Dim Query As String
                'Dim TextBoxTargetDesc As DropDownList = CType(grvServices.Rows(0).Cells(0).FindControl("ddlLocationIdGV"), DropDownList)
                ''Query = "Select * from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'"
                'If ddlContactType.Text.Trim = "CORPORATE" Then
                '    Query = "Select LocationID from tblcompanylocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"
                'Else
                '    Query = "Select LocationID from tblpersonlocation where AccountID = '" & txtAccountId.Text.Trim & "' order by LocationID"

                'End If
                'PopulateDropDownList(Query, "LocationId", "LocationId", TextBoxTargetDesc)
            End If

            'End: Service Detail



            'Start: Frequency

            ''''''''''''''
            Dim commandByWhich As MySqlCommand = New MySqlCommand
            commandByWhich.CommandType = CommandType.Text
            commandByWhich.CommandText = "SELECT MonthByWhichMonth, DOWByWhichWeek FROM tblservicefrequency where Frequency= '" & txtFrequency.Text & "'"
            commandByWhich.Connection = conn

            Dim drByWhich As MySqlDataReader = commandByWhich.ExecuteReader()
            Dim dtByWhich As New DataTable
            dtByWhich.Load(drByWhich)

            If dtByWhich.Rows.Count > 0 Then

                If dtByWhich.Rows(0)("MonthByWhichMonth").ToString <> "" Then : txtMonthByWhichMonth.Text = dtByWhich.Rows(0)("MonthByWhichMonth").ToString : End If
                If dtByWhich.Rows(0)("DOWByWhichWeek").ToString <> "" Then : txtDOWByWhichWeek.Text = dtByWhich.Rows(0)("DOWByWhichWeek").ToString : End If

            End If

            '''''''''''''''''''

            SetRowDataFreq()


            Dim dtFreq1 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            Dim drCurrentRowFreq As DataRow = Nothing

            For i As Integer = 0 To grvFreqDetails.Rows.Count - 1
                dtFreq1.Rows.Remove(dtFreq1.Rows(0))
                drCurrentRowFreq = dtFreq1.NewRow()
                ViewState("CurrentTableFreq") = dtFreq1
                grvFreqDetails.DataSource = dtFreq1
                grvFreqDetails.DataBind()

                SetPreviousDataFreq()

            Next i


            FirstGridViewRowFreq()

            Dim cmdContratFreq As MySqlCommand = New MySqlCommand
            cmdContratFreq.CommandType = CommandType.Text
            cmdContratFreq.CommandText = "SELECT Rcno, FreqMtd, SeqNo, DayNo, MonthNo, WeekNo, WeekDOW, Location, BranchID, ContractNo, SourceSQLID  FROM tblServicecontractFrequency where SourceSQLID=" & Convert.ToInt32(txtOrigCode.Text)
            cmdContratFreq.Connection = conn

            Dim drFreq As MySqlDataReader = cmdContratFreq.ExecuteReader()
            Dim dtFreq As New DataTable
            dtFreq.Load(drFreq)


            If dtFreq.Rows.Count > 0 Then   '23.02.17 ???

                If txtNoofSvcInterval.Text = "1" Then

                    Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                    TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(0)("SeqNo"))

                    'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(0)("FreqMtd")), "str")
                    Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)

                    If txtFrequencyDesc.Text = "DAILY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DAY")
                    ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("DATE")

                    ElseIf txtFrequencyDesc.Text = "WEEKLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                        TextBoxFreqMtd.Items.Add("MONTH")
                    Else
                        TextBoxFreqMtd.Items.Clear()
                        TextBoxFreqMtd.Items.Add("DOW")
                    End If

                    TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(0)("FreqMtd").ToString.Trim())

                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtDayNoGV"), TextBox)
                    TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(0)("DayNo"))

                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtWeekNoGV"), TextBox)
                    TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(0)("WeekNo"))

                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtMonthNoGV"), TextBox)
                    TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(0)("MonthNo"))

                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                    TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(0)("WeekDOW"))

                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlLocationGV"), DropDownList)
                    TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(0)("Location"))

                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlBranchIDGV"), DropDownList)
                    TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(0)("BranchID"))

                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtContractNoGVF"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(0)("ContractNo"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtSourceSQLIDGVF"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(0)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("txtRcnoGVF"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(0)("Rcno"))


                    If txtFrequency.Text = "DAILY" Or txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Bi-Weekly" Or txtFrequency.Text = "Tri-Weekly" Or txtFrequency.Text = "Fortnightly" Or txtFrequency.Text = "Twice-Weekly" Then
                        TextBoxFreqMtd.Enabled = False
                    End If


                    If TextBoxFreqMtd.Text = "DAY" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False


                    ElseIf TextBoxFreqMtd.Text = "DATE" Then
                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    ElseIf TextBoxFreqMtd.Text = "DOW" Then

                        TextBoxMonthNo.Enabled = False
                        TextBoxDayNo.Enabled = False
                        TextBoxWeekNo.Enabled = True
                        TextBoxWeekDOW.Enabled = True


                        If txtFrequency.Text = "WEEKLY" Or txtFrequency.Text = "Thrice-Weekly" Or txtFrequency.Text = "Twice-Weekly" Or txtFrequency.Text = "Four-Times-Weekly" Or txtFrequency.Text = "Five-Times-Weekly" Or txtFrequency.Text = "Six-Times-Weekly" Then
                            TextBoxWeekNo.Enabled = False
                        End If

                    ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                        TextBoxMonthNo.Enabled = True
                        TextBoxDayNo.Enabled = True
                        TextBoxWeekNo.Enabled = False
                        TextBoxWeekDOW.Enabled = False

                    End If

                    'Start: 14.11.19
                    If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If

                    If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                        TextBoxMonthNo.Enabled = True
                    End If
                    'End: 14.11.19

                    'End If  '23.02.17 ''''''''''''''????
                ElseIf Convert.ToInt32(txtNoofSvcInterval.Text) > 1 Then
                    Dim rowIndex = 0
                    rowIndex = Convert.ToInt32(txtNoofSvcInterval.Text)

                    'For i As Integer = 0 To rowIndex
                    For i As Integer = 0 To (rowIndex - 1)
                        'If (i < (rowIndex 1 )) Then
                        If (i < (rowIndex - 1)) Then
                            AddNewRowFreqEdit()
                        End If


                        'If (i <= (rowIndex - 1)) Then
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtSeqNoGV"), TextBox)
                        TextBoxSeqNo.Text = Convert.ToString(dtFreq.Rows(i)("SeqNo"))

                        Dim TextBoxFreqMtd As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)

                        'sen
                        If txtFrequencyDesc.Text = "DAILY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DAY")

                        ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "TWICE-MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-MONTHLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("DATE")

                            'Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndex).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                            'TextBoxWeekNo.Enabled = True

                            'TextBoxWeekNo.Text = pWeekNumber(txtServStart.Text)

                        ElseIf txtFrequencyDesc.Text = "WEEKLY" Then

                            'TextBoxWeekDOW.Text = gDOW

                        ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "THRICE-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                            ''Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Items.Add("MONTH")

                        ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "TRI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then

                        ElseIf txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            TextBoxFreqMtd.Items.Clear()
                            TextBoxFreqMtd.Items.Add("DOW")
                            TextBoxFreqMtd.Enabled = False

                        Else
                            'Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(0).Cells(0).FindControl("ddlFreqMTDGV"), DropDownList)
                            'TextBoxFreqMTD.Items.Clear()
                            'TextBoxFreqMTD.Items.Add(gFreqMTD)
                        End If
                        'sen

                        TextBoxFreqMtd.Text = Convert.ToString(dtFreq.Rows(i)("FreqMtd").ToString.Trim())

                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtDayNoGV"), TextBox)
                        TextBoxDayNo.Text = Convert.ToString(dtFreq.Rows(i)("DayNo"))

                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtWeekNoGV"), TextBox)
                        TextBoxWeekNo.Text = Convert.ToString(dtFreq.Rows(i)("WeekNo"))

                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtMonthNoGV"), TextBox)
                        TextBoxMonthNo.Text = Convert.ToString(dtFreq.Rows(i)("MonthNo"))

                        'MessageBox.Message.Alert(Page, Convert.ToString(dtFreq.Rows(i)("WeekDOW")), "str")
                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlWeekDOWGV"), DropDownList)
                        TextBoxWeekDOW.Text = Convert.ToString(dtFreq.Rows(i)("WeekDOW"))

                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlLocationGV"), DropDownList)
                        TextBoxLocation.Text = Convert.ToString(dtFreq.Rows(i)("Location"))

                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("ddlBranchIDGV"), DropDownList)
                        TextBoxBranchID.Text = Convert.ToString(dtFreq.Rows(i)("BranchID"))

                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtContractNoGVF"), TextBox)
                        TextBoxContractNo.Text = Convert.ToString(dtFreq.Rows(i)("ContractNo"))

                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtSourceSQLIDGVF"), TextBox)
                        TextBoxSourceSQLID.Text = Convert.ToString(dtFreq.Rows(i)("SourceSQLID"))

                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(i).Cells(0).FindControl("txtRcnoGVF"), TextBox)
                        TextBoxRcno.Text = Convert.ToString(dtFreq.Rows(i)("Rcno"))


                        If TextBoxFreqMtd.Text = "DATE" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        ElseIf TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = False
                            TextBoxDayNo.Enabled = False
                            TextBoxWeekNo.Enabled = True
                            TextBoxWeekDOW.Enabled = True

                            If txtFrequencyDesc.Text = "TWICE-WEEKLY" Or txtFrequencyDesc.Text = "THRICE-WEEKLY" Or txtFrequencyDesc.Text = "FOUR-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "FIVE-TIMES-WEEKLY" Or txtFrequencyDesc.Text = "SIX-TIMES-WEEKLY" Then
                                TextBoxWeekNo.Enabled = False
                            End If


                        ElseIf TextBoxFreqMtd.Text = "MONTH" Then
                            TextBoxMonthNo.Enabled = True
                            TextBoxDayNo.Enabled = True
                            TextBoxWeekNo.Enabled = False
                            TextBoxWeekDOW.Enabled = False

                        End If

                        'Start: 14.11.19
                        If txtFrequencyDesc.Text = "QUARTERLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "BI-MONTHLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If

                        If txtFrequencyDesc.Text = "HALF-ANNUALLY" And TextBoxFreqMtd.Text = "DOW" Then
                            TextBoxMonthNo.Enabled = True
                        End If
                        'End: 14.11.19

                        'End If '''''  23.02.17 ????
                    Next i
                End If '12.06.17


                'AddNewRowFreq()
                'SetPreviousDataFreq()
            Else
                FirstGridViewRowFreq()
            End If


            'Delete last row

            'SetRowDataFreq()

            'Dim dtFreq2 As DataTable = CType(ViewState("CurrentTableFreq"), DataTable)
            'Dim drCurrentRowFreq2 As DataRow = Nothing

            'If dtFreq2.Rows.Count > 1 Then
            '    dtFreq2.Rows.Remove(dtFreq2.Rows(dtFreq2.Rows.Count - 1))
            '    drCurrentRowFreq2 = dtFreq2.NewRow()
            '    ViewState("CurrentTableFreq") = dtFreq2
            '    grvFreqDetails.DataSource = dtFreq2
            '    grvFreqDetails.DataBind()

            '    SetPreviousDataFreq()

            'End If
            'End: Frequency



            'Start: Target
            SetRowData()


            Dim dtScdrTarget1 As DataTable = CType(ViewState("CurrentTable"), DataTable)
            Dim drCurrentRowTarget1 As DataRow = Nothing

            For i As Integer = 0 To grvTargetDetails.Rows.Count - 1
                dtScdrTarget1.Rows.Remove(dtScdrTarget1.Rows(0))
                drCurrentRowTarget1 = dtScdrTarget1.NewRow()
                ViewState("CurrentTable") = dtScdrTarget1
                grvTargetDetails.DataSource = dtScdrTarget1
                grvTargetDetails.DataBind()

                SetPreviousData()

            Next i


            FirstGridViewRowTarget()

            Dim cmdContratTarget As MySqlCommand = New MySqlCommand
            cmdContratTarget.CommandType = CommandType.Text
            cmdContratTarget.CommandText = "SELECT Rcno, TargetDesc, TargetID, ContractNo, ServiceID, SourceSQLID FROM tblcontractServingTarget where SourceSQLID=" & Convert.ToInt32(txtOrigCode.Text)
            cmdContratTarget.Connection = conn

            Dim drTarget As MySqlDataReader = cmdContratTarget.ExecuteReader()
            Dim dtTarget As New DataTable
            dtTarget.Load(drTarget)

            Dim TotDetailRecordsLoc = dtTarget.Rows.Count
            If dtTarget.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dtTarget.Rows
                    If (TotDetailRecordsLoc > (rowIndex + 1)) Then

                        AddNewRow()
                    End If

                    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    TextBoxTargetDesc.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetDesc"))

                    Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtTargtIdGV"), TextBox)
                    TextBoxTargtId.Text = Convert.ToString(dtTarget.Rows(rowIndex)("TargetID"))

                    Dim TextBoxContractNo As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceIDGV"), TextBox)
                    TextBoxServiceID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("ServiceID"))

                    Dim TextBoxSourceSQLID As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtSourceSQLIDGV"), TextBox)
                    TextBoxSourceSQLID.Text = Convert.ToString(dtTarget.Rows(rowIndex)("SourceSQLID"))

                    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)
                    TextBoxRcno.Text = Convert.ToString(dtTarget.Rows(rowIndex)("Rcno"))


                    Dim Query As String
                    Dim TextBoxTargetDesc2 As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    Query = "Select descrip1 from tblTarget order by descrip1"
                    PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)
                    rowIndex += 1

                Next row

                AddNewRow()
                SetPreviousData()

            Else
                FirstGridViewRowTarget()
                Dim Query As String
                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                Query = "Select descrip1 from tblTarget order by descrip1"

                PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
            End If

            'End: Target

            'End: Detail Records
            command1.Dispose()
            commandByWhich.Dispose()
            cmdContratFreq.Dispose()
            cmdContratLoc.Dispose()
            cmdContratServices.Dispose()
            cmdContratTarget.Dispose()
            dt.Dispose()
            dtByWhich.Dispose()
            dtFreq.Dispose()
            dtFreq1.Dispose()
            dtLocation.Dispose()
            dtTarget.Dispose()
            dtScdrServices.Dispose()
            dtScdrTarget1.Dispose()
            dtServices.Dispose()

        Catch ex As Exception
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grvContractDetail_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try


    End Sub

    Protected Sub btnSvcSave_Click(sender As Object, e As EventArgs) Handles btnSvcSave.Click
        'If txtMode.Text = "New" Then

        btnSvcSave.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        If txtDuplicateFreq.Text = "Y" Then
            lblAlert.Text = "DUPLICATE FREQUENCY HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black
            Exit Sub
        End If

        If txtDuplicateTarget.Text = "Y" Then
            lblAlert.Text = "DUPLICATE TARGET HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black
            Exit Sub
        End If


        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
            ConvertUpperService()
        End If

        'ElseIf txtMode.Text = "Edit" Then
        Try

            LabelServiceID.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            Label17Schdl.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

            If txtServiceId.Text <> ddlContractGrp.Text Then
                mdlPopupServiceID.Show()
            Else
                SvcSave()

            End If

            btnSvcSave.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '    conn.Open()

            '    Dim command1 As MySqlCommand = New MySqlCommand
            '    command1.CommandType = CommandType.Text
            '    command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
            '    command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '    command1.Connection = conn

            '    Dim dr As MySqlDataReader = command1.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then
            '        MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
            '    Else
            '        'Dim strdate As DateTime
            '        Dim GstNo As String

            '        GstNo = txtGstNo.Text.Trim

            '        Dim command As MySqlCommand = New MySqlCommand
            '        command.CommandType = CommandType.Text

            '        Dim qry As String = "Update tblContract set "
            '        qry = qry + "TimeIn=@TimeIn, TimeOut=@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  Supervisor =@Supervisor,"
            '        qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            '        'total 77 fields

            '        command.CommandText = qry
            '        command.Parameters.Clear()
            '        command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
            '        command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
            '        command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)

            '        If String.IsNullOrEmpty(txtAllocTime.Text) = True Then
            '            command.Parameters.AddWithValue("@AllocatedSvcTime", 0.0)
            '        Else
            '            command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
            '        End If

            '        command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim.ToUpper)
            '        command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.Trim.ToUpper)

            '        command.Parameters.AddWithValue("@Comments", Left(txtServInst.Text.Trim.ToUpper, 500))

            '        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtOurRef.Text).ToString("yyyy-MM-dd"))
            '        command.Connection = conn
            '        command.ExecuteNonQuery()
            '        ''MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")

            '        'Dim message As String = "alert('Record updated successfully!!!')"
            '        'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '        command.Dispose()
            '    End If
            '    'conn.Close()


            '    ''''''''''''''''''''''''''''''''''''

            '    Dim sqlstr As String
            '    sqlstr = ""


            '    sqlstr = "SELECT SalesmanSvc FROM tblCompanyLocation where LocationId = '" & txtLocationId.Text & "'"

            '    Dim commandSalesmanSvc As MySqlCommand = New MySqlCommand

            '    Dim connSalesmanSvc As MySqlConnection = New MySqlConnection()
            '    connSalesmanSvc.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connSalesmanSvc.Open()

            '    commandSalesmanSvc.CommandType = CommandType.Text
            '    commandSalesmanSvc.CommandText = sqlstr
            '    commandSalesmanSvc.Connection = conn

            '    Dim drSalesmanSvc As MySqlDataReader = commandSalesmanSvc.ExecuteReader()
            '    Dim dtSalesmanSvc As New DataTable
            '    dtSalesmanSvc.Load(drSalesmanSvc)

            '    If dtSalesmanSvc.Rows.Count > 0 Then
            '        txtSalesman.Text = dtSalesmanSvc.Rows(0)("SalesmanSvc").ToString()
            '    End If
            '    connSalesmanSvc.Close()
            '    commandSalesmanSvc.Dispose()


            '    '''''''''''''''''''''''''''''''''''

            '    txtTargetDesc.Text = ""
            '    txtTargetId.Text = ""
            '    'Start: Detail Records

            '    If txtSvcMode.Text = "NEW" Then
            '        Try
            '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            'conn.Open()

            '            Dim command As MySqlCommand = New MySqlCommand
            '            command.CommandType = CommandType.Text

            '            Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
            '            qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
            '            qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
            '            qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
            '            qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '            qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
            '            qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
            '            qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
            '            qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
            '            qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '            command.CommandText = qry
            '            command.Parameters.Clear()

            '            Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
            '            Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
            '            Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)
            '            txtValuePerService.Text = lblid1.Text

            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '            command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

            '            If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
            '                command.Parameters.AddWithValue("@Value", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
            '            End If

            '            If String.IsNullOrEmpty(txtNoService.Text) = True Then
            '                command.Parameters.AddWithValue("@NoService", 0)
            '            Else
            '                command.Parameters.AddWithValue("@NoService", txtNoService.Text)
            '            End If

            '            command.Parameters.AddWithValue("@Location", txtBranch.Text)
            '            command.Parameters.AddWithValue("@BranchId", "")
            '            command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
            '            command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

            '            command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
            '            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
            '                command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
            '            Else
            '                command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
            '                command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
            '            End If

            '            'command.Parameters.AddWithValue("@ContactPerson", "")
            '            command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim.ToUpper)

            '            command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
            '            'command.Parameters.AddWithValue("@ServiceName", "")
            '            command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim.ToUpper)

            '            command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Contact2Email", txtEmail2.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim.ToUpper)
            '            command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim.ToUpper)
            '            'command.Parameters.AddWithValue("@UOM", lblid2.Text.Trim)
            '            command.Parameters.AddWithValue("@UOM", "")

            '            If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
            '                command.Parameters.AddWithValue("@Area", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Area", Convert.ToDecimal(lblid3.Text.Trim))
            '            End If
            '            'command.Parameters.AddWithValue("@Area", txtArea.Text.Trim)
            '            'txtServiceName.Text = lblid2.Text
            '            'txtServiceAddress.Text = lblid3.Text
            '            'txtZone.Text

            '            command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
            '            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '            command.Connection = conn
            '            command.ExecuteNonQuery()
            '            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '            ''Exit Sub


            '            Dim sqlLastId As String
            '            sqlLastId = "SELECT last_insert_id() from tblcontractdet"




            '            Dim command3 As MySqlCommand = New MySqlCommand
            '            command3.CommandType = CommandType.Text

            '            command3.CommandText = sqlLastId
            '            command3.Parameters.Clear()

            '            'SqlCommand cmd = new SqlCommand(sql, conn);
            '            'conn.Open();
            '            command3.Connection = conn
            '            txtSourceSQLID.Text = command3.ExecuteScalar()

            '            ''''''''''''''''''''''''''
            '            'txtRcnoDetail.Text = txtSourceSQLID.Text
            '            ''''''''''''''''''''''''''


            '            Dim command4 As MySqlCommand = New MySqlCommand
            '            command4.CommandType = CommandType.Text
            '            command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
            '            command4.Connection = conn
            '            command4.ExecuteNonQuery()

            '            'Start:Target
            '            SetRowData()

            '            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

            '            If tableAdd IsNot Nothing Then

            '                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
            '                    'string txSpareId = row.ItemArray[0] as string;
            '                    Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)

            '                    If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

            '                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim commandTarget As MySqlCommand = New MySqlCommand
            '                        commandTarget.CommandType = CommandType.Text

            '                        Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
            '                        qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
            '                        qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

            '                        qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
            '                        qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                        commandTarget.CommandText = qryTarget
            '                        commandTarget.Parameters.Clear()

            '                        commandTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        commandTarget.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        commandTarget.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

            '                        commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        commandTarget.Connection = conn
            '                        commandTarget.ExecuteNonQuery()

            '                        If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                            txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
            '                            txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargtId.Text.Trim
            '                        Else
            '                            txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
            '                            txtTargetId.Text = TextBoxTargtId.Text.Trim
            '                        End If

            '                    End If
            '                Next rowIndex
            '            End If

            '            UpdateTargetDescription()
            '            'End:Target

            '            ''
            '            'SetRowDataFreq()

            '            Dim tableFreq As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

            '            If tableFreq IsNot Nothing Then

            '                For rowIndexFreq As Integer = 0 To tableFreq.Rows.Count - 1
            '                    Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

            '                    If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

            '                        Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            '                        Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            '                        Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
            '                        Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            '                        Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            '                        Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            '                        Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            '                        Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            '                        Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            '                        Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            '                        Dim commandFreq As MySqlCommand = New MySqlCommand
            '                        commandFreq.CommandType = CommandType.Text

            '                        Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
            '                        qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                        qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
            '                        qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                        commandFreq.CommandText = qryFreq
            '                        commandFreq.Parameters.Clear()

            '                        commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

            '                        If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@DayNo", 0)
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
            '                        End If

            '                        If String.IsNullOrEmpty(TextBoxWeekNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@WeekNo", "")
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
            '                        End If

            '                        If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
            '                            commandFreq.Parameters.AddWithValue("@MonthNo", 0)
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                        End If

            '                        'commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

            '                        If TextBoxWeekDOW.Text.Trim = "-1" Then
            '                            commandFreq.Parameters.AddWithValue("@WeekDow", "")
            '                        Else
            '                            commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                        End If

            '                        'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
            '                        commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

            '                        commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        commandFreq.Connection = conn
            '                        commandFreq.ExecuteNonQuery()
            '                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '                        'End If
            '                        'conn.Close()

            '                    End If
            '                Next rowIndexFreq
            '            End If

            '            conn.Close()
            '            conn.Dispose()
            '            'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '            'Dim message As String = "alert('Record added successfully!!!')"
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

            '            lblMessage.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
            '            lblAlert.Text = ""
            '            'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            '            'grvContractDetail.DataSourceID = "SqlDSContractDet"

            '            SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            '            grvContractDetail.DataSourceID = "SqlDSContractDet"
            '            grvContractDetail.DataBind()
            '        Catch ex As Exception
            '            Dim exstr As String
            '            exstr = ex.Message.ToString
            '            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            '            lblAlert.Text = ex.Message.ToString
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '            Exit Sub
            '        End Try

            '        'DisableControls()
            '    ElseIf txtSvcMode.Text = "EDIT" Then
            '        Try
            '            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '            'conn.Open()

            '            Dim command As MySqlCommand = New MySqlCommand
            '            command.CommandType = CommandType.Text

            '            Dim qry As String = "UPDATE tblContractdet SET  Frequency = @Frequency, Value = @Value, NoService =@NoService, "
            '            qry = qry + "Location = @Location, BranchId = @BranchId, NoOfSvcInterval =@NoOfSvcInterval,"
            '            qry = qry + "NoOfInterval = @NoOfInterval, ServiceId = @ServiceId, ServiceDesc =@ServiceDesc,"
            '            qry = qry + "FrequencyDesc = @FrequencyDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
            '            qry = qry + "FrequencyDesc = @FrequencyDesc, TargetID = @TargetID, TargetDesc = @TargetDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
            '            qry = qry + "AccountID = @AccountID, ServiceName = @ServiceName, ContactPerson = @ContactPerson, ContactPerson2 = @ContactPerson2, Contact1Position=@Contact1Position, Contact2Position = @Contact2Position, Telephone = @Telephone, Telephone2 = @Telephone2, "
            '            qry = qry + "Contact2Tel=@Contact2Tel, Contact2Tel2 =@Contact2Tel2, Fax =@Fax, Contact2Fax =@Contact2Fax, Mobile =@Mobile, Contact2Mobile = @Contact2Mobile, Email =@Email, Contact2Email =@Contact2Email, "
            '            qry = qry + "LocationID =@LocationID,  Address1 =@Address1, LocateGRP = @Zone, UOM =@UOM, Area = @Area, ServiceLocationGroup=@ServiceLocationGroup, Salesman =@Salesman,"
            '            qry = qry + "LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn where rcno = @rcno"

            '            command.CommandText = qry
            '            command.Parameters.Clear()

            '            command.Parameters.AddWithValue("@rcno", txtRcnoDetail.Text.Trim)
            '            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '            command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

            '            Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
            '            Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
            '            Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)

            '            'If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
            '            '    command.Parameters.AddWithValue("@Value", 0.0)
            '            'Else
            '            '    command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
            '            'End If

            '            If String.IsNullOrEmpty(lblid1.Text) = True Or lblid1.Text = "" Then
            '                command.Parameters.AddWithValue("@Value", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Value", Convert.ToDecimal(lblid1.Text))
            '            End If

            '            'command.Parameters.AddWithValue("@NoService", txtNoService.Text)

            '            If String.IsNullOrEmpty(txtNoService.Text) = True Then
            '                command.Parameters.AddWithValue("@NoService", 0)
            '            Else
            '                command.Parameters.AddWithValue("@NoService", txtNoService.Text)
            '            End If

            '            command.Parameters.AddWithValue("@Location", txtBranch.Text.Trim)
            '            command.Parameters.AddWithValue("@BranchId", "")
            '            command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
            '            command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

            '            command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim)
            '            command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
            '            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
            '                command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)
            '            Else
            '                command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
            '                command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)

            '            End If

            '            'command.Parameters.AddWithValue("@ContactPerson", "")
            '            command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim)

            '            command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
            '            'command.Parameters.AddWithValue("@ServiceName", "")
            '            command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim)
            '            command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim)

            '            command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim)
            '            command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim)
            '            command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim)
            '            command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim)
            '            command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim)
            '            command.Parameters.AddWithValue("@Contact2Email", txtServiceNotes.Text.Trim)
            '            command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim)
            '            command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim)
            '            command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
            '            command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim)
            '            'command.Parameters.AddWithValue("@UOM", lblid2.Text)
            '            command.Parameters.AddWithValue("@UOM", "")
            '            If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
            '                command.Parameters.AddWithValue("@Area", 0.0)
            '            Else
            '                command.Parameters.AddWithValue("@Area", Convert.ToDecimal(txtArea.Text.Trim))
            '            End If
            '            command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
            '            'command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
            '            'command.Parameters.AddWithValue("@CreatedOn", DateAndTime.Now)
            '            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '            command.Connection = conn
            '            command.ExecuteNonQuery()
            '            'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
            '            'Dim message As String = "alert('Record updated successfully!!!')"
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            '            'End If
            '            grvContractDetail.DataSourceID = "SqlDSContractDet"
            '            lblMessage.Text = "EDIT: DETAIL RECORD SUCCESSFULLY UPDATED"
            '            lblAlert.Text = ""
            '            'conn.Close()

            '        Catch ex As Exception
            '            Dim exstr As String
            '            exstr = ex.Message.ToString
            '            'lblAlert.Text = exstr
            '            lblAlert.Text = ex.Message.ToString
            '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            '            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '            Exit Sub
            '            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str
            '            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", ex.Message.ToString, True)
            '        End Try

            '        'DisableControls()

            '        ''
            '        SetRowData()

            '        Dim table As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

            '        If table IsNot Nothing Then

            '            For rowIndex As Integer = 0 To table.Rows.Count - 1
            '                'string txSpareId = row.ItemArray[0] as string;
            '                Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
            '                Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)


            '                If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then


            '                    'New
            '                    Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)

            '                    If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then


            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim command As MySqlCommand = New MySqlCommand
            '                        command.CommandType = CommandType.Text

            '                        Dim qry As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
            '                        qry = qry + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
            '                        qry = qry + " LastModifiedBy, LastModifiedOn)"

            '                        qry = qry + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
            '                        qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


            '                        command.CommandText = qry
            '                        command.Parameters.Clear()

            '                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        command.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                        command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

            '                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        command.Connection = conn
            '                        command.ExecuteNonQuery()

            '                    Else
            '                        'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

            '                        'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                        'conn.Open()

            '                        Dim command As MySqlCommand = New MySqlCommand
            '                        command.CommandType = CommandType.Text

            '                        Dim qry As String = "Update tblcontractservingtarget set TargetId = @TargetId, TargetDesc = @TargetDesc,  ServiceId = @ServiceId,"
            '                        qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"


            '                        command.CommandText = qry
            '                        command.Parameters.Clear()

            '                        command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
            '                        command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)
            '                        command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
            '                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                        command.Connection = conn
            '                        command.ExecuteNonQuery()
            '                        'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            '                        'End If
            '                        'conn.Close()
            '                    End If

            '                    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
            '                        txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
            '                        txtTargetId.Text = txtTargetId.Text + ", " + TextBoxTargtId.Text.Trim
            '                    Else
            '                        txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
            '                        txtTargetId.Text = TextBoxTargtId.Text.Trim
            '                    End If
            '                End If

            '            Next rowIndex

            '            UpdateTargetDescription()
            '        End If

            '        ' ''

            '        ' ''
            '        'SetRowDataFreq()

            '        Dim conndel As MySqlConnection = New MySqlConnection(constr)
            '        conndel.Open()

            '        If String.IsNullOrEmpty(txtRcno.Text) = False And (txtRcno.Text) <> "0" Then
            '            'Delete
            '            Dim commandFreqDel As MySqlCommand = New MySqlCommand
            '            commandFreqDel.CommandType = CommandType.Text

            '            Dim qrydel As String = "DELETE from tblservicecontractfrequency where SourceSQLId = @SourceSQLId"

            '            commandFreqDel.CommandText = qrydel
            '            commandFreqDel.Parameters.Clear()

            '            commandFreqDel.Parameters.AddWithValue("@SourceSQLId", Convert.ToInt32(txtRcnoDetail.Text))

            '            commandFreqDel.Connection = conndel
            '            commandFreqDel.ExecuteNonQuery()

            '            conndel.Close()
            '            commandFreqDel.Dispose()
            '        End If
            '        'Delete


            '        Dim tableFreqEdit As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

            '        If tableFreqEdit IsNot Nothing Then

            '            For rowIndexFreq As Integer = 0 To tableFreqEdit.Rows.Count - 1
            '                'string txSpareId = row.ItemArray[0] as string;
            '                Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

            '                If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

            '                    Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
            '                    Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
            '                    Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
            '                    Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
            '                    Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
            '                    Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
            '                    Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
            '                    Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
            '                    Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
            '                    Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

            '                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
            '                    'conn.Open()

            '                    Dim commandFreq As MySqlCommand = New MySqlCommand
            '                    commandFreq.CommandType = CommandType.Text

            '                    Dim qry As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
            '                    qry = qry + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

            '                    qry = qry + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
            '                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

            '                    commandFreq.CommandText = qry
            '                    commandFreq.Parameters.Clear()

            '                    commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
            '                    commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

            '                    If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                        commandFreq.Parameters.AddWithValue("@DayNo", 0)
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
            '                    End If

            '                    'If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
            '                    '    commandFreq.Parameters.AddWithValue("@WeekNo", 0)
            '                    'Else
            '                    '    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
            '                    'End If

            '                    If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
            '                        commandFreq.Parameters.AddWithValue("@MonthNo", 0)
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                    End If


            '                    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

            '                    If TextBoxWeekDOW.Text.Trim = "-1" Then
            '                        commandFreq.Parameters.AddWithValue("@WeekDow", "")
            '                    Else
            '                        commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                    End If

            '                    'commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
            '                    'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
            '                    commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

            '                    commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '                    commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '                    commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '                    commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '                    commandFreq.Connection = conn
            '                    commandFreq.ExecuteNonQuery()

            '                    'End If
            '                    'conn.Close()

            '                End If
            '            Next rowIndexFreq

            '        End If
            '        'MessageBox.Message.Alert(Page, "Record Updated successfully!!!", "str")
            '        'grvContractDetail.DataSourceID = "SqlDSContractDet"

            '        SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"
            '        grvContractDetail.DataSourceID = "SqlDSContractDet"
            '        grvContractDetail.DataBind()

            '        lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
            '        lblAlert.Text = ""
            '        conn.Close()
            '        conn.Dispose()
            '    End If

            '    txtServiceAddressCons.Text = ""
            '    UpdateContractHeader()

            '    command1.Dispose()
            '    dt.Dispose()
            '    dtSalesmanSvc.Dispose()
            '    'End: Detail Records

            '    'If String.IsNullOrEmpty(txtAccountId.Text) Then
            '    '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = '" & txtclientid.Text & "'"
            '    'Else
            '    '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = '" & txtAccountId.Text & "'"
            '    'End If

            '    'SqlDataSource2.DataBind()
            '    'GridView2.DataBind()
            '    '' MakeSvcNull()
            '    'txtSvcMode.Text = ""
            '    EnableSvcControls()
            '    btnSvcAdd.Enabled = True
            '    btnSvcAdd.ForeColor = System.Drawing.Color.Black
            '    btnADD.Enabled = True
            '    btnADD.ForeColor = System.Drawing.Color.Black

            '    btnSvcEdit.Enabled = True
            '    btnSvcEdit.ForeColor = System.Drawing.Color.Black

            '    btnSvcDelete.Enabled = False
            '    btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            '    'btnCopyAdd.Enabled = True
            '    'btnCopyAdd.ForeColor = System.Drawing.Color.Black
            '    'btnDelete.Enabled = True
            '    'btnDelete.ForeColor = System.Drawing.Color.Black

            '    btnQuit.Enabled = True
            '    btnQuit.ForeColor = System.Drawing.Color.Black
            '    'AddrConcat()
            '    txtSvcMode.Text = ""

            '    btnServiceSchedule.Enabled = True
            '    btnServiceSchedule.ForeColor = System.Drawing.Color.Black
            'Catch ex As Exception
            '    Dim exstr As String
            '    exstr = ex.Message.ToString
            '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            '    'lblAlert.Text = exstr

            '    lblAlert.Text = ex.Message.ToString
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)


            '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            '    Exit Sub
            '    'Dim message As String = "alert('" + exstr + "')"
            '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            'End Try

            'DisableControls()
            'btnContractDetail.Enabled = True
            'btnServiceSchedule.Enabled = True
            ''End If

            ''GridView1.DataSourceID = "SQLDSContract"

            'Try
            '    If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
            '        'GridView1.DataSourceID = "SQLDSContract"
            '        SQLDSContract.SelectCommand = txt.Text
            '        GridView1.DataSourceID = "SqlDSContract"
            '        GridView1.DataBind()
            '    Else

            '        If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
            '            Dim ContractClientIdLocation As String = ""

            '            ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
            '            ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
            '            ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
            '            ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
            '            ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '            SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation
            '            GridView1.DataSourceID = "SQLDSContractClientIdLocation"
            '            GridSelected = "SQLDSContractClientIdLocation"
            '        Else
            '            Dim ContractClientId As String = ""

            '            ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
            '            ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, Amtbalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

            '            SQLDSContractClientId.SelectCommand = ContractClientId
            '            GridView1.DataSourceID = "SQLDSContractClientId"
            '            GridSelected = "SQLDSContractClientId"
            '        End If

            '        'GridView1.DataSourceID = "SQLDSContractClientId"
            '        'GridSelected = "SQLDSContractClientId"
            '    End If

            '    ''SQLDSContract.DataBind()
            '    GridView1.DataBind()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub



    Private Sub svcSave()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT ContractNo FROM tblContract where ContractNo=@ContractNo and rcno<>" & Convert.ToInt32(txtRcno.Text)
            command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
            Else
                'Dim strdate As DateTime
                Dim GstNo As String

                GstNo = txtGstNo.Text.Trim

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text

                Dim qry As String = "Update tblContract set "
                qry = qry + "TimeIn=@TimeIn, TimeOut=@TimeOut, AllocatedSvcTime = @AllocatedSvcTime,  ScheduleType =@ScheduleType, Comments = @Comments, TeamId =@TeamId, InchargeId =@InchargeId, Support =@Support,  Supervisor =@Supervisor,"
                qry = qry + "LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                'total 77 fields

                command.CommandText = qry
                command.Parameters.Clear()
                command.Parameters.AddWithValue("@ScheduleType", ddlScheduleType.SelectedValue.ToString)
                command.Parameters.AddWithValue("@TimeIn", txtServTimeIn.Text.Trim)
                command.Parameters.AddWithValue("@TimeOut", txtServTimeOut.Text.Trim)

                If String.IsNullOrEmpty(txtAllocTime.Text) = True Then
                    command.Parameters.AddWithValue("@AllocatedSvcTime", 0.0)
                Else
                    command.Parameters.AddWithValue("@AllocatedSvcTime", txtAllocTime.Text.Trim)
                End If

                command.Parameters.AddWithValue("@TeamId", txtTeam.Text.Trim.ToUpper)
                command.Parameters.AddWithValue("@InchargeId", txtTeamIncharge.Text.Trim.ToUpper)
                command.Parameters.AddWithValue("@Support", txtServiceBy.Text.Trim.ToUpper)
                command.Parameters.AddWithValue("@Supervisor", txtSupervisor.Text.Trim.ToUpper)

                'command.Parameters.AddWithValue("@Comments", Left(txtServInst.Text.Trim.ToUpper, 500))

                command.Parameters.AddWithValue("@Comments", (txtServInst.Text.Trim.ToUpper))

                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtOurRef.Text).ToString("yyyy-MM-dd"))
                command.Connection = conn
                command.ExecuteNonQuery()
                ''MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")

                'Dim message As String = "alert('Record updated successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                command.Dispose()
            End If
            'conn.Close()


            ''''''''''''''''''''''''''''''''''''

            Dim sqlstr As String
            sqlstr = ""


            sqlstr = "SELECT SalesmanSvc FROM tblCompanyLocation where LocationId = '" & txtLocationId.Text & "'"

            Dim commandSalesmanSvc As MySqlCommand = New MySqlCommand

            Dim connSalesmanSvc As MySqlConnection = New MySqlConnection()
            connSalesmanSvc.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connSalesmanSvc.Open()

            commandSalesmanSvc.CommandType = CommandType.Text
            commandSalesmanSvc.CommandText = sqlstr
            commandSalesmanSvc.Connection = conn

            Dim drSalesmanSvc As MySqlDataReader = commandSalesmanSvc.ExecuteReader()
            Dim dtSalesmanSvc As New DataTable
            dtSalesmanSvc.Load(drSalesmanSvc)

            If dtSalesmanSvc.Rows.Count > 0 Then
                txtSalesman.Text = dtSalesmanSvc.Rows(0)("SalesmanSvc").ToString()
            End If
            connSalesmanSvc.Close()
            commandSalesmanSvc.Dispose()


            '''''''''''''''''''''''''''''''''''

            txtTargetDesc.Text = ""
            txtTargetId.Text = ""
            'Start: Detail Records

            If txtSvcMode.Text = "NEW" Then
                Try
                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    'conn.Open()

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "INSERT INTO tblContractdet(ContractNo, Frequency, Value, NoService, Location, BranchId,"
                    qry = qry + "NoOfSvcInterval, NoOfInterval, ServiceId, ServiceDesc, FrequencyDesc, TargetId, TargetDesc, ServiceNotes, "
                    qry = qry + "AccountID, ServiceName, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, "
                    qry = qry + "Contact2Tel, Contact2Tel2, Fax, Contact2Fax, Mobile, Contact2Mobile, Email, Contact2Email, LocationID,  Address1, LocateGRP, UOM, Area, ServiceLocationGroup, Salesman,"
                    qry = qry + "CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                    qry = qry + " VALUES(@ContractNo, @Frequency, @Value, @NoService, @Location, @BranchId, "
                    qry = qry + "@NoOfSvcInterval, @NoOfInterval, @ServiceId, @ServiceDesc, @FrequencyDesc, @TargetId, @TargetDesc,  @ServiceNotes,  "
                    qry = qry + "@AccountID, @ServiceName, @ContactPerson, @ContactPerson2, @Contact1Position, @Contact2Position, @Telephone, @Telephone2, "
                    qry = qry + "@Contact2Tel, @Contact2Tel2, @Fax, @Contact2Fax, @Mobile, @Contact2Mobile, @Email, @Contact2Email, @LocationID,  @Address1, @Zone, @UOM, @Area, @ServiceLocationGroup, @Salesman,"
                    qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
                    Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
                    Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)
                    txtValuePerService.Text = lblid1.Text

                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

                    If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                        command.Parameters.AddWithValue("@Value", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
                    End If

                    If String.IsNullOrEmpty(txtNoService.Text) = True Then
                        command.Parameters.AddWithValue("@NoService", 0)
                    Else
                        command.Parameters.AddWithValue("@NoService", txtNoService.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtBranch.Text)
                    command.Parameters.AddWithValue("@BranchId", "")
                    command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
                    command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

                    command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
                    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                        command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
                        command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
                    Else
                        command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
                        command.Parameters.AddWithValue("@TargetId", txtTargetId.Text.Trim)
                    End If

                    'command.Parameters.AddWithValue("@ContactPerson", "")
                    command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim.ToUpper)

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                    'command.Parameters.AddWithValue("@ServiceName", "")
                    command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim.ToUpper)

                    command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Contact2Email", txtEmail2.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim.ToUpper)
                    command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim.ToUpper)
                    'command.Parameters.AddWithValue("@UOM", lblid2.Text.Trim)
                    command.Parameters.AddWithValue("@UOM", "")

                    If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                        command.Parameters.AddWithValue("@Area", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Area", Convert.ToDecimal(lblid3.Text.Trim))
                    End If
                    'command.Parameters.AddWithValue("@Area", txtArea.Text.Trim)
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text

                    command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    ''Exit Sub


                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblcontractdet"




                    Dim command3 As MySqlCommand = New MySqlCommand
                    command3.CommandType = CommandType.Text

                    command3.CommandText = sqlLastId
                    command3.Parameters.Clear()

                    'SqlCommand cmd = new SqlCommand(sql, conn);
                    'conn.Open();
                    command3.Connection = conn
                    txtSourceSQLID.Text = command3.ExecuteScalar()

                    ''''''''''''''''''''''''''
                    'txtRcnoDetail.Text = txtSourceSQLID.Text
                    ''''''''''''''''''''''''''


                    Dim command4 As MySqlCommand = New MySqlCommand
                    command4.CommandType = CommandType.Text
                    command4.CommandText = "Update tblcontractdet set OrigCode = " & Convert.ToInt32(txtSourceSQLID.Text) & " where rcno = " & Convert.ToInt32(txtSourceSQLID.Text)
                    command4.Connection = conn
                    command4.ExecuteNonQuery()

                    'Start:Target
                    SetRowData()

                    Dim tableAdd As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                    If tableAdd IsNot Nothing Then

                        For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                            'string txSpareId = row.ItemArray[0] as string;
                            Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)

                            If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then

                                Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim commandTarget As MySqlCommand = New MySqlCommand
                                commandTarget.CommandType = CommandType.Text

                                Dim qryTarget As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
                                qryTarget = qryTarget + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                qryTarget = qryTarget + " LastModifiedBy, LastModifiedOn)"

                                qryTarget = qryTarget + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                qryTarget = qryTarget + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                commandTarget.CommandText = qryTarget
                                commandTarget.Parameters.Clear()

                                commandTarget.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                commandTarget.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                commandTarget.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                commandTarget.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                commandTarget.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandTarget.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                commandTarget.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                                commandTarget.Connection = conn
                                commandTarget.ExecuteNonQuery()

                                If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                    txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                    txtTargetId.Text = txtTargetId.Text + "," + TextBoxTargtId.Text.Trim
                                Else
                                    txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                    txtTargetId.Text = TextBoxTargtId.Text.Trim
                                End If

                            End If
                        Next rowIndex
                    End If

                    UpdateTargetDescription()
                    'End:Target

                    ''
                    'SetRowDataFreq()

                    Dim tableFreq As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                    If tableFreq IsNot Nothing Then

                        For rowIndexFreq As Integer = 0 To tableFreq.Rows.Count - 1
                            Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

                            If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                                Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                                Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                                Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
                                Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                                Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                                Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                                Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                                Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                                Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                                Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                                Dim commandFreq As MySqlCommand = New MySqlCommand
                                commandFreq.CommandType = CommandType.Text

                                Dim qryFreq As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                                qryFreq = qryFreq + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                                qryFreq = qryFreq + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                                qryFreq = qryFreq + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                                commandFreq.CommandText = qryFreq
                                commandFreq.Parameters.Clear()

                                commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                                If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                    commandFreq.Parameters.AddWithValue("@DayNo", 0)
                                Else
                                    commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                                End If

                                If String.IsNullOrEmpty(TextBoxWeekNo.Text.Trim) = True Then
                                    commandFreq.Parameters.AddWithValue("@WeekNo", "")
                                Else
                                    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                                End If

                                If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                    commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                                Else
                                    commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                End If

                                'commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                                If TextBoxWeekDOW.Text.Trim = "-1" Then
                                    commandFreq.Parameters.AddWithValue("@WeekDow", "")
                                Else
                                    commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                                End If

                                'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                                commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                                commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                                commandFreq.Connection = conn
                                commandFreq.ExecuteNonQuery()
                                'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                                'End If
                                'conn.Close()

                            End If
                        Next rowIndexFreq
                    End If

                    conn.Close()
                    conn.Dispose()
                    'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    'Dim message As String = "alert('Record added successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

                    lblMessage.Text = "ADD: DETAIL RECORD SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    'SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

                    'grvContractDetail.DataSourceID = "SqlDSContractDet"

                    SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

                    grvContractDetail.DataSourceID = "SqlDSContractDet"
                    grvContractDetail.DataBind()
                Catch ex As Exception
                    Dim exstr As String
                    exstr = ex.Message.ToString
                    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                    lblAlert.Text = ex.Message.ToString
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
                    Exit Sub
                End Try

                'DisableControls()
            ElseIf txtSvcMode.Text = "EDIT" Then
                Try
                    'Dim conn As MySqlConnection = New MySqlConnection(constr)
                    'conn.Open()

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text

                    Dim qry As String = "UPDATE tblContractdet SET  Frequency = @Frequency, Value = @Value, NoService =@NoService, "
                    qry = qry + "Location = @Location, BranchId = @BranchId, NoOfSvcInterval =@NoOfSvcInterval,"
                    qry = qry + "NoOfInterval = @NoOfInterval, ServiceId = @ServiceId, ServiceDesc =@ServiceDesc,"
                    qry = qry + "FrequencyDesc = @FrequencyDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                    qry = qry + "FrequencyDesc = @FrequencyDesc, TargetID = @TargetID, TargetDesc = @TargetDesc, ContactPerson = @ContactPerson, ServiceNotes =@ServiceNotes,"
                    qry = qry + "AccountID = @AccountID, ServiceName = @ServiceName, ContactPerson = @ContactPerson, ContactPerson2 = @ContactPerson2, Contact1Position=@Contact1Position, Contact2Position = @Contact2Position, Telephone = @Telephone, Telephone2 = @Telephone2, "
                    qry = qry + "Contact2Tel=@Contact2Tel, Contact2Tel2 =@Contact2Tel2, Fax =@Fax, Contact2Fax =@Contact2Fax, Mobile =@Mobile, Contact2Mobile = @Contact2Mobile, Email =@Email, Contact2Email =@Contact2Email, "
                    qry = qry + "LocationID =@LocationID,  Address1 =@Address1, LocateGRP = @Zone, UOM =@UOM, Area = @Area, ServiceLocationGroup=@ServiceLocationGroup, Salesman =@Salesman,"
                    qry = qry + "LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn where rcno = @rcno"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@rcno", txtRcnoDetail.Text.Trim)
                    command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                    command.Parameters.AddWithValue("@Frequency", txtFrequency.Text.Trim)

                    Dim lblid1 As TextBox = CType(grvServices.Rows(0).FindControl("txtPricePerServiceGV"), TextBox)
                    Dim lblid2 As DropDownList = CType(grvServices.Rows(0).FindControl("txtUOMGV"), DropDownList)
                    Dim lblid3 As TextBox = CType(grvServices.Rows(0).FindControl("txtAreaGV"), TextBox)

                    'If String.IsNullOrEmpty(txtValuePerService.Text) = True Or txtValuePerService.Text = "" Then
                    '    command.Parameters.AddWithValue("@Value", 0.0)
                    'Else
                    '    command.Parameters.AddWithValue("@Value", Convert.ToDecimal(txtValuePerService.Text))
                    'End If

                    If String.IsNullOrEmpty(lblid1.Text) = True Or lblid1.Text = "" Then
                        command.Parameters.AddWithValue("@Value", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Value", Convert.ToDecimal(lblid1.Text))
                    End If

                    'command.Parameters.AddWithValue("@NoService", txtNoService.Text)

                    If String.IsNullOrEmpty(txtNoService.Text) = True Then
                        command.Parameters.AddWithValue("@NoService", 0)
                    Else
                        command.Parameters.AddWithValue("@NoService", txtNoService.Text)
                    End If

                    command.Parameters.AddWithValue("@Location", txtBranch.Text.Trim)
                    command.Parameters.AddWithValue("@BranchId", "")
                    command.Parameters.AddWithValue("@NoOfSvcInterval", txtNoofSvcInterval.Text.Trim)
                    command.Parameters.AddWithValue("@NoOfInterval", txtNoofInterval.Text.Trim)

                    command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceDesc", txtServiceDesc.Text.Trim)
                    command.Parameters.AddWithValue("@FrequencyDesc", txtFrequencyDesc.Text.Trim)
                    If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                        command.Parameters.AddWithValue("@TargetDesc", IIf(Len(txtTargetDesc.Text) >= 100, Left(txtTargetDesc.Text, 99), Left(txtTargetDesc.Text.Trim, (Len(txtTargetDesc.Text) - 1))))
                        command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)
                    Else
                        command.Parameters.AddWithValue("@TargetDesc", txtTargetDesc.Text.Trim)
                        command.Parameters.AddWithValue("@TargetID", txtTargetId.Text.Trim)

                    End If

                    'command.Parameters.AddWithValue("@ContactPerson", "")
                    command.Parameters.AddWithValue("@ServiceNotes", txtServiceNotes.Text.Trim)

                    command.Parameters.AddWithValue("@AccountID", txtAccountId.Text)
                    'command.Parameters.AddWithValue("@ServiceName", "")
                    command.Parameters.AddWithValue("@ContactPerson", txtContactPerson.Text.Trim)
                    command.Parameters.AddWithValue("@ContactPerson2", txtContactPerson2.Text.Trim)
                    command.Parameters.AddWithValue("@Contact1Position", txtPosition.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Position", txtPosition2.Text.Trim)

                    command.Parameters.AddWithValue("@Telephone", txtTelephone.Text.Trim)
                    command.Parameters.AddWithValue("@Telephone2", txtTelephone2.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Tel", txtCP2Telephone.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Tel2", txtCP2Telephone2.Text.Trim)
                    command.Parameters.AddWithValue("@Fax", txtFax.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Fax", txtFax2.Text.Trim)
                    command.Parameters.AddWithValue("@Mobile", txtConPerMobile.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Mobile", txtConPerMobile2.Text.Trim)
                    command.Parameters.AddWithValue("@Email", txtEmail1.Text.Trim)
                    command.Parameters.AddWithValue("@Contact2Email", txtServiceNotes.Text.Trim)
                    command.Parameters.AddWithValue("@LocationID", txtLocationId.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceName", txtServiceName.Text.Trim)
                    command.Parameters.AddWithValue("@Address1", txtServiceAddress.Text.Trim)
                    command.Parameters.AddWithValue("@Zone", txtZone.Text.Trim)
                    command.Parameters.AddWithValue("@ServiceLocationGroup", txtLocationGroup.Text.Trim)
                    'command.Parameters.AddWithValue("@UOM", lblid2.Text)
                    command.Parameters.AddWithValue("@UOM", "")
                    If String.IsNullOrEmpty(lblid3.Text) = True Or lblid3.Text = "" Then
                        command.Parameters.AddWithValue("@Area", 0.0)
                    Else
                        command.Parameters.AddWithValue("@Area", Convert.ToDecimal(txtArea.Text.Trim))
                    End If
                    command.Parameters.AddWithValue("@Salesman", txtSalesman.Text)
                    'command.Parameters.AddWithValue("@CreatedBy", txtCreatedBy.Text)
                    'command.Parameters.AddWithValue("@CreatedOn", DateAndTime.Now)
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    'MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                    'Dim message As String = "alert('Record updated successfully!!!')"
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                    'End If
                    grvContractDetail.DataSourceID = "SqlDSContractDet"
                    lblMessage.Text = "EDIT: DETAIL RECORD SUCCESSFULLY UPDATED"
                    lblAlert.Text = ""
                    'conn.Close()

                Catch ex As Exception
                    Dim exstr As String
                    exstr = ex.Message.ToString
                    'lblAlert.Text = exstr
                    lblAlert.Text = ex.Message.ToString
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
                    Exit Sub
                    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str
                    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", ex.Message.ToString, True)
                End Try

                'DisableControls()

                ''
                SetRowData()

                Dim table As DataTable = TryCast(ViewState("CurrentTable"), DataTable)

                If table IsNot Nothing Then

                    For rowIndex As Integer = 0 To table.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxTargetDesc As DropDownList = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                        Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)


                        If (String.IsNullOrEmpty(TextBoxTargetDesc.Text) = False) And (TextBoxTargetDesc.Text <> "0") And (TextBoxTargetDesc.Text <> "-1") Then


                            'New
                            Dim TextBoxRcno As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGV"), TextBox)

                            If (String.IsNullOrEmpty(TextBoxRcno.Text) = True) Or (TextBoxRcno.Text = "0") Then


                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim command As MySqlCommand = New MySqlCommand
                                command.CommandType = CommandType.Text

                                Dim qry As String = "INSERT INTO tblcontractservingtarget(ContractNo, ServiceId, SourceSQLId,"
                                qry = qry + " TargetId, TargetDesc,  CreatedBy, CreatedOn,"
                                qry = qry + " LastModifiedBy, LastModifiedOn)"

                                qry = qry + " VALUES(@ContractNo, @ServiceId, @SourceSQLId,  @TargetId, @TargetDesc,"
                                qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"


                                command.CommandText = qry
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                                command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                command.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                                command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)

                                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                                command.Connection = conn
                                command.ExecuteNonQuery()

                            Else
                                'Dim TextBoxTargtId As TextBox = CType(grvTargetDetails.Rows(rowIndex).Cells(1).FindControl("txtTargtIdGV"), TextBox)

                                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                                'conn.Open()

                                Dim command As MySqlCommand = New MySqlCommand
                                command.CommandType = CommandType.Text

                                Dim qry As String = "Update tblcontractservingtarget set TargetId = @TargetId, TargetDesc = @TargetDesc,  ServiceId = @ServiceId,"
                                qry = qry + " LastModifiedBy = @LastModifiedBy , LastModifiedOn = @LastModifiedOn where Rcno = @Rcno"


                                command.CommandText = qry
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@ServiceId", txtServiceId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetId", TextBoxTargtId.Text.Trim)
                                command.Parameters.AddWithValue("@TargetDesc", TextBoxTargetDesc.Text.Trim)
                                command.Parameters.AddWithValue("@Rcno", TextBoxRcno.Text.Trim)
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                                command.Connection = conn
                                command.ExecuteNonQuery()
                                'MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                                'End If
                                'conn.Close()
                            End If

                            If String.IsNullOrEmpty(txtTargetDesc.Text) = False Then
                                txtTargetDesc.Text = txtTargetDesc.Text + ", " + TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = txtTargetId.Text + ", " + TextBoxTargtId.Text.Trim
                            Else
                                txtTargetDesc.Text = TextBoxTargetDesc.Text.Trim
                                txtTargetId.Text = TextBoxTargtId.Text.Trim
                            End If
                        End If

                    Next rowIndex

                    UpdateTargetDescription()
                End If

                ' ''

                ' ''
                'SetRowDataFreq()

                Dim conndel As MySqlConnection = New MySqlConnection(constr)
                conndel.Open()

                If String.IsNullOrEmpty(txtRcno.Text) = False And (txtRcno.Text) <> "0" Then
                    'Delete
                    Dim commandFreqDel As MySqlCommand = New MySqlCommand
                    commandFreqDel.CommandType = CommandType.Text

                    Dim qrydel As String = "DELETE from tblservicecontractfrequency where SourceSQLId = @SourceSQLId"

                    commandFreqDel.CommandText = qrydel
                    commandFreqDel.Parameters.Clear()

                    commandFreqDel.Parameters.AddWithValue("@SourceSQLId", Convert.ToInt32(txtRcnoDetail.Text))

                    commandFreqDel.Connection = conndel
                    commandFreqDel.ExecuteNonQuery()

                    conndel.Close()
                    commandFreqDel.Dispose()
                End If
                'Delete


                Dim tableFreqEdit As DataTable = TryCast(ViewState("CurrentTableFreq"), DataTable)

                If tableFreqEdit IsNot Nothing Then

                    For rowIndexFreq As Integer = 0 To tableFreqEdit.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxSeqNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(0).FindControl("txtSeqNoGV"), TextBox)

                        If (String.IsNullOrEmpty(TextBoxSeqNo.Text) = False) Then

                            Dim TextBoxFreqMTD As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(1).FindControl("ddlFreqMTDGV"), DropDownList)
                            Dim TextBoxMonthNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(2).FindControl("txtMonthNoGV"), TextBox)
                            Dim TextBoxDayNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(3).FindControl("txtDayNoGV"), TextBox)
                            Dim TextBoxWeekNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(4).FindControl("txtWeekNoGV"), TextBox)
                            Dim TextBoxWeekDOW As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(5).FindControl("ddlWeekDOWGV"), DropDownList)
                            Dim TextBoxLocation As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(6).FindControl("ddlLocationGV"), DropDownList)
                            Dim TextBoxBranchID As DropDownList = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(7).FindControl("ddlBranchIDGV"), DropDownList)
                            Dim TextBoxContractNo As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(8).FindControl("txtContractNoGVF"), TextBox)
                            Dim TextBoxSourceSQLID As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(9).FindControl("txtSourceSQLIDGVF"), TextBox)
                            Dim TextBoxRcno As TextBox = CType(grvFreqDetails.Rows(rowIndexFreq).Cells(10).FindControl("txtRcnoGVF"), TextBox)

                            'Dim conn As MySqlConnection = New MySqlConnection(constr)
                            'conn.Open()

                            Dim commandFreq As MySqlCommand = New MySqlCommand
                            commandFreq.CommandType = CommandType.Text

                            Dim qry As String = "INSERT INTO tblservicecontractfrequency(ContractNo, SeqNo, FreqMTD, DayNo, WeekNo, WeekDow, MonthNo, Location, BranchId,SourceSQLId,"
                            qry = qry + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"

                            qry = qry + " VALUES(@ContractNo, @SeqNo, @FreqMTD, @DayNo, @WeekNo, @WeekDow, @MonthNo, @Location, @BranchId, @SourceSQLId,"
                            qry = qry + "@CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            commandFreq.CommandText = qry
                            commandFreq.Parameters.Clear()

                            commandFreq.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@FreqMTD", TextBoxFreqMTD.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@SourceSQLId", txtSourceSQLID.Text)
                            commandFreq.Parameters.AddWithValue("@SeqNo", TextBoxSeqNo.Text.Trim)

                            If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@DayNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@DayNo", TextBoxDayNo.Text.Trim)
                            End If

                            'If String.IsNullOrEmpty(TextBoxDayNo.Text.Trim) = True Then
                            '    commandFreq.Parameters.AddWithValue("@WeekNo", 0)
                            'Else
                            '    commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)
                            'End If

                            If String.IsNullOrEmpty(TextBoxMonthNo.Text.Trim) = True Then
                                commandFreq.Parameters.AddWithValue("@MonthNo", 0)
                            Else
                                commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            End If


                            commandFreq.Parameters.AddWithValue("@WeekNo", TextBoxWeekNo.Text.Trim)

                            If TextBoxWeekDOW.Text.Trim = "-1" Then
                                commandFreq.Parameters.AddWithValue("@WeekDow", "")
                            Else
                                commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                            End If

                            'commandFreq.Parameters.AddWithValue("@WeekDow", TextBoxWeekDOW.Text.Trim)
                            'commandFreq.Parameters.AddWithValue("@MonthNo", TextBoxMonthNo.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@Location", TextBoxLocation.Text.Trim)
                            commandFreq.Parameters.AddWithValue("@BranchId", TextBoxBranchID.Text.Trim)

                            commandFreq.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            commandFreq.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            commandFreq.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            commandFreq.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                            commandFreq.Connection = conn
                            commandFreq.ExecuteNonQuery()

                            'End If
                            'conn.Close()

                        End If
                    Next rowIndexFreq

                End If
                'MessageBox.Message.Alert(Page, "Record Updated successfully!!!", "str")
                'grvContractDetail.DataSourceID = "SqlDSContractDet"

                SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"
                grvContractDetail.DataSourceID = "SqlDSContractDet"
                grvContractDetail.DataBind()

                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                lblAlert.Text = ""
                conn.Close()
                conn.Dispose()
            End If

            txtServiceAddressCons.Text = ""
            UpdateContractHeader()

            command1.Dispose()
            dt.Dispose()
            dtSalesmanSvc.Dispose()
            'End: Detail Records

            'If String.IsNullOrEmpty(txtAccountId.Text) Then
            '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where companyid = '" & txtclientid.Text & "'"
            'Else
            '    SqlDataSource2.SelectCommand = "SELECT * FROM tblcompanylocation where accountid = '" & txtAccountId.Text & "'"
            'End If

            'SqlDataSource2.DataBind()
            'GridView2.DataBind()
            '' MakeSvcNull()
            'txtSvcMode.Text = ""
            EnableSvcControls()
            btnSvcAdd.Enabled = True
            btnSvcAdd.ForeColor = System.Drawing.Color.Black
            btnADD.Enabled = True
            btnADD.ForeColor = System.Drawing.Color.Black

            btnSvcEdit.Enabled = True
            btnSvcEdit.ForeColor = System.Drawing.Color.Black

            btnSvcDelete.Enabled = False
            btnSvcDelete.ForeColor = System.Drawing.Color.Gray
            'btnCopyAdd.Enabled = True
            'btnCopyAdd.ForeColor = System.Drawing.Color.Black
            'btnDelete.Enabled = True
            'btnDelete.ForeColor = System.Drawing.Color.Black

            btnQuit.Enabled = True
            btnQuit.ForeColor = System.Drawing.Color.Black
            'AddrConcat()
            txtSvcMode.Text = ""

           
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            'lblAlert.Text = exstr

            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)


            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try

        DisableControls()
   
        'End If

        'GridView1.DataSourceID = "SQLDSContract"

        Try
            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = True Then
                'GridView1.DataSourceID = "SQLDSContract"
                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()
            Else

                If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                    Dim ContractClientIdLocation As String = ""

                    ContractClientIdLocation = "SELECT distinct(tblcontract.ContractNo), tblcontract.Status, tblcontract.RenewalSt, tblcontract.NotedST, tblcontract.Gst,  tblcontract.ContractDate, tblcontract.AccountId, tblcontract.CustName, tblcontract.CustAddr, tblcontract.InchargeId, tblcontract.AgreeValue, tblcontract.StartDate, tblcontract.EndDate, tblcontract.ActualEnd, tblcontract.ContractGroup,"
                    ContractClientIdLocation = ContractClientIdLocation + " tblContract.CategoryID, tblcontract.Scheduler, tblcontract.ServiceStart, tblcontract.ServiceEnd, tblcontract.OurReference, tblcontract.YourReference, tblcontract.Notes, tblcontract.Comments, tblcontract.Salesman, tblcontract.RenewalContractNo, tblcontract.OContractNo, tblcontract.Renewaldate, tblcontract.TeamId,  "
                    ContractClientIdLocation = ContractClientIdLocation + " tblcontract.CreatedBy, tblContract.ServiceAddress, tblcontract.AmtBalance, tblcontract.Location, tblcontract.CreatedOn, tblcontract.LastModifiedBy, tblcontract.LastModifiedOn, tblcontract.Rcno, tblcontract.FixedContinuous from tblContract  right  join tblContractdet  on tblContract.ContractNo=tblContractDet.ContractNo"
                    ContractClientIdLocation = ContractClientIdLocation + " or tblContract.ContractNo not in(Select tblContractDet.ContractNo from tblContractDet)"
                    ContractClientIdLocation = ContractClientIdLocation + " WHERE tblcontract.accountid = '" & txtclientid.Text & "' and ((tblContractDet.LocationId = '" & lblAccountIdContactLocation1.Text & "') or (tblContractDet.LocationId ='' ))  and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientIdLocation.SelectCommand = ContractClientIdLocation
                    GridView1.DataSourceID = "SQLDSContractClientIdLocation"
                    GridSelected = "SQLDSContractClientIdLocation"
                Else
                    Dim ContractClientId As String = ""

                    ContractClientId = "SELECT Status, RenewalSt, NotedST, Gst, ContractNo, ContractDate, AccountId, CustName, CustAddr, InchargeId, AgreeValue, StartDate, EndDate, ActualEnd, ContractGroup, CategoryID, ServiceAddress,    Scheduler, "
                    ContractClientId = ContractClientId + "ServiceStart, ServiceEnd, OurReference, YourReference, Notes, Comments, Salesman, RenewalContractNo, OContractNo, Renewaldate, TeamId, Amtbalance, Location, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, FixedContinuous FROM tblcontract WHERE accountid = '" & txtclientid.Text & "' and ((status ='O') or (status ='P') or (status ='H') or (status ='R')) order by rcno desc"

                    SQLDSContractClientId.SelectCommand = ContractClientId
                    GridView1.DataSourceID = "SQLDSContractClientId"
                    GridSelected = "SQLDSContractClientId"
                End If

                'GridView1.DataSourceID = "SQLDSContractClientId"
                'GridSelected = "SQLDSContractClientId"
            End If

            ''SQLDSContract.DataBind()
            GridView1.DataBind()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSvcSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub
    Private Sub UpdateContractHeader()
        Try
            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "' order by LocationId"
            command1.Connection = conn1

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            Dim notes As String = "", totalValue, totalNoService, maxNoService, perServiceValue, ContractValue, totalServiceAmt, discpercent, discAmt, agreeValue, ValuePerMonth As Decimal
            Dim ServiceAddress As String = "", lLocationId As String = ""
            totalValue = 0
            totalNoService = 0
            perServiceValue = 0
            maxNoService = 0
            totalServiceAmt = 0
            ValuePerMonth = 0
            discpercent = 0
            discAmt = 0.0
            lLocationId = ""
            txtServiceAddressCons.Text = ""
            txtServiceDescriptionCons.Text = ""

            For i = 0 To dtservicecontractDet.Rows.Count - 1
                totalValue = totalValue + Val(dtservicecontractDet.Rows(i)("Value").ToString())
                totalNoService = totalNoService + Val(dtservicecontractDet.Rows(i)("NoService").ToString())
                totalServiceAmt = totalServiceAmt + CDec(Val(dtservicecontractDet.Rows(i)("Value").ToString())) * CDec(Val(dtservicecontractDet.Rows(i)("NoService").ToString()))
                If Val(dtservicecontractDet.Rows(i)("NoService").ToString()) > maxNoService Then maxNoService = Val(dtservicecontractDet.Rows(i)("NoService").ToString())

                If lLocationId <> dtservicecontractDet.Rows(i)("LocationId").ToString() Then

                    If i = 0 Then
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & dtservicecontractDet.Rows(i)("Address1").ToString()
                    Else
                        txtServiceAddressCons.Text = txtServiceAddressCons.Text & ";  " & vbNewLine & dtservicecontractDet.Rows(i)("Address1").ToString()
                    End If
                    lLocationId = dtservicecontractDet.Rows(i)("LocationId").ToString()
                End If

                If i = 0 Then
                    txtServiceDescriptionCons.Text = dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                Else
                    txtServiceDescriptionCons.Text = txtServiceDescriptionCons.Text & "   " & dtservicecontractDet.Rows(i)("Frequency").ToString() & " : " & dtservicecontractDet.Rows(i)("TargetID").ToString()
                End If

            Next i

            'If maxNoService <> 0 Then perServiceValue = Math.Round(totalServiceAmt / maxNoService, 2)

            If totalNoService > 0 Then
                perServiceValue = Math.Round(totalServiceAmt / totalNoService, 2)
            End If

            discpercent = Val(txtDisPercent.Text)
            discAmt = Val(txtDisAmt.Text)

            totalNoService = Math.Round(totalNoService, 0)
            totalServiceAmt = Math.Round(totalServiceAmt, 2)


            If (totalValue > 0) Then
                If discpercent <> 0 Then
                    ContractValue = totalServiceAmt
                    discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)

                ElseIf discpercent = 0 And discAmt > 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue - discAmt
                    agreeValue = Math.Round(agreeValue, 2)
                ElseIf discpercent = 0 And discAmt = 0 Then
                    ContractValue = totalServiceAmt
                    'discAmt = ContractValue * discpercent * 0.01
                    agreeValue = ContractValue
                    agreeValue = Math.Round(agreeValue, 2)

                End If
            Else
                ContractValue = Convert.ToDecimal(txtConDetVal.Text)
                agreeValue = ContractValue - discAmt
                agreeValue = Math.Round(agreeValue, 2)
            End If


            If String.IsNullOrEmpty(txtNoofMonth.Text) = True Then
                'txtNoofMonth.Text = DateDiff(DateInterval.Month, txtServStart.Text, txtServEnd.Text)
                Dim NoofMonth As Integer
                NoofMonth = DateDiff(DateInterval.Month, CDate(txtServStart.Text), CDate(txtServEnd.Text))
                txtNoofMonth.Text = Convert.ToInt32(NoofMonth)
            End If


            If Convert.ToInt32(txtNoofMonth.Text) > 0 Then
                ValuePerMonth = Convert.ToDecimal(agreeValue / Convert.ToInt32(txtNoofMonth.Text))
            Else
                ValuePerMonth = Convert.ToDecimal(agreeValue)
            End If


            If (totalValue > 0) Then
                'txtConDetVal.Text = totalServiceAmt.ToString
                'txtAgreeVal.Text = agreeValue.ToString
                ''txtValPerMnth.Text = ValuePerMonth.ToString
                txtValPerMnth.Text = 0.0   '30.10.17
            Else
                ValuePerMonth = Math.Round(ValuePerMonth, 2)
            End If


            'Update
            Dim commandUpdateDetail As MySqlCommand = New MySqlCommand

            commandUpdateDetail.CommandType = CommandType.StoredProcedure
            commandUpdateDetail.CommandText = "UpdateContractFromContractDetail"
            commandUpdateDetail.Parameters.Clear()

            commandUpdateDetail.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
            commandUpdateDetail.Parameters.AddWithValue("@pr_totalNoService", totalNoService)
            commandUpdateDetail.Parameters.AddWithValue("@pr_totalServiceAmt", totalServiceAmt)
            commandUpdateDetail.Parameters.AddWithValue("@pr_perServiceValue", perServiceValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ContractValue", ContractValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValue", agreeValue)
            commandUpdateDetail.Parameters.AddWithValue("@pr_agreeValueContract", Convert.ToDecimal(txtAgreeVal.Text))
            commandUpdateDetail.Parameters.AddWithValue("@pr_NoofMonths", Convert.ToInt64(txtNoofMonth.Text))
            commandUpdateDetail.Parameters.AddWithValue("@pr_discpercent", discpercent)
            commandUpdateDetail.Parameters.AddWithValue("@pr_discAmt", discAmt)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ValuePerMonth", ValuePerMonth)
            commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceAddress", txtServiceAddressCons.Text)
            'commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", Left(txtServiceDescriptionCons.Text, 500))
            commandUpdateDetail.Parameters.AddWithValue("@pr_ServiceDescription", (txtServiceDescriptionCons.Text))

            commandUpdateDetail.Connection = conn1
            commandUpdateDetail.ExecuteScalar()
            conn1.Close()

            If (totalValue > 0) Then
                txtConDetVal.Text = totalServiceAmt.ToString
                txtAgreeVal.Text = agreeValue.ToString
                'txtValPerMnth.Text = ValuePerMonth.ToString
                txtValPerMnth.Text = 0.0   '30.10.17
            End If
            conn1.Close()
            conn1.Dispose()
            command1.Dispose()
            commandUpdateDetail.Dispose()
            dtservicecontractDet.Dispose()
            'conn.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION UpdateContractHeader", ex.Message.ToString, "")
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnSvcCancel_Click(sender As Object, e As EventArgs) Handles btnSvcCancel.Click
        'MakeSvcNull()
        MakeSvcDetailNull()
        EnableSvcControls()
        btnSvcEdit.Enabled = False
        btnSvcEdit.ForeColor = System.Drawing.Color.Gray
        btnSvcDelete.Enabled = False
        btnSvcDelete.ForeColor = System.Drawing.Color.Gray

        btnADD.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black
        btnEdit.Enabled = True
        btnEdit.ForeColor = System.Drawing.Color.Black
        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray
     

        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black
    End Sub

    Protected Sub BtnTeam_Click(sender As Object, e As ImageClickEventArgs) Handles BtnTeam.Click
        Try
            txtTeamSelection.Text = ""

            ''''''''''''''''''''''''''''''
            Dim strsql As String
            strsql = ""

            ''SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
            'strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            'End If

            'strsql = strsql + " order by TeamID"

            'SqlDSTeam.SelectCommand = strsql

            '''''''''''''''''''''''''

            If String.IsNullOrEmpty(txtTeam.Text.Trim) = False Then
                txtPopupTeamSearch.Text = txtTeam.Text.Trim
                txtPopUpTeam.Text = txtPopupTeamSearch.Text

                strsql = "SELECT  TeamId, TeamName, InChargeId, Supervisor From tblTeam where  1=1  and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " Order by TeamName"
                SqlDSTeam.SelectCommand = strsql

                'SqlDSTeam.SelectCommand = "SELECT * From tblTeam where  1=1  and (upper(TeamName) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(Inchargeid) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%' or upper(TeamID) Like '%" + txtPopupTeamSearch.Text.Trim.ToUpper + "%') and Status <> 'N' order by TeamName"
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            Else
                strsql = "SELECT   TeamId, TeamName, InChargeId, Supervisor From tblTeam where 1 =1  and Status <> 'N' "

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                SqlDSTeam.SelectCommand = strsql
                strsql = strsql + " Order by TeamName"
                'SqlDSTeam.SelectCommand = "SELECT  * From tblTeam where 1 =1  and Status <> 'N' order by TeamName"
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
            End If

            mdlPopUpTeam.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "BtnTeam_Click", ex.Message.ToString, "")
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        'If txtPopUpClient.Text.Trim = "" Then
        '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

        '    SqlDSClient.DataBind()
        '    gvClient.DataBind()
        '    mdlPopUpClient.Show()
        'End If
    End Sub

   

    Protected Sub btnPopUpTeamSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpTeamSearch.Click
        Try
            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                Dim strsql As String
                strsql = ""

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by TeamID"

                SqlDSTeam.SelectCommand = strsql
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopup.Text = "Team"
                'IsPopUpTeam = "Y"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpTeam_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    
    Protected Sub gvService_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        Try

            'Dim lLocationId As String

            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            'Dim lblid2 As TextBox= (Textbox)grvServiceLocation.Rows[0].FindControl("txtServiceNameGV")

            'Dim lblid2 As TextBox= (Textbox)grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid2 As TextBox = (TextBox)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim xrow1 As GridViewRow = CType(grvServiceLocation)


            'Dim lblid1 As DropDownList = CType(xrow1.FindControl("ddlLocationIdGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceNameGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xrow1.FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid4 As TextBox = CType(xrow1.FindControl("txtZoneGV"), TextBox)

            'lLocationId = lblid1.Text

            'Dim rowindex1 As Integer = xrow1.RowIndex

            'Get Targt Id

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            'command1.CommandType = CommandType.Text

            'If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
            '    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationId & "'"
            'ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
            '    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationId & "'"
            'End If
            'command1.Connection = conn

            'Dim dr As MySqlDataReader = command1.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    lblid2.Text = dt.Rows(0)("ServiceName").ToString
            '    lblid3.Text = dt.Rows(0)("Address1").ToString + ", " + dt.Rows(0)("AddStreet").ToString + ", " + dt.Rows(0)("AddBuilding").ToString + ", " + dt.Rows(0)("Addcity").ToString
            '    lblid4.Text = dt.Rows(0)("LocateGrp").ToString
            'End If


            Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtLocationGroupGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtBranchGV"), TextBox)

            'Dim lblid6 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtSalesmanGV"), TextBox)

            If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
                txtLocationId.Text = " "
            Else
                txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
                lblid1.Text = txtLocationId.Text
            End If


            If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
                txtServiceName.Text = " "
            Else
                txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
                lblid2.Text = txtServiceName.Text
            End If

            If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then
                txtServiceAddress.Text = " "
            Else
                txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(5).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(5).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(6).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(6).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(7).Text)
                lblid3.Text = txtServiceAddress.Text
            End If


            If gvLocation.SelectedRow.Cells(8).Text = "&nbsp;" Then
                lblid4.Text = " "
            Else
                lblid4.Text = gvLocation.SelectedRow.Cells(8).Text
            End If

            If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then
                lblid5.Text = " "
            Else
                txtLocationGroup.Text = gvLocation.SelectedRow.Cells(23).Text
                lblid5.Text = gvLocation.SelectedRow.Cells(23).Text
            End If

            If gvLocation.SelectedRow.Cells(24).Text = "&nbsp;" Then

            Else
                txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(24).Text)
                lblid3.Text = txtServiceAddress.Text
            End If

            If gvLocation.SelectedRow.Cells(25).Text = "&nbsp;" Then

            Else
                txtBranch.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(25).Text)
                lblid6.Text = gvLocation.SelectedRow.Cells(24).Text
            End If

            'If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
            '    txtServiceName.Text = " "
            'Else
            '    txtServiceName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
            '    lblid2.Text = txtServiceName.Text
            'End If

            'If gvLocation.SelectedRow.Cells(3).Text = "&nbsp;" Then
            '    txtServiceAddress.Text = " "
            'Else
            '    txtServiceAddress.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(3).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(4).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(4).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(5).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(5).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(6).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(6).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If


            'If gvLocation.SelectedRow.Cells(7).Text = "&nbsp;" Then
            '    lblid4.Text = " "
            'Else
            '    lblid4.Text = gvLocation.SelectedRow.Cells(7).Text
            'End If

            'If gvLocation.SelectedRow.Cells(22).Text = "&nbsp;" Then
            '    lblid5.Text = " "
            'Else
            '    txtLocationGroup.Text = gvLocation.SelectedRow.Cells(22).Text
            '    lblid5.Text = gvLocation.SelectedRow.Cells(22).Text
            'End If

            'If gvLocation.SelectedRow.Cells(23).Text = "&nbsp;" Then

            'Else
            '    txtServiceAddress.Text = txtServiceAddress.Text + ", " + Server.HtmlDecode(gvLocation.SelectedRow.Cells(23).Text)
            '    lblid3.Text = txtServiceAddress.Text
            'End If

            'If gvLocation.SelectedRow.Cells(24).Text = "&nbsp;" Then

            'Else
            '    txtBranch.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(24).Text)
            '    lblid6.Text = gvLocation.SelectedRow.Cells(24).Text
            'End If

            RetrieveContactDetails(txtLocationId.Text.Trim)
            grvServiceLocation.Focus()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvService_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub



    Private Sub RetrieveContactDetails(lLocationIdContact As String)
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            'Start:Check whether  Contract Detail Record exists

            Dim commandLocationIdContact As MySqlCommand = New MySqlCommand

            commandLocationIdContact.CommandType = CommandType.Text
            commandLocationIdContact.CommandText = "SELECT count(*) as totcontractdetrec FROM tblcontractdet where contractno ='" & txtContractNo.Text & "' and LocationID ='" & lLocationIdContact & "'"
            commandLocationIdContact.Connection = conn

            Dim drLocationIdContact As MySqlDataReader = commandLocationIdContact.ExecuteReader()
            Dim dtLocationIdContact As New DataTable
            dtLocationIdContact.Load(drLocationIdContact)

            'If dtLocationIdContact.Rows.Count = 0 Then
            If Val(dtLocationIdContact.Rows(0)("totcontractdetrec").ToString).ToString = 0 Then
                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                If txtContType1.Text = "CORPORATE" Or txtContType2.Text = "COMPANY" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2, AddCountry, AddPostal FROM tblCompanyLocation where AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                ElseIf txtContType1.Text = "RESIDENTIAL" Or txtContType2.Text = "PERSON" Then
                    command1.CommandText = "SELECT ServiceName, Address1, AddStreet, AddBuilding, Addcity, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2,AddCountry, AddPostal FROM tblPersonLocation where AccountID = '" & txtAccountId.Text & "' and LocationID= '" & lLocationIdContact & "'"
                End If
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    txtContactPerson.Text = dt.Rows(0)("ContactPerson").ToString
                    txtContactPerson2.Text = dt.Rows(0)("ContactPerson2").ToString

                    txtPosition.Text = dt.Rows(0)("Contact1Position").ToString
                    txtPosition2.Text = dt.Rows(0)("Contact2Position").ToString

                    txtTelephone.Text = dt.Rows(0)("Telephone").ToString
                    txtTelephone2.Text = dt.Rows(0)("Telephone2").ToString

                    txtFax.Text = dt.Rows(0)("Fax").ToString
                    txtFax2.Text = dt.Rows(0)("Contact2Fax").ToString

                    txtCP2Telephone.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobile.Text = dt.Rows(0)("Mobile").ToString
                    txtConPerMobile2.Text = dt.Rows(0)("Contact2Mobile").ToString

                    txtEmail1.Text = dt.Rows(0)("Contact2Tel").ToString
                    txtEmail2.Text = dt.Rows(0)("Contact2Tel2").ToString

                    txtEmail1.Text = dt.Rows(0)("Email").ToString
                    txtEmail2.Text = dt.Rows(0)("Contact2Email").ToString

                    'txtLocationId.Text = lblid1.Text
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text = lblid4.Text

                    txtContactPerson.Enabled = True
                    txtContactPerson2.Enabled = True
                    txtPosition.Enabled = True
                    txtPosition2.Enabled = True
                    txtTelephone.Enabled = True
                    txtTelephone2.Enabled = True
                    txtFax.Enabled = True
                    txtFax2.Enabled = True
                    txtCP2Telephone.Enabled = True
                    txtCP2Telephone2.Enabled = True
                    txtConPerMobile.Enabled = True
                    txtConPerMobile2.Enabled = True
                    txtEmail1.Enabled = True
                    txtEmail2.Enabled = True
                    txtAddress.Enabled = True
                End If
            Else
                Dim commandcontractdet As MySqlCommand = New MySqlCommand
                commandcontractdet.CommandType = CommandType.Text

                commandcontractdet.CommandText = "SELECT ServiceName, Address1, LocateGrp, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Email, Contact2Email, Fax, Contact2Fax, Mobile, Contact2Mobile, Telephone, Telephone2, Contact2Tel, Contact2Tel2 FROM tblContractDet where ContractNo = '" & txtContractNo.Text.Trim & "' and AccountID = '" & txtAccountId.Text & "' and  LocationID= '" & lLocationIdContact & "'"
                commandcontractdet.Connection = conn

                Dim drcontractdet As MySqlDataReader = commandcontractdet.ExecuteReader()
                Dim dtcontractdet As New DataTable
                dtcontractdet.Load(drcontractdet)

                If dtcontractdet.Rows.Count > 0 Then

                    txtContactPerson.Text = dtcontractdet.Rows(0)("ContactPerson").ToString
                    txtContactPerson2.Text = dtcontractdet.Rows(0)("ContactPerson2").ToString
                    txtPosition.Text = dtcontractdet.Rows(0)("Contact1Position").ToString
                    txtPosition2.Text = dtcontractdet.Rows(0)("Contact2Position").ToString
                    txtTelephone.Text = dtcontractdet.Rows(0)("Telephone").ToString
                    txtTelephone2.Text = dtcontractdet.Rows(0)("Telephone2").ToString
                    txtFax.Text = dtcontractdet.Rows(0)("Fax").ToString
                    txtFax2.Text = dtcontractdet.Rows(0)("Contact2Fax").ToString

                    txtCP2Telephone.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtCP2Telephone2.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtConPerMobile.Text = dtcontractdet.Rows(0)("Mobile").ToString
                    txtConPerMobile2.Text = dtcontractdet.Rows(0)("Contact2Mobile").ToString

                    txtEmail1.Text = dtcontractdet.Rows(0)("Contact2Tel").ToString
                    txtEmail2.Text = dtcontractdet.Rows(0)("Contact2Tel2").ToString

                    txtEmail1.Text = dtcontractdet.Rows(0)("Email").ToString
                    txtEmail2.Text = dtcontractdet.Rows(0)("Contact2Email").ToString

                    'txtLocationId.Text = lblid1.Text
                    'txtServiceName.Text = lblid2.Text
                    'txtServiceAddress.Text = lblid3.Text
                    'txtZone.Text = lblid4.Text

                    txtContactPerson.Enabled = False
                    txtContactPerson2.Enabled = False
                    txtPosition.Enabled = False
                    txtPosition2.Enabled = False
                    txtTelephone.Enabled = False
                    txtTelephone2.Enabled = False
                    txtFax.Enabled = False
                    txtFax2.Enabled = False
                    txtCP2Telephone.Enabled = False
                    txtCP2Telephone2.Enabled = False
                    txtConPerMobile.Enabled = False
                    txtConPerMobile2.Enabled = False
                    txtEmail1.Enabled = False
                    txtEmail2.Enabled = False
                    txtAddress.Enabled = False
                End If
                dtcontractdet.Dispose()
            End If
            'End:Check whether  Contract Detail Record exists

            conn.Close()
            conn.Dispose()
            commandLocationIdContact.Dispose()
            dtLocationIdContact.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "RetrieveContactDetails", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click

        lblMessage.Text = ""
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO COPY"
            Return

        End If
        'DisableControls()
        'txtMode.Text = "EDIT"
        lblMessage.Text = "ACTION: COPY RECORD"

        txtMode.Text = "NEW"
        EnableControls()
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black
        btnQuit.Enabled = True
        btnQuit.ForeColor = System.Drawing.Color.Black


        btnADD.Enabled = False
        btnCopy.Enabled = False
        btnRevision.Enabled = False
        btnSearch.Enabled = False
        btnReset.Enabled = False
        btnPrint.Enabled = False
      
        btnTransactions.Enabled = False
        btnEdit.Enabled = False
        btnChangeStatus.Enabled = False
        btnPrint.Enabled = False


        btnADD.ForeColor = System.Drawing.Color.Gray
        btnCopy.ForeColor = System.Drawing.Color.Gray
        btnRevision.ForeColor = System.Drawing.Color.Gray
        btnSearch.ForeColor = System.Drawing.Color.Gray
        btnReset.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray
       
        btnTransactions.ForeColor = System.Drawing.Color.Gray
        btnEdit.ForeColor = System.Drawing.Color.Gray
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
        btnPrint.ForeColor = System.Drawing.Color.Gray

        updPanelContract1.Update()

        'If Not (txtStatus.Text = "O" Or txtStatus.Text = "P" Or txtStatus.Text = "E" Or txtStatus.Text = "T" Or txtStatus.Text = "C") Then
        '    Dim message As String = "alert('Contract Status should be [O/C/E/P/T]!!!')"
        '    ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        '    Exit Sub
        'End If



        txtContractNo.Text = ""
        txtContractDate.Text = Now.Date.ToString("dd/MM/yyyy")
        txtConDetVal.Text = "0.00"
        txtAgreeVal.Text = "0.00"
        txtContractStart.Text = Now.Date.ToString("dd/MM/yyyy")

        'txtContractEnd.Text = ""
        txtServStart.Text = Now.Date.ToString("dd/MM/yyyy")
        txtServStartDay.Text = DateTime.Parse(txtServStart.Text).DayOfWeek.ToString().ToUpper
        'txtServEnd.Text = ""
        'txtServEndDay.Text = ""
        'TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString()
        txtServTimeIn.Text = ""
        txtServTimeOut.Text = ""
        txtAllocTime.Text = "0"
        ''txtWarrStart.Text = Now.Date.ToString("dd/MM/yyyy")
        'txtWarrEnd.Text = ""
        txtValPerMnth.Text = ""
        'txtContractNotes.Text = ""
        'txtServInst.Text = ""
        txtStatus.Text = "O"
        txtRs.Text = "O"
        txtNS.Text = "O"
        txtProspectId.Text = ""
        txtGS.Text = "O"
        'txtRemarks.Text = ""
        txtPrintBody.Text = ""
        'txtClient.Text = ""
        'txtContactPerson.Text = ""

        txtPortfolioValue.Text = "0.00"

        txtServiceNo.Text = "0.00"
        txtServiceAmt.Text = "0.00"
        txtServiceNoActual.Text = "0.00"
        txtServiceBal.Text = "0.00"
        txtServiceAmtActual.Text = "0.00"
        txtTotalArea.Text = "0.00"
        txtCompletedArea.Text = "0.00"
        txtBalanceArea.Text = "0.00"
        txtServiceAmtBal.Text = "0.00"

        txtBillingAmount.Text = "0.00"
        txtRetentionPerc.Text = "0"
        txtRetentionValue.Text = "0.00"

        txtWarrantyBillingAmount.Text = "0.00"
        txtBaitStationTotal.Text = "0.00"
        txtBaitStationInstalled.Text = "0.00"
        txtBaitStationBalance.Text = "0.00"

        txtActualServiceStart.Text = ""
        txtActualEnd.Text = ""

        txtTerminationCode.Text = ""
        txtTerminationDescription.Text = ""

        ddlPortfolioYN.SelectedItem.Text = "YES"
        txtLastBillDate.Text = ""
        ddlAgreementType.Items.Clear()
        ddlAgreementType.Items.Add("--SELECT--")
        ddlAgreementType.Items.Add("NEW")
        ddlAgreementType.Items.Add("ADDITION")

        ddlAgreementType.Enabled = True

        ddlScheduler.Text = Session("StaffID")

        txtOnHoldCode.Text = ""
        txtOnHoldDate.Text = ""
        txtOnHoldComments.Text = ""
        txtOnHoldDescription.Text = ""
        txtLastServiceDate.Text = ""

        If rbtLstDuration.SelectedIndex = 0 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text)
        ElseIf rbtLstDuration.SelectedIndex = 1 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddDays(txtDuration.Text * 7)
        ElseIf rbtLstDuration.SelectedIndex = 2 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddMonths(txtDuration.Text)
        ElseIf rbtLstDuration.SelectedIndex = 3 Then
            txtContractEnd.Text = Convert.ToDateTime(txtContractStart.Text).AddYears(txtDuration.Text)
        End If

        txtContractEnd.Text = Convert.ToDateTime(txtContractEnd.Text).AddDays(-1)
        txtServEnd.Text = txtContractEnd.Text
        TxtServEndDay.Text = DateTime.Parse(txtServEnd.Text).DayOfWeek.ToString().ToUpper

        

        tb1.ActiveTabIndex = 0
    End Sub


  
    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        Try

            If txtSearchPopup.Text = "SEARCH" Then
                If String.IsNullOrEmpty(txtPopUpClient.Text.Trim) = False Then

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location  From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text + "%"" or C.ID like ""%" + txtPopUpClient.Text + "%"" or C.contactperson like ""%" + txtPopUpClient.Text + "%"" or D.LocationId like """ + txtPopUpClient.Text + "%"") order by Accountid, LocationId "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location  From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Inactive=False  and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text + "%"" or C.ID like ""%" + txtPopUpClient.Text + "%"" or C.contactperson like ""%" + txtPopUpClient.Text + "%"" or D.LocationId like """ + txtPopUpClient.Text + "%"") order by Accountid, LocationId "
                    End If
              
                    SqlDSClient.DataBind()

                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                Else
                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, D.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Inactive=False and   (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                    End If
                    SqlDSClient.DataBind()

                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                End If

            Else

                If txtPopUpClient.Text.Trim = "" Then
                    MessageBox.Message.Alert(Page, "Please enter client name", "str")
                Else

                    If txtDisplayRecordsLocationwise.Text = "Y" Then
                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location   From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location   From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')   and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contACTperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        End If
                    Else
                        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD, B.Location  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contactperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                            SqlDSClient.SelectCommand = "SELECT A.AccountID, A.ID, B.ServiceName as name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.PersonGroupD as CompanyGroupD, B.Location  From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')   and  A.Inactive =False and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient.Text + "%"" or A.ID like ""%" + txtPopUpClient.Text + "%"" or A.contACTperson like ""%" + txtPopUpClient.Text + "%"" or B.LocationId like ""%" + txtPopUpClient.Text + "%"") order by A.name, B.LocationId"
                        End If
                    End If
                  

                    SqlDSClient.DataBind()

                    mdlPopUpClient.Show()
                    txtIsPopup.Text = "Client"
                End If
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpClient_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click
        lblAlert.Text = ""
        Dim strsql As String
        strsql = ""

        Try

            Dim hyphenpos As Integer
            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                hyphenpos = InStr(4, txtAccountIdSearch.Text.Trim, "-", CompareMethod.Text)
            End If

            txtIsPopup.Text = "N"

            If txtDisplayRecordsLocationwise.Text = "N" Then

                If hyphenpos = 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID,  A.ServiceAddress, A.AmtBalance, A.Location,  A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  where 1=1  "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If

                End If


                If hyphenpos > 0 Then

                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress,  A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup,  A.CategoryID, A.ServiceAddress, A.AmtBalance, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If


                End If



                If hyphenpos > 0 Then
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and (B.LocationId like '%" & txtAccountIdSearch.Text.Trim & "%' or A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%') "
                    End If
                Else
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%' "
                    End If
                End If


                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                    Dim YrStrList As List(Of [String]) = New List(Of String)()

                    For Each str As String In stringList
                        str = "'" + str + "'"
                        YrStrList.Add(str.ToUpper)
                    Next

                    Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                    strsql = strsql + " and A.status in (" + YrStr + ")"

                End If

                'strsql = strsql & vStrStatus

                If String.IsNullOrEmpty(txtContractnoSearch.Text) = False Then
                    strsql = strsql & " and A.contractno like '%" & txtContractnoSearch.Text.Trim + "%'"
                End If

                'If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                '    strsql = strsql & " and A.TeamID like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                'End If


                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    strsql = strsql & " and A.InChargeId like '%" & txtInchargeSearch.Text.Trim + "%'"
                'End If

                'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                '    strsql = strsql & " and (CustCode like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                'End If


                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    txtServiceAddressSearch.Text = txtServiceAddressSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                End If


                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    txtClientNameSearch.Text = txtClientNameSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
                End If

              
                If ddlContractGrpSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.ContractGroup = '" & ddlContractGrpSearch.Text.Trim & "'"
                End If

                If ddlSalesmanSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.Salesman = """ & ddlSalesmanSearch.Text.Trim & """"
                End If

                If ddlCategorySearch.SelectedIndex > 0 Then

                    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                End If


            End If 'If txtDisplayRecordsLocationwise.Text = "N" 

          
            '''''''''''''''''''''''''''''''''''''''

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                   If hyphenpos = 0 Then
                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID,  A.ServiceAddress, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  where 1=1  "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance, A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If

                End If


                If hyphenpos > 0 Then

                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = True And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A  inner join tblContractdet B on A.ContractNo=B.ContractNo  where 1=1 "
                        'strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = True Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup, A.CategoryID, A.ServiceAddress,  A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo   where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "'"
                    End If


                    If String.IsNullOrEmpty(lblAccountIdContact1.Text.Trim) = False And String.IsNullOrEmpty(lblAccountIdContactLocation1.Text.Trim) = False Then
                        strsql = "Select distinct A.Status, A.RenewalSt, A.NotedST, A.Gst, A.ContractNo, A.ContractDate, A.AccountId, A.CustName, A.CustAddr, A.InchargeId, A.AgreeValue, A.StartDate, A.EndDate, A.ActualEnd, "
                        strsql = strsql + "A.ServiceStart, A.ServiceEnd, A.OurReference, A.YourReference, A.Notes, A.Comments, A.Salesman, A.RenewalContractNo, A.OContractNo, A.Renewaldate, A.TeamId,  "
                        strsql = strsql + "A.Scheduler, A.ContractGroup,  A.CategoryID, A.ServiceAddress, A.AmtBalance,A.Location, A.CreatedBy, A.CreatedOn, A.LastModifiedBy, A.LastModifiedOn, A.Rcno, B.LocationId, A.FixedContinuous from tblContract A inner join tblContractdet B on A.ContractNo=B.ContractNo where 1=1 "
                        strsql = strsql + " and A.AccountId ='" & lblAccountIdContact1.Text.Trim & "' and B.LocationId ='" & lblAccountIdContactLocation1.Text.Trim & "'"
                    End If


                End If



                If hyphenpos > 0 Then
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and (B.LocationId like '%" & txtAccountIdSearch.Text.Trim & "%' or A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%') "
                    End If
                Else
                    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                        strsql = strsql & " and A.AccountId like '%" & txtAccountIdSearch.Text.Trim & "%' "
                    End If
                End If


                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                    Dim YrStrList As List(Of [String]) = New List(Of String)()

                    For Each str As String In stringList
                        str = "'" + str + "'"
                        YrStrList.Add(str.ToUpper)
                    Next

                    Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                    strsql = strsql + " and A.status in (" + YrStr + ")"

                End If

                'strsql = strsql & vStrStatus

                If String.IsNullOrEmpty(txtContractnoSearch.Text) = False Then
                    strsql = strsql & " and A.contractno like '%" & txtContractnoSearch.Text.Trim + "%'"
                End If

                'If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                '    strsql = strsql & " and A.TeamID like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                'End If


                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    strsql = strsql & " and A.InChargeId like '%" & txtInchargeSearch.Text.Trim + "%'"
                'End If

                'If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                '    strsql = strsql & " and (CustCode like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                'End If


                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    txtServiceAddressSearch.Text = txtServiceAddressSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.ServiceAddress like '%" & txtServiceAddressSearch.Text.Trim + "%'"
                End If


                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    txtClientNameSearch.Text = txtClientNameSearch.Text.Replace("'", "\'")
                    strsql = strsql & " and A.CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
                End If

                If ddlContractGrpSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.ContractGroup = '" & ddlContractGrpSearch.Text.Trim & "'"
                End If

                If ddlSalesmanSearch.SelectedIndex > 0 Then
                    strsql = strsql & " and A.Salesman = """ & ddlSalesmanSearch.Text.Trim & """"
                End If

                'If String.IsNullOrEmpty(ddlCategorySearch.Text) = False Then
                '    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                'End If

                If ddlCategorySearch.SelectedIndex > 0 Then

                    strsql = strsql & " and A.CategoryID = """ & ddlCategorySearch.Text.Trim & """"
                End If

                Dim YrStrList1 As List(Of [String]) = New List(Of String)()

                For Each item As ListItem In ddlLocationSearch.Items
                    If item.Selected Then

                        YrStrList1.Add("""" + item.Value + """")

                    End If
                Next

                If YrStrList1.Count > 0 Then

                    Dim YrStr As [String] = [String].Join(",", YrStrList1.ToArray)
                    strsql = strsql + " and A.location in (" + YrStr + ")"
                    'selFormula = selFormula + " and {tblsales1.CompanyGroup} in [" + YrStr + "]"
                    'If selection = "" Then
                    '    selection = "CompanyGroup : " + YrStr
                    'Else
                    '    selection = selection + ", CompanyGroup : " + YrStr
                    'End If
                Else
                    strsql = strsql & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

            End If 'If txtDisplayRecordsLocationwise.Text = "Y" 



            '''''''''''''''''''''''''''''''''''''''''



            'If txtDisplayRecordsLocationwise.Text = "Y" Then
            '    strsql = strsql & " and A.location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
            'End If

            strsql = strsql + " order by A.rcno desc, A.custname limit " & txtLimit.Text


            txt.Text = strsql

            SQLDSContract.SelectCommand = ""
            SQLDSContract.SelectCommand = strsql
            SQLDSContract.DataBind()

            GridView1.DataSourceID = "SQLDSContract"
            GridView1.DataBind()
            GridView1.Visible = True
            GridSelected = "SQLDSContract"

            lblMessage.Text = ""
            'lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text
            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"

            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
                MakeMeNull()
                'MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"
                    txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    'If txtMode.Text <> "View" Then
               
                    'End If

                    PopulateRecord()
                    GridView1.SelectedIndex = 0

                End If
            End If



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnQuickSearch_Click", ex.Message.ToString, Right(strsql, 1500))
            Exit Sub
        End Try
    End Sub

   

   

    Protected Sub txtPopUpTeam_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpTeam.TextChanged
        Try
            If txtPopUpTeam.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                Dim strsql As String
                strsql = ""

                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                strsql = "SELECT distinct * From tblTeam where 1=1 and Status <> 'N' and TeamName like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    strsql = strsql + " and Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                End If

                strsql = strsql + " order by TeamID"

                SqlDSTeam.SelectCommand = strsql
                SqlDSTeam.DataBind()
                gvTeam.DataBind()
                mdlPopUpTeam.Show()
                txtIsPopup.Text = "Team"
                'IsPopUpTeam = "Y"
                End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtPopUpTeam_TextChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton3_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton3.Click
        'txtTeamSelection.Text = "Search"
        'mdlPopUpTeam.Show()

        lblAlert.Text = ""

        txtContType1.Text = "CORPORATE"
        txtContType2.Text = "COMPANY"
        txtContType3.Text = "RESIDENTIAL"
        txtContType4.Text = "PERSON"

        'mdlPopUpClient.Show()

        lblAlert.Text = ""


        'If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
        '    txtContType1.Text = "CORPORATE"
        '    txtContType2.Text = "COMPANY"
        '    txtContType3.Text = "CORPORATE"
        '    txtContType4.Text = "COMPANY"
        'Else
        '    txtContType1.Text = "RESIDENTIAL"
        '    txtContType2.Text = "PERSON"
        '    txtContType3.Text = "RESIDENTIAL"
        '    txtContType4.Text = "PERSON"
        'End If


        'If String.IsNullOrEmpty(txtOriginalAccountId.Text) = False Then
        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then

        '    Else
        '        Exit Sub
        '    End If
        'End If
        Try
            txtPopUpClient.Text = ""

            txtSearchPopup.Text = "SEARCH"


            If String.IsNullOrEmpty(txtClientNameSearch.Text.Trim) = False Then
                txtPopUpClient.Text = txtClientNameSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Location = '" & txtLocation.Text & "' and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  and (upper(B.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.contactperson like '%" + txtPopupClientSearch.Text + "%' or B.LocationId like '" + txtPopupClientSearch.Text + "%') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.contactperson like '%" + txtPopupClientSearch.Text + "%' or D.LocationId like '" + txtPopupClientSearch.Text + "%') order by Accountid, LocationId "
                End If
          
                SqlDSClient.DataBind()

            Else

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Location = '" & txtLocation.Text & "' and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.AddStreet, A.AddBuilding, A.AddCity, A.AddState, A.AddCountry, A.AddPostal, A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, b.LocationId, b.Address1  as ServiceAddress, B.ContractGroup, B.CompanyGroupD, A.Location From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid where A.Inactive=False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION SELECT 'PERSON', C.AccountID, C.ID, D.ServiceName as Name, C.ContactPerson, C.Address1, C.TelMobile as Mobile, C.Email,  C.LocateGRP, C.PersonGroup as CompanyGroup, C.AddBlock, C.AddNos, C.AddFloor, C.AddUnit, C.AddStreet, C.AddBuilding, C.AddCity, C.AddState, C.AddCountry, C.AddPostal, C.TelFax as Fax, C.TelMobile as Mobile, C.TelHome as Telephone, C.Salesman, '' as Industry, C.billaddress1, C.billstreet, C.billbuilding, C.billcity, C.billpostal, D.LocationId, D.Address1  as ServiceAddress, D.ContractGroup, D.PersonGroupD as CompanyGroupD, C.Location From tblPERSON C Left join tblPersonLocation D on C.Accountid = D.Accountid where 1=1 and C.Inactive=False and  (C.Accountid is not null and C.Accountid <> '') and  (D.Accountid is not null and D.Accountid <> '') order by Accountid, LocationId "
                End If
                SqlDSClient.DataBind()

            End If
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ImageButton3_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnPopUpTeamReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpTeamReset.Click
        txtPopUpTeam.Text = "Search Here for Team or In-ChargeId"
        SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%'"
        SqlDSTeam.DataBind()
        gvTeam.DataBind()

        mdlPopUpTeam.Show()
        txtIsPopup.Text = "Team"
    End Sub

    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
            Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            For Each str As String In stringList
                For Each item As ListItem In chkStatusSearch.Items
                    If item.Value = str Then
                        item.Selected = True
                    End If
                Next
            Next


        End If
        mdlPopupStatusSearch.Show()
    End Sub

    'Protected Sub rdbStatusSearch_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rdbStatusSearch.SelectedIndexChanged
    '    If rdbStatusSearch.SelectedValue = "ALL" Then
    '        chkStatusSearch.ClearSelection()
    '        chkStatusSearch.Enabled = False
    '    Else
    '        chkStatusSearch.Enabled = True
    '    End If
    '    mdlPopupStatusSearch.Show()

    'End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    YrStrList.Add(item.Value)
                End If
            Next

           

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            If String.IsNullOrEmpty(YrStr) = True Then
                Dim message As String = "alert('PLEASE SELECT A STATUS')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                mdlPopupStatusSearch.Show()
                Exit Sub
            End If

            txtSearch1Status.Text = YrStr

            txtSearch1Status.Focus()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            Exit Sub
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub btnQuickReset_Click(sender As Object, e As EventArgs) Handles btnQuickReset.Click
        txtContractnoSearch.Text = ""
        txtAccountIdSearch.Text = ""
        txtServiceAddressSearch.Text = ""
        'txtInchargeSearch.Text = ""
        txtClientNameSearch.Text = ""
        txtSearch1Status.Text = "O,P,H,R,C,T,E"
        'btnQuickSearch_Click(sender, e)
    End Sub

    Protected Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click

    End Sub

    Protected Sub btnInvoice_Click(sender As Object, e As EventArgs) Handles btnInvoice.Click

        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO VIEW INVOICES"
            Return
        End If

        ModalPopupInvoice.Show()
    End Sub

    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click

        'If String.IsNullOrEmpty(txtContractNo.Text) = False Then
        '    Session("contractno") = txtContractNo.Text

        '    If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
        '        Session("searchstatus") = txtSearch1Status.Text
        '    End If

        '    If String.IsNullOrEmpty(txtTeamSearch.Text) = False Then
        '        Session("searchteam") = txtTeamSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
        '        Session("searchincharge") = txtInchargeSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
        '        Session("searchaccountid") = txtAccountIdSearch.Text
        '    End If

        '    If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
        '        Session("searchclientname") = txtClientNameSearch.Text
        '    End If

        '    ''''''''''''''''''''''''''''''

        '    Session("gridsqlcontract") = txt.Text
        '    Session("rcno") = txtRcno.Text

        'End If


        'Session("contractdetailfrom") = "contract"
        'Response.Redirect("RV_ContractServiceSchedule.aspx")
        'SASI - 20/07/2017

        If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            Session("contractno") = txtContractNo.Text

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Session("searchstatus") = txtSearch1Status.Text
            End If

            If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                Session("searchteam") = txtServiceAddressSearch.Text
            End If

            'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
            '    Session("searchincharge") = txtInchargeSearch.Text
            'End If

            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                Session("searchaccountid") = txtAccountIdSearch.Text
            End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                Session("searchclientname") = txtClientNameSearch.Text
            End If

            ''''''''''''''''''''''''''''''

            Session("gridsqlcontract") = txt.Text
            Session("rcno") = txtRcno.Text

        End If

        '  Session.Add("ContractNo", txtContractNo.Text)

        Session("contractdetailfrom") = "contract"


        SqlDSNotesTemplate.SelectCommand = "SELECT NoteId, Module, Content, DefaultDisplay from tblNotesTemplate where Module ='ZSERVICE-CONTRACT' order by NoteID"
        SqlDSNotesTemplate.DataBind()
        grvNotesTemplate.DataBind()

        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub ChkRequireInspection_CheckedChanged(sender As Object, e As EventArgs) Handles ChkRequireInspection.CheckedChanged

    End Sub

    Protected Sub txtContractDate_TextChanged(sender As Object, e As EventArgs) Handles txtContractDate.TextChanged
        IsContractDateHoliday()
        IsServiceDateHoliday()

        'If Convert.ToDateTime(txtContractDate.Text.Trim) < DateTime.Today Then
        '    If txtBackDateContractSetup.Text = False Then
        '        lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
        '        txtContractDate.Focus()
        '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '        Exit Sub
        '    Else
        '        If txtBackDateContract.Text = False Then
        '            lblAlert.Text = "CONTRACT DATE CANNOT BE A DATE IN THE PAST"
        '            txtContractDate.Focus()
        '            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '            Exit Sub
        '        End If

        '    End If
        'End If
    End Sub

   
    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click
        Try
            txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity,  A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblCompany  A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                End If

            Else
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.Mobile, A.Email,  A.LocateGRP, A.CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit,  A.Fax, A.Mobile, A.Telephone, A.Salesman, A.Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblCompany  A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON', A.AccountID, A.ID, B.ServiceName as Name, A.ContactPerson, A.Address1, A.TelMobile as Mobile, A.Email,  A.LocateGRP, A.PersonGroup as CompanyGroup, A.AddBlock, A.AddNos, A.AddFloor, A.AddUnit, A.TelFax as Fax, A.TelMobile as Mobile, A.TelHome as Telephone, A.Salesman, '' as Industry, A.billaddress1, A.billstreet, A.billbuilding, A.billcity, A.billpostal, A.Location, B.LocationId, B.Address1 as ServiceAddress, b.AddStreet, b.AddBuilding, b.AddCountry, b.Addpostal, B.ContractGroup, B.CompanyGroupD From tblPERSON A Left join tblPersonLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.Inactive =False order by A.Accountid, B.LocationId"
                End If
            End If
         
            SqlDSClient.DataBind()

            mdlPopUpClient.Show()
            txtIsPopup.Text = "Client"
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub SQLDSContract_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SQLDSContract.Selected
        txtRowCount.Text = e.AffectedRows.ToString
    End Sub

   

    Protected Sub FindMarketSegmentID()
        Try
            Dim connBillingDetails As MySqlConnection = New MySqlConnection()

            connBillingDetails.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connBillingDetails.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT marketsegmentid FROM tblindustry where industry= """ & ddlIndustry.Text & """"
            command1.Connection = connBillingDetails

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                ddlMarketSegmentID.Text = dt.Rows(0)("marketsegmentid").ToString
            End If

            connBillingDetails.Close()
            command1.Dispose()
            dt.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindMarketSegmentID", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged

        'If String.IsNullOrEmpty(txtContractNo.Text) = True Then
        '    lblAlert.Text = "Please Select a Contract to proceed."
        '    tb1.TabIndex = 0
        '    Exit Sub
        'End If

        lblAlert.Text = ""

        If tb1.ActiveTabIndex = 1 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch to 'Service Details' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If

        If tb1.ActiveTabIndex = 2 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch to 'Items Issued' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If


        If tb1.ActiveTabIndex = 3 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch to 'Schedule of Rate' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If

        If tb1.ActiveTabIndex = 4 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch 'Commission' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If

        If tb1.ActiveTabIndex = 5 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch 'File Upload' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If


        If tb1.ActiveTabIndex = 6 Then
            If lblMessage.Text = "ACTION: COPY RECORD" Or lblMessage.Text = "ACTION: RENEW RECORD" Or lblMessage.Text = "ACTION: REVISE RECORD" Then
                lblAlert.Text = "Cannot switch 'Notes' tab during COPY/RENEW/REVISE"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If
        End If



        If tb1.ActiveTabIndex = 1 Then
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtContractNo.Text) Then
                lblAlert.Text = "Select a Contract to Proceed"
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If


            'GridView1.Visible = False
            txtServStartSvc.Text = txtServStart.Text
            txtServEndSvc.Text = txtServEnd.Text
            txtServStartDaySvc.Text = txtServStartDay.Text
            txtServEndDaySvc.Text = TxtServEndDay.Text
            txtContractGroupSelected.Text = ddlContractGrp.Text

            SqlDSContractDet.SelectCommand = "SELECT LocationId, Frequency, ServiceId, ServiceDesc, TargetDesc, Value, NoService, NoofSvcInterval, NoofInterval, NoServiceCompleted, ContractNo, Rcno From tblContractDet where (1 =1 )   and ContractNo = @ContractNo  order by ServiceId limit 20"

            grvContractDetail.DataSourceID = "SqlDSContractDet"
            grvContractDetail.DataBind()
            'grvContractDetail.DataBind = "SqlDSContractDet"

            If grvContractDetail.Rows.Count = 0 Then
                txtSelectedIndex.Text = "-1"
            Else
                txtSelectedIndex.Text = "0"
            End If


            grvContractDetail_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChanged2(New Object(), New EventArgs)
            'SASI - 17/04/2017
        ElseIf tb1.ActiveTabIndex = 2 Then
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtContractNo.Text) Then
                lblAlert.Text = "Select a Contract to proceed"
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If


            'GridView1.Visible = False
        End If

        If tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Or tb1.ActiveTabIndex = 6 Then
            'txtSvcMode.Text = "NEW"
            If txtSvcMode.Text = "NEW" Or txtSvcMode.Text = "EDIT" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                tb1.ActiveTabIndex = 1
                Exit Sub
            End If

            'GridView1.Visible = True
        ElseIf tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Or tb1.ActiveTabIndex = 6 Then
            'txtSvcMode.Text = "NEW"
            If txtCommMode.Text = "EDIT" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                tb1.ActiveTabIndex = 2
                Exit Sub
            End If

        ElseIf tb1.ActiveTabIndex = 0 Or tb1.ActiveTabIndex = 1 Or tb1.ActiveTabIndex = 2 Or tb1.ActiveTabIndex = 3 Or tb1.ActiveTabIndex = 4 Or tb1.ActiveTabIndex = 5 Then
            'txtSvcMode.Text = "NEW"
            If txtNotesMode.Text = "EDIT" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                tb1.ActiveTabIndex = 6
                Exit Sub
            End If

        End If


        If tb1.ActiveTabIndex = 2 Then
            lbItemsIssued.Text = txtContractNo.Text
            'lbItemsIssued.Text = Session("UserID").ToString.ToUpper

            sqlDSItemsIssued.SelectCommand = "select ItemID, ItemName, sum(Qty) as Qty, UnitMS FROM tblservicerecordissueditem, tblServiceRecord where tblservicerecordissueditem.RecordNo = tblServiceRecord.RecordNo and tblServiceRecord.Status = 'P' and tblservicerecordissueditem.ContractNo = '" + txtContractNo.Text + "' Group by ItemID order by ItemID"
            sqlDSItemsIssued.DataBind()
            gvItemsIssued.DataBind()

        ElseIf tb1.ActiveTabIndex = 3 Then
            Dim query As String
            query = ""

            query = "Select TargetId from tblTarget order by descrip1"
            PopulateDropDownList(query, "TargetId", "TargetId", ddlTagetIDRateSchedule)

            lblScheduleRate1.Text = txtContractNo.Text
            'lbItemsIssued.Text = Session("UserID").ToString.ToUpper

            sqlDSRateSchedule.SelectCommand = "select * FROM tblrateschedule where ContractNo = '" + txtContractNo.Text + "'order by TargetID"
            sqlDSRateSchedule.DataBind()

            gvRateSchedule.DataSourceID = "sqlDSRateSchedule"
            gvRateSchedule.DataBind()

            EnableRateScheduleControls()

            btnEditRateSchedule.Enabled = False
            btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
            btnDeleteRateSchedule.Enabled = False
            btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

            'AccessControl()
            'EnablecommControls()
        ElseIf tb1.ActiveTabIndex = 6 Then
            lblNotesKeyField.Text = txtContractNo.Text
            lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

            SqlDSNotesMaster.SelectCommand = "select Rcno, StaffId, Notes, CreatedBy, CreatedOn, LastModifiedBy, lastModifiedOn from tblnotes where keyfield = '" + txtContractNo.Text + "'"
            SqlDSNotesMaster.DataBind()
            gvNotesMaster.DataBind()
        ElseIf tb1.ActiveTabIndex = 5 Then
            'View Uploaded files
            iframeid.Attributes.Add("src", "about:blank")

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'TabPanel3.HeaderText = "File Upload [" & gvUpload.Rows.Count & "]"
            lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"
            updPanelContract1.Update()
        End If
        '  if (sender.get_activeTabIndex() == 1) {
        '    if (document.getElementById("<%=txtContractNo.ClientID%>").value == '') {
        '        $find('<%=tb1.ClientID%>').set_activeTabIndex(0);
        '        alert("Please select a Contract record to proceed.");
        '        return;
        '    }

        '    document.getElementById('<%=GridView1.ClientID()%>').style.display = 'none';

        '        document.getElementById("<%=txtServStartSvc.ClientID%>").value = document.getElementById("<%=txtServStart.ClientID%>").value
        '        document.getElementById("<%=txtServEndSvc.ClientID%>").value = document.getElementById("<%=txtServEnd.ClientID%>").value

        '        document.getElementById("<%=txtServStartDaySvc.ClientID%>").value = document.getElementById("<%=txtServStartDay.ClientID%>").value
        '        document.getElementById("<%=txtServEndDaySvc.ClientID%>").value = document.getElementById("<%=TxtServEndDay.ClientID%>").value

        '}
        'else {
        '    document.getElementById('<%=GridView1.ClientID()%>').style.display = 'inline';

        '}

    End Sub


    Protected Sub UploadFile(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        Try
            lblMessage.Text = ""
            lblAlert.Text = ""
            If String.IsNullOrEmpty(txtContractNo.Text) Then
                lblAlert.Text = "SELECT ACCOUNT TO UPLOAD FILE"
                Return

            End If

            If String.IsNullOrEmpty(txtFileDescription.Text) Then
                lblAlert.Text = "ENTER FILE DESCRIPTION TO UPLOAD FILE"
                Exit Sub
            End If

            If ddlDocumentType.SelectedIndex = 0 Then
                lblAlert.Text = "ENTER DOCUMENT TYPE TO UPLOAD FILE"
                Exit Sub
            End If

            ''''''''''''''''''
            If (FileUpload1.FileBytes.Length > 10485760) Then
                lblAlert.Text = "FILE SIZE SHOULD BE LESS THAN 10MB"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            ''''''''''''''''''''''


            If FileUpload1.HasFile Then

                Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
                Dim ext As String = Path.GetExtension(fileName)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

                    If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName) Then

                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtContractNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            '  MessageBox.Message.Alert(Page, "Record already exists!!!", "str")
                            lblAlert.Text = "FILE ALREADY EXISTS"
                            conn.Close()
                            conn.Dispose()
                            Exit Sub
                        End If
                    Else

                       


                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text

                        command1.CommandText = "SELECT * FROM tblFILEUPLOAD where filenamelink=@filenamelink"
                        command1.Parameters.AddWithValue("@filenamelink", txtContractNo.Text + "_" + fileName)
                        command1.Connection = conn

                        Dim dr As MySqlDataReader = command1.ExecuteReader()
                        Dim dt As New DataTable
                        dt.Load(dr)

                        If dt.Rows.Count > 0 Then

                            Dim command2 As MySqlCommand = New MySqlCommand

                            command2.CommandType = CommandType.Text

                            command2.CommandText = "delete from fileupload where filenamelink='" + txtContractNo.Text + "_" + fileName + "'"

                            command2.Connection = conn

                            command2.ExecuteNonQuery()
                        End If
                        End If
                        FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName))

                        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
                        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
                        'Dim files As List(Of ListItem) = New List(Of ListItem)

                        'For Each foundFile As FileInfo In filesInDir
                        '    Dim fullName As String = foundFile.FullName
                        '    files.Add(New ListItem(foundFile.Name))
                        'Next
                        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
                        ''For Each filePath As String In filePaths
                        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
                        ''Next

                        'ADD FILE UPLOAD INFORMATION TO DATABASE INORDER TO STORE FILES WITH DESCRIPTION - 20170930



                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblfileupload(FileGroup,FileRef,FileName,FileDescription,FileType,FileNameLink, DocumentType, CreatedBy,CreatedOn,LastModifiedBy,LastModifiedOn)"
                    qry = qry + "VALUES(@FileGroup,@FileRef,@FileName,@FileDescription,@FileType,@FileNameLink, @DocumentType, @CreatedBy,@CreatedOn,@LastModifiedBy,@LastModifiedOn);"


                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                            command.Parameters.AddWithValue("@FileGroup", "CONTRACT")
                            command.Parameters.AddWithValue("@FileRef", txtContractNo.Text)
                            command.Parameters.AddWithValue("@FileName", fileName.ToUpper)
                            command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text.ToUpper)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))

                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@FileNameLink", txtContractNo.Text + "_" + fileName.ToUpper)

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                            command.Parameters.AddWithValue("@FileGroup", "CONTRACT")
                            command.Parameters.AddWithValue("@FileRef", txtAccountId.Text)
                            command.Parameters.AddWithValue("@FileName", fileName)
                            command.Parameters.AddWithValue("@FileDescription", txtFileDescription.Text)
                        command.Parameters.AddWithValue("@FileType", ext.ToUpper)
                        command.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@FileNameLink", txtContractNo.Text + "_" + fileName)

                        End If


                        command.Connection = conn

                    command.ExecuteNonQuery()

                    ''''''''''''''''''''''''''''
                    If ddlDocumentType.Text = "SIGNED SERVICE AGREEMENT" Then
                        Dim command1 As MySqlCommand = New MySqlCommand

                        command1.CommandType = CommandType.Text
                        Dim qry1 As String = "UPDATE tblContract SET SignedServiceAgreement = True, SignedAgreementReference= 'Uploaded File'  where ContractNo ='" & txtContractNo.Text & "'"


                        command1.CommandText = qry1
                        command1.Parameters.Clear()

                        'command1.Parameters.AddWithValue("@DocumentType", ddlDocumentType.Text.ToUpper)
                        'command1.Parameters.AddWithValue("@CreatedBy", Session("UserID"))

                        command1.Connection = conn

                        command1.ExecuteNonQuery()

                        chkSignedServiceAgreement.Checked = True
                        txtSignedAgreementReference.Text = "Signed Service Agreement Refer to the Uploaded File"
                    End If

                    ''''''''''''''''''''''''''


                    conn.Close()
                    conn.Dispose()
                    command.Dispose()

                    SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
                    gvUpload.DataSourceID = "SqlDSUpload"
                    gvUpload.DataBind()

                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", txtContractNo.Text + "_" + fileName, txtContractNo.Text)

                    txtFileDescription.Text = ""
                    ddlDocumentType.SelectedIndex = 0
                    lblMessage.Text = "FILE UPLOADED"
                    lblFileUploadCount.Text = "File Upload [" & gvUpload.Rows.Count & "]"

                Else
                    lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
                    Return
                End If
            Else
                lblAlert.Text = "SELECT FILE TO UPLOAD"
            End If
            '  Response.Redirect(Request.Url.AbsoluteUri)

            'lblMessage.Text = ""
            'lblAlert.Text = ""

            'If FileUpload1.HasFile Then

            '    Dim fileName As String = Path.GetFileName(FileUpload1.PostedFile.FileName)
            '    Dim ext As String = Path.GetExtension(fileName)

            '    If ext = ".DOC" Or ext = ".doc" Or ext = ".DOCX" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Or ext = ".XLS" Or ext = ".XLSX" Or ext = ".CSV" Or ext = ".csv" Or ext = ".ppt" Or ext = ".PPT" Or ext = ".pptx" Or ext = ".PPTX" Or ext = ".PDF" Or ext = ".pdf" Or ext = ".txt" Or ext = ".TXT" Or ext = ".jpg" Or ext = ".jpeg" Or ext = ".png" Or ext = ".bmp" Or ext = ".JPG" Or ext = ".JPEG" Or ext = ".PNG" Or ext = ".BMP" Then

            '        ' If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtAccountId.Text + "_CONTRACT_" + txtContractNo.Text + "_" + fileName) Then
            '        If File.Exists(Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName) Then
            '            lblAlert.Text = "FILE ALREADY EXISTS"
            '            Return

            '        End If
            '        'FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtAccountId.Text + "_CONTRACT_" + txtContractNo.Text + "_" + fileName))
            '        FileUpload1.PostedFile.SaveAs((Server.MapPath("~/Uploads/Contract/") + txtContractNo.Text + "_" + fileName))
            '        lblMessage.Text = "FILE UPLOADED"

            '        Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract"))
            '        '   Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountId.Text + "_")) + "*.*")
            '        Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
            '        Dim files As List(Of ListItem) = New List(Of ListItem)

            '        For Each foundFile As FileInfo In filesInDir
            '            Dim fullName As String = foundFile.FullName
            '            files.Add(New ListItem(foundFile.Name))
            '        Next
            '        'Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            '        'For Each filePath As String In filePaths
            '        '    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            '        'Next
            '        gvUpload.DataSource = files
            '        gvUpload.DataBind()
            '    Else
            '        lblAlert.Text = "FILE FORMAT NOT ALLOWED TO UPLOAD"
            '        Return
            '    End If
            'Else
            '    lblAlert.Text = "SELECT FILE TO UPLOAD"
            'End If
            ''  Response.Redirect(Request.Url.AbsoluteUri)
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UploadFile", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
        Dim filePath As String = CType(sender, LinkButton).CommandArgument
        ' filePath = Uri.EscapeDataString(filePath)

        filePath = Server.MapPath("~/Uploads/Contract/") + filePath
  
        Response.ContentType = ContentType
        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
        Response.WriteFile(filePath)
        Response.End()
    End Sub

    Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim filePath As String = CType(sender, LinkButton).CommandArgument
            Session.Add("FileName", filePath)
            filePath = Server.MapPath("~/Uploads/Contract/") + filePath
            'lblMessage.Text = filePath
            'Return
            Session.Add("FilePath", filePath)
            Session.Add("ContractNo", txtContractNo.Text)
            Response.Redirect("Email.aspx?Type=ContractFileUpload")

        Catch ex As Exception
            InsertIntoTblWebEventLog(Session("UserID"), "EmailFile", ex.Message.ToString, txtContractNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    'Protected Sub EmailFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '    ' filePath = Uri.EscapeDataString(filePath)

    '    filePath = Server.MapPath("~/Uploads/Contract/") + filePath
    '    Session.Add("FilePath", filePath)

    '    Response.Redirect("Email.aspx?Type=ContractUpload")

    '    'Response.ContentType = ContentType
    '    'Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '    'Response.WriteFile(filePath)
    '    'Response.End()
    'End Sub

    Protected Sub DeleteFile(ByVal sender As Object, ByVal e As EventArgs)

        If txtFileDelete.Text = False Then
            lblAlert.Text = "FILE DELETION ACCESS RIGHT HAS NOT BEEN PROVIDED"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        Dim filePath As String = CType(sender, LinkButton).CommandArgument

        '     txtFileLink.Text = Uri.EscapeDataString(filePath)
        txtFileLink.Text = filePath
        filePath = Server.MapPath("~/Uploads/Contract/") + filePath

        txtDeleteUploadedFile.Text = filePath
        iframeid.Attributes.Add("src", "about:blank")


        mdlPopupDeleteUploadedFile.Show()

        'File.Delete(filePath)
        ''  Response.Redirect(Request.Url.AbsoluteUri)
        'lblMessage.Text = "FILE DELETED"
        'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/"))
        'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
        'Dim files As List(Of ListItem) = New List(Of ListItem)

        'For Each foundFile As FileInfo In filesInDir
        '    Dim fullName As String = foundFile.FullName
        '    files.Add(New ListItem(foundFile.Name))
        'Next
        ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
        ''For Each filePath As String In filePaths
        ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
        ''Next
        'gvUpload.DataSource = files
        'gvUpload.DataBind()
    End Sub


    Private Sub MakeCommNull()
        lblContractNo2.Text = ""
        lblAccountID2.Text = ""
        lblAccountName.Text = ""
        txtCommMode.Text = ""

        txtSalesCommPercent.Text = "0.00"
        txtSalesCommAmt.Text = "0.00"

        txtTechCommPercent.Text = "0.00"
        txtTechCommAmt.Text = "0.00"


        lblContractNo1.Text = ""
        lblAccountID1.Text = ""
        lblName1.Text = ""

    End Sub

    Private Sub EnablecommControls()
        btncommSave.Enabled = False
        btncommSave.ForeColor = System.Drawing.Color.Gray
        btncommCancel.Enabled = False
        btncommCancel.ForeColor = System.Drawing.Color.Gray

       btncommEdit.Enabled = True
        btncommEdit.ForeColor = System.Drawing.Color.Black

        txtSalesCommPercent.Enabled = False
        txtSalesCommAmt.Enabled = False

        txtTechCommPercent.Enabled = False
        txtTechCommAmt.Enabled = False
    End Sub

    Private Sub DisablecommControls()
        btncommSave.Enabled = True
        btncommSave.ForeColor = System.Drawing.Color.Black
        btncommCancel.Enabled = True
        btncommCancel.ForeColor = System.Drawing.Color.Black

          btncommEdit.Enabled = False
        btncommEdit.ForeColor = System.Drawing.Color.Gray


        txtSalesCommPercent.Enabled = True
        txtSalesCommAmt.Enabled = True

        txtTechCommPercent.Enabled = True
        txtTechCommAmt.Enabled = True

    End Sub

    Protected Sub btnCommCancel_Click(sender As Object, e As EventArgs) Handles btnCommCancel.Click
        MakeCommNull()
        DisablecommControls()

    End Sub

    Protected Sub btnCommEdit_Click(sender As Object, e As EventArgs) Handles btnCommEdit.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If

        DisablecommControls()
        txtCommMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT COMMISSION"
       
    End Sub

    Protected Sub btnCommSave_Click(sender As Object, e As EventArgs) Handles btnCommSave.Click
        Try
            Dim d, d1 As Double
            If String.IsNullOrEmpty(txtSalesCommPercent.Text) = False Then
                If Double.TryParse(txtSalesCommPercent.Text, d) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: SALES COMMISSION PERCENT"
                    Return
                End If
            Else
                txtSalesCommPercent.Text = "0"
            End If

            If String.IsNullOrEmpty(txtSalesCommAmt.Text) = False Then
                If Double.TryParse(txtSalesCommAmt.Text, d) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: SALES COMMISSION AMOUNT"
                    Return
                End If
            Else
                txtSalesCommAmt.Text = "0.00"
            End If


            Dim d2, d3 As Double
            If String.IsNullOrEmpty(txtTechCommPercent.Text) = False Then
                If Double.TryParse(txtTechCommPercent.Text, d2) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: TECHNICIAN COMMISSION PERCENT"
                    Return
                End If
            Else
                txtTechCommPercent.Text = "0"
            End If

            If String.IsNullOrEmpty(txtTechCommAmt.Text) = False Then
                If Double.TryParse(txtTechCommAmt.Text, d3) = False Then
                    ' MessageBox.Message.Alert(Page, "Enter valid Cost Value!!", "str")
                    lblAlert.Text = "ENTER VALID VALUE: TECHNICIAN COMMISSION AMOUNT"
                    Return
                End If
            Else
                txtTechCommAmt.Text = "0.00"
            End If

            If txtRcno.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            '    Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()



            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblCONTRACT where rcno=" & Convert.ToInt32(txtRcno.Text)
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "UPDATE tblcontract SET SalesCommissionPerc = @SalesCommissionPerc,SalesCommissionAmt = @SalesCommissionAmt,TechCommissionPerc = @TechCommissionPerc,TechCommissionAmt = @TechCommissionAmt WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@SalesCommissionPerc", txtSalesCommPercent.Text)
                command.Parameters.AddWithValue("@SalesCommissionAmt", txtSalesCommAmt.Text)
                command.Parameters.AddWithValue("@TechCommissionPerc", txtTechCommPercent.Text)
                command.Parameters.AddWithValue("@TechCommissionAmt", txtTechCommAmt.Text)

                command.Connection = conn

                command.ExecuteNonQuery()
                command.Dispose()
                lblMessage.Text = "EDIT: COMMISSION SUCCESSFULLY UPDATED"
                lblAlert.Text = ""
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()

            EnablecommControls()

            txtCommMode.Text = ""
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnCommSave_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

  
    Protected Sub txtSalesCommPercent_TextChanged(sender As Object, e As EventArgs) Handles txtSalesCommPercent.TextChanged
        txtSalesCommAmt.Text = Convert.ToDecimal(txtSalesCommPercent.Text) * Convert.ToDecimal(txtAgreeVal.Text) * 0.01
    End Sub

    Protected Sub txtTechCommPercent_TextChanged(sender As Object, e As EventArgs) Handles txtTechCommPercent.TextChanged
        txtTechCommAmt.Text = Convert.ToDecimal(txtTechCommPercent.Text) * Convert.ToDecimal(txtAgreeVal.Text) * 0.01

    End Sub

    
  
    Protected Sub btnAddTeam_Click(sender As Object, e As EventArgs) Handles btnAddTeam.Click
        Session("teamfrom") = "contract"

        If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            Session("rcno") = txtRcno.Text
            Session("contractno") = txtContractNo.Text

            If String.IsNullOrEmpty(lblAccountIdContact1.Text) = False Then
                Session("accountid") = lblAccountIdContact1.Text
            End If

            If String.IsNullOrEmpty(lblAccountIdContactLocation1.Text) = False Then
                Session("locationid") = lblAccountIdContactLocation1.Text
            End If


            'Session("contractdate") = txtContractDate.Text
            'Session("contracttype") = ddlContactType.Text
            'Session("client") = txtClient.Text
            'Session("custname") = txtCustName.Text
            'Session("accountid") = txtAccountId.Text
            'Session("contact") = txtContactPerson.Text
            'Session("servstart") = txtServStart.Text
            'Session("servend") = txtServEnd.Text
            'Session("companygrp") = ddlCompanyGrp.Text
            'Session("billingfreq") = ddlBillingFreq.Text
            'Session("billingamount") = txtBillingAmount.Text
            'Session("agreevalue") = txtAgreeVal.Text
            'Session("ValPerMnth") = txtValPerMnth.Text

            'Session("technician") = txtServiceBy.Text
            'Session("timein") = txtServTimeIn.Text
            'Session("timeout") = txtServTimeOut.Text

            'txt.Text = SQLDSContract.SelectCommand
            Session("gridsqlcontract") = txt.Text

            'Session("computationmethod") = rbtComputationMethod.SelectedIndex
        End If
        Response.Redirect("Master_Team.aspx")
    End Sub

    Protected Sub ddlContractGrp_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlContractGrp.SelectedIndexChanged

        FindCategoryId()
        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
    End Sub

    Private Sub FindCategoryId()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Category, IncludeinPortfolio, BackDateContract,BackDateContractTermination FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtCategoryID.Text = dt.Rows(0)("Category").ToString()
                txtIncludeinPortfolio.Text = dt.Rows(0)("IncludeinPortfolio").ToString()

                txtBackDateContractSetup.Text = dt.Rows(0)("BackDateContract").ToString()
                txtBackDateContractTerminationSetup.Text = dt.Rows(0)("BackDateContractTermination").ToString()
            End If

            If txtIncludeinPortfolio.Text = "1" Then
                txtIncludeinPortfolio.Text = "True"
                'lblAlert.Text = "True"
            Else
                txtIncludeinPortfolio.Text = "False"
                'lblAlert.Text = "False"
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            updPanelContract1.Update()

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
            'ddlContractGrp.Attributes.Add("onchange", "calculateportfolio();")
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindCategoryId", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub FindBackDateContractTermination()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Category, IncludeinPortfolio, BackDateContract,BackDateContractTermination FROM tblcontractgroup where contractgroup = '" & ddlContractGrp.Text & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                'txtCategoryID.Text = dt.Rows(0)("Category").ToString()
                'txtIncludeinPortfolio.Text = dt.Rows(0)("IncludeinPortfolio").ToString()

                txtBackDateContractSetup.Text = dt.Rows(0)("BackDateContract").ToString()
                txtBackDateContractTerminationSetup.Text = dt.Rows(0)("BackDateContractTermination").ToString()
            End If

            If txtIncludeinPortfolio.Text = "1" Then
                txtIncludeinPortfolio.Text = "True"
                'lblAlert.Text = "True"
            Else
                txtIncludeinPortfolio.Text = "False"
                'lblAlert.Text = "False"
            End If

            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            updPanelContract1.Update()

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> calculateportfolio();</Script>", False)
            'ddlContractGrp.Attributes.Add("onchange", "calculateportfolio();")
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindCategoryId", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub
    Protected Sub btnPrintSchedule_Click(sender As Object, e As EventArgs) Handles btnPrintSchedule.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "Update tblContract set PrintingRemarks =@PrintingRemarks"
            qry = qry + " where Rcno = @Rcno"

            command.CommandText = qry
            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text.ToUpper)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            End If

            command.Connection = conn

            command.ExecuteNonQuery()


            '  MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            'lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'lblAlert.Text = ""


            conn.Close()
            conn.Dispose()
            command.Dispose()
            ''''''''''''''''''''''''''''''

            If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                Session("contractno") = txtContractNo.Text

                If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                    Session("searchstatus") = txtSearch1Status.Text
                End If

                If String.IsNullOrEmpty(txtServiceAddressSearch.Text) = False Then
                    Session("searchteam") = txtServiceAddressSearch.Text
                End If

                'If String.IsNullOrEmpty(txtInchargeSearch.Text) = False Then
                '    Session("searchincharge") = txtInchargeSearch.Text
                'End If

                If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                    Session("searchaccountid") = txtAccountIdSearch.Text
                End If

                If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                    Session("searchclientname") = txtClientNameSearch.Text
                End If

                ''''''''''''''''''''''''''''''

                Session("gridsqlcontract") = txt.Text
                Session("rcno") = txtRcno.Text

            End If


            Session("contractdetailfrom") = "contract"
            Response.Redirect("RV_ContractServiceSchedule.aspx")
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintSchedule_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ImageButton5_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton5.Click
        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub btnCloseNotesTemplateGrid_Click(sender As Object, e As EventArgs) Handles btnCloseNotesTemplateGrid.Click
        ModalPopupNotestemplate.Show()
    End Sub

    Protected Sub btnSelectNotesTemplateGrid_Click(sender As Object, e As EventArgs) Handles btnSelectNotesTemplateGrid.Click
        Dim totalRows As Long
        totalRows = 0
        Dim strContent As String
        strContent = ""

        For rowIndex1 As Integer = 0 To grvNotesTemplate.Rows.Count - 1
            Dim TextBoxchkSelect1 As CheckBox = CType(grvNotesTemplate.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
            If (TextBoxchkSelect1.Checked = True) Then
                totalRows = totalRows + 1
            End If
        Next rowIndex1



        If totalRows = 0 Then
            'mdlImportServices.Show()
            Dim message As String = "alert('PLEASE SELECT A RECORD')"
            ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
            'lblAlert.Text = "PLEASE SELECT A RECORD"
            'lblAlert.Focus()
            'updPnlMsg.Update()

            Exit Sub
        End If

        'Start: Billing Details

        'Start: From tblBillingDetailItem

        Dim rowselected As Integer
        rowselected = 0

        For rowIndex As Integer = 0 To grvNotesTemplate.Rows.Count - 1
            'string txSpareId = row.ItemArray[0] as string;
            Dim TextBoxchkSelect As CheckBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)

            If (TextBoxchkSelect.Checked = True) Then

                Dim qry As String
                qry = ""

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text
                ''Header
                rowselected = rowselected + 1

                Dim NoteIdNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtNoteIdGV"), TextBox)
                Dim ContentNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtContentGV"), TextBox)
                Dim ModuleNT As TextBox = CType(grvNotesTemplate.Rows(rowIndex).Cells(0).FindControl("txtModuleGV"), TextBox)

                If rowselected = 1 Then
                    strContent = ContentNT.Text
                Else
                    strContent = strContent + "; " + ContentNT.Text
                End If
            End If


        Next

        txtNotesTemplate.Text = strContent
        ModalPopupNotestemplate.Show()
        'btnSave.Enabled = True
        'updpnlBillingDetails.Update()
        'updPanelSave.Update()
        'updPnlBillingRecs.Update()
    End Sub

    Protected Sub PreviewFile(ByVal sender As Object, ByVal e As EventArgs)
        Dim filePath As String = CType(sender, LinkButton).CommandArgument
        Dim ext As String = Path.GetExtension(filePath)
        filePath = Uri.EscapeDataString(filePath)
        filePath = "Uploads/Contract/" + filePath
        ext = ext.ToLower
   
        '  filePath = Server.MapPath("~/Uploads/") + filePath
        '    frmWord.Attributes["src"] = http://localhost/MyApp/resume.doc;
        ' iframeid.Attributes.Add("src", Server.HtmlDecode("D:\1_CWBInfotech\A_Sitapest\Program\Sitapest\Uploads\10000145_photo (1).JPG"))
        If ext = ".doc" Or ext = ".docx" Or ext = ".xls" Or ext = ".xlsx" Then
            Dim strFilePath As String = Server.MapPath("Uploads\Contract\")
            Dim strFile As String = CType(sender, LinkButton).CommandArgument
            Dim File As String() = strFile.Split("."c)
            Dim strExtension As String = ext
            Dim strUrl As String = "http://" + Request.Url.Authority + "/WordinIFrame/ConvertedLocation/"

            Dim Filename As String = strFilePath + strFile.Split("."c)(0) & Convert.ToString(".html")

            If System.IO.File.Exists(Filename) Then
                System.IO.File.Delete(Filename)
            End If

            If ext = ".doc" Or ext = ".docx" Then
                ConvertHTMLFromWord(strFilePath & strFile, strFilePath + "A" + strFile.Split("."c)(0) & Convert.ToString(".html"))

            ElseIf ext = ".xls" Or ext = ".xlsx" Then
                ConvertHtmlFromExcel(strFilePath + strFile, strFilePath + "A" + strFile.Split("."c)(0) + ".html")
            End If

            iframeid.Attributes("src") = "Uploads/Contract/A" + strFile.Split("."c)(0) & Convert.ToString(".html")

        Else

         
            iframeid.Attributes.Add("src", filePath)

        End If
        '  iframeid.Attributes.Add("src", "https://docs.google.com/viewer?url={D:/1_CWBInfotech/A_Sitapest/Program/Sitapest/Uploads/10000145_ActualVsForecast_Format1.pdf?pid=explorer&efh=false&a=v&chrome=false&embedded=true")

    End Sub

    Public Sub ConvertHTMLFromWord(Source As Object, Target As Object)
        If Word Is Nothing Then
            ' Check for the prior instance of the OfficeWord Object
            Word = New Microsoft.Office.Interop.Word.ApplicationClass()
        End If

        Try
            ' To suppress window display the following code will help
            Word.Visible = False
            Word.Application.Visible = False
            Word.WindowState = Microsoft.Office.Interop.Word.WdWindowState.wdWindowStateMinimize



            Word.Documents.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Word.WdSaveFormat.wdFormatHTML

            Word.ActiveDocument.SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS
            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
            Exit Sub
        Finally
            If Word IsNot Nothing Then
                Word.Documents.Close(Unknown, Unknown, Unknown)
                Word.Quit(Unknown, Unknown, Unknown)
            End If

        End Try
    End Sub

    Public Sub ConvertHtmlFromExcel(Source As String, Target As String)
        If Excel Is Nothing Then
            Excel = New Microsoft.Office.Interop.Excel.ApplicationClass()
        End If

        Try
            Excel.Visible = False
            Excel.Application.Visible = False
            Excel.WindowState = Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized

            Excel.Workbooks.Open(Source, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, _
                Unknown, Unknown, Unknown)

            Dim format As Object = Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml

            Excel.Workbooks(1).SaveAs(Target, format, Unknown, Unknown, Unknown, Unknown, _
                Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, Unknown, Unknown, Unknown, Unknown, Unknown)

            Status = StatusType.SUCCESS

            Message = Status.ToString()
        Catch e As Exception
            Message = "Error :" + e.Message.ToString().Trim()
            Exit Sub
        Finally
            If Excel IsNot Nothing Then
                Excel.Workbooks.Close()
                Excel.Quit()
            End If

        End Try
    End Sub

    Protected Sub gvLocation_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvLocation.PageIndexChanging

        GridView1.PageIndex = e.NewPageIndex
        SqlDSCompanyLocation.DataBind()
        gvLocation.DataBind()

    End Sub

    Protected Sub btnUpdateNotes_Click(sender As Object, e As EventArgs) Handles btnUpdateNotes.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "Update tblContract set PrintingRemarks =@PrintingRemarks"
            qry = qry + " where Rcno = @Rcno"

            command.CommandText = qry
            command.Parameters.Clear()

            If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text.ToUpper)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then

                command.Parameters.AddWithValue("@PrintingRemarks", txtNotesTemplate.Text)
                command.Parameters.AddWithValue("@Rcno", txtRcno.Text)

            End If

            command.Connection = conn

            command.ExecuteNonQuery()


            '  MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
            'lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'lblAlert.Text = ""


            conn.Close()
            conn.Dispose()
            command.Dispose()
            ModalPopupNotestemplate.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnUpdateNotes_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub OnRowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        Try
            If e.Row.RowType = DataControlRowType.DataRow Then
                e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
                'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
                'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
                'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

                e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
                e.Row.ToolTip = "Click to select this row."

                If txtDisplayRecordsLocationwise.Text = "N" Then
                    'If ConfigurationManager.AppSettings("SMSEnabled").ToString() = "No" Then
                    e.Row.Cells(8).Visible = False
                    GridView1.HeaderRow.Cells(8).Visible = False

                ElseIf txtDisplayRecordsLocationwise.Text = "Y" Then
                    e.Row.Cells(8).Visible = True
                    GridView1.HeaderRow.Cells(8).Visible = True
                End If
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "Gridview1 OnRowDataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub OnSelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged
        'For Each row As GridViewRow In GridView1.Rows
        '    If row.RowIndex = GridView1.SelectedIndex Then
        '        row.BackColor = ColorTranslator.FromHtml("#738A9C")
        '        row.ToolTip = String.Empty
        '    Else
        '        row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
        '        row.ToolTip = "Click to select this row."
        '    End If
        'Next

        For Each row As GridViewRow In GridView1.Rows
            If row.RowIndex = GridView1.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next

    End Sub

    Protected Sub OnRowDataBound2(sender As Object, e As GridViewRowEventArgs) Handles grvContractDetail.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(grvContractDetail, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChanged2(sender As Object, e As EventArgs) Handles grvContractDetail.SelectedIndexChanged
        For Each row As GridViewRow In grvContractDetail.Rows

            If row.RowIndex = grvContractDetail.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#ffffff")
                row.ToolTip = "Click to select this row."
            End If

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                'If row.RowIndex = grvContractDetail.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = grvContractDetail.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Else
                If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                    'If row.RowIndex = txtSelectedIndex.Text Then
                    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                    '    row.ToolTip = String.Empty
                    '    txtSelectedIndex.Text = ""
                    'Else
                    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                    '    row.ToolTip = "Click to select this row."
                    'End If

                    If row.RowIndex = txtSelectedIndex.Text Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                        txtSelectedIndex.Text = ""
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If

                End If

                End If

        Next
    End Sub

    Protected Sub gvNotesMaster_PageIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.PageIndexChanged

    End Sub


    Private Sub DisableNotesControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddRateSchedule.Enabled = False
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnableNotesControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddRateSchedule.Enabled = True
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakeNotesNull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub

    Public NotesRcno As String

    Protected Sub gvNotesMaster_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvNotesMaster.PageIndexChanging
        gvNotesMaster.PageIndex = e.NewPageIndex

        SqlDSNotesMaster.SelectCommand = "SELECT * From tblnotes where keyfield='" + txtContractNo.Text + "'"

        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()
    End Sub

    Protected Sub gvNotesMaster_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        Try
            MakeNotesNull()

            Dim editindex As Integer = gvNotesMaster.SelectedIndex
            rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            txtNotesRcNo.Text = rcno.ToString()
            txtNotes.Text = Server.HtmlDecode(gvNotesMaster.SelectedRow.Cells(2).Text)
            EnableNotesControls()

            btnEditRateSchedule.Enabled = True
            btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
            btnDeleteRateSchedule.Enabled = True
            btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black


        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvNotesMaster_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCancelNotesMaster_Click(sender As Object, e As EventArgs) Handles btnCancelNotesMaster.Click
        MakeNotesNull()
        EnableNotesControls()
        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnAddNotesMaster_Click(sender As Object, e As EventArgs) Handles btnAddNotesMaster.Click
        DisableNotesControls()

        MakeNotesNull()
        lblMessage.Text = "ACTION: ADD NOTES"


        txtNotesMode.Text = "Add"
        txtNotes.Focus()
    End Sub

    Protected Sub btnSaveNotesMaster_Click(sender As Object, e As EventArgs) Handles btnSaveNotesMaster.Click
        If String.IsNullOrEmpty(txtNotes.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER NOTES"
            Return
        End If

        If txtNotesMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and notes=@notes"
                command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "NOTES ALREADY EXISTS"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblnotes(KeyModule,SubKeyModule,KeyField,SubKeyField,StaffID,CreatedOn,ContactType,CustCode,CustName,ContactPerson,Notes,Internal,Printable,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@KeyModule,@SubKeyModule,@KeyField,@SubKeyField,@StaffID,@CreatedOn,@ContactType,@CustCode,@CustName,@ContactPerson,@Notes,@Internal,@Printable,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@KeyModule", "CONTRACT")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text.ToUpper)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                        command.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountId.Text)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text.ToUpper)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))



                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@KeyModule", "CONTRACT")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", lblNotesKeyField.Text)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                        command.Parameters.AddWithValue("@ContactType", ddlContactType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountId.Text)
                        command.Parameters.AddWithValue("@CustName", txtCustName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))


                    End If

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: NOTES SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSaveNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

        ElseIf txtNotesMode.Text = "Edit" Then
            If txtNotesRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "NOTES ALREADY EXISTS"



                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblnotes where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblnotes SET notes=@notes,StaffID = @StaffID,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text.ToUpper)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                    End If
                    command1.Dispose()
                End If


                txtNotesMode.Text = ""

                conn.Close()
                conn.Dispose()

                command2.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSaveNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

        End If
        SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtContractNo.Text + "'"
        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()

        txtNotesMode.Text = ""

    End Sub

    Protected Sub btnEditNotesMaster_Click(sender As Object, e As EventArgs) Handles btnEditNotesMaster.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableNotesControls()
        txtNotesMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT NOTES"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub btnDeleteNotesMaster_Click(sender As Object, e As EventArgs) Handles btnDeleteNotesMaster.Click
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE NOTES"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDeleteNotesMaster_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableNotesControls()

            SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtContractNo.Text + "'"
            SqlDSNotesMaster.DataBind()

            gvNotesMaster.DataBind()
            MakeNotesNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub


    Protected Sub OnRowDataBoundgNotes(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgNotes(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        For Each row As GridViewRow In gvNotesMaster.Rows
            'If row.RowIndex = gvNotesMaster.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = gvNotesMaster.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub


    Protected Sub OnRowDataBoundgTeam(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvTeam, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgTeam(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvTeam.Rows
            If row.RowIndex = gvTeam.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

   

   

    Protected Sub OnRowDataBoundgLoc(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocation, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgLoc(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        For Each row As GridViewRow In gvLocation.Rows
            If row.RowIndex = gvLocation.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub


    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        Try
            File.Delete(txtDeleteUploadedFile.Text)
            '  Response.Redirect(Request.Url.AbsoluteUri)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblfileupload where filenamelink='" + txtFileLink.Text + "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String = "delete from tblfileupload where filenamelink='" + txtFileLink.Text + "'"

                command.CommandText = qry
                command.Connection = conn
                command.ExecuteNonQuery()

                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "FILEUPLOAD", txtFileLink.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", "", txtContractNo.Text)
            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            lblMessage.Text = "FILE DELETED"

            SqlDSUpload.SelectCommand = "select * from tblfileupload where fileref = '" + txtContractNo.Text + "'"
            gvUpload.DataSourceID = "SqlDSUpload"
            gvUpload.DataBind()

            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Customer/"))
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountID.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
            'File.Delete(txtDeleteUploadedFile.Text)
            ''  Response.Redirect(Request.Url.AbsoluteUri)
            'lblMessage.Text = "FILE DELETED"
            'Dim myDir As New DirectoryInfo(Server.MapPath("~/Uploads/Contract/"))
            ''  Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtAccountId.Text + "_")) + "*.*")
            'Dim filesInDir As FileInfo() = myDir.GetFiles((Convert.ToString(txtContractNo.Text + "_")) + "*.*")
            'Dim files As List(Of ListItem) = New List(Of ListItem)

            'For Each foundFile As FileInfo In filesInDir
            '    Dim fullName As String = foundFile.FullName
            '    files.Add(New ListItem(foundFile.Name))
            'Next
            ''Dim filePaths() As String = Directory.GetFiles(Server.MapPath("~/Uploads/") + txtAccountID.Text + "_*")
            ''For Each filePath As String In filePaths
            ''    files.Add(New ListItem(Path.GetFileName(filePath), filePath))
            ''Next
            'gvUpload.DataSource = files
            'gvUpload.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnConfirmDelete_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)

        If GridSelected = "SQLDSContract" Then
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SQLDSContract"
        ElseIf GridSelected = "SQLDSContractClientId" Then
            SQLDSContractClientId.SelectCommand = txt.Text
            SQLDSContractClientId.DataBind()
            GridView1.DataSourceID = "SQLDSContractClientId"
        ElseIf GridSelected = "SQLDSContractNo" Then
            ''SqlDataSource1.SelectCommand = txt.Text
            SqlDSContractNo.DataBind()
            GridView1.DataSourceID = "SQLDSContractNo"
        Else
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataSourceID = "SQLDSContract"
        End If

        GridView1.DataBind()
    End Sub

    Protected Sub btnClient0_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient0.Click

        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text

        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub btnSchSave_Click(sender As Object, e As EventArgs)

    End Sub

    Protected Sub btnPONoEditSave_Click(sender As Object, e As EventArgs) Handles btnPONoEditSave.Click
        If txtOurRef.Text = txtOurReferenceEdit.Text And txtYourRef.Text = txtYourReferenceEdit.Text And txtPONo.Text = txtPONoEdit.Text Then
            lblAlertSchDate.Text = "NO CHANGES MADE"
            mdlPopupPONoEdit.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET OurReference = @OurRef, YourReference = @YourRef, PONO=@PONO,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            command.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            command.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn

            command.ExecuteNonQuery()
            command.Dispose()

            '''''''''''''''''''''''''''''''''''
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET PONO=@PONO,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn  where ContractNo ='" & txtContractNo.Text & "' and Status ='O'"
            command1.Parameters.Clear()

            'command1.Parameters.AddWithValue("@OurRef", txtOurReferenceEdit.Text)
            'command1.Parameters.AddWithValue("@YourRef", txtYourReferenceEdit.Text)
            command1.Parameters.AddWithValue("@PONO", txtPONoEdit.Text)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command1.Connection = conn

            command1.ExecuteNonQuery()

            command1.Dispose()


            '''''''''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            'command.Dispose()

            txtOurRef.Text = txtOurReferenceEdit.Text
            txtYourRef.Text = txtYourReferenceEdit.Text
            txtPONo.Text = txtPONoEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITPONO", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupPONoEdit.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPONoEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient1_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient1.Click
        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text

        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub btnClient2_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient2.Click
        txtOurReferenceEdit.Text = txtOurRef.Text
        txtYourReferenceEdit.Text = txtYourRef.Text
        txtPONoEdit.Text = txtPONo.Text

        mdlPopupPONoEdit.Show()
    End Sub

    Protected Sub txtAccountId_TextChanged(sender As Object, e As EventArgs) Handles txtAccountId.TextChanged
        If Len(txtAccountId.Text) > 2 Then
            btnClient_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub txtAccountIdSearch_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdSearch.TextChanged
        If Len(txtAccountIdSearch.Text) > 2 Then
            btnQuickSearch_Click(sender, e)
            'ImageButton2_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub

    Protected Sub btnZeroValueYes_Click(sender As Object, e As EventArgs) Handles btnZeroValueYes.Click
        SaveContract()
    End Sub


    Private Sub InsertCommissionNotes()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            '''''''''''''''''''''''
            Dim commandContract As MySqlCommand = New MySqlCommand

            commandContract.CommandType = CommandType.Text

            commandContract.CommandText = "SELECT SalesCommissionPerc,SalesCommissionAmt,TechCommissionPerc, TechCommissionAmt  FROM tblCONTRACT where rcno=" & Convert.ToInt32(txtRcnoRenew.Text.Trim)
            commandContract.Connection = conn

            Dim dr As MySqlDataReader = commandContract.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                Dim commandUpdContract As MySqlCommand = New MySqlCommand

                commandUpdContract.CommandType = CommandType.Text
                Dim qry As String = "UPDATE tblcontract SET SalesCommissionPerc = @SalesCommissionPerc,SalesCommissionAmt = @SalesCommissionAmt,TechCommissionPerc = @TechCommissionPerc,TechCommissionAmt = @TechCommissionAmt WHERE  rcno=" & Convert.ToInt32(txtRcno.Text)

                commandUpdContract.CommandText = qry
                commandUpdContract.Parameters.Clear()

                commandUpdContract.Parameters.AddWithValue("@SalesCommissionPerc", dt.Rows(0)("SalesCommissionPerc").ToString)
                commandUpdContract.Parameters.AddWithValue("@SalesCommissionAmt", dt.Rows(0)("SalesCommissionAmt").ToString)
                commandUpdContract.Parameters.AddWithValue("@TechCommissionPerc", dt.Rows(0)("TechCommissionPerc").ToString)
                commandUpdContract.Parameters.AddWithValue("@TechCommissionAmt", dt.Rows(0)("TechCommissionAmt").ToString)

                commandUpdContract.Connection = conn

                commandUpdContract.ExecuteNonQuery()
                commandUpdContract.Dispose()
            End If


            conn.Close()
            conn.Dispose()
            commandContract.Dispose()
            dt.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION InsertCommissionNotes", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Public Sub InsertIntoTblWebEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception
            Exit Sub
        End Try
    End Sub

    Private Sub FindLocations()
        Try
            Dim lContractGroup As String
            lContractGroup = ""
            Dim sqlstr1 As String
            sqlstr1 = ""

            lContractGroup = Left(ddlContractGrp.Text, 2)
            If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblcompanylocation  where Accountid = '" & txtAccountId.Text & "' and ContractGroup like '" & lContractGroup & "%'"
                SqlDSCompanyLocation.SelectCommand = sqlstr1
                gvLocation.DataSourceID = "SqlDSCompanyLocation"
            ElseIf ddlContactType.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                sqlstr1 = "Select LocationID, ServiceName, Address1, AddBuilding, AddStreet, AddCity, AddCountry, AddPostal, LocateGRP, ContactPerson, ContactPerson2, Contact1Position, Contact2Position, Telephone, Telephone2, Fax, Contact2Fax, Contact2Tel, Contact2Tel2, Mobile, Contact2Mobile,  Email, Contact2Email, ServiceLocationGroup, Location, ContractGroup from tblpersonlocation where Accountid = '" & txtAccountId.Text & "' and ContractGroup  like '" & lContractGroup & "%'"
                SqlDSPersonLocation.SelectCommand = sqlstr1
                gvLocation.DataSourceID = "SqlDSPersonLocation"
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocations", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub btnClient3_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient3.Click
        mdlPopupNotes.Show()
    End Sub

    Protected Sub btnNoteEditSave_Click(sender As Object, e As EventArgs) Handles btnNoteEditSave.Click
        If txtNotes.Text = txtNotesEdit.Text Then
            lblAlertNote.Text = "NO CHANGES MADE"
            mdlPopupNotes.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-BEFORE UPDATE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtContractNotes.Text, txtRcno.Text)

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Notes = @Notes, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Notes", txtNotesEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtContractNotes.Text = txtNotesEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-AFTER UPDATE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtNotesEdit.Text, txtRcno.Text)

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupNotes.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnNoteEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnZeroValueNo_Click(sender As Object, e As EventArgs) Handles btnZeroValueNo.Click
        btnSave.Enabled = True
        btnSave.ForeColor = System.Drawing.Color.Black
        mdlPopupZeroValue.Hide()
        txtAgreeVal.Focus()
    End Sub

    Protected Sub txtContractnoSearch_TextChanged(sender As Object, e As EventArgs) Handles txtContractnoSearch.TextChanged
        If Len(txtContractnoSearch.Text) > 3 Then
            btnQuickSearch_Click(sender, e)
        End If
    End Sub

    Protected Sub btnSvcSaveSchedule_Click(sender As Object, e As EventArgs) Handles btnSvcSaveSchedule.Click
        'btnSvcSave_Click(sender, e)

        If txtDuplicateFreq.Text = "Y" Then
            lblAlert.Text = "DUPLICATE FREQUENCY HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            Exit Sub
        End If

        If txtDuplicateTarget.Text = "Y" Then
            lblAlert.Text = "DUPLICATE TARGET HAS BEEN SELECTED"
            btnSvcSave.Enabled = True
            Exit Sub
        End If


        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
            ConvertUpperService()
        End If

        LabelServiceID.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

        Label17Schdl.Text = "Contract Group '" + ddlContractGrp.Text + "' and Service ID '" + txtServiceId.Text + "' do not match."

        If txtServiceId.Text <> ddlContractGrp.Text Then
            'mdlPopupServiceID.Show()
            mdlPopupServiceIDSchdl.Show()
        Else
            svcSave()

        End If

        btnSvcSave.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black
    End Sub


    Public Sub FindLocation()
        Try
            Dim IsLock As String
            IsLock = ""

            Dim connLocation As MySqlConnection = New MySqlConnection()

            connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLocation.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT LocationID, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
            command1.Connection = connLocation

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtLocation.Text = dt.Rows(0)("LocationID").ToString
            End If

            connLocation.Close()
            connLocation.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocation", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Public Sub FindLastServiceDate()
        Try
          
            Dim connLastServiceDate As MySqlConnection = New MySqlConnection()

            connLastServiceDate.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLastServiceDate.Open()

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT Servicedate FROM tblServiceRecord where Status in ('O','H','P') and ContractNo ='" & txtContractNo.Text & "' order by rcno desc limit 1"
            command1.Connection = connLastServiceDate

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'Convert.ToDateTime(dt.Rows(0)("WarrantyEnd")).Value.ToString("dd/MM/yyyy") 
            If dt.Rows.Count > 0 Then
                txtLastServiceDate.Text = Convert.ToDateTime(dt.Rows(0)("Servicedate")).ToString("dd/MM/yyyy")
            End If
            'Convert.ToDateTime(command1.Parameters("@pr_ContractDate").Value).ToString("dd/MM/yyyy") : End If
            connLastServiceDate.Close()
            connLastServiceDate.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()


            ''''''''
            Dim connLastBillamount As MySqlConnection = New MySqlConnection()

            connLastBillamount.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            connLastBillamount.Open()

            Dim command2 As MySqlCommand = New MySqlCommand

            command2.CommandType = CommandType.Text
            command2.CommandText = "SELECT sum(b.ValueBase) as LastBillamount FROM tblSales a, tblSalesDetail b where a.InvoiceNumber =b.InvoiceNumber and a.PostStatus ='P' and b.CostCode ='" & txtContractNo.Text & "' group by b.Invoicenumber order by a.Invoicenumber desc limit 1"
            command2.Connection = connLastBillamount

            Dim drLastBillamount As MySqlDataReader = command2.ExecuteReader()
            Dim dtLastBillamount As New DataTable
            dtLastBillamount.Load(drLastBillamount)

            If dtLastBillamount.Rows.Count > 0 Then
                txtLastBillAmount.Text = dtLastBillamount.Rows(0)("LastBillamount").ToString()
            End If

            connLastBillamount.Close()
            connLastBillamount.Dispose()
            command2.Dispose()
            dtLastBillamount.Dispose()
            drLastBillamount.Close()


            ''''
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FindLocation", ex.Message.ToString, txtContractNo.Text)
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'Exit Function
        End Try
    End Sub
    Protected Sub btnRecalculate_Click(sender As Object, e As EventArgs) Handles btnRecalculate.Click
        Try
            CType(Me.Master, MasterPage).UpdateContract(txtContractNo.Text)
            PopulateRecord()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnRecalculate_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient4_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient4.Click
        mdlPopupBillingFrequency.Show()
    End Sub

    Protected Sub btnBillingFrequencyEditSave_Click(sender As Object, e As EventArgs) Handles btnBillingFrequencyEditSave.Click
        If ddlBillingFreq.Text = ddlBillingFreqEdit.Text Then
            lblAlertBillingFrequency.Text = "NO CHANGES MADE"
            mdlPopupBillingFrequency.Show()
            Return

        End If

        'Dim t As DateTime
        'Dim d As Double
        'Dim dt As Date
        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET BillingFrequency = @billingfreq, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@billingfreq", ddlBillingFreqEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlBillingFreq.Text = ddlBillingFreqEdit.Text


            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGFREQ", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupBillingFrequency.Hide()
            'mdlPopupNotes.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnBillingFrequencyEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnClient5_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient5.Click
        mdlPopupScheduler.Show()
    End Sub

    Protected Sub Button1_Click(sender As Object, e As EventArgs)

    End Sub

    Protected Sub btnSchedulerEditSave_Click(sender As Object, e As EventArgs) Handles btnSchedulerEditSave.Click
        If ddlScheduler.Text = ddlSchedulerEdit.Text Then
            lblAlertScheduler.Text = "NO CHANGES MADE"
            mdlPopupScheduler.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Scheduler = @Scheduler, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Scheduler", ddlSchedulerEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET Scheduler = @Scheduler, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and ((Status = 'O') or (Status = 'H'))"
            command1.Parameters.Clear()

            command1.Parameters.AddWithValue("@Scheduler", ddlSchedulerEdit.Text)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlScheduler.Text = ddlSchedulerEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITSCHEDULER", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSchedulerEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub txtClientNameSearch_TextChanged(sender As Object, e As EventArgs) Handles txtClientNameSearch.TextChanged
        If Len(txtClientNameSearch.Text) > 4 Then
            btnQuickSearch_Click(sender, e)
        End If
    End Sub

    Protected Sub btnClient6_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient6.Click
        mdlPopupSalesman.Show()
    End Sub

    Protected Sub btnSalesmanEditSave_Click(sender As Object, e As EventArgs) Handles btnSalesmanEditSave.Click
        If ddlSalesman.Text = ddlSalesmanEdit.Text Then
            lblAlertSalesman.Text = "NO CHANGES MADE"
            mdlPopupSalesman.Show()
            Return
        End If


        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Salesman = @Salesman, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Salesman", ddlSalesmanEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()


            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlSalesman.Text = ddlSalesmanEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITSALESMAN", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            'GridView1.DataSourceID = "SqlDataSource1"
            mdlPopupSalesman.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSalesmanEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnCompanyGroupEditSave_Click(sender As Object, e As EventArgs) Handles btnCompanyGroupEditSave.Click
        If ddlCompanyGrp.Text = ddlCompanyGroupEdit.Text Then
            lblAlertScheduler.Text = "NO CHANGES MADE"
            mdlPopupScheduler.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET CompanyGroup = @CompanyGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGroupEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''

            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text
            command1.CommandText = "UPDATE tblServiceRecord SET CompanyGroup = @CompanyGroup, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where ContractNo = '" & txtContractNo.Text & "' and ((Status = 'O') or (Status = 'H'))"
            command1.Parameters.Clear()

            command1.Parameters.AddWithValue("@CompanyGroup", ddlCompanyGroupEdit.Text)
            command1.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command1.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command1.Connection = conn

            command1.ExecuteNonQuery()
            command1.Dispose()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            ddlCompanyGrp.Text = ddlCompanyGroupEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITCOMPANYGROUP", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            mdlPopupCompanyGroup.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnCompanyGroupEditSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnClient7_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient7.Click
        mdlPopupCompanyGroup.Show()
    End Sub

    Protected Sub txtContractNotes_TextChanged(sender As Object, e As EventArgs) Handles txtContractNotes.TextChanged

    End Sub

    Protected Sub btnClient8_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient8.Click
        mdlPopupAgreeValue.Show()
    End Sub

    Protected Sub btnAgreeValueSave_Click(sender As Object, e As EventArgs) Handles btnAgreeValueSave.Click
        If txtAgreeVal.Text = txtAgreeValueEdit.Text Then
            'lblAlertScheduler.Text = "NO CHANGES MADE"

            'Return
            mdlPopupAgreeValue.Hide()
            mdlEditAgreeValueSaveNoChange.Show()
            'mdlPopupAgreeValue.Show()
        Else
            mdlEditAgreeValueSave.Show()
        End If

        Try

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'Dim command As MySqlCommand = New MySqlCommand

            ''command.CommandType = CommandType.Text
            ''command.CommandText = "UPDATE tblContract SET AgreeValue = @AgreeValue, ServiceAmt = @ServiceAmt, AmtBalance=@AmtBalance, PortFolioValue=@PortFolioValue,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno= @Rcno"

            'command.CommandType = CommandType.StoredProcedure
            'command.CommandText = "UpdateAgreeValue"

            'command.Parameters.Clear()

            'command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            'command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            'command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            'command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueEdit.Text)
            'command.Parameters.AddWithValue("@pr_ValuePerMonth", txtValPerMnth.Text)

            'command.Parameters.AddWithValue("@pr_ServiceAmt", txtServiceAmt.Text)
            'command.Parameters.AddWithValue("@pr_AmtBalance", txtServiceAmtBal.Text)
            'command.Parameters.AddWithValue("@pr_PortFolioValue", txtPortfolioValueEdit.Text)
            'command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            'command.Connection = conn
            'command.ExecuteScalar()

            ' ''''''''''''''''''''''
            'conn.Close()
            'conn.Dispose()
            'command.Dispose()

            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

            'txtAgreeVal.Text = txtAgreeValueEdit.Text
            'txtPortfolioValue.Text = txtPortfolioValueEdit.Text
            'txtServiceAmt.Text = txtAgreeValueEdit.Text
            'txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

            'SQLDSContract.SelectCommand = txt.Text
            'SQLDSContract.DataBind()
            'GridView1.DataBind()

            'mdlPopupAgreeValue.Hide()

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnAgreeValueSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Private Sub UpdateAgreeValue()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text
            'command.CommandText = "UPDATE tblContract SET AgreeValue = @AgreeValue, ServiceAmt = @ServiceAmt, AmtBalance=@AmtBalance, PortFolioValue=@PortFolioValue,  LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno= @Rcno"

            command.CommandType = CommandType.StoredProcedure
            command.CommandText = "UpdateAgreeValue"

            command.Parameters.Clear()

            command.Parameters.AddWithValue("@pr_Rcno", Convert.ToInt32(txtRcno.Text))
            command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text)
            command.Parameters.AddWithValue("@pr_OriginalAgreeValue", txtAgreeVal.Text)
            command.Parameters.AddWithValue("@pr_AgreeValue", txtAgreeValueEdit.Text)
            command.Parameters.AddWithValue("@pr_ValuePerMonth", txtValPerMnth.Text)

            command.Parameters.AddWithValue("@pr_ServiceAmt", txtServiceAmt.Text)
            command.Parameters.AddWithValue("@pr_AmtBalance", txtServiceAmtBal.Text)
            command.Parameters.AddWithValue("@pr_PortFolioValue", txtPortfolioValueEdit.Text)
            command.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@pr_LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn
            command.ExecuteScalar()

            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAGREEVALUE", Convert.ToDateTime(txtCreatedOn.Text), txtAgreeVal.Text, txtAgreeValueEdit.Text, 0, txtAccountId.Text, "", txtRcno.Text)

            txtAgreeVal.Text = txtAgreeValueEdit.Text
            txtPortfolioValue.Text = txtPortfolioValueEdit.Text
            txtServiceAmt.Text = txtAgreeValueEdit.Text
            txtServiceAmtBal.Text = txtAgreeValueEdit.Text - txtServiceAmtActual.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()

            GridView1.DataSourceID = "SQLDSContract"
            GridView1.DataBind()

            mdlPopupAgreeValue.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "UpdateAgreeValue", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub
    Protected Sub btnPopUpTeamSearch_Load(sender As Object, e As EventArgs) Handles btnPopUpTeamSearch.Load

    End Sub

    Protected Sub btnClient9_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient9.Click
        mdlPopupBillingRemarks.Show()
    End Sub

    Protected Sub btnEditBillingRemarksSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingRemarksSave.Click
        If txtRemarks.Text = txtBillingRemarksEdit.Text Then
            lblAlertBillingRemarks.Text = "NO CHANGES MADE"
            mdlPopupBillingRemarks.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET Remarks = @Remarks, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Remarks", txtBillingRemarksEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''



            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtRemarks.Text = txtBillingRemarksEdit.Text

            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITBILLINGREMARKS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            mdlPopupBillingRemarks.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditBillingRemarksSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnPrintService_Click(sender As Object, e As EventArgs) Handles btnPrintService.Click
        '  InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step1", txtContractNo.Text)

        Dim qry As String = "select a.rcno,a.status,a.recordno,a.schservicedate,a.servicedate,a.schservicetime,a.schservicetimeout,a.notes"
        qry = qry + " from tblservicerecord a where a.contractno='" + txtContractNo.Text + "'"
        SqlDSServicesPrint.SelectCommand = qry
        SqlDSServicesPrint.DataBind()
        grdViewServicesPrint.DataBind()
        '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step2", txtContractNo.Text)
        txtSvcDateFrom.Text = ""
        txtSvcDateTo.Text = ""
        lblAlertServicePrint.Text = ""
        txtPrintContractNo.Text = txtContractNo.Text

        mdlPopupServicesPrint.Show()
    End Sub

    Protected Sub btnPrintServicesPrint_Click(sender As Object, e As EventArgs) Handles btnPrintServicesPrint.Click
        Session.Remove("Services")

        Dim invcheck As String = ""
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewServicesPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewServicesPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectServicesPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblRecNo"), Label).Text() + """")

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            InsertIntoTblWebEventLog("ServicesPrint", invcheck, grdViewServicesPrint.Rows.Count.ToString, txtContractNo.Text)
            Session("Services") = invcheck
            Dim url As String = "RV_ContractServiceSchedule.aspx?Status=Services"
            Dim s As String = "window.open('" & url + "', 'Contract Service Schedule');"
            ClientScript.RegisterStartupScript(Me.GetType(), "script", s, True)
            '   mdlPopupServicesPrint.Hide()

        End If
        mdlPopupServicesPrint.Show()

        '  mdlPopupPrint.Show()
    End Sub

    Protected Sub btnCancelServicesPrint_Click(sender As Object, e As EventArgs) Handles btnCancelServicesPrint.Click
        'mdlPopupServicesPrint.Hide()

        '  mdlPopupNotes.Show()

    End Sub

    Protected Sub chkServicesPrint_CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
        Session.Remove("Services")

        Dim invcheck As String = ""
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewServicesPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewServicesPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectServicesPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblRecNo"), Label).Text() + """")

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            Session("Services") = invcheck
            mdlPopupServicesPrint.Show()

        End If

    End Sub

    Protected Sub btnDiffContGrpYes_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYes.Click
        svcSave()
    End Sub

    Protected Sub btnDiffContGrpNo_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpNo.Click
        'btnSvcSave.Enabled = True
        'btnADD.ForeColor = System.Drawing.Color.Black
        mdlPopupServiceID.Hide()
    End Sub

    Protected Sub btnDiffContGrpYesSchdl_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpYesSchdl.Click
        svcSave()

    End Sub

    Protected Sub btnDiffContGrpNoSchdl_Click(sender As Object, e As EventArgs) Handles btnDiffContGrpNoSchdl.Click
        btnSvcSave.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black
        mdlPopupServiceID.Hide()
    End Sub

    Protected Sub btnTransactions_Click(sender As Object, e As EventArgs) Handles btnTransactions.Click
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO VIEW INVOICES"
            Return
        End If

        Try

            'btnRecalculate_Click(sender, e)

            'txtRecordNoSelected.Text = lblRecordNo.Text

            'SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.appliedbase as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P' and subcode='service' and reftype= '" & txtRecordNoSelected.Text & "' ORDER BY VoucherDate"

            SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  group_concat(tblsalesdetail.Description SEPARATOR '; ') as Description,tblsalesdetail.RefType as Reference, sum(tblsalesdetail.Valuebase) as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P'  and CostCode= '" & txtContractNo.Text & "' Group By tblsalesdetail.InvoiceNumber ORDER BY VoucherDate"



            SqlDSInvoiceDetails.DataBind()
            grdViewInvoiceDetails.DataBind()

            Session.Add("customerfrom", "Service")

            'If grdViewInvoiceDetails.Rows.Count = 0 Then
            'lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS SERVICE"
            'Else
            'lblAlertTransactions.Text = ""
            'End If
            ModalPopupInvoice.Show()
        Catch ex As Exception
            'InsertIntoTblWebEventLog("btnTransactions_Click", ex.Message.ToString, txtContractNo.Text)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnTransactions_Click", ex.Message.ToString, lblContractNo.Text)
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
        ModalPopupInvoice.Show()
    End Sub


    'Start: Rate Schedule


    Private Sub AccessControlRateSchedule()

        '''''''''''''''''''Access Control 
        Try
            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()


                command.CommandType = CommandType.Text
                command.CommandText = "SELECT  x2412SORAdd, x2412SOREdit, x2412SORDelete FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
                command.Connection = conn

                Dim dr As MySqlDataReader = command.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If Not IsDBNull(dt.Rows(0)("x2412SORAdd")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SORAdd")) = False Then
                            Me.btnAddRateSchedule.Enabled = dt.Rows(0)("x2412SORAdd").ToString()
                        End If
                    End If



                    If Not IsDBNull(dt.Rows(0)("x2412SOREdit")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SOREdit")) = False Then
                            Me.btnEditRateSchedule.Enabled = dt.Rows(0)("x2412SOREdit").ToString()
                        End If
                    End If


                    If Not IsDBNull(dt.Rows(0)("x2412SORDelete")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x2412SORDelete")) = False Then
                            Me.btnDeleteRateSchedule.Enabled = dt.Rows(0)("x2412SORDelete").ToString()
                        End If
                    End If
                End If

                If btnAddRateSchedule.Enabled = True Then
                    btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEditRateSchedule.Enabled = True Then
                    btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDeleteRateSchedule.Enabled = True Then
                    btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black
                Else
                    btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray
                End If

                conn.Close()
                conn.Dispose()
                command.Dispose()
                dt.Dispose()
                dr.Close()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION ACCESS CONTROL", ex.Message.ToString, "")
            Exit Sub
        End Try
        '''''''''''''''''''Access Control 
    End Sub

    Private Sub DisableRateScheduleControls()

        btnSaveRateSchedule.Enabled = True
        btnSaveRateSchedule.ForeColor = System.Drawing.Color.Black
        btnCancelRateSchedule.Enabled = True
        btnCancelRateSchedule.ForeColor = System.Drawing.Color.Black
        'AccessControlRateSchedule()

        btnAddRateSchedule.Enabled = False
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        ddlTagetIDRateSchedule.Enabled = True
        txtTargetDescriptionRateSchedule.Enabled = False
        txtPricePerServiceRateSchedule.Enabled = True
        txtDiscountPercentageRateSchedule.Enabled = True
        txtFinalPricePerServiceRateSchedule.Enabled = False

    End Sub


    Private Sub EnableRateScheduleControls()
        btnSaveRateSchedule.Enabled = False
        btnSaveRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnCancelRateSchedule.Enabled = False
        btnCancelRateSchedule.ForeColor = System.Drawing.Color.Gray

        btnAddRateSchedule.Enabled = True
        btnAddRateSchedule.ForeColor = System.Drawing.Color.Black
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        AccessControlRateSchedule()

        'txtNotes.Enabled = False
        ddlTagetIDRateSchedule.Enabled = False
        txtTargetDescriptionRateSchedule.Enabled = False
        txtPricePerServiceRateSchedule.Enabled = False
        txtDiscountPercentageRateSchedule.Enabled = False
        txtFinalPricePerServiceRateSchedule.Enabled = False

    End Sub

    Public Sub MakeRateScheduleNull()
        txtRateScheduleMode.Text = ""
        txtRateScheduleRcNo.Text = ""

        ddlTagetIDRateSchedule.selectedIndex = 0
        txtTargetDescriptionRateSchedule.Text = ""
        txtPricePerServiceRateSchedule.Text = "0.00"
        txtDiscountPercentageRateSchedule.Text = "0.00"
        txtFinalPricePerServiceRateSchedule.Text = "0.00"
    End Sub

    Public RateScheduleRcno As String

    Protected Sub gvRateSchedule_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvRateSchedule.PageIndexChanging
        gvRateSchedule.PageIndex = e.NewPageIndex

        sqlDSRateSchedule.SelectCommand = "SELECT * From tblnotes where keyfield='" + txtContractNo.Text + "'"

        sqlDSRateSchedule.DataBind()
        sqlDSRateSchedule.DataBind()
    End Sub

    Protected Sub btnCancelRateSchedule_Click(sender As Object, e As EventArgs) Handles btnCancelRateSchedule.Click
        MakeRateScheduleNull()
        EnableRateScheduleControls()

        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray

        ddlTagetIDRateSchedule.SelectedIndex = 0
        txtTargetDescriptionRateSchedule.Text = ""
        txtPricePerServiceRateSchedule.Text = "0.00"
        txtDiscountPercentageRateSchedule.Text = "0.00"
        txtFinalPricePerServiceRateSchedule.Text = "0.00"
    End Sub

    Protected Sub btnAddRateSchedule_Click(sender As Object, e As EventArgs) Handles btnAddRateSchedule.Click
        DisableRateScheduleControls()

        MakeRateScheduleNull()
        lblMessage.Text = "ACTION: ADD RATE SCHEDULE"

        txtRateScheduleMode.Text = "Add"
        ddlTagetIDRateSchedule.Focus()
    End Sub

    Protected Sub btnSaveRateSchedule_Click(sender As Object, e As EventArgs) Handles btnSaveRateSchedule.Click
        If String.IsNullOrEmpty(txtPricePerServiceRateSchedule.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER RATE"
            Return
        End If

        If txtRateScheduleMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblrateschedule where ContractNo=@ContractNo and TargetID=@TargetID"
                command1.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command1.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "RATE ALREADY EXISTS FOR THIS TARGET"
                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblrateschedule(ContractNo, TargetID, Descrip1, PricePerService, DiscountPercent, FinalPricePerService,CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@ContractNo, @TargetID,@Descrip1,@PricePerService,@DiscountPercent,@FinalPricePerService,@CreatedOn,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                        command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text.ToUpper)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                        command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)
                        command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text)
                        command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text)
                        command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                        command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    End If

                    command.Connection = conn
                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId

                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: RATE SUCCESSFULLY ADDED"
                    lblAlert.Text = ""
                    command.Dispose()
                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ADD - btnSaveRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()

          

        ElseIf txtRateScheduleMode.Text = "Edit" Then
            If txtRateScheduleRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblrateschedule where ContractNo=@ContractNo and TargetID=@TargetID and rcno<>" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                command2.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                command2.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "RATE ALREADY EXISTS FOR THIS TARGET"
                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblrateschedule SET TargetID=@TargetID,Descrip1 = @Descrip1, PricePerService=@PricePerService,DiscountPercent = @DiscountPercent, FinalPricePerService = @FinalPricePerService, LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                            command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                            command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                            command.Parameters.AddWithValue("@TargetID", ddlTagetIDRateSchedule.Text)
                            command.Parameters.AddWithValue("@Descrip1", txtTargetDescriptionRateSchedule.Text)
                            command.Parameters.AddWithValue("@PricePerService", txtPricePerServiceRateSchedule.Text)
                            command.Parameters.AddWithValue("@DiscountPercent", txtDiscountPercentageRateSchedule.Text)
                            command.Parameters.AddWithValue("@FinalPricePerService", txtFinalPricePerServiceRateSchedule.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                    End If
                    command1.Dispose()
                End If

                txtRateScheduleMode.Text = ""

                conn.Close()
                conn.Dispose()

                command2.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "EDIT - btnSaveRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()

        End If
        sqlDSRateSchedule.SelectCommand = "select * from tblrateschedule where ContractNo = '" + txtContractNo.Text + "'"
        sqlDSRateSchedule.DataBind()
        gvRateSchedule.DataBind()

        txtRateScheduleMode.Text = ""
        btnEditRateSchedule.Enabled = False
        btnEditRateSchedule.ForeColor = System.Drawing.Color.Gray
        btnDeleteRateSchedule.Enabled = False
        btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Gray
    End Sub

    Protected Sub btnEditRateSchedule_Click(sender As Object, e As EventArgs) Handles btnEditRateSchedule.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtRateScheduleRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableRateScheduleControls()
        txtRateScheduleMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT RATE"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub OnRowDataBoundgRateSchedule(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgRateSchedule(sender As Object, e As EventArgs) Handles gvRateSchedule.SelectedIndexChanged
        For Each row As GridViewRow In gvRateSchedule.Rows

            If row.RowIndex = gvRateSchedule.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If
            End If
        Next
    End Sub

    Protected Sub ddlTagetIDRateSchedule_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlTagetIDRateSchedule.SelectedIndexChanged
        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        command1.CommandText = "SELECT descrip1 FROM tblTarget where TargetId= '" & ddlTagetIDRateSchedule.Text & "'"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtTargetDescriptionRateSchedule.Text = dt.Rows(0)("descrip1").ToString
        End If

        command1.Dispose()
        conn.Close()
        conn.Dispose()
    End Sub

    Protected Sub gvRateSchedule_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvRateSchedule.SelectedIndexChanged
        Try
            MakeRateScheduleNull()

            Dim editindex As Integer = gvRateSchedule.SelectedIndex
            rcno = DirectCast(gvRateSchedule.Rows(editindex).FindControl("Label1"), Label).Text
            txtRateScheduleRcNo.Text = rcno.ToString()
            ddlTagetIDRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(1).Text)
            txtTargetDescriptionRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(2).Text)
            txtPricePerServiceRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(3).Text)
            txtDiscountPercentageRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(4).Text)
            txtFinalPricePerServiceRateSchedule.Text = Server.HtmlDecode(gvRateSchedule.SelectedRow.Cells(6).Text)

            'EnableRateScheduleControls()

            btnEditRateSchedule.Enabled = True
            btnEditRateSchedule.ForeColor = System.Drawing.Color.Black
            btnDeleteRateSchedule.Enabled = True
            btnDeleteRateSchedule.ForeColor = System.Drawing.Color.Black

            AccessControlRateSchedule()
            'AccessControl()
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "gvNotesMaster_SelectedIndexChanged", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnDeleteRateSchedule_Click1(sender As Object, e As EventArgs) Handles btnDeleteRateSchedule.Click
        lblMessage.Text = ""
        If txtRateScheduleRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE RATE SCHEDULE"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblrateschedule where rcno=" & Convert.ToInt32(txtRateScheduleRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnDeleteRateSchedule_Click", ex.Message.ToString, "")
                Exit Sub
            End Try
            EnableRateScheduleControls()

            sqlDSRateSchedule.SelectCommand = "select * from tblrateschedule where ContractNo = '" + txtContractNo.Text + "'"
            sqlDSRateSchedule.DataBind()

            gvRateSchedule.DataBind()
            MakeRateScheduleNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub

    'End: Rate Schedule

    Protected Sub ddlStatusChSt_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlStatusChSt.SelectedIndexChanged
        If Left(ddlStatusChSt.Text, 1) = "T" Then
            lblActualEnd.Text = "Actual End"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = True
            Label62.Visible = True
            ddlTerminationCode.Visible = True

            lblCommetsChSt.Visible = True
            txtCommentChSt.Visible = True
            Label66.Visible = True


            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False

            txtOnHoldDscriptionChSt.Visible = False
            txtOnHoldCommentsChSt.Visible = False

        ElseIf Left(ddlStatusChSt.Text, 1) = "R" Then
            lblActualEnd.Text = "Actual End"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = True
            Label62.Visible = True
            ddlTerminationCode.Visible = True

            lblCommetsChSt.Visible = True
            txtCommentChSt.Visible = True
            Label66.Visible = True


            lblOnHoldCode.Visible = False
            ddlOnHoldCodeChSt.Visible = False
            lblOnHoldDescription.Visible = False
            txtOnHoldDscriptionChSt.Visible = False
            lblOnHoldComments.Visible = False
            txtOnHoldCommentsChSt.Visible = False
            Label67.Visible = False
            Label68.Visible = False

            txtOnHoldDscriptionChSt.Visible = False
            txtOnHoldCommentsChSt.Visible = False
        ElseIf Left(ddlStatusChSt.Text, 1) = "H" Then

            lblActualEnd.Text = "OnHold Date"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = False
            Label62.Visible = False
            ddlTerminationCode.Visible = False

            lblCommetsChSt.Visible = False
            txtCommentChSt.Visible = False
            Label66.Visible = False

            lblOnHoldCode.Visible = True
            ddlOnHoldCodeChSt.Visible = True
            lblOnHoldDescription.Visible = True
            txtOnHoldDscriptionChSt.Visible = True
            lblOnHoldComments.Visible = True
            txtOnHoldCommentsChSt.Visible = True

            ddlOnHoldCodeChSt.Enabled = True
            txtOnHoldCommentsChSt.Enabled = True
            Label67.Visible = True
            Label68.Visible = True
        ElseIf Left(ddlStatusChSt.Text, 1) = "O" Then

            lblActualEnd.Text = "Resume Date"

            lblActualEnd.Visible = True
            txtActualEndChSt.Visible = True

            lblTermCode.Visible = False
            Label62.Visible = False
            ddlTerminationCode.Visible = False

            lblCommetsChSt.Visible = False
            txtCommentChSt.Visible = False
            Label66.Visible = False

            If txtStatus.Text = "H" Then

                lblOnHoldCode.Visible = False
                ddlOnHoldCodeChSt.Visible = False
                lblOnHoldDescription.Visible = False
                txtOnHoldDscriptionChSt.Visible = False
                lblOnHoldComments.Visible = False
                txtOnHoldCommentsChSt.Visible = False

                ddlOnHoldCodeChSt.Enabled = True
                txtOnHoldCommentsChSt.Enabled = True
                Label67.Visible = False
                Label68.Visible = False
            Else
                lblOnHoldCode.Visible = False
                ddlOnHoldCodeChSt.Visible = False
                lblOnHoldDescription.Visible = False
                txtOnHoldDscriptionChSt.Visible = False
                lblOnHoldComments.Visible = False
                txtOnHoldCommentsChSt.Visible = False
            End If

            End If
        'lblActualEnd.Visible = True
        'txtActualEndChSt.Visible = True
        'Label29.Visible = True


        'lblTermCode.Visible = True
        'Label62.Visible = True
        'ddlTerminationCode.Visible = True

        'lblCommetsChSt.Visible = True
        'txtCommentChSt.Visible = True
        'Label66.Visible = False

        'lblOnHoldCode.Visible = False
        'ddlOnHoldCodeChSt.Visible = False
        'lblOnHoldDescription.Visible = False
        'txtOnHoldDscriptionChSt.Visible = False
        'lblOnHoldComments.Visible = False
        'txtOnHoldCommentsChSt.Visible = False
        'Label67.Visible = False
        'Label68.Visible = False


            '''''''''''''''''
            'ModalPopupExtender5.Show()
            ModalPopupExtender5.Show()
    End Sub


    Private Sub FindIsContractValueAllowEdit()
        Dim sqlstr As String
        sqlstr = ""

        Try

            sqlstr = "SELECT ContractValueAllowEdit FROM tblcontractgroup where ContractGroup = '" & ddlContractGrp.Text & "'"


            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then

                If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEdit"))) = False Then
                    If Convert.ToBoolean(dt.Rows(0)("ContractValueAllowEdit")) = False Then
                        btnClient8.Visible = False
                    End If
                End If

                'If dt.Rows(0)("ContractValueAllowEdit").ToString = "1" Then

                'Else
                '    chkInactive.Checked = False
                'End If

            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "FUNCTION FindIsInActiveCustomer", ex.Message.ToString, sqlstr)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnEditAgreeValueSaveYes_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueSaveYes.Click
        UpdateAgreeValue()
        mdlPopupAgreeValue.Hide()
    End Sub

    Protected Sub btnEditAgreeValueNoChange_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueNoChange.Click
        mdlEditAgreeValueSaveNoChange.Hide()
        mdlPopupAgreeValue.Show()
       
    End Sub

    Protected Sub btnEditAgreeValueSaveNo_Click(sender As Object, e As EventArgs) Handles btnEditAgreeValueSaveNo.Click
        txtAgreeValueEdit.Text = txtAgreeVal.Text
        mdlEditAgreeValueSave.Hide()
        mdlPopupAgreeValue.Hide()
    End Sub

    Protected Sub BtnChStClose_Click(sender As Object, e As EventArgs) Handles BtnChStClose.Click
        ModalPopupExtender5.Hide()
        lblMessage.Text = ""
        txtIsPopupChSt.Text = ""
    End Sub


    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try


            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlertSchDate.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            'MakeMeNull()
            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno
            'RetrieveData()

            GridView1.SelectedIndex = rowindex1

            'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
            'txtRcno.Text = ""

            'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
            'txtRcno.Text = rcno.ToString()

            lblMessage.Text = ""
            'lblAlertSchDate.Text = ""
            lblAlert.Text = ""
            'txtGridIndex.Text = rowindex1.ToString

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")

        End Try

    End Sub

    Protected Sub btnAutoRenew_Click(sender As Object, e As ImageClickEventArgs) Handles btnAutoRenew.Click
        chkAutoRenewEdit.Text = chkAutoRenew.Text
        'txtYourReferenceEdit.Text = txtYourRef.Text
        'txtPONoEdit.Text = txtPONo.Text

        mdlPopupAutoRenewalEdit.Show()
    End Sub

    Protected Sub btnEditAutoRenewalSave_Click(sender As Object, e As EventArgs) Handles btnEditAutoRenewalSave.Click
        If chkAutoRenew.Checked = chkAutoRenewEdit.Checked Then
            lblAlertAutoRenewal.Text = "NO CHANGES MADE"
            mdlPopupAutoRenewalEdit.Show()
            Return

        End If

        Try

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            command.CommandText = "UPDATE tblContract SET AutoRenew = @AutoRenew, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@AutoRenew", chkAutoRenewEdit.Text)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            command.Connection = conn

            command.ExecuteNonQuery()

            '''''''''''''''''''''''''
            ''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command.Dispose()

            chkAutoRenew.Checked = chkAutoRenewEdit.Checked
            SQLDSContract.SelectCommand = txt.Text
            SQLDSContract.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITAUTORENEWAL", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)

            mdlPopupAutoRenewalEdit.Hide()
            'mdlPopupScheduler.Hide()
        Catch ex As Exception
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnEditAutoRenewalSave_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub grdViewInvoiceDetails_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdViewInvoiceDetails.PageIndexChanging
        Try
            grdViewInvoiceDetails.PageIndex = e.NewPageIndex

            SqlDSInvoiceDetails.SelectCommand = "SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsales.salesdate as VoucherDate,  tblsalesdetail.Description as Description,tblsalesdetail.RefType as Reference,tblsalesdetail.Valuebase as Amount,if(doctype ='ARIN','INVOICE', 'CN') as Type, if(doctype ='ARIN','INVOICE', if(doctype ='ARCN','CN',if(doctype ='ARDN','DN',''))) as DocType, tblsales.Poststatus as Status FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and PostStatus = 'P'  and CostCode= '" & txtContractNo.Text & "' ORDER BY VoucherDate"
            SqlDSInvoiceDetails.DataBind()
            grdViewInvoiceDetails.DataBind()

            ModalPopupInvoice.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "grdViewInvoiceDetails_PageIndexChanging", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try

    End Sub

    Protected Sub btnExtendContractEndDate_Click(sender As Object, e As ImageClickEventArgs) Handles btnExtendContractEndDate.Click
        Try
            txtEditEndDate.Text = ""
            txtAlertExtendContract.Text = ""

            txtContractNotesEdit.Text = txtContractNotes.Text.Trim

            txtEndDate.Text = txtContractEnd.Text
            mdlPopupExtendContract.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnExtendContractEndDate_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub


    Protected Sub btnConfirmExtendContract_Click(sender As Object, e As EventArgs) Handles btnConfirmExtendContract.Click
        Try
            txtAlertExtendContract.Text = ""

            If String.IsNullOrEmpty(txtEditEndDate.Text.Trim) = True Then
                txtAlertExtendContract.Text = "Extension Date cannot be blank"
                mdlPopupExtendContract.Show()
                Exit Sub
            End If


            If txtEndDate.Text.Trim = txtEditEndDate.Text.Trim And txtContractNotes.Text.Trim = txtContractNotesEdit.Text.Trim Then
                txtAlertExtendContract.Text = "No Change has been made in Contract End Date or Contract Note"
                mdlPopupExtendContract.Show()
                Exit Sub
            End If


            If Convert.ToDateTime(txtEditEndDate.Text.Trim) < DateTime.Today Then
                txtAlertExtendContract.Text = "End Date should not be Past Date"
                mdlPopupExtendContract.Show()
            Else
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                ''If txtContractStart.Text = "" Then
                ''    command.Parameters.AddWithValue("@StartDate", DBNull.Value)
                ''Else
                ''    command.Parameters.AddWithValue("@StartDate", Convert.ToDateTime(txtContractStart.Text).ToString("yyyy-MM-dd"))
                ''End If


                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVCONT", txtContractNo.Text, "EDITNOTES-BEFORE UPDATE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, txtContractNotes.Text, txtRcno.Text)

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "UPDATE tblContract SET Notes = @Notes, Status = 'O', ActualEnd = @ActualEnd, EndDate = @EndDate, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn where rcno=" & Convert.ToInt32(txtRcno.Text)
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@ActualEnd", DBNull.Value)
                command.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtEditEndDate.Text).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@Notes", txtContractNotesEdit.Text.Trim)

                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                command.Connection = conn

                command.ExecuteNonQuery()



                '''''''''''''''''''''''''
                ''''''''''''''''''''''

                command.Dispose()

                ''''''''

                Dim commandEventLog As MySqlCommand = New MySqlCommand

                commandEventLog.CommandType = CommandType.Text
                commandEventLog.CommandText = "INSERT INTO tblEventLog (StaffId, DocRef, Module, LogDate, CustCode, Action, Comments) VALUES(@LastModifiedBy, @DocRef, @Module, @LastModifiedOn, @AccountId, @Action, @Comments)"
                commandEventLog.Parameters.Clear()

                'commandEventLog.Parameters.AddWithValue("@ActualEnd", txtEndDate.Text)
                'commandEventLog.Parameters.AddWithValue("@EndDate", Convert.ToDateTime(txtEditEndDate.Text).ToString("yyyy-MM-dd"))
                commandEventLog.Parameters.AddWithValue("@Accountid", txtAccountId.Text)
                commandEventLog.Parameters.AddWithValue("@Module", "SERVCONT")
                commandEventLog.Parameters.AddWithValue("@Action", "EXTENSION ; EDITNOTES-AFTER UPDATE")
                commandEventLog.Parameters.AddWithValue("@DocRef", txtContractNo.Text)
                commandEventLog.Parameters.AddWithValue("@Comments", "Original End Date: " & txtEndDate.Text & "; Actual End: " & txtActualEnd.Text & "; Extended Until: " & txtEditEndDate.Text & " ; Notes : " & txtContractNotesEdit.Text.Trim)
                commandEventLog.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                commandEventLog.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                commandEventLog.Connection = conn

                commandEventLog.ExecuteNonQuery()

                txtContractEnd.Text = txtEditEndDate.Text
                txtActualEnd.Text = ""

                '''''''''''''''''''''''''
                ''''''''''''''''''''''
                conn.Close()
                conn.Dispose()
                command.Dispose()
                commandEventLog.Dispose()


                '''''''

                txtStatus.Text = "O"
                txtContractEnd.Text = txtEditEndDate.Text
                txtActualEnd.Text = ""
                txtContractNotes.Text = txtContractNotesEdit.Text.Trim

                SQLDSContract.SelectCommand = txt.Text
                GridView1.DataSourceID = "SqlDSContract"
                GridView1.DataBind()
                'GridView1.DataBind()
            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnConfirmExtendContract_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub txtActualEnd_TextChanged(sender As Object, e As EventArgs) Handles txtActualEnd.TextChanged

    End Sub

    Protected Sub btnSearchDatePrint_Click(sender As Object, e As EventArgs) Handles btnSearchDatePrint.Click
        Try
            lblAlertServicePrint.Text = ""

            Dim qry As String = "select a.rcno,a.status,a.recordno,a.schservicedate,a.servicedate,a.schservicetime,a.schservicetimeout,a.notes"
            qry = qry + " from tblservicerecord a where a.contractno='" + txtPrintContractNo.Text + "'"

            If String.IsNullOrEmpty(txtSvcDateFrom.Text) = False Then
                Dim d As DateTime
                If Date.TryParseExact(txtSvcDateFrom.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then

                Else
                    '  MessageBox.Message.Alert(Page, "Invoice Date From is invalid", "str")
                    lblAlertServicePrint.Text = "INVALID SERVICE FROM DATE"
                    mdlPopupServicesPrint.Show()
                    Return
                End If
                qry = qry + " and a.servicedate>= '" + Convert.ToDateTime(txtSvcDateFrom.Text).ToString("yyyy-MM-dd") + "'"

            Else
                lblAlertServicePrint.Text = "ENTER SERVICE FROM DATE"
                mdlPopupServicesPrint.Show()
                Return

            End If

            If String.IsNullOrEmpty(txtSvcDateTo.Text) = False Then
                Dim d As DateTime
                If Date.TryParseExact(txtSvcDateTo.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then

                Else
                    lblAlertServicePrint.Text = "INVALID SERVICE TO DATE"
                    mdlPopupServicesPrint.Show()
                    Return
                End If
                qry = qry + " and a.servicedate <= '" + Convert.ToDateTime(txtSvcDateTo.Text).ToString("yyyy-MM-dd") + "'"

            Else
                lblAlertServicePrint.Text = "ENTER SERVICE TO DATE"
                mdlPopupServicesPrint.Show()
                Return
            End If

            SqlDSServicesPrint.SelectCommand = qry
            SqlDSServicesPrint.DataBind()
            grdViewServicesPrint.DataBind()
            '    InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnPrintService_Click", "Step2", txtContractNo.Text)
            '   lblAlertServicePrint.Text = qry

            mdlPopupServicesPrint.Show()
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "btnSearchDatePrint_Click", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

    Protected Sub ddlOnHoldCodeChSt_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlOnHoldCodeChSt.SelectedIndexChanged
        Try
            If ddlOnHoldCodeChSt.SelectedIndex > 0 Then
                Dim hyphenpos As Integer
                hyphenpos = 0
                hyphenpos = (ddlOnHoldCodeChSt.Text.IndexOf(":"))

                Dim OnHoldCode As String
                OnHoldCode = Left(ddlOnHoldCodeChSt.Text, (hyphenpos - 1))
                txtOnHoldDscriptionChSt.Text = Right(ddlOnHoldCodeChSt.Text, Len(ddlOnHoldCodeChSt.Text) - (Len(OnHoldCode.Trim) + 3))
                ModalPopupExtender5.Show()

                ddlOnHoldCodeChSt.Enabled = True
                txtOnHoldCommentsChSt.Enabled = True
                'ddlOnHoldCodeChSt.Attributes.Remove("disabled")
                'txtOnHoldCommentsChSt.Attributes.Remove("disabled")

                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> statuschange();</Script>", False)

            End If
        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "ddlOnHoldCodeChSt_SelectedIndexChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try
    End Sub

  
    Protected Sub txtActualEndChSt_TextChanged(sender As Object, e As EventArgs) Handles txtActualEndChSt.TextChanged
        Try

            If txtIsPopupChSt.Text = "ContractNo" Then
                txtAlertStatus.Text = ""

                'If Left(ddlStatusChSt.Text, 1) <> "O" Then
                '    If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) Then
                '        txtAlertStatus.Visible = True
                '        txtAlertStatus.Text = "Please Select Actual End Date"
                '        ModalPopupExtender5.Show()
                '        Exit Sub
                '    End If
                'End If

                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractStart.Text.Trim) Then
                        txtAlertStatus.Visible = True
                        txtAlertStatus.Text = "Selected Date cannot be earlier than Contract Start Date " & txtContractStart.Text
                        ModalPopupExtender5.Show()
                        Exit Sub
                    End If
                End If


                'If txtStatus.Text = "E" And String.IsNullOrEmpty(txtActualEnd.Text.Trim) = False Then
                '    GoTo bypassenddatevalidation
                'End If
                'Else

                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                        If Convert.ToDateTime(txtActualEndChSt.Text.Trim) > Convert.ToDateTime(txtContractEnd.Text.Trim) Then
                            txtAlertStatus.Visible = True
                            txtAlertStatus.Text = "Selected Date cannot be later than Contract End Date " & txtContractEnd.Text
                            ModalPopupExtender5.Show()
                            Exit Sub
                        End If
                    End If
                End If


                'If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < DateTime.Today Then  '1
                If String.IsNullOrEmpty(txtActualEndChSt.Text.Trim) = False Then
                    If String.IsNullOrEmpty(txtContractEnd.Text.Trim) = False Then

                        If Convert.ToDateTime(txtActualEndChSt.Text.Trim) < Convert.ToDateTime(txtContractEnd.Text.Trim) Then  '1
                            FindBackDateContractTermination()
                            If txtBackDateContractTerminationSetup.Text = False Then                       '2
                                txtAlertStatus.Visible = True
                                txtAlertStatus.Text = "Contract Group [" & ddlContractGrp.Text & "] does not allow back-dated Contract termination."
                                ModalPopupExtender5.Show()
                                'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            Else
                                If txtBackDateContractTermination.Text = True Then   '3
                                    'GoTo proceedcontracttermination
                                ElseIf txtBackDateContractTermination.Text = False Then

                                    If txtBackDateContractTerminationSameMonthOnly.Text = False Then  '4
                                        txtAlertStatus.Visible = True
                                        txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                                        ModalPopupExtender5.Show()

                                        Exit Sub
                                    ElseIf txtBackDateContractTerminationSameMonthOnly.Text = True Then
                                        If DateTime.Now.ToString("MMMM") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("MMMM") And DateTime.Now.ToString("YYYY") = Convert.ToDateTime(txtActualEndChSt.Text).ToString("YYYY") Then  '5
                                        Else
                                            txtAlertStatus.Visible = True
                                            txtAlertStatus.Text = "This user account is not allowed to enter back dated Contract termination"
                                            ModalPopupExtender5.Show()

                                            Exit Sub
                                        End If '5
                                    End If '4
                                End If  '3
                            End If  '2
                        End If      '1
                    End If
                End If

            End If


        Catch ex As Exception
            'MessageBox.Message.Alert(Page, "Error!!! " + ex.Message.ToString, "str")
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("CONTRACT - " + Session("UserID"), "txtActualEndChSt_TextChanged", ex.Message.ToString, txtContractNo.Text)
            'Exit Function
        End Try


    End Sub
End Class
